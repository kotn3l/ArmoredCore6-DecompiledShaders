#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1202;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _236 = uint(roundEven(NORMAL.w)) * 13u;
    uint _242 = _236 + 1u;
    uint _246 = _236 + 2u;
    float _255 = sqrt(((cbInstanceData._m0[_242].x * cbInstanceData._m0[_242].x) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x)) + (cbInstanceData._m0[_246].x * cbInstanceData._m0[_246].x));
    float _256 = _255 * TEXCOORD.z;
    float _257 = _255 * TEXCOORD.w;
    vec4 _277 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _283 = _277.x * cbMtdParam._m0[11u].x;
    float _284 = _277.y * cbMtdParam._m0[11u].y;
    float _285 = _277.z * cbMtdParam._m0[11u].z;
    vec4 _304 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _256) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _257) + cbTextureTilingScale._m0[5u].w));
    vec4 _343 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _345 = _343.x;
    float _355 = dot(vec4(_345, _343.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _372 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_345 - _355) * cbMtdParam._m0[24u].x) + _355) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3505 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _373 = isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0));
    float _380 = (_373 * ((_304.x * cbMtdParam._m0[12u].x) - _283)) + _283;
    float _381 = (_373 * ((_304.y * cbMtdParam._m0[12u].y) - _284)) + _284;
    float _382 = (_373 * ((_304.z * cbMtdParam._m0[12u].z) - _285)) + _285;
    vec4 _399 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _256) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _257) + cbTextureTilingScale._m0[3u].w));
    vec4 _419 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _421 = _419.x;
    float _431 = dot(vec4(_421, _419.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _445 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_421 - _431) * cbMtdParam._m0[24u].x) + _431) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3516 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _446 = isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0));
    float _453 = (_446 * ((_399.x * cbMtdParam._m0[13u].x) - _380)) + _380;
    float _454 = (_446 * ((_399.y * cbMtdParam._m0[13u].y) - _381)) + _381;
    float _455 = (_446 * ((_399.z * cbMtdParam._m0[13u].z) - _382)) + _382;
    vec4 _474 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _256) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _257) + cbTextureTilingScale._m0[14u].w));
    vec4 _494 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _256) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _257) + cbTextureTilingScale._m0[4u].w));
    vec4 _511 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _513 = _511.x;
    float _514 = _511.y;
    float _515 = _511.z;
    float _522 = ((_494.x - _513) * _373) + _513;
    float _523 = ((_494.y - _514) * _373) + _514;
    float _524 = ((_494.z - _515) * _373) + _515;
    vec4 _536 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _256) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _257) + cbTextureTilingScale._m0[2u].w));
    float _549 = ((_536.z - _524) * _446) + _524;
    float _552 = ((((_536.x - _522) * _446) + _522) * 2.0) + (-1.0);
    float _554 = ((((_536.y - _523) * _446) + _523) * 2.0) + (-1.0);
    float _555 = dot(vec2(_552, _554), vec2(_552, _554));
    float _3527 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _560 = sqrt(1.0 - (isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0))));
    vec4 _573 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _591 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _256) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _257) + cbTextureTilingScale._m0[11u].w));
    float _593 = _591.x;
    float _594 = 1.0 - _593;
    float _607 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_593 - _594) * cbMtdParam._m0[24u].z) + _594) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3538 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _608 = isnan(1.0) ? _3538 : (isnan(_3538) ? 1.0 : min(_3538, 1.0));
    float _615 = (_608 * ((_474.x * cbMtdParam._m0[18u].x) - _453)) + _453;
    float _616 = (_608 * ((_474.y * cbMtdParam._m0[18u].y) - _454)) + _454;
    float _617 = (_608 * ((_474.z * cbMtdParam._m0[18u].z) - _455)) + _455;
    vec4 _630 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _256) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _257) + cbTextureTilingScale._m0[15u].w));
    float _637 = (_630.x * 2.0) + (-1.0);
    float _638 = (_630.y * 2.0) + (-1.0);
    float _639 = dot(vec2(_637, _638), vec2(_637, _638));
    float _3549 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _647 = (_608 * (_630.z - _549)) + _549;
    float _659 = (((_637 - _552) + (cbMtdParam._m0[21u].x * _552)) * _608) + _552;
    float _660 = (((_638 - _554) + (cbMtdParam._m0[21u].x * _554)) * _608) + _554;
    float _661 = (_608 * (sqrt(1.0 - (isnan(1.0) ? _3549 : (isnan(_3549) ? 1.0 : min(_3549, 1.0)))) - _560)) + _560;
    float _666 = cbMtdParam._m0[22u].x + _573.w;
    float _669 = fma(_661, _223 * NORMAL.x, fma(_660, _230 * TANGENT.x, (_216 * _208) * _659));
    float _672 = fma(_661, _223 * NORMAL.y, fma(_660, _230 * TANGENT.y, (_216 * _209) * _659));
    float _675 = fma(_661, _223 * NORMAL.z, fma(_660, _230 * TANGENT.z, (_216 * _210) * _659));
    float _679 = inversesqrt(dot(vec3(_669, _672, _675), vec3(_669, _672, _675)));
    float _680 = _679 * _669;
    float _681 = _679 * _672;
    float _682 = _679 * _675;
    float _3560 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _683 = isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0));
    float _3571 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _3582 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _3593 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _3604 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _701 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _743 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _753 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _743);
    float _754 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _743);
    float _755 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _743);
    float _759 = inversesqrt(dot(vec3(_753, _754, _755), vec3(_753, _754, _755)));
    float _760 = _753 * _759;
    float _761 = _754 * _759;
    float _762 = _755 * _759;
    float _768 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _769 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _787 = fma(_682, cbSceneParam._m0[5u].z, fma(_681, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _680));
    float _790 = fma(_682, cbSceneParam._m0[6u].z, fma(_681, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _680));
    float _793 = fma(_682, cbSceneParam._m0[7u].z, fma(_681, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _680));
    uint _807 = (_236 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _813 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0)))) * cbInstanceData._m0[_807].x;
    float _814 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0)))) * cbInstanceData._m0[_807].y;
    float _815 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0)))) * cbInstanceData._m0[_807].z;
    float _3615 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _816 = isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0));
    float _3626 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _817 = isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0));
    float _3637 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _818 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
    vec4 _827 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _768, cbSceneParam._m0[86u].y * _769));
    float _831 = ((isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0))) * TEXCOORD_5.w) * _827.x;
    float _832 = dot(vec3(_680, _681, _682), vec3(_760, _761, _762));
    float _835 = _832 * 2.0;
    float _839 = (_835 * _680) - _760;
    float _840 = (_835 * _681) - _761;
    float _841 = (_835 * _682) - _762;
    float _845 = abs(dot(vec3(_760, _761, _762), vec3(_680, _681, _682)));
    float _3648 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _847 = sqrt(_683);
    float _860 = exp2((_847 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_847 * 3.0));
    float _892 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _896 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _900 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1201;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _926 = fma(_900, cbModelParam._m0[26u].z, fma(_896, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _892));
        float _930 = fma(_900, cbModelParam._m0[27u].z, fma(_896, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _892));
        float _934 = fma(_900, cbModelParam._m0[28u].z, fma(_896, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _892));
        float _959 = _892 + _680;
        float _960 = _896 + _681;
        float _961 = _900 + _682;
        float _971 = fma(_961, cbModelParam._m0[26u].z, fma(_960, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _959)) - _926;
        float _972 = fma(_961, cbModelParam._m0[27u].z, fma(_960, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _959)) - _930;
        float _973 = fma(_961, cbModelParam._m0[28u].z, fma(_960, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _959)) - _934;
        float _977 = inversesqrt(dot(vec3(_971, _972, _973), vec3(_971, _972, _973)));
        float _990 = ((_977 * _971) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_926 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _991 = ((_977 * _972) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_930 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _992 = ((_977 * _973) / cbModelParam._m0[34u].z) + ((((((_934 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _995 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1002 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1009 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        float _1029 = exp2((_995.w + (-0.5)) * 20.0) * 2.0;
        float _1030 = _1029 * (_995.x + (-0.5));
        float _1031 = _1029 * (_995.y + (-0.5));
        float _1032 = _1029 * (_995.z + (-0.5));
        float _1039 = exp2((_1002.w + (-0.5)) * 20.0) * 2.0;
        float _1040 = _1039 * (_1002.x + (-0.5));
        float _1041 = _1039 * (_1002.y + (-0.5));
        float _1042 = _1039 * (_1002.z + (-0.5));
        float _1049 = exp2((_1009.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1009.x + (-0.5));
        float _1051 = _1049 * (_1009.y + (-0.5));
        float _1052 = _1049 * (_1009.z + (-0.5));
        float _1059 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1016.x + (-0.5));
        float _1061 = _1059 * (_1016.y + (-0.5));
        float _1062 = _1059 * (_1016.z + (-0.5));
        float _1063 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
        float _1064 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1065 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1066 = _1030 * 0.5;
        float _1067 = _1040 * 0.5;
        float _1068 = _1050 * 0.5;
        float _1069 = dot(vec3(_1066, _1067, _1068), vec3(_1066, _1067, _1068));
        float _1074 = (_1069 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1069);
        float _1083 = (dot(vec3(_680, _681, _682), vec3(_1074 * _1066, _1074 * _1067, _1074 * _1068)) + 1.0) * 0.5;
        float _3674 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1093 = sqrt(((_1067 * _1067) + (_1066 * _1066)) + (_1068 * _1068)) / (_1063 + 9.9999997473787516355514526367188e-06);
        float _3685 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1094 = isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0));
        float _1095 = _1094 * 2.0;
        float _1099 = (1.0 - _1094) / (_1094 + 1.0);
        float _3696 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1100 = isnan(1.0) ? _3696 : (isnan(_3696) ? 1.0 : min(_3696, 1.0));
        float _1109 = ((((1.0 - _1100) * (_1095 + 2.0)) * exp2(log2(isnan(1.0) ? _3674 : (isnan(_3674) ? 1.0 : min(_3674, 1.0))) * (_1095 + 1.0))) + _1100) * _1063;
        float _1110 = _1031 * 0.5;
        float _1111 = _1041 * 0.5;
        float _1112 = _1051 * 0.5;
        float _1113 = dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112));
        float _1118 = (_1113 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1113);
        float _1126 = (dot(vec3(_680, _681, _682), vec3(_1118 * _1110, _1118 * _1111, _1118 * _1112)) + 1.0) * 0.5;
        float _3707 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1135 = sqrt(((_1111 * _1111) + (_1110 * _1110)) + (_1112 * _1112)) / (_1064 + 9.9999997473787516355514526367188e-06);
        float _3718 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1136 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
        float _1137 = _1136 * 2.0;
        float _1141 = (1.0 - _1136) / (_1136 + 1.0);
        float _3729 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0));
        float _1151 = ((((1.0 - _1142) * (_1137 + 2.0)) * exp2(log2(isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0))) * (_1137 + 1.0))) + _1142) * _1064;
        float _1152 = _1032 * 0.5;
        float _1153 = _1042 * 0.5;
        float _1154 = _1052 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1168 = (dot(vec3(_680, _681, _682), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _3740 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1177 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1065 + 9.9999997473787516355514526367188e-06);
        float _3751 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
        float _1179 = _1178 * 2.0;
        float _1183 = (1.0 - _1178) / (_1178 + 1.0);
        float _3762 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0));
        float _1193 = ((((1.0 - _1184) * (_1179 + 2.0)) * exp2(log2(isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0))) * (_1179 + 1.0))) + _1184) * _1065;
        _1201 = _1032;
        _1203 = _1031;
        _1204 = _1030;
        _1205 = _1042;
        _1206 = _1041;
        _1207 = _1040;
        _1208 = _1052;
        _1209 = _1051;
        _1210 = _1050;
        _1211 = _1065;
        _1212 = _1064;
        _1213 = _1063;
        _1214 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0)));
        _1215 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)));
        _1216 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0)));
    }
    else
    {
        _1201 = _1202;
        _1203 = _1202;
        _1204 = _1202;
        _1205 = _1202;
        _1206 = _1202;
        _1207 = _1202;
        _1208 = _1202;
        _1209 = _1202;
        _1210 = _1202;
        _1211 = _1202;
        _1212 = _1202;
        _1213 = _1202;
        _1214 = 0.0;
        _1215 = 0.0;
        _1216 = 0.0;
    }
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1240 = fma(_900, cbModelParam._m0[30u].z, fma(_896, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _892));
        float _1244 = fma(_900, cbModelParam._m0[31u].z, fma(_896, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _892));
        float _1248 = fma(_900, cbModelParam._m0[32u].z, fma(_896, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _892));
        float _1271 = _892 + _680;
        float _1272 = _896 + _681;
        float _1273 = _900 + _682;
        float _1283 = fma(_1273, cbModelParam._m0[30u].z, fma(_1272, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1271)) - _1240;
        float _1284 = fma(_1273, cbModelParam._m0[31u].z, fma(_1272, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1271)) - _1244;
        float _1285 = fma(_1273, cbModelParam._m0[32u].z, fma(_1272, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1271)) - _1248;
        float _1289 = inversesqrt(dot(vec3(_1283, _1284, _1285), vec3(_1283, _1284, _1285)));
        float _1302 = ((_1289 * _1283) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1240 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1303 = ((_1289 * _1284) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1244 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1304 = ((_1289 * _1285) / cbModelParam._m0[35u].z) + ((((((_1248 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1306 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1313 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1320 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        float _1339 = exp2((_1306.w + (-0.5)) * 20.0) * 2.0;
        float _1340 = _1339 * (_1306.x + (-0.5));
        float _1341 = _1339 * (_1306.y + (-0.5));
        float _1342 = _1339 * (_1306.z + (-0.5));
        float _1349 = exp2((_1313.w + (-0.5)) * 20.0) * 2.0;
        float _1350 = _1349 * (_1313.x + (-0.5));
        float _1351 = _1349 * (_1313.y + (-0.5));
        float _1352 = _1349 * (_1313.z + (-0.5));
        float _1359 = exp2((_1320.w + (-0.5)) * 20.0) * 2.0;
        float _1360 = _1359 * (_1320.x + (-0.5));
        float _1361 = _1359 * (_1320.y + (-0.5));
        float _1362 = _1359 * (_1320.z + (-0.5));
        float _1369 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1327.x + (-0.5));
        float _1371 = _1369 * (_1327.y + (-0.5));
        float _1372 = _1369 * (_1327.z + (-0.5));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1375 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1376 = _1340 * 0.5;
        float _1377 = _1350 * 0.5;
        float _1378 = _1360 * 0.5;
        float _1379 = dot(vec3(_1376, _1377, _1378), vec3(_1376, _1377, _1378));
        float _1384 = (_1379 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1379);
        float _1392 = (dot(vec3(_680, _681, _682), vec3(_1384 * _1376, _1384 * _1377, _1384 * _1378)) + 1.0) * 0.5;
        float _3803 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1401 = sqrt(((_1377 * _1377) + (_1376 * _1376)) + (_1378 * _1378)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _3814 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0));
        float _1403 = _1402 * 2.0;
        float _1407 = (1.0 - _1402) / (_1402 + 1.0);
        float _3825 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0));
        float _1417 = ((((1.0 - _1408) * (_1403 + 2.0)) * exp2(log2(isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) * (_1403 + 1.0))) + _1408) * _1373;
        float _1418 = _1341 * 0.5;
        float _1419 = _1351 * 0.5;
        float _1420 = _1361 * 0.5;
        float _1421 = dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420));
        float _1426 = (_1421 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1421);
        float _1434 = (dot(vec3(_680, _681, _682), vec3(_1426 * _1418, _1426 * _1419, _1426 * _1420)) + 1.0) * 0.5;
        float _3836 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1443 = sqrt(((_1419 * _1419) + (_1418 * _1418)) + (_1420 * _1420)) / (_1374 + 9.9999997473787516355514526367188e-06);
        float _3847 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
        float _1445 = _1444 * 2.0;
        float _1449 = (1.0 - _1444) / (_1444 + 1.0);
        float _3858 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
        float _1459 = ((((1.0 - _1450) * (_1445 + 2.0)) * exp2(log2(isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0))) * (_1445 + 1.0))) + _1450) * _1374;
        float _1460 = _1342 * 0.5;
        float _1461 = _1352 * 0.5;
        float _1462 = _1362 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1476 = (dot(vec3(_680, _681, _682), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _3869 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1485 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1375 + 9.9999997473787516355514526367188e-06);
        float _3880 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1486 = isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0));
        float _1487 = _1486 * 2.0;
        float _1491 = (1.0 - _1486) / (_1486 + 1.0);
        float _3891 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0));
        float _1501 = ((((1.0 - _1492) * (_1487 + 2.0)) * exp2(log2(isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0))) * (_1487 + 1.0))) + _1492) * _1375;
        _1509 = _1342;
        _1510 = _1341;
        _1511 = _1340;
        _1512 = _1352;
        _1513 = _1351;
        _1514 = _1350;
        _1515 = _1362;
        _1516 = _1361;
        _1517 = _1360;
        _1518 = _1375;
        _1519 = _1374;
        _1520 = _1373;
        _1521 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)));
        _1522 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0)));
        _1523 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0)));
    }
    else
    {
        _1509 = _1202;
        _1510 = _1202;
        _1511 = _1202;
        _1512 = _1202;
        _1513 = _1202;
        _1514 = _1202;
        _1515 = _1202;
        _1516 = _1202;
        _1517 = _1202;
        _1518 = _1202;
        _1519 = _1202;
        _1520 = _1202;
        _1521 = 0.0;
        _1522 = 0.0;
        _1523 = 0.0;
    }
    float _1533 = (cbModelParam._m0[1u].x * (_1521 - _1214)) + _1214;
    float _1534 = (cbModelParam._m0[1u].x * (_1522 - _1215)) + _1215;
    float _1535 = (cbModelParam._m0[1u].x * (_1523 - _1216)) + _1216;
    float _1556 = fma(_1535, cbSceneParam._m0[89u].z, fma(_1534, cbSceneParam._m0[89u].y, _1533 * cbSceneParam._m0[89u].x));
    float _1559 = fma(_1535, cbSceneParam._m0[90u].z, fma(_1534, cbSceneParam._m0[90u].y, _1533 * cbSceneParam._m0[90u].x));
    float _1562 = fma(_1535, cbSceneParam._m0[91u].z, fma(_1534, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1533));
    float _1577 = _839 * 0.5;
    float _1578 = _840 * 0.5;
    float _1579 = _841 * 0.5;
    float _1580 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1511, _1514, _1517, _1520));
    float _1583 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1510, _1513, _1516, _1519));
    float _1586 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1509, _1512, _1515, _1518));
    float _1620;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1593 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1201, _1205, _1208, _1211));
        float _1597 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1203, _1206, _1209, _1212));
        float _1601 = dot(vec4(_1577, _1578, _1579, 1.0), vec4(_1204, _1207, _1210, _1213));
        float _1608 = dot(vec4(cbModelParam._m0[39u]), vec4(_1577, _1578, _1579, 1.0));
        _1620 = dot(vec3(isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0)), isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1608) ? 0.0 : (isnan(0.0) ? _1608 : max(0.0, _1608))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1620 = 1.0;
    }
    float _1631;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1622 = dot(vec4(cbModelParam._m0[40u]), vec4(_1577, _1578, _1579, 1.0));
        _1631 = dot(vec3(isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0)), isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0)), isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1622) ? 0.0 : (isnan(0.0) ? _1622 : max(0.0, _1622))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1631 = 1.0;
    }
    float _1635 = (_1631 * cbModelParam._m0[1u].x) + (_1620 * (1.0 - cbModelParam._m0[1u].x));
    float _1645 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _683);
    float _1646 = isnan(_1645) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1645 : min(cbModelParam._m0[25u].z, _1645));
    float _1726;
    float _1728;
    float _1730;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1693 = fma(_900, cbModelParam._m0[13u].z, fma(_896, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _892)) + cbModelParam._m0[13u].w;
        float _1697 = fma(_900, cbModelParam._m0[14u].z, fma(_896, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _892)) + cbModelParam._m0[14u].w;
        float _1701 = fma(_900, cbModelParam._m0[15u].z, fma(_896, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _892)) + cbModelParam._m0[15u].w;
        float _1704 = fma(_841, cbModelParam._m0[13u].z, fma(_840, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _839));
        float _1707 = fma(_841, cbModelParam._m0[14u].z, fma(_840, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _839));
        float _1710 = fma(_841, cbModelParam._m0[15u].z, fma(_840, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _839));
        float _1738;
        if (_1704 > 0.0)
        {
            _1738 = abs((1.0 - _1693) / _1704);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1704 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1693 + 1.0) / _1704);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1738 = frontier_phi_14_12_ladder;
        }
        float _1938;
        if (_1707 > 0.0)
        {
            _1938 = abs((1.0 - _1697) / _1707);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1707 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1697 + 1.0) / _1707);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1938 = frontier_phi_23_19_ladder;
        }
        float _2181;
        if (_1710 > 0.0)
        {
            _2181 = abs((1.0 - _1701) / _1710);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1710 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1701 + 1.0) / _1710);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2181 = frontier_phi_35_30_ladder;
        }
        float _2183 = isnan(_1938) ? _1738 : (isnan(_1738) ? _1938 : min(_1738, _1938));
        float _2184 = isnan(_2181) ? _2183 : (isnan(_2183) ? _2181 : min(_2183, _2181));
        float _2188 = (_2184 * _1704) + _1693;
        float _2189 = (_2184 * _1707) + _1697;
        float _2190 = (_2184 * _1710) + _1701;
        float _2191 = _2184 * 9.9999997473787516355514526367188e-05;
        float _2193 = (-1.0) - _2191;
        float _2195 = _2191 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2190 > _2195) || ((_2190 < _2193) || ((_2189 > _2195) || ((_2189 < _2193) || ((_2188 < _2193) || (_2188 > _2195))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2314 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2190, cbModelParam._m0[9u].z, fma(_2189, cbModelParam._m0[9u].y, _2188 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2190, cbModelParam._m0[10u].z, fma(_2189, cbModelParam._m0[10u].y, _2188 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2190, cbModelParam._m0[11u].z, fma(_2189, cbModelParam._m0[11u].y, _2188 * cbModelParam._m0[11u].x))), _1646);
            frontier_phi_13_35_ladder = _2314.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2314.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2314.x * cbModelParam._m0[1u].y;
        }
        _1726 = frontier_phi_13_35_ladder_2;
        _1728 = frontier_phi_13_35_ladder_1;
        _1730 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1714 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_839, _840, _841), _1646);
        _1726 = _1714.x * cbModelParam._m0[1u].y;
        _1728 = _1714.y * cbModelParam._m0[1u].y;
        _1730 = _1714.z * cbModelParam._m0[1u].y;
    }
    float _1734 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _683);
    float _1735 = isnan(_1734) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1734 : min(cbModelParam._m0[25u].w, _1734));
    float _1824;
    float _1826;
    float _1828;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1788 = fma(_900, cbModelParam._m0[21u].z, fma(_896, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _892)) + cbModelParam._m0[21u].w;
        float _1792 = fma(_900, cbModelParam._m0[22u].z, fma(_896, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _892)) + cbModelParam._m0[22u].w;
        float _1796 = fma(_900, cbModelParam._m0[23u].z, fma(_896, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _892)) + cbModelParam._m0[23u].w;
        float _1799 = fma(_841, cbModelParam._m0[21u].z, fma(_840, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _839));
        float _1802 = fma(_841, cbModelParam._m0[22u].z, fma(_840, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _839));
        float _1805 = fma(_841, cbModelParam._m0[23u].z, fma(_840, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _839));
        float _1943;
        if (_1799 > 0.0)
        {
            _1943 = abs((1.0 - _1788) / _1799);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1788 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1943 = frontier_phi_25_21_ladder;
        }
        float _2208;
        if (_1802 > 0.0)
        {
            _2208 = abs((1.0 - _1792) / _1802);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1802 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1792 + 1.0) / _1802);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2208 = frontier_phi_37_32_ladder;
        }
        float _2413;
        if (_1805 > 0.0)
        {
            _2413 = abs((1.0 - _1796) / _1805);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1796 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2413 = frontier_phi_46_43_ladder;
        }
        float _2415 = isnan(_2208) ? _1943 : (isnan(_1943) ? _2208 : min(_1943, _2208));
        float _2416 = isnan(_2413) ? _2415 : (isnan(_2415) ? _2413 : min(_2415, _2413));
        float _2420 = (_2416 * _1799) + _1788;
        float _2421 = (_2416 * _1802) + _1792;
        float _2422 = (_2416 * _1805) + _1796;
        float _2423 = _2416 * 9.9999997473787516355514526367188e-05;
        float _2424 = (-1.0) - _2423;
        float _2426 = _2423 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2422 > _2426) || ((_2422 < _2424) || ((_2421 > _2426) || ((_2421 < _2424) || ((_2420 < _2424) || (_2420 > _2426))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2621 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2422, cbModelParam._m0[17u].z, fma(_2421, cbModelParam._m0[17u].y, _2420 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2422, cbModelParam._m0[18u].z, fma(_2421, cbModelParam._m0[18u].y, _2420 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2422, cbModelParam._m0[19u].z, fma(_2421, cbModelParam._m0[19u].y, _2420 * cbModelParam._m0[19u].x))), _1735);
            frontier_phi_22_46_ladder = _2621.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2621.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2621.x * cbModelParam._m0[1u].z;
        }
        _1824 = frontier_phi_22_46_ladder_2;
        _1826 = frontier_phi_22_46_ladder_1;
        _1828 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1808 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_839, _840, _841), _1735);
        _1824 = _1808.x * cbModelParam._m0[1u].z;
        _1826 = _1808.y * cbModelParam._m0[1u].z;
        _1828 = _1808.z * cbModelParam._m0[1u].z;
    }
    float _1840 = ((((1.0 - _860) * ((_847 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_860 * _847)) * _831;
    float _1841 = _1840 * ((cbModelParam._m0[1u].w * (_1824 - _1726)) + _1726);
    float _1842 = _1840 * ((cbModelParam._m0[1u].w * (_1826 - _1728)) + _1728);
    float _1843 = _1840 * ((cbModelParam._m0[1u].w * (_1828 - _1730)) + _1730);
    float _1846 = fma(_1843, cbSceneParam._m0[89u].z, fma(_1842, cbSceneParam._m0[89u].y, _1841 * cbSceneParam._m0[89u].x));
    float _1849 = fma(_1843, cbSceneParam._m0[90u].z, fma(_1842, cbSceneParam._m0[90u].y, _1841 * cbSceneParam._m0[90u].x));
    float _1852 = fma(_1843, cbSceneParam._m0[91u].z, fma(_1842, cbSceneParam._m0[91u].y, _1841 * cbSceneParam._m0[91u].x));
    uvec4 _1862 = floatBitsToUint(cbInstanceData._m0[_236 + 5u]);
    uint _1864 = _1862.x * 14u;
    uint _1865 = _1864 + 13u;
    float _1872 = _831 + (-1.0);
    float _1877 = (cbLight._m0[_1865].x * _1872) + 1.0;
    float _1878 = (cbLight._m0[_1865].y * _1872) + 1.0;
    float _1879 = (cbLight._m0[_1865].z * _1872) + 1.0;
    float _1880 = (cbLight._m0[_1865].w * _1872) + 1.0;
    uint _1881 = _1864 + 5u;
    float _1887 = isnan(1.0) ? _1878 : (isnan(_1878) ? 1.0 : min(_1878, 1.0));
    uint _1891 = _1864 + 4u;
    float _1897 = isnan(1.0) ? _1877 : (isnan(_1877) ? 1.0 : min(_1877, 1.0));
    uint _1901 = _1864 | 1u;
    float _1912 = dot(vec3(cbLight._m0[_1864].xyz), vec3(_680, _681, _682));
    float _1915 = dot(vec3(cbLight._m0[_1901].xyz), vec3(_680, _681, _682));
    float _4027 = isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0));
    float _4038 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _1920 = (isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0))) * 0.3183098733425140380859375;
    float _1922 = (isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))) * 0.3183098733425140380859375;
    float _1929 = ((cbLight._m0[_1881].x * _1887) * _1922) + ((cbLight._m0[_1891].x * _1897) * _1920);
    float _1930 = ((_1887 * cbLight._m0[_1881].y) * _1922) + ((_1897 * cbLight._m0[_1891].y) * _1920);
    float _1931 = ((_1887 * cbLight._m0[_1881].z) * _1922) + ((_1897 * cbLight._m0[_1891].z) * _1920);
    uvec4 _1935 = floatBitsToUint(cbLight._m0[_1864 + 12u]);
    bool _1937 = _1935.x == 0u;
    float _1948;
    float _1950;
    float _1952;
    if (_1937)
    {
        _1948 = _1929;
        _1950 = _1930;
        _1952 = _1931;
    }
    else
    {
        uint _1956 = _1864 + 6u;
        float _1972 = (dot(vec3(cbLight._m0[_1864 + 2u].xyz), vec3(_680, _681, _682)) * 0.5) + 0.5;
        float _1973 = _1972 * _1972;
        float _4049 = isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0));
        float _1974 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
        float _1975 = isnan(1.0) ? _1879 : (isnan(_1879) ? 1.0 : min(_1879, 1.0));
        _1948 = (((cbLight._m0[_1956].x * 0.3183098733425140380859375) * _1974) * _1975) + _1929;
        _1950 = (((cbLight._m0[_1956].y * 0.3183098733425140380859375) * _1974) * _1975) + _1930;
        _1952 = (((cbLight._m0[_1956].z * 0.3183098733425140380859375) * _1974) * _1975) + _1931;
    }
    bool _1955 = _1935.y == 0u;
    float _1993;
    float _1995;
    float _1997;
    if (_1955)
    {
        _1993 = _1948;
        _1995 = _1950;
        _1997 = _1952;
    }
    else
    {
        uint _2152 = _1864 + 7u;
        float _2168 = (dot(vec3(cbLight._m0[_1864 + 3u].xyz), vec3(_680, _681, _682)) * 0.5) + 0.5;
        float _2169 = _2168 * _2168;
        float _4065 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
        float _2170 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _2171 = isnan(1.0) ? _1880 : (isnan(_1880) ? 1.0 : min(_1880, 1.0));
        _1993 = (((cbLight._m0[_2152].x * 0.3183098733425140380859375) * _2170) * _2171) + _1948;
        _1995 = (((cbLight._m0[_2152].y * 0.3183098733425140380859375) * _2170) * _2171) + _1950;
        _1997 = (((cbLight._m0[_2152].z * 0.3183098733425140380859375) * _2170) * _2171) + _1952;
    }
    uint _2000 = _1864 + 8u;
    float _2013 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1864].w)) * _683) * 0.949999988079071044921875);
    float _2014 = _2013 * _2013;
    float _2015 = cbLight._m0[_1864].x + _760;
    float _2016 = cbLight._m0[_1864].y + _761;
    float _2017 = cbLight._m0[_1864].z + _762;
    float _2021 = inversesqrt(dot(vec3(_2015, _2016, _2017), vec3(_2015, _2016, _2017)));
    float _2022 = _2021 * _2015;
    float _2023 = _2021 * _2016;
    float _2024 = _2021 * _2017;
    float _2025 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_1864].xyz));
    float _4081 = isnan(0.0) ? _2025 : (isnan(_2025) ? 0.0 : max(_2025, 0.0));
    float _2028 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _4092 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _2029 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
    float _2030 = dot(vec3(_680, _681, _682), vec3(_2022, _2023, _2024));
    float _4103 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
    float _2033 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
    float _2034 = dot(vec3(cbLight._m0[_1864].xyz), vec3(_2022, _2023, _2024));
    float _4114 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
    float _2038 = _2014 * _2014;
    float _2042 = ((_2033 * _2033) * (_2038 + (-1.0))) + 1.0;
    float _2053 = (exp2(log2(1.0 - (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2054 = 1.0 - _2014;
    float _2065 = (0.5 / (((_2029 * ((_2028 * _2054) + _2014)) + 9.9999999392252902907785028219223e-09) + (((_2029 * _2054) + _2014) * _2028))) * _2028;
    float _4125 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
    float _2067 = (isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * (_2038 / ((_2042 * _2042) * 3.141590118408203125));
    uint _2078 = _1864 + 9u;
    float _2089 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1901].w)) * _683) * 0.949999988079071044921875);
    float _2090 = _2089 * _2089;
    float _2091 = cbLight._m0[_1901].x + _760;
    float _2092 = cbLight._m0[_1901].y + _761;
    float _2093 = cbLight._m0[_1901].z + _762;
    float _2097 = inversesqrt(dot(vec3(_2091, _2092, _2093), vec3(_2091, _2092, _2093)));
    float _2098 = _2097 * _2091;
    float _2099 = _2097 * _2092;
    float _2100 = _2097 * _2093;
    float _2101 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_1901].xyz));
    float _4136 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
    float _2104 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
    float _2105 = dot(vec3(_680, _681, _682), vec3(_2098, _2099, _2100));
    float _4147 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2108 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
    float _2109 = dot(vec3(cbLight._m0[_1901].xyz), vec3(_2098, _2099, _2100));
    float _4158 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
    float _2113 = _2090 * _2090;
    float _2117 = ((_2108 * _2108) * (_2113 + (-1.0))) + 1.0;
    float _2126 = (exp2(log2(1.0 - (isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2127 = 1.0 - _2090;
    float _2137 = (0.5 / (((_2029 * ((_2104 * _2127) + _2090)) + 9.9999999392252902907785028219223e-09) + (((_2029 * _2127) + _2090) * _2104))) * _2104;
    float _4169 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
    float _2139 = (isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * (_2113 / ((_2117 * _2117) * 3.141590118408203125));
    float _2149 = (((_2126 * cbLight._m0[_2078].x) * _2139) * _1887) + (((_2053 * cbLight._m0[_2000].x) * _2067) * _1897);
    float _2150 = (((_2126 * cbLight._m0[_2078].y) * _2139) * _1887) + (((_2053 * cbLight._m0[_2000].y) * _2067) * _1897);
    float _2151 = (((_2126 * cbLight._m0[_2078].z) * _2139) * _1887) + (((_2053 * cbLight._m0[_2000].z) * _2067) * _1897);
    float _2213;
    float _2215;
    float _2217;
    if (_1937)
    {
        _2213 = _2149;
        _2215 = _2150;
        _2217 = _2151;
    }
    else
    {
        uint _2219 = _1864 + 2u;
        uint _2223 = _1864 + 10u;
        float _2237 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2219].w)) * _683) * 0.949999988079071044921875);
        float _2238 = _2237 * _2237;
        float _2239 = cbLight._m0[_2219].x + _760;
        float _2240 = cbLight._m0[_2219].y + _761;
        float _2241 = cbLight._m0[_2219].z + _762;
        float _2245 = inversesqrt(dot(vec3(_2239, _2240, _2241), vec3(_2239, _2240, _2241)));
        float _2246 = _2245 * _2239;
        float _2247 = _2245 * _2240;
        float _2248 = _2245 * _2241;
        float _2249 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2219].xyz));
        float _4180 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
        float _2252 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _2253 = dot(vec3(_680, _681, _682), vec3(_2246, _2247, _2248));
        float _4191 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
        float _2256 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _2257 = dot(vec3(cbLight._m0[_2219].xyz), vec3(_2246, _2247, _2248));
        float _4202 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
        float _2261 = _2238 * _2238;
        float _2265 = ((_2256 * _2256) * (_2261 + (-1.0))) + 1.0;
        float _2274 = (exp2(log2(1.0 - (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2275 = 1.0 - _2238;
        float _2285 = (0.5 / (((_2029 * ((_2252 * _2275) + _2238)) + 9.9999999392252902907785028219223e-09) + (((_2029 * _2275) + _2238) * _2252))) * _2252;
        float _4213 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
        float _2287 = (isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * (_2261 / ((_2265 * _2265) * 3.141590118408203125));
        float _2288 = isnan(1.0) ? _1879 : (isnan(_1879) ? 1.0 : min(_1879, 1.0));
        _2213 = (((_2274 * cbLight._m0[_2223].x) * _2287) * _2288) + _2149;
        _2215 = (((_2274 * cbLight._m0[_2223].y) * _2287) * _2288) + _2150;
        _2217 = (((_2274 * cbLight._m0[_2223].z) * _2287) * _2288) + _2151;
    }
    float _2323;
    float _2325;
    float _2327;
    if (_1955)
    {
        _2323 = _2213;
        _2325 = _2215;
        _2327 = _2217;
    }
    else
    {
        uint _2334 = _1864 + 3u;
        uint _2338 = _1864 + 11u;
        float _2352 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2334].w)) * _683) * 0.949999988079071044921875);
        float _2353 = _2352 * _2352;
        float _2354 = cbLight._m0[_2334].x + _760;
        float _2355 = cbLight._m0[_2334].y + _761;
        float _2356 = cbLight._m0[_2334].z + _762;
        float _2360 = inversesqrt(dot(vec3(_2354, _2355, _2356), vec3(_2354, _2355, _2356)));
        float _2361 = _2360 * _2354;
        float _2362 = _2360 * _2355;
        float _2363 = _2360 * _2356;
        float _2364 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2334].xyz));
        float _4229 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
        float _2367 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _2368 = dot(vec3(_680, _681, _682), vec3(_2361, _2362, _2363));
        float _4240 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
        float _2371 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _2372 = dot(vec3(cbLight._m0[_2334].xyz), vec3(_2361, _2362, _2363));
        float _4251 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
        float _2376 = _2353 * _2353;
        float _2380 = ((_2371 * _2371) * (_2376 + (-1.0))) + 1.0;
        float _2389 = (exp2(log2(1.0 - (isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2390 = 1.0 - _2353;
        float _2400 = (0.5 / (((_2029 * ((_2367 * _2390) + _2353)) + 9.9999999392252902907785028219223e-09) + (((_2029 * _2390) + _2353) * _2367))) * _2367;
        float _4262 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
        float _2402 = (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (_2376 / ((_2380 * _2380) * 3.141590118408203125));
        float _2403 = isnan(1.0) ? _1880 : (isnan(_1880) ? 1.0 : min(_1880, 1.0));
        _2323 = (((_2389 * cbLight._m0[_2338].x) * _2402) * _2403) + _2213;
        _2325 = (((_2389 * cbLight._m0[_2338].y) * _2402) * _2403) + _2215;
        _2327 = (((_2389 * cbLight._m0[_2338].z) * _2402) * _2403) + _2217;
    }
    float _2538;
    float _2540;
    float _2542;
    float _2544;
    float _2546;
    float _2548;
    if (_1862.y == 0u)
    {
        float _2478 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2479 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2478;
        float _2480 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2478;
        float _2481 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2478;
        uvec4 _2493 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2494 = _2493.x;
        uint _2505 = uint((float(_2493.y) * floor(float(uint(cbSceneParam._m0[85u].y * _769) / _2494))) + floor(float(uint(cbSceneParam._m0[85u].x * _768) / _2494)));
        float _2515 = (log2(_2481 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2516 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
        uint _2519 = uint(isnan(14.0) ? _2516 : (isnan(_2516) ? 14.0 : min(_2516, 14.0)));
        uvec4 _2524 = texelFetch(g_lightClusterGridBuffer, int(((_2519 << 2u) + (_2505 << 6u)) >> 2u));
        uint _2525 = _2524.x;
        uint _2526 = _2493.z;
        float _2626;
        float _2628;
        float _2630;
        float _2632;
        float _2634;
        float _2636;
        if (((((1u << ((_2526 >> 4u) & 15u)) + 4294967295u) & _2525) == 0u) || ((_2526 & 240u) == 0u))
        {
            _2626 = 0.0;
            _2628 = 0.0;
            _2630 = 0.0;
            _2632 = 0.0;
            _2634 = 0.0;
            _2636 = 0.0;
        }
        else
        {
            float _2627;
            float _2629;
            float _2631;
            float _2633;
            float _2635;
            float _2637;
            float _2771 = 0.0;
            float _2772 = 0.0;
            float _2773 = 0.0;
            float _2774 = 0.0;
            float _2775 = 0.0;
            float _2776 = 0.0;
            uint _2777 = 0u;
            uint _2786;
            bool _2787;
            for (;;)
            {
                _2786 = texelFetch(g_lightClassification, int((((_2519 << 5u) + (_2505 << 9u)) + (_2777 << 2u)) >> 2u)).x;
                _2787 = _2786 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2787)
                {
                    frontier_phi_61_pred = _2771;
                    frontier_phi_61_pred_1 = _2776;
                    frontier_phi_61_pred_2 = _2775;
                    frontier_phi_61_pred_3 = _2774;
                    frontier_phi_61_pred_4 = _2773;
                    frontier_phi_61_pred_5 = _2772;
                }
                else
                {
                    float _2895;
                    float _2896;
                    float _2897;
                    float _2898;
                    float _2899;
                    float _2900;
                    uint _2901;
                    _2895 = _2771;
                    _2896 = _2772;
                    _2897 = _2773;
                    _2898 = _2774;
                    _2899 = _2775;
                    _2900 = _2776;
                    _2901 = _2786;
                    float _2827;
                    float _2828;
                    float _2829;
                    float _2830;
                    float _2831;
                    float _2832;
                    for (;;)
                    {
                        uint _2905 = uint(findLSB(_2901)) + (_2777 << 5u);
                        uint _2902 = (_2901 + 4294967295u) & _2901;
                        uint _2907 = _2905 * 48u;
                        vec4 _2921 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2907)).x, texelFetch(g_PointLightRenderingBuffer, int(_2907 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2907 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2907 + 3u)).x));
                        uint _2927 = (_2905 * 48u) + 4u;
                        vec4 _2940 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2927)).x, texelFetch(g_PointLightRenderingBuffer, int(_2927 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2927 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2927 + 3u)).x));
                        uint _2946 = (_2905 * 48u) + 8u;
                        vec3 _2957 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2946)).x, texelFetch(g_PointLightRenderingBuffer, int(_2946 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2946 + 2u)).x));
                        float _2961 = _2921.x - _2479;
                        float _2962 = _2921.y - _2480;
                        float _2963 = _2921.z - _2481;
                        float _2964 = dot(vec3(_2961, _2962, _2963), vec3(_2961, _2962, _2963));
                        float _2967 = inversesqrt(_2964);
                        float _2968 = _2967 * _2961;
                        float _2969 = _2967 * _2962;
                        float _2970 = _2967 * _2963;
                        float _2971 = dot(vec3(_787, _790, _793), vec3(_2968, _2969, _2970));
                        float _2976 = 1.0 - (_2964 * _2921.w);
                        float _4288 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
                        float _2977 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
                        float _2978 = sqrt(_2964) * _2940.w;
                        float _2981 = 1.39999997615814208984375 / (_2978 + 1.39999997615814208984375);
                        float _2982 = _2981 * _2981;
                        float _2985 = ((1.0 - _2982) * _2971) + _2982;
                        float _2988 = _2978 * _2978;
                        float _2992 = ((isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0))) * _2977) / ((_2988 * 0.699999988079071044921875) + 1.0);
                        float _2996 = (-0.0) - _2479;
                        float _2997 = (-0.0) - _2480;
                        float _2998 = (-0.0) - _2481;
                        float _3002 = inversesqrt(dot(vec3(_2996, _2997, _2998), vec3(_2996, _2997, _2998)));
                        float _3003 = _3002 * _2996;
                        float _3004 = _3002 * _2997;
                        float _3005 = _3002 * _2998;
                        float _3013 = exp2(log2(1.0 / ((_2988 * 3.5) + 5.0)) * 0.25);
                        float _3014 = 1.0 - _847;
                        float _3021 = sqrt(1.0 - ((1.0 - (_3014 * _3014)) * (1.0 - (_3013 * _3013))));
                        float _3022 = _3021 * _3021;
                        float _3023 = _3022 * _3022;
                        float _3024 = _3003 + _2968;
                        float _3025 = _3004 + _2969;
                        float _3026 = _3005 + _2970;
                        float _3030 = inversesqrt(dot(vec3(_3024, _3025, _3026), vec3(_3024, _3025, _3026)));
                        float _3034 = dot(vec3(_787, _790, _793), vec3(_3003, _3004, _3005));
                        float _4304 = isnan(0.0) ? _3034 : (isnan(_3034) ? 0.0 : max(_3034, 0.0));
                        float _3037 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
                        float _3038 = dot(vec3(_787, _790, _793), vec3(_3030 * _3024, _3030 * _3025, _3030 * _3026));
                        float _4315 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0));
                        float _3041 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
                        float _3045 = ((_3041 * _3041) * (_3023 + (-1.0))) + 1.0;
                        float _3046 = _2981 * _3022;
                        float _3047 = _3046 * _3046;
                        float _3050 = ((1.0 - _3047) * _2971) + _3047;
                        float _4326 = isnan(0.0) ? _3050 : (isnan(_3050) ? 0.0 : max(_3050, 0.0));
                        float _3051 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
                        float _3052 = 1.0 - _3022;
                        float _3062 = (0.5 / (((_3051 * ((_3037 * _3052) + _3022)) + 9.9999999392252902907785028219223e-09) + (((_3051 * _3052) + _3022) * _3037))) * _3051;
                        float _4337 = isnan(0.0) ? _3062 : (isnan(_3062) ? 0.0 : max(_3062, 0.0));
                        float _3073 = (((_3023 * 3.1415927410125732421875) * (isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0)))) / ((_3045 * _3045) * ((_2988 * 2.1991131305694580078125) + 3.141590118408203125))) * _2977;
                        _2830 = (_2992 * _2940.x) + _2898;
                        _2831 = (_2992 * _2940.y) + _2899;
                        _2832 = (_2992 * _2940.z) + _2900;
                        _2827 = (_3073 * _2957.x) + _2895;
                        _2828 = (_3073 * _2957.y) + _2896;
                        _2829 = (_3073 * _2957.z) + _2897;
                        if (_2902 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2895 = _2827;
                            _2896 = _2828;
                            _2897 = _2829;
                            _2898 = _2830;
                            _2899 = _2831;
                            _2900 = _2832;
                            _2901 = _2902;
                        }
                    }
                    frontier_phi_61_pred = _2827;
                    frontier_phi_61_pred_1 = _2832;
                    frontier_phi_61_pred_2 = _2831;
                    frontier_phi_61_pred_3 = _2830;
                    frontier_phi_61_pred_4 = _2829;
                    frontier_phi_61_pred_5 = _2828;
                }
                _2627 = frontier_phi_61_pred;
                _2637 = frontier_phi_61_pred_1;
                _2635 = frontier_phi_61_pred_2;
                _2633 = frontier_phi_61_pred_3;
                _2631 = frontier_phi_61_pred_4;
                _2629 = frontier_phi_61_pred_5;
                uint _2778 = _2777 + 1u;
                if (_2778 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2771 = _2627;
                    _2772 = _2629;
                    _2773 = _2631;
                    _2774 = _2633;
                    _2775 = _2635;
                    _2776 = _2637;
                    _2777 = _2778;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2626 = _2627;
            _2628 = _2629;
            _2630 = _2631;
            _2632 = _2633;
            _2634 = _2635;
            _2636 = _2637;
        }
        uvec4 _2640 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2641 = _2640.z;
        uint _2643 = (_2641 >> 8u) & 15u;
        float _2739;
        float _2741;
        float _2743;
        float _2745;
        float _2747;
        float _2749;
        if (((4294967295u << _2643) & _2525) == 0u)
        {
            _2739 = _2626;
            _2741 = _2628;
            _2743 = _2630;
            _2745 = _2632;
            _2747 = _2634;
            _2749 = _2636;
        }
        else
        {
            float _2764 = inversesqrt(dot(vec3(_2479, _2480, _2481), vec3(_2479, _2480, _2481)));
            float _2765 = _2764 * _2479;
            float _2766 = _2764 * _2480;
            float _2767 = _2764 * _2481;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2643 < ((_2641 >> 12u) & 15u))
            {
                float _2740;
                float _2742;
                float _2744;
                float _2746;
                float _2748;
                float _2750;
                float _2878 = _2626;
                float _2879 = _2628;
                float _2880 = _2630;
                float _2881 = _2632;
                float _2882 = _2634;
                float _2883 = _2636;
                uint _2884 = _2643;
                uint _2893;
                bool _2894;
                for (;;)
                {
                    _2893 = texelFetch(g_lightClassification, int((((_2519 << 5u) + (_2505 << 9u)) + (_2884 << 2u)) >> 2u)).x;
                    _2894 = _2893 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2894)
                    {
                        frontier_phi_67_pred = _2881;
                        frontier_phi_67_pred_1 = _2882;
                        frontier_phi_67_pred_2 = _2883;
                        frontier_phi_67_pred_3 = _2880;
                        frontier_phi_67_pred_4 = _2879;
                        frontier_phi_67_pred_5 = _2878;
                    }
                    else
                    {
                        float _3078;
                        float _3079;
                        float _3080;
                        float _3081;
                        float _3082;
                        float _3083;
                        float _3371;
                        float _3372;
                        float _3373;
                        float _3374;
                        float _3375;
                        float _3376;
                        float _3091 = _2878;
                        float _3092 = _2879;
                        float _3093 = _2880;
                        float _3094 = _2881;
                        float _3095 = _2882;
                        float _3096 = _2883;
                        uint _3097 = _2893;
                        uint _3098;
                        vec4 _3123;
                        float _3124;
                        vec4 _3139;
                        vec3 _3151;
                        vec4 _3166;
                        vec4 _3181;
                        float _3227;
                        bool _3228;
                        for (;;)
                        {
                            uint _3108 = ((_2884 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3097));
                            _3098 = (_3097 + 4294967295u) & _3097;
                            uint _3110 = _3108 * 40u;
                            _3123 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3110)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3110 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3110 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3110 + 3u)).x));
                            _3124 = _3123.w;
                            uint _3126 = (_3108 * 40u) + 4u;
                            _3139 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3126)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3126 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3126 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3126 + 3u)).x));
                            uint _3141 = (_3108 * 40u) + 8u;
                            _3151 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3141)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3141 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3141 + 2u)).x));
                            uint _3153 = (_3108 * 40u) + 16u;
                            _3166 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3153)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3153 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3153 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3153 + 3u)).x));
                            uint _3168 = (_3108 * 40u) + 20u;
                            _3181 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3168)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3168 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3168 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3168 + 3u)).x));
                            uint _3183 = (_3108 * 40u) + 24u;
                            vec4 _3196 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3183)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 3u)).x));
                            uint _3202 = (_3108 * 40u) + 28u;
                            vec4 _3215 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3202)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3202 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3202 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3202 + 3u)).x));
                            _3227 = fma(_2481, _3215.z, fma(_2480, _3215.y, _3215.x * _2479)) + _3215.w;
                            _3228 = !((fma(_2481, _3196.z, fma(_2480, _3196.y, _3196.x * _2479)) + _3196.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3228)
                            {
                                float _3255 = _3123.x - _2479;
                                float _3256 = _3123.y - _2480;
                                float _3257 = _3123.z - _2481;
                                float _3258 = dot(vec3(_3255, _3256, _3257), vec3(_3255, _3256, _3257));
                                float _3261 = inversesqrt(_3258);
                                float _3262 = _3261 * _3255;
                                float _3263 = _3261 * _3256;
                                float _3264 = _3261 * _3257;
                                float _3268 = 1.0 - (_3258 / (_3124 * _3124));
                                float _4348 = isnan(0.0) ? _3268 : (isnan(_3268) ? 0.0 : max(_3268, 0.0));
                                float _3269 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
                                float _3273 = sqrt(_3258) * _3139.w;
                                float _3275 = 1.39999997615814208984375 / (_3273 + 1.39999997615814208984375);
                                float _3276 = _3275 * _3275;
                                float _3279 = ((1.0 - _3276) * dot(vec3(_3262, _3263, _3264), vec3(_787, _790, _793))) + _3276;
                                float _3282 = _3273 * _3273;
                                float _3286 = (fma(_2481, _3166.z, fma(_2480, _3166.y, _3166.x * _2479)) + _3166.w) / _3227;
                                float _3287 = (fma(_2481, _3181.z, fma(_2480, _3181.y, _3181.x * _2479)) + _3181.w) / _3227;
                                float _3291 = 1.0 - dot(vec2(_3286, _3287), vec2(_3286, _3287));
                                float _4364 = isnan(0.0) ? _3291 : (isnan(_3291) ? 0.0 : max(_3291, 0.0));
                                float _3292 = isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0));
                                float _3293 = _3292 * (((isnan(0.0) ? _3279 : (isnan(_3279) ? 0.0 : max(_3279, 0.0))) * _3269) / ((_3282 * 0.699999988079071044921875) + 1.0));
                                float _3305 = exp2(log2(1.0 / ((_3282 * 3.5) + 5.0)) * 0.25);
                                float _3306 = 1.0 - _847;
                                float _3313 = sqrt(1.0 - ((1.0 - (_3306 * _3306)) * (1.0 - (_3305 * _3305))));
                                float _3314 = _3313 * _3313;
                                float _3315 = _3314 * _3314;
                                float _3316 = _3262 - _2765;
                                float _3317 = _3263 - _2766;
                                float _3318 = _3264 - _2767;
                                float _3322 = inversesqrt(dot(vec3(_3316, _3317, _3318), vec3(_3316, _3317, _3318)));
                                float _3326 = dot(vec3(_787, _790, _793), vec3((-0.0) - _2765, (-0.0) - _2766, (-0.0) - _2767));
                                float _4375 = isnan(0.0) ? _3326 : (isnan(_3326) ? 0.0 : max(_3326, 0.0));
                                float _3329 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
                                float _3330 = dot(vec3(_787, _790, _793), vec3(_3322 * _3316, _3322 * _3317, _3322 * _3318));
                                float _4386 = isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : max(_3330, 0.0));
                                float _3333 = isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0));
                                float _3337 = ((_3333 * _3333) * (_3315 + (-1.0))) + 1.0;
                                float _3338 = _3275 * _3314;
                                float _3339 = _3338 * _3338;
                                float _3345 = ((1.0 - _3339) * dot(vec3(_787, _790, _793), vec3(_3262, _3263, _3264))) + _3339;
                                float _4397 = isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0));
                                float _3346 = isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0));
                                float _3347 = 1.0 - _3314;
                                float _3357 = (0.5 / (((_3346 * ((_3329 * _3347) + _3314)) + 9.9999999392252902907785028219223e-09) + (((_3346 * _3347) + _3314) * _3329))) * _3346;
                                float _4408 = isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0));
                                float _3367 = (_3292 * _3269) * (((_3315 * 3.1415927410125732421875) * (isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0)))) / ((_3337 * _3337) * ((_3282 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3367 * _3151.x;
                                frontier_phi_73_pred_1 = _3367 * _3151.y;
                                frontier_phi_73_pred_2 = _3293 * _3139.z;
                                frontier_phi_73_pred_3 = _3293 * _3139.y;
                                frontier_phi_73_pred_4 = _3293 * _3139.x;
                                frontier_phi_73_pred_5 = _3367 * _3151.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3371 = frontier_phi_73_pred;
                            _3372 = frontier_phi_73_pred_1;
                            _3376 = frontier_phi_73_pred_2;
                            _3375 = frontier_phi_73_pred_3;
                            _3374 = frontier_phi_73_pred_4;
                            _3373 = frontier_phi_73_pred_5;
                            _3081 = _3374 + _3094;
                            _3082 = _3375 + _3095;
                            _3083 = _3376 + _3096;
                            _3078 = _3371 + _3091;
                            _3079 = _3372 + _3092;
                            _3080 = _3373 + _3093;
                            if (_3098 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3091 = _3078;
                                _3092 = _3079;
                                _3093 = _3080;
                                _3094 = _3081;
                                _3095 = _3082;
                                _3096 = _3083;
                                _3097 = _3098;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3081;
                        frontier_phi_67_pred_1 = _3082;
                        frontier_phi_67_pred_2 = _3083;
                        frontier_phi_67_pred_3 = _3080;
                        frontier_phi_67_pred_4 = _3079;
                        frontier_phi_67_pred_5 = _3078;
                    }
                    _2746 = frontier_phi_67_pred;
                    _2748 = frontier_phi_67_pred_1;
                    _2750 = frontier_phi_67_pred_2;
                    _2744 = frontier_phi_67_pred_3;
                    _2742 = frontier_phi_67_pred_4;
                    _2740 = frontier_phi_67_pred_5;
                    uint _2885 = _2884 + 1u;
                    if (_2885 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2878 = _2740;
                        _2879 = _2742;
                        _2880 = _2744;
                        _2881 = _2746;
                        _2882 = _2748;
                        _2883 = _2750;
                        _2884 = _2885;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2748;
                frontier_phi_55_56_ladder_1 = _2750;
                frontier_phi_55_56_ladder_2 = _2746;
                frontier_phi_55_56_ladder_3 = _2744;
                frontier_phi_55_56_ladder_4 = _2742;
                frontier_phi_55_56_ladder_5 = _2740;
            }
            else
            {
                frontier_phi_55_56_ladder = _2634;
                frontier_phi_55_56_ladder_1 = _2636;
                frontier_phi_55_56_ladder_2 = _2632;
                frontier_phi_55_56_ladder_3 = _2630;
                frontier_phi_55_56_ladder_4 = _2628;
                frontier_phi_55_56_ladder_5 = _2626;
            }
            _2739 = frontier_phi_55_56_ladder_5;
            _2741 = frontier_phi_55_56_ladder_4;
            _2743 = frontier_phi_55_56_ladder_3;
            _2745 = frontier_phi_55_56_ladder_2;
            _2747 = frontier_phi_55_56_ladder;
            _2749 = frontier_phi_55_56_ladder_1;
        }
        float _2754 = isnan(1.0) ? _831 : (isnan(_831) ? 1.0 : min(_831, 1.0));
        _2538 = (_2754 * _2745) + _1993;
        _2540 = (_2754 * _2747) + _1995;
        _2542 = (_2754 * _2749) + _1997;
        _2544 = ((_2739 * 0.039999999105930328369140625) * _2754) + _2323;
        _2546 = ((_2741 * 0.039999999105930328369140625) * _2754) + _2325;
        _2548 = ((_2743 * 0.039999999105930328369140625) * _2754) + _2327;
    }
    else
    {
        _2538 = _1993;
        _2540 = _1995;
        _2542 = _1997;
        _2544 = _2323;
        _2546 = _2325;
        _2548 = _2327;
    }
    float _4424 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _4435 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _4446 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    uint _2568 = _236 + 6u;
    float _2576 = _768 / cbSceneParam._m0[86u].x;
    float _2577 = _769 / cbSceneParam._m0[86u].y;
    vec4 _2591 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2576, _2577, (log2((isnan(cbSceneParam._m0[77u].w) ? _701 : (isnan(_701) ? cbSceneParam._m0[77u].w : min(_701, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2593 = _2591.x;
    float _2594 = _2591.y;
    float _2595 = _2591.z;
    float _2596 = _2591.w;
    float _2689;
    float _2691;
    float _2693;
    float _2695;
    if (_701 > cbSceneParam._m0[78u].w)
    {
        float _2651 = isnan(_701) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _701 : min(cbSceneParam._m0[80u].w, _701));
        float _2652 = _2651 / _701;
        float _2663 = _2652 * _753;
        float _2664 = _754 * _2652;
        float _2665 = (-0.0) - _2664;
        float _2667 = _2652 * _755;
        float _2669 = (cbSceneParam._m0[77u].w * _2665) / _2651;
        float _2670 = _2669 + cbSceneParam._m0[79u].w;
        float _2671 = cbSceneParam._m0[79u].w - _2664;
        float _2677 = sqrt(((_2663 * _2663) + (_2664 * _2664)) + (_2667 * _2667));
        float _2680 = (1.0 - (cbSceneParam._m0[77u].w / _2651)) * _2677;
        float _2685 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2687 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2840;
        if (abs((_2665 - _2669) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2840 = ((((_2670 > 0.0) ? exp2(_2685 * _2670) : (2.0 - exp2(_2687 * _2670))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2680;
        }
        else
        {
            float _2800 = 1.0 / cbSceneParam._m0[80u].x;
            float _2801 = isnan(_2671) ? _2670 : (isnan(_2670) ? _2671 : max(_2670, _2671));
            float _2802 = isnan(_2671) ? _2670 : (isnan(_2670) ? _2671 : min(_2670, _2671));
            float _2811 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : min(_2801, 0.0));
            float _2812 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : min(_2802, 0.0));
            _2840 = ((abs(_2677 / _2665) * cbSceneParam._m0[80u].y) * ((((_2811 - _2812) * 2.0) - ((exp2(_2685 * (isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0)))) - exp2(_2685 * (isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0))))) * _2800)) - ((exp2(_2687 * _2811) - exp2(_2687 * _2812)) * _2800))) + (_2680 * cbSceneParam._m0[80u].z);
        }
        vec4 _2842 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2576, _2577, 1.0), 0.0);
        float _2851 = exp2((_2840 * (-1.44269502162933349609375)) * (1.0 - _2842.w));
        float _2852 = log2(_2851);
        float _2868 = log2(_2596);
        _2689 = (exp2(_2868 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2852 * cbSceneParam._m0[78u].x)) * _2842.x) / cbSceneParam._m0[78u].x)) + _2593;
        _2691 = (exp2(_2868 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2852 * cbSceneParam._m0[78u].y)) * _2842.y) / cbSceneParam._m0[78u].y)) + _2594;
        _2693 = (exp2(_2868 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2852 * cbSceneParam._m0[78u].z)) * _2842.z) / cbSceneParam._m0[78u].z)) + _2595;
        _2695 = _2851 * _2596;
    }
    else
    {
        _2689 = _2593;
        _2691 = _2594;
        _2693 = _2595;
        _2695 = _2596;
    }
    float _2707 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2708 = _2707 == 3.0;
    float _2709 = log2(_2695);
    float _2716 = exp2(_2709 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (_2538 + ((isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0))) * _831))) + ((_2544 + ((isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))) * _1635)) * cbPerFrame._m0[3u].x));
    float _2717 = exp2(_2709 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))) * (_2540 + ((isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0))) * _831))) + ((_2546 + ((isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))) * _1635)) * cbPerFrame._m0[3u].x));
    float _2718 = exp2(_2709 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))) * (_2542 + ((isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0))) * _831))) + ((_2548 + ((isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))) * _1635)) * cbPerFrame._m0[3u].x));
    float _2727 = (_2707 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2727 * (_2708 ? _2716 : (_2716 + (cbSceneParam._m0[72u].w * _2689)));
    SV_Target.y = _2727 * (_2708 ? _2717 : (_2717 + (cbSceneParam._m0[72u].w * _2691)));
    SV_Target.z = _2727 * (_2708 ? _2718 : (_2718 + (cbSceneParam._m0[72u].w * _2693)));
    SV_Target.w = cbInstanceData._m0[_2568].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2568].w;
}


