#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1233;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240 = _239 * TANGENT.x;
    float _241 = _239 * TANGENT.y;
    float _242 = _239 * TANGENT.z;
    float _253 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _255 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3820 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _3831 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _3842 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    uint _266 = uint(roundEven(NORMAL.w)) * 13u;
    uint _271 = _266 + 1u;
    uint _275 = _266 + 2u;
    float _284 = sqrt(((cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x)) + (cbInstanceData._m0[_275].x * cbInstanceData._m0[_275].x));
    float _285 = _284 * TEXCOORD.z;
    float _286 = _284 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _285) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _286) + cbTextureTilingScale._m0[13u].w));
    vec4 _323 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _328 = _323.x * cbMtdParam._m0[11u].x;
    float _329 = _323.y * cbMtdParam._m0[11u].y;
    float _330 = _323.z * cbMtdParam._m0[11u].z;
    vec4 _349 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _285) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _286) + cbTextureTilingScale._m0[5u].w));
    vec4 _385 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _387 = _385.x;
    float _397 = dot(vec4(_387, _385.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _414 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_387 - _397) * cbMtdParam._m0[24u].x) + _397) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3853 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _415 = isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0));
    float _422 = (_415 * ((_349.x * cbMtdParam._m0[12u].x) - _328)) + _328;
    float _423 = (_415 * ((_349.y * cbMtdParam._m0[12u].y) - _329)) + _329;
    float _424 = (_415 * ((_349.z * cbMtdParam._m0[12u].z) - _330)) + _330;
    float _428 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _299.x) * _422;
    float _431 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _299.y) * _423;
    float _434 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _299.z) * _424;
    float _441 = ((_422 - _428) * (isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0)))) + _428;
    float _442 = ((_423 - _431) * (isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0)))) + _431;
    float _443 = ((_424 - _434) * (isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0)))) + _434;
    vec4 _462 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _285) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _286) + cbTextureTilingScale._m0[14u].w));
    vec4 _482 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _285) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _286) + cbTextureTilingScale._m0[20u].w));
    vec4 _509 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _285) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _286) + cbTextureTilingScale._m0[4u].w));
    vec4 _526 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _528 = _526.x;
    float _529 = _526.y;
    float _530 = _526.z;
    float _539 = ((_509.z - _530) * _415) + _530;
    float _542 = ((((_509.x - _528) * _415) + _528) * 2.0) + (-1.0);
    float _543 = ((((_509.y - _529) * _415) + _529) * 2.0) + (-1.0);
    float _544 = dot(vec2(_542, _543), vec2(_542, _543));
    float _3864 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _549 = sqrt(1.0 - (isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0))));
    float _552 = _542 + ((((_482.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _553 = _543 + ((((_482.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _556 = fma(_549, _233, fma(_553, _240, _552 * _226));
    float _559 = fma(_549, _234, fma(_553, _241, _552 * _227));
    float _562 = fma(_549, _235, fma(_553, _242, _552 * _228));
    float _566 = inversesqrt(dot(vec3(_556, _559, _562), vec3(_556, _559, _562)));
    vec4 _582 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _610 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _285) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _286) + cbTextureTilingScale._m0[11u].w));
    float _612 = _610.x;
    float _613 = 1.0 - _612;
    float _617 = ((_612 - _613) * cbMtdParam._m0[24u].z) + _613;
    float _619 = (cbMtdParam._m0[19u].x + dot(vec4(_566 * _556, _566 * _559, _566 * _562, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_617 * cbMtdParam._m0[21u].z);
    float _3875 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _620 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _635 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_617 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3886 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _636 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _640 = ((_620 * ((_462.x * cbMtdParam._m0[18u].x) - _441)) * _636) + _441;
    float _641 = ((_620 * ((_462.y * cbMtdParam._m0[18u].y) - _442)) * _636) + _442;
    float _642 = ((_620 * ((_462.z * cbMtdParam._m0[18u].z) - _443)) * _636) + _443;
    float _647 = (((_482.z - _539) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _539;
    vec4 _660 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _285) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _286) + cbTextureTilingScale._m0[15u].w));
    float _667 = (_660.x * 2.0) + (-1.0);
    float _668 = (_660.y * 2.0) + (-1.0);
    float _669 = dot(vec2(_667, _668), vec2(_667, _668));
    float _3897 = isnan(0.0) ? _669 : (isnan(_669) ? 0.0 : max(_669, 0.0));
    float _678 = (((_660.z - _647) * _620) * _636) + _647;
    float _693 = (((cbMtdParam._m0[21u].x * _552) + ((_667 - _552) * _620)) * _636) + _552;
    float _694 = (((cbMtdParam._m0[21u].x * _553) + ((_668 - _553) * _620)) * _636) + _553;
    float _695 = (((sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) - _549) * _620) * _636) + _549;
    float _697 = cbMtdParam._m0[22u].x + _582.w;
    float _700 = fma(_695, _233, fma(_694, _240, _693 * _226));
    float _703 = fma(_695, _234, fma(_694, _241, _693 * _227));
    float _706 = fma(_695, _235, fma(_694, _242, _693 * _228));
    float _710 = inversesqrt(dot(vec3(_700, _703, _706), vec3(_700, _703, _706)));
    float _711 = _710 * _700;
    float _712 = _710 * _703;
    float _713 = _710 * _706;
    float _3908 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _714 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _3919 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _3930 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _3941 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _3952 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _732 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _774 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _784 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _774);
    float _785 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _774);
    float _786 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _774);
    float _790 = inversesqrt(dot(vec3(_784, _785, _786), vec3(_784, _785, _786)));
    float _791 = _784 * _790;
    float _792 = _785 * _790;
    float _793 = _786 * _790;
    float _799 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _800 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _818 = fma(_713, cbSceneParam._m0[5u].z, fma(_712, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _711));
    float _821 = fma(_713, cbSceneParam._m0[6u].z, fma(_712, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _711));
    float _824 = fma(_713, cbSceneParam._m0[7u].z, fma(_712, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _711));
    uint _838 = (_266 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _844 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0)))) * cbInstanceData._m0[_838].x;
    float _845 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_838].y;
    float _846 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_838].z;
    float _3963 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
    float _3974 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    vec4 _858 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _799, cbSceneParam._m0[86u].y * _800));
    float _862 = ((isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0))) * TEXCOORD_5.w) * _858.x;
    float _863 = dot(vec3(_711, _712, _713), vec3(_791, _792, _793));
    float _866 = _863 * 2.0;
    float _870 = (_866 * _711) - _791;
    float _871 = (_866 * _712) - _792;
    float _872 = (_866 * _713) - _793;
    float _876 = abs(dot(vec3(_791, _792, _793), vec3(_711, _712, _713)));
    float _3996 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _878 = sqrt(_714);
    float _891 = exp2((_878 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_878 * 3.0));
    float _923 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1232;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _957 = fma(_931, cbModelParam._m0[26u].z, fma(_927, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _923));
        float _961 = fma(_931, cbModelParam._m0[27u].z, fma(_927, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _923));
        float _965 = fma(_931, cbModelParam._m0[28u].z, fma(_927, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _923));
        float _990 = _923 + _711;
        float _991 = _927 + _712;
        float _992 = _931 + _713;
        float _1002 = fma(_992, cbModelParam._m0[26u].z, fma(_991, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _990)) - _957;
        float _1003 = fma(_992, cbModelParam._m0[27u].z, fma(_991, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _990)) - _961;
        float _1004 = fma(_992, cbModelParam._m0[28u].z, fma(_991, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _990)) - _965;
        float _1008 = inversesqrt(dot(vec3(_1002, _1003, _1004), vec3(_1002, _1003, _1004)));
        float _1021 = ((_1008 * _1002) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_957 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1022 = ((_1008 * _1003) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_961 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1023 = ((_1008 * _1004) / cbModelParam._m0[34u].z) + ((((((_965 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1026 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1033 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1040 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1047 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        float _1060 = exp2((_1026.w + (-0.5)) * 20.0) * 2.0;
        float _1061 = _1060 * (_1026.x + (-0.5));
        float _1062 = _1060 * (_1026.y + (-0.5));
        float _1063 = _1060 * (_1026.z + (-0.5));
        float _1070 = exp2((_1033.w + (-0.5)) * 20.0) * 2.0;
        float _1071 = _1070 * (_1033.x + (-0.5));
        float _1072 = _1070 * (_1033.y + (-0.5));
        float _1073 = _1070 * (_1033.z + (-0.5));
        float _1080 = exp2((_1040.w + (-0.5)) * 20.0) * 2.0;
        float _1081 = _1080 * (_1040.x + (-0.5));
        float _1082 = _1080 * (_1040.y + (-0.5));
        float _1083 = _1080 * (_1040.z + (-0.5));
        float _1090 = exp2((_1047.w + (-0.5)) * 20.0) * 2.0;
        float _1091 = _1090 * (_1047.x + (-0.5));
        float _1092 = _1090 * (_1047.y + (-0.5));
        float _1093 = _1090 * (_1047.z + (-0.5));
        float _1094 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1095 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1096 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1097 = _1061 * 0.5;
        float _1098 = _1071 * 0.5;
        float _1099 = _1081 * 0.5;
        float _1100 = dot(vec3(_1097, _1098, _1099), vec3(_1097, _1098, _1099));
        float _1105 = (_1100 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1100);
        float _1114 = (dot(vec3(_711, _712, _713), vec3(_1105 * _1097, _1105 * _1098, _1105 * _1099)) + 1.0) * 0.5;
        float _4022 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1124 = sqrt(((_1098 * _1098) + (_1097 * _1097)) + (_1099 * _1099)) / (_1094 + 9.9999997473787516355514526367188e-06);
        float _4033 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1126 = _1125 * 2.0;
        float _1130 = (1.0 - _1125) / (_1125 + 1.0);
        float _4044 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1140 = ((((1.0 - _1131) * (_1126 + 2.0)) * exp2(log2(isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * (_1126 + 1.0))) + _1131) * _1094;
        float _1141 = _1062 * 0.5;
        float _1142 = _1072 * 0.5;
        float _1143 = _1082 * 0.5;
        float _1144 = dot(vec3(_1141, _1142, _1143), vec3(_1141, _1142, _1143));
        float _1149 = (_1144 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1144);
        float _1157 = (dot(vec3(_711, _712, _713), vec3(_1149 * _1141, _1149 * _1142, _1149 * _1143)) + 1.0) * 0.5;
        float _4055 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1166 = sqrt(((_1142 * _1142) + (_1141 * _1141)) + (_1143 * _1143)) / (_1095 + 9.9999997473787516355514526367188e-06);
        float _4066 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1168 = _1167 * 2.0;
        float _1172 = (1.0 - _1167) / (_1167 + 1.0);
        float _4077 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1182 = ((((1.0 - _1173) * (_1168 + 2.0)) * exp2(log2(isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * (_1168 + 1.0))) + _1173) * _1095;
        float _1183 = _1063 * 0.5;
        float _1184 = _1073 * 0.5;
        float _1185 = _1083 * 0.5;
        float _1186 = dot(vec3(_1183, _1184, _1185), vec3(_1183, _1184, _1185));
        float _1191 = (_1186 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1186);
        float _1199 = (dot(vec3(_711, _712, _713), vec3(_1191 * _1183, _1191 * _1184, _1191 * _1185)) + 1.0) * 0.5;
        float _4088 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1208 = sqrt(((_1184 * _1184) + (_1183 * _1183)) + (_1185 * _1185)) / (_1096 + 9.9999997473787516355514526367188e-06);
        float _4099 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1210 = _1209 * 2.0;
        float _1214 = (1.0 - _1209) / (_1209 + 1.0);
        float _4110 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1224 = ((((1.0 - _1215) * (_1210 + 2.0)) * exp2(log2(isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * (_1210 + 1.0))) + _1215) * _1096;
        _1232 = _1063;
        _1234 = _1062;
        _1235 = _1061;
        _1236 = _1073;
        _1237 = _1072;
        _1238 = _1071;
        _1239 = _1083;
        _1240 = _1082;
        _1241 = _1081;
        _1242 = _1096;
        _1243 = _1095;
        _1244 = _1094;
        _1245 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0)));
        _1246 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0)));
        _1247 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0)));
    }
    else
    {
        _1232 = _1233;
        _1234 = _1233;
        _1235 = _1233;
        _1236 = _1233;
        _1237 = _1233;
        _1238 = _1233;
        _1239 = _1233;
        _1240 = _1233;
        _1241 = _1233;
        _1242 = _1233;
        _1243 = _1233;
        _1244 = _1233;
        _1245 = 0.0;
        _1246 = 0.0;
        _1247 = 0.0;
    }
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1272 = fma(_931, cbModelParam._m0[30u].z, fma(_927, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _923));
        float _1276 = fma(_931, cbModelParam._m0[31u].z, fma(_927, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _923));
        float _1280 = fma(_931, cbModelParam._m0[32u].z, fma(_927, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _923));
        float _1303 = _923 + _711;
        float _1304 = _927 + _712;
        float _1305 = _931 + _713;
        float _1315 = fma(_1305, cbModelParam._m0[30u].z, fma(_1304, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1303)) - _1272;
        float _1316 = fma(_1305, cbModelParam._m0[31u].z, fma(_1304, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1303)) - _1276;
        float _1317 = fma(_1305, cbModelParam._m0[32u].z, fma(_1304, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1303)) - _1280;
        float _1321 = inversesqrt(dot(vec3(_1315, _1316, _1317), vec3(_1315, _1316, _1317)));
        float _1334 = ((_1321 * _1315) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1272 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1335 = ((_1321 * _1316) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1276 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1336 = ((_1321 * _1317) / cbModelParam._m0[35u].z) + ((((((_1280 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1345 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1359 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        float _1371 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1338.x + (-0.5));
        float _1373 = _1371 * (_1338.y + (-0.5));
        float _1374 = _1371 * (_1338.z + (-0.5));
        float _1381 = exp2((_1345.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1345.x + (-0.5));
        float _1383 = _1381 * (_1345.y + (-0.5));
        float _1384 = _1381 * (_1345.z + (-0.5));
        float _1391 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1392 = _1391 * (_1352.x + (-0.5));
        float _1393 = _1391 * (_1352.y + (-0.5));
        float _1394 = _1391 * (_1352.z + (-0.5));
        float _1401 = exp2((_1359.w + (-0.5)) * 20.0) * 2.0;
        float _1402 = _1401 * (_1359.x + (-0.5));
        float _1403 = _1401 * (_1359.y + (-0.5));
        float _1404 = _1401 * (_1359.z + (-0.5));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1407 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1408 = _1372 * 0.5;
        float _1409 = _1382 * 0.5;
        float _1410 = _1392 * 0.5;
        float _1411 = dot(vec3(_1408, _1409, _1410), vec3(_1408, _1409, _1410));
        float _1416 = (_1411 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1411);
        float _1424 = (dot(vec3(_711, _712, _713), vec3(_1416 * _1408, _1416 * _1409, _1416 * _1410)) + 1.0) * 0.5;
        float _4151 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1433 = sqrt(((_1409 * _1409) + (_1408 * _1408)) + (_1410 * _1410)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _4162 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1435 = _1434 * 2.0;
        float _1439 = (1.0 - _1434) / (_1434 + 1.0);
        float _4173 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1440 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1449 = ((((1.0 - _1440) * (_1435 + 2.0)) * exp2(log2(isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))) * (_1435 + 1.0))) + _1440) * _1405;
        float _1450 = _1373 * 0.5;
        float _1451 = _1383 * 0.5;
        float _1452 = _1393 * 0.5;
        float _1453 = dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452));
        float _1458 = (_1453 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1453);
        float _1466 = (dot(vec3(_711, _712, _713), vec3(_1458 * _1450, _1458 * _1451, _1458 * _1452)) + 1.0) * 0.5;
        float _4184 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1475 = sqrt(((_1451 * _1451) + (_1450 * _1450)) + (_1452 * _1452)) / (_1406 + 9.9999997473787516355514526367188e-06);
        float _4195 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
        float _1477 = _1476 * 2.0;
        float _1481 = (1.0 - _1476) / (_1476 + 1.0);
        float _4206 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1491 = ((((1.0 - _1482) * (_1477 + 2.0)) * exp2(log2(isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0))) * (_1477 + 1.0))) + _1482) * _1406;
        float _1492 = _1374 * 0.5;
        float _1493 = _1384 * 0.5;
        float _1494 = _1394 * 0.5;
        float _1495 = dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494));
        float _1500 = (_1495 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1495);
        float _1508 = (dot(vec3(_711, _712, _713), vec3(_1500 * _1492, _1500 * _1493, _1500 * _1494)) + 1.0) * 0.5;
        float _4217 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1517 = sqrt(((_1493 * _1493) + (_1492 * _1492)) + (_1494 * _1494)) / (_1407 + 9.9999997473787516355514526367188e-06);
        float _4228 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _4239 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0))) * (_1519 + 1.0))) + _1524) * _1407;
        _1541 = _1374;
        _1542 = _1373;
        _1543 = _1372;
        _1544 = _1384;
        _1545 = _1383;
        _1546 = _1382;
        _1547 = _1394;
        _1548 = _1393;
        _1549 = _1392;
        _1550 = _1407;
        _1551 = _1406;
        _1552 = _1405;
        _1553 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0)));
        _1554 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)));
        _1555 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
    }
    else
    {
        _1541 = _1233;
        _1542 = _1233;
        _1543 = _1233;
        _1544 = _1233;
        _1545 = _1233;
        _1546 = _1233;
        _1547 = _1233;
        _1548 = _1233;
        _1549 = _1233;
        _1550 = _1233;
        _1551 = _1233;
        _1552 = _1233;
        _1553 = 0.0;
        _1554 = 0.0;
        _1555 = 0.0;
    }
    float _1565 = (cbModelParam._m0[1u].x * (_1553 - _1245)) + _1245;
    float _1566 = (cbModelParam._m0[1u].x * (_1554 - _1246)) + _1246;
    float _1567 = (cbModelParam._m0[1u].x * (_1555 - _1247)) + _1247;
    float _1588 = fma(_1567, cbSceneParam._m0[89u].z, fma(_1566, cbSceneParam._m0[89u].y, _1565 * cbSceneParam._m0[89u].x));
    float _1591 = fma(_1567, cbSceneParam._m0[90u].z, fma(_1566, cbSceneParam._m0[90u].y, _1565 * cbSceneParam._m0[90u].x));
    float _1594 = fma(_1567, cbSceneParam._m0[91u].z, fma(_1566, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1565));
    float _1609 = _870 * 0.5;
    float _1610 = _871 * 0.5;
    float _1611 = _872 * 0.5;
    float _1612 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1543, _1546, _1549, _1552));
    float _1615 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1542, _1545, _1548, _1551));
    float _1618 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1541, _1544, _1547, _1550));
    float _1652;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1625 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1232, _1236, _1239, _1242));
        float _1629 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1234, _1237, _1240, _1243));
        float _1633 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1235, _1238, _1241, _1244));
        float _1640 = dot(vec4(cbModelParam._m0[39u]), vec4(_1609, _1610, _1611, 1.0));
        _1652 = dot(vec3(isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)), isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1640) ? 0.0 : (isnan(0.0) ? _1640 : max(0.0, _1640))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1652 = 1.0;
    }
    float _1663;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1654 = dot(vec4(cbModelParam._m0[40u]), vec4(_1609, _1610, _1611, 1.0));
        _1663 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1654) ? 0.0 : (isnan(0.0) ? _1654 : max(0.0, _1654))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1663 = 1.0;
    }
    float _1667 = (_1663 * cbModelParam._m0[1u].x) + (_1652 * (1.0 - cbModelParam._m0[1u].x));
    float _1677 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _714);
    float _1678 = isnan(_1677) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1677 : min(cbModelParam._m0[25u].z, _1677));
    float _1758;
    float _1760;
    float _1762;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1725 = fma(_931, cbModelParam._m0[13u].z, fma(_927, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _923)) + cbModelParam._m0[13u].w;
        float _1729 = fma(_931, cbModelParam._m0[14u].z, fma(_927, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _923)) + cbModelParam._m0[14u].w;
        float _1733 = fma(_931, cbModelParam._m0[15u].z, fma(_927, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _923)) + cbModelParam._m0[15u].w;
        float _1736 = fma(_872, cbModelParam._m0[13u].z, fma(_871, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _870));
        float _1739 = fma(_872, cbModelParam._m0[14u].z, fma(_871, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _870));
        float _1742 = fma(_872, cbModelParam._m0[15u].z, fma(_871, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _870));
        float _1770;
        if (_1736 > 0.0)
        {
            _1770 = abs((1.0 - _1725) / _1736);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1736 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1725 + 1.0) / _1736);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1770 = frontier_phi_14_12_ladder;
        }
        float _1939;
        if (_1739 > 0.0)
        {
            _1939 = abs((1.0 - _1729) / _1739);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1739 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1729 + 1.0) / _1739);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1939 = frontier_phi_23_19_ladder;
        }
        float _2234;
        if (_1742 > 0.0)
        {
            _2234 = abs((1.0 - _1733) / _1742);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1742 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1733 + 1.0) / _1742);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2234 = frontier_phi_35_30_ladder;
        }
        float _2236 = isnan(_1939) ? _1770 : (isnan(_1770) ? _1939 : min(_1770, _1939));
        float _2237 = isnan(_2234) ? _2236 : (isnan(_2236) ? _2234 : min(_2236, _2234));
        float _2241 = (_2237 * _1736) + _1725;
        float _2242 = (_2237 * _1739) + _1729;
        float _2243 = (_2237 * _1742) + _1733;
        float _2244 = _2237 * 9.9999997473787516355514526367188e-05;
        float _2246 = (-1.0) - _2244;
        float _2248 = _2244 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2243 > _2248) || ((_2243 < _2246) || ((_2242 > _2248) || ((_2242 < _2246) || ((_2241 < _2246) || (_2241 > _2248))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2388 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2243, cbModelParam._m0[9u].z, fma(_2242, cbModelParam._m0[9u].y, _2241 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2243, cbModelParam._m0[10u].z, fma(_2242, cbModelParam._m0[10u].y, _2241 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2243, cbModelParam._m0[11u].z, fma(_2242, cbModelParam._m0[11u].y, _2241 * cbModelParam._m0[11u].x))), _1678);
            frontier_phi_13_35_ladder = _2388.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2388.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2388.x * cbModelParam._m0[1u].y;
        }
        _1758 = frontier_phi_13_35_ladder_2;
        _1760 = frontier_phi_13_35_ladder_1;
        _1762 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1746 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_870, _871, _872), _1678);
        _1758 = _1746.x * cbModelParam._m0[1u].y;
        _1760 = _1746.y * cbModelParam._m0[1u].y;
        _1762 = _1746.z * cbModelParam._m0[1u].y;
    }
    float _1766 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _714);
    float _1767 = isnan(_1766) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1766 : min(cbModelParam._m0[25u].w, _1766));
    float _1856;
    float _1858;
    float _1860;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1820 = fma(_931, cbModelParam._m0[21u].z, fma(_927, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _923)) + cbModelParam._m0[21u].w;
        float _1824 = fma(_931, cbModelParam._m0[22u].z, fma(_927, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _923)) + cbModelParam._m0[22u].w;
        float _1828 = fma(_931, cbModelParam._m0[23u].z, fma(_927, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _923)) + cbModelParam._m0[23u].w;
        float _1831 = fma(_872, cbModelParam._m0[21u].z, fma(_871, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _870));
        float _1834 = fma(_872, cbModelParam._m0[22u].z, fma(_871, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _870));
        float _1837 = fma(_872, cbModelParam._m0[23u].z, fma(_871, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _870));
        float _1944;
        if (_1831 > 0.0)
        {
            _1944 = abs((1.0 - _1820) / _1831);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1831 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1820 + 1.0) / _1831);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1944 = frontier_phi_25_21_ladder;
        }
        float _2261;
        if (_1834 > 0.0)
        {
            _2261 = abs((1.0 - _1824) / _1834);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1834 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1824 + 1.0) / _1834);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2261 = frontier_phi_37_32_ladder;
        }
        float _2588;
        if (_1837 > 0.0)
        {
            _2588 = abs((1.0 - _1828) / _1837);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1837 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1828 + 1.0) / _1837);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2588 = frontier_phi_47_44_ladder;
        }
        float _2590 = isnan(_2261) ? _1944 : (isnan(_1944) ? _2261 : min(_1944, _2261));
        float _2591 = isnan(_2588) ? _2590 : (isnan(_2590) ? _2588 : min(_2590, _2588));
        float _2595 = (_2591 * _1831) + _1820;
        float _2596 = (_2591 * _1834) + _1824;
        float _2597 = (_2591 * _1837) + _1828;
        float _2598 = _2591 * 9.9999997473787516355514526367188e-05;
        float _2599 = (-1.0) - _2598;
        float _2601 = _2598 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2597 > _2601) || ((_2597 < _2599) || ((_2596 > _2601) || ((_2596 < _2599) || ((_2595 < _2599) || (_2595 > _2601))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2715 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2597, cbModelParam._m0[17u].z, fma(_2596, cbModelParam._m0[17u].y, _2595 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2597, cbModelParam._m0[18u].z, fma(_2596, cbModelParam._m0[18u].y, _2595 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2597, cbModelParam._m0[19u].z, fma(_2596, cbModelParam._m0[19u].y, _2595 * cbModelParam._m0[19u].x))), _1767);
            frontier_phi_22_47_ladder = _2715.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2715.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2715.x * cbModelParam._m0[1u].z;
        }
        _1856 = frontier_phi_22_47_ladder_2;
        _1858 = frontier_phi_22_47_ladder_1;
        _1860 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1840 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_870, _871, _872), _1767);
        _1856 = _1840.x * cbModelParam._m0[1u].z;
        _1858 = _1840.y * cbModelParam._m0[1u].z;
        _1860 = _1840.z * cbModelParam._m0[1u].z;
    }
    float _1872 = ((((1.0 - _891) * ((_878 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_891 * _878)) * _862;
    float _1873 = _1872 * ((cbModelParam._m0[1u].w * (_1856 - _1758)) + _1758);
    float _1874 = _1872 * ((cbModelParam._m0[1u].w * (_1858 - _1760)) + _1760);
    float _1875 = _1872 * ((cbModelParam._m0[1u].w * (_1860 - _1762)) + _1762);
    float _1878 = fma(_1875, cbSceneParam._m0[89u].z, fma(_1874, cbSceneParam._m0[89u].y, _1873 * cbSceneParam._m0[89u].x));
    float _1881 = fma(_1875, cbSceneParam._m0[90u].z, fma(_1874, cbSceneParam._m0[90u].y, _1873 * cbSceneParam._m0[90u].x));
    float _1884 = fma(_1875, cbSceneParam._m0[91u].z, fma(_1874, cbSceneParam._m0[91u].y, _1873 * cbSceneParam._m0[91u].x));
    float _1918 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1922 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1926 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1930 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1931 = _1918 / _1930;
    float _1932 = _1922 / _1930;
    float _1933 = _1926 / _1930;
    float _2080;
    float _2081;
    float _2082;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1960 = ((uint(_1933 > cbSceneParam._m0[59u].y) + uint(_1933 > cbSceneParam._m0[59u].x)) + uint(_1933 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1961 = _1960 + 43u;
        uint _1969 = _1960 + 44u;
        uint _1977 = _1960 + 45u;
        uint _1985 = _1960 + 46u;
        float _1996 = fma(_1930, cbSceneParam._m0[_1961].w, fma(_1926, cbSceneParam._m0[_1961].z, fma(_1922, cbSceneParam._m0[_1961].y, _1918 * cbSceneParam._m0[_1961].x)));
        float _2000 = fma(_1930, cbSceneParam._m0[_1969].w, fma(_1926, cbSceneParam._m0[_1969].z, fma(_1922, cbSceneParam._m0[_1969].y, _1918 * cbSceneParam._m0[_1969].x)));
        float _2008 = fma(_1930, cbSceneParam._m0[_1985].w, fma(_1926, cbSceneParam._m0[_1985].z, fma(_1922, cbSceneParam._m0[_1985].y, _1918 * cbSceneParam._m0[_1985].x)));
        float _2013 = cbSceneParam._m0[33u].z * _2008;
        float _2015 = cbSceneParam._m0[33u].w * _2008;
        float _2018 = fma(_1930, cbSceneParam._m0[_1977].w, fma(_1926, cbSceneParam._m0[_1977].z, fma(_1922, cbSceneParam._m0[_1977].y, _1918 * cbSceneParam._m0[_1977].x))) / _2008;
        float _2066 = (cbSceneParam._m0[33u].x - sqrt(((_1932 * _1932) + (_1931 * _1931)) + (_1933 * _1933))) * cbSceneParam._m0[33u].y;
        float _4365 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
        float _2073 = (isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2013 + _1996) / _2008, (_2015 + _2000) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2015 + _1996) / _2008, (_2000 - _2013) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 - _2013) / _2008, (_2000 - _2015) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 - _2015) / _2008, (_2013 + _2000) / _2008), _2018), 0.0)).x), vec4(0.25)));
        _2080 = 1.0 - (_2073 * cbSceneParam._m0[34u].x);
        _2081 = 1.0 - (_2073 * cbSceneParam._m0[34u].y);
        _2082 = 1.0 - (_2073 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2080 = 1.0;
        _2081 = 1.0;
        _2082 = 1.0;
    }
    float _2146;
    float _2148;
    float _2150;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2134 = fma(_1930, cbSceneParam._m0[63u].w, fma(_1926, cbSceneParam._m0[63u].z, fma(_1922, cbSceneParam._m0[63u].y, _1918 * cbSceneParam._m0[63u].x)));
        float _2135 = fma(_1930, cbSceneParam._m0[60u].w, fma(_1926, cbSceneParam._m0[60u].z, fma(_1922, cbSceneParam._m0[60u].y, _1918 * cbSceneParam._m0[60u].x))) / _2134;
        float _2136 = fma(_1930, cbSceneParam._m0[61u].w, fma(_1926, cbSceneParam._m0[61u].z, fma(_1922, cbSceneParam._m0[61u].y, _1918 * cbSceneParam._m0[61u].x))) / _2134;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2135 >= cbSceneParam._m0[64u].x) && (_2136 >= cbSceneParam._m0[64u].y)) && (_2135 <= cbSceneParam._m0[64u].z)) && (_2136 <= cbSceneParam._m0[64u].w))
        {
            float _2274 = fma(_1930, cbSceneParam._m0[62u].w, fma(_1926, cbSceneParam._m0[62u].z, fma(_1922, cbSceneParam._m0[62u].y, _1918 * cbSceneParam._m0[62u].x))) / _2134;
            float _2278 = isnan(cbSceneParam._m0[41u].w) ? _2274 : (isnan(_2274) ? cbSceneParam._m0[41u].w : max(_2274, cbSceneParam._m0[41u].w));
            float _2321 = (cbSceneParam._m0[33u].x - sqrt(((_1932 * _1932) + (_1931 * _1931)) + (_1933 * _1933))) * cbSceneParam._m0[33u].y;
            float _4381 = isnan(0.0) ? _2321 : (isnan(_2321) ? 0.0 : max(_2321, 0.0));
            float _2328 = (isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2135, cbSceneParam._m0[33u].w + _2136), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2135, _2136 - cbSceneParam._m0[33u].z), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2135 - cbSceneParam._m0[33u].z, _2136 - cbSceneParam._m0[33u].w), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2135 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2136), _2278), 0.0)).x), vec4(0.25)));
            float _2332 = 1.0 - (_2328 * cbSceneParam._m0[34u].x);
            float _2333 = 1.0 - (_2328 * cbSceneParam._m0[34u].y);
            float _2334 = 1.0 - (_2328 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2334) ? _2082 : (isnan(_2082) ? _2334 : min(_2082, _2334));
            frontier_phi_34_33_ladder_1 = isnan(_2333) ? _2081 : (isnan(_2081) ? _2333 : min(_2081, _2333));
            frontier_phi_34_33_ladder_2 = isnan(_2332) ? _2080 : (isnan(_2080) ? _2332 : min(_2080, _2332));
        }
        else
        {
            frontier_phi_34_33_ladder = _2082;
            frontier_phi_34_33_ladder_1 = _2081;
            frontier_phi_34_33_ladder_2 = _2080;
        }
        _2146 = frontier_phi_34_33_ladder_2;
        _2148 = frontier_phi_34_33_ladder_1;
        _2150 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2146 = _2080;
        _2148 = _2081;
        _2150 = _2082;
    }
    uvec4 _2155 = floatBitsToUint(cbInstanceData._m0[_266 + 5u]);
    uint _2157 = _2155.x * 14u;
    uint _2158 = _2157 + 13u;
    float _2165 = _862 + (-1.0);
    float _2170 = (cbLight._m0[_2158].x * _2165) + 1.0;
    float _2171 = (cbLight._m0[_2158].y * _2165) + 1.0;
    float _2172 = (cbLight._m0[_2158].z * _2165) + 1.0;
    float _2173 = (cbLight._m0[_2158].w * _2165) + 1.0;
    uint _2174 = _2157 + 5u;
    float _2180 = isnan(1.0) ? _2171 : (isnan(_2171) ? 1.0 : min(_2171, 1.0));
    uint _2184 = _2157 + 4u;
    float _2193 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
    uint _2197 = _2157 | 1u;
    float _2208 = dot(vec3(cbLight._m0[_2157].xyz), vec3(_711, _712, _713));
    float _2211 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_711, _712, _713));
    float _4417 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
    float _4428 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
    float _2216 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * 0.3183098733425140380859375;
    float _2218 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2225 = ((cbLight._m0[_2174].x * _2180) * _2218) + (((cbLight._m0[_2184].x * _2146) * _2193) * _2216);
    float _2226 = ((_2180 * cbLight._m0[_2174].y) * _2218) + (((cbLight._m0[_2184].y * _2148) * _2193) * _2216);
    float _2227 = ((_2180 * cbLight._m0[_2174].z) * _2218) + (((cbLight._m0[_2184].z * _2150) * _2193) * _2216);
    uvec4 _2231 = floatBitsToUint(cbLight._m0[_2157 + 12u]);
    bool _2233 = _2231.x == 0u;
    float _2335;
    float _2337;
    float _2339;
    if (_2233)
    {
        _2335 = _2225;
        _2337 = _2226;
        _2339 = _2227;
    }
    else
    {
        uint _2343 = _2157 + 6u;
        float _2359 = (dot(vec3(cbLight._m0[_2157 + 2u].xyz), vec3(_711, _712, _713)) * 0.5) + 0.5;
        float _2360 = _2359 * _2359;
        float _4439 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
        float _2361 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _2362 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2335 = (((cbLight._m0[_2343].x * 0.3183098733425140380859375) * _2361) * _2362) + _2225;
        _2337 = (((cbLight._m0[_2343].y * 0.3183098733425140380859375) * _2361) * _2362) + _2226;
        _2339 = (((cbLight._m0[_2343].z * 0.3183098733425140380859375) * _2361) * _2362) + _2227;
    }
    bool _2342 = _2231.y == 0u;
    float _2397;
    float _2399;
    float _2401;
    if (_2342)
    {
        _2397 = _2335;
        _2399 = _2337;
        _2401 = _2339;
    }
    else
    {
        uint _2559 = _2157 + 7u;
        float _2575 = (dot(vec3(cbLight._m0[_2157 + 3u].xyz), vec3(_711, _712, _713)) * 0.5) + 0.5;
        float _2576 = _2575 * _2575;
        float _4455 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
        float _2577 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _2578 = isnan(1.0) ? _2173 : (isnan(_2173) ? 1.0 : min(_2173, 1.0));
        _2397 = (((cbLight._m0[_2559].x * 0.3183098733425140380859375) * _2577) * _2578) + _2335;
        _2399 = (((cbLight._m0[_2559].y * 0.3183098733425140380859375) * _2577) * _2578) + _2337;
        _2401 = (((cbLight._m0[_2559].z * 0.3183098733425140380859375) * _2577) * _2578) + _2339;
    }
    uint _2404 = _2157 + 8u;
    float _2417 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2157].w)) * _714) * 0.949999988079071044921875);
    float _2418 = _2417 * _2417;
    float _2419 = cbLight._m0[_2157].x + _791;
    float _2420 = cbLight._m0[_2157].y + _792;
    float _2421 = cbLight._m0[_2157].z + _793;
    float _2425 = inversesqrt(dot(vec3(_2419, _2420, _2421), vec3(_2419, _2420, _2421)));
    float _2426 = _2425 * _2419;
    float _2427 = _2425 * _2420;
    float _2428 = _2425 * _2421;
    float _2429 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2157].xyz));
    float _4471 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2432 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _4482 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _2433 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _2434 = dot(vec3(_711, _712, _713), vec3(_2426, _2427, _2428));
    float _4493 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
    float _2437 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2438 = dot(vec3(cbLight._m0[_2157].xyz), vec3(_2426, _2427, _2428));
    float _4504 = isnan(0.0) ? _2438 : (isnan(_2438) ? 0.0 : max(_2438, 0.0));
    float _2442 = _2418 * _2418;
    float _2446 = ((_2437 * _2437) * (_2442 + (-1.0))) + 1.0;
    float _2457 = (exp2(log2(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2458 = 1.0 - _2418;
    float _2469 = (0.5 / (((_2433 * ((_2432 * _2458) + _2418)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2458) + _2418) * _2432))) * _2432;
    float _4515 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
    float _2471 = (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))) * (_2442 / ((_2446 * _2446) * 3.141590118408203125));
    uint _2485 = _2157 + 9u;
    float _2496 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2197].w)) * _714) * 0.949999988079071044921875);
    float _2497 = _2496 * _2496;
    float _2498 = cbLight._m0[_2197].x + _791;
    float _2499 = cbLight._m0[_2197].y + _792;
    float _2500 = cbLight._m0[_2197].z + _793;
    float _2504 = inversesqrt(dot(vec3(_2498, _2499, _2500), vec3(_2498, _2499, _2500)));
    float _2505 = _2504 * _2498;
    float _2506 = _2504 * _2499;
    float _2507 = _2504 * _2500;
    float _2508 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2197].xyz));
    float _4526 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _2512 = dot(vec3(_711, _712, _713), vec3(_2505, _2506, _2507));
    float _4537 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2515 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2516 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_2505, _2506, _2507));
    float _4548 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2520 = _2497 * _2497;
    float _2524 = ((_2515 * _2515) * (_2520 + (-1.0))) + 1.0;
    float _2533 = (exp2(log2(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2534 = 1.0 - _2497;
    float _2544 = (0.5 / (((_2433 * ((_2511 * _2534) + _2497)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2534) + _2497) * _2511))) * _2511;
    float _4559 = isnan(0.0) ? _2544 : (isnan(_2544) ? 0.0 : max(_2544, 0.0));
    float _2546 = (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0))) * (_2520 / ((_2524 * _2524) * 3.141590118408203125));
    float _2556 = (((_2533 * cbLight._m0[_2485].x) * _2546) * _2180) + ((((cbLight._m0[_2404].x * _2146) * _2457) * _2471) * _2193);
    float _2557 = (((_2533 * cbLight._m0[_2485].y) * _2546) * _2180) + ((((cbLight._m0[_2404].y * _2148) * _2457) * _2471) * _2193);
    float _2558 = (((_2533 * cbLight._m0[_2485].z) * _2546) * _2180) + ((((cbLight._m0[_2404].z * _2150) * _2457) * _2471) * _2193);
    float _2614;
    float _2616;
    float _2618;
    if (_2233)
    {
        _2614 = _2556;
        _2616 = _2557;
        _2618 = _2558;
    }
    else
    {
        uint _2620 = _2157 + 2u;
        uint _2624 = _2157 + 10u;
        float _2638 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2620].w)) * _714) * 0.949999988079071044921875);
        float _2639 = _2638 * _2638;
        float _2640 = cbLight._m0[_2620].x + _791;
        float _2641 = cbLight._m0[_2620].y + _792;
        float _2642 = cbLight._m0[_2620].z + _793;
        float _2646 = inversesqrt(dot(vec3(_2640, _2641, _2642), vec3(_2640, _2641, _2642)));
        float _2647 = _2646 * _2640;
        float _2648 = _2646 * _2641;
        float _2649 = _2646 * _2642;
        float _2650 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2620].xyz));
        float _4570 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        float _2653 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
        float _2654 = dot(vec3(_711, _712, _713), vec3(_2647, _2648, _2649));
        float _4581 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2657 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2658 = dot(vec3(cbLight._m0[_2620].xyz), vec3(_2647, _2648, _2649));
        float _4592 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
        float _2662 = _2639 * _2639;
        float _2666 = ((_2657 * _2657) * (_2662 + (-1.0))) + 1.0;
        float _2675 = (exp2(log2(1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2676 = 1.0 - _2639;
        float _2686 = (0.5 / (((_2433 * ((_2653 * _2676) + _2639)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2676) + _2639) * _2653))) * _2653;
        float _4603 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2688 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2662 / ((_2666 * _2666) * 3.141590118408203125));
        float _2689 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2614 = (((_2675 * cbLight._m0[_2624].x) * _2688) * _2689) + _2556;
        _2616 = (((_2675 * cbLight._m0[_2624].y) * _2688) * _2689) + _2557;
        _2618 = (((_2675 * cbLight._m0[_2624].z) * _2688) * _2689) + _2558;
    }
    float _2720;
    float _2722;
    float _2724;
    if (_2342)
    {
        _2720 = _2614;
        _2722 = _2616;
        _2724 = _2618;
    }
    else
    {
        uint _2731 = _2157 + 3u;
        uint _2735 = _2157 + 11u;
        float _2749 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2731].w)) * _714) * 0.949999988079071044921875);
        float _2750 = _2749 * _2749;
        float _2751 = cbLight._m0[_2731].x + _791;
        float _2752 = cbLight._m0[_2731].y + _792;
        float _2753 = cbLight._m0[_2731].z + _793;
        float _2757 = inversesqrt(dot(vec3(_2751, _2752, _2753), vec3(_2751, _2752, _2753)));
        float _2758 = _2757 * _2751;
        float _2759 = _2757 * _2752;
        float _2760 = _2757 * _2753;
        float _2761 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2731].xyz));
        float _4619 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2764 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _2765 = dot(vec3(_711, _712, _713), vec3(_2758, _2759, _2760));
        float _4630 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2768 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2769 = dot(vec3(cbLight._m0[_2731].xyz), vec3(_2758, _2759, _2760));
        float _4641 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2773 = _2750 * _2750;
        float _2777 = ((_2768 * _2768) * (_2773 + (-1.0))) + 1.0;
        float _2786 = (exp2(log2(1.0 - (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2787 = 1.0 - _2750;
        float _2797 = (0.5 / (((_2433 * ((_2764 * _2787) + _2750)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2787) + _2750) * _2764))) * _2764;
        float _4652 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2799 = (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0))) * (_2773 / ((_2777 * _2777) * 3.141590118408203125));
        float _2800 = isnan(1.0) ? _2173 : (isnan(_2173) ? 1.0 : min(_2173, 1.0));
        _2720 = (((_2786 * cbLight._m0[_2735].x) * _2799) * _2800) + _2614;
        _2722 = (((_2786 * cbLight._m0[_2735].y) * _2799) * _2800) + _2616;
        _2724 = (((_2786 * cbLight._m0[_2735].z) * _2799) * _2800) + _2618;
    }
    float _2866;
    float _2868;
    float _2870;
    float _2872;
    float _2874;
    float _2876;
    if (_2155.y == 0u)
    {
        uvec4 _2821 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2822 = _2821.x;
        uint _2833 = uint((float(_2821.y) * floor(float(uint(cbSceneParam._m0[85u].y * _800) / _2822))) + floor(float(uint(cbSceneParam._m0[85u].x * _799) / _2822)));
        float _2843 = (log2(_1933 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2844 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
        uint _2847 = uint(isnan(14.0) ? _2844 : (isnan(_2844) ? 14.0 : min(_2844, 14.0)));
        uvec4 _2852 = texelFetch(g_lightClusterGridBuffer, int(((_2847 << 2u) + (_2833 << 6u)) >> 2u));
        uint _2853 = _2852.x;
        uint _2854 = _2821.z;
        float _2933;
        float _2935;
        float _2937;
        float _2939;
        float _2941;
        float _2943;
        if (((((1u << ((_2854 >> 4u) & 15u)) + 4294967295u) & _2853) == 0u) || ((_2854 & 240u) == 0u))
        {
            _2933 = 0.0;
            _2935 = 0.0;
            _2937 = 0.0;
            _2939 = 0.0;
            _2941 = 0.0;
            _2943 = 0.0;
        }
        else
        {
            float _2934;
            float _2936;
            float _2938;
            float _2940;
            float _2942;
            float _2944;
            float _3078 = 0.0;
            float _3079 = 0.0;
            float _3080 = 0.0;
            float _3081 = 0.0;
            float _3082 = 0.0;
            float _3083 = 0.0;
            uint _3084 = 0u;
            uint _3093;
            bool _3094;
            for (;;)
            {
                _3093 = texelFetch(g_lightClassification, int((((_2847 << 5u) + (_2833 << 9u)) + (_3084 << 2u)) >> 2u)).x;
                _3094 = _3093 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3094)
                {
                    frontier_phi_66_pred = _3083;
                    frontier_phi_66_pred_1 = _3082;
                    frontier_phi_66_pred_2 = _3081;
                    frontier_phi_66_pred_3 = _3080;
                    frontier_phi_66_pred_4 = _3079;
                    frontier_phi_66_pred_5 = _3078;
                }
                else
                {
                    float _3202;
                    float _3203;
                    float _3204;
                    float _3205;
                    float _3206;
                    float _3207;
                    uint _3208;
                    _3202 = _3078;
                    _3203 = _3079;
                    _3204 = _3080;
                    _3205 = _3081;
                    _3206 = _3082;
                    _3207 = _3083;
                    _3208 = _3093;
                    float _3134;
                    float _3135;
                    float _3136;
                    float _3137;
                    float _3138;
                    float _3139;
                    for (;;)
                    {
                        uint _3212 = uint(findLSB(_3208)) + (_3084 << 5u);
                        uint _3209 = (_3208 + 4294967295u) & _3208;
                        uint _3214 = _3212 * 48u;
                        vec4 _3228 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3214)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 3u)).x));
                        uint _3234 = (_3212 * 48u) + 4u;
                        vec4 _3247 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3234)).x, texelFetch(g_PointLightRenderingBuffer, int(_3234 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3234 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3234 + 3u)).x));
                        uint _3253 = (_3212 * 48u) + 8u;
                        vec3 _3264 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3253)).x, texelFetch(g_PointLightRenderingBuffer, int(_3253 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3253 + 2u)).x));
                        float _3268 = _3228.x - _1931;
                        float _3269 = _3228.y - _1932;
                        float _3270 = _3228.z - _1933;
                        float _3271 = dot(vec3(_3268, _3269, _3270), vec3(_3268, _3269, _3270));
                        float _3274 = inversesqrt(_3271);
                        float _3275 = _3274 * _3268;
                        float _3276 = _3274 * _3269;
                        float _3277 = _3274 * _3270;
                        float _3278 = dot(vec3(_818, _821, _824), vec3(_3275, _3276, _3277));
                        float _3283 = 1.0 - (_3271 * _3228.w);
                        float _4678 = isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : max(_3283, 0.0));
                        float _3284 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                        float _3285 = sqrt(_3271) * _3247.w;
                        float _3288 = 1.39999997615814208984375 / (_3285 + 1.39999997615814208984375);
                        float _3289 = _3288 * _3288;
                        float _3292 = ((1.0 - _3289) * _3278) + _3289;
                        float _3295 = _3285 * _3285;
                        float _3299 = ((isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : max(_3292, 0.0))) * _3284) / ((_3295 * 0.699999988079071044921875) + 1.0);
                        float _3303 = (-0.0) - _1931;
                        float _3304 = (-0.0) - _1932;
                        float _3305 = (-0.0) - _1933;
                        float _3309 = inversesqrt(dot(vec3(_3303, _3304, _3305), vec3(_3303, _3304, _3305)));
                        float _3310 = _3309 * _3303;
                        float _3311 = _3309 * _3304;
                        float _3312 = _3309 * _3305;
                        float _3319 = exp2(log2(1.0 / ((_3295 * 3.5) + 5.0)) * 0.25);
                        float _3320 = 1.0 - _878;
                        float _3327 = sqrt(1.0 - ((1.0 - (_3320 * _3320)) * (1.0 - (_3319 * _3319))));
                        float _3328 = _3327 * _3327;
                        float _3329 = _3328 * _3328;
                        float _3330 = _3310 + _3275;
                        float _3331 = _3311 + _3276;
                        float _3332 = _3312 + _3277;
                        float _3336 = inversesqrt(dot(vec3(_3330, _3331, _3332), vec3(_3330, _3331, _3332)));
                        float _3340 = dot(vec3(_818, _821, _824), vec3(_3310, _3311, _3312));
                        float _4694 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0));
                        float _3343 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                        float _3344 = dot(vec3(_818, _821, _824), vec3(_3336 * _3330, _3336 * _3331, _3336 * _3332));
                        float _4705 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0));
                        float _3347 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3351 = ((_3347 * _3347) * (_3329 + (-1.0))) + 1.0;
                        float _3352 = _3288 * _3328;
                        float _3353 = _3352 * _3352;
                        float _3356 = ((1.0 - _3353) * _3278) + _3353;
                        float _4716 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
                        float _3357 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3358 = 1.0 - _3328;
                        float _3368 = (0.5 / (((_3357 * ((_3343 * _3358) + _3328)) + 9.9999999392252902907785028219223e-09) + (((_3357 * _3358) + _3328) * _3343))) * _3357;
                        float _4727 = isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : max(_3368, 0.0));
                        float _3379 = (((_3329 * 3.1415927410125732421875) * (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0)))) / ((_3351 * _3351) * ((_3295 * 2.1991131305694580078125) + 3.141590118408203125))) * _3284;
                        _3137 = (_3299 * _3247.x) + _3205;
                        _3138 = (_3299 * _3247.y) + _3206;
                        _3139 = (_3299 * _3247.z) + _3207;
                        _3134 = (_3379 * _3264.x) + _3202;
                        _3135 = (_3379 * _3264.y) + _3203;
                        _3136 = (_3379 * _3264.z) + _3204;
                        if (_3209 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3202 = _3134;
                            _3203 = _3135;
                            _3204 = _3136;
                            _3205 = _3137;
                            _3206 = _3138;
                            _3207 = _3139;
                            _3208 = _3209;
                        }
                    }
                    frontier_phi_66_pred = _3139;
                    frontier_phi_66_pred_1 = _3138;
                    frontier_phi_66_pred_2 = _3137;
                    frontier_phi_66_pred_3 = _3136;
                    frontier_phi_66_pred_4 = _3135;
                    frontier_phi_66_pred_5 = _3134;
                }
                _2944 = frontier_phi_66_pred;
                _2942 = frontier_phi_66_pred_1;
                _2940 = frontier_phi_66_pred_2;
                _2938 = frontier_phi_66_pred_3;
                _2936 = frontier_phi_66_pred_4;
                _2934 = frontier_phi_66_pred_5;
                uint _3085 = _3084 + 1u;
                if (_3085 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3078 = _2934;
                    _3079 = _2936;
                    _3080 = _2938;
                    _3081 = _2940;
                    _3082 = _2942;
                    _3083 = _2944;
                    _3084 = _3085;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2933 = _2934;
            _2935 = _2936;
            _2937 = _2938;
            _2939 = _2940;
            _2941 = _2942;
            _2943 = _2944;
        }
        uvec4 _2947 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2948 = _2947.z;
        uint _2950 = (_2948 >> 8u) & 15u;
        float _3046;
        float _3048;
        float _3050;
        float _3052;
        float _3054;
        float _3056;
        if (((4294967295u << _2950) & _2853) == 0u)
        {
            _3046 = _2933;
            _3048 = _2935;
            _3050 = _2937;
            _3052 = _2939;
            _3054 = _2941;
            _3056 = _2943;
        }
        else
        {
            float _3071 = inversesqrt(dot(vec3(_1931, _1932, _1933), vec3(_1931, _1932, _1933)));
            float _3072 = _3071 * _1931;
            float _3073 = _3071 * _1932;
            float _3074 = _3071 * _1933;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2950 < ((_2948 >> 12u) & 15u))
            {
                float _3047;
                float _3049;
                float _3051;
                float _3053;
                float _3055;
                float _3057;
                float _3185 = _2933;
                float _3186 = _2935;
                float _3187 = _2937;
                float _3188 = _2939;
                float _3189 = _2941;
                float _3190 = _2943;
                uint _3191 = _2950;
                uint _3200;
                bool _3201;
                for (;;)
                {
                    _3200 = texelFetch(g_lightClassification, int((((_2847 << 5u) + (_2833 << 9u)) + (_3191 << 2u)) >> 2u)).x;
                    _3201 = _3200 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3201)
                    {
                        frontier_phi_72_pred = _3190;
                        frontier_phi_72_pred_1 = _3189;
                        frontier_phi_72_pred_2 = _3188;
                        frontier_phi_72_pred_3 = _3187;
                        frontier_phi_72_pred_4 = _3186;
                        frontier_phi_72_pred_5 = _3185;
                    }
                    else
                    {
                        float _3384;
                        float _3385;
                        float _3386;
                        float _3387;
                        float _3388;
                        float _3389;
                        float _3677;
                        float _3678;
                        float _3679;
                        float _3680;
                        float _3681;
                        float _3682;
                        float _3397 = _3185;
                        float _3398 = _3186;
                        float _3399 = _3187;
                        float _3400 = _3188;
                        float _3401 = _3189;
                        float _3402 = _3190;
                        uint _3403 = _3200;
                        uint _3404;
                        vec4 _3429;
                        float _3430;
                        vec4 _3445;
                        vec3 _3457;
                        vec4 _3472;
                        vec4 _3487;
                        float _3533;
                        bool _3534;
                        for (;;)
                        {
                            uint _3414 = ((_3191 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3403));
                            _3404 = (_3403 + 4294967295u) & _3403;
                            uint _3416 = _3414 * 40u;
                            _3429 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3416)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 3u)).x));
                            _3430 = _3429.w;
                            uint _3432 = (_3414 * 40u) + 4u;
                            _3445 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3432)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 3u)).x));
                            uint _3447 = (_3414 * 40u) + 8u;
                            _3457 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3447)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 2u)).x));
                            uint _3459 = (_3414 * 40u) + 16u;
                            _3472 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3459)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 3u)).x));
                            uint _3474 = (_3414 * 40u) + 20u;
                            _3487 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3474)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3474 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3474 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3474 + 3u)).x));
                            uint _3489 = (_3414 * 40u) + 24u;
                            vec4 _3502 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3489)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 3u)).x));
                            uint _3508 = (_3414 * 40u) + 28u;
                            vec4 _3521 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3508)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 3u)).x));
                            _3533 = fma(_1933, _3521.z, fma(_1932, _3521.y, _3521.x * _1931)) + _3521.w;
                            _3534 = !((fma(_1933, _3502.z, fma(_1932, _3502.y, _3502.x * _1931)) + _3502.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3534)
                            {
                                float _3561 = _3429.x - _1931;
                                float _3562 = _3429.y - _1932;
                                float _3563 = _3429.z - _1933;
                                float _3564 = dot(vec3(_3561, _3562, _3563), vec3(_3561, _3562, _3563));
                                float _3567 = inversesqrt(_3564);
                                float _3568 = _3567 * _3561;
                                float _3569 = _3567 * _3562;
                                float _3570 = _3567 * _3563;
                                float _3574 = 1.0 - (_3564 / (_3430 * _3430));
                                float _4738 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                                float _3575 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                                float _3579 = sqrt(_3564) * _3445.w;
                                float _3581 = 1.39999997615814208984375 / (_3579 + 1.39999997615814208984375);
                                float _3582 = _3581 * _3581;
                                float _3585 = ((1.0 - _3582) * dot(vec3(_3568, _3569, _3570), vec3(_818, _821, _824))) + _3582;
                                float _3588 = _3579 * _3579;
                                float _3592 = (fma(_1933, _3472.z, fma(_1932, _3472.y, _3472.x * _1931)) + _3472.w) / _3533;
                                float _3593 = (fma(_1933, _3487.z, fma(_1932, _3487.y, _3487.x * _1931)) + _3487.w) / _3533;
                                float _3597 = 1.0 - dot(vec2(_3592, _3593), vec2(_3592, _3593));
                                float _4754 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0));
                                float _3598 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                                float _3599 = _3598 * (((isnan(0.0) ? _3585 : (isnan(_3585) ? 0.0 : max(_3585, 0.0))) * _3575) / ((_3588 * 0.699999988079071044921875) + 1.0));
                                float _3611 = exp2(log2(1.0 / ((_3588 * 3.5) + 5.0)) * 0.25);
                                float _3612 = 1.0 - _878;
                                float _3619 = sqrt(1.0 - ((1.0 - (_3612 * _3612)) * (1.0 - (_3611 * _3611))));
                                float _3620 = _3619 * _3619;
                                float _3621 = _3620 * _3620;
                                float _3622 = _3568 - _3072;
                                float _3623 = _3569 - _3073;
                                float _3624 = _3570 - _3074;
                                float _3628 = inversesqrt(dot(vec3(_3622, _3623, _3624), vec3(_3622, _3623, _3624)));
                                float _3632 = dot(vec3(_818, _821, _824), vec3((-0.0) - _3072, (-0.0) - _3073, (-0.0) - _3074));
                                float _4765 = isnan(0.0) ? _3632 : (isnan(_3632) ? 0.0 : max(_3632, 0.0));
                                float _3635 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3636 = dot(vec3(_818, _821, _824), vec3(_3628 * _3622, _3628 * _3623, _3628 * _3624));
                                float _4776 = isnan(0.0) ? _3636 : (isnan(_3636) ? 0.0 : max(_3636, 0.0));
                                float _3639 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3643 = ((_3639 * _3639) * (_3621 + (-1.0))) + 1.0;
                                float _3644 = _3581 * _3620;
                                float _3645 = _3644 * _3644;
                                float _3651 = ((1.0 - _3645) * dot(vec3(_818, _821, _824), vec3(_3568, _3569, _3570))) + _3645;
                                float _4787 = isnan(0.0) ? _3651 : (isnan(_3651) ? 0.0 : max(_3651, 0.0));
                                float _3652 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3653 = 1.0 - _3620;
                                float _3663 = (0.5 / (((_3652 * ((_3635 * _3653) + _3620)) + 9.9999999392252902907785028219223e-09) + (((_3652 * _3653) + _3620) * _3635))) * _3652;
                                float _4798 = isnan(0.0) ? _3663 : (isnan(_3663) ? 0.0 : max(_3663, 0.0));
                                float _3673 = (_3598 * _3575) * (((_3621 * 3.1415927410125732421875) * (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0)))) / ((_3643 * _3643) * ((_3588 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3599 * _3445.y;
                                frontier_phi_78_pred_1 = _3599 * _3445.x;
                                frontier_phi_78_pred_2 = _3673 * _3457.z;
                                frontier_phi_78_pred_3 = _3673 * _3457.y;
                                frontier_phi_78_pred_4 = _3673 * _3457.x;
                                frontier_phi_78_pred_5 = _3599 * _3445.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3681 = frontier_phi_78_pred;
                            _3680 = frontier_phi_78_pred_1;
                            _3679 = frontier_phi_78_pred_2;
                            _3678 = frontier_phi_78_pred_3;
                            _3677 = frontier_phi_78_pred_4;
                            _3682 = frontier_phi_78_pred_5;
                            _3387 = _3680 + _3400;
                            _3388 = _3681 + _3401;
                            _3389 = _3682 + _3402;
                            _3384 = _3677 + _3397;
                            _3385 = _3678 + _3398;
                            _3386 = _3679 + _3399;
                            if (_3404 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3397 = _3384;
                                _3398 = _3385;
                                _3399 = _3386;
                                _3400 = _3387;
                                _3401 = _3388;
                                _3402 = _3389;
                                _3403 = _3404;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3389;
                        frontier_phi_72_pred_1 = _3388;
                        frontier_phi_72_pred_2 = _3387;
                        frontier_phi_72_pred_3 = _3386;
                        frontier_phi_72_pred_4 = _3385;
                        frontier_phi_72_pred_5 = _3384;
                    }
                    _3057 = frontier_phi_72_pred;
                    _3055 = frontier_phi_72_pred_1;
                    _3053 = frontier_phi_72_pred_2;
                    _3051 = frontier_phi_72_pred_3;
                    _3049 = frontier_phi_72_pred_4;
                    _3047 = frontier_phi_72_pred_5;
                    uint _3192 = _3191 + 1u;
                    if (_3192 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3185 = _3047;
                        _3186 = _3049;
                        _3187 = _3051;
                        _3188 = _3053;
                        _3189 = _3055;
                        _3190 = _3057;
                        _3191 = _3192;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3057;
                frontier_phi_60_61_ladder_1 = _3055;
                frontier_phi_60_61_ladder_2 = _3051;
                frontier_phi_60_61_ladder_3 = _3049;
                frontier_phi_60_61_ladder_4 = _3047;
                frontier_phi_60_61_ladder_5 = _3053;
            }
            else
            {
                frontier_phi_60_61_ladder = _2943;
                frontier_phi_60_61_ladder_1 = _2941;
                frontier_phi_60_61_ladder_2 = _2937;
                frontier_phi_60_61_ladder_3 = _2935;
                frontier_phi_60_61_ladder_4 = _2933;
                frontier_phi_60_61_ladder_5 = _2939;
            }
            _3046 = frontier_phi_60_61_ladder_4;
            _3048 = frontier_phi_60_61_ladder_3;
            _3050 = frontier_phi_60_61_ladder_2;
            _3052 = frontier_phi_60_61_ladder_5;
            _3054 = frontier_phi_60_61_ladder_1;
            _3056 = frontier_phi_60_61_ladder;
        }
        float _3061 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
        _2866 = (_3061 * _3052) + _2397;
        _2868 = (_3061 * _3054) + _2399;
        _2870 = (_3061 * _3056) + _2401;
        _2872 = ((_3046 * 0.039999999105930328369140625) * _3061) + _2720;
        _2874 = ((_3048 * 0.039999999105930328369140625) * _3061) + _2722;
        _2876 = ((_3050 * 0.039999999105930328369140625) * _3061) + _2724;
    }
    else
    {
        _2866 = _2397;
        _2868 = _2399;
        _2870 = _2401;
        _2872 = _2720;
        _2874 = _2722;
        _2876 = _2724;
    }
    float _4814 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4825 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4836 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    uint _2896 = _266 + 6u;
    float _2904 = _799 / cbSceneParam._m0[86u].x;
    float _2905 = _800 / cbSceneParam._m0[86u].y;
    vec4 _2919 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2904, _2905, (log2((isnan(cbSceneParam._m0[77u].w) ? _732 : (isnan(_732) ? cbSceneParam._m0[77u].w : min(_732, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2921 = _2919.x;
    float _2922 = _2919.y;
    float _2923 = _2919.z;
    float _2924 = _2919.w;
    float _2996;
    float _2998;
    float _3000;
    float _3002;
    if (_732 > cbSceneParam._m0[78u].w)
    {
        float _2958 = isnan(_732) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _732 : min(cbSceneParam._m0[80u].w, _732));
        float _2959 = _2958 / _732;
        float _2970 = _2959 * _784;
        float _2971 = _785 * _2959;
        float _2972 = (-0.0) - _2971;
        float _2974 = _2959 * _786;
        float _2976 = (cbSceneParam._m0[77u].w * _2972) / _2958;
        float _2977 = _2976 + cbSceneParam._m0[79u].w;
        float _2978 = cbSceneParam._m0[79u].w - _2971;
        float _2984 = sqrt(((_2970 * _2970) + (_2971 * _2971)) + (_2974 * _2974));
        float _2987 = (1.0 - (cbSceneParam._m0[77u].w / _2958)) * _2984;
        float _2992 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2994 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3147;
        if (abs((_2972 - _2976) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3147 = ((((_2977 > 0.0) ? exp2(_2992 * _2977) : (2.0 - exp2(_2994 * _2977))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2987;
        }
        else
        {
            float _3107 = 1.0 / cbSceneParam._m0[80u].x;
            float _3108 = isnan(_2978) ? _2977 : (isnan(_2977) ? _2978 : max(_2977, _2978));
            float _3109 = isnan(_2978) ? _2977 : (isnan(_2977) ? _2978 : min(_2977, _2978));
            float _3118 = isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : min(_3108, 0.0));
            float _3119 = isnan(0.0) ? _3109 : (isnan(_3109) ? 0.0 : min(_3109, 0.0));
            _3147 = ((abs(_2984 / _2972) * cbSceneParam._m0[80u].y) * ((((_3118 - _3119) * 2.0) - ((exp2(_2992 * (isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : max(_3108, 0.0)))) - exp2(_2992 * (isnan(0.0) ? _3109 : (isnan(_3109) ? 0.0 : max(_3109, 0.0))))) * _3107)) - ((exp2(_2994 * _3118) - exp2(_2994 * _3119)) * _3107))) + (_2987 * cbSceneParam._m0[80u].z);
        }
        vec4 _3149 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2904, _2905, 1.0), 0.0);
        float _3158 = exp2((_3147 * (-1.44269502162933349609375)) * (1.0 - _3149.w));
        float _3159 = log2(_3158);
        float _3175 = log2(_2924);
        _2996 = (exp2(_3175 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3159 * cbSceneParam._m0[78u].x)) * _3149.x) / cbSceneParam._m0[78u].x)) + _2921;
        _2998 = (exp2(_3175 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3159 * cbSceneParam._m0[78u].y)) * _3149.y) / cbSceneParam._m0[78u].y)) + _2922;
        _3000 = (exp2(_3175 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3159 * cbSceneParam._m0[78u].z)) * _3149.z) / cbSceneParam._m0[78u].z)) + _2923;
        _3002 = _3158 * _2924;
    }
    else
    {
        _2996 = _2921;
        _2998 = _2922;
        _3000 = _2923;
        _3002 = _2924;
    }
    float _3014 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3015 = _3014 == 3.0;
    float _3016 = log2(_3002);
    float _3023 = exp2(_3016 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0))) * (_2866 + ((isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0))) * _862))) + ((_2872 + ((isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))) * _1667)) * cbPerFrame._m0[3u].x));
    float _3024 = exp2(_3016 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2868 + ((isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))) * _862))) + ((_2874 + ((isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))) * _1667)) * cbPerFrame._m0[3u].x));
    float _3025 = exp2(_3016 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2870 + ((isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0))) * _862))) + ((_2876 + ((isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0))) * _1667)) * cbPerFrame._m0[3u].x));
    float _3034 = (_3014 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3034 * (_3015 ? _3023 : (_3023 + (cbSceneParam._m0[72u].w * _2996)));
    SV_Target.y = _3034 * (_3015 ? _3024 : (_3024 + (cbSceneParam._m0[72u].w * _2998)));
    SV_Target.z = _3034 * (_3015 ? _3025 : (_3025 + (cbSceneParam._m0[72u].w * _3000)));
    SV_Target.w = cbInstanceData._m0[_2896].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2896].w;
}


