#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1245;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _228 = _227 * _219;
    float _229 = _227 * _220;
    float _230 = _227 * _221;
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _235 = _234 * NORMAL.x;
    float _236 = _234 * NORMAL.y;
    float _237 = _234 * NORMAL.z;
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _242 = _241 * TANGENT.x;
    float _243 = _241 * TANGENT.y;
    float _244 = _241 * TANGENT.z;
    uint _247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _252 = _247 + 1u;
    uint _256 = _247 + 2u;
    float _265 = sqrt(((cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x) + (cbInstanceData._m0[_247].x * cbInstanceData._m0[_247].x)) + (cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x));
    float _266 = _265 * TEXCOORD.z;
    float _267 = _265 * TEXCOORD.w;
    vec4 _287 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _293 = _287.x * cbMtdParam._m0[11u].x;
    float _294 = _287.y * cbMtdParam._m0[11u].y;
    float _295 = _287.z * cbMtdParam._m0[11u].z;
    vec4 _314 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _266) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _267) + cbTextureTilingScale._m0[5u].w));
    vec4 _352 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _354 = _352.x;
    float _364 = dot(vec4(_354, _352.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _381 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_354 - _364) * cbMtdParam._m0[24u].x) + _364) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3832 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _382 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
    float _389 = (_382 * ((_314.x * cbMtdParam._m0[12u].x) - _293)) + _293;
    float _390 = (_382 * ((_314.y * cbMtdParam._m0[12u].y) - _294)) + _294;
    float _391 = (_382 * ((_314.z * cbMtdParam._m0[12u].z) - _295)) + _295;
    vec4 _410 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _266) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _267) + cbTextureTilingScale._m0[14u].w));
    vec4 _430 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _266) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _267) + cbTextureTilingScale._m0[4u].w));
    vec4 _447 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _449 = _447.x;
    float _450 = _447.y;
    float _451 = _447.z;
    float _460 = ((_430.z - _451) * _382) + _451;
    float _463 = ((((_430.x - _449) * _382) + _449) * 2.0) + (-1.0);
    float _465 = ((((_430.y - _450) * _382) + _450) * 2.0) + (-1.0);
    float _466 = dot(vec2(_463, _465), vec2(_463, _465));
    float _3843 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _471 = sqrt(1.0 - (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))));
    float _474 = fma(_471, _235, fma(_465, _242, _463 * _228));
    float _477 = fma(_471, _236, fma(_465, _243, _463 * _229));
    float _480 = fma(_471, _237, fma(_465, _244, _463 * _230));
    float _484 = inversesqrt(dot(vec3(_474, _477, _480), vec3(_474, _477, _480)));
    vec4 _500 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _528 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _266) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _267) + cbTextureTilingScale._m0[11u].w));
    float _530 = _528.x;
    float _531 = 1.0 - _530;
    float _537 = (cbMtdParam._m0[19u].x + dot(vec4(_484 * _474, _484 * _477, _484 * _480, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_530 - _531) * cbMtdParam._m0[24u].z) + _531) * cbMtdParam._m0[21u].z);
    float _3854 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _538 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _540 = (-0.0) - cbMtdParam._m0[24u].y;
    float _542 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _543 = isnan(1.0) ? _542 : (isnan(_542) ? 1.0 : min(_542, 1.0));
    float _550 = _538 - ((_538 * TEXCOORD_8.x) * _543);
    float _551 = _538 - ((_538 * TEXCOORD_8.y) * _543);
    float _552 = _538 - ((_538 * TEXCOORD_8.z) * _543);
    float _559 = (_550 * ((_410.x * cbMtdParam._m0[18u].x) - _389)) + _389;
    float _560 = (_551 * ((_410.y * cbMtdParam._m0[18u].y) - _390)) + _390;
    float _561 = (_552 * ((_410.z * cbMtdParam._m0[18u].z) - _391)) + _391;
    vec4 _573 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _266) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _267) + cbTextureTilingScale._m0[19u].w));
    float _575 = _573.x;
    float _576 = 1.0 - _575;
    float _604 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_575 - _576) * cbMtdParam._m0[24u].w) + _576) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3875 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _613 = ((((cbMtdParam._m0[10u].x - _559) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _605) + _559;
    float _614 = ((((cbMtdParam._m0[10u].y - _560) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _605) + _560;
    float _615 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _561)) * _605) + _561;
    vec4 _629 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _266) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _267) + cbTextureTilingScale._m0[15u].w));
    float _636 = (_629.x * 2.0) + (-1.0);
    float _637 = (_629.y * 2.0) + (-1.0);
    float _638 = dot(vec2(_636, _637), vec2(_636, _637));
    float _3886 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _646 = ((_629.z - _460) * _550) + _460;
    float _649 = ((cbMtdParam._m0[23u].y - _646) * _605) + _646;
    vec4 _668 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _266) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _267) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _674 = (_668.x * 2.0) + (-1.0);
    float _675 = (_668.y * 2.0) + (-1.0);
    float _676 = dot(vec2(_674, _675), vec2(_674, _675));
    float _3897 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _691 = ((sqrt(1.0 - (isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0)))) - _471) * _552) + _471;
    float _694 = (((_636 - _463) * _550) + _463) + (cbMtdParam._m0[21u].x * _463);
    float _695 = (((_637 - _465) * _551) + _465) + (cbMtdParam._m0[21u].x * _465);
    float _706 = (((_674 - _694) + (_694 * cbMtdParam._m0[22u].z)) * _605) + _694;
    float _707 = (((_675 - _695) + (_695 * cbMtdParam._m0[22u].z)) * _605) + _695;
    float _708 = (_605 * (sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) - _691)) + _691;
    float _710 = cbMtdParam._m0[22u].x + _500.w;
    float _713 = fma(_708, _235, fma(_707, _242, _706 * _228));
    float _716 = fma(_708, _236, fma(_707, _243, _706 * _229));
    float _719 = fma(_708, _237, fma(_707, _244, _706 * _230));
    float _723 = inversesqrt(dot(vec3(_713, _716, _719), vec3(_713, _716, _719)));
    float _724 = _723 * _713;
    float _725 = _723 * _716;
    float _726 = _723 * _719;
    float _3908 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _727 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _3919 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _3930 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _3941 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _3952 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _745 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _786 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _796 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _786);
    float _797 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _786);
    float _798 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _786);
    float _802 = inversesqrt(dot(vec3(_796, _797, _798), vec3(_796, _797, _798)));
    float _803 = _796 * _802;
    float _804 = _797 * _802;
    float _805 = _798 * _802;
    float _811 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _812 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _830 = fma(_726, cbSceneParam._m0[5u].z, fma(_725, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _724));
    float _833 = fma(_726, cbSceneParam._m0[6u].z, fma(_725, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _724));
    float _836 = fma(_726, cbSceneParam._m0[7u].z, fma(_725, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _724));
    uint _850 = (_247 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _856 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0)))) * cbInstanceData._m0[_850].x;
    float _857 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_850].y;
    float _858 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_850].z;
    float _3963 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _859 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
    float _3974 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _860 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    float _861 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    vec4 _870 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _811, cbSceneParam._m0[86u].y * _812));
    float _874 = ((isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0))) * TEXCOORD_5.w) * _870.x;
    float _875 = dot(vec3(_724, _725, _726), vec3(_803, _804, _805));
    float _878 = _875 * 2.0;
    float _882 = (_878 * _724) - _803;
    float _883 = (_878 * _725) - _804;
    float _884 = (_878 * _726) - _805;
    float _888 = abs(dot(vec3(_803, _804, _805), vec3(_724, _725, _726)));
    float _3996 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _890 = sqrt(_727);
    float _903 = exp2((_890 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_890 * 3.0));
    float _935 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _939 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _943 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1244;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _969 = fma(_943, cbModelParam._m0[26u].z, fma(_939, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _935));
        float _973 = fma(_943, cbModelParam._m0[27u].z, fma(_939, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _935));
        float _977 = fma(_943, cbModelParam._m0[28u].z, fma(_939, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _935));
        float _1002 = _935 + _724;
        float _1003 = _939 + _725;
        float _1004 = _943 + _726;
        float _1014 = fma(_1004, cbModelParam._m0[26u].z, fma(_1003, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1002)) - _969;
        float _1015 = fma(_1004, cbModelParam._m0[27u].z, fma(_1003, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1002)) - _973;
        float _1016 = fma(_1004, cbModelParam._m0[28u].z, fma(_1003, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1002)) - _977;
        float _1020 = inversesqrt(dot(vec3(_1014, _1015, _1016), vec3(_1014, _1015, _1016)));
        float _1033 = ((_1020 * _1014) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_969 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1034 = ((_1020 * _1015) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_973 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1035 = ((_1020 * _1016) / cbModelParam._m0[34u].z) + ((((((_977 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1038 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1045 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1052 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1059 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        float _1072 = exp2((_1038.w + (-0.5)) * 20.0) * 2.0;
        float _1073 = _1072 * (_1038.x + (-0.5));
        float _1074 = _1072 * (_1038.y + (-0.5));
        float _1075 = _1072 * (_1038.z + (-0.5));
        float _1082 = exp2((_1045.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1045.x + (-0.5));
        float _1084 = _1082 * (_1045.y + (-0.5));
        float _1085 = _1082 * (_1045.z + (-0.5));
        float _1092 = exp2((_1052.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1052.x + (-0.5));
        float _1094 = _1092 * (_1052.y + (-0.5));
        float _1095 = _1092 * (_1052.z + (-0.5));
        float _1102 = exp2((_1059.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1059.x + (-0.5));
        float _1104 = _1102 * (_1059.y + (-0.5));
        float _1105 = _1102 * (_1059.z + (-0.5));
        float _1106 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1108 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1109 = _1073 * 0.5;
        float _1110 = _1083 * 0.5;
        float _1111 = _1093 * 0.5;
        float _1112 = dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111));
        float _1117 = (_1112 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1112);
        float _1126 = (dot(vec3(_724, _725, _726), vec3(_1117 * _1109, _1117 * _1110, _1117 * _1111)) + 1.0) * 0.5;
        float _4022 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1136 = sqrt(((_1110 * _1110) + (_1109 * _1109)) + (_1111 * _1111)) / (_1106 + 9.9999997473787516355514526367188e-06);
        float _4033 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1137 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1138 = _1137 * 2.0;
        float _1142 = (1.0 - _1137) / (_1137 + 1.0);
        float _4044 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1143 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1152 = ((((1.0 - _1143) * (_1138 + 2.0)) * exp2(log2(isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * (_1138 + 1.0))) + _1143) * _1106;
        float _1153 = _1074 * 0.5;
        float _1154 = _1084 * 0.5;
        float _1155 = _1094 * 0.5;
        float _1156 = dot(vec3(_1153, _1154, _1155), vec3(_1153, _1154, _1155));
        float _1161 = (_1156 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1156);
        float _1169 = (dot(vec3(_724, _725, _726), vec3(_1161 * _1153, _1161 * _1154, _1161 * _1155)) + 1.0) * 0.5;
        float _4055 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1178 = sqrt(((_1154 * _1154) + (_1153 * _1153)) + (_1155 * _1155)) / (_1107 + 9.9999997473787516355514526367188e-06);
        float _4066 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1179 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1180 = _1179 * 2.0;
        float _1184 = (1.0 - _1179) / (_1179 + 1.0);
        float _4077 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1185 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1194 = ((((1.0 - _1185) * (_1180 + 2.0)) * exp2(log2(isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * (_1180 + 1.0))) + _1185) * _1107;
        float _1195 = _1075 * 0.5;
        float _1196 = _1085 * 0.5;
        float _1197 = _1095 * 0.5;
        float _1198 = dot(vec3(_1195, _1196, _1197), vec3(_1195, _1196, _1197));
        float _1203 = (_1198 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1198);
        float _1211 = (dot(vec3(_724, _725, _726), vec3(_1203 * _1195, _1203 * _1196, _1203 * _1197)) + 1.0) * 0.5;
        float _4088 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1220 = sqrt(((_1196 * _1196) + (_1195 * _1195)) + (_1197 * _1197)) / (_1108 + 9.9999997473787516355514526367188e-06);
        float _4099 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1222 = _1221 * 2.0;
        float _1226 = (1.0 - _1221) / (_1221 + 1.0);
        float _4110 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1227 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1236 = ((((1.0 - _1227) * (_1222 + 2.0)) * exp2(log2(isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * (_1222 + 1.0))) + _1227) * _1108;
        _1244 = _1075;
        _1246 = _1074;
        _1247 = _1073;
        _1248 = _1085;
        _1249 = _1084;
        _1250 = _1083;
        _1251 = _1095;
        _1252 = _1094;
        _1253 = _1093;
        _1254 = _1108;
        _1255 = _1107;
        _1256 = _1106;
        _1257 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0)));
        _1258 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0)));
        _1259 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0)));
    }
    else
    {
        _1244 = _1245;
        _1246 = _1245;
        _1247 = _1245;
        _1248 = _1245;
        _1249 = _1245;
        _1250 = _1245;
        _1251 = _1245;
        _1252 = _1245;
        _1253 = _1245;
        _1254 = _1245;
        _1255 = _1245;
        _1256 = _1245;
        _1257 = 0.0;
        _1258 = 0.0;
        _1259 = 0.0;
    }
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1284 = fma(_943, cbModelParam._m0[30u].z, fma(_939, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _935));
        float _1288 = fma(_943, cbModelParam._m0[31u].z, fma(_939, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _935));
        float _1292 = fma(_943, cbModelParam._m0[32u].z, fma(_939, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _935));
        float _1315 = _935 + _724;
        float _1316 = _939 + _725;
        float _1317 = _943 + _726;
        float _1327 = fma(_1317, cbModelParam._m0[30u].z, fma(_1316, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1315)) - _1284;
        float _1328 = fma(_1317, cbModelParam._m0[31u].z, fma(_1316, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1315)) - _1288;
        float _1329 = fma(_1317, cbModelParam._m0[32u].z, fma(_1316, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1315)) - _1292;
        float _1333 = inversesqrt(dot(vec3(_1327, _1328, _1329), vec3(_1327, _1328, _1329)));
        float _1346 = ((_1333 * _1327) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1284 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1347 = ((_1333 * _1328) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1288 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1348 = ((_1333 * _1329) / cbModelParam._m0[35u].z) + ((((((_1292 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1357 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        float _1383 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1350.x + (-0.5));
        float _1385 = _1383 * (_1350.y + (-0.5));
        float _1386 = _1383 * (_1350.z + (-0.5));
        float _1393 = exp2((_1357.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1357.x + (-0.5));
        float _1395 = _1393 * (_1357.y + (-0.5));
        float _1396 = _1393 * (_1357.z + (-0.5));
        float _1403 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1404 = _1403 * (_1364.x + (-0.5));
        float _1405 = _1403 * (_1364.y + (-0.5));
        float _1406 = _1403 * (_1364.z + (-0.5));
        float _1413 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1371.x + (-0.5));
        float _1415 = _1413 * (_1371.y + (-0.5));
        float _1416 = _1413 * (_1371.z + (-0.5));
        float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1418 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1419 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1420 = _1384 * 0.5;
        float _1421 = _1394 * 0.5;
        float _1422 = _1404 * 0.5;
        float _1423 = dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422));
        float _1428 = (_1423 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1423);
        float _1436 = (dot(vec3(_724, _725, _726), vec3(_1428 * _1420, _1428 * _1421, _1428 * _1422)) + 1.0) * 0.5;
        float _4151 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1445 = sqrt(((_1421 * _1421) + (_1420 * _1420)) + (_1422 * _1422)) / (_1417 + 9.9999997473787516355514526367188e-06);
        float _4162 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _4173 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))) * (_1447 + 1.0))) + _1452) * _1417;
        float _1462 = _1385 * 0.5;
        float _1463 = _1395 * 0.5;
        float _1464 = _1405 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1478 = (dot(vec3(_724, _725, _726), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _4184 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1487 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1418 + 9.9999997473787516355514526367188e-06);
        float _4195 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _4206 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0))) * (_1489 + 1.0))) + _1494) * _1418;
        float _1504 = _1386 * 0.5;
        float _1505 = _1396 * 0.5;
        float _1506 = _1406 * 0.5;
        float _1507 = dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506));
        float _1512 = (_1507 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1507);
        float _1520 = (dot(vec3(_724, _725, _726), vec3(_1512 * _1504, _1512 * _1505, _1512 * _1506)) + 1.0) * 0.5;
        float _4217 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1529 = sqrt(((_1505 * _1505) + (_1504 * _1504)) + (_1506 * _1506)) / (_1419 + 9.9999997473787516355514526367188e-06);
        float _4228 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
        float _1531 = _1530 * 2.0;
        float _1535 = (1.0 - _1530) / (_1530 + 1.0);
        float _4239 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1545 = ((((1.0 - _1536) * (_1531 + 2.0)) * exp2(log2(isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0))) * (_1531 + 1.0))) + _1536) * _1419;
        _1553 = _1386;
        _1554 = _1385;
        _1555 = _1384;
        _1556 = _1396;
        _1557 = _1395;
        _1558 = _1394;
        _1559 = _1406;
        _1560 = _1405;
        _1561 = _1404;
        _1562 = _1419;
        _1563 = _1418;
        _1564 = _1417;
        _1565 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
        _1566 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
        _1567 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0)));
    }
    else
    {
        _1553 = _1245;
        _1554 = _1245;
        _1555 = _1245;
        _1556 = _1245;
        _1557 = _1245;
        _1558 = _1245;
        _1559 = _1245;
        _1560 = _1245;
        _1561 = _1245;
        _1562 = _1245;
        _1563 = _1245;
        _1564 = _1245;
        _1565 = 0.0;
        _1566 = 0.0;
        _1567 = 0.0;
    }
    float _1577 = (cbModelParam._m0[1u].x * (_1565 - _1257)) + _1257;
    float _1578 = (cbModelParam._m0[1u].x * (_1566 - _1258)) + _1258;
    float _1579 = (cbModelParam._m0[1u].x * (_1567 - _1259)) + _1259;
    float _1600 = fma(_1579, cbSceneParam._m0[89u].z, fma(_1578, cbSceneParam._m0[89u].y, _1577 * cbSceneParam._m0[89u].x));
    float _1603 = fma(_1579, cbSceneParam._m0[90u].z, fma(_1578, cbSceneParam._m0[90u].y, _1577 * cbSceneParam._m0[90u].x));
    float _1606 = fma(_1579, cbSceneParam._m0[91u].z, fma(_1578, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1577));
    float _1621 = _882 * 0.5;
    float _1622 = _883 * 0.5;
    float _1623 = _884 * 0.5;
    float _1624 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1555, _1558, _1561, _1564));
    float _1627 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1554, _1557, _1560, _1563));
    float _1630 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1553, _1556, _1559, _1562));
    float _1664;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1637 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1244, _1248, _1251, _1254));
        float _1641 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1246, _1249, _1252, _1255));
        float _1645 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1247, _1250, _1253, _1256));
        float _1652 = dot(vec4(cbModelParam._m0[39u]), vec4(_1621, _1622, _1623, 1.0));
        _1664 = dot(vec3(isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1652) ? 0.0 : (isnan(0.0) ? _1652 : max(0.0, _1652))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1664 = 1.0;
    }
    float _1675;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1666 = dot(vec4(cbModelParam._m0[40u]), vec4(_1621, _1622, _1623, 1.0));
        _1675 = dot(vec3(isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0)), isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1666) ? 0.0 : (isnan(0.0) ? _1666 : max(0.0, _1666))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1675 = 1.0;
    }
    float _1679 = (_1675 * cbModelParam._m0[1u].x) + (_1664 * (1.0 - cbModelParam._m0[1u].x));
    float _1689 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _727);
    float _1690 = isnan(_1689) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1689 : min(cbModelParam._m0[25u].z, _1689));
    float _1770;
    float _1772;
    float _1774;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1737 = fma(_943, cbModelParam._m0[13u].z, fma(_939, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _935)) + cbModelParam._m0[13u].w;
        float _1741 = fma(_943, cbModelParam._m0[14u].z, fma(_939, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _935)) + cbModelParam._m0[14u].w;
        float _1745 = fma(_943, cbModelParam._m0[15u].z, fma(_939, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _935)) + cbModelParam._m0[15u].w;
        float _1748 = fma(_884, cbModelParam._m0[13u].z, fma(_883, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _882));
        float _1751 = fma(_884, cbModelParam._m0[14u].z, fma(_883, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _882));
        float _1754 = fma(_884, cbModelParam._m0[15u].z, fma(_883, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _882));
        float _1782;
        if (_1748 > 0.0)
        {
            _1782 = abs((1.0 - _1737) / _1748);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1748 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1737 + 1.0) / _1748);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1782 = frontier_phi_14_12_ladder;
        }
        float _1951;
        if (_1751 > 0.0)
        {
            _1951 = abs((1.0 - _1741) / _1751);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1741 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1951 = frontier_phi_23_19_ladder;
        }
        float _2246;
        if (_1754 > 0.0)
        {
            _2246 = abs((1.0 - _1745) / _1754);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1745 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2246 = frontier_phi_35_30_ladder;
        }
        float _2248 = isnan(_1951) ? _1782 : (isnan(_1782) ? _1951 : min(_1782, _1951));
        float _2249 = isnan(_2246) ? _2248 : (isnan(_2248) ? _2246 : min(_2248, _2246));
        float _2253 = (_2249 * _1748) + _1737;
        float _2254 = (_2249 * _1751) + _1741;
        float _2255 = (_2249 * _1754) + _1745;
        float _2256 = _2249 * 9.9999997473787516355514526367188e-05;
        float _2258 = (-1.0) - _2256;
        float _2260 = _2256 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2255 > _2260) || ((_2255 < _2258) || ((_2254 > _2260) || ((_2254 < _2258) || ((_2253 < _2258) || (_2253 > _2260))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2400 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2255, cbModelParam._m0[9u].z, fma(_2254, cbModelParam._m0[9u].y, _2253 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2255, cbModelParam._m0[10u].z, fma(_2254, cbModelParam._m0[10u].y, _2253 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2255, cbModelParam._m0[11u].z, fma(_2254, cbModelParam._m0[11u].y, _2253 * cbModelParam._m0[11u].x))), _1690);
            frontier_phi_13_35_ladder = _2400.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2400.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2400.x * cbModelParam._m0[1u].y;
        }
        _1770 = frontier_phi_13_35_ladder_2;
        _1772 = frontier_phi_13_35_ladder_1;
        _1774 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1758 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_882, _883, _884), _1690);
        _1770 = _1758.x * cbModelParam._m0[1u].y;
        _1772 = _1758.y * cbModelParam._m0[1u].y;
        _1774 = _1758.z * cbModelParam._m0[1u].y;
    }
    float _1778 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _727);
    float _1779 = isnan(_1778) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1778 : min(cbModelParam._m0[25u].w, _1778));
    float _1868;
    float _1870;
    float _1872;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1832 = fma(_943, cbModelParam._m0[21u].z, fma(_939, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _935)) + cbModelParam._m0[21u].w;
        float _1836 = fma(_943, cbModelParam._m0[22u].z, fma(_939, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _935)) + cbModelParam._m0[22u].w;
        float _1840 = fma(_943, cbModelParam._m0[23u].z, fma(_939, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _935)) + cbModelParam._m0[23u].w;
        float _1843 = fma(_884, cbModelParam._m0[21u].z, fma(_883, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _882));
        float _1846 = fma(_884, cbModelParam._m0[22u].z, fma(_883, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _882));
        float _1849 = fma(_884, cbModelParam._m0[23u].z, fma(_883, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _882));
        float _1956;
        if (_1843 > 0.0)
        {
            _1956 = abs((1.0 - _1832) / _1843);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1843 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1832 + 1.0) / _1843);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1956 = frontier_phi_25_21_ladder;
        }
        float _2273;
        if (_1846 > 0.0)
        {
            _2273 = abs((1.0 - _1836) / _1846);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1846 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1836 + 1.0) / _1846);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2273 = frontier_phi_37_32_ladder;
        }
        float _2600;
        if (_1849 > 0.0)
        {
            _2600 = abs((1.0 - _1840) / _1849);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1849 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1840 + 1.0) / _1849);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2600 = frontier_phi_47_44_ladder;
        }
        float _2602 = isnan(_2273) ? _1956 : (isnan(_1956) ? _2273 : min(_1956, _2273));
        float _2603 = isnan(_2600) ? _2602 : (isnan(_2602) ? _2600 : min(_2602, _2600));
        float _2607 = (_2603 * _1843) + _1832;
        float _2608 = (_2603 * _1846) + _1836;
        float _2609 = (_2603 * _1849) + _1840;
        float _2610 = _2603 * 9.9999997473787516355514526367188e-05;
        float _2611 = (-1.0) - _2610;
        float _2613 = _2610 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2609 > _2613) || ((_2609 < _2611) || ((_2608 > _2613) || ((_2608 < _2611) || ((_2607 < _2611) || (_2607 > _2613))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2727 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2609, cbModelParam._m0[17u].z, fma(_2608, cbModelParam._m0[17u].y, _2607 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2609, cbModelParam._m0[18u].z, fma(_2608, cbModelParam._m0[18u].y, _2607 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2609, cbModelParam._m0[19u].z, fma(_2608, cbModelParam._m0[19u].y, _2607 * cbModelParam._m0[19u].x))), _1779);
            frontier_phi_22_47_ladder = _2727.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2727.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2727.x * cbModelParam._m0[1u].z;
        }
        _1868 = frontier_phi_22_47_ladder_2;
        _1870 = frontier_phi_22_47_ladder_1;
        _1872 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1852 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_882, _883, _884), _1779);
        _1868 = _1852.x * cbModelParam._m0[1u].z;
        _1870 = _1852.y * cbModelParam._m0[1u].z;
        _1872 = _1852.z * cbModelParam._m0[1u].z;
    }
    float _1884 = ((((1.0 - _903) * ((_890 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_903 * _890)) * _874;
    float _1885 = _1884 * ((cbModelParam._m0[1u].w * (_1868 - _1770)) + _1770);
    float _1886 = _1884 * ((cbModelParam._m0[1u].w * (_1870 - _1772)) + _1772);
    float _1887 = _1884 * ((cbModelParam._m0[1u].w * (_1872 - _1774)) + _1774);
    float _1890 = fma(_1887, cbSceneParam._m0[89u].z, fma(_1886, cbSceneParam._m0[89u].y, _1885 * cbSceneParam._m0[89u].x));
    float _1893 = fma(_1887, cbSceneParam._m0[90u].z, fma(_1886, cbSceneParam._m0[90u].y, _1885 * cbSceneParam._m0[90u].x));
    float _1896 = fma(_1887, cbSceneParam._m0[91u].z, fma(_1886, cbSceneParam._m0[91u].y, _1885 * cbSceneParam._m0[91u].x));
    float _1930 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1934 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1938 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1942 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1943 = _1930 / _1942;
    float _1944 = _1934 / _1942;
    float _1945 = _1938 / _1942;
    float _2092;
    float _2093;
    float _2094;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1972 = ((uint(_1945 > cbSceneParam._m0[59u].y) + uint(_1945 > cbSceneParam._m0[59u].x)) + uint(_1945 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1973 = _1972 + 43u;
        uint _1981 = _1972 + 44u;
        uint _1989 = _1972 + 45u;
        uint _1997 = _1972 + 46u;
        float _2008 = fma(_1942, cbSceneParam._m0[_1973].w, fma(_1938, cbSceneParam._m0[_1973].z, fma(_1934, cbSceneParam._m0[_1973].y, _1930 * cbSceneParam._m0[_1973].x)));
        float _2012 = fma(_1942, cbSceneParam._m0[_1981].w, fma(_1938, cbSceneParam._m0[_1981].z, fma(_1934, cbSceneParam._m0[_1981].y, _1930 * cbSceneParam._m0[_1981].x)));
        float _2020 = fma(_1942, cbSceneParam._m0[_1997].w, fma(_1938, cbSceneParam._m0[_1997].z, fma(_1934, cbSceneParam._m0[_1997].y, _1930 * cbSceneParam._m0[_1997].x)));
        float _2025 = cbSceneParam._m0[33u].z * _2020;
        float _2027 = cbSceneParam._m0[33u].w * _2020;
        float _2030 = fma(_1942, cbSceneParam._m0[_1989].w, fma(_1938, cbSceneParam._m0[_1989].z, fma(_1934, cbSceneParam._m0[_1989].y, _1930 * cbSceneParam._m0[_1989].x))) / _2020;
        float _2078 = (cbSceneParam._m0[33u].x - sqrt(((_1944 * _1944) + (_1943 * _1943)) + (_1945 * _1945))) * cbSceneParam._m0[33u].y;
        float _4365 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2085 = (isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2025 + _2008) / _2020, (_2027 + _2012) / _2020), _2030), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2027 + _2008) / _2020, (_2012 - _2025) / _2020), _2030), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2008 - _2025) / _2020, (_2012 - _2027) / _2020), _2030), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2008 - _2027) / _2020, (_2025 + _2012) / _2020), _2030), 0.0)).x), vec4(0.25)));
        _2092 = 1.0 - (_2085 * cbSceneParam._m0[34u].x);
        _2093 = 1.0 - (_2085 * cbSceneParam._m0[34u].y);
        _2094 = 1.0 - (_2085 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2092 = 1.0;
        _2093 = 1.0;
        _2094 = 1.0;
    }
    float _2158;
    float _2160;
    float _2162;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2146 = fma(_1942, cbSceneParam._m0[63u].w, fma(_1938, cbSceneParam._m0[63u].z, fma(_1934, cbSceneParam._m0[63u].y, _1930 * cbSceneParam._m0[63u].x)));
        float _2147 = fma(_1942, cbSceneParam._m0[60u].w, fma(_1938, cbSceneParam._m0[60u].z, fma(_1934, cbSceneParam._m0[60u].y, _1930 * cbSceneParam._m0[60u].x))) / _2146;
        float _2148 = fma(_1942, cbSceneParam._m0[61u].w, fma(_1938, cbSceneParam._m0[61u].z, fma(_1934, cbSceneParam._m0[61u].y, _1930 * cbSceneParam._m0[61u].x))) / _2146;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2147 >= cbSceneParam._m0[64u].x) && (_2148 >= cbSceneParam._m0[64u].y)) && (_2147 <= cbSceneParam._m0[64u].z)) && (_2148 <= cbSceneParam._m0[64u].w))
        {
            float _2286 = fma(_1942, cbSceneParam._m0[62u].w, fma(_1938, cbSceneParam._m0[62u].z, fma(_1934, cbSceneParam._m0[62u].y, _1930 * cbSceneParam._m0[62u].x))) / _2146;
            float _2290 = isnan(cbSceneParam._m0[41u].w) ? _2286 : (isnan(_2286) ? cbSceneParam._m0[41u].w : max(_2286, cbSceneParam._m0[41u].w));
            float _2333 = (cbSceneParam._m0[33u].x - sqrt(((_1944 * _1944) + (_1943 * _1943)) + (_1945 * _1945))) * cbSceneParam._m0[33u].y;
            float _4381 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
            float _2340 = (isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2147, cbSceneParam._m0[33u].w + _2148), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2147, _2148 - cbSceneParam._m0[33u].z), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2147 - cbSceneParam._m0[33u].z, _2148 - cbSceneParam._m0[33u].w), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2147 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2148), _2290), 0.0)).x), vec4(0.25)));
            float _2344 = 1.0 - (_2340 * cbSceneParam._m0[34u].x);
            float _2345 = 1.0 - (_2340 * cbSceneParam._m0[34u].y);
            float _2346 = 1.0 - (_2340 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2346) ? _2094 : (isnan(_2094) ? _2346 : min(_2094, _2346));
            frontier_phi_34_33_ladder_1 = isnan(_2345) ? _2093 : (isnan(_2093) ? _2345 : min(_2093, _2345));
            frontier_phi_34_33_ladder_2 = isnan(_2344) ? _2092 : (isnan(_2092) ? _2344 : min(_2092, _2344));
        }
        else
        {
            frontier_phi_34_33_ladder = _2094;
            frontier_phi_34_33_ladder_1 = _2093;
            frontier_phi_34_33_ladder_2 = _2092;
        }
        _2158 = frontier_phi_34_33_ladder_2;
        _2160 = frontier_phi_34_33_ladder_1;
        _2162 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2158 = _2092;
        _2160 = _2093;
        _2162 = _2094;
    }
    uvec4 _2167 = floatBitsToUint(cbInstanceData._m0[_247 + 5u]);
    uint _2169 = _2167.x * 14u;
    uint _2170 = _2169 + 13u;
    float _2177 = _874 + (-1.0);
    float _2182 = (cbLight._m0[_2170].x * _2177) + 1.0;
    float _2183 = (cbLight._m0[_2170].y * _2177) + 1.0;
    float _2184 = (cbLight._m0[_2170].z * _2177) + 1.0;
    float _2185 = (cbLight._m0[_2170].w * _2177) + 1.0;
    uint _2186 = _2169 + 5u;
    float _2192 = isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0));
    uint _2196 = _2169 + 4u;
    float _2205 = isnan(1.0) ? _2182 : (isnan(_2182) ? 1.0 : min(_2182, 1.0));
    uint _2209 = _2169 | 1u;
    float _2220 = dot(vec3(cbLight._m0[_2169].xyz), vec3(_724, _725, _726));
    float _2223 = dot(vec3(cbLight._m0[_2209].xyz), vec3(_724, _725, _726));
    float _4417 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
    float _4428 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _2228 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * 0.3183098733425140380859375;
    float _2230 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2237 = ((cbLight._m0[_2186].x * _2192) * _2230) + (((cbLight._m0[_2196].x * _2158) * _2205) * _2228);
    float _2238 = ((_2192 * cbLight._m0[_2186].y) * _2230) + (((cbLight._m0[_2196].y * _2160) * _2205) * _2228);
    float _2239 = ((_2192 * cbLight._m0[_2186].z) * _2230) + (((cbLight._m0[_2196].z * _2162) * _2205) * _2228);
    uvec4 _2243 = floatBitsToUint(cbLight._m0[_2169 + 12u]);
    bool _2245 = _2243.x == 0u;
    float _2347;
    float _2349;
    float _2351;
    if (_2245)
    {
        _2347 = _2237;
        _2349 = _2238;
        _2351 = _2239;
    }
    else
    {
        uint _2355 = _2169 + 6u;
        float _2371 = (dot(vec3(cbLight._m0[_2169 + 2u].xyz), vec3(_724, _725, _726)) * 0.5) + 0.5;
        float _2372 = _2371 * _2371;
        float _4439 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
        float _2373 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _2374 = isnan(1.0) ? _2184 : (isnan(_2184) ? 1.0 : min(_2184, 1.0));
        _2347 = (((cbLight._m0[_2355].x * 0.3183098733425140380859375) * _2373) * _2374) + _2237;
        _2349 = (((cbLight._m0[_2355].y * 0.3183098733425140380859375) * _2373) * _2374) + _2238;
        _2351 = (((cbLight._m0[_2355].z * 0.3183098733425140380859375) * _2373) * _2374) + _2239;
    }
    bool _2354 = _2243.y == 0u;
    float _2409;
    float _2411;
    float _2413;
    if (_2354)
    {
        _2409 = _2347;
        _2411 = _2349;
        _2413 = _2351;
    }
    else
    {
        uint _2571 = _2169 + 7u;
        float _2587 = (dot(vec3(cbLight._m0[_2169 + 3u].xyz), vec3(_724, _725, _726)) * 0.5) + 0.5;
        float _2588 = _2587 * _2587;
        float _4455 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
        float _2589 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _2590 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
        _2409 = (((cbLight._m0[_2571].x * 0.3183098733425140380859375) * _2589) * _2590) + _2347;
        _2411 = (((cbLight._m0[_2571].y * 0.3183098733425140380859375) * _2589) * _2590) + _2349;
        _2413 = (((cbLight._m0[_2571].z * 0.3183098733425140380859375) * _2589) * _2590) + _2351;
    }
    uint _2416 = _2169 + 8u;
    float _2429 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2169].w)) * _727) * 0.949999988079071044921875);
    float _2430 = _2429 * _2429;
    float _2431 = cbLight._m0[_2169].x + _803;
    float _2432 = cbLight._m0[_2169].y + _804;
    float _2433 = cbLight._m0[_2169].z + _805;
    float _2437 = inversesqrt(dot(vec3(_2431, _2432, _2433), vec3(_2431, _2432, _2433)));
    float _2438 = _2437 * _2431;
    float _2439 = _2437 * _2432;
    float _2440 = _2437 * _2433;
    float _2441 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2169].xyz));
    float _4471 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
    float _2444 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _4482 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _2445 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _2446 = dot(vec3(_724, _725, _726), vec3(_2438, _2439, _2440));
    float _4493 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
    float _2449 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2450 = dot(vec3(cbLight._m0[_2169].xyz), vec3(_2438, _2439, _2440));
    float _4504 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2454 = _2430 * _2430;
    float _2458 = ((_2449 * _2449) * (_2454 + (-1.0))) + 1.0;
    float _2469 = (exp2(log2(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2470 = 1.0 - _2430;
    float _2481 = (0.5 / (((_2445 * ((_2444 * _2470) + _2430)) + 9.9999999392252902907785028219223e-09) + (((_2445 * _2470) + _2430) * _2444))) * _2444;
    float _4515 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
    float _2483 = (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))) * (_2454 / ((_2458 * _2458) * 3.141590118408203125));
    uint _2497 = _2169 + 9u;
    float _2508 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2209].w)) * _727) * 0.949999988079071044921875);
    float _2509 = _2508 * _2508;
    float _2510 = cbLight._m0[_2209].x + _803;
    float _2511 = cbLight._m0[_2209].y + _804;
    float _2512 = cbLight._m0[_2209].z + _805;
    float _2516 = inversesqrt(dot(vec3(_2510, _2511, _2512), vec3(_2510, _2511, _2512)));
    float _2517 = _2516 * _2510;
    float _2518 = _2516 * _2511;
    float _2519 = _2516 * _2512;
    float _2520 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2209].xyz));
    float _4526 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2523 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _2524 = dot(vec3(_724, _725, _726), vec3(_2517, _2518, _2519));
    float _4537 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2527 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2528 = dot(vec3(cbLight._m0[_2209].xyz), vec3(_2517, _2518, _2519));
    float _4548 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
    float _2532 = _2509 * _2509;
    float _2536 = ((_2527 * _2527) * (_2532 + (-1.0))) + 1.0;
    float _2545 = (exp2(log2(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2546 = 1.0 - _2509;
    float _2556 = (0.5 / (((_2445 * ((_2523 * _2546) + _2509)) + 9.9999999392252902907785028219223e-09) + (((_2445 * _2546) + _2509) * _2523))) * _2523;
    float _4559 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
    float _2558 = (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0))) * (_2532 / ((_2536 * _2536) * 3.141590118408203125));
    float _2568 = (((_2545 * cbLight._m0[_2497].x) * _2558) * _2192) + ((((cbLight._m0[_2416].x * _2158) * _2469) * _2483) * _2205);
    float _2569 = (((_2545 * cbLight._m0[_2497].y) * _2558) * _2192) + ((((cbLight._m0[_2416].y * _2160) * _2469) * _2483) * _2205);
    float _2570 = (((_2545 * cbLight._m0[_2497].z) * _2558) * _2192) + ((((cbLight._m0[_2416].z * _2162) * _2469) * _2483) * _2205);
    float _2626;
    float _2628;
    float _2630;
    if (_2245)
    {
        _2626 = _2568;
        _2628 = _2569;
        _2630 = _2570;
    }
    else
    {
        uint _2632 = _2169 + 2u;
        uint _2636 = _2169 + 10u;
        float _2650 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2632].w)) * _727) * 0.949999988079071044921875);
        float _2651 = _2650 * _2650;
        float _2652 = cbLight._m0[_2632].x + _803;
        float _2653 = cbLight._m0[_2632].y + _804;
        float _2654 = cbLight._m0[_2632].z + _805;
        float _2658 = inversesqrt(dot(vec3(_2652, _2653, _2654), vec3(_2652, _2653, _2654)));
        float _2659 = _2658 * _2652;
        float _2660 = _2658 * _2653;
        float _2661 = _2658 * _2654;
        float _2662 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2632].xyz));
        float _4570 = isnan(0.0) ? _2662 : (isnan(_2662) ? 0.0 : max(_2662, 0.0));
        float _2665 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
        float _2666 = dot(vec3(_724, _725, _726), vec3(_2659, _2660, _2661));
        float _4581 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2669 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2670 = dot(vec3(cbLight._m0[_2632].xyz), vec3(_2659, _2660, _2661));
        float _4592 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        float _2674 = _2651 * _2651;
        float _2678 = ((_2669 * _2669) * (_2674 + (-1.0))) + 1.0;
        float _2687 = (exp2(log2(1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2688 = 1.0 - _2651;
        float _2698 = (0.5 / (((_2445 * ((_2665 * _2688) + _2651)) + 9.9999999392252902907785028219223e-09) + (((_2445 * _2688) + _2651) * _2665))) * _2665;
        float _4603 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
        float _2700 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2674 / ((_2678 * _2678) * 3.141590118408203125));
        float _2701 = isnan(1.0) ? _2184 : (isnan(_2184) ? 1.0 : min(_2184, 1.0));
        _2626 = (((_2687 * cbLight._m0[_2636].x) * _2700) * _2701) + _2568;
        _2628 = (((_2687 * cbLight._m0[_2636].y) * _2700) * _2701) + _2569;
        _2630 = (((_2687 * cbLight._m0[_2636].z) * _2700) * _2701) + _2570;
    }
    float _2732;
    float _2734;
    float _2736;
    if (_2354)
    {
        _2732 = _2626;
        _2734 = _2628;
        _2736 = _2630;
    }
    else
    {
        uint _2743 = _2169 + 3u;
        uint _2747 = _2169 + 11u;
        float _2761 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2743].w)) * _727) * 0.949999988079071044921875);
        float _2762 = _2761 * _2761;
        float _2763 = cbLight._m0[_2743].x + _803;
        float _2764 = cbLight._m0[_2743].y + _804;
        float _2765 = cbLight._m0[_2743].z + _805;
        float _2769 = inversesqrt(dot(vec3(_2763, _2764, _2765), vec3(_2763, _2764, _2765)));
        float _2770 = _2769 * _2763;
        float _2771 = _2769 * _2764;
        float _2772 = _2769 * _2765;
        float _2773 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2743].xyz));
        float _4619 = isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0));
        float _2776 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _2777 = dot(vec3(_724, _725, _726), vec3(_2770, _2771, _2772));
        float _4630 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2780 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2781 = dot(vec3(cbLight._m0[_2743].xyz), vec3(_2770, _2771, _2772));
        float _4641 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
        float _2785 = _2762 * _2762;
        float _2789 = ((_2780 * _2780) * (_2785 + (-1.0))) + 1.0;
        float _2798 = (exp2(log2(1.0 - (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2799 = 1.0 - _2762;
        float _2809 = (0.5 / (((_2445 * ((_2776 * _2799) + _2762)) + 9.9999999392252902907785028219223e-09) + (((_2445 * _2799) + _2762) * _2776))) * _2776;
        float _4652 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        float _2811 = (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0))) * (_2785 / ((_2789 * _2789) * 3.141590118408203125));
        float _2812 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
        _2732 = (((_2798 * cbLight._m0[_2747].x) * _2811) * _2812) + _2626;
        _2734 = (((_2798 * cbLight._m0[_2747].y) * _2811) * _2812) + _2628;
        _2736 = (((_2798 * cbLight._m0[_2747].z) * _2811) * _2812) + _2630;
    }
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    float _2886;
    float _2888;
    if (_2167.y == 0u)
    {
        uvec4 _2833 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2834 = _2833.x;
        uint _2845 = uint((float(_2833.y) * floor(float(uint(cbSceneParam._m0[85u].y * _812) / _2834))) + floor(float(uint(cbSceneParam._m0[85u].x * _811) / _2834)));
        float _2855 = (log2(_1945 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2856 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        uint _2859 = uint(isnan(14.0) ? _2856 : (isnan(_2856) ? 14.0 : min(_2856, 14.0)));
        uvec4 _2864 = texelFetch(g_lightClusterGridBuffer, int(((_2859 << 2u) + (_2845 << 6u)) >> 2u));
        uint _2865 = _2864.x;
        uint _2866 = _2833.z;
        float _2945;
        float _2947;
        float _2949;
        float _2951;
        float _2953;
        float _2955;
        if (((((1u << ((_2866 >> 4u) & 15u)) + 4294967295u) & _2865) == 0u) || ((_2866 & 240u) == 0u))
        {
            _2945 = 0.0;
            _2947 = 0.0;
            _2949 = 0.0;
            _2951 = 0.0;
            _2953 = 0.0;
            _2955 = 0.0;
        }
        else
        {
            float _2946;
            float _2948;
            float _2950;
            float _2952;
            float _2954;
            float _2956;
            float _3089 = 0.0;
            float _3090 = 0.0;
            float _3091 = 0.0;
            float _3092 = 0.0;
            float _3093 = 0.0;
            float _3094 = 0.0;
            uint _3095 = 0u;
            uint _3104;
            bool _3105;
            for (;;)
            {
                _3104 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3095 << 2u)) >> 2u)).x;
                _3105 = _3104 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3105)
                {
                    frontier_phi_66_pred = _3094;
                    frontier_phi_66_pred_1 = _3093;
                    frontier_phi_66_pred_2 = _3092;
                    frontier_phi_66_pred_3 = _3091;
                    frontier_phi_66_pred_4 = _3090;
                    frontier_phi_66_pred_5 = _3089;
                }
                else
                {
                    float _3213;
                    float _3214;
                    float _3215;
                    float _3216;
                    float _3217;
                    float _3218;
                    uint _3219;
                    _3213 = _3089;
                    _3214 = _3090;
                    _3215 = _3091;
                    _3216 = _3092;
                    _3217 = _3093;
                    _3218 = _3094;
                    _3219 = _3104;
                    float _3145;
                    float _3146;
                    float _3147;
                    float _3148;
                    float _3149;
                    float _3150;
                    for (;;)
                    {
                        uint _3223 = uint(findLSB(_3219)) + (_3095 << 5u);
                        uint _3220 = (_3219 + 4294967295u) & _3219;
                        uint _3225 = _3223 * 48u;
                        vec4 _3239 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3225)).x, texelFetch(g_PointLightRenderingBuffer, int(_3225 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3225 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3225 + 3u)).x));
                        uint _3245 = (_3223 * 48u) + 4u;
                        vec4 _3258 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3245)).x, texelFetch(g_PointLightRenderingBuffer, int(_3245 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3245 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3245 + 3u)).x));
                        uint _3264 = (_3223 * 48u) + 8u;
                        vec3 _3275 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3264)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 2u)).x));
                        float _3279 = _3239.x - _1943;
                        float _3280 = _3239.y - _1944;
                        float _3281 = _3239.z - _1945;
                        float _3282 = dot(vec3(_3279, _3280, _3281), vec3(_3279, _3280, _3281));
                        float _3285 = inversesqrt(_3282);
                        float _3286 = _3285 * _3279;
                        float _3287 = _3285 * _3280;
                        float _3288 = _3285 * _3281;
                        float _3289 = dot(vec3(_830, _833, _836), vec3(_3286, _3287, _3288));
                        float _3294 = 1.0 - (_3282 * _3239.w);
                        float _4678 = isnan(0.0) ? _3294 : (isnan(_3294) ? 0.0 : max(_3294, 0.0));
                        float _3295 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                        float _3296 = sqrt(_3282) * _3258.w;
                        float _3299 = 1.39999997615814208984375 / (_3296 + 1.39999997615814208984375);
                        float _3300 = _3299 * _3299;
                        float _3303 = ((1.0 - _3300) * _3289) + _3300;
                        float _3306 = _3296 * _3296;
                        float _3310 = ((isnan(0.0) ? _3303 : (isnan(_3303) ? 0.0 : max(_3303, 0.0))) * _3295) / ((_3306 * 0.699999988079071044921875) + 1.0);
                        float _3314 = (-0.0) - _1943;
                        float _3315 = (-0.0) - _1944;
                        float _3316 = (-0.0) - _1945;
                        float _3320 = inversesqrt(dot(vec3(_3314, _3315, _3316), vec3(_3314, _3315, _3316)));
                        float _3321 = _3320 * _3314;
                        float _3322 = _3320 * _3315;
                        float _3323 = _3320 * _3316;
                        float _3330 = exp2(log2(1.0 / ((_3306 * 3.5) + 5.0)) * 0.25);
                        float _3331 = 1.0 - _890;
                        float _3338 = sqrt(1.0 - ((1.0 - (_3331 * _3331)) * (1.0 - (_3330 * _3330))));
                        float _3339 = _3338 * _3338;
                        float _3340 = _3339 * _3339;
                        float _3341 = _3321 + _3286;
                        float _3342 = _3322 + _3287;
                        float _3343 = _3323 + _3288;
                        float _3347 = inversesqrt(dot(vec3(_3341, _3342, _3343), vec3(_3341, _3342, _3343)));
                        float _3351 = dot(vec3(_830, _833, _836), vec3(_3321, _3322, _3323));
                        float _4694 = isnan(0.0) ? _3351 : (isnan(_3351) ? 0.0 : max(_3351, 0.0));
                        float _3354 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                        float _3355 = dot(vec3(_830, _833, _836), vec3(_3347 * _3341, _3347 * _3342, _3347 * _3343));
                        float _4705 = isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0));
                        float _3358 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3362 = ((_3358 * _3358) * (_3340 + (-1.0))) + 1.0;
                        float _3363 = _3299 * _3339;
                        float _3364 = _3363 * _3363;
                        float _3367 = ((1.0 - _3364) * _3289) + _3364;
                        float _4716 = isnan(0.0) ? _3367 : (isnan(_3367) ? 0.0 : max(_3367, 0.0));
                        float _3368 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3369 = 1.0 - _3339;
                        float _3379 = (0.5 / (((_3368 * ((_3354 * _3369) + _3339)) + 9.9999999392252902907785028219223e-09) + (((_3368 * _3369) + _3339) * _3354))) * _3368;
                        float _4727 = isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : max(_3379, 0.0));
                        float _3390 = (((_3340 * 3.1415927410125732421875) * (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0)))) / ((_3362 * _3362) * ((_3306 * 2.1991131305694580078125) + 3.141590118408203125))) * _3295;
                        _3148 = (_3310 * _3258.x) + _3216;
                        _3149 = (_3310 * _3258.y) + _3217;
                        _3150 = (_3310 * _3258.z) + _3218;
                        _3145 = (_3390 * _3275.x) + _3213;
                        _3146 = (_3390 * _3275.y) + _3214;
                        _3147 = (_3390 * _3275.z) + _3215;
                        if (_3220 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3213 = _3145;
                            _3214 = _3146;
                            _3215 = _3147;
                            _3216 = _3148;
                            _3217 = _3149;
                            _3218 = _3150;
                            _3219 = _3220;
                        }
                    }
                    frontier_phi_66_pred = _3150;
                    frontier_phi_66_pred_1 = _3149;
                    frontier_phi_66_pred_2 = _3148;
                    frontier_phi_66_pred_3 = _3147;
                    frontier_phi_66_pred_4 = _3146;
                    frontier_phi_66_pred_5 = _3145;
                }
                _2956 = frontier_phi_66_pred;
                _2954 = frontier_phi_66_pred_1;
                _2952 = frontier_phi_66_pred_2;
                _2950 = frontier_phi_66_pred_3;
                _2948 = frontier_phi_66_pred_4;
                _2946 = frontier_phi_66_pred_5;
                uint _3096 = _3095 + 1u;
                if (_3096 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3089 = _2946;
                    _3090 = _2948;
                    _3091 = _2950;
                    _3092 = _2952;
                    _3093 = _2954;
                    _3094 = _2956;
                    _3095 = _3096;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2945 = _2946;
            _2947 = _2948;
            _2949 = _2950;
            _2951 = _2952;
            _2953 = _2954;
            _2955 = _2956;
        }
        uvec4 _2959 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2960 = _2959.z;
        uint _2962 = (_2960 >> 8u) & 15u;
        float _3057;
        float _3059;
        float _3061;
        float _3063;
        float _3065;
        float _3067;
        if (((4294967295u << _2962) & _2865) == 0u)
        {
            _3057 = _2945;
            _3059 = _2947;
            _3061 = _2949;
            _3063 = _2951;
            _3065 = _2953;
            _3067 = _2955;
        }
        else
        {
            float _3082 = inversesqrt(dot(vec3(_1943, _1944, _1945), vec3(_1943, _1944, _1945)));
            float _3083 = _3082 * _1943;
            float _3084 = _3082 * _1944;
            float _3085 = _3082 * _1945;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2962 < ((_2960 >> 12u) & 15u))
            {
                float _3058;
                float _3060;
                float _3062;
                float _3064;
                float _3066;
                float _3068;
                float _3196 = _2945;
                float _3197 = _2947;
                float _3198 = _2949;
                float _3199 = _2951;
                float _3200 = _2953;
                float _3201 = _2955;
                uint _3202 = _2962;
                uint _3211;
                bool _3212;
                for (;;)
                {
                    _3211 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3202 << 2u)) >> 2u)).x;
                    _3212 = _3211 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3212)
                    {
                        frontier_phi_72_pred = _3201;
                        frontier_phi_72_pred_1 = _3200;
                        frontier_phi_72_pred_2 = _3199;
                        frontier_phi_72_pred_3 = _3198;
                        frontier_phi_72_pred_4 = _3197;
                        frontier_phi_72_pred_5 = _3196;
                    }
                    else
                    {
                        float _3395;
                        float _3396;
                        float _3397;
                        float _3398;
                        float _3399;
                        float _3400;
                        float _3689;
                        float _3690;
                        float _3691;
                        float _3692;
                        float _3693;
                        float _3694;
                        float _3408 = _3196;
                        float _3409 = _3197;
                        float _3410 = _3198;
                        float _3411 = _3199;
                        float _3412 = _3200;
                        float _3413 = _3201;
                        uint _3414 = _3211;
                        uint _3415;
                        vec4 _3440;
                        float _3441;
                        vec4 _3456;
                        vec3 _3468;
                        vec4 _3483;
                        vec4 _3499;
                        float _3545;
                        bool _3546;
                        for (;;)
                        {
                            uint _3425 = ((_3202 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3414));
                            _3415 = (_3414 + 4294967295u) & _3414;
                            uint _3427 = _3425 * 40u;
                            _3440 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3427)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3427 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3427 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3427 + 3u)).x));
                            _3441 = _3440.w;
                            uint _3443 = (_3425 * 40u) + 4u;
                            _3456 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3443)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 3u)).x));
                            uint _3458 = (_3425 * 40u) + 8u;
                            _3468 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3458)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 2u)).x));
                            uint _3470 = (_3425 * 40u) + 16u;
                            _3483 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3470)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3470 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3470 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3470 + 3u)).x));
                            uint _3486 = (_3425 * 40u) + 20u;
                            _3499 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 3u)).x));
                            uint _3501 = (_3425 * 40u) + 24u;
                            vec4 _3514 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3501)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 3u)).x));
                            uint _3520 = (_3425 * 40u) + 28u;
                            vec4 _3533 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3520)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 3u)).x));
                            _3545 = fma(_1945, _3533.z, fma(_1944, _3533.y, _3533.x * _1943)) + _3533.w;
                            _3546 = !((fma(_1945, _3514.z, fma(_1944, _3514.y, _3514.x * _1943)) + _3514.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3546)
                            {
                                float _3573 = _3440.x - _1943;
                                float _3574 = _3440.y - _1944;
                                float _3575 = _3440.z - _1945;
                                float _3576 = dot(vec3(_3573, _3574, _3575), vec3(_3573, _3574, _3575));
                                float _3579 = inversesqrt(_3576);
                                float _3580 = _3579 * _3573;
                                float _3581 = _3579 * _3574;
                                float _3582 = _3579 * _3575;
                                float _3586 = 1.0 - (_3576 / (_3441 * _3441));
                                float _4738 = isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0));
                                float _3587 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                                float _3591 = sqrt(_3576) * _3456.w;
                                float _3593 = 1.39999997615814208984375 / (_3591 + 1.39999997615814208984375);
                                float _3594 = _3593 * _3593;
                                float _3597 = ((1.0 - _3594) * dot(vec3(_3580, _3581, _3582), vec3(_830, _833, _836))) + _3594;
                                float _3600 = _3591 * _3591;
                                float _3604 = (fma(_1945, _3483.z, fma(_1944, _3483.y, _3483.x * _1943)) + _3483.w) / _3545;
                                float _3605 = (fma(_1945, _3499.z, fma(_1944, _3499.y, _3499.x * _1943)) + _3499.w) / _3545;
                                float _3609 = 1.0 - dot(vec2(_3604, _3605), vec2(_3604, _3605));
                                float _4754 = isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0));
                                float _3610 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                                float _3611 = _3610 * (((isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0))) * _3587) / ((_3600 * 0.699999988079071044921875) + 1.0));
                                float _3623 = exp2(log2(1.0 / ((_3600 * 3.5) + 5.0)) * 0.25);
                                float _3624 = 1.0 - _890;
                                float _3631 = sqrt(1.0 - ((1.0 - (_3624 * _3624)) * (1.0 - (_3623 * _3623))));
                                float _3632 = _3631 * _3631;
                                float _3633 = _3632 * _3632;
                                float _3634 = _3580 - _3083;
                                float _3635 = _3581 - _3084;
                                float _3636 = _3582 - _3085;
                                float _3640 = inversesqrt(dot(vec3(_3634, _3635, _3636), vec3(_3634, _3635, _3636)));
                                float _3644 = dot(vec3(_830, _833, _836), vec3((-0.0) - _3083, (-0.0) - _3084, (-0.0) - _3085));
                                float _4765 = isnan(0.0) ? _3644 : (isnan(_3644) ? 0.0 : max(_3644, 0.0));
                                float _3647 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3648 = dot(vec3(_830, _833, _836), vec3(_3640 * _3634, _3640 * _3635, _3640 * _3636));
                                float _4776 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3651 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3655 = ((_3651 * _3651) * (_3633 + (-1.0))) + 1.0;
                                float _3656 = _3593 * _3632;
                                float _3657 = _3656 * _3656;
                                float _3663 = ((1.0 - _3657) * dot(vec3(_830, _833, _836), vec3(_3580, _3581, _3582))) + _3657;
                                float _4787 = isnan(0.0) ? _3663 : (isnan(_3663) ? 0.0 : max(_3663, 0.0));
                                float _3664 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3665 = 1.0 - _3632;
                                float _3675 = (0.5 / (((_3664 * ((_3647 * _3665) + _3632)) + 9.9999999392252902907785028219223e-09) + (((_3664 * _3665) + _3632) * _3647))) * _3664;
                                float _4798 = isnan(0.0) ? _3675 : (isnan(_3675) ? 0.0 : max(_3675, 0.0));
                                float _3685 = (_3610 * _3587) * (((_3633 * 3.1415927410125732421875) * (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0)))) / ((_3655 * _3655) * ((_3600 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3611 * _3456.y;
                                frontier_phi_78_pred_1 = _3611 * _3456.x;
                                frontier_phi_78_pred_2 = _3685 * _3468.z;
                                frontier_phi_78_pred_3 = _3685 * _3468.y;
                                frontier_phi_78_pred_4 = _3685 * _3468.x;
                                frontier_phi_78_pred_5 = _3611 * _3456.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3693 = frontier_phi_78_pred;
                            _3692 = frontier_phi_78_pred_1;
                            _3691 = frontier_phi_78_pred_2;
                            _3690 = frontier_phi_78_pred_3;
                            _3689 = frontier_phi_78_pred_4;
                            _3694 = frontier_phi_78_pred_5;
                            _3398 = _3692 + _3411;
                            _3399 = _3693 + _3412;
                            _3400 = _3694 + _3413;
                            _3395 = _3689 + _3408;
                            _3396 = _3690 + _3409;
                            _3397 = _3691 + _3410;
                            if (_3415 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3408 = _3395;
                                _3409 = _3396;
                                _3410 = _3397;
                                _3411 = _3398;
                                _3412 = _3399;
                                _3413 = _3400;
                                _3414 = _3415;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3400;
                        frontier_phi_72_pred_1 = _3399;
                        frontier_phi_72_pred_2 = _3398;
                        frontier_phi_72_pred_3 = _3397;
                        frontier_phi_72_pred_4 = _3396;
                        frontier_phi_72_pred_5 = _3395;
                    }
                    _3068 = frontier_phi_72_pred;
                    _3066 = frontier_phi_72_pred_1;
                    _3064 = frontier_phi_72_pred_2;
                    _3062 = frontier_phi_72_pred_3;
                    _3060 = frontier_phi_72_pred_4;
                    _3058 = frontier_phi_72_pred_5;
                    uint _3203 = _3202 + 1u;
                    if (_3203 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3196 = _3058;
                        _3197 = _3060;
                        _3198 = _3062;
                        _3199 = _3064;
                        _3200 = _3066;
                        _3201 = _3068;
                        _3202 = _3203;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3068;
                frontier_phi_60_61_ladder_1 = _3066;
                frontier_phi_60_61_ladder_2 = _3062;
                frontier_phi_60_61_ladder_3 = _3060;
                frontier_phi_60_61_ladder_4 = _3058;
                frontier_phi_60_61_ladder_5 = _3064;
            }
            else
            {
                frontier_phi_60_61_ladder = _2955;
                frontier_phi_60_61_ladder_1 = _2953;
                frontier_phi_60_61_ladder_2 = _2949;
                frontier_phi_60_61_ladder_3 = _2947;
                frontier_phi_60_61_ladder_4 = _2945;
                frontier_phi_60_61_ladder_5 = _2951;
            }
            _3057 = frontier_phi_60_61_ladder_4;
            _3059 = frontier_phi_60_61_ladder_3;
            _3061 = frontier_phi_60_61_ladder_2;
            _3063 = frontier_phi_60_61_ladder_5;
            _3065 = frontier_phi_60_61_ladder_1;
            _3067 = frontier_phi_60_61_ladder;
        }
        float _3072 = isnan(1.0) ? _874 : (isnan(_874) ? 1.0 : min(_874, 1.0));
        _2878 = (_3072 * _3063) + _2409;
        _2880 = (_3072 * _3065) + _2411;
        _2882 = (_3072 * _3067) + _2413;
        _2884 = ((_3057 * 0.039999999105930328369140625) * _3072) + _2732;
        _2886 = ((_3059 * 0.039999999105930328369140625) * _3072) + _2734;
        _2888 = ((_3061 * 0.039999999105930328369140625) * _3072) + _2736;
    }
    else
    {
        _2878 = _2409;
        _2880 = _2411;
        _2882 = _2413;
        _2884 = _2732;
        _2886 = _2734;
        _2888 = _2736;
    }
    float _4814 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _4825 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _4836 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    uint _2908 = _247 + 6u;
    float _2916 = _811 / cbSceneParam._m0[86u].x;
    float _2917 = _812 / cbSceneParam._m0[86u].y;
    vec4 _2931 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2916, _2917, (log2((isnan(cbSceneParam._m0[77u].w) ? _745 : (isnan(_745) ? cbSceneParam._m0[77u].w : min(_745, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2933 = _2931.x;
    float _2934 = _2931.y;
    float _2935 = _2931.z;
    float _2936 = _2931.w;
    float _3007;
    float _3009;
    float _3011;
    float _3013;
    if (_745 > cbSceneParam._m0[78u].w)
    {
        float _2970 = isnan(_745) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _745 : min(cbSceneParam._m0[80u].w, _745));
        float _2971 = _2970 / _745;
        float _2982 = _2971 * _796;
        float _2983 = _797 * _2971;
        float _2984 = (-0.0) - _2983;
        float _2985 = _2971 * _798;
        float _2987 = (cbSceneParam._m0[77u].w * _2984) / _2970;
        float _2988 = _2987 + cbSceneParam._m0[79u].w;
        float _2989 = cbSceneParam._m0[79u].w - _2983;
        float _2995 = sqrt(((_2982 * _2982) + (_2983 * _2983)) + (_2985 * _2985));
        float _2998 = (1.0 - (cbSceneParam._m0[77u].w / _2970)) * _2995;
        float _3003 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3005 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3158;
        if (abs((_2984 - _2987) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3158 = ((((_2988 > 0.0) ? exp2(_3003 * _2988) : (2.0 - exp2(_3005 * _2988))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2998;
        }
        else
        {
            float _3118 = 1.0 / cbSceneParam._m0[80u].x;
            float _3119 = isnan(_2989) ? _2988 : (isnan(_2988) ? _2989 : max(_2988, _2989));
            float _3120 = isnan(_2989) ? _2988 : (isnan(_2988) ? _2989 : min(_2988, _2989));
            float _3129 = isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : min(_3119, 0.0));
            float _3130 = isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : min(_3120, 0.0));
            _3158 = ((abs(_2995 / _2984) * cbSceneParam._m0[80u].y) * ((((_3129 - _3130) * 2.0) - ((exp2(_3003 * (isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : max(_3119, 0.0)))) - exp2(_3003 * (isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : max(_3120, 0.0))))) * _3118)) - ((exp2(_3005 * _3129) - exp2(_3005 * _3130)) * _3118))) + (_2998 * cbSceneParam._m0[80u].z);
        }
        vec4 _3160 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2916, _2917, 1.0), 0.0);
        float _3169 = exp2((_3158 * (-1.44269502162933349609375)) * (1.0 - _3160.w));
        float _3170 = log2(_3169);
        float _3186 = log2(_2936);
        _3007 = (exp2(_3186 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3170 * cbSceneParam._m0[78u].x)) * _3160.x) / cbSceneParam._m0[78u].x)) + _2933;
        _3009 = (exp2(_3186 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3170 * cbSceneParam._m0[78u].y)) * _3160.y) / cbSceneParam._m0[78u].y)) + _2934;
        _3011 = (exp2(_3186 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3170 * cbSceneParam._m0[78u].z)) * _3160.z) / cbSceneParam._m0[78u].z)) + _2935;
        _3013 = _3169 * _2936;
    }
    else
    {
        _3007 = _2933;
        _3009 = _2934;
        _3011 = _2935;
        _3013 = _2936;
    }
    float _3025 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3026 = _3025 == 3.0;
    float _3027 = log2(_3013);
    float _3034 = exp2(_3027 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0))) * (_2878 + ((isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))) * _874))) + ((_2884 + ((isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0))) * _1679)) * cbPerFrame._m0[3u].x));
    float _3035 = exp2(_3027 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2880 + ((isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))) * _874))) + ((_2886 + ((isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0))) * _1679)) * cbPerFrame._m0[3u].x));
    float _3036 = exp2(_3027 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2882 + ((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _874))) + ((_2888 + ((isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0))) * _1679)) * cbPerFrame._m0[3u].x));
    float _3045 = (_3025 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3045 * (_3026 ? _3034 : (_3034 + (cbSceneParam._m0[72u].w * _3007)));
    SV_Target.y = _3045 * (_3026 ? _3035 : (_3035 + (cbSceneParam._m0[72u].w * _3009)));
    SV_Target.z = _3045 * (_3026 ? _3036 : (_3036 + (cbSceneParam._m0[72u].w * _3011)));
    SV_Target.w = cbInstanceData._m0[_2908].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2908].w;
}


