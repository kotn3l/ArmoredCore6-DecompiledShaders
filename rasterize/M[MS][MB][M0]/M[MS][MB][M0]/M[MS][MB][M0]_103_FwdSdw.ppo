#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1222;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240 = _239 * TANGENT.x;
    float _241 = _239 * TANGENT.y;
    float _242 = _239 * TANGENT.z;
    uint _245 = uint(roundEven(NORMAL.w)) * 13u;
    uint _250 = _245 + 1u;
    uint _254 = _245 + 2u;
    float _263 = sqrt(((cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x) + (cbInstanceData._m0[_245].x * cbInstanceData._m0[_245].x)) + (cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x));
    float _264 = _263 * TEXCOORD.z;
    float _265 = _263 * TEXCOORD.w;
    vec4 _285 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _291 = _285.x * cbMtdParam._m0[11u].x;
    float _292 = _285.y * cbMtdParam._m0[11u].y;
    float _293 = _285.z * cbMtdParam._m0[11u].z;
    vec4 _312 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _264) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _265) + cbTextureTilingScale._m0[5u].w));
    vec4 _350 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _352 = _350.x;
    float _362 = dot(vec4(_352, _350.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _379 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_352 - _362) * cbMtdParam._m0[24u].x) + _362) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3811 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _380 = isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0));
    float _387 = (_380 * ((_312.x * cbMtdParam._m0[12u].x) - _291)) + _291;
    float _388 = (_380 * ((_312.y * cbMtdParam._m0[12u].y) - _292)) + _292;
    float _389 = (_380 * ((_312.z * cbMtdParam._m0[12u].z) - _293)) + _293;
    vec4 _407 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _264) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _265) + cbTextureTilingScale._m0[4u].w));
    vec4 _424 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _426 = _424.x;
    float _427 = _424.y;
    float _428 = _424.z;
    float _437 = ((_407.z - _428) * _380) + _428;
    float _440 = ((((_407.x - _426) * _380) + _426) * 2.0) + (-1.0);
    float _442 = ((((_407.y - _427) * _380) + _427) * 2.0) + (-1.0);
    float _443 = dot(vec2(_440, _442), vec2(_440, _442));
    float _3822 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _448 = sqrt(1.0 - (isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0))));
    float _451 = fma(_448, _233, fma(_442, _240, _440 * _226));
    float _454 = fma(_448, _234, fma(_442, _241, _440 * _227));
    float _457 = fma(_448, _235, fma(_442, _242, _440 * _228));
    float _461 = inversesqrt(dot(vec3(_451, _454, _457), vec3(_451, _454, _457)));
    vec4 _477 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _505 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _264) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _265) + cbTextureTilingScale._m0[11u].w));
    float _507 = _505.x;
    float _508 = 1.0 - _507;
    float _514 = (cbMtdParam._m0[19u].x + dot(vec4(_461 * _451, _461 * _454, _461 * _457, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_507 - _508) * cbMtdParam._m0[24u].z) + _508) * cbMtdParam._m0[21u].z);
    float _3833 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _515 = isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0));
    float _517 = (-0.0) - cbMtdParam._m0[24u].y;
    float _519 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _520 = isnan(1.0) ? _519 : (isnan(_519) ? 1.0 : min(_519, 1.0));
    float _527 = _515 - ((_515 * TEXCOORD_8.x) * _520);
    float _528 = _515 - ((_515 * TEXCOORD_8.y) * _520);
    float _529 = _515 - ((_515 * TEXCOORD_8.z) * _520);
    float _536 = (_527 * (cbMtdParam._m0[17u].x - _387)) + _387;
    float _537 = (_528 * (cbMtdParam._m0[17u].y - _388)) + _388;
    float _538 = (_529 * (cbMtdParam._m0[17u].z - _389)) + _389;
    vec4 _550 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _264) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _265) + cbTextureTilingScale._m0[19u].w));
    float _552 = _550.x;
    float _553 = 1.0 - _552;
    float _581 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_552 - _553) * cbMtdParam._m0[24u].w) + _553) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3854 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _582 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _590 = ((((cbMtdParam._m0[10u].x - _536) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _582) + _536;
    float _591 = ((((cbMtdParam._m0[10u].y - _537) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _582) + _537;
    float _592 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _538)) * _582) + _538;
    vec4 _606 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _264) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _265) + cbTextureTilingScale._m0[15u].w));
    float _613 = (_606.x * 2.0) + (-1.0);
    float _614 = (_606.y * 2.0) + (-1.0);
    float _615 = dot(vec2(_613, _614), vec2(_613, _614));
    float _3865 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _623 = ((_606.z - _437) * _527) + _437;
    float _626 = ((cbMtdParam._m0[23u].y - _623) * _582) + _623;
    vec4 _645 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _264) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _265) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _651 = (_645.x * 2.0) + (-1.0);
    float _652 = (_645.y * 2.0) + (-1.0);
    float _653 = dot(vec2(_651, _652), vec2(_651, _652));
    float _3876 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _668 = ((sqrt(1.0 - (isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0)))) - _448) * _529) + _448;
    float _671 = (((_613 - _440) * _527) + _440) + (cbMtdParam._m0[21u].x * _440);
    float _672 = (((_614 - _442) * _528) + _442) + (cbMtdParam._m0[21u].x * _442);
    float _683 = (((_651 - _671) + (_671 * cbMtdParam._m0[22u].z)) * _582) + _671;
    float _684 = (((_652 - _672) + (_672 * cbMtdParam._m0[22u].z)) * _582) + _672;
    float _685 = (_582 * (sqrt(1.0 - (isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0)))) - _668)) + _668;
    float _687 = cbMtdParam._m0[22u].x + _477.w;
    float _690 = fma(_685, _233, fma(_684, _240, _683 * _226));
    float _693 = fma(_685, _234, fma(_684, _241, _683 * _227));
    float _696 = fma(_685, _235, fma(_684, _242, _683 * _228));
    float _700 = inversesqrt(dot(vec3(_690, _693, _696), vec3(_690, _693, _696)));
    float _701 = _700 * _690;
    float _702 = _700 * _693;
    float _703 = _700 * _696;
    float _3887 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _704 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
    float _3898 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _3909 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _3920 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _3931 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _722 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _763 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _773 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _763);
    float _774 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _763);
    float _775 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _763);
    float _779 = inversesqrt(dot(vec3(_773, _774, _775), vec3(_773, _774, _775)));
    float _780 = _773 * _779;
    float _781 = _774 * _779;
    float _782 = _775 * _779;
    float _788 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _789 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _807 = fma(_703, cbSceneParam._m0[5u].z, fma(_702, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _701));
    float _810 = fma(_703, cbSceneParam._m0[6u].z, fma(_702, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _701));
    float _813 = fma(_703, cbSceneParam._m0[7u].z, fma(_702, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _701));
    uint _827 = (_245 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _833 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0)))) * cbInstanceData._m0[_827].x;
    float _834 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0)))) * cbInstanceData._m0[_827].y;
    float _835 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0)))) * cbInstanceData._m0[_827].z;
    float _3942 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _836 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _3953 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _837 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _3964 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _838 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
    vec4 _847 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _788, cbSceneParam._m0[86u].y * _789));
    float _851 = ((isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0))) * TEXCOORD_5.w) * _847.x;
    float _852 = dot(vec3(_701, _702, _703), vec3(_780, _781, _782));
    float _855 = _852 * 2.0;
    float _859 = (_855 * _701) - _780;
    float _860 = (_855 * _702) - _781;
    float _861 = (_855 * _703) - _782;
    float _865 = abs(dot(vec3(_780, _781, _782), vec3(_701, _702, _703)));
    float _3975 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _867 = sqrt(_704);
    float _880 = exp2((_867 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_867 * 3.0));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _916 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _920 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1221;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _946 = fma(_920, cbModelParam._m0[26u].z, fma(_916, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _912));
        float _950 = fma(_920, cbModelParam._m0[27u].z, fma(_916, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _912));
        float _954 = fma(_920, cbModelParam._m0[28u].z, fma(_916, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _912));
        float _979 = _912 + _701;
        float _980 = _916 + _702;
        float _981 = _920 + _703;
        float _991 = fma(_981, cbModelParam._m0[26u].z, fma(_980, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _979)) - _946;
        float _992 = fma(_981, cbModelParam._m0[27u].z, fma(_980, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _979)) - _950;
        float _993 = fma(_981, cbModelParam._m0[28u].z, fma(_980, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _979)) - _954;
        float _997 = inversesqrt(dot(vec3(_991, _992, _993), vec3(_991, _992, _993)));
        float _1010 = ((_997 * _991) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_946 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_997 * _992) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_950 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1012 = ((_997 * _993) / cbModelParam._m0[34u].z) + ((((((_954 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1015 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1029 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        float _1049 = exp2((_1015.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1015.x + (-0.5));
        float _1051 = _1049 * (_1015.y + (-0.5));
        float _1052 = _1049 * (_1015.z + (-0.5));
        float _1059 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1022.x + (-0.5));
        float _1061 = _1059 * (_1022.y + (-0.5));
        float _1062 = _1059 * (_1022.z + (-0.5));
        float _1069 = exp2((_1029.w + (-0.5)) * 20.0) * 2.0;
        float _1070 = _1069 * (_1029.x + (-0.5));
        float _1071 = _1069 * (_1029.y + (-0.5));
        float _1072 = _1069 * (_1029.z + (-0.5));
        float _1079 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1080 = _1079 * (_1036.x + (-0.5));
        float _1081 = _1079 * (_1036.y + (-0.5));
        float _1082 = _1079 * (_1036.z + (-0.5));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1086 = _1050 * 0.5;
        float _1087 = _1060 * 0.5;
        float _1088 = _1070 * 0.5;
        float _1089 = dot(vec3(_1086, _1087, _1088), vec3(_1086, _1087, _1088));
        float _1094 = (_1089 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1089);
        float _1103 = (dot(vec3(_701, _702, _703), vec3(_1094 * _1086, _1094 * _1087, _1094 * _1088)) + 1.0) * 0.5;
        float _4001 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1113 = sqrt(((_1087 * _1087) + (_1086 * _1086)) + (_1088 * _1088)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _4012 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1114 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
        float _1115 = _1114 * 2.0;
        float _1119 = (1.0 - _1114) / (_1114 + 1.0);
        float _4023 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1120 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
        float _1129 = ((((1.0 - _1120) * (_1115 + 2.0)) * exp2(log2(isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0))) * (_1115 + 1.0))) + _1120) * _1083;
        float _1130 = _1051 * 0.5;
        float _1131 = _1061 * 0.5;
        float _1132 = _1071 * 0.5;
        float _1133 = dot(vec3(_1130, _1131, _1132), vec3(_1130, _1131, _1132));
        float _1138 = (_1133 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1133);
        float _1146 = (dot(vec3(_701, _702, _703), vec3(_1138 * _1130, _1138 * _1131, _1138 * _1132)) + 1.0) * 0.5;
        float _4034 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1155 = sqrt(((_1131 * _1131) + (_1130 * _1130)) + (_1132 * _1132)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _4045 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1156 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
        float _1157 = _1156 * 2.0;
        float _1161 = (1.0 - _1156) / (_1156 + 1.0);
        float _4056 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1162 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
        float _1171 = ((((1.0 - _1162) * (_1157 + 2.0)) * exp2(log2(isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0))) * (_1157 + 1.0))) + _1162) * _1084;
        float _1172 = _1052 * 0.5;
        float _1173 = _1062 * 0.5;
        float _1174 = _1072 * 0.5;
        float _1175 = dot(vec3(_1172, _1173, _1174), vec3(_1172, _1173, _1174));
        float _1180 = (_1175 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1175);
        float _1188 = (dot(vec3(_701, _702, _703), vec3(_1180 * _1172, _1180 * _1173, _1180 * _1174)) + 1.0) * 0.5;
        float _4067 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1197 = sqrt(((_1173 * _1173) + (_1172 * _1172)) + (_1174 * _1174)) / (_1085 + 9.9999997473787516355514526367188e-06);
        float _4078 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _4089 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0))) * (_1199 + 1.0))) + _1204) * _1085;
        _1221 = _1052;
        _1223 = _1051;
        _1224 = _1050;
        _1225 = _1062;
        _1226 = _1061;
        _1227 = _1060;
        _1228 = _1072;
        _1229 = _1071;
        _1230 = _1070;
        _1231 = _1085;
        _1232 = _1084;
        _1233 = _1083;
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0)));
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0)));
        _1236 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
    }
    else
    {
        _1221 = _1222;
        _1223 = _1222;
        _1224 = _1222;
        _1225 = _1222;
        _1226 = _1222;
        _1227 = _1222;
        _1228 = _1222;
        _1229 = _1222;
        _1230 = _1222;
        _1231 = _1222;
        _1232 = _1222;
        _1233 = _1222;
        _1234 = 0.0;
        _1235 = 0.0;
        _1236 = 0.0;
    }
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1261 = fma(_920, cbModelParam._m0[30u].z, fma(_916, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _912));
        float _1265 = fma(_920, cbModelParam._m0[31u].z, fma(_916, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _912));
        float _1269 = fma(_920, cbModelParam._m0[32u].z, fma(_916, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _912));
        float _1292 = _912 + _701;
        float _1293 = _916 + _702;
        float _1294 = _920 + _703;
        float _1304 = fma(_1294, cbModelParam._m0[30u].z, fma(_1293, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1292)) - _1261;
        float _1305 = fma(_1294, cbModelParam._m0[31u].z, fma(_1293, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1292)) - _1265;
        float _1306 = fma(_1294, cbModelParam._m0[32u].z, fma(_1293, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1292)) - _1269;
        float _1310 = inversesqrt(dot(vec3(_1304, _1305, _1306), vec3(_1304, _1305, _1306)));
        float _1323 = ((_1310 * _1304) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1261 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1324 = ((_1310 * _1305) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1265 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1325 = ((_1310 * _1306) / cbModelParam._m0[35u].z) + ((((((_1269 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        float _1360 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1327.x + (-0.5));
        float _1362 = _1360 * (_1327.y + (-0.5));
        float _1363 = _1360 * (_1327.z + (-0.5));
        float _1370 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1334.x + (-0.5));
        float _1372 = _1370 * (_1334.y + (-0.5));
        float _1373 = _1370 * (_1334.z + (-0.5));
        float _1380 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1341.x + (-0.5));
        float _1382 = _1380 * (_1341.y + (-0.5));
        float _1383 = _1380 * (_1341.z + (-0.5));
        float _1390 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1348.x + (-0.5));
        float _1392 = _1390 * (_1348.y + (-0.5));
        float _1393 = _1390 * (_1348.z + (-0.5));
        float _1394 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1395 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1396 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1397 = _1361 * 0.5;
        float _1398 = _1371 * 0.5;
        float _1399 = _1381 * 0.5;
        float _1400 = dot(vec3(_1397, _1398, _1399), vec3(_1397, _1398, _1399));
        float _1405 = (_1400 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1400);
        float _1413 = (dot(vec3(_701, _702, _703), vec3(_1405 * _1397, _1405 * _1398, _1405 * _1399)) + 1.0) * 0.5;
        float _4130 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1422 = sqrt(((_1398 * _1398) + (_1397 * _1397)) + (_1399 * _1399)) / (_1394 + 9.9999997473787516355514526367188e-06);
        float _4141 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1423 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
        float _1424 = _1423 * 2.0;
        float _1428 = (1.0 - _1423) / (_1423 + 1.0);
        float _4152 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1438 = ((((1.0 - _1429) * (_1424 + 2.0)) * exp2(log2(isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0))) * (_1424 + 1.0))) + _1429) * _1394;
        float _1439 = _1362 * 0.5;
        float _1440 = _1372 * 0.5;
        float _1441 = _1382 * 0.5;
        float _1442 = dot(vec3(_1439, _1440, _1441), vec3(_1439, _1440, _1441));
        float _1447 = (_1442 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1442);
        float _1455 = (dot(vec3(_701, _702, _703), vec3(_1447 * _1439, _1447 * _1440, _1447 * _1441)) + 1.0) * 0.5;
        float _4163 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1464 = sqrt(((_1440 * _1440) + (_1439 * _1439)) + (_1441 * _1441)) / (_1395 + 9.9999997473787516355514526367188e-06);
        float _4174 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
        float _1466 = _1465 * 2.0;
        float _1470 = (1.0 - _1465) / (_1465 + 1.0);
        float _4185 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
        float _1480 = ((((1.0 - _1471) * (_1466 + 2.0)) * exp2(log2(isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0))) * (_1466 + 1.0))) + _1471) * _1395;
        float _1481 = _1363 * 0.5;
        float _1482 = _1373 * 0.5;
        float _1483 = _1383 * 0.5;
        float _1484 = dot(vec3(_1481, _1482, _1483), vec3(_1481, _1482, _1483));
        float _1489 = (_1484 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1484);
        float _1497 = (dot(vec3(_701, _702, _703), vec3(_1489 * _1481, _1489 * _1482, _1489 * _1483)) + 1.0) * 0.5;
        float _4196 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1506 = sqrt(((_1482 * _1482) + (_1481 * _1481)) + (_1483 * _1483)) / (_1396 + 9.9999997473787516355514526367188e-06);
        float _4207 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
        float _1508 = _1507 * 2.0;
        float _1512 = (1.0 - _1507) / (_1507 + 1.0);
        float _4218 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
        float _1522 = ((((1.0 - _1513) * (_1508 + 2.0)) * exp2(log2(isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))) * (_1508 + 1.0))) + _1513) * _1396;
        _1530 = _1363;
        _1531 = _1362;
        _1532 = _1361;
        _1533 = _1373;
        _1534 = _1372;
        _1535 = _1371;
        _1536 = _1383;
        _1537 = _1382;
        _1538 = _1381;
        _1539 = _1396;
        _1540 = _1395;
        _1541 = _1394;
        _1542 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0)));
        _1543 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0)));
        _1544 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0)));
    }
    else
    {
        _1530 = _1222;
        _1531 = _1222;
        _1532 = _1222;
        _1533 = _1222;
        _1534 = _1222;
        _1535 = _1222;
        _1536 = _1222;
        _1537 = _1222;
        _1538 = _1222;
        _1539 = _1222;
        _1540 = _1222;
        _1541 = _1222;
        _1542 = 0.0;
        _1543 = 0.0;
        _1544 = 0.0;
    }
    float _1554 = (cbModelParam._m0[1u].x * (_1542 - _1234)) + _1234;
    float _1555 = (cbModelParam._m0[1u].x * (_1543 - _1235)) + _1235;
    float _1556 = (cbModelParam._m0[1u].x * (_1544 - _1236)) + _1236;
    float _1577 = fma(_1556, cbSceneParam._m0[89u].z, fma(_1555, cbSceneParam._m0[89u].y, _1554 * cbSceneParam._m0[89u].x));
    float _1580 = fma(_1556, cbSceneParam._m0[90u].z, fma(_1555, cbSceneParam._m0[90u].y, _1554 * cbSceneParam._m0[90u].x));
    float _1583 = fma(_1556, cbSceneParam._m0[91u].z, fma(_1555, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1554));
    float _1598 = _859 * 0.5;
    float _1599 = _860 * 0.5;
    float _1600 = _861 * 0.5;
    float _1601 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1532, _1535, _1538, _1541));
    float _1604 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1531, _1534, _1537, _1540));
    float _1607 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1530, _1533, _1536, _1539));
    float _1641;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1614 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1221, _1225, _1228, _1231));
        float _1618 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1223, _1226, _1229, _1232));
        float _1622 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1224, _1227, _1230, _1233));
        float _1629 = dot(vec4(cbModelParam._m0[39u]), vec4(_1598, _1599, _1600, 1.0));
        _1641 = dot(vec3(isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1629) ? 0.0 : (isnan(0.0) ? _1629 : max(0.0, _1629))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1641 = 1.0;
    }
    float _1652;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1643 = dot(vec4(cbModelParam._m0[40u]), vec4(_1598, _1599, _1600, 1.0));
        _1652 = dot(vec3(isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1643) ? 0.0 : (isnan(0.0) ? _1643 : max(0.0, _1643))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1652 = 1.0;
    }
    float _1656 = (_1652 * cbModelParam._m0[1u].x) + (_1641 * (1.0 - cbModelParam._m0[1u].x));
    float _1666 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _704);
    float _1667 = isnan(_1666) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1666 : min(cbModelParam._m0[25u].z, _1666));
    float _1748;
    float _1750;
    float _1752;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1715 = fma(_920, cbModelParam._m0[13u].z, fma(_916, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _912)) + cbModelParam._m0[13u].w;
        float _1719 = fma(_920, cbModelParam._m0[14u].z, fma(_916, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _912)) + cbModelParam._m0[14u].w;
        float _1723 = fma(_920, cbModelParam._m0[15u].z, fma(_916, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _912)) + cbModelParam._m0[15u].w;
        float _1726 = fma(_861, cbModelParam._m0[13u].z, fma(_860, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _859));
        float _1729 = fma(_861, cbModelParam._m0[14u].z, fma(_860, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _859));
        float _1732 = fma(_861, cbModelParam._m0[15u].z, fma(_860, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _859));
        float _1760;
        if (_1726 > 0.0)
        {
            _1760 = abs((1.0 - _1715) / _1726);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1726 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1715 + 1.0) / _1726);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1760 = frontier_phi_14_12_ladder;
        }
        float _1930;
        if (_1729 > 0.0)
        {
            _1930 = abs((1.0 - _1719) / _1729);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1729 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1719 + 1.0) / _1729);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1930 = frontier_phi_23_19_ladder;
        }
        float _2225;
        if (_1732 > 0.0)
        {
            _2225 = abs((1.0 - _1723) / _1732);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1732 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1723 + 1.0) / _1732);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2225 = frontier_phi_35_30_ladder;
        }
        float _2227 = isnan(_1930) ? _1760 : (isnan(_1760) ? _1930 : min(_1760, _1930));
        float _2228 = isnan(_2225) ? _2227 : (isnan(_2227) ? _2225 : min(_2227, _2225));
        float _2232 = (_2228 * _1726) + _1715;
        float _2233 = (_2228 * _1729) + _1719;
        float _2234 = (_2228 * _1732) + _1723;
        float _2235 = _2228 * 9.9999997473787516355514526367188e-05;
        float _2237 = (-1.0) - _2235;
        float _2239 = _2235 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2234 > _2239) || ((_2234 < _2237) || ((_2233 > _2239) || ((_2233 < _2237) || ((_2232 < _2237) || (_2232 > _2239))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2379 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2234, cbModelParam._m0[9u].z, fma(_2233, cbModelParam._m0[9u].y, _2232 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2234, cbModelParam._m0[10u].z, fma(_2233, cbModelParam._m0[10u].y, _2232 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2234, cbModelParam._m0[11u].z, fma(_2233, cbModelParam._m0[11u].y, _2232 * cbModelParam._m0[11u].x))), _1667);
            frontier_phi_13_35_ladder = _2379.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2379.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2379.x * cbModelParam._m0[1u].y;
        }
        _1748 = frontier_phi_13_35_ladder_2;
        _1750 = frontier_phi_13_35_ladder_1;
        _1752 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1736 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_859, _860, _861), _1667);
        _1748 = _1736.x * cbModelParam._m0[1u].y;
        _1750 = _1736.y * cbModelParam._m0[1u].y;
        _1752 = _1736.z * cbModelParam._m0[1u].y;
    }
    float _1756 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _704);
    float _1757 = isnan(_1756) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1756 : min(cbModelParam._m0[25u].w, _1756));
    float _1847;
    float _1849;
    float _1851;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1811 = fma(_920, cbModelParam._m0[21u].z, fma(_916, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _912)) + cbModelParam._m0[21u].w;
        float _1815 = fma(_920, cbModelParam._m0[22u].z, fma(_916, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _912)) + cbModelParam._m0[22u].w;
        float _1819 = fma(_920, cbModelParam._m0[23u].z, fma(_916, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _912)) + cbModelParam._m0[23u].w;
        float _1822 = fma(_861, cbModelParam._m0[21u].z, fma(_860, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _859));
        float _1825 = fma(_861, cbModelParam._m0[22u].z, fma(_860, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _859));
        float _1828 = fma(_861, cbModelParam._m0[23u].z, fma(_860, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _859));
        float _1935;
        if (_1822 > 0.0)
        {
            _1935 = abs((1.0 - _1811) / _1822);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1822 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1811 + 1.0) / _1822);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1935 = frontier_phi_25_21_ladder;
        }
        float _2252;
        if (_1825 > 0.0)
        {
            _2252 = abs((1.0 - _1815) / _1825);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1815 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2252 = frontier_phi_37_32_ladder;
        }
        float _2579;
        if (_1828 > 0.0)
        {
            _2579 = abs((1.0 - _1819) / _1828);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1828 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1819 + 1.0) / _1828);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2579 = frontier_phi_47_44_ladder;
        }
        float _2581 = isnan(_2252) ? _1935 : (isnan(_1935) ? _2252 : min(_1935, _2252));
        float _2582 = isnan(_2579) ? _2581 : (isnan(_2581) ? _2579 : min(_2581, _2579));
        float _2586 = (_2582 * _1822) + _1811;
        float _2587 = (_2582 * _1825) + _1815;
        float _2588 = (_2582 * _1828) + _1819;
        float _2589 = _2582 * 9.9999997473787516355514526367188e-05;
        float _2590 = (-1.0) - _2589;
        float _2592 = _2589 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2588 > _2592) || ((_2588 < _2590) || ((_2587 > _2592) || ((_2587 < _2590) || ((_2586 < _2590) || (_2586 > _2592))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2706 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2588, cbModelParam._m0[17u].z, fma(_2587, cbModelParam._m0[17u].y, _2586 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2588, cbModelParam._m0[18u].z, fma(_2587, cbModelParam._m0[18u].y, _2586 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2588, cbModelParam._m0[19u].z, fma(_2587, cbModelParam._m0[19u].y, _2586 * cbModelParam._m0[19u].x))), _1757);
            frontier_phi_22_47_ladder = _2706.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2706.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2706.x * cbModelParam._m0[1u].z;
        }
        _1847 = frontier_phi_22_47_ladder_2;
        _1849 = frontier_phi_22_47_ladder_1;
        _1851 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1831 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_859, _860, _861), _1757);
        _1847 = _1831.x * cbModelParam._m0[1u].z;
        _1849 = _1831.y * cbModelParam._m0[1u].z;
        _1851 = _1831.z * cbModelParam._m0[1u].z;
    }
    float _1863 = ((((1.0 - _880) * ((_867 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_880 * _867)) * _851;
    float _1864 = _1863 * ((cbModelParam._m0[1u].w * (_1847 - _1748)) + _1748);
    float _1865 = _1863 * ((cbModelParam._m0[1u].w * (_1849 - _1750)) + _1750);
    float _1866 = _1863 * ((cbModelParam._m0[1u].w * (_1851 - _1752)) + _1752);
    float _1869 = fma(_1866, cbSceneParam._m0[89u].z, fma(_1865, cbSceneParam._m0[89u].y, _1864 * cbSceneParam._m0[89u].x));
    float _1872 = fma(_1866, cbSceneParam._m0[90u].z, fma(_1865, cbSceneParam._m0[90u].y, _1864 * cbSceneParam._m0[90u].x));
    float _1875 = fma(_1866, cbSceneParam._m0[91u].z, fma(_1865, cbSceneParam._m0[91u].y, _1864 * cbSceneParam._m0[91u].x));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1913 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1917 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1921 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1922 = _1909 / _1921;
    float _1923 = _1913 / _1921;
    float _1924 = _1917 / _1921;
    float _2071;
    float _2072;
    float _2073;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1951 = ((uint(_1924 > cbSceneParam._m0[59u].y) + uint(_1924 > cbSceneParam._m0[59u].x)) + uint(_1924 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1952 = _1951 + 43u;
        uint _1960 = _1951 + 44u;
        uint _1968 = _1951 + 45u;
        uint _1976 = _1951 + 46u;
        float _1987 = fma(_1921, cbSceneParam._m0[_1952].w, fma(_1917, cbSceneParam._m0[_1952].z, fma(_1913, cbSceneParam._m0[_1952].y, _1909 * cbSceneParam._m0[_1952].x)));
        float _1991 = fma(_1921, cbSceneParam._m0[_1960].w, fma(_1917, cbSceneParam._m0[_1960].z, fma(_1913, cbSceneParam._m0[_1960].y, _1909 * cbSceneParam._m0[_1960].x)));
        float _1999 = fma(_1921, cbSceneParam._m0[_1976].w, fma(_1917, cbSceneParam._m0[_1976].z, fma(_1913, cbSceneParam._m0[_1976].y, _1909 * cbSceneParam._m0[_1976].x)));
        float _2004 = cbSceneParam._m0[33u].z * _1999;
        float _2006 = cbSceneParam._m0[33u].w * _1999;
        float _2009 = fma(_1921, cbSceneParam._m0[_1968].w, fma(_1917, cbSceneParam._m0[_1968].z, fma(_1913, cbSceneParam._m0[_1968].y, _1909 * cbSceneParam._m0[_1968].x))) / _1999;
        float _2057 = (cbSceneParam._m0[33u].x - sqrt(((_1923 * _1923) + (_1922 * _1922)) + (_1924 * _1924))) * cbSceneParam._m0[33u].y;
        float _4344 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
        float _2064 = (isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2004 + _1987) / _1999, (_2006 + _1991) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2006 + _1987) / _1999, (_1991 - _2004) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1987 - _2004) / _1999, (_1991 - _2006) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1987 - _2006) / _1999, (_2004 + _1991) / _1999), _2009), 0.0)).x), vec4(0.25)));
        _2071 = 1.0 - (_2064 * cbSceneParam._m0[34u].x);
        _2072 = 1.0 - (_2064 * cbSceneParam._m0[34u].y);
        _2073 = 1.0 - (_2064 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2071 = 1.0;
        _2072 = 1.0;
        _2073 = 1.0;
    }
    float _2137;
    float _2139;
    float _2141;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2125 = fma(_1921, cbSceneParam._m0[63u].w, fma(_1917, cbSceneParam._m0[63u].z, fma(_1913, cbSceneParam._m0[63u].y, _1909 * cbSceneParam._m0[63u].x)));
        float _2126 = fma(_1921, cbSceneParam._m0[60u].w, fma(_1917, cbSceneParam._m0[60u].z, fma(_1913, cbSceneParam._m0[60u].y, _1909 * cbSceneParam._m0[60u].x))) / _2125;
        float _2127 = fma(_1921, cbSceneParam._m0[61u].w, fma(_1917, cbSceneParam._m0[61u].z, fma(_1913, cbSceneParam._m0[61u].y, _1909 * cbSceneParam._m0[61u].x))) / _2125;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2126 >= cbSceneParam._m0[64u].x) && (_2127 >= cbSceneParam._m0[64u].y)) && (_2126 <= cbSceneParam._m0[64u].z)) && (_2127 <= cbSceneParam._m0[64u].w))
        {
            float _2265 = fma(_1921, cbSceneParam._m0[62u].w, fma(_1917, cbSceneParam._m0[62u].z, fma(_1913, cbSceneParam._m0[62u].y, _1909 * cbSceneParam._m0[62u].x))) / _2125;
            float _2269 = isnan(cbSceneParam._m0[41u].w) ? _2265 : (isnan(_2265) ? cbSceneParam._m0[41u].w : max(_2265, cbSceneParam._m0[41u].w));
            float _2312 = (cbSceneParam._m0[33u].x - sqrt(((_1923 * _1923) + (_1922 * _1922)) + (_1924 * _1924))) * cbSceneParam._m0[33u].y;
            float _4360 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
            float _2319 = (isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2126, cbSceneParam._m0[33u].w + _2127), _2269), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2126, _2127 - cbSceneParam._m0[33u].z), _2269), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2126 - cbSceneParam._m0[33u].z, _2127 - cbSceneParam._m0[33u].w), _2269), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2126 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2127), _2269), 0.0)).x), vec4(0.25)));
            float _2323 = 1.0 - (_2319 * cbSceneParam._m0[34u].x);
            float _2324 = 1.0 - (_2319 * cbSceneParam._m0[34u].y);
            float _2325 = 1.0 - (_2319 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2325) ? _2073 : (isnan(_2073) ? _2325 : min(_2073, _2325));
            frontier_phi_34_33_ladder_1 = isnan(_2324) ? _2072 : (isnan(_2072) ? _2324 : min(_2072, _2324));
            frontier_phi_34_33_ladder_2 = isnan(_2323) ? _2071 : (isnan(_2071) ? _2323 : min(_2071, _2323));
        }
        else
        {
            frontier_phi_34_33_ladder = _2073;
            frontier_phi_34_33_ladder_1 = _2072;
            frontier_phi_34_33_ladder_2 = _2071;
        }
        _2137 = frontier_phi_34_33_ladder_2;
        _2139 = frontier_phi_34_33_ladder_1;
        _2141 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2137 = _2071;
        _2139 = _2072;
        _2141 = _2073;
    }
    uvec4 _2146 = floatBitsToUint(cbInstanceData._m0[_245 + 5u]);
    uint _2148 = _2146.x * 14u;
    uint _2149 = _2148 + 13u;
    float _2156 = _851 + (-1.0);
    float _2161 = (cbLight._m0[_2149].x * _2156) + 1.0;
    float _2162 = (cbLight._m0[_2149].y * _2156) + 1.0;
    float _2163 = (cbLight._m0[_2149].z * _2156) + 1.0;
    float _2164 = (cbLight._m0[_2149].w * _2156) + 1.0;
    uint _2165 = _2148 + 5u;
    float _2171 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
    uint _2175 = _2148 + 4u;
    float _2184 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
    uint _2188 = _2148 | 1u;
    float _2199 = dot(vec3(cbLight._m0[_2148].xyz), vec3(_701, _702, _703));
    float _2202 = dot(vec3(cbLight._m0[_2188].xyz), vec3(_701, _702, _703));
    float _4396 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
    float _4407 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _2207 = (isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0))) * 0.3183098733425140380859375;
    float _2209 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * 0.3183098733425140380859375;
    float _2216 = ((cbLight._m0[_2165].x * _2171) * _2209) + (((cbLight._m0[_2175].x * _2137) * _2184) * _2207);
    float _2217 = ((_2171 * cbLight._m0[_2165].y) * _2209) + (((cbLight._m0[_2175].y * _2139) * _2184) * _2207);
    float _2218 = ((_2171 * cbLight._m0[_2165].z) * _2209) + (((cbLight._m0[_2175].z * _2141) * _2184) * _2207);
    uvec4 _2222 = floatBitsToUint(cbLight._m0[_2148 + 12u]);
    bool _2224 = _2222.x == 0u;
    float _2326;
    float _2328;
    float _2330;
    if (_2224)
    {
        _2326 = _2216;
        _2328 = _2217;
        _2330 = _2218;
    }
    else
    {
        uint _2334 = _2148 + 6u;
        float _2350 = (dot(vec3(cbLight._m0[_2148 + 2u].xyz), vec3(_701, _702, _703)) * 0.5) + 0.5;
        float _2351 = _2350 * _2350;
        float _4418 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
        float _2352 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
        float _2353 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2326 = (((cbLight._m0[_2334].x * 0.3183098733425140380859375) * _2352) * _2353) + _2216;
        _2328 = (((cbLight._m0[_2334].y * 0.3183098733425140380859375) * _2352) * _2353) + _2217;
        _2330 = (((cbLight._m0[_2334].z * 0.3183098733425140380859375) * _2352) * _2353) + _2218;
    }
    bool _2333 = _2222.y == 0u;
    float _2388;
    float _2390;
    float _2392;
    if (_2333)
    {
        _2388 = _2326;
        _2390 = _2328;
        _2392 = _2330;
    }
    else
    {
        uint _2550 = _2148 + 7u;
        float _2566 = (dot(vec3(cbLight._m0[_2148 + 3u].xyz), vec3(_701, _702, _703)) * 0.5) + 0.5;
        float _2567 = _2566 * _2566;
        float _4434 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
        float _2568 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
        float _2569 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2388 = (((cbLight._m0[_2550].x * 0.3183098733425140380859375) * _2568) * _2569) + _2326;
        _2390 = (((cbLight._m0[_2550].y * 0.3183098733425140380859375) * _2568) * _2569) + _2328;
        _2392 = (((cbLight._m0[_2550].z * 0.3183098733425140380859375) * _2568) * _2569) + _2330;
    }
    uint _2395 = _2148 + 8u;
    float _2408 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2148].w)) * _704) * 0.949999988079071044921875);
    float _2409 = _2408 * _2408;
    float _2410 = cbLight._m0[_2148].x + _780;
    float _2411 = cbLight._m0[_2148].y + _781;
    float _2412 = cbLight._m0[_2148].z + _782;
    float _2416 = inversesqrt(dot(vec3(_2410, _2411, _2412), vec3(_2410, _2411, _2412)));
    float _2417 = _2416 * _2410;
    float _2418 = _2416 * _2411;
    float _2419 = _2416 * _2412;
    float _2420 = dot(vec3(_701, _702, _703), vec3(cbLight._m0[_2148].xyz));
    float _4450 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2423 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
    float _4461 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _2424 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
    float _2425 = dot(vec3(_701, _702, _703), vec3(_2417, _2418, _2419));
    float _4472 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
    float _2428 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
    float _2429 = dot(vec3(cbLight._m0[_2148].xyz), vec3(_2417, _2418, _2419));
    float _4483 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2433 = _2409 * _2409;
    float _2437 = ((_2428 * _2428) * (_2433 + (-1.0))) + 1.0;
    float _2448 = (exp2(log2(1.0 - (isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2449 = 1.0 - _2409;
    float _2460 = (0.5 / (((_2424 * ((_2423 * _2449) + _2409)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2449) + _2409) * _2423))) * _2423;
    float _4494 = isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0));
    float _2462 = (isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * (_2433 / ((_2437 * _2437) * 3.141590118408203125));
    uint _2476 = _2148 + 9u;
    float _2487 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2188].w)) * _704) * 0.949999988079071044921875);
    float _2488 = _2487 * _2487;
    float _2489 = cbLight._m0[_2188].x + _780;
    float _2490 = cbLight._m0[_2188].y + _781;
    float _2491 = cbLight._m0[_2188].z + _782;
    float _2495 = inversesqrt(dot(vec3(_2489, _2490, _2491), vec3(_2489, _2490, _2491)));
    float _2496 = _2495 * _2489;
    float _2497 = _2495 * _2490;
    float _2498 = _2495 * _2491;
    float _2499 = dot(vec3(_701, _702, _703), vec3(cbLight._m0[_2188].xyz));
    float _4505 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
    float _2502 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
    float _2503 = dot(vec3(_701, _702, _703), vec3(_2496, _2497, _2498));
    float _4516 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2506 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
    float _2507 = dot(vec3(cbLight._m0[_2188].xyz), vec3(_2496, _2497, _2498));
    float _4527 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
    float _2511 = _2488 * _2488;
    float _2515 = ((_2506 * _2506) * (_2511 + (-1.0))) + 1.0;
    float _2524 = (exp2(log2(1.0 - (isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2525 = 1.0 - _2488;
    float _2535 = (0.5 / (((_2424 * ((_2502 * _2525) + _2488)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2525) + _2488) * _2502))) * _2502;
    float _4538 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
    float _2537 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * (_2511 / ((_2515 * _2515) * 3.141590118408203125));
    float _2547 = (((_2524 * cbLight._m0[_2476].x) * _2537) * _2171) + ((((cbLight._m0[_2395].x * _2137) * _2448) * _2462) * _2184);
    float _2548 = (((_2524 * cbLight._m0[_2476].y) * _2537) * _2171) + ((((cbLight._m0[_2395].y * _2139) * _2448) * _2462) * _2184);
    float _2549 = (((_2524 * cbLight._m0[_2476].z) * _2537) * _2171) + ((((cbLight._m0[_2395].z * _2141) * _2448) * _2462) * _2184);
    float _2605;
    float _2607;
    float _2609;
    if (_2224)
    {
        _2605 = _2547;
        _2607 = _2548;
        _2609 = _2549;
    }
    else
    {
        uint _2611 = _2148 + 2u;
        uint _2615 = _2148 + 10u;
        float _2629 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2611].w)) * _704) * 0.949999988079071044921875);
        float _2630 = _2629 * _2629;
        float _2631 = cbLight._m0[_2611].x + _780;
        float _2632 = cbLight._m0[_2611].y + _781;
        float _2633 = cbLight._m0[_2611].z + _782;
        float _2637 = inversesqrt(dot(vec3(_2631, _2632, _2633), vec3(_2631, _2632, _2633)));
        float _2638 = _2637 * _2631;
        float _2639 = _2637 * _2632;
        float _2640 = _2637 * _2633;
        float _2641 = dot(vec3(_701, _702, _703), vec3(cbLight._m0[_2611].xyz));
        float _4549 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
        float _2644 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _2645 = dot(vec3(_701, _702, _703), vec3(_2638, _2639, _2640));
        float _4560 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
        float _2648 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2649 = dot(vec3(cbLight._m0[_2611].xyz), vec3(_2638, _2639, _2640));
        float _4571 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
        float _2653 = _2630 * _2630;
        float _2657 = ((_2648 * _2648) * (_2653 + (-1.0))) + 1.0;
        float _2666 = (exp2(log2(1.0 - (isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2667 = 1.0 - _2630;
        float _2677 = (0.5 / (((_2424 * ((_2644 * _2667) + _2630)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2667) + _2630) * _2644))) * _2644;
        float _4582 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
        float _2679 = (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0))) * (_2653 / ((_2657 * _2657) * 3.141590118408203125));
        float _2680 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2605 = (((_2666 * cbLight._m0[_2615].x) * _2679) * _2680) + _2547;
        _2607 = (((_2666 * cbLight._m0[_2615].y) * _2679) * _2680) + _2548;
        _2609 = (((_2666 * cbLight._m0[_2615].z) * _2679) * _2680) + _2549;
    }
    float _2711;
    float _2713;
    float _2715;
    if (_2333)
    {
        _2711 = _2605;
        _2713 = _2607;
        _2715 = _2609;
    }
    else
    {
        uint _2722 = _2148 + 3u;
        uint _2726 = _2148 + 11u;
        float _2740 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2722].w)) * _704) * 0.949999988079071044921875);
        float _2741 = _2740 * _2740;
        float _2742 = cbLight._m0[_2722].x + _780;
        float _2743 = cbLight._m0[_2722].y + _781;
        float _2744 = cbLight._m0[_2722].z + _782;
        float _2748 = inversesqrt(dot(vec3(_2742, _2743, _2744), vec3(_2742, _2743, _2744)));
        float _2749 = _2748 * _2742;
        float _2750 = _2748 * _2743;
        float _2751 = _2748 * _2744;
        float _2752 = dot(vec3(_701, _702, _703), vec3(cbLight._m0[_2722].xyz));
        float _4598 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2755 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
        float _2756 = dot(vec3(_701, _702, _703), vec3(_2749, _2750, _2751));
        float _4609 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
        float _2759 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
        float _2760 = dot(vec3(cbLight._m0[_2722].xyz), vec3(_2749, _2750, _2751));
        float _4620 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
        float _2764 = _2741 * _2741;
        float _2768 = ((_2759 * _2759) * (_2764 + (-1.0))) + 1.0;
        float _2777 = (exp2(log2(1.0 - (isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2778 = 1.0 - _2741;
        float _2788 = (0.5 / (((_2424 * ((_2755 * _2778) + _2741)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2778) + _2741) * _2755))) * _2755;
        float _4631 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
        float _2790 = (isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0))) * (_2764 / ((_2768 * _2768) * 3.141590118408203125));
        float _2791 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2711 = (((_2777 * cbLight._m0[_2726].x) * _2790) * _2791) + _2605;
        _2713 = (((_2777 * cbLight._m0[_2726].y) * _2790) * _2791) + _2607;
        _2715 = (((_2777 * cbLight._m0[_2726].z) * _2790) * _2791) + _2609;
    }
    float _2857;
    float _2859;
    float _2861;
    float _2863;
    float _2865;
    float _2867;
    if (_2146.y == 0u)
    {
        uvec4 _2812 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2813 = _2812.x;
        uint _2824 = uint((float(_2812.y) * floor(float(uint(cbSceneParam._m0[85u].y * _789) / _2813))) + floor(float(uint(cbSceneParam._m0[85u].x * _788) / _2813)));
        float _2834 = (log2(_1924 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2835 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
        uint _2838 = uint(isnan(14.0) ? _2835 : (isnan(_2835) ? 14.0 : min(_2835, 14.0)));
        uvec4 _2843 = texelFetch(g_lightClusterGridBuffer, int(((_2838 << 2u) + (_2824 << 6u)) >> 2u));
        uint _2844 = _2843.x;
        uint _2845 = _2812.z;
        float _2924;
        float _2926;
        float _2928;
        float _2930;
        float _2932;
        float _2934;
        if (((((1u << ((_2845 >> 4u) & 15u)) + 4294967295u) & _2844) == 0u) || ((_2845 & 240u) == 0u))
        {
            _2924 = 0.0;
            _2926 = 0.0;
            _2928 = 0.0;
            _2930 = 0.0;
            _2932 = 0.0;
            _2934 = 0.0;
        }
        else
        {
            float _2925;
            float _2927;
            float _2929;
            float _2931;
            float _2933;
            float _2935;
            float _3068 = 0.0;
            float _3069 = 0.0;
            float _3070 = 0.0;
            float _3071 = 0.0;
            float _3072 = 0.0;
            float _3073 = 0.0;
            uint _3074 = 0u;
            uint _3083;
            bool _3084;
            for (;;)
            {
                _3083 = texelFetch(g_lightClassification, int((((_2838 << 5u) + (_2824 << 9u)) + (_3074 << 2u)) >> 2u)).x;
                _3084 = _3083 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3084)
                {
                    frontier_phi_66_pred = _3073;
                    frontier_phi_66_pred_1 = _3072;
                    frontier_phi_66_pred_2 = _3071;
                    frontier_phi_66_pred_3 = _3070;
                    frontier_phi_66_pred_4 = _3069;
                    frontier_phi_66_pred_5 = _3068;
                }
                else
                {
                    float _3192;
                    float _3193;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    uint _3198;
                    _3192 = _3068;
                    _3193 = _3069;
                    _3194 = _3070;
                    _3195 = _3071;
                    _3196 = _3072;
                    _3197 = _3073;
                    _3198 = _3083;
                    float _3124;
                    float _3125;
                    float _3126;
                    float _3127;
                    float _3128;
                    float _3129;
                    for (;;)
                    {
                        uint _3202 = uint(findLSB(_3198)) + (_3074 << 5u);
                        uint _3199 = (_3198 + 4294967295u) & _3198;
                        uint _3204 = _3202 * 48u;
                        vec4 _3218 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3204)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 3u)).x));
                        uint _3224 = (_3202 * 48u) + 4u;
                        vec4 _3237 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3224)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 3u)).x));
                        uint _3243 = (_3202 * 48u) + 8u;
                        vec3 _3254 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3243)).x, texelFetch(g_PointLightRenderingBuffer, int(_3243 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3243 + 2u)).x));
                        float _3258 = _3218.x - _1922;
                        float _3259 = _3218.y - _1923;
                        float _3260 = _3218.z - _1924;
                        float _3261 = dot(vec3(_3258, _3259, _3260), vec3(_3258, _3259, _3260));
                        float _3264 = inversesqrt(_3261);
                        float _3265 = _3264 * _3258;
                        float _3266 = _3264 * _3259;
                        float _3267 = _3264 * _3260;
                        float _3268 = dot(vec3(_807, _810, _813), vec3(_3265, _3266, _3267));
                        float _3273 = 1.0 - (_3261 * _3218.w);
                        float _4657 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3274 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
                        float _3275 = sqrt(_3261) * _3237.w;
                        float _3278 = 1.39999997615814208984375 / (_3275 + 1.39999997615814208984375);
                        float _3279 = _3278 * _3278;
                        float _3282 = ((1.0 - _3279) * _3268) + _3279;
                        float _3285 = _3275 * _3275;
                        float _3289 = ((isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : max(_3282, 0.0))) * _3274) / ((_3285 * 0.699999988079071044921875) + 1.0);
                        float _3293 = (-0.0) - _1922;
                        float _3294 = (-0.0) - _1923;
                        float _3295 = (-0.0) - _1924;
                        float _3299 = inversesqrt(dot(vec3(_3293, _3294, _3295), vec3(_3293, _3294, _3295)));
                        float _3300 = _3299 * _3293;
                        float _3301 = _3299 * _3294;
                        float _3302 = _3299 * _3295;
                        float _3309 = exp2(log2(1.0 / ((_3285 * 3.5) + 5.0)) * 0.25);
                        float _3310 = 1.0 - _867;
                        float _3317 = sqrt(1.0 - ((1.0 - (_3310 * _3310)) * (1.0 - (_3309 * _3309))));
                        float _3318 = _3317 * _3317;
                        float _3319 = _3318 * _3318;
                        float _3320 = _3300 + _3265;
                        float _3321 = _3301 + _3266;
                        float _3322 = _3302 + _3267;
                        float _3326 = inversesqrt(dot(vec3(_3320, _3321, _3322), vec3(_3320, _3321, _3322)));
                        float _3330 = dot(vec3(_807, _810, _813), vec3(_3300, _3301, _3302));
                        float _4673 = isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : max(_3330, 0.0));
                        float _3333 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
                        float _3334 = dot(vec3(_807, _810, _813), vec3(_3326 * _3320, _3326 * _3321, _3326 * _3322));
                        float _4684 = isnan(0.0) ? _3334 : (isnan(_3334) ? 0.0 : max(_3334, 0.0));
                        float _3337 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
                        float _3341 = ((_3337 * _3337) * (_3319 + (-1.0))) + 1.0;
                        float _3342 = _3278 * _3318;
                        float _3343 = _3342 * _3342;
                        float _3346 = ((1.0 - _3343) * _3268) + _3343;
                        float _4695 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3347 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
                        float _3348 = 1.0 - _3318;
                        float _3358 = (0.5 / (((_3347 * ((_3333 * _3348) + _3318)) + 9.9999999392252902907785028219223e-09) + (((_3347 * _3348) + _3318) * _3333))) * _3347;
                        float _4706 = isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : max(_3358, 0.0));
                        float _3369 = (((_3319 * 3.1415927410125732421875) * (isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0)))) / ((_3341 * _3341) * ((_3285 * 2.1991131305694580078125) + 3.141590118408203125))) * _3274;
                        _3127 = (_3289 * _3237.x) + _3195;
                        _3128 = (_3289 * _3237.y) + _3196;
                        _3129 = (_3289 * _3237.z) + _3197;
                        _3124 = (_3369 * _3254.x) + _3192;
                        _3125 = (_3369 * _3254.y) + _3193;
                        _3126 = (_3369 * _3254.z) + _3194;
                        if (_3199 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3192 = _3124;
                            _3193 = _3125;
                            _3194 = _3126;
                            _3195 = _3127;
                            _3196 = _3128;
                            _3197 = _3129;
                            _3198 = _3199;
                        }
                    }
                    frontier_phi_66_pred = _3129;
                    frontier_phi_66_pred_1 = _3128;
                    frontier_phi_66_pred_2 = _3127;
                    frontier_phi_66_pred_3 = _3126;
                    frontier_phi_66_pred_4 = _3125;
                    frontier_phi_66_pred_5 = _3124;
                }
                _2935 = frontier_phi_66_pred;
                _2933 = frontier_phi_66_pred_1;
                _2931 = frontier_phi_66_pred_2;
                _2929 = frontier_phi_66_pred_3;
                _2927 = frontier_phi_66_pred_4;
                _2925 = frontier_phi_66_pred_5;
                uint _3075 = _3074 + 1u;
                if (_3075 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3068 = _2925;
                    _3069 = _2927;
                    _3070 = _2929;
                    _3071 = _2931;
                    _3072 = _2933;
                    _3073 = _2935;
                    _3074 = _3075;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2924 = _2925;
            _2926 = _2927;
            _2928 = _2929;
            _2930 = _2931;
            _2932 = _2933;
            _2934 = _2935;
        }
        uvec4 _2938 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2939 = _2938.z;
        uint _2941 = (_2939 >> 8u) & 15u;
        float _3036;
        float _3038;
        float _3040;
        float _3042;
        float _3044;
        float _3046;
        if (((4294967295u << _2941) & _2844) == 0u)
        {
            _3036 = _2924;
            _3038 = _2926;
            _3040 = _2928;
            _3042 = _2930;
            _3044 = _2932;
            _3046 = _2934;
        }
        else
        {
            float _3061 = inversesqrt(dot(vec3(_1922, _1923, _1924), vec3(_1922, _1923, _1924)));
            float _3062 = _3061 * _1922;
            float _3063 = _3061 * _1923;
            float _3064 = _3061 * _1924;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2941 < ((_2939 >> 12u) & 15u))
            {
                float _3037;
                float _3039;
                float _3041;
                float _3043;
                float _3045;
                float _3047;
                float _3175 = _2924;
                float _3176 = _2926;
                float _3177 = _2928;
                float _3178 = _2930;
                float _3179 = _2932;
                float _3180 = _2934;
                uint _3181 = _2941;
                uint _3190;
                bool _3191;
                for (;;)
                {
                    _3190 = texelFetch(g_lightClassification, int((((_2838 << 5u) + (_2824 << 9u)) + (_3181 << 2u)) >> 2u)).x;
                    _3191 = _3190 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3191)
                    {
                        frontier_phi_72_pred = _3180;
                        frontier_phi_72_pred_1 = _3179;
                        frontier_phi_72_pred_2 = _3178;
                        frontier_phi_72_pred_3 = _3177;
                        frontier_phi_72_pred_4 = _3176;
                        frontier_phi_72_pred_5 = _3175;
                    }
                    else
                    {
                        float _3374;
                        float _3375;
                        float _3376;
                        float _3377;
                        float _3378;
                        float _3379;
                        float _3668;
                        float _3669;
                        float _3670;
                        float _3671;
                        float _3672;
                        float _3673;
                        float _3387 = _3175;
                        float _3388 = _3176;
                        float _3389 = _3177;
                        float _3390 = _3178;
                        float _3391 = _3179;
                        float _3392 = _3180;
                        uint _3393 = _3190;
                        uint _3394;
                        vec4 _3419;
                        float _3420;
                        vec4 _3435;
                        vec3 _3447;
                        vec4 _3462;
                        vec4 _3478;
                        float _3524;
                        bool _3525;
                        for (;;)
                        {
                            uint _3404 = ((_3181 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3393));
                            _3394 = (_3393 + 4294967295u) & _3393;
                            uint _3406 = _3404 * 40u;
                            _3419 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3406)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 3u)).x));
                            _3420 = _3419.w;
                            uint _3422 = (_3404 * 40u) + 4u;
                            _3435 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3422)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 3u)).x));
                            uint _3437 = (_3404 * 40u) + 8u;
                            _3447 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3437)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 2u)).x));
                            uint _3449 = (_3404 * 40u) + 16u;
                            _3462 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3449)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 3u)).x));
                            uint _3465 = (_3404 * 40u) + 20u;
                            _3478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 3u)).x));
                            uint _3480 = (_3404 * 40u) + 24u;
                            vec4 _3493 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 3u)).x));
                            uint _3499 = (_3404 * 40u) + 28u;
                            vec4 _3512 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3499)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 3u)).x));
                            _3524 = fma(_1924, _3512.z, fma(_1923, _3512.y, _3512.x * _1922)) + _3512.w;
                            _3525 = !((fma(_1924, _3493.z, fma(_1923, _3493.y, _3493.x * _1922)) + _3493.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3525)
                            {
                                float _3552 = _3419.x - _1922;
                                float _3553 = _3419.y - _1923;
                                float _3554 = _3419.z - _1924;
                                float _3555 = dot(vec3(_3552, _3553, _3554), vec3(_3552, _3553, _3554));
                                float _3558 = inversesqrt(_3555);
                                float _3559 = _3558 * _3552;
                                float _3560 = _3558 * _3553;
                                float _3561 = _3558 * _3554;
                                float _3565 = 1.0 - (_3555 / (_3420 * _3420));
                                float _4717 = isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0));
                                float _3566 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
                                float _3570 = sqrt(_3555) * _3435.w;
                                float _3572 = 1.39999997615814208984375 / (_3570 + 1.39999997615814208984375);
                                float _3573 = _3572 * _3572;
                                float _3576 = ((1.0 - _3573) * dot(vec3(_3559, _3560, _3561), vec3(_807, _810, _813))) + _3573;
                                float _3579 = _3570 * _3570;
                                float _3583 = (fma(_1924, _3462.z, fma(_1923, _3462.y, _3462.x * _1922)) + _3462.w) / _3524;
                                float _3584 = (fma(_1924, _3478.z, fma(_1923, _3478.y, _3478.x * _1922)) + _3478.w) / _3524;
                                float _3588 = 1.0 - dot(vec2(_3583, _3584), vec2(_3583, _3584));
                                float _4733 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                                float _3589 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
                                float _3590 = _3589 * (((isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0))) * _3566) / ((_3579 * 0.699999988079071044921875) + 1.0));
                                float _3602 = exp2(log2(1.0 / ((_3579 * 3.5) + 5.0)) * 0.25);
                                float _3603 = 1.0 - _867;
                                float _3610 = sqrt(1.0 - ((1.0 - (_3603 * _3603)) * (1.0 - (_3602 * _3602))));
                                float _3611 = _3610 * _3610;
                                float _3612 = _3611 * _3611;
                                float _3613 = _3559 - _3062;
                                float _3614 = _3560 - _3063;
                                float _3615 = _3561 - _3064;
                                float _3619 = inversesqrt(dot(vec3(_3613, _3614, _3615), vec3(_3613, _3614, _3615)));
                                float _3623 = dot(vec3(_807, _810, _813), vec3((-0.0) - _3062, (-0.0) - _3063, (-0.0) - _3064));
                                float _4744 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                                float _3626 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
                                float _3627 = dot(vec3(_807, _810, _813), vec3(_3619 * _3613, _3619 * _3614, _3619 * _3615));
                                float _4755 = isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0));
                                float _3630 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
                                float _3634 = ((_3630 * _3630) * (_3612 + (-1.0))) + 1.0;
                                float _3635 = _3572 * _3611;
                                float _3636 = _3635 * _3635;
                                float _3642 = ((1.0 - _3636) * dot(vec3(_807, _810, _813), vec3(_3559, _3560, _3561))) + _3636;
                                float _4766 = isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0));
                                float _3643 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
                                float _3644 = 1.0 - _3611;
                                float _3654 = (0.5 / (((_3643 * ((_3626 * _3644) + _3611)) + 9.9999999392252902907785028219223e-09) + (((_3643 * _3644) + _3611) * _3626))) * _3643;
                                float _4777 = isnan(0.0) ? _3654 : (isnan(_3654) ? 0.0 : max(_3654, 0.0));
                                float _3664 = (_3589 * _3566) * (((_3612 * 3.1415927410125732421875) * (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0)))) / ((_3634 * _3634) * ((_3579 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3590 * _3435.y;
                                frontier_phi_78_pred_1 = _3590 * _3435.x;
                                frontier_phi_78_pred_2 = _3664 * _3447.z;
                                frontier_phi_78_pred_3 = _3664 * _3447.y;
                                frontier_phi_78_pred_4 = _3664 * _3447.x;
                                frontier_phi_78_pred_5 = _3590 * _3435.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3672 = frontier_phi_78_pred;
                            _3671 = frontier_phi_78_pred_1;
                            _3670 = frontier_phi_78_pred_2;
                            _3669 = frontier_phi_78_pred_3;
                            _3668 = frontier_phi_78_pred_4;
                            _3673 = frontier_phi_78_pred_5;
                            _3377 = _3671 + _3390;
                            _3378 = _3672 + _3391;
                            _3379 = _3673 + _3392;
                            _3374 = _3668 + _3387;
                            _3375 = _3669 + _3388;
                            _3376 = _3670 + _3389;
                            if (_3394 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3387 = _3374;
                                _3388 = _3375;
                                _3389 = _3376;
                                _3390 = _3377;
                                _3391 = _3378;
                                _3392 = _3379;
                                _3393 = _3394;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3379;
                        frontier_phi_72_pred_1 = _3378;
                        frontier_phi_72_pred_2 = _3377;
                        frontier_phi_72_pred_3 = _3376;
                        frontier_phi_72_pred_4 = _3375;
                        frontier_phi_72_pred_5 = _3374;
                    }
                    _3047 = frontier_phi_72_pred;
                    _3045 = frontier_phi_72_pred_1;
                    _3043 = frontier_phi_72_pred_2;
                    _3041 = frontier_phi_72_pred_3;
                    _3039 = frontier_phi_72_pred_4;
                    _3037 = frontier_phi_72_pred_5;
                    uint _3182 = _3181 + 1u;
                    if (_3182 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3175 = _3037;
                        _3176 = _3039;
                        _3177 = _3041;
                        _3178 = _3043;
                        _3179 = _3045;
                        _3180 = _3047;
                        _3181 = _3182;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3047;
                frontier_phi_60_61_ladder_1 = _3045;
                frontier_phi_60_61_ladder_2 = _3041;
                frontier_phi_60_61_ladder_3 = _3039;
                frontier_phi_60_61_ladder_4 = _3037;
                frontier_phi_60_61_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_60_61_ladder = _2934;
                frontier_phi_60_61_ladder_1 = _2932;
                frontier_phi_60_61_ladder_2 = _2928;
                frontier_phi_60_61_ladder_3 = _2926;
                frontier_phi_60_61_ladder_4 = _2924;
                frontier_phi_60_61_ladder_5 = _2930;
            }
            _3036 = frontier_phi_60_61_ladder_4;
            _3038 = frontier_phi_60_61_ladder_3;
            _3040 = frontier_phi_60_61_ladder_2;
            _3042 = frontier_phi_60_61_ladder_5;
            _3044 = frontier_phi_60_61_ladder_1;
            _3046 = frontier_phi_60_61_ladder;
        }
        float _3051 = isnan(1.0) ? _851 : (isnan(_851) ? 1.0 : min(_851, 1.0));
        _2857 = (_3051 * _3042) + _2388;
        _2859 = (_3051 * _3044) + _2390;
        _2861 = (_3051 * _3046) + _2392;
        _2863 = ((_3036 * 0.039999999105930328369140625) * _3051) + _2711;
        _2865 = ((_3038 * 0.039999999105930328369140625) * _3051) + _2713;
        _2867 = ((_3040 * 0.039999999105930328369140625) * _3051) + _2715;
    }
    else
    {
        _2857 = _2388;
        _2859 = _2390;
        _2861 = _2392;
        _2863 = _2711;
        _2865 = _2713;
        _2867 = _2715;
    }
    float _4793 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4804 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _4815 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    uint _2887 = _245 + 6u;
    float _2895 = _788 / cbSceneParam._m0[86u].x;
    float _2896 = _789 / cbSceneParam._m0[86u].y;
    vec4 _2910 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2895, _2896, (log2((isnan(cbSceneParam._m0[77u].w) ? _722 : (isnan(_722) ? cbSceneParam._m0[77u].w : min(_722, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2912 = _2910.x;
    float _2913 = _2910.y;
    float _2914 = _2910.z;
    float _2915 = _2910.w;
    float _2986;
    float _2988;
    float _2990;
    float _2992;
    if (_722 > cbSceneParam._m0[78u].w)
    {
        float _2949 = isnan(_722) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _722 : min(cbSceneParam._m0[80u].w, _722));
        float _2950 = _2949 / _722;
        float _2961 = _2950 * _773;
        float _2962 = _774 * _2950;
        float _2963 = (-0.0) - _2962;
        float _2964 = _2950 * _775;
        float _2966 = (cbSceneParam._m0[77u].w * _2963) / _2949;
        float _2967 = _2966 + cbSceneParam._m0[79u].w;
        float _2968 = cbSceneParam._m0[79u].w - _2962;
        float _2974 = sqrt(((_2961 * _2961) + (_2962 * _2962)) + (_2964 * _2964));
        float _2977 = (1.0 - (cbSceneParam._m0[77u].w / _2949)) * _2974;
        float _2982 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2984 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3137;
        if (abs((_2963 - _2966) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3137 = ((((_2967 > 0.0) ? exp2(_2982 * _2967) : (2.0 - exp2(_2984 * _2967))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2977;
        }
        else
        {
            float _3097 = 1.0 / cbSceneParam._m0[80u].x;
            float _3098 = isnan(_2968) ? _2967 : (isnan(_2967) ? _2968 : max(_2967, _2968));
            float _3099 = isnan(_2968) ? _2967 : (isnan(_2967) ? _2968 : min(_2967, _2968));
            float _3108 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : min(_3098, 0.0));
            float _3109 = isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : min(_3099, 0.0));
            _3137 = ((abs(_2974 / _2963) * cbSceneParam._m0[80u].y) * ((((_3108 - _3109) * 2.0) - ((exp2(_2982 * (isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0)))) - exp2(_2982 * (isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : max(_3099, 0.0))))) * _3097)) - ((exp2(_2984 * _3108) - exp2(_2984 * _3109)) * _3097))) + (_2977 * cbSceneParam._m0[80u].z);
        }
        vec4 _3139 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2895, _2896, 1.0), 0.0);
        float _3148 = exp2((_3137 * (-1.44269502162933349609375)) * (1.0 - _3139.w));
        float _3149 = log2(_3148);
        float _3165 = log2(_2915);
        _2986 = (exp2(_3165 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].x)) * _3139.x) / cbSceneParam._m0[78u].x)) + _2912;
        _2988 = (exp2(_3165 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].y)) * _3139.y) / cbSceneParam._m0[78u].y)) + _2913;
        _2990 = (exp2(_3165 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].z)) * _3139.z) / cbSceneParam._m0[78u].z)) + _2914;
        _2992 = _3148 * _2915;
    }
    else
    {
        _2986 = _2912;
        _2988 = _2913;
        _2990 = _2914;
        _2992 = _2915;
    }
    float _3004 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3005 = _3004 == 3.0;
    float _3006 = log2(_2992);
    float _3013 = exp2(_3006 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0))) * (_2857 + ((isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0))) * _851))) + ((_2863 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1656)) * cbPerFrame._m0[3u].x));
    float _3014 = exp2(_3006 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0))) * (_2859 + ((isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0))) * _851))) + ((_2865 + ((isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0))) * _1656)) * cbPerFrame._m0[3u].x));
    float _3015 = exp2(_3006 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0))) * (_2861 + ((isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0))) * _851))) + ((_2867 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1656)) * cbPerFrame._m0[3u].x));
    float _3024 = (_3004 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3024 * (_3005 ? _3013 : (_3013 + (cbSceneParam._m0[72u].w * _2986)));
    SV_Target.y = _3024 * (_3005 ? _3014 : (_3014 + (cbSceneParam._m0[72u].w * _2988)));
    SV_Target.z = _3024 * (_3005 ? _3015 : (_3015 + (cbSceneParam._m0[72u].w * _2990)));
    SV_Target.w = cbInstanceData._m0[_2887].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2887].w;
}


