#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1262;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _228 = _227 * _219;
    float _229 = _227 * _220;
    float _230 = _227 * _221;
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _235 = _234 * NORMAL.x;
    float _236 = _234 * NORMAL.y;
    float _237 = _234 * NORMAL.z;
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _242 = _241 * TANGENT.x;
    float _243 = _241 * TANGENT.y;
    float _244 = _241 * TANGENT.z;
    uint _247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _252 = _247 + 1u;
    uint _256 = _247 + 2u;
    float _265 = sqrt(((cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x) + (cbInstanceData._m0[_247].x * cbInstanceData._m0[_247].x)) + (cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x));
    float _266 = _265 * TEXCOORD.z;
    float _267 = _265 * TEXCOORD.w;
    vec4 _287 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _293 = _287.x * cbMtdParam._m0[11u].x;
    float _294 = _287.y * cbMtdParam._m0[11u].y;
    float _295 = _287.z * cbMtdParam._m0[11u].z;
    vec4 _314 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _266) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _267) + cbTextureTilingScale._m0[5u].w));
    vec4 _352 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _354 = _352.x;
    float _364 = dot(vec4(_354, _352.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _381 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_354 - _364) * cbMtdParam._m0[24u].x) + _364) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3851 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _382 = isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0));
    float _389 = (_382 * ((_314.x * cbMtdParam._m0[12u].x) - _293)) + _293;
    float _390 = (_382 * ((_314.y * cbMtdParam._m0[12u].y) - _294)) + _294;
    float _391 = (_382 * ((_314.z * cbMtdParam._m0[12u].z) - _295)) + _295;
    vec4 _409 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _266) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _267) + cbTextureTilingScale._m0[4u].w));
    vec4 _426 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _428 = _426.x;
    float _429 = _426.y;
    float _430 = _426.z;
    float _439 = ((_409.z - _430) * _382) + _430;
    float _442 = ((((_409.x - _428) * _382) + _428) * 2.0) + (-1.0);
    float _444 = ((((_409.y - _429) * _382) + _429) * 2.0) + (-1.0);
    float _445 = dot(vec2(_442, _444), vec2(_442, _444));
    float _3862 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _450 = sqrt(1.0 - (isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0))));
    vec4 _466 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _478 = (((_466.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _442;
    float _479 = (((_466.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _444;
    float _482 = fma(_450, _235, fma(_479, _242, _478 * _228));
    float _485 = fma(_450, _236, fma(_479, _243, _478 * _229));
    float _488 = fma(_450, _237, fma(_479, _244, _478 * _230));
    float _492 = inversesqrt(dot(vec3(_482, _485, _488), vec3(_482, _485, _488)));
    vec4 _521 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _266) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _267) + cbTextureTilingScale._m0[11u].w));
    float _523 = _521.x;
    float _524 = 1.0 - _523;
    float _528 = ((_523 - _524) * cbMtdParam._m0[24u].z) + _524;
    float _530 = (cbMtdParam._m0[19u].x + dot(vec4(_492 * _482, _492 * _485, _492 * _488, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_528 * cbMtdParam._m0[21u].z);
    float _3873 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0));
    float _533 = (-0.0) - cbMtdParam._m0[24u].y;
    float _535 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _536 = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
    float _543 = _531 - ((_531 * TEXCOORD_8.x) * _536);
    float _544 = _531 - ((_531 * TEXCOORD_8.y) * _536);
    float _545 = _531 - ((_531 * TEXCOORD_8.z) * _536);
    float _552 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _556 = ((isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : min(_552, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _564 = (_556 - (((_528 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _556))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3904 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _565 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _569 = ((_543 * (cbMtdParam._m0[17u].x - _389)) * _565) + _389;
    float _570 = ((_544 * (cbMtdParam._m0[17u].y - _390)) * _565) + _390;
    float _571 = ((_545 * (cbMtdParam._m0[17u].z - _391)) * _565) + _391;
    vec4 _583 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _266) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _267) + cbTextureTilingScale._m0[19u].w));
    float _585 = _583.x;
    float _586 = 1.0 - _585;
    float _613 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_585 - _586) * cbMtdParam._m0[24u].w) + _586) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3915 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _614 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _622 = ((((cbMtdParam._m0[10u].x - _569) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _614) + _569;
    float _623 = ((((cbMtdParam._m0[10u].y - _570) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _614) + _570;
    float _624 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _571)) * _614) + _571;
    float _628 = (cbMtdParam._m0[19u].w * (_466.z - _439)) + _439;
    vec4 _642 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _266) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _267) + cbTextureTilingScale._m0[15u].w));
    float _649 = (_642.x * 2.0) + (-1.0);
    float _650 = (_642.y * 2.0) + (-1.0);
    float _651 = dot(vec2(_649, _650), vec2(_649, _650));
    float _3926 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _660 = (((_642.z - _628) * _543) * _565) + _628;
    float _663 = ((cbMtdParam._m0[23u].y - _660) * _614) + _660;
    vec4 _682 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _266) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _267) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _688 = (_682.x * 2.0) + (-1.0);
    float _689 = (_682.y * 2.0) + (-1.0);
    float _690 = dot(vec2(_688, _689), vec2(_688, _689));
    float _3937 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    float _710 = (((cbMtdParam._m0[21u].x * _478) + ((_649 - _478) * _543)) * _565) + _478;
    float _711 = (((cbMtdParam._m0[21u].x * _479) + ((_650 - _479) * _544)) * _565) + _479;
    float _712 = (((sqrt(1.0 - (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0)))) - _450) * _545) * _565) + _450;
    float _723 = (((_688 - _710) + (_710 * cbMtdParam._m0[22u].z)) * _614) + _710;
    float _724 = (((_689 - _711) + (_711 * cbMtdParam._m0[22u].z)) * _614) + _711;
    float _725 = ((sqrt(1.0 - (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) - _712) * _614) + _712;
    float _727 = cbMtdParam._m0[22u].x + _466.w;
    float _730 = fma(_725, _235, fma(_724, _242, _723 * _228));
    float _733 = fma(_725, _236, fma(_724, _243, _723 * _229));
    float _736 = fma(_725, _237, fma(_724, _244, _723 * _230));
    float _740 = inversesqrt(dot(vec3(_730, _733, _736), vec3(_730, _733, _736)));
    float _741 = _740 * _730;
    float _742 = _740 * _733;
    float _743 = _740 * _736;
    float _3948 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _744 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
    float _3959 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _3970 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3981 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _3992 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _762 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _803 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _813 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _803);
    float _814 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _803);
    float _815 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _803);
    float _819 = inversesqrt(dot(vec3(_813, _814, _815), vec3(_813, _814, _815)));
    float _820 = _813 * _819;
    float _821 = _814 * _819;
    float _822 = _815 * _819;
    float _828 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _829 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _847 = fma(_743, cbSceneParam._m0[5u].z, fma(_742, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _741));
    float _850 = fma(_743, cbSceneParam._m0[6u].z, fma(_742, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _741));
    float _853 = fma(_743, cbSceneParam._m0[7u].z, fma(_742, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _741));
    uint _867 = (_247 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _873 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0)))) * cbInstanceData._m0[_867].x;
    float _874 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0)))) * cbInstanceData._m0[_867].y;
    float _875 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0)))) * cbInstanceData._m0[_867].z;
    float _4003 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _876 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _4014 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _877 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
    float _4025 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _878 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
    vec4 _887 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _828, cbSceneParam._m0[86u].y * _829));
    float _891 = ((isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0))) * TEXCOORD_5.w) * _887.x;
    float _892 = dot(vec3(_741, _742, _743), vec3(_820, _821, _822));
    float _895 = _892 * 2.0;
    float _899 = (_895 * _741) - _820;
    float _900 = (_895 * _742) - _821;
    float _901 = (_895 * _743) - _822;
    float _905 = abs(dot(vec3(_820, _821, _822), vec3(_741, _742, _743)));
    float _4036 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _907 = sqrt(_744);
    float _920 = exp2((_907 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_907 * 3.0));
    float _952 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _956 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _960 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1261;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _986 = fma(_960, cbModelParam._m0[26u].z, fma(_956, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _952));
        float _990 = fma(_960, cbModelParam._m0[27u].z, fma(_956, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _952));
        float _994 = fma(_960, cbModelParam._m0[28u].z, fma(_956, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _952));
        float _1019 = _952 + _741;
        float _1020 = _956 + _742;
        float _1021 = _960 + _743;
        float _1031 = fma(_1021, cbModelParam._m0[26u].z, fma(_1020, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1019)) - _986;
        float _1032 = fma(_1021, cbModelParam._m0[27u].z, fma(_1020, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1019)) - _990;
        float _1033 = fma(_1021, cbModelParam._m0[28u].z, fma(_1020, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1019)) - _994;
        float _1037 = inversesqrt(dot(vec3(_1031, _1032, _1033), vec3(_1031, _1032, _1033)));
        float _1050 = ((_1037 * _1031) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_986 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1051 = ((_1037 * _1032) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_990 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1052 = ((_1037 * _1033) / cbModelParam._m0[34u].z) + ((((((_994 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1076 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        float _1089 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1090 = _1089 * (_1055.x + (-0.5));
        float _1091 = _1089 * (_1055.y + (-0.5));
        float _1092 = _1089 * (_1055.z + (-0.5));
        float _1099 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1100 = _1099 * (_1062.x + (-0.5));
        float _1101 = _1099 * (_1062.y + (-0.5));
        float _1102 = _1099 * (_1062.z + (-0.5));
        float _1109 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1110 = _1109 * (_1069.x + (-0.5));
        float _1111 = _1109 * (_1069.y + (-0.5));
        float _1112 = _1109 * (_1069.z + (-0.5));
        float _1119 = exp2((_1076.w + (-0.5)) * 20.0) * 2.0;
        float _1120 = _1119 * (_1076.x + (-0.5));
        float _1121 = _1119 * (_1076.y + (-0.5));
        float _1122 = _1119 * (_1076.z + (-0.5));
        float _1123 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1124 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1125 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1126 = _1090 * 0.5;
        float _1127 = _1100 * 0.5;
        float _1128 = _1110 * 0.5;
        float _1129 = dot(vec3(_1126, _1127, _1128), vec3(_1126, _1127, _1128));
        float _1134 = (_1129 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1129);
        float _1143 = (dot(vec3(_741, _742, _743), vec3(_1134 * _1126, _1134 * _1127, _1134 * _1128)) + 1.0) * 0.5;
        float _4062 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1153 = sqrt(((_1127 * _1127) + (_1126 * _1126)) + (_1128 * _1128)) / (_1123 + 9.9999997473787516355514526367188e-06);
        float _4073 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _4084 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * (_1155 + 1.0))) + _1160) * _1123;
        float _1170 = _1091 * 0.5;
        float _1171 = _1101 * 0.5;
        float _1172 = _1111 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1186 = (dot(vec3(_741, _742, _743), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _4095 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1195 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1124 + 9.9999997473787516355514526367188e-06);
        float _4106 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _4117 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * (_1197 + 1.0))) + _1202) * _1124;
        float _1212 = _1092 * 0.5;
        float _1213 = _1102 * 0.5;
        float _1214 = _1112 * 0.5;
        float _1215 = dot(vec3(_1212, _1213, _1214), vec3(_1212, _1213, _1214));
        float _1220 = (_1215 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1215);
        float _1228 = (dot(vec3(_741, _742, _743), vec3(_1220 * _1212, _1220 * _1213, _1220 * _1214)) + 1.0) * 0.5;
        float _4128 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1237 = sqrt(((_1213 * _1213) + (_1212 * _1212)) + (_1214 * _1214)) / (_1125 + 9.9999997473787516355514526367188e-06);
        float _4139 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1238 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1239 = _1238 * 2.0;
        float _1243 = (1.0 - _1238) / (_1238 + 1.0);
        float _4150 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1253 = ((((1.0 - _1244) * (_1239 + 2.0)) * exp2(log2(isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * (_1239 + 1.0))) + _1244) * _1125;
        _1261 = _1092;
        _1263 = _1091;
        _1264 = _1090;
        _1265 = _1102;
        _1266 = _1101;
        _1267 = _1100;
        _1268 = _1112;
        _1269 = _1111;
        _1270 = _1110;
        _1271 = _1125;
        _1272 = _1124;
        _1273 = _1123;
        _1274 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
        _1275 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
        _1276 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0)));
    }
    else
    {
        _1261 = _1262;
        _1263 = _1262;
        _1264 = _1262;
        _1265 = _1262;
        _1266 = _1262;
        _1267 = _1262;
        _1268 = _1262;
        _1269 = _1262;
        _1270 = _1262;
        _1271 = _1262;
        _1272 = _1262;
        _1273 = _1262;
        _1274 = 0.0;
        _1275 = 0.0;
        _1276 = 0.0;
    }
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1301 = fma(_960, cbModelParam._m0[30u].z, fma(_956, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _952));
        float _1305 = fma(_960, cbModelParam._m0[31u].z, fma(_956, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _952));
        float _1309 = fma(_960, cbModelParam._m0[32u].z, fma(_956, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _952));
        float _1332 = _952 + _741;
        float _1333 = _956 + _742;
        float _1334 = _960 + _743;
        float _1344 = fma(_1334, cbModelParam._m0[30u].z, fma(_1333, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1332)) - _1301;
        float _1345 = fma(_1334, cbModelParam._m0[31u].z, fma(_1333, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1332)) - _1305;
        float _1346 = fma(_1334, cbModelParam._m0[32u].z, fma(_1333, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1332)) - _1309;
        float _1350 = inversesqrt(dot(vec3(_1344, _1345, _1346), vec3(_1344, _1345, _1346)));
        float _1363 = ((_1350 * _1344) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1301 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1364 = ((_1350 * _1345) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1305 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1365 = ((_1350 * _1346) / cbModelParam._m0[35u].z) + ((((((_1309 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1367 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1363, _1364, _1365), 0.0);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1363, _1364, _1365), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1363, _1364, _1365), 0.0);
        vec4 _1388 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1363, _1364, _1365), 0.0);
        float _1400 = exp2((_1367.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1367.x + (-0.5));
        float _1402 = _1400 * (_1367.y + (-0.5));
        float _1403 = _1400 * (_1367.z + (-0.5));
        float _1410 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1411 = _1410 * (_1374.x + (-0.5));
        float _1412 = _1410 * (_1374.y + (-0.5));
        float _1413 = _1410 * (_1374.z + (-0.5));
        float _1420 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1421 = _1420 * (_1381.x + (-0.5));
        float _1422 = _1420 * (_1381.y + (-0.5));
        float _1423 = _1420 * (_1381.z + (-0.5));
        float _1430 = exp2((_1388.w + (-0.5)) * 20.0) * 2.0;
        float _1431 = _1430 * (_1388.x + (-0.5));
        float _1432 = _1430 * (_1388.y + (-0.5));
        float _1433 = _1430 * (_1388.z + (-0.5));
        float _1434 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1435 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1436 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1437 = _1401 * 0.5;
        float _1438 = _1411 * 0.5;
        float _1439 = _1421 * 0.5;
        float _1440 = dot(vec3(_1437, _1438, _1439), vec3(_1437, _1438, _1439));
        float _1445 = (_1440 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1440);
        float _1453 = (dot(vec3(_741, _742, _743), vec3(_1445 * _1437, _1445 * _1438, _1445 * _1439)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1462 = sqrt(((_1438 * _1438) + (_1437 * _1437)) + (_1439 * _1439)) / (_1434 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1463 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1464 = _1463 * 2.0;
        float _1468 = (1.0 - _1463) / (_1463 + 1.0);
        float _4213 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1478 = ((((1.0 - _1469) * (_1464 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1464 + 1.0))) + _1469) * _1434;
        float _1479 = _1402 * 0.5;
        float _1480 = _1412 * 0.5;
        float _1481 = _1422 * 0.5;
        float _1482 = dot(vec3(_1479, _1480, _1481), vec3(_1479, _1480, _1481));
        float _1487 = (_1482 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1482);
        float _1495 = (dot(vec3(_741, _742, _743), vec3(_1487 * _1479, _1487 * _1480, _1487 * _1481)) + 1.0) * 0.5;
        float _4224 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1504 = sqrt(((_1480 * _1480) + (_1479 * _1479)) + (_1481 * _1481)) / (_1435 + 9.9999997473787516355514526367188e-06);
        float _4235 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1505 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1506 = _1505 * 2.0;
        float _1510 = (1.0 - _1505) / (_1505 + 1.0);
        float _4246 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
        float _1520 = ((((1.0 - _1511) * (_1506 + 2.0)) * exp2(log2(isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * (_1506 + 1.0))) + _1511) * _1435;
        float _1521 = _1403 * 0.5;
        float _1522 = _1413 * 0.5;
        float _1523 = _1423 * 0.5;
        float _1524 = dot(vec3(_1521, _1522, _1523), vec3(_1521, _1522, _1523));
        float _1529 = (_1524 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1524);
        float _1537 = (dot(vec3(_741, _742, _743), vec3(_1529 * _1521, _1529 * _1522, _1529 * _1523)) + 1.0) * 0.5;
        float _4257 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        float _1546 = sqrt(((_1522 * _1522) + (_1521 * _1521)) + (_1523 * _1523)) / (_1436 + 9.9999997473787516355514526367188e-06);
        float _4268 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1547 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1548 = _1547 * 2.0;
        float _1552 = (1.0 - _1547) / (_1547 + 1.0);
        float _4279 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1553 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1562 = ((((1.0 - _1553) * (_1548 + 2.0)) * exp2(log2(isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_1548 + 1.0))) + _1553) * _1436;
        _1570 = _1403;
        _1571 = _1402;
        _1572 = _1401;
        _1573 = _1413;
        _1574 = _1412;
        _1575 = _1411;
        _1576 = _1423;
        _1577 = _1422;
        _1578 = _1421;
        _1579 = _1436;
        _1580 = _1435;
        _1581 = _1434;
        _1582 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0)));
        _1583 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0)));
        _1584 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0)));
    }
    else
    {
        _1570 = _1262;
        _1571 = _1262;
        _1572 = _1262;
        _1573 = _1262;
        _1574 = _1262;
        _1575 = _1262;
        _1576 = _1262;
        _1577 = _1262;
        _1578 = _1262;
        _1579 = _1262;
        _1580 = _1262;
        _1581 = _1262;
        _1582 = 0.0;
        _1583 = 0.0;
        _1584 = 0.0;
    }
    float _1594 = (cbModelParam._m0[1u].x * (_1582 - _1274)) + _1274;
    float _1595 = (cbModelParam._m0[1u].x * (_1583 - _1275)) + _1275;
    float _1596 = (cbModelParam._m0[1u].x * (_1584 - _1276)) + _1276;
    float _1617 = fma(_1596, cbSceneParam._m0[89u].z, fma(_1595, cbSceneParam._m0[89u].y, _1594 * cbSceneParam._m0[89u].x));
    float _1620 = fma(_1596, cbSceneParam._m0[90u].z, fma(_1595, cbSceneParam._m0[90u].y, _1594 * cbSceneParam._m0[90u].x));
    float _1623 = fma(_1596, cbSceneParam._m0[91u].z, fma(_1595, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1594));
    float _1638 = _899 * 0.5;
    float _1639 = _900 * 0.5;
    float _1640 = _901 * 0.5;
    float _1641 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1572, _1575, _1578, _1581));
    float _1644 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1571, _1574, _1577, _1580));
    float _1647 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1570, _1573, _1576, _1579));
    float _1681;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1654 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1261, _1265, _1268, _1271));
        float _1658 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1263, _1266, _1269, _1272));
        float _1662 = dot(vec4(_1638, _1639, _1640, 1.0), vec4(_1264, _1267, _1270, _1273));
        float _1669 = dot(vec4(cbModelParam._m0[39u]), vec4(_1638, _1639, _1640, 1.0));
        _1681 = dot(vec3(isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0)), isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0)), isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1669) ? 0.0 : (isnan(0.0) ? _1669 : max(0.0, _1669))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1681 = 1.0;
    }
    float _1692;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1683 = dot(vec4(cbModelParam._m0[40u]), vec4(_1638, _1639, _1640, 1.0));
        _1692 = dot(vec3(isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0)), isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1683) ? 0.0 : (isnan(0.0) ? _1683 : max(0.0, _1683))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1692 = 1.0;
    }
    float _1696 = (_1692 * cbModelParam._m0[1u].x) + (_1681 * (1.0 - cbModelParam._m0[1u].x));
    float _1706 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _744);
    float _1707 = isnan(_1706) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1706 : min(cbModelParam._m0[25u].z, _1706));
    float _1788;
    float _1790;
    float _1792;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1755 = fma(_960, cbModelParam._m0[13u].z, fma(_956, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _952)) + cbModelParam._m0[13u].w;
        float _1759 = fma(_960, cbModelParam._m0[14u].z, fma(_956, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _952)) + cbModelParam._m0[14u].w;
        float _1763 = fma(_960, cbModelParam._m0[15u].z, fma(_956, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _952)) + cbModelParam._m0[15u].w;
        float _1766 = fma(_901, cbModelParam._m0[13u].z, fma(_900, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _899));
        float _1769 = fma(_901, cbModelParam._m0[14u].z, fma(_900, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _899));
        float _1772 = fma(_901, cbModelParam._m0[15u].z, fma(_900, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _899));
        float _1800;
        if (_1766 > 0.0)
        {
            _1800 = abs((1.0 - _1755) / _1766);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1766 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1755 + 1.0) / _1766);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1800 = frontier_phi_14_12_ladder;
        }
        float _1970;
        if (_1769 > 0.0)
        {
            _1970 = abs((1.0 - _1759) / _1769);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1769 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1759 + 1.0) / _1769);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1970 = frontier_phi_23_19_ladder;
        }
        float _2265;
        if (_1772 > 0.0)
        {
            _2265 = abs((1.0 - _1763) / _1772);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1772 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1763 + 1.0) / _1772);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2265 = frontier_phi_35_30_ladder;
        }
        float _2267 = isnan(_1970) ? _1800 : (isnan(_1800) ? _1970 : min(_1800, _1970));
        float _2268 = isnan(_2265) ? _2267 : (isnan(_2267) ? _2265 : min(_2267, _2265));
        float _2272 = (_2268 * _1766) + _1755;
        float _2273 = (_2268 * _1769) + _1759;
        float _2274 = (_2268 * _1772) + _1763;
        float _2275 = _2268 * 9.9999997473787516355514526367188e-05;
        float _2277 = (-1.0) - _2275;
        float _2279 = _2275 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2274 > _2279) || ((_2274 < _2277) || ((_2273 > _2279) || ((_2273 < _2277) || ((_2272 < _2277) || (_2272 > _2279))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2419 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2274, cbModelParam._m0[9u].z, fma(_2273, cbModelParam._m0[9u].y, _2272 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2274, cbModelParam._m0[10u].z, fma(_2273, cbModelParam._m0[10u].y, _2272 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2274, cbModelParam._m0[11u].z, fma(_2273, cbModelParam._m0[11u].y, _2272 * cbModelParam._m0[11u].x))), _1707);
            frontier_phi_13_35_ladder = _2419.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2419.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2419.x * cbModelParam._m0[1u].y;
        }
        _1788 = frontier_phi_13_35_ladder_2;
        _1790 = frontier_phi_13_35_ladder_1;
        _1792 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1776 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_899, _900, _901), _1707);
        _1788 = _1776.x * cbModelParam._m0[1u].y;
        _1790 = _1776.y * cbModelParam._m0[1u].y;
        _1792 = _1776.z * cbModelParam._m0[1u].y;
    }
    float _1796 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _744);
    float _1797 = isnan(_1796) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1796 : min(cbModelParam._m0[25u].w, _1796));
    float _1887;
    float _1889;
    float _1891;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1851 = fma(_960, cbModelParam._m0[21u].z, fma(_956, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _952)) + cbModelParam._m0[21u].w;
        float _1855 = fma(_960, cbModelParam._m0[22u].z, fma(_956, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _952)) + cbModelParam._m0[22u].w;
        float _1859 = fma(_960, cbModelParam._m0[23u].z, fma(_956, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _952)) + cbModelParam._m0[23u].w;
        float _1862 = fma(_901, cbModelParam._m0[21u].z, fma(_900, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _899));
        float _1865 = fma(_901, cbModelParam._m0[22u].z, fma(_900, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _899));
        float _1868 = fma(_901, cbModelParam._m0[23u].z, fma(_900, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _899));
        float _1975;
        if (_1862 > 0.0)
        {
            _1975 = abs((1.0 - _1851) / _1862);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1862 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1851 + 1.0) / _1862);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1975 = frontier_phi_25_21_ladder;
        }
        float _2292;
        if (_1865 > 0.0)
        {
            _2292 = abs((1.0 - _1855) / _1865);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1865 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1855 + 1.0) / _1865);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2292 = frontier_phi_37_32_ladder;
        }
        float _2619;
        if (_1868 > 0.0)
        {
            _2619 = abs((1.0 - _1859) / _1868);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1868 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1859 + 1.0) / _1868);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2619 = frontier_phi_47_44_ladder;
        }
        float _2621 = isnan(_2292) ? _1975 : (isnan(_1975) ? _2292 : min(_1975, _2292));
        float _2622 = isnan(_2619) ? _2621 : (isnan(_2621) ? _2619 : min(_2621, _2619));
        float _2626 = (_2622 * _1862) + _1851;
        float _2627 = (_2622 * _1865) + _1855;
        float _2628 = (_2622 * _1868) + _1859;
        float _2629 = _2622 * 9.9999997473787516355514526367188e-05;
        float _2630 = (-1.0) - _2629;
        float _2632 = _2629 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2628 > _2632) || ((_2628 < _2630) || ((_2627 > _2632) || ((_2627 < _2630) || ((_2626 < _2630) || (_2626 > _2632))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2746 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2628, cbModelParam._m0[17u].z, fma(_2627, cbModelParam._m0[17u].y, _2626 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2628, cbModelParam._m0[18u].z, fma(_2627, cbModelParam._m0[18u].y, _2626 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2628, cbModelParam._m0[19u].z, fma(_2627, cbModelParam._m0[19u].y, _2626 * cbModelParam._m0[19u].x))), _1797);
            frontier_phi_22_47_ladder = _2746.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2746.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2746.x * cbModelParam._m0[1u].z;
        }
        _1887 = frontier_phi_22_47_ladder_2;
        _1889 = frontier_phi_22_47_ladder_1;
        _1891 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1871 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_899, _900, _901), _1797);
        _1887 = _1871.x * cbModelParam._m0[1u].z;
        _1889 = _1871.y * cbModelParam._m0[1u].z;
        _1891 = _1871.z * cbModelParam._m0[1u].z;
    }
    float _1903 = ((((1.0 - _920) * ((_907 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_920 * _907)) * _891;
    float _1904 = _1903 * ((cbModelParam._m0[1u].w * (_1887 - _1788)) + _1788);
    float _1905 = _1903 * ((cbModelParam._m0[1u].w * (_1889 - _1790)) + _1790);
    float _1906 = _1903 * ((cbModelParam._m0[1u].w * (_1891 - _1792)) + _1792);
    float _1909 = fma(_1906, cbSceneParam._m0[89u].z, fma(_1905, cbSceneParam._m0[89u].y, _1904 * cbSceneParam._m0[89u].x));
    float _1912 = fma(_1906, cbSceneParam._m0[90u].z, fma(_1905, cbSceneParam._m0[90u].y, _1904 * cbSceneParam._m0[90u].x));
    float _1915 = fma(_1906, cbSceneParam._m0[91u].z, fma(_1905, cbSceneParam._m0[91u].y, _1904 * cbSceneParam._m0[91u].x));
    float _1949 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1953 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1957 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1961 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1962 = _1949 / _1961;
    float _1963 = _1953 / _1961;
    float _1964 = _1957 / _1961;
    float _2111;
    float _2112;
    float _2113;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1991 = ((uint(_1964 > cbSceneParam._m0[59u].y) + uint(_1964 > cbSceneParam._m0[59u].x)) + uint(_1964 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1992 = _1991 + 43u;
        uint _2000 = _1991 + 44u;
        uint _2008 = _1991 + 45u;
        uint _2016 = _1991 + 46u;
        float _2027 = fma(_1961, cbSceneParam._m0[_1992].w, fma(_1957, cbSceneParam._m0[_1992].z, fma(_1953, cbSceneParam._m0[_1992].y, _1949 * cbSceneParam._m0[_1992].x)));
        float _2031 = fma(_1961, cbSceneParam._m0[_2000].w, fma(_1957, cbSceneParam._m0[_2000].z, fma(_1953, cbSceneParam._m0[_2000].y, _1949 * cbSceneParam._m0[_2000].x)));
        float _2039 = fma(_1961, cbSceneParam._m0[_2016].w, fma(_1957, cbSceneParam._m0[_2016].z, fma(_1953, cbSceneParam._m0[_2016].y, _1949 * cbSceneParam._m0[_2016].x)));
        float _2044 = cbSceneParam._m0[33u].z * _2039;
        float _2046 = cbSceneParam._m0[33u].w * _2039;
        float _2049 = fma(_1961, cbSceneParam._m0[_2008].w, fma(_1957, cbSceneParam._m0[_2008].z, fma(_1953, cbSceneParam._m0[_2008].y, _1949 * cbSceneParam._m0[_2008].x))) / _2039;
        float _2097 = (cbSceneParam._m0[33u].x - sqrt(((_1963 * _1963) + (_1962 * _1962)) + (_1964 * _1964))) * cbSceneParam._m0[33u].y;
        float _4405 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
        float _2104 = (isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2044 + _2027) / _2039, (_2046 + _2031) / _2039), _2049), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2046 + _2027) / _2039, (_2031 - _2044) / _2039), _2049), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2027 - _2044) / _2039, (_2031 - _2046) / _2039), _2049), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2027 - _2046) / _2039, (_2044 + _2031) / _2039), _2049), 0.0)).x), vec4(0.25)));
        _2111 = 1.0 - (_2104 * cbSceneParam._m0[34u].x);
        _2112 = 1.0 - (_2104 * cbSceneParam._m0[34u].y);
        _2113 = 1.0 - (_2104 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2111 = 1.0;
        _2112 = 1.0;
        _2113 = 1.0;
    }
    float _2177;
    float _2179;
    float _2181;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2165 = fma(_1961, cbSceneParam._m0[63u].w, fma(_1957, cbSceneParam._m0[63u].z, fma(_1953, cbSceneParam._m0[63u].y, _1949 * cbSceneParam._m0[63u].x)));
        float _2166 = fma(_1961, cbSceneParam._m0[60u].w, fma(_1957, cbSceneParam._m0[60u].z, fma(_1953, cbSceneParam._m0[60u].y, _1949 * cbSceneParam._m0[60u].x))) / _2165;
        float _2167 = fma(_1961, cbSceneParam._m0[61u].w, fma(_1957, cbSceneParam._m0[61u].z, fma(_1953, cbSceneParam._m0[61u].y, _1949 * cbSceneParam._m0[61u].x))) / _2165;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2166 >= cbSceneParam._m0[64u].x) && (_2167 >= cbSceneParam._m0[64u].y)) && (_2166 <= cbSceneParam._m0[64u].z)) && (_2167 <= cbSceneParam._m0[64u].w))
        {
            float _2305 = fma(_1961, cbSceneParam._m0[62u].w, fma(_1957, cbSceneParam._m0[62u].z, fma(_1953, cbSceneParam._m0[62u].y, _1949 * cbSceneParam._m0[62u].x))) / _2165;
            float _2309 = isnan(cbSceneParam._m0[41u].w) ? _2305 : (isnan(_2305) ? cbSceneParam._m0[41u].w : max(_2305, cbSceneParam._m0[41u].w));
            float _2352 = (cbSceneParam._m0[33u].x - sqrt(((_1963 * _1963) + (_1962 * _1962)) + (_1964 * _1964))) * cbSceneParam._m0[33u].y;
            float _4421 = isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : max(_2352, 0.0));
            float _2359 = (isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2166, cbSceneParam._m0[33u].w + _2167), _2309), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2166, _2167 - cbSceneParam._m0[33u].z), _2309), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2166 - cbSceneParam._m0[33u].z, _2167 - cbSceneParam._m0[33u].w), _2309), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2166 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2167), _2309), 0.0)).x), vec4(0.25)));
            float _2363 = 1.0 - (_2359 * cbSceneParam._m0[34u].x);
            float _2364 = 1.0 - (_2359 * cbSceneParam._m0[34u].y);
            float _2365 = 1.0 - (_2359 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2365) ? _2113 : (isnan(_2113) ? _2365 : min(_2113, _2365));
            frontier_phi_34_33_ladder_1 = isnan(_2364) ? _2112 : (isnan(_2112) ? _2364 : min(_2112, _2364));
            frontier_phi_34_33_ladder_2 = isnan(_2363) ? _2111 : (isnan(_2111) ? _2363 : min(_2111, _2363));
        }
        else
        {
            frontier_phi_34_33_ladder = _2113;
            frontier_phi_34_33_ladder_1 = _2112;
            frontier_phi_34_33_ladder_2 = _2111;
        }
        _2177 = frontier_phi_34_33_ladder_2;
        _2179 = frontier_phi_34_33_ladder_1;
        _2181 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2177 = _2111;
        _2179 = _2112;
        _2181 = _2113;
    }
    uvec4 _2186 = floatBitsToUint(cbInstanceData._m0[_247 + 5u]);
    uint _2188 = _2186.x * 14u;
    uint _2189 = _2188 + 13u;
    float _2196 = _891 + (-1.0);
    float _2201 = (cbLight._m0[_2189].x * _2196) + 1.0;
    float _2202 = (cbLight._m0[_2189].y * _2196) + 1.0;
    float _2203 = (cbLight._m0[_2189].z * _2196) + 1.0;
    float _2204 = (cbLight._m0[_2189].w * _2196) + 1.0;
    uint _2205 = _2188 + 5u;
    float _2211 = isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0));
    uint _2215 = _2188 + 4u;
    float _2224 = isnan(1.0) ? _2201 : (isnan(_2201) ? 1.0 : min(_2201, 1.0));
    uint _2228 = _2188 | 1u;
    float _2239 = dot(vec3(cbLight._m0[_2188].xyz), vec3(_741, _742, _743));
    float _2242 = dot(vec3(cbLight._m0[_2228].xyz), vec3(_741, _742, _743));
    float _4457 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
    float _4468 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _2247 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * 0.3183098733425140380859375;
    float _2249 = (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * 0.3183098733425140380859375;
    float _2256 = ((cbLight._m0[_2205].x * _2211) * _2249) + (((cbLight._m0[_2215].x * _2177) * _2224) * _2247);
    float _2257 = ((_2211 * cbLight._m0[_2205].y) * _2249) + (((cbLight._m0[_2215].y * _2179) * _2224) * _2247);
    float _2258 = ((_2211 * cbLight._m0[_2205].z) * _2249) + (((cbLight._m0[_2215].z * _2181) * _2224) * _2247);
    uvec4 _2262 = floatBitsToUint(cbLight._m0[_2188 + 12u]);
    bool _2264 = _2262.x == 0u;
    float _2366;
    float _2368;
    float _2370;
    if (_2264)
    {
        _2366 = _2256;
        _2368 = _2257;
        _2370 = _2258;
    }
    else
    {
        uint _2374 = _2188 + 6u;
        float _2390 = (dot(vec3(cbLight._m0[_2188 + 2u].xyz), vec3(_741, _742, _743)) * 0.5) + 0.5;
        float _2391 = _2390 * _2390;
        float _4479 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
        float _2392 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _2393 = isnan(1.0) ? _2203 : (isnan(_2203) ? 1.0 : min(_2203, 1.0));
        _2366 = (((cbLight._m0[_2374].x * 0.3183098733425140380859375) * _2392) * _2393) + _2256;
        _2368 = (((cbLight._m0[_2374].y * 0.3183098733425140380859375) * _2392) * _2393) + _2257;
        _2370 = (((cbLight._m0[_2374].z * 0.3183098733425140380859375) * _2392) * _2393) + _2258;
    }
    bool _2373 = _2262.y == 0u;
    float _2428;
    float _2430;
    float _2432;
    if (_2373)
    {
        _2428 = _2366;
        _2430 = _2368;
        _2432 = _2370;
    }
    else
    {
        uint _2590 = _2188 + 7u;
        float _2606 = (dot(vec3(cbLight._m0[_2188 + 3u].xyz), vec3(_741, _742, _743)) * 0.5) + 0.5;
        float _2607 = _2606 * _2606;
        float _4495 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
        float _2608 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
        float _2609 = isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0));
        _2428 = (((cbLight._m0[_2590].x * 0.3183098733425140380859375) * _2608) * _2609) + _2366;
        _2430 = (((cbLight._m0[_2590].y * 0.3183098733425140380859375) * _2608) * _2609) + _2368;
        _2432 = (((cbLight._m0[_2590].z * 0.3183098733425140380859375) * _2608) * _2609) + _2370;
    }
    uint _2435 = _2188 + 8u;
    float _2448 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2188].w)) * _744) * 0.949999988079071044921875);
    float _2449 = _2448 * _2448;
    float _2450 = cbLight._m0[_2188].x + _820;
    float _2451 = cbLight._m0[_2188].y + _821;
    float _2452 = cbLight._m0[_2188].z + _822;
    float _2456 = inversesqrt(dot(vec3(_2450, _2451, _2452), vec3(_2450, _2451, _2452)));
    float _2457 = _2456 * _2450;
    float _2458 = _2456 * _2451;
    float _2459 = _2456 * _2452;
    float _2460 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2188].xyz));
    float _4511 = isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0));
    float _2463 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
    float _4522 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _2464 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
    float _2465 = dot(vec3(_741, _742, _743), vec3(_2457, _2458, _2459));
    float _4533 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
    float _2468 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
    float _2469 = dot(vec3(cbLight._m0[_2188].xyz), vec3(_2457, _2458, _2459));
    float _4544 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
    float _2473 = _2449 * _2449;
    float _2477 = ((_2468 * _2468) * (_2473 + (-1.0))) + 1.0;
    float _2488 = (exp2(log2(1.0 - (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2489 = 1.0 - _2449;
    float _2500 = (0.5 / (((_2464 * ((_2463 * _2489) + _2449)) + 9.9999999392252902907785028219223e-09) + (((_2464 * _2489) + _2449) * _2463))) * _2463;
    float _4555 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2502 = (isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (_2473 / ((_2477 * _2477) * 3.141590118408203125));
    uint _2516 = _2188 + 9u;
    float _2527 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2228].w)) * _744) * 0.949999988079071044921875);
    float _2528 = _2527 * _2527;
    float _2529 = cbLight._m0[_2228].x + _820;
    float _2530 = cbLight._m0[_2228].y + _821;
    float _2531 = cbLight._m0[_2228].z + _822;
    float _2535 = inversesqrt(dot(vec3(_2529, _2530, _2531), vec3(_2529, _2530, _2531)));
    float _2536 = _2535 * _2529;
    float _2537 = _2535 * _2530;
    float _2538 = _2535 * _2531;
    float _2539 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2228].xyz));
    float _4566 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
    float _2542 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
    float _2543 = dot(vec3(_741, _742, _743), vec3(_2536, _2537, _2538));
    float _4577 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2546 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
    float _2547 = dot(vec3(cbLight._m0[_2228].xyz), vec3(_2536, _2537, _2538));
    float _4588 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
    float _2551 = _2528 * _2528;
    float _2555 = ((_2546 * _2546) * (_2551 + (-1.0))) + 1.0;
    float _2564 = (exp2(log2(1.0 - (isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2565 = 1.0 - _2528;
    float _2575 = (0.5 / (((_2464 * ((_2542 * _2565) + _2528)) + 9.9999999392252902907785028219223e-09) + (((_2464 * _2565) + _2528) * _2542))) * _2542;
    float _4599 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
    float _2577 = (isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * (_2551 / ((_2555 * _2555) * 3.141590118408203125));
    float _2587 = (((_2564 * cbLight._m0[_2516].x) * _2577) * _2211) + ((((cbLight._m0[_2435].x * _2177) * _2488) * _2502) * _2224);
    float _2588 = (((_2564 * cbLight._m0[_2516].y) * _2577) * _2211) + ((((cbLight._m0[_2435].y * _2179) * _2488) * _2502) * _2224);
    float _2589 = (((_2564 * cbLight._m0[_2516].z) * _2577) * _2211) + ((((cbLight._m0[_2435].z * _2181) * _2488) * _2502) * _2224);
    float _2645;
    float _2647;
    float _2649;
    if (_2264)
    {
        _2645 = _2587;
        _2647 = _2588;
        _2649 = _2589;
    }
    else
    {
        uint _2651 = _2188 + 2u;
        uint _2655 = _2188 + 10u;
        float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2651].w)) * _744) * 0.949999988079071044921875);
        float _2670 = _2669 * _2669;
        float _2671 = cbLight._m0[_2651].x + _820;
        float _2672 = cbLight._m0[_2651].y + _821;
        float _2673 = cbLight._m0[_2651].z + _822;
        float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
        float _2678 = _2677 * _2671;
        float _2679 = _2677 * _2672;
        float _2680 = _2677 * _2673;
        float _2681 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2651].xyz));
        float _4610 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
        float _2685 = dot(vec3(_741, _742, _743), vec3(_2678, _2679, _2680));
        float _4621 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2688 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
        float _2689 = dot(vec3(cbLight._m0[_2651].xyz), vec3(_2678, _2679, _2680));
        float _4632 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2693 = _2670 * _2670;
        float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
        float _2706 = (exp2(log2(1.0 - (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2707 = 1.0 - _2670;
        float _2717 = (0.5 / (((_2464 * ((_2684 * _2707) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2464 * _2707) + _2670) * _2684))) * _2684;
        float _4643 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
        float _2719 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
        float _2720 = isnan(1.0) ? _2203 : (isnan(_2203) ? 1.0 : min(_2203, 1.0));
        _2645 = (((_2706 * cbLight._m0[_2655].x) * _2719) * _2720) + _2587;
        _2647 = (((_2706 * cbLight._m0[_2655].y) * _2719) * _2720) + _2588;
        _2649 = (((_2706 * cbLight._m0[_2655].z) * _2719) * _2720) + _2589;
    }
    float _2751;
    float _2753;
    float _2755;
    if (_2373)
    {
        _2751 = _2645;
        _2753 = _2647;
        _2755 = _2649;
    }
    else
    {
        uint _2762 = _2188 + 3u;
        uint _2766 = _2188 + 11u;
        float _2780 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2762].w)) * _744) * 0.949999988079071044921875);
        float _2781 = _2780 * _2780;
        float _2782 = cbLight._m0[_2762].x + _820;
        float _2783 = cbLight._m0[_2762].y + _821;
        float _2784 = cbLight._m0[_2762].z + _822;
        float _2788 = inversesqrt(dot(vec3(_2782, _2783, _2784), vec3(_2782, _2783, _2784)));
        float _2789 = _2788 * _2782;
        float _2790 = _2788 * _2783;
        float _2791 = _2788 * _2784;
        float _2792 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2762].xyz));
        float _4659 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
        float _2795 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
        float _2796 = dot(vec3(_741, _742, _743), vec3(_2789, _2790, _2791));
        float _4670 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2799 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _2800 = dot(vec3(cbLight._m0[_2762].xyz), vec3(_2789, _2790, _2791));
        float _4681 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0));
        float _2804 = _2781 * _2781;
        float _2808 = ((_2799 * _2799) * (_2804 + (-1.0))) + 1.0;
        float _2817 = (exp2(log2(1.0 - (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2818 = 1.0 - _2781;
        float _2828 = (0.5 / (((_2464 * ((_2795 * _2818) + _2781)) + 9.9999999392252902907785028219223e-09) + (((_2464 * _2818) + _2781) * _2795))) * _2795;
        float _4692 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        float _2830 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (_2804 / ((_2808 * _2808) * 3.141590118408203125));
        float _2831 = isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0));
        _2751 = (((_2817 * cbLight._m0[_2766].x) * _2830) * _2831) + _2645;
        _2753 = (((_2817 * cbLight._m0[_2766].y) * _2830) * _2831) + _2647;
        _2755 = (((_2817 * cbLight._m0[_2766].z) * _2830) * _2831) + _2649;
    }
    float _2897;
    float _2899;
    float _2901;
    float _2903;
    float _2905;
    float _2907;
    if (_2186.y == 0u)
    {
        uvec4 _2852 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2853 = _2852.x;
        uint _2864 = uint((float(_2852.y) * floor(float(uint(cbSceneParam._m0[85u].y * _829) / _2853))) + floor(float(uint(cbSceneParam._m0[85u].x * _828) / _2853)));
        float _2874 = (log2(_1964 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2875 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
        uint _2878 = uint(isnan(14.0) ? _2875 : (isnan(_2875) ? 14.0 : min(_2875, 14.0)));
        uvec4 _2883 = texelFetch(g_lightClusterGridBuffer, int(((_2878 << 2u) + (_2864 << 6u)) >> 2u));
        uint _2884 = _2883.x;
        uint _2885 = _2852.z;
        float _2964;
        float _2966;
        float _2968;
        float _2970;
        float _2972;
        float _2974;
        if (((((1u << ((_2885 >> 4u) & 15u)) + 4294967295u) & _2884) == 0u) || ((_2885 & 240u) == 0u))
        {
            _2964 = 0.0;
            _2966 = 0.0;
            _2968 = 0.0;
            _2970 = 0.0;
            _2972 = 0.0;
            _2974 = 0.0;
        }
        else
        {
            float _2965;
            float _2967;
            float _2969;
            float _2971;
            float _2973;
            float _2975;
            float _3108 = 0.0;
            float _3109 = 0.0;
            float _3110 = 0.0;
            float _3111 = 0.0;
            float _3112 = 0.0;
            float _3113 = 0.0;
            uint _3114 = 0u;
            uint _3123;
            bool _3124;
            for (;;)
            {
                _3123 = texelFetch(g_lightClassification, int((((_2878 << 5u) + (_2864 << 9u)) + (_3114 << 2u)) >> 2u)).x;
                _3124 = _3123 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3124)
                {
                    frontier_phi_66_pred = _3113;
                    frontier_phi_66_pred_1 = _3112;
                    frontier_phi_66_pred_2 = _3111;
                    frontier_phi_66_pred_3 = _3110;
                    frontier_phi_66_pred_4 = _3109;
                    frontier_phi_66_pred_5 = _3108;
                }
                else
                {
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    float _3237;
                    uint _3238;
                    _3232 = _3108;
                    _3233 = _3109;
                    _3234 = _3110;
                    _3235 = _3111;
                    _3236 = _3112;
                    _3237 = _3113;
                    _3238 = _3123;
                    float _3164;
                    float _3165;
                    float _3166;
                    float _3167;
                    float _3168;
                    float _3169;
                    for (;;)
                    {
                        uint _3242 = uint(findLSB(_3238)) + (_3114 << 5u);
                        uint _3239 = (_3238 + 4294967295u) & _3238;
                        uint _3244 = _3242 * 48u;
                        vec4 _3258 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3244)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 3u)).x));
                        uint _3264 = (_3242 * 48u) + 4u;
                        vec4 _3277 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3264)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 3u)).x));
                        uint _3283 = (_3242 * 48u) + 8u;
                        vec3 _3294 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3283)).x, texelFetch(g_PointLightRenderingBuffer, int(_3283 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3283 + 2u)).x));
                        float _3298 = _3258.x - _1962;
                        float _3299 = _3258.y - _1963;
                        float _3300 = _3258.z - _1964;
                        float _3301 = dot(vec3(_3298, _3299, _3300), vec3(_3298, _3299, _3300));
                        float _3304 = inversesqrt(_3301);
                        float _3305 = _3304 * _3298;
                        float _3306 = _3304 * _3299;
                        float _3307 = _3304 * _3300;
                        float _3308 = dot(vec3(_847, _850, _853), vec3(_3305, _3306, _3307));
                        float _3313 = 1.0 - (_3301 * _3258.w);
                        float _4718 = isnan(0.0) ? _3313 : (isnan(_3313) ? 0.0 : max(_3313, 0.0));
                        float _3314 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
                        float _3315 = sqrt(_3301) * _3277.w;
                        float _3318 = 1.39999997615814208984375 / (_3315 + 1.39999997615814208984375);
                        float _3319 = _3318 * _3318;
                        float _3322 = ((1.0 - _3319) * _3308) + _3319;
                        float _3325 = _3315 * _3315;
                        float _3329 = ((isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0))) * _3314) / ((_3325 * 0.699999988079071044921875) + 1.0);
                        float _3333 = (-0.0) - _1962;
                        float _3334 = (-0.0) - _1963;
                        float _3335 = (-0.0) - _1964;
                        float _3339 = inversesqrt(dot(vec3(_3333, _3334, _3335), vec3(_3333, _3334, _3335)));
                        float _3340 = _3339 * _3333;
                        float _3341 = _3339 * _3334;
                        float _3342 = _3339 * _3335;
                        float _3349 = exp2(log2(1.0 / ((_3325 * 3.5) + 5.0)) * 0.25);
                        float _3350 = 1.0 - _907;
                        float _3357 = sqrt(1.0 - ((1.0 - (_3350 * _3350)) * (1.0 - (_3349 * _3349))));
                        float _3358 = _3357 * _3357;
                        float _3359 = _3358 * _3358;
                        float _3360 = _3340 + _3305;
                        float _3361 = _3341 + _3306;
                        float _3362 = _3342 + _3307;
                        float _3366 = inversesqrt(dot(vec3(_3360, _3361, _3362), vec3(_3360, _3361, _3362)));
                        float _3370 = dot(vec3(_847, _850, _853), vec3(_3340, _3341, _3342));
                        float _4734 = isnan(0.0) ? _3370 : (isnan(_3370) ? 0.0 : max(_3370, 0.0));
                        float _3373 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
                        float _3374 = dot(vec3(_847, _850, _853), vec3(_3366 * _3360, _3366 * _3361, _3366 * _3362));
                        float _4745 = isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : max(_3374, 0.0));
                        float _3377 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
                        float _3381 = ((_3377 * _3377) * (_3359 + (-1.0))) + 1.0;
                        float _3382 = _3318 * _3358;
                        float _3383 = _3382 * _3382;
                        float _3386 = ((1.0 - _3383) * _3308) + _3383;
                        float _4756 = isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0));
                        float _3387 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
                        float _3388 = 1.0 - _3358;
                        float _3398 = (0.5 / (((_3387 * ((_3373 * _3388) + _3358)) + 9.9999999392252902907785028219223e-09) + (((_3387 * _3388) + _3358) * _3373))) * _3387;
                        float _4767 = isnan(0.0) ? _3398 : (isnan(_3398) ? 0.0 : max(_3398, 0.0));
                        float _3409 = (((_3359 * 3.1415927410125732421875) * (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0)))) / ((_3381 * _3381) * ((_3325 * 2.1991131305694580078125) + 3.141590118408203125))) * _3314;
                        _3167 = (_3329 * _3277.x) + _3235;
                        _3168 = (_3329 * _3277.y) + _3236;
                        _3169 = (_3329 * _3277.z) + _3237;
                        _3164 = (_3409 * _3294.x) + _3232;
                        _3165 = (_3409 * _3294.y) + _3233;
                        _3166 = (_3409 * _3294.z) + _3234;
                        if (_3239 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3232 = _3164;
                            _3233 = _3165;
                            _3234 = _3166;
                            _3235 = _3167;
                            _3236 = _3168;
                            _3237 = _3169;
                            _3238 = _3239;
                        }
                    }
                    frontier_phi_66_pred = _3169;
                    frontier_phi_66_pred_1 = _3168;
                    frontier_phi_66_pred_2 = _3167;
                    frontier_phi_66_pred_3 = _3166;
                    frontier_phi_66_pred_4 = _3165;
                    frontier_phi_66_pred_5 = _3164;
                }
                _2975 = frontier_phi_66_pred;
                _2973 = frontier_phi_66_pred_1;
                _2971 = frontier_phi_66_pred_2;
                _2969 = frontier_phi_66_pred_3;
                _2967 = frontier_phi_66_pred_4;
                _2965 = frontier_phi_66_pred_5;
                uint _3115 = _3114 + 1u;
                if (_3115 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3108 = _2965;
                    _3109 = _2967;
                    _3110 = _2969;
                    _3111 = _2971;
                    _3112 = _2973;
                    _3113 = _2975;
                    _3114 = _3115;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2964 = _2965;
            _2966 = _2967;
            _2968 = _2969;
            _2970 = _2971;
            _2972 = _2973;
            _2974 = _2975;
        }
        uvec4 _2978 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2979 = _2978.z;
        uint _2981 = (_2979 >> 8u) & 15u;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        float _3084;
        float _3086;
        if (((4294967295u << _2981) & _2884) == 0u)
        {
            _3076 = _2964;
            _3078 = _2966;
            _3080 = _2968;
            _3082 = _2970;
            _3084 = _2972;
            _3086 = _2974;
        }
        else
        {
            float _3101 = inversesqrt(dot(vec3(_1962, _1963, _1964), vec3(_1962, _1963, _1964)));
            float _3102 = _3101 * _1962;
            float _3103 = _3101 * _1963;
            float _3104 = _3101 * _1964;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2981 < ((_2979 >> 12u) & 15u))
            {
                float _3077;
                float _3079;
                float _3081;
                float _3083;
                float _3085;
                float _3087;
                float _3215 = _2964;
                float _3216 = _2966;
                float _3217 = _2968;
                float _3218 = _2970;
                float _3219 = _2972;
                float _3220 = _2974;
                uint _3221 = _2981;
                uint _3230;
                bool _3231;
                for (;;)
                {
                    _3230 = texelFetch(g_lightClassification, int((((_2878 << 5u) + (_2864 << 9u)) + (_3221 << 2u)) >> 2u)).x;
                    _3231 = _3230 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3231)
                    {
                        frontier_phi_72_pred = _3220;
                        frontier_phi_72_pred_1 = _3219;
                        frontier_phi_72_pred_2 = _3218;
                        frontier_phi_72_pred_3 = _3217;
                        frontier_phi_72_pred_4 = _3216;
                        frontier_phi_72_pred_5 = _3215;
                    }
                    else
                    {
                        float _3414;
                        float _3415;
                        float _3416;
                        float _3417;
                        float _3418;
                        float _3419;
                        float _3708;
                        float _3709;
                        float _3710;
                        float _3711;
                        float _3712;
                        float _3713;
                        float _3427 = _3215;
                        float _3428 = _3216;
                        float _3429 = _3217;
                        float _3430 = _3218;
                        float _3431 = _3219;
                        float _3432 = _3220;
                        uint _3433 = _3230;
                        uint _3434;
                        vec4 _3459;
                        float _3460;
                        vec4 _3475;
                        vec3 _3487;
                        vec4 _3502;
                        vec4 _3518;
                        float _3564;
                        bool _3565;
                        for (;;)
                        {
                            uint _3444 = ((_3221 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3433));
                            _3434 = (_3433 + 4294967295u) & _3433;
                            uint _3446 = _3444 * 40u;
                            _3459 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3446)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 3u)).x));
                            _3460 = _3459.w;
                            uint _3462 = (_3444 * 40u) + 4u;
                            _3475 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3462)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 3u)).x));
                            uint _3477 = (_3444 * 40u) + 8u;
                            _3487 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3477)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3477 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3477 + 2u)).x));
                            uint _3489 = (_3444 * 40u) + 16u;
                            _3502 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3489)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3489 + 3u)).x));
                            uint _3505 = (_3444 * 40u) + 20u;
                            _3518 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3505)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 3u)).x));
                            uint _3520 = (_3444 * 40u) + 24u;
                            vec4 _3533 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3520)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 3u)).x));
                            uint _3539 = (_3444 * 40u) + 28u;
                            vec4 _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            _3564 = fma(_1964, _3552.z, fma(_1963, _3552.y, _3552.x * _1962)) + _3552.w;
                            _3565 = !((fma(_1964, _3533.z, fma(_1963, _3533.y, _3533.x * _1962)) + _3533.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3565)
                            {
                                float _3592 = _3459.x - _1962;
                                float _3593 = _3459.y - _1963;
                                float _3594 = _3459.z - _1964;
                                float _3595 = dot(vec3(_3592, _3593, _3594), vec3(_3592, _3593, _3594));
                                float _3598 = inversesqrt(_3595);
                                float _3599 = _3598 * _3592;
                                float _3600 = _3598 * _3593;
                                float _3601 = _3598 * _3594;
                                float _3605 = 1.0 - (_3595 / (_3460 * _3460));
                                float _4778 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                                float _3606 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
                                float _3610 = sqrt(_3595) * _3475.w;
                                float _3612 = 1.39999997615814208984375 / (_3610 + 1.39999997615814208984375);
                                float _3613 = _3612 * _3612;
                                float _3616 = ((1.0 - _3613) * dot(vec3(_3599, _3600, _3601), vec3(_847, _850, _853))) + _3613;
                                float _3619 = _3610 * _3610;
                                float _3623 = (fma(_1964, _3502.z, fma(_1963, _3502.y, _3502.x * _1962)) + _3502.w) / _3564;
                                float _3624 = (fma(_1964, _3518.z, fma(_1963, _3518.y, _3518.x * _1962)) + _3518.w) / _3564;
                                float _3628 = 1.0 - dot(vec2(_3623, _3624), vec2(_3623, _3624));
                                float _4794 = isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0));
                                float _3629 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
                                float _3630 = _3629 * (((isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0))) * _3606) / ((_3619 * 0.699999988079071044921875) + 1.0));
                                float _3642 = exp2(log2(1.0 / ((_3619 * 3.5) + 5.0)) * 0.25);
                                float _3643 = 1.0 - _907;
                                float _3650 = sqrt(1.0 - ((1.0 - (_3643 * _3643)) * (1.0 - (_3642 * _3642))));
                                float _3651 = _3650 * _3650;
                                float _3652 = _3651 * _3651;
                                float _3653 = _3599 - _3102;
                                float _3654 = _3600 - _3103;
                                float _3655 = _3601 - _3104;
                                float _3659 = inversesqrt(dot(vec3(_3653, _3654, _3655), vec3(_3653, _3654, _3655)));
                                float _3663 = dot(vec3(_847, _850, _853), vec3((-0.0) - _3102, (-0.0) - _3103, (-0.0) - _3104));
                                float _4805 = isnan(0.0) ? _3663 : (isnan(_3663) ? 0.0 : max(_3663, 0.0));
                                float _3666 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
                                float _3667 = dot(vec3(_847, _850, _853), vec3(_3659 * _3653, _3659 * _3654, _3659 * _3655));
                                float _4816 = isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0));
                                float _3670 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
                                float _3674 = ((_3670 * _3670) * (_3652 + (-1.0))) + 1.0;
                                float _3675 = _3612 * _3651;
                                float _3676 = _3675 * _3675;
                                float _3682 = ((1.0 - _3676) * dot(vec3(_847, _850, _853), vec3(_3599, _3600, _3601))) + _3676;
                                float _4827 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3683 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
                                float _3684 = 1.0 - _3651;
                                float _3694 = (0.5 / (((_3683 * ((_3666 * _3684) + _3651)) + 9.9999999392252902907785028219223e-09) + (((_3683 * _3684) + _3651) * _3666))) * _3683;
                                float _4838 = isnan(0.0) ? _3694 : (isnan(_3694) ? 0.0 : max(_3694, 0.0));
                                float _3704 = (_3629 * _3606) * (((_3652 * 3.1415927410125732421875) * (isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0)))) / ((_3674 * _3674) * ((_3619 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3630 * _3475.y;
                                frontier_phi_78_pred_1 = _3630 * _3475.x;
                                frontier_phi_78_pred_2 = _3704 * _3487.z;
                                frontier_phi_78_pred_3 = _3704 * _3487.y;
                                frontier_phi_78_pred_4 = _3704 * _3487.x;
                                frontier_phi_78_pred_5 = _3630 * _3475.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3712 = frontier_phi_78_pred;
                            _3711 = frontier_phi_78_pred_1;
                            _3710 = frontier_phi_78_pred_2;
                            _3709 = frontier_phi_78_pred_3;
                            _3708 = frontier_phi_78_pred_4;
                            _3713 = frontier_phi_78_pred_5;
                            _3417 = _3711 + _3430;
                            _3418 = _3712 + _3431;
                            _3419 = _3713 + _3432;
                            _3414 = _3708 + _3427;
                            _3415 = _3709 + _3428;
                            _3416 = _3710 + _3429;
                            if (_3434 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3427 = _3414;
                                _3428 = _3415;
                                _3429 = _3416;
                                _3430 = _3417;
                                _3431 = _3418;
                                _3432 = _3419;
                                _3433 = _3434;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3419;
                        frontier_phi_72_pred_1 = _3418;
                        frontier_phi_72_pred_2 = _3417;
                        frontier_phi_72_pred_3 = _3416;
                        frontier_phi_72_pred_4 = _3415;
                        frontier_phi_72_pred_5 = _3414;
                    }
                    _3087 = frontier_phi_72_pred;
                    _3085 = frontier_phi_72_pred_1;
                    _3083 = frontier_phi_72_pred_2;
                    _3081 = frontier_phi_72_pred_3;
                    _3079 = frontier_phi_72_pred_4;
                    _3077 = frontier_phi_72_pred_5;
                    uint _3222 = _3221 + 1u;
                    if (_3222 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3215 = _3077;
                        _3216 = _3079;
                        _3217 = _3081;
                        _3218 = _3083;
                        _3219 = _3085;
                        _3220 = _3087;
                        _3221 = _3222;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3087;
                frontier_phi_60_61_ladder_1 = _3085;
                frontier_phi_60_61_ladder_2 = _3081;
                frontier_phi_60_61_ladder_3 = _3079;
                frontier_phi_60_61_ladder_4 = _3077;
                frontier_phi_60_61_ladder_5 = _3083;
            }
            else
            {
                frontier_phi_60_61_ladder = _2974;
                frontier_phi_60_61_ladder_1 = _2972;
                frontier_phi_60_61_ladder_2 = _2968;
                frontier_phi_60_61_ladder_3 = _2966;
                frontier_phi_60_61_ladder_4 = _2964;
                frontier_phi_60_61_ladder_5 = _2970;
            }
            _3076 = frontier_phi_60_61_ladder_4;
            _3078 = frontier_phi_60_61_ladder_3;
            _3080 = frontier_phi_60_61_ladder_2;
            _3082 = frontier_phi_60_61_ladder_5;
            _3084 = frontier_phi_60_61_ladder_1;
            _3086 = frontier_phi_60_61_ladder;
        }
        float _3091 = isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0));
        _2897 = (_3091 * _3082) + _2428;
        _2899 = (_3091 * _3084) + _2430;
        _2901 = (_3091 * _3086) + _2432;
        _2903 = ((_3076 * 0.039999999105930328369140625) * _3091) + _2751;
        _2905 = ((_3078 * 0.039999999105930328369140625) * _3091) + _2753;
        _2907 = ((_3080 * 0.039999999105930328369140625) * _3091) + _2755;
    }
    else
    {
        _2897 = _2428;
        _2899 = _2430;
        _2901 = _2432;
        _2903 = _2751;
        _2905 = _2753;
        _2907 = _2755;
    }
    float _4854 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _4865 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _4876 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    uint _2927 = _247 + 6u;
    float _2935 = _828 / cbSceneParam._m0[86u].x;
    float _2936 = _829 / cbSceneParam._m0[86u].y;
    vec4 _2950 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2935, _2936, (log2((isnan(cbSceneParam._m0[77u].w) ? _762 : (isnan(_762) ? cbSceneParam._m0[77u].w : min(_762, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2952 = _2950.x;
    float _2953 = _2950.y;
    float _2954 = _2950.z;
    float _2955 = _2950.w;
    float _3026;
    float _3028;
    float _3030;
    float _3032;
    if (_762 > cbSceneParam._m0[78u].w)
    {
        float _2989 = isnan(_762) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _762 : min(cbSceneParam._m0[80u].w, _762));
        float _2990 = _2989 / _762;
        float _3001 = _2990 * _813;
        float _3002 = _814 * _2990;
        float _3003 = (-0.0) - _3002;
        float _3004 = _2990 * _815;
        float _3006 = (cbSceneParam._m0[77u].w * _3003) / _2989;
        float _3007 = _3006 + cbSceneParam._m0[79u].w;
        float _3008 = cbSceneParam._m0[79u].w - _3002;
        float _3014 = sqrt(((_3001 * _3001) + (_3002 * _3002)) + (_3004 * _3004));
        float _3017 = (1.0 - (cbSceneParam._m0[77u].w / _2989)) * _3014;
        float _3022 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3024 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3177;
        if (abs((_3003 - _3006) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3177 = ((((_3007 > 0.0) ? exp2(_3022 * _3007) : (2.0 - exp2(_3024 * _3007))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3017;
        }
        else
        {
            float _3137 = 1.0 / cbSceneParam._m0[80u].x;
            float _3138 = isnan(_3008) ? _3007 : (isnan(_3007) ? _3008 : max(_3007, _3008));
            float _3139 = isnan(_3008) ? _3007 : (isnan(_3007) ? _3008 : min(_3007, _3008));
            float _3148 = isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : min(_3138, 0.0));
            float _3149 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : min(_3139, 0.0));
            _3177 = ((abs(_3014 / _3003) * cbSceneParam._m0[80u].y) * ((((_3148 - _3149) * 2.0) - ((exp2(_3022 * (isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0)))) - exp2(_3022 * (isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0))))) * _3137)) - ((exp2(_3024 * _3148) - exp2(_3024 * _3149)) * _3137))) + (_3017 * cbSceneParam._m0[80u].z);
        }
        vec4 _3179 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2935, _2936, 1.0), 0.0);
        float _3188 = exp2((_3177 * (-1.44269502162933349609375)) * (1.0 - _3179.w));
        float _3189 = log2(_3188);
        float _3205 = log2(_2955);
        _3026 = (exp2(_3205 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].x)) * _3179.x) / cbSceneParam._m0[78u].x)) + _2952;
        _3028 = (exp2(_3205 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].y)) * _3179.y) / cbSceneParam._m0[78u].y)) + _2953;
        _3030 = (exp2(_3205 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].z)) * _3179.z) / cbSceneParam._m0[78u].z)) + _2954;
        _3032 = _3188 * _2955;
    }
    else
    {
        _3026 = _2952;
        _3028 = _2953;
        _3030 = _2954;
        _3032 = _2955;
    }
    float _3044 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3045 = _3044 == 3.0;
    float _3046 = log2(_3032);
    float _3053 = exp2(_3046 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0))) * (_2897 + ((isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))) * _891))) + ((_2903 + ((isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0))) * _1696)) * cbPerFrame._m0[3u].x));
    float _3054 = exp2(_3046 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_2899 + ((isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))) * _891))) + ((_2905 + ((isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0))) * _1696)) * cbPerFrame._m0[3u].x));
    float _3055 = exp2(_3046 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0))) * (_2901 + ((isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0))) * _891))) + ((_2907 + ((isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0))) * _1696)) * cbPerFrame._m0[3u].x));
    float _3064 = (_3044 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3064 * (_3045 ? _3053 : (_3053 + (cbSceneParam._m0[72u].w * _3026)));
    SV_Target.y = _3064 * (_3045 ? _3054 : (_3054 + (cbSceneParam._m0[72u].w * _3028)));
    SV_Target.z = _3064 * (_3045 ? _3055 : (_3055 + (cbSceneParam._m0[72u].w * _3030)));
    SV_Target.w = cbInstanceData._m0[_2927].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2927].w;
}


