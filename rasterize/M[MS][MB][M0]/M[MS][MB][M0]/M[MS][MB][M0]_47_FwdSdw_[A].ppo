#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1127;
float _3770;
float _3771;
float _3772;
float _3773;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _245 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _247 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _248 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3782 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _3793 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _3804 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    uint _258 = uint(roundEven(NORMAL.w)) * 13u;
    uint _263 = _258 + 1u;
    uint _267 = _258 + 2u;
    float _276 = sqrt(((cbInstanceData._m0[_263].x * cbInstanceData._m0[_263].x) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x)) + (cbInstanceData._m0[_267].x * cbInstanceData._m0[_267].x));
    float _277 = _276 * TEXCOORD.z;
    float _278 = _276 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _277) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _278) + cbTextureTilingScale._m0[13u].w));
    vec4 _314 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _319 = _314.x * cbMtdParam._m0[9u].x;
    float _320 = _314.y * cbMtdParam._m0[9u].y;
    float _321 = _314.z * cbMtdParam._m0[9u].z;
    float _325 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _291.x) * _319;
    float _328 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _291.y) * _320;
    float _331 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _291.z) * _321;
    float _338 = ((_319 - _325) * (isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0)))) + _325;
    float _339 = ((_320 - _328) * (isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0)))) + _328;
    float _340 = ((_321 - _331) * (isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0)))) + _331;
    vec4 _359 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _277) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _278) + cbTextureTilingScale._m0[14u].w));
    vec4 _379 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _277) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _278) + cbTextureTilingScale._m0[20u].w));
    vec4 _405 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _409 = _405.z;
    float _413 = (_405.x * 2.0) + (-1.0);
    float _414 = (_405.y * 2.0) + (-1.0);
    float _415 = dot(vec2(_413, _414), vec2(_413, _414));
    float _3815 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _420 = sqrt(1.0 - (isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0))));
    float _425 = _413 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_379.x * 2.0) + (-1.0)));
    float _426 = _414 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_379.y * 2.0) + (-1.0)));
    float _429 = fma(_420, _225, fma(_426, _232, _425 * _218));
    float _432 = fma(_420, _226, fma(_426, _233, _425 * _219));
    float _435 = fma(_420, _227, fma(_426, _234, _425 * _220));
    float _439 = inversesqrt(dot(vec3(_429, _432, _435), vec3(_429, _432, _435)));
    vec4 _475 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _277) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _278) + cbTextureTilingScale._m0[11u].w));
    float _477 = _475.x;
    float _478 = 1.0 - _477;
    float _487 = (cbMtdParam._m0[19u].x + dot(vec4(_439 * _429, _439 * _432, _439 * _435, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_477 - _478) * cbMtdParam._m0[24u].z) + _478) * cbMtdParam._m0[21u].z);
    float _3826 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _488 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
    float _495 = (_488 * ((_359.x * cbMtdParam._m0[18u].x) - _338)) + _338;
    float _496 = (_488 * ((_359.y * cbMtdParam._m0[18u].y) - _339)) + _339;
    float _497 = (_488 * ((_359.z * cbMtdParam._m0[18u].z) - _340)) + _340;
    float _502 = (((_379.z - _409) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _409;
    vec4 _515 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _277) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _278) + cbTextureTilingScale._m0[15u].w));
    float _522 = (_515.x * 2.0) + (-1.0);
    float _523 = (_515.y * 2.0) + (-1.0);
    float _524 = dot(vec2(_522, _523), vec2(_522, _523));
    float _3837 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _532 = ((_515.z - _502) * _488) + _502;
    float _542 = ((sqrt(1.0 - (isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0)))) - _420) * _488) + _420;
    float _545 = (((_522 - _425) * _488) + _425) + (cbMtdParam._m0[21u].x * _425);
    float _546 = (((_523 - _426) * _488) + _426) + (cbMtdParam._m0[21u].x * _426);
    float _548 = cbMtdParam._m0[22u].x + _405.w;
    float _551 = fma(_542, _225, fma(_546, _232, _545 * _218));
    float _554 = fma(_542, _226, fma(_546, _233, _545 * _219));
    float _557 = fma(_542, _227, fma(_546, _234, _545 * _220));
    float _561 = inversesqrt(dot(vec3(_551, _554, _557), vec3(_551, _554, _557)));
    float _562 = _561 * _551;
    float _563 = _561 * _554;
    float _564 = _561 * _557;
    float _3848 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _565 = isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0));
    float _3859 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _3870 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _3881 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _3892 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _583 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _624 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _634 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _624);
    float _635 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _624);
    float _636 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _624);
    float _640 = inversesqrt(dot(vec3(_634, _635, _636), vec3(_634, _635, _636)));
    float _641 = _634 * _640;
    float _642 = _635 * _640;
    float _643 = _636 * _640;
    vec4 _648 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _650 = _648.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _807 = sqrt(((_634 * _634) + (_635 * _635)) + (_636 * _636));
        float _813 = (cbMatDynParam._m0[5u].x * _807) + cbMatDynParam._m0[5u].y;
        float _3903 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
        float _814 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
        float _818 = (cbMatDynParam._m0[5u].z * _807) + cbMatDynParam._m0[5u].w;
        float _3914 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0))) - _814)) + _814) < ((_650 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _662 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _663 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _683 = fma(_564, cbSceneParam._m0[5u].z, fma(_563, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _562));
    float _686 = fma(_564, cbSceneParam._m0[6u].z, fma(_563, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _562));
    float _689 = fma(_564, cbSceneParam._m0[7u].z, fma(_563, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _562));
    uint _702 = _258 + 9u;
    uint _703 = _702 + uint(cbMatDynParam._m0[0u].w);
    float _709 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0)))) * cbInstanceData._m0[_703].x;
    float _710 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0)))) * cbInstanceData._m0[_703].y;
    float _711 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0)))) * cbInstanceData._m0[_703].z;
    float _3925 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _712 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
    float _3936 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _713 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _3947 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _714 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    vec4 _723 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _662, cbSceneParam._m0[86u].y * _663));
    float _727 = ((isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0))) * TEXCOORD_5.w) * _723.x;
    float _728 = dot(vec3(_562, _563, _564), vec3(_641, _642, _643));
    float _731 = _728 * 2.0;
    float _735 = (_731 * _562) - _641;
    float _736 = (_731 * _563) - _642;
    float _737 = (_731 * _564) - _643;
    float _741 = abs(dot(vec3(_641, _642, _643), vec3(_562, _563, _564)));
    float _3958 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _743 = sqrt(_565);
    float _756 = exp2((_743 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_743 * 3.0));
    float _788 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _792 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _796 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1126;
    float _1128;
    float _1129;
    float _1130;
    float _1131;
    float _1132;
    float _1133;
    float _1134;
    float _1135;
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _851 = fma(_796, cbModelParam._m0[26u].z, fma(_792, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _788));
        float _855 = fma(_796, cbModelParam._m0[27u].z, fma(_792, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _788));
        float _859 = fma(_796, cbModelParam._m0[28u].z, fma(_792, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _788));
        float _884 = _788 + _562;
        float _885 = _792 + _563;
        float _886 = _796 + _564;
        float _896 = fma(_886, cbModelParam._m0[26u].z, fma(_885, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _884)) - _851;
        float _897 = fma(_886, cbModelParam._m0[27u].z, fma(_885, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _884)) - _855;
        float _898 = fma(_886, cbModelParam._m0[28u].z, fma(_885, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _884)) - _859;
        float _902 = inversesqrt(dot(vec3(_896, _897, _898), vec3(_896, _897, _898)));
        float _915 = ((_902 * _896) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_851 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _916 = ((_902 * _897) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_855 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _917 = ((_902 * _898) / cbModelParam._m0[34u].z) + ((((((_859 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _920 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_915, _916, _917), 0.0);
        vec4 _927 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_915, _916, _917), 0.0);
        vec4 _934 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_915, _916, _917), 0.0);
        vec4 _941 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_915, _916, _917), 0.0);
        float _954 = exp2((_920.w + (-0.5)) * 20.0) * 2.0;
        float _955 = _954 * (_920.x + (-0.5));
        float _956 = _954 * (_920.y + (-0.5));
        float _957 = _954 * (_920.z + (-0.5));
        float _964 = exp2((_927.w + (-0.5)) * 20.0) * 2.0;
        float _965 = _964 * (_927.x + (-0.5));
        float _966 = _964 * (_927.y + (-0.5));
        float _967 = _964 * (_927.z + (-0.5));
        float _974 = exp2((_934.w + (-0.5)) * 20.0) * 2.0;
        float _975 = _974 * (_934.x + (-0.5));
        float _976 = _974 * (_934.y + (-0.5));
        float _977 = _974 * (_934.z + (-0.5));
        float _984 = exp2((_941.w + (-0.5)) * 20.0) * 2.0;
        float _985 = _984 * (_941.x + (-0.5));
        float _986 = _984 * (_941.y + (-0.5));
        float _987 = _984 * (_941.z + (-0.5));
        float _988 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        float _989 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _990 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        float _991 = _955 * 0.5;
        float _992 = _965 * 0.5;
        float _993 = _975 * 0.5;
        float _994 = dot(vec3(_991, _992, _993), vec3(_991, _992, _993));
        float _999 = (_994 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_994);
        float _1008 = (dot(vec3(_562, _563, _564), vec3(_999 * _991, _999 * _992, _999 * _993)) + 1.0) * 0.5;
        float _3984 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
        float _1018 = sqrt(((_992 * _992) + (_991 * _991)) + (_993 * _993)) / (_988 + 9.9999997473787516355514526367188e-06);
        float _3995 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1019 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _1020 = _1019 * 2.0;
        float _1024 = (1.0 - _1019) / (_1019 + 1.0);
        float _4006 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        float _1025 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
        float _1034 = ((((1.0 - _1025) * (_1020 + 2.0)) * exp2(log2(isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * (_1020 + 1.0))) + _1025) * _988;
        float _1035 = _956 * 0.5;
        float _1036 = _966 * 0.5;
        float _1037 = _976 * 0.5;
        float _1038 = dot(vec3(_1035, _1036, _1037), vec3(_1035, _1036, _1037));
        float _1043 = (_1038 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1038);
        float _1051 = (dot(vec3(_562, _563, _564), vec3(_1043 * _1035, _1043 * _1036, _1043 * _1037)) + 1.0) * 0.5;
        float _4017 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1060 = sqrt(((_1036 * _1036) + (_1035 * _1035)) + (_1037 * _1037)) / (_989 + 9.9999997473787516355514526367188e-06);
        float _4028 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
        float _1061 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1062 = _1061 * 2.0;
        float _1066 = (1.0 - _1061) / (_1061 + 1.0);
        float _4039 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1067 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1076 = ((((1.0 - _1067) * (_1062 + 2.0)) * exp2(log2(isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * (_1062 + 1.0))) + _1067) * _989;
        float _1077 = _957 * 0.5;
        float _1078 = _967 * 0.5;
        float _1079 = _977 * 0.5;
        float _1080 = dot(vec3(_1077, _1078, _1079), vec3(_1077, _1078, _1079));
        float _1085 = (_1080 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1080);
        float _1093 = (dot(vec3(_562, _563, _564), vec3(_1085 * _1077, _1085 * _1078, _1085 * _1079)) + 1.0) * 0.5;
        float _4050 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1102 = sqrt(((_1078 * _1078) + (_1077 * _1077)) + (_1079 * _1079)) / (_990 + 9.9999997473787516355514526367188e-06);
        float _4061 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1103 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
        float _1104 = _1103 * 2.0;
        float _1108 = (1.0 - _1103) / (_1103 + 1.0);
        float _4072 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1118 = ((((1.0 - _1109) * (_1104 + 2.0)) * exp2(log2(isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * (_1104 + 1.0))) + _1109) * _990;
        _1126 = _957;
        _1128 = _956;
        _1129 = _955;
        _1130 = _967;
        _1131 = _966;
        _1132 = _965;
        _1133 = _977;
        _1134 = _976;
        _1135 = _975;
        _1136 = _990;
        _1137 = _989;
        _1138 = _988;
        _1139 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0)));
        _1140 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0)));
        _1141 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0)));
    }
    else
    {
        _1126 = _1127;
        _1128 = _1127;
        _1129 = _1127;
        _1130 = _1127;
        _1131 = _1127;
        _1132 = _1127;
        _1133 = _1127;
        _1134 = _1127;
        _1135 = _1127;
        _1136 = _1127;
        _1137 = _1127;
        _1138 = _1127;
        _1139 = 0.0;
        _1140 = 0.0;
        _1141 = 0.0;
    }
    float _1438;
    float _1439;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1169 = fma(_796, cbModelParam._m0[30u].z, fma(_792, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _788));
        float _1173 = fma(_796, cbModelParam._m0[31u].z, fma(_792, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _788));
        float _1177 = fma(_796, cbModelParam._m0[32u].z, fma(_792, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _788));
        float _1200 = _788 + _562;
        float _1201 = _792 + _563;
        float _1202 = _796 + _564;
        float _1212 = fma(_1202, cbModelParam._m0[30u].z, fma(_1201, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1200)) - _1169;
        float _1213 = fma(_1202, cbModelParam._m0[31u].z, fma(_1201, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1200)) - _1173;
        float _1214 = fma(_1202, cbModelParam._m0[32u].z, fma(_1201, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1200)) - _1177;
        float _1218 = inversesqrt(dot(vec3(_1212, _1213, _1214), vec3(_1212, _1213, _1214)));
        float _1231 = ((_1218 * _1212) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1169 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1232 = ((_1218 * _1213) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1173 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1233 = ((_1218 * _1214) / cbModelParam._m0[35u].z) + ((((((_1177 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1231, _1232, _1233), 0.0);
        vec4 _1242 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1231, _1232, _1233), 0.0);
        vec4 _1249 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1231, _1232, _1233), 0.0);
        vec4 _1256 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1231, _1232, _1233), 0.0);
        float _1268 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1235.x + (-0.5));
        float _1270 = _1268 * (_1235.y + (-0.5));
        float _1271 = _1268 * (_1235.z + (-0.5));
        float _1278 = exp2((_1242.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1242.x + (-0.5));
        float _1280 = _1278 * (_1242.y + (-0.5));
        float _1281 = _1278 * (_1242.z + (-0.5));
        float _1288 = exp2((_1249.w + (-0.5)) * 20.0) * 2.0;
        float _1289 = _1288 * (_1249.x + (-0.5));
        float _1290 = _1288 * (_1249.y + (-0.5));
        float _1291 = _1288 * (_1249.z + (-0.5));
        float _1298 = exp2((_1256.w + (-0.5)) * 20.0) * 2.0;
        float _1299 = _1298 * (_1256.x + (-0.5));
        float _1300 = _1298 * (_1256.y + (-0.5));
        float _1301 = _1298 * (_1256.z + (-0.5));
        float _1302 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1304 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1305 = _1269 * 0.5;
        float _1306 = _1279 * 0.5;
        float _1307 = _1289 * 0.5;
        float _1308 = dot(vec3(_1305, _1306, _1307), vec3(_1305, _1306, _1307));
        float _1313 = (_1308 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1308);
        float _1321 = (dot(vec3(_562, _563, _564), vec3(_1313 * _1305, _1313 * _1306, _1313 * _1307)) + 1.0) * 0.5;
        float _4113 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1330 = sqrt(((_1306 * _1306) + (_1305 * _1305)) + (_1307 * _1307)) / (_1302 + 9.9999997473787516355514526367188e-06);
        float _4124 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1331 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1332 = _1331 * 2.0;
        float _1336 = (1.0 - _1331) / (_1331 + 1.0);
        float _4135 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1346 = ((((1.0 - _1337) * (_1332 + 2.0)) * exp2(log2(isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_1332 + 1.0))) + _1337) * _1302;
        float _1347 = _1270 * 0.5;
        float _1348 = _1280 * 0.5;
        float _1349 = _1290 * 0.5;
        float _1350 = dot(vec3(_1347, _1348, _1349), vec3(_1347, _1348, _1349));
        float _1355 = (_1350 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1350);
        float _1363 = (dot(vec3(_562, _563, _564), vec3(_1355 * _1347, _1355 * _1348, _1355 * _1349)) + 1.0) * 0.5;
        float _4146 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1372 = sqrt(((_1348 * _1348) + (_1347 * _1347)) + (_1349 * _1349)) / (_1303 + 9.9999997473787516355514526367188e-06);
        float _4157 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1373 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1374 = _1373 * 2.0;
        float _1378 = (1.0 - _1373) / (_1373 + 1.0);
        float _4168 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1388 = ((((1.0 - _1379) * (_1374 + 2.0)) * exp2(log2(isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * (_1374 + 1.0))) + _1379) * _1303;
        float _1389 = _1271 * 0.5;
        float _1390 = _1281 * 0.5;
        float _1391 = _1291 * 0.5;
        float _1392 = dot(vec3(_1389, _1390, _1391), vec3(_1389, _1390, _1391));
        float _1397 = (_1392 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1392);
        float _1405 = (dot(vec3(_562, _563, _564), vec3(_1397 * _1389, _1397 * _1390, _1397 * _1391)) + 1.0) * 0.5;
        float _4179 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1414 = sqrt(((_1390 * _1390) + (_1389 * _1389)) + (_1391 * _1391)) / (_1304 + 9.9999997473787516355514526367188e-06);
        float _4190 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1415 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _1416 = _1415 * 2.0;
        float _1420 = (1.0 - _1415) / (_1415 + 1.0);
        float _4201 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1430 = ((((1.0 - _1421) * (_1416 + 2.0)) * exp2(log2(isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0))) * (_1416 + 1.0))) + _1421) * _1304;
        _1438 = _1271;
        _1439 = _1270;
        _1440 = _1269;
        _1441 = _1281;
        _1442 = _1280;
        _1443 = _1279;
        _1444 = _1291;
        _1445 = _1290;
        _1446 = _1289;
        _1447 = _1304;
        _1448 = _1303;
        _1449 = _1302;
        _1450 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0)));
        _1451 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0)));
        _1452 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0)));
    }
    else
    {
        _1438 = _1127;
        _1439 = _1127;
        _1440 = _1127;
        _1441 = _1127;
        _1442 = _1127;
        _1443 = _1127;
        _1444 = _1127;
        _1445 = _1127;
        _1446 = _1127;
        _1447 = _1127;
        _1448 = _1127;
        _1449 = _1127;
        _1450 = 0.0;
        _1451 = 0.0;
        _1452 = 0.0;
    }
    float _1462 = (cbModelParam._m0[1u].x * (_1450 - _1139)) + _1139;
    float _1463 = (cbModelParam._m0[1u].x * (_1451 - _1140)) + _1140;
    float _1464 = (cbModelParam._m0[1u].x * (_1452 - _1141)) + _1141;
    float _1485 = fma(_1464, cbSceneParam._m0[89u].z, fma(_1463, cbSceneParam._m0[89u].y, _1462 * cbSceneParam._m0[89u].x));
    float _1488 = fma(_1464, cbSceneParam._m0[90u].z, fma(_1463, cbSceneParam._m0[90u].y, _1462 * cbSceneParam._m0[90u].x));
    float _1491 = fma(_1464, cbSceneParam._m0[91u].z, fma(_1463, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1462));
    float _1506 = _735 * 0.5;
    float _1507 = _736 * 0.5;
    float _1508 = _737 * 0.5;
    float _1509 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1440, _1443, _1446, _1449));
    float _1512 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1439, _1442, _1445, _1448));
    float _1515 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1438, _1441, _1444, _1447));
    float _1549;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1522 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1126, _1130, _1133, _1136));
        float _1526 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1128, _1131, _1134, _1137));
        float _1530 = dot(vec4(_1506, _1507, _1508, 1.0), vec4(_1129, _1132, _1135, _1138));
        float _1537 = dot(vec4(cbModelParam._m0[39u]), vec4(_1506, _1507, _1508, 1.0));
        _1549 = dot(vec3(isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)), isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)), isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1537) ? 0.0 : (isnan(0.0) ? _1537 : max(0.0, _1537))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1549 = 1.0;
    }
    float _1560;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1551 = dot(vec4(cbModelParam._m0[40u]), vec4(_1506, _1507, _1508, 1.0));
        _1560 = dot(vec3(isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0)), isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)), isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1551) ? 0.0 : (isnan(0.0) ? _1551 : max(0.0, _1551))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1560 = 1.0;
    }
    float _1564 = (_1560 * cbModelParam._m0[1u].x) + (_1549 * (1.0 - cbModelParam._m0[1u].x));
    float _1574 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _565);
    float _1575 = isnan(_1574) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1574 : min(cbModelParam._m0[25u].z, _1574));
    float _1655;
    float _1657;
    float _1659;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1622 = fma(_796, cbModelParam._m0[13u].z, fma(_792, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _788)) + cbModelParam._m0[13u].w;
        float _1626 = fma(_796, cbModelParam._m0[14u].z, fma(_792, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _788)) + cbModelParam._m0[14u].w;
        float _1630 = fma(_796, cbModelParam._m0[15u].z, fma(_792, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _788)) + cbModelParam._m0[15u].w;
        float _1633 = fma(_737, cbModelParam._m0[13u].z, fma(_736, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _735));
        float _1636 = fma(_737, cbModelParam._m0[14u].z, fma(_736, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _735));
        float _1639 = fma(_737, cbModelParam._m0[15u].z, fma(_736, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _735));
        float _1667;
        if (_1633 > 0.0)
        {
            _1667 = abs((1.0 - _1622) / _1633);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1633 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1622 + 1.0) / _1633);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1667 = frontier_phi_17_15_ladder;
        }
        float _1837;
        if (_1636 > 0.0)
        {
            _1837 = abs((1.0 - _1626) / _1636);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1636 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1626 + 1.0) / _1636);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1837 = frontier_phi_26_22_ladder;
        }
        float _2133;
        if (_1639 > 0.0)
        {
            _2133 = abs((1.0 - _1630) / _1639);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1639 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1630 + 1.0) / _1639);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2133 = frontier_phi_38_33_ladder;
        }
        float _2135 = isnan(_1837) ? _1667 : (isnan(_1667) ? _1837 : min(_1667, _1837));
        float _2136 = isnan(_2133) ? _2135 : (isnan(_2135) ? _2133 : min(_2135, _2133));
        float _2140 = (_2136 * _1633) + _1622;
        float _2141 = (_2136 * _1636) + _1626;
        float _2142 = (_2136 * _1639) + _1630;
        float _2143 = _2136 * 9.9999997473787516355514526367188e-05;
        float _2145 = (-1.0) - _2143;
        float _2147 = _2143 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2142 > _2147) || ((_2142 < _2145) || ((_2141 > _2147) || ((_2141 < _2145) || ((_2140 < _2145) || (_2140 > _2147))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2287 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2142, cbModelParam._m0[9u].z, fma(_2141, cbModelParam._m0[9u].y, _2140 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2142, cbModelParam._m0[10u].z, fma(_2141, cbModelParam._m0[10u].y, _2140 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2142, cbModelParam._m0[11u].z, fma(_2141, cbModelParam._m0[11u].y, _2140 * cbModelParam._m0[11u].x))), _1575);
            frontier_phi_16_38_ladder = _2287.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2287.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2287.x * cbModelParam._m0[1u].y;
        }
        _1655 = frontier_phi_16_38_ladder_2;
        _1657 = frontier_phi_16_38_ladder_1;
        _1659 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1643 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_735, _736, _737), _1575);
        _1655 = _1643.x * cbModelParam._m0[1u].y;
        _1657 = _1643.y * cbModelParam._m0[1u].y;
        _1659 = _1643.z * cbModelParam._m0[1u].y;
    }
    float _1663 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _565);
    float _1664 = isnan(_1663) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1663 : min(cbModelParam._m0[25u].w, _1663));
    float _1753;
    float _1755;
    float _1757;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1717 = fma(_796, cbModelParam._m0[21u].z, fma(_792, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _788)) + cbModelParam._m0[21u].w;
        float _1721 = fma(_796, cbModelParam._m0[22u].z, fma(_792, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _788)) + cbModelParam._m0[22u].w;
        float _1725 = fma(_796, cbModelParam._m0[23u].z, fma(_792, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _788)) + cbModelParam._m0[23u].w;
        float _1728 = fma(_737, cbModelParam._m0[21u].z, fma(_736, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _735));
        float _1731 = fma(_737, cbModelParam._m0[22u].z, fma(_736, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _735));
        float _1734 = fma(_737, cbModelParam._m0[23u].z, fma(_736, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _735));
        float _1842;
        if (_1728 > 0.0)
        {
            _1842 = abs((1.0 - _1717) / _1728);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1728 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1717 + 1.0) / _1728);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1842 = frontier_phi_28_24_ladder;
        }
        float _2160;
        if (_1731 > 0.0)
        {
            _2160 = abs((1.0 - _1721) / _1731);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1731 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1721 + 1.0) / _1731);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2160 = frontier_phi_40_35_ladder;
        }
        float _2487;
        if (_1734 > 0.0)
        {
            _2487 = abs((1.0 - _1725) / _1734);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1734 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1725 + 1.0) / _1734);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2487 = frontier_phi_50_47_ladder;
        }
        float _2489 = isnan(_2160) ? _1842 : (isnan(_1842) ? _2160 : min(_1842, _2160));
        float _2490 = isnan(_2487) ? _2489 : (isnan(_2489) ? _2487 : min(_2489, _2487));
        float _2494 = (_2490 * _1728) + _1717;
        float _2495 = (_2490 * _1731) + _1721;
        float _2496 = (_2490 * _1734) + _1725;
        float _2497 = _2490 * 9.9999997473787516355514526367188e-05;
        float _2498 = (-1.0) - _2497;
        float _2500 = _2497 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2496 > _2500) || ((_2496 < _2498) || ((_2495 > _2500) || ((_2495 < _2498) || ((_2494 < _2498) || (_2494 > _2500))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2614 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2496, cbModelParam._m0[17u].z, fma(_2495, cbModelParam._m0[17u].y, _2494 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2496, cbModelParam._m0[18u].z, fma(_2495, cbModelParam._m0[18u].y, _2494 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2496, cbModelParam._m0[19u].z, fma(_2495, cbModelParam._m0[19u].y, _2494 * cbModelParam._m0[19u].x))), _1664);
            frontier_phi_25_50_ladder = _2614.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2614.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2614.x * cbModelParam._m0[1u].z;
        }
        _1753 = frontier_phi_25_50_ladder_2;
        _1755 = frontier_phi_25_50_ladder_1;
        _1757 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1737 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_735, _736, _737), _1664);
        _1753 = _1737.x * cbModelParam._m0[1u].z;
        _1755 = _1737.y * cbModelParam._m0[1u].z;
        _1757 = _1737.z * cbModelParam._m0[1u].z;
    }
    float _1769 = ((((1.0 - _756) * ((_743 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_756 * _743)) * _727;
    float _1770 = _1769 * ((cbModelParam._m0[1u].w * (_1753 - _1655)) + _1655);
    float _1771 = _1769 * ((cbModelParam._m0[1u].w * (_1755 - _1657)) + _1657);
    float _1772 = _1769 * ((cbModelParam._m0[1u].w * (_1757 - _1659)) + _1659);
    float _1775 = fma(_1772, cbSceneParam._m0[89u].z, fma(_1771, cbSceneParam._m0[89u].y, _1770 * cbSceneParam._m0[89u].x));
    float _1778 = fma(_1772, cbSceneParam._m0[90u].z, fma(_1771, cbSceneParam._m0[90u].y, _1770 * cbSceneParam._m0[90u].x));
    float _1781 = fma(_1772, cbSceneParam._m0[91u].z, fma(_1771, cbSceneParam._m0[91u].y, _1770 * cbSceneParam._m0[91u].x));
    float _1816 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1820 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1824 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1828 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1829 = _1816 / _1828;
    float _1830 = _1820 / _1828;
    float _1831 = _1824 / _1828;
    float _1978;
    float _1979;
    float _1980;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1858 = ((uint(_1831 > cbSceneParam._m0[59u].y) + uint(_1831 > cbSceneParam._m0[59u].x)) + uint(_1831 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1859 = _1858 + 43u;
        uint _1867 = _1858 + 44u;
        uint _1875 = _1858 + 45u;
        uint _1883 = _1858 + 46u;
        float _1894 = fma(_1828, cbSceneParam._m0[_1859].w, fma(_1824, cbSceneParam._m0[_1859].z, fma(_1820, cbSceneParam._m0[_1859].y, _1816 * cbSceneParam._m0[_1859].x)));
        float _1898 = fma(_1828, cbSceneParam._m0[_1867].w, fma(_1824, cbSceneParam._m0[_1867].z, fma(_1820, cbSceneParam._m0[_1867].y, _1816 * cbSceneParam._m0[_1867].x)));
        float _1906 = fma(_1828, cbSceneParam._m0[_1883].w, fma(_1824, cbSceneParam._m0[_1883].z, fma(_1820, cbSceneParam._m0[_1883].y, _1816 * cbSceneParam._m0[_1883].x)));
        float _1911 = cbSceneParam._m0[33u].z * _1906;
        float _1913 = cbSceneParam._m0[33u].w * _1906;
        float _1916 = fma(_1828, cbSceneParam._m0[_1875].w, fma(_1824, cbSceneParam._m0[_1875].z, fma(_1820, cbSceneParam._m0[_1875].y, _1816 * cbSceneParam._m0[_1875].x))) / _1906;
        float _1964 = (cbSceneParam._m0[33u].x - sqrt(((_1830 * _1830) + (_1829 * _1829)) + (_1831 * _1831))) * cbSceneParam._m0[33u].y;
        float _4327 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
        float _1971 = (isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1911 + _1894) / _1906, (_1913 + _1898) / _1906), _1916), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1913 + _1894) / _1906, (_1898 - _1911) / _1906), _1916), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1894 - _1911) / _1906, (_1898 - _1913) / _1906), _1916), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1894 - _1913) / _1906, (_1911 + _1898) / _1906), _1916), 0.0)).x), vec4(0.25)));
        _1978 = 1.0 - (_1971 * cbSceneParam._m0[34u].x);
        _1979 = 1.0 - (_1971 * cbSceneParam._m0[34u].y);
        _1980 = 1.0 - (_1971 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1978 = 1.0;
        _1979 = 1.0;
        _1980 = 1.0;
    }
    float _2044;
    float _2046;
    float _2048;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2032 = fma(_1828, cbSceneParam._m0[63u].w, fma(_1824, cbSceneParam._m0[63u].z, fma(_1820, cbSceneParam._m0[63u].y, _1816 * cbSceneParam._m0[63u].x)));
        float _2033 = fma(_1828, cbSceneParam._m0[60u].w, fma(_1824, cbSceneParam._m0[60u].z, fma(_1820, cbSceneParam._m0[60u].y, _1816 * cbSceneParam._m0[60u].x))) / _2032;
        float _2034 = fma(_1828, cbSceneParam._m0[61u].w, fma(_1824, cbSceneParam._m0[61u].z, fma(_1820, cbSceneParam._m0[61u].y, _1816 * cbSceneParam._m0[61u].x))) / _2032;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2033 >= cbSceneParam._m0[64u].x) && (_2034 >= cbSceneParam._m0[64u].y)) && (_2033 <= cbSceneParam._m0[64u].z)) && (_2034 <= cbSceneParam._m0[64u].w))
        {
            float _2173 = fma(_1828, cbSceneParam._m0[62u].w, fma(_1824, cbSceneParam._m0[62u].z, fma(_1820, cbSceneParam._m0[62u].y, _1816 * cbSceneParam._m0[62u].x))) / _2032;
            float _2177 = isnan(cbSceneParam._m0[41u].w) ? _2173 : (isnan(_2173) ? cbSceneParam._m0[41u].w : max(_2173, cbSceneParam._m0[41u].w));
            float _2220 = (cbSceneParam._m0[33u].x - sqrt(((_1830 * _1830) + (_1829 * _1829)) + (_1831 * _1831))) * cbSceneParam._m0[33u].y;
            float _4343 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
            float _2227 = (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2033, cbSceneParam._m0[33u].w + _2034), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2033, _2034 - cbSceneParam._m0[33u].z), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2033 - cbSceneParam._m0[33u].z, _2034 - cbSceneParam._m0[33u].w), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2033 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2034), _2177), 0.0)).x), vec4(0.25)));
            float _2231 = 1.0 - (_2227 * cbSceneParam._m0[34u].x);
            float _2232 = 1.0 - (_2227 * cbSceneParam._m0[34u].y);
            float _2233 = 1.0 - (_2227 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2233) ? _1980 : (isnan(_1980) ? _2233 : min(_1980, _2233));
            frontier_phi_37_36_ladder_1 = isnan(_2232) ? _1979 : (isnan(_1979) ? _2232 : min(_1979, _2232));
            frontier_phi_37_36_ladder_2 = isnan(_2231) ? _1978 : (isnan(_1978) ? _2231 : min(_1978, _2231));
        }
        else
        {
            frontier_phi_37_36_ladder = _1980;
            frontier_phi_37_36_ladder_1 = _1979;
            frontier_phi_37_36_ladder_2 = _1978;
        }
        _2044 = frontier_phi_37_36_ladder_2;
        _2046 = frontier_phi_37_36_ladder_1;
        _2048 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2044 = _1978;
        _2046 = _1979;
        _2048 = _1980;
    }
    uvec4 _2053 = floatBitsToUint(cbInstanceData._m0[_258 + 5u]);
    uint _2055 = _2053.x * 14u;
    uint _2056 = _2055 + 13u;
    float _2063 = _727 + (-1.0);
    float _2068 = (cbLight._m0[_2056].x * _2063) + 1.0;
    float _2069 = (cbLight._m0[_2056].y * _2063) + 1.0;
    float _2070 = (cbLight._m0[_2056].z * _2063) + 1.0;
    float _2071 = (cbLight._m0[_2056].w * _2063) + 1.0;
    uint _2072 = _2055 + 5u;
    float _2078 = isnan(1.0) ? _2069 : (isnan(_2069) ? 1.0 : min(_2069, 1.0));
    uint _2082 = _2055 + 4u;
    float _2092 = isnan(1.0) ? _2068 : (isnan(_2068) ? 1.0 : min(_2068, 1.0));
    uint _2096 = _2055 | 1u;
    float _2107 = dot(vec3(cbLight._m0[_2055].xyz), vec3(_562, _563, _564));
    float _2110 = dot(vec3(cbLight._m0[_2096].xyz), vec3(_562, _563, _564));
    float _4379 = isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0));
    float _4390 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0));
    float _2115 = (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * 0.3183098733425140380859375;
    float _2117 = (isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * 0.3183098733425140380859375;
    float _2124 = ((cbLight._m0[_2072].x * _2078) * _2117) + (((cbLight._m0[_2082].x * _2044) * _2092) * _2115);
    float _2125 = ((_2078 * cbLight._m0[_2072].y) * _2117) + (((cbLight._m0[_2082].y * _2046) * _2092) * _2115);
    float _2126 = ((_2078 * cbLight._m0[_2072].z) * _2117) + (((cbLight._m0[_2082].z * _2048) * _2092) * _2115);
    uvec4 _2130 = floatBitsToUint(cbLight._m0[_2055 + 12u]);
    bool _2132 = _2130.x == 0u;
    float _2234;
    float _2236;
    float _2238;
    if (_2132)
    {
        _2234 = _2124;
        _2236 = _2125;
        _2238 = _2126;
    }
    else
    {
        uint _2242 = _2055 + 6u;
        float _2258 = (dot(vec3(cbLight._m0[_2055 + 2u].xyz), vec3(_562, _563, _564)) * 0.5) + 0.5;
        float _2259 = _2258 * _2258;
        float _4401 = isnan(0.0) ? _2259 : (isnan(_2259) ? 0.0 : max(_2259, 0.0));
        float _2260 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _2261 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
        _2234 = (((cbLight._m0[_2242].x * 0.3183098733425140380859375) * _2260) * _2261) + _2124;
        _2236 = (((cbLight._m0[_2242].y * 0.3183098733425140380859375) * _2260) * _2261) + _2125;
        _2238 = (((cbLight._m0[_2242].z * 0.3183098733425140380859375) * _2260) * _2261) + _2126;
    }
    bool _2241 = _2130.y == 0u;
    float _2296;
    float _2298;
    float _2300;
    if (_2241)
    {
        _2296 = _2234;
        _2298 = _2236;
        _2300 = _2238;
    }
    else
    {
        uint _2458 = _2055 + 7u;
        float _2474 = (dot(vec3(cbLight._m0[_2055 + 3u].xyz), vec3(_562, _563, _564)) * 0.5) + 0.5;
        float _2475 = _2474 * _2474;
        float _4417 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
        float _2476 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
        float _2477 = isnan(1.0) ? _2071 : (isnan(_2071) ? 1.0 : min(_2071, 1.0));
        _2296 = (((cbLight._m0[_2458].x * 0.3183098733425140380859375) * _2476) * _2477) + _2234;
        _2298 = (((cbLight._m0[_2458].y * 0.3183098733425140380859375) * _2476) * _2477) + _2236;
        _2300 = (((cbLight._m0[_2458].z * 0.3183098733425140380859375) * _2476) * _2477) + _2238;
    }
    uint _2303 = _2055 + 8u;
    float _2316 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2055].w)) * _565) * 0.949999988079071044921875);
    float _2317 = _2316 * _2316;
    float _2318 = cbLight._m0[_2055].x + _641;
    float _2319 = cbLight._m0[_2055].y + _642;
    float _2320 = cbLight._m0[_2055].z + _643;
    float _2324 = inversesqrt(dot(vec3(_2318, _2319, _2320), vec3(_2318, _2319, _2320)));
    float _2325 = _2324 * _2318;
    float _2326 = _2324 * _2319;
    float _2327 = _2324 * _2320;
    float _2328 = dot(vec3(_562, _563, _564), vec3(cbLight._m0[_2055].xyz));
    float _4433 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
    float _2331 = isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0));
    float _4444 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _2332 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
    float _2333 = dot(vec3(_562, _563, _564), vec3(_2325, _2326, _2327));
    float _4455 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
    float _2336 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
    float _2337 = dot(vec3(cbLight._m0[_2055].xyz), vec3(_2325, _2326, _2327));
    float _4466 = isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0));
    float _2341 = _2317 * _2317;
    float _2345 = ((_2336 * _2336) * (_2341 + (-1.0))) + 1.0;
    float _2356 = (exp2(log2(1.0 - (isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2357 = 1.0 - _2317;
    float _2368 = (0.5 / (((_2332 * ((_2331 * _2357) + _2317)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2357) + _2317) * _2331))) * _2331;
    float _4477 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2370 = (isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0))) * (_2341 / ((_2345 * _2345) * 3.141590118408203125));
    uint _2384 = _2055 + 9u;
    float _2395 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2096].w)) * _565) * 0.949999988079071044921875);
    float _2396 = _2395 * _2395;
    float _2397 = cbLight._m0[_2096].x + _641;
    float _2398 = cbLight._m0[_2096].y + _642;
    float _2399 = cbLight._m0[_2096].z + _643;
    float _2403 = inversesqrt(dot(vec3(_2397, _2398, _2399), vec3(_2397, _2398, _2399)));
    float _2404 = _2403 * _2397;
    float _2405 = _2403 * _2398;
    float _2406 = _2403 * _2399;
    float _2407 = dot(vec3(_562, _563, _564), vec3(cbLight._m0[_2096].xyz));
    float _4488 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _2410 = isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0));
    float _2411 = dot(vec3(_562, _563, _564), vec3(_2404, _2405, _2406));
    float _4499 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2414 = isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0));
    float _2415 = dot(vec3(cbLight._m0[_2096].xyz), vec3(_2404, _2405, _2406));
    float _4510 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
    float _2419 = _2396 * _2396;
    float _2423 = ((_2414 * _2414) * (_2419 + (-1.0))) + 1.0;
    float _2432 = (exp2(log2(1.0 - (isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2433 = 1.0 - _2396;
    float _2443 = (0.5 / (((_2332 * ((_2410 * _2433) + _2396)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2433) + _2396) * _2410))) * _2410;
    float _4521 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2445 = (isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0))) * (_2419 / ((_2423 * _2423) * 3.141590118408203125));
    float _2455 = (((_2432 * cbLight._m0[_2384].x) * _2445) * _2078) + ((((cbLight._m0[_2303].x * _2044) * _2356) * _2370) * _2092);
    float _2456 = (((_2432 * cbLight._m0[_2384].y) * _2445) * _2078) + ((((cbLight._m0[_2303].y * _2046) * _2356) * _2370) * _2092);
    float _2457 = (((_2432 * cbLight._m0[_2384].z) * _2445) * _2078) + ((((cbLight._m0[_2303].z * _2048) * _2356) * _2370) * _2092);
    float _2513;
    float _2515;
    float _2517;
    if (_2132)
    {
        _2513 = _2455;
        _2515 = _2456;
        _2517 = _2457;
    }
    else
    {
        uint _2519 = _2055 + 2u;
        uint _2523 = _2055 + 10u;
        float _2537 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2519].w)) * _565) * 0.949999988079071044921875);
        float _2538 = _2537 * _2537;
        float _2539 = cbLight._m0[_2519].x + _641;
        float _2540 = cbLight._m0[_2519].y + _642;
        float _2541 = cbLight._m0[_2519].z + _643;
        float _2545 = inversesqrt(dot(vec3(_2539, _2540, _2541), vec3(_2539, _2540, _2541)));
        float _2546 = _2545 * _2539;
        float _2547 = _2545 * _2540;
        float _2548 = _2545 * _2541;
        float _2549 = dot(vec3(_562, _563, _564), vec3(cbLight._m0[_2519].xyz));
        float _4532 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
        float _2552 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
        float _2553 = dot(vec3(_562, _563, _564), vec3(_2546, _2547, _2548));
        float _4543 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2556 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
        float _2557 = dot(vec3(cbLight._m0[_2519].xyz), vec3(_2546, _2547, _2548));
        float _4554 = isnan(0.0) ? _2557 : (isnan(_2557) ? 0.0 : max(_2557, 0.0));
        float _2561 = _2538 * _2538;
        float _2565 = ((_2556 * _2556) * (_2561 + (-1.0))) + 1.0;
        float _2574 = (exp2(log2(1.0 - (isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2575 = 1.0 - _2538;
        float _2585 = (0.5 / (((_2332 * ((_2552 * _2575) + _2538)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2575) + _2538) * _2552))) * _2552;
        float _4565 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2587 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * (_2561 / ((_2565 * _2565) * 3.141590118408203125));
        float _2588 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
        _2513 = (((_2574 * cbLight._m0[_2523].x) * _2587) * _2588) + _2455;
        _2515 = (((_2574 * cbLight._m0[_2523].y) * _2587) * _2588) + _2456;
        _2517 = (((_2574 * cbLight._m0[_2523].z) * _2587) * _2588) + _2457;
    }
    float _2619;
    float _2621;
    float _2623;
    if (_2241)
    {
        _2619 = _2513;
        _2621 = _2515;
        _2623 = _2517;
    }
    else
    {
        uint _2630 = _2055 + 3u;
        uint _2634 = _2055 + 11u;
        float _2648 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2630].w)) * _565) * 0.949999988079071044921875);
        float _2649 = _2648 * _2648;
        float _2650 = cbLight._m0[_2630].x + _641;
        float _2651 = cbLight._m0[_2630].y + _642;
        float _2652 = cbLight._m0[_2630].z + _643;
        float _2656 = inversesqrt(dot(vec3(_2650, _2651, _2652), vec3(_2650, _2651, _2652)));
        float _2657 = _2656 * _2650;
        float _2658 = _2656 * _2651;
        float _2659 = _2656 * _2652;
        float _2660 = dot(vec3(_562, _563, _564), vec3(cbLight._m0[_2630].xyz));
        float _4581 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
        float _2663 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2664 = dot(vec3(_562, _563, _564), vec3(_2657, _2658, _2659));
        float _4592 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
        float _2667 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2668 = dot(vec3(cbLight._m0[_2630].xyz), vec3(_2657, _2658, _2659));
        float _4603 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
        float _2672 = _2649 * _2649;
        float _2676 = ((_2667 * _2667) * (_2672 + (-1.0))) + 1.0;
        float _2685 = (exp2(log2(1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2686 = 1.0 - _2649;
        float _2696 = (0.5 / (((_2332 * ((_2663 * _2686) + _2649)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2686) + _2649) * _2663))) * _2663;
        float _4614 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0));
        float _2698 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_2672 / ((_2676 * _2676) * 3.141590118408203125));
        float _2699 = isnan(1.0) ? _2071 : (isnan(_2071) ? 1.0 : min(_2071, 1.0));
        _2619 = (((_2685 * cbLight._m0[_2634].x) * _2698) * _2699) + _2513;
        _2621 = (((_2685 * cbLight._m0[_2634].y) * _2698) * _2699) + _2515;
        _2623 = (((_2685 * cbLight._m0[_2634].z) * _2698) * _2699) + _2517;
    }
    float _2765;
    float _2767;
    float _2769;
    float _2771;
    float _2773;
    float _2775;
    if (_2053.y == 0u)
    {
        uvec4 _2720 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2721 = _2720.x;
        uint _2732 = uint((float(_2720.y) * floor(float(uint(cbSceneParam._m0[85u].y * _663) / _2721))) + floor(float(uint(cbSceneParam._m0[85u].x * _662) / _2721)));
        float _2742 = (log2(_1831 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2743 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        uint _2746 = uint(isnan(14.0) ? _2743 : (isnan(_2743) ? 14.0 : min(_2743, 14.0)));
        uvec4 _2751 = texelFetch(g_lightClusterGridBuffer, int(((_2746 << 2u) + (_2732 << 6u)) >> 2u));
        uint _2752 = _2751.x;
        uint _2753 = _2720.z;
        float _2832;
        float _2834;
        float _2836;
        float _2838;
        float _2840;
        float _2842;
        if (((((1u << ((_2753 >> 4u) & 15u)) + 4294967295u) & _2752) == 0u) || ((_2753 & 240u) == 0u))
        {
            _2832 = 0.0;
            _2834 = 0.0;
            _2836 = 0.0;
            _2838 = 0.0;
            _2840 = 0.0;
            _2842 = 0.0;
        }
        else
        {
            float _2833;
            float _2835;
            float _2837;
            float _2839;
            float _2841;
            float _2843;
            float _2985 = 0.0;
            float _2986 = 0.0;
            float _2987 = 0.0;
            float _2988 = 0.0;
            float _2989 = 0.0;
            float _2990 = 0.0;
            uint _2991 = 0u;
            uint _3000;
            bool _3001;
            for (;;)
            {
                _3000 = texelFetch(g_lightClassification, int((((_2746 << 5u) + (_2732 << 9u)) + (_2991 << 2u)) >> 2u)).x;
                _3001 = _3000 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3001)
                {
                    frontier_phi_71_pred = _2990;
                    frontier_phi_71_pred_1 = _2989;
                    frontier_phi_71_pred_2 = _2988;
                    frontier_phi_71_pred_3 = _2987;
                    frontier_phi_71_pred_4 = _2986;
                    frontier_phi_71_pred_5 = _2985;
                }
                else
                {
                    float _3130;
                    float _3131;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    uint _3136;
                    _3130 = _2985;
                    _3131 = _2986;
                    _3132 = _2987;
                    _3133 = _2988;
                    _3134 = _2989;
                    _3135 = _2990;
                    _3136 = _3000;
                    float _3057;
                    float _3058;
                    float _3059;
                    float _3060;
                    float _3061;
                    float _3062;
                    for (;;)
                    {
                        uint _3140 = uint(findLSB(_3136)) + (_2991 << 5u);
                        uint _3137 = (_3136 + 4294967295u) & _3136;
                        uint _3142 = _3140 * 48u;
                        vec4 _3156 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3142)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 3u)).x));
                        uint _3162 = (_3140 * 48u) + 4u;
                        vec4 _3175 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3162)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 3u)).x));
                        uint _3181 = (_3140 * 48u) + 8u;
                        vec3 _3192 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3181)).x, texelFetch(g_PointLightRenderingBuffer, int(_3181 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3181 + 2u)).x));
                        float _3196 = _3156.x - _1829;
                        float _3197 = _3156.y - _1830;
                        float _3198 = _3156.z - _1831;
                        float _3199 = dot(vec3(_3196, _3197, _3198), vec3(_3196, _3197, _3198));
                        float _3202 = inversesqrt(_3199);
                        float _3203 = _3202 * _3196;
                        float _3204 = _3202 * _3197;
                        float _3205 = _3202 * _3198;
                        float _3206 = dot(vec3(_683, _686, _689), vec3(_3203, _3204, _3205));
                        float _3211 = 1.0 - (_3199 * _3156.w);
                        float _4640 = isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0));
                        float _3212 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
                        float _3213 = sqrt(_3199) * _3175.w;
                        float _3216 = 1.39999997615814208984375 / (_3213 + 1.39999997615814208984375);
                        float _3217 = _3216 * _3216;
                        float _3220 = ((1.0 - _3217) * _3206) + _3217;
                        float _3223 = _3213 * _3213;
                        float _3227 = ((isnan(0.0) ? _3220 : (isnan(_3220) ? 0.0 : max(_3220, 0.0))) * _3212) / ((_3223 * 0.699999988079071044921875) + 1.0);
                        float _3231 = (-0.0) - _1829;
                        float _3232 = (-0.0) - _1830;
                        float _3233 = (-0.0) - _1831;
                        float _3237 = inversesqrt(dot(vec3(_3231, _3232, _3233), vec3(_3231, _3232, _3233)));
                        float _3238 = _3237 * _3231;
                        float _3239 = _3237 * _3232;
                        float _3240 = _3237 * _3233;
                        float _3247 = exp2(log2(1.0 / ((_3223 * 3.5) + 5.0)) * 0.25);
                        float _3248 = 1.0 - _743;
                        float _3255 = sqrt(1.0 - ((1.0 - (_3248 * _3248)) * (1.0 - (_3247 * _3247))));
                        float _3256 = _3255 * _3255;
                        float _3257 = _3256 * _3256;
                        float _3258 = _3238 + _3203;
                        float _3259 = _3239 + _3204;
                        float _3260 = _3240 + _3205;
                        float _3264 = inversesqrt(dot(vec3(_3258, _3259, _3260), vec3(_3258, _3259, _3260)));
                        float _3268 = dot(vec3(_683, _686, _689), vec3(_3238, _3239, _3240));
                        float _4656 = isnan(0.0) ? _3268 : (isnan(_3268) ? 0.0 : max(_3268, 0.0));
                        float _3271 = isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0));
                        float _3272 = dot(vec3(_683, _686, _689), vec3(_3264 * _3258, _3264 * _3259, _3264 * _3260));
                        float _4667 = isnan(0.0) ? _3272 : (isnan(_3272) ? 0.0 : max(_3272, 0.0));
                        float _3275 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
                        float _3279 = ((_3275 * _3275) * (_3257 + (-1.0))) + 1.0;
                        float _3280 = _3216 * _3256;
                        float _3281 = _3280 * _3280;
                        float _3284 = ((1.0 - _3281) * _3206) + _3281;
                        float _4678 = isnan(0.0) ? _3284 : (isnan(_3284) ? 0.0 : max(_3284, 0.0));
                        float _3285 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                        float _3286 = 1.0 - _3256;
                        float _3296 = (0.5 / (((_3285 * ((_3271 * _3286) + _3256)) + 9.9999999392252902907785028219223e-09) + (((_3285 * _3286) + _3256) * _3271))) * _3285;
                        float _4689 = isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0));
                        float _3307 = (((_3257 * 3.1415927410125732421875) * (isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0)))) / ((_3279 * _3279) * ((_3223 * 2.1991131305694580078125) + 3.141590118408203125))) * _3212;
                        _3060 = (_3227 * _3175.x) + _3133;
                        _3061 = (_3227 * _3175.y) + _3134;
                        _3062 = (_3227 * _3175.z) + _3135;
                        _3057 = (_3307 * _3192.x) + _3130;
                        _3058 = (_3307 * _3192.y) + _3131;
                        _3059 = (_3307 * _3192.z) + _3132;
                        if (_3137 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3130 = _3057;
                            _3131 = _3058;
                            _3132 = _3059;
                            _3133 = _3060;
                            _3134 = _3061;
                            _3135 = _3062;
                            _3136 = _3137;
                        }
                    }
                    frontier_phi_71_pred = _3062;
                    frontier_phi_71_pred_1 = _3061;
                    frontier_phi_71_pred_2 = _3060;
                    frontier_phi_71_pred_3 = _3059;
                    frontier_phi_71_pred_4 = _3058;
                    frontier_phi_71_pred_5 = _3057;
                }
                _2843 = frontier_phi_71_pred;
                _2841 = frontier_phi_71_pred_1;
                _2839 = frontier_phi_71_pred_2;
                _2837 = frontier_phi_71_pred_3;
                _2835 = frontier_phi_71_pred_4;
                _2833 = frontier_phi_71_pred_5;
                uint _2992 = _2991 + 1u;
                if (_2992 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2985 = _2833;
                    _2986 = _2835;
                    _2987 = _2837;
                    _2988 = _2839;
                    _2989 = _2841;
                    _2990 = _2843;
                    _2991 = _2992;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2832 = _2833;
            _2834 = _2835;
            _2836 = _2837;
            _2838 = _2839;
            _2840 = _2841;
            _2842 = _2843;
        }
        uvec4 _2846 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2847 = _2846.z;
        uint _2849 = (_2847 >> 8u) & 15u;
        float _2953;
        float _2955;
        float _2957;
        float _2959;
        float _2961;
        float _2963;
        if (((4294967295u << _2849) & _2752) == 0u)
        {
            _2953 = _2832;
            _2955 = _2834;
            _2957 = _2836;
            _2959 = _2838;
            _2961 = _2840;
            _2963 = _2842;
        }
        else
        {
            float _2978 = inversesqrt(dot(vec3(_1829, _1830, _1831), vec3(_1829, _1830, _1831)));
            float _2979 = _2978 * _1829;
            float _2980 = _2978 * _1830;
            float _2981 = _2978 * _1831;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2849 < ((_2847 >> 12u) & 15u))
            {
                float _2954;
                float _2956;
                float _2958;
                float _2960;
                float _2962;
                float _2964;
                float _3113 = _2832;
                float _3114 = _2834;
                float _3115 = _2836;
                float _3116 = _2838;
                float _3117 = _2840;
                float _3118 = _2842;
                uint _3119 = _2849;
                uint _3128;
                bool _3129;
                for (;;)
                {
                    _3128 = texelFetch(g_lightClassification, int((((_2746 << 5u) + (_2732 << 9u)) + (_3119 << 2u)) >> 2u)).x;
                    _3129 = _3128 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3129)
                    {
                        frontier_phi_82_pred = _3118;
                        frontier_phi_82_pred_1 = _3117;
                        frontier_phi_82_pred_2 = _3116;
                        frontier_phi_82_pred_3 = _3115;
                        frontier_phi_82_pred_4 = _3114;
                        frontier_phi_82_pred_5 = _3113;
                    }
                    else
                    {
                        float _3321;
                        float _3322;
                        float _3323;
                        float _3324;
                        float _3325;
                        float _3326;
                        float _3614;
                        float _3615;
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3334 = _3113;
                        float _3335 = _3114;
                        float _3336 = _3115;
                        float _3337 = _3116;
                        float _3338 = _3117;
                        float _3339 = _3118;
                        uint _3340 = _3128;
                        uint _3341;
                        vec4 _3366;
                        float _3367;
                        vec4 _3382;
                        vec3 _3394;
                        vec4 _3409;
                        vec4 _3424;
                        float _3470;
                        bool _3471;
                        for (;;)
                        {
                            uint _3351 = ((_3119 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3340));
                            _3341 = (_3340 + 4294967295u) & _3340;
                            uint _3353 = _3351 * 40u;
                            _3366 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3353)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3353 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3353 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3353 + 3u)).x));
                            _3367 = _3366.w;
                            uint _3369 = (_3351 * 40u) + 4u;
                            _3382 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3369)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3369 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3369 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3369 + 3u)).x));
                            uint _3384 = (_3351 * 40u) + 8u;
                            _3394 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3384)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 2u)).x));
                            uint _3396 = (_3351 * 40u) + 16u;
                            _3409 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3396)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 3u)).x));
                            uint _3411 = (_3351 * 40u) + 20u;
                            _3424 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3411)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 3u)).x));
                            uint _3426 = (_3351 * 40u) + 24u;
                            vec4 _3439 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3426)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 3u)).x));
                            uint _3445 = (_3351 * 40u) + 28u;
                            vec4 _3458 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3445)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 3u)).x));
                            _3470 = fma(_1831, _3458.z, fma(_1830, _3458.y, _3458.x * _1829)) + _3458.w;
                            _3471 = !((fma(_1831, _3439.z, fma(_1830, _3439.y, _3439.x * _1829)) + _3439.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3471)
                            {
                                float _3498 = _3366.x - _1829;
                                float _3499 = _3366.y - _1830;
                                float _3500 = _3366.z - _1831;
                                float _3501 = dot(vec3(_3498, _3499, _3500), vec3(_3498, _3499, _3500));
                                float _3504 = inversesqrt(_3501);
                                float _3505 = _3504 * _3498;
                                float _3506 = _3504 * _3499;
                                float _3507 = _3504 * _3500;
                                float _3511 = 1.0 - (_3501 / (_3367 * _3367));
                                float _4700 = isnan(0.0) ? _3511 : (isnan(_3511) ? 0.0 : max(_3511, 0.0));
                                float _3512 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                                float _3516 = sqrt(_3501) * _3382.w;
                                float _3518 = 1.39999997615814208984375 / (_3516 + 1.39999997615814208984375);
                                float _3519 = _3518 * _3518;
                                float _3522 = ((1.0 - _3519) * dot(vec3(_3505, _3506, _3507), vec3(_683, _686, _689))) + _3519;
                                float _3525 = _3516 * _3516;
                                float _3529 = (fma(_1831, _3409.z, fma(_1830, _3409.y, _3409.x * _1829)) + _3409.w) / _3470;
                                float _3530 = (fma(_1831, _3424.z, fma(_1830, _3424.y, _3424.x * _1829)) + _3424.w) / _3470;
                                float _3534 = 1.0 - dot(vec2(_3529, _3530), vec2(_3529, _3530));
                                float _4716 = isnan(0.0) ? _3534 : (isnan(_3534) ? 0.0 : max(_3534, 0.0));
                                float _3535 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                                float _3536 = _3535 * (((isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0))) * _3512) / ((_3525 * 0.699999988079071044921875) + 1.0));
                                float _3548 = exp2(log2(1.0 / ((_3525 * 3.5) + 5.0)) * 0.25);
                                float _3549 = 1.0 - _743;
                                float _3556 = sqrt(1.0 - ((1.0 - (_3549 * _3549)) * (1.0 - (_3548 * _3548))));
                                float _3557 = _3556 * _3556;
                                float _3558 = _3557 * _3557;
                                float _3559 = _3505 - _2979;
                                float _3560 = _3506 - _2980;
                                float _3561 = _3507 - _2981;
                                float _3565 = inversesqrt(dot(vec3(_3559, _3560, _3561), vec3(_3559, _3560, _3561)));
                                float _3569 = dot(vec3(_683, _686, _689), vec3((-0.0) - _2979, (-0.0) - _2980, (-0.0) - _2981));
                                float _4727 = isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0));
                                float _3572 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                                float _3573 = dot(vec3(_683, _686, _689), vec3(_3565 * _3559, _3565 * _3560, _3565 * _3561));
                                float _4738 = isnan(0.0) ? _3573 : (isnan(_3573) ? 0.0 : max(_3573, 0.0));
                                float _3576 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                                float _3580 = ((_3576 * _3576) * (_3558 + (-1.0))) + 1.0;
                                float _3581 = _3518 * _3557;
                                float _3582 = _3581 * _3581;
                                float _3588 = ((1.0 - _3582) * dot(vec3(_683, _686, _689), vec3(_3505, _3506, _3507))) + _3582;
                                float _4749 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                                float _3589 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                                float _3590 = 1.0 - _3557;
                                float _3600 = (0.5 / (((_3589 * ((_3572 * _3590) + _3557)) + 9.9999999392252902907785028219223e-09) + (((_3589 * _3590) + _3557) * _3572))) * _3589;
                                float _4760 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                                float _3610 = (_3535 * _3512) * (((_3558 * 3.1415927410125732421875) * (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0)))) / ((_3580 * _3580) * ((_3525 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3536 * _3382.z;
                                frontier_phi_88_pred_1 = _3536 * _3382.y;
                                frontier_phi_88_pred_2 = _3536 * _3382.x;
                                frontier_phi_88_pred_3 = _3610 * _3394.z;
                                frontier_phi_88_pred_4 = _3610 * _3394.y;
                                frontier_phi_88_pred_5 = _3610 * _3394.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3619 = frontier_phi_88_pred;
                            _3618 = frontier_phi_88_pred_1;
                            _3617 = frontier_phi_88_pred_2;
                            _3616 = frontier_phi_88_pred_3;
                            _3615 = frontier_phi_88_pred_4;
                            _3614 = frontier_phi_88_pred_5;
                            _3324 = _3617 + _3337;
                            _3325 = _3618 + _3338;
                            _3326 = _3619 + _3339;
                            _3321 = _3614 + _3334;
                            _3322 = _3615 + _3335;
                            _3323 = _3616 + _3336;
                            if (_3341 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3334 = _3321;
                                _3335 = _3322;
                                _3336 = _3323;
                                _3337 = _3324;
                                _3338 = _3325;
                                _3339 = _3326;
                                _3340 = _3341;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3326;
                        frontier_phi_82_pred_1 = _3325;
                        frontier_phi_82_pred_2 = _3324;
                        frontier_phi_82_pred_3 = _3323;
                        frontier_phi_82_pred_4 = _3322;
                        frontier_phi_82_pred_5 = _3321;
                    }
                    _2964 = frontier_phi_82_pred;
                    _2962 = frontier_phi_82_pred_1;
                    _2960 = frontier_phi_82_pred_2;
                    _2958 = frontier_phi_82_pred_3;
                    _2956 = frontier_phi_82_pred_4;
                    _2954 = frontier_phi_82_pred_5;
                    uint _3120 = _3119 + 1u;
                    if (_3120 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3113 = _2954;
                        _3114 = _2956;
                        _3115 = _2958;
                        _3116 = _2960;
                        _3117 = _2962;
                        _3118 = _2964;
                        _3119 = _3120;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _2960;
                frontier_phi_63_64_ladder_1 = _2964;
                frontier_phi_63_64_ladder_2 = _2962;
                frontier_phi_63_64_ladder_3 = _2958;
                frontier_phi_63_64_ladder_4 = _2956;
                frontier_phi_63_64_ladder_5 = _2954;
            }
            else
            {
                frontier_phi_63_64_ladder = _2838;
                frontier_phi_63_64_ladder_1 = _2842;
                frontier_phi_63_64_ladder_2 = _2840;
                frontier_phi_63_64_ladder_3 = _2836;
                frontier_phi_63_64_ladder_4 = _2834;
                frontier_phi_63_64_ladder_5 = _2832;
            }
            _2953 = frontier_phi_63_64_ladder_5;
            _2955 = frontier_phi_63_64_ladder_4;
            _2957 = frontier_phi_63_64_ladder_3;
            _2959 = frontier_phi_63_64_ladder;
            _2961 = frontier_phi_63_64_ladder_2;
            _2963 = frontier_phi_63_64_ladder_1;
        }
        float _2968 = isnan(1.0) ? _727 : (isnan(_727) ? 1.0 : min(_727, 1.0));
        _2765 = (_2968 * _2959) + _2296;
        _2767 = (_2968 * _2961) + _2298;
        _2769 = (_2968 * _2963) + _2300;
        _2771 = ((_2953 * 0.039999999105930328369140625) * _2968) + _2619;
        _2773 = ((_2955 * 0.039999999105930328369140625) * _2968) + _2621;
        _2775 = ((_2957 * 0.039999999105930328369140625) * _2968) + _2623;
    }
    else
    {
        _2765 = _2296;
        _2767 = _2298;
        _2769 = _2300;
        _2771 = _2619;
        _2773 = _2621;
        _2775 = _2623;
    }
    float _4776 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _4787 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _4798 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    float _2792 = ((isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0))) * (_2765 + ((isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0))) * _727))) + ((_2771 + ((isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0))) * _1564)) * cbPerFrame._m0[3u].x);
    float _2793 = ((isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0))) * (_2767 + ((isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0))) * _727))) + ((_2773 + ((isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))) * _1564)) * cbPerFrame._m0[3u].x);
    float _2794 = ((isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0))) * (_2769 + ((isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0))) * _727))) + ((_2775 + ((isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))) * _1564)) * cbPerFrame._m0[3u].x);
    uint _2795 = _258 + 6u;
    float _2803 = _662 / cbSceneParam._m0[86u].x;
    float _2804 = _663 / cbSceneParam._m0[86u].y;
    vec4 _2818 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2803, _2804, (log2((isnan(cbSceneParam._m0[77u].w) ? _583 : (isnan(_583) ? cbSceneParam._m0[77u].w : min(_583, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2820 = _2818.x;
    float _2821 = _2818.y;
    float _2822 = _2818.z;
    float _2823 = _2818.w;
    float _2895;
    float _2897;
    float _2899;
    float _2901;
    if (_583 > cbSceneParam._m0[78u].w)
    {
        float _2857 = isnan(_583) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _583 : min(cbSceneParam._m0[80u].w, _583));
        float _2858 = _2857 / _583;
        float _2869 = _2858 * _634;
        float _2870 = _635 * _2858;
        float _2871 = (-0.0) - _2870;
        float _2873 = _2858 * _636;
        float _2875 = (cbSceneParam._m0[77u].w * _2871) / _2857;
        float _2876 = _2875 + cbSceneParam._m0[79u].w;
        float _2877 = cbSceneParam._m0[79u].w - _2870;
        float _2883 = sqrt(((_2869 * _2869) + (_2870 * _2870)) + (_2873 * _2873));
        float _2886 = (1.0 - (cbSceneParam._m0[77u].w / _2857)) * _2883;
        float _2891 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2893 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3070;
        if (abs((_2871 - _2875) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3070 = ((((_2876 > 0.0) ? exp2(_2891 * _2876) : (2.0 - exp2(_2893 * _2876))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2886;
        }
        else
        {
            float _3014 = 1.0 / cbSceneParam._m0[80u].x;
            float _3015 = isnan(_2877) ? _2876 : (isnan(_2876) ? _2877 : max(_2876, _2877));
            float _3016 = isnan(_2877) ? _2876 : (isnan(_2876) ? _2877 : min(_2876, _2877));
            float _3025 = isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : min(_3015, 0.0));
            float _3026 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : min(_3016, 0.0));
            _3070 = ((abs(_2883 / _2871) * cbSceneParam._m0[80u].y) * ((((_3025 - _3026) * 2.0) - ((exp2(_2891 * (isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0)))) - exp2(_2891 * (isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0))))) * _3014)) - ((exp2(_2893 * _3025) - exp2(_2893 * _3026)) * _3014))) + (_2886 * cbSceneParam._m0[80u].z);
        }
        vec4 _3072 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2803, _2804, 1.0), 0.0);
        float _3081 = exp2((_3070 * (-1.44269502162933349609375)) * (1.0 - _3072.w));
        float _3082 = log2(_3081);
        float _3098 = log2(_2823);
        _2895 = (exp2(_3098 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3082 * cbSceneParam._m0[78u].x)) * _3072.x) / cbSceneParam._m0[78u].x)) + _2820;
        _2897 = (exp2(_3098 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3082 * cbSceneParam._m0[78u].y)) * _3072.y) / cbSceneParam._m0[78u].y)) + _2821;
        _2899 = (exp2(_3098 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3082 * cbSceneParam._m0[78u].z)) * _3072.z) / cbSceneParam._m0[78u].z)) + _2822;
        _2901 = _3081 * _2823;
    }
    else
    {
        _2895 = _2820;
        _2897 = _2821;
        _2899 = _2822;
        _2901 = _2823;
    }
    bool _3108;
    vec4 _2911;
    vec4 _2933;
    float _2935;
    float _2939;
    float _2940;
    float _2941;
    float _2942;
    bool _2952;
    for (;;)
    {
        _2911 = cbMatDynParam._m0[0u];
        float _2913 = roundEven(_2911.y);
        bool _2914 = _2913 == 3.0;
        float _2915 = log2(_2901);
        float _2922 = exp2(_2915 * cbSceneParam._m0[78u].x) * _2792;
        float _2923 = exp2(_2915 * cbSceneParam._m0[78u].y) * _2793;
        float _2924 = exp2(_2915 * cbSceneParam._m0[78u].z) * _2794;
        float _2931 = _650 + (-0.5);
        _2933 = cbMtdParam._m0[1u];
        _2935 = _2933.y * _2931;
        float _2938 = (_2913 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2939 = _2938 * (_2914 ? _2922 : (_2922 + (cbSceneParam._m0[72u].w * _2895)));
        _2940 = _2938 * (_2914 ? _2923 : (_2923 + (cbSceneParam._m0[72u].w * _2897)));
        _2941 = _2938 * (_2914 ? _2924 : (_2924 + (cbSceneParam._m0[72u].w * _2899)));
        _2942 = _2931 * 0.999000012874603271484375;
        _2952 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2952)
        {
            if ((cbInstanceData._m0[_258 + 7u].x + _2942) < 0.5)
            {
                _3108 = true;
                break;
            }
        }
        uint _3049 = _702 + uint(_2911.w);
        if ((cbInstanceData._m0[_3049].w < 1.0) && ((cbInstanceData._m0[_3049].w + _2942) < 0.5))
        {
            _3108 = true;
            break;
        }
        if ((_2935 + 1.0) < _2933.x)
        {
            _3108 = true;
            break;
        }
        _3108 = false;
        break;
    }
    float _3312;
    if (_3108)
    {
        discard_state = true;
        _3312 = 0.0;
    }
    else
    {
        _3312 = cbInstanceData._m0[_2795].w;
    }
    SV_Target.x = _2939;
    SV_Target.y = _2940;
    SV_Target.z = _2941;
    SV_Target.w = _3312;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2795].w;
    discard_exit();
}


