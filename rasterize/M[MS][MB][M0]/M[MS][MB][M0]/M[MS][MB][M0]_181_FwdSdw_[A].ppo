#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1265;
float _3907;
float _3908;
float _3909;
float _3910;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _248 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _248 + 1u;
    uint _258 = _248 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _289 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _289.x * cbMtdParam._m0[11u].x;
    float _296 = _289.y * cbMtdParam._m0[11u].y;
    float _297 = _289.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _355 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _357 = _355.x;
    float _367 = dot(vec4(_357, _355.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _384 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_357 - _367) * cbMtdParam._m0[24u].x) + _367) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3919 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _385 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _392 = (_385 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295;
    float _393 = (_385 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296;
    float _394 = (_385 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297;
    vec4 _411 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _268) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _269) + cbTextureTilingScale._m0[3u].w));
    vec4 _431 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _433 = _431.x;
    float _443 = dot(vec4(_433, _431.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _457 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_433 - _443) * cbMtdParam._m0[24u].x) + _443) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3930 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _458 = isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0));
    float _465 = (_458 * ((_411.x * cbMtdParam._m0[13u].x) - _392)) + _392;
    float _466 = (_458 * ((_411.y * cbMtdParam._m0[13u].y) - _393)) + _393;
    float _467 = (_458 * ((_411.z * cbMtdParam._m0[13u].z) - _394)) + _394;
    vec4 _484 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _268) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _269) + cbTextureTilingScale._m0[20u].w));
    vec4 _507 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _524 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _526 = _524.x;
    float _527 = _524.y;
    float _528 = _524.z;
    float _535 = ((_507.x - _526) * _385) + _526;
    float _536 = ((_507.y - _527) * _385) + _527;
    float _537 = ((_507.z - _528) * _385) + _528;
    vec4 _549 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _268) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _269) + cbTextureTilingScale._m0[2u].w));
    float _562 = ((_549.z - _537) * _458) + _537;
    float _565 = ((((_549.x - _535) * _458) + _535) * 2.0) + (-1.0);
    float _566 = ((((_549.y - _536) * _458) + _536) * 2.0) + (-1.0);
    float _567 = dot(vec2(_565, _566), vec2(_565, _566));
    float _3941 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _572 = sqrt(1.0 - (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0))));
    vec4 _585 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _603 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _605 = _603.x;
    float _606 = 1.0 - _605;
    float _619 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_605 - _606) * cbMtdParam._m0[24u].z) + _606) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3952 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _620 = isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0));
    float _627 = (_620 * (cbMtdParam._m0[17u].x - _465)) + _465;
    float _628 = (_620 * (cbMtdParam._m0[17u].y - _466)) + _466;
    float _629 = (_620 * (cbMtdParam._m0[17u].z - _467)) + _467;
    float _634 = (((_484.z - _562) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _562;
    vec4 _647 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _654 = (_647.x * 2.0) + (-1.0);
    float _655 = (_647.y * 2.0) + (-1.0);
    float _656 = dot(vec2(_654, _655), vec2(_654, _655));
    float _3963 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _664 = (_620 * (_647.z - _634)) + _634;
    float _669 = _565 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_484.x * 2.0) + (-1.0)));
    float _670 = _566 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_484.y * 2.0) + (-1.0)));
    float _682 = (((_654 - _669) + (cbMtdParam._m0[21u].x * _669)) * _620) + _669;
    float _683 = (((_655 - _670) + (cbMtdParam._m0[21u].x * _670)) * _620) + _670;
    float _684 = (_620 * (sqrt(1.0 - (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) - _572)) + _572;
    float _689 = cbMtdParam._m0[22u].x + _585.w;
    float _692 = fma(_684, _235 * NORMAL.x, fma(_683, _242 * TANGENT.x, (_228 * _220) * _682));
    float _695 = fma(_684, _235 * NORMAL.y, fma(_683, _242 * TANGENT.y, (_228 * _221) * _682));
    float _698 = fma(_684, _235 * NORMAL.z, fma(_683, _242 * TANGENT.z, (_228 * _222) * _682));
    float _702 = inversesqrt(dot(vec3(_692, _695, _698), vec3(_692, _695, _698)));
    float _703 = _702 * _692;
    float _704 = _702 * _695;
    float _705 = _702 * _698;
    float _3974 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _706 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _3996 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _4007 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _4018 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _724 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _766 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _776 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _766);
    float _777 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _766);
    float _778 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _766);
    float _782 = inversesqrt(dot(vec3(_776, _777, _778), vec3(_776, _777, _778)));
    float _783 = _776 * _782;
    float _784 = _777 * _782;
    float _785 = _778 * _782;
    vec4 _790 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _792 = _790.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _946 = sqrt(((_776 * _776) + (_777 * _777)) + (_778 * _778));
        float _952 = (cbMatDynParam._m0[5u].x * _946) + cbMatDynParam._m0[5u].y;
        float _4029 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _953 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
        float _957 = (cbMatDynParam._m0[5u].z * _946) + cbMatDynParam._m0[5u].w;
        float _4040 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) - _953)) + _953) < ((_792 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _803 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _804 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _822 = fma(_705, cbSceneParam._m0[5u].z, fma(_704, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _703));
    float _825 = fma(_705, cbSceneParam._m0[6u].z, fma(_704, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _703));
    float _828 = fma(_705, cbSceneParam._m0[7u].z, fma(_704, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _703));
    uint _841 = _248 + 9u;
    uint _842 = _841 + uint(cbMatDynParam._m0[0u].w);
    float _848 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0)))) * cbInstanceData._m0[_842].x;
    float _849 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0)))) * cbInstanceData._m0[_842].y;
    float _850 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0)))) * cbInstanceData._m0[_842].z;
    float _4051 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _851 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
    float _4062 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _852 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
    float _4073 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _853 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    vec4 _862 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _803, cbSceneParam._m0[86u].y * _804));
    float _866 = ((isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * TEXCOORD_5.w) * _862.x;
    float _867 = dot(vec3(_703, _704, _705), vec3(_783, _784, _785));
    float _870 = _867 * 2.0;
    float _874 = (_870 * _703) - _783;
    float _875 = (_870 * _704) - _784;
    float _876 = (_870 * _705) - _785;
    float _880 = abs(dot(vec3(_783, _784, _785), vec3(_703, _704, _705)));
    float _4084 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _882 = sqrt(_706);
    float _895 = exp2((_882 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_882 * 3.0));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _935 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1264;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _989 = fma(_935, cbModelParam._m0[26u].z, fma(_931, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _927));
        float _993 = fma(_935, cbModelParam._m0[27u].z, fma(_931, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _927));
        float _997 = fma(_935, cbModelParam._m0[28u].z, fma(_931, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _927));
        float _1022 = _927 + _703;
        float _1023 = _931 + _704;
        float _1024 = _935 + _705;
        float _1034 = fma(_1024, cbModelParam._m0[26u].z, fma(_1023, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1022)) - _989;
        float _1035 = fma(_1024, cbModelParam._m0[27u].z, fma(_1023, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1022)) - _993;
        float _1036 = fma(_1024, cbModelParam._m0[28u].z, fma(_1023, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1022)) - _997;
        float _1040 = inversesqrt(dot(vec3(_1034, _1035, _1036), vec3(_1034, _1035, _1036)));
        float _1053 = ((_1040 * _1034) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_989 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1054 = ((_1040 * _1035) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_993 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1055 = ((_1040 * _1036) / cbModelParam._m0[34u].z) + ((((((_997 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1058 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1065 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        float _1092 = exp2((_1058.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1058.x + (-0.5));
        float _1094 = _1092 * (_1058.y + (-0.5));
        float _1095 = _1092 * (_1058.z + (-0.5));
        float _1102 = exp2((_1065.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1065.x + (-0.5));
        float _1104 = _1102 * (_1065.y + (-0.5));
        float _1105 = _1102 * (_1065.z + (-0.5));
        float _1112 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1072.x + (-0.5));
        float _1114 = _1112 * (_1072.y + (-0.5));
        float _1115 = _1112 * (_1072.z + (-0.5));
        float _1122 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1079.x + (-0.5));
        float _1124 = _1122 * (_1079.y + (-0.5));
        float _1125 = _1122 * (_1079.z + (-0.5));
        float _1126 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1127 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1128 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1129 = _1093 * 0.5;
        float _1130 = _1103 * 0.5;
        float _1131 = _1113 * 0.5;
        float _1132 = dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131));
        float _1137 = (_1132 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1132);
        float _1146 = (dot(vec3(_703, _704, _705), vec3(_1137 * _1129, _1137 * _1130, _1137 * _1131)) + 1.0) * 0.5;
        float _4110 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1156 = sqrt(((_1130 * _1130) + (_1129 * _1129)) + (_1131 * _1131)) / (_1126 + 9.9999997473787516355514526367188e-06);
        float _4121 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1158 = _1157 * 2.0;
        float _1162 = (1.0 - _1157) / (_1157 + 1.0);
        float _4132 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0));
        float _1172 = ((((1.0 - _1163) * (_1158 + 2.0)) * exp2(log2(isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0))) * (_1158 + 1.0))) + _1163) * _1126;
        float _1173 = _1094 * 0.5;
        float _1174 = _1104 * 0.5;
        float _1175 = _1114 * 0.5;
        float _1176 = dot(vec3(_1173, _1174, _1175), vec3(_1173, _1174, _1175));
        float _1181 = (_1176 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1176);
        float _1189 = (dot(vec3(_703, _704, _705), vec3(_1181 * _1173, _1181 * _1174, _1181 * _1175)) + 1.0) * 0.5;
        float _4143 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1198 = sqrt(((_1174 * _1174) + (_1173 * _1173)) + (_1175 * _1175)) / (_1127 + 9.9999997473787516355514526367188e-06);
        float _4154 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1200 = _1199 * 2.0;
        float _1204 = (1.0 - _1199) / (_1199 + 1.0);
        float _4165 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1214 = ((((1.0 - _1205) * (_1200 + 2.0)) * exp2(log2(isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0))) * (_1200 + 1.0))) + _1205) * _1127;
        float _1215 = _1095 * 0.5;
        float _1216 = _1105 * 0.5;
        float _1217 = _1115 * 0.5;
        float _1218 = dot(vec3(_1215, _1216, _1217), vec3(_1215, _1216, _1217));
        float _1223 = (_1218 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1218);
        float _1231 = (dot(vec3(_703, _704, _705), vec3(_1223 * _1215, _1223 * _1216, _1223 * _1217)) + 1.0) * 0.5;
        float _4176 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1240 = sqrt(((_1216 * _1216) + (_1215 * _1215)) + (_1217 * _1217)) / (_1128 + 9.9999997473787516355514526367188e-06);
        float _4187 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1241 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _1242 = _1241 * 2.0;
        float _1246 = (1.0 - _1241) / (_1241 + 1.0);
        float _4198 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1247 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1256 = ((((1.0 - _1247) * (_1242 + 2.0)) * exp2(log2(isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0))) * (_1242 + 1.0))) + _1247) * _1128;
        _1264 = _1095;
        _1266 = _1094;
        _1267 = _1093;
        _1268 = _1105;
        _1269 = _1104;
        _1270 = _1103;
        _1271 = _1115;
        _1272 = _1114;
        _1273 = _1113;
        _1274 = _1128;
        _1275 = _1127;
        _1276 = _1126;
        _1277 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0)));
        _1278 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0)));
        _1279 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0)));
    }
    else
    {
        _1264 = _1265;
        _1266 = _1265;
        _1267 = _1265;
        _1268 = _1265;
        _1269 = _1265;
        _1270 = _1265;
        _1271 = _1265;
        _1272 = _1265;
        _1273 = _1265;
        _1274 = _1265;
        _1275 = _1265;
        _1276 = _1265;
        _1277 = 0.0;
        _1278 = 0.0;
        _1279 = 0.0;
    }
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1306 = fma(_935, cbModelParam._m0[30u].z, fma(_931, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _927));
        float _1310 = fma(_935, cbModelParam._m0[31u].z, fma(_931, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _927));
        float _1314 = fma(_935, cbModelParam._m0[32u].z, fma(_931, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _927));
        float _1337 = _927 + _703;
        float _1338 = _931 + _704;
        float _1339 = _935 + _705;
        float _1349 = fma(_1339, cbModelParam._m0[30u].z, fma(_1338, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1337)) - _1306;
        float _1350 = fma(_1339, cbModelParam._m0[31u].z, fma(_1338, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1337)) - _1310;
        float _1351 = fma(_1339, cbModelParam._m0[32u].z, fma(_1338, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1337)) - _1314;
        float _1355 = inversesqrt(dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351)));
        float _1368 = ((_1355 * _1349) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1306 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1355 * _1350) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1310 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1370 = ((_1355 * _1351) / cbModelParam._m0[35u].z) + ((((((_1314 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1372 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        float _1405 = exp2((_1372.w + (-0.5)) * 20.0) * 2.0;
        float _1406 = _1405 * (_1372.x + (-0.5));
        float _1407 = _1405 * (_1372.y + (-0.5));
        float _1408 = _1405 * (_1372.z + (-0.5));
        float _1415 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1416 = _1415 * (_1379.x + (-0.5));
        float _1417 = _1415 * (_1379.y + (-0.5));
        float _1418 = _1415 * (_1379.z + (-0.5));
        float _1425 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1426 = _1425 * (_1386.x + (-0.5));
        float _1427 = _1425 * (_1386.y + (-0.5));
        float _1428 = _1425 * (_1386.z + (-0.5));
        float _1435 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1436 = _1435 * (_1393.x + (-0.5));
        float _1437 = _1435 * (_1393.y + (-0.5));
        float _1438 = _1435 * (_1393.z + (-0.5));
        float _1439 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = _1406 * 0.5;
        float _1443 = _1416 * 0.5;
        float _1444 = _1426 * 0.5;
        float _1445 = dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444));
        float _1450 = (_1445 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1445);
        float _1458 = (dot(vec3(_703, _704, _705), vec3(_1450 * _1442, _1450 * _1443, _1450 * _1444)) + 1.0) * 0.5;
        float _4239 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1467 = sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444)) / (_1439 + 9.9999997473787516355514526367188e-06);
        float _4250 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1469 = _1468 * 2.0;
        float _1473 = (1.0 - _1468) / (_1468 + 1.0);
        float _4261 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0));
        float _1483 = ((((1.0 - _1474) * (_1469 + 2.0)) * exp2(log2(isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0))) * (_1469 + 1.0))) + _1474) * _1439;
        float _1484 = _1407 * 0.5;
        float _1485 = _1417 * 0.5;
        float _1486 = _1427 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1500 = (dot(vec3(_703, _704, _705), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4272 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1509 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _4283 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1510 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1511 = _1510 * 2.0;
        float _1515 = (1.0 - _1510) / (_1510 + 1.0);
        float _4294 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
        float _1525 = ((((1.0 - _1516) * (_1511 + 2.0)) * exp2(log2(isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0))) * (_1511 + 1.0))) + _1516) * _1440;
        float _1526 = _1408 * 0.5;
        float _1527 = _1418 * 0.5;
        float _1528 = _1428 * 0.5;
        float _1529 = dot(vec3(_1526, _1527, _1528), vec3(_1526, _1527, _1528));
        float _1534 = (_1529 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1529);
        float _1542 = (dot(vec3(_703, _704, _705), vec3(_1534 * _1526, _1534 * _1527, _1534 * _1528)) + 1.0) * 0.5;
        float _4305 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1551 = sqrt(((_1527 * _1527) + (_1526 * _1526)) + (_1528 * _1528)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4316 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
        float _1553 = _1552 * 2.0;
        float _1557 = (1.0 - _1552) / (_1552 + 1.0);
        float _4327 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1558 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1567 = ((((1.0 - _1558) * (_1553 + 2.0)) * exp2(log2(isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0))) * (_1553 + 1.0))) + _1558) * _1441;
        _1575 = _1408;
        _1576 = _1407;
        _1577 = _1406;
        _1578 = _1418;
        _1579 = _1417;
        _1580 = _1416;
        _1581 = _1428;
        _1582 = _1427;
        _1583 = _1426;
        _1584 = _1441;
        _1585 = _1440;
        _1586 = _1439;
        _1587 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0)));
        _1588 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)));
        _1589 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)));
    }
    else
    {
        _1575 = _1265;
        _1576 = _1265;
        _1577 = _1265;
        _1578 = _1265;
        _1579 = _1265;
        _1580 = _1265;
        _1581 = _1265;
        _1582 = _1265;
        _1583 = _1265;
        _1584 = _1265;
        _1585 = _1265;
        _1586 = _1265;
        _1587 = 0.0;
        _1588 = 0.0;
        _1589 = 0.0;
    }
    float _1599 = (cbModelParam._m0[1u].x * (_1587 - _1277)) + _1277;
    float _1600 = (cbModelParam._m0[1u].x * (_1588 - _1278)) + _1278;
    float _1601 = (cbModelParam._m0[1u].x * (_1589 - _1279)) + _1279;
    float _1622 = fma(_1601, cbSceneParam._m0[89u].z, fma(_1600, cbSceneParam._m0[89u].y, _1599 * cbSceneParam._m0[89u].x));
    float _1625 = fma(_1601, cbSceneParam._m0[90u].z, fma(_1600, cbSceneParam._m0[90u].y, _1599 * cbSceneParam._m0[90u].x));
    float _1628 = fma(_1601, cbSceneParam._m0[91u].z, fma(_1600, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1599));
    float _1643 = _874 * 0.5;
    float _1644 = _875 * 0.5;
    float _1645 = _876 * 0.5;
    float _1646 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1577, _1580, _1583, _1586));
    float _1649 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1576, _1579, _1582, _1585));
    float _1652 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1575, _1578, _1581, _1584));
    float _1686;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1659 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1264, _1268, _1271, _1274));
        float _1663 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1266, _1269, _1272, _1275));
        float _1667 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1267, _1270, _1273, _1276));
        float _1674 = dot(vec4(cbModelParam._m0[39u]), vec4(_1643, _1644, _1645, 1.0));
        _1686 = dot(vec3(isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)), isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1674) ? 0.0 : (isnan(0.0) ? _1674 : max(0.0, _1674))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1686 = 1.0;
    }
    float _1697;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1688 = dot(vec4(cbModelParam._m0[40u]), vec4(_1643, _1644, _1645, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)), isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1701 = (_1697 * cbModelParam._m0[1u].x) + (_1686 * (1.0 - cbModelParam._m0[1u].x));
    float _1711 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _706);
    float _1712 = isnan(_1711) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1711 : min(cbModelParam._m0[25u].z, _1711));
    float _1793;
    float _1795;
    float _1797;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1760 = fma(_935, cbModelParam._m0[13u].z, fma(_931, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _927)) + cbModelParam._m0[13u].w;
        float _1764 = fma(_935, cbModelParam._m0[14u].z, fma(_931, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _927)) + cbModelParam._m0[14u].w;
        float _1768 = fma(_935, cbModelParam._m0[15u].z, fma(_931, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _927)) + cbModelParam._m0[15u].w;
        float _1771 = fma(_876, cbModelParam._m0[13u].z, fma(_875, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _874));
        float _1774 = fma(_876, cbModelParam._m0[14u].z, fma(_875, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _874));
        float _1777 = fma(_876, cbModelParam._m0[15u].z, fma(_875, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _874));
        float _1805;
        if (_1771 > 0.0)
        {
            _1805 = abs((1.0 - _1760) / _1771);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1771 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1760 + 1.0) / _1771);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1805 = frontier_phi_17_15_ladder;
        }
        float _1975;
        if (_1774 > 0.0)
        {
            _1975 = abs((1.0 - _1764) / _1774);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1774 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1764 + 1.0) / _1774);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1975 = frontier_phi_26_22_ladder;
        }
        float _2270;
        if (_1777 > 0.0)
        {
            _2270 = abs((1.0 - _1768) / _1777);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1777 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1768 + 1.0) / _1777);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2270 = frontier_phi_38_33_ladder;
        }
        float _2272 = isnan(_1975) ? _1805 : (isnan(_1805) ? _1975 : min(_1805, _1975));
        float _2273 = isnan(_2270) ? _2272 : (isnan(_2272) ? _2270 : min(_2272, _2270));
        float _2277 = (_2273 * _1771) + _1760;
        float _2278 = (_2273 * _1774) + _1764;
        float _2279 = (_2273 * _1777) + _1768;
        float _2280 = _2273 * 9.9999997473787516355514526367188e-05;
        float _2282 = (-1.0) - _2280;
        float _2284 = _2280 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2279 > _2284) || ((_2279 < _2282) || ((_2278 > _2284) || ((_2278 < _2282) || ((_2277 < _2282) || (_2277 > _2284))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2424 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2279, cbModelParam._m0[9u].z, fma(_2278, cbModelParam._m0[9u].y, _2277 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2279, cbModelParam._m0[10u].z, fma(_2278, cbModelParam._m0[10u].y, _2277 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2279, cbModelParam._m0[11u].z, fma(_2278, cbModelParam._m0[11u].y, _2277 * cbModelParam._m0[11u].x))), _1712);
            frontier_phi_16_38_ladder = _2424.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2424.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2424.x * cbModelParam._m0[1u].y;
        }
        _1793 = frontier_phi_16_38_ladder_2;
        _1795 = frontier_phi_16_38_ladder_1;
        _1797 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1781 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_874, _875, _876), _1712);
        _1793 = _1781.x * cbModelParam._m0[1u].y;
        _1795 = _1781.y * cbModelParam._m0[1u].y;
        _1797 = _1781.z * cbModelParam._m0[1u].y;
    }
    float _1801 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _706);
    float _1802 = isnan(_1801) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1801 : min(cbModelParam._m0[25u].w, _1801));
    float _1892;
    float _1894;
    float _1896;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1856 = fma(_935, cbModelParam._m0[21u].z, fma(_931, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _927)) + cbModelParam._m0[21u].w;
        float _1860 = fma(_935, cbModelParam._m0[22u].z, fma(_931, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _927)) + cbModelParam._m0[22u].w;
        float _1864 = fma(_935, cbModelParam._m0[23u].z, fma(_931, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _927)) + cbModelParam._m0[23u].w;
        float _1867 = fma(_876, cbModelParam._m0[21u].z, fma(_875, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _874));
        float _1870 = fma(_876, cbModelParam._m0[22u].z, fma(_875, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _874));
        float _1873 = fma(_876, cbModelParam._m0[23u].z, fma(_875, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _874));
        float _1980;
        if (_1867 > 0.0)
        {
            _1980 = abs((1.0 - _1856) / _1867);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1867 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1856 + 1.0) / _1867);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1980 = frontier_phi_28_24_ladder;
        }
        float _2297;
        if (_1870 > 0.0)
        {
            _2297 = abs((1.0 - _1860) / _1870);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1870 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1860 + 1.0) / _1870);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2297 = frontier_phi_40_35_ladder;
        }
        float _2624;
        if (_1873 > 0.0)
        {
            _2624 = abs((1.0 - _1864) / _1873);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1864 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2624 = frontier_phi_50_47_ladder;
        }
        float _2626 = isnan(_2297) ? _1980 : (isnan(_1980) ? _2297 : min(_1980, _2297));
        float _2627 = isnan(_2624) ? _2626 : (isnan(_2626) ? _2624 : min(_2626, _2624));
        float _2631 = (_2627 * _1867) + _1856;
        float _2632 = (_2627 * _1870) + _1860;
        float _2633 = (_2627 * _1873) + _1864;
        float _2634 = _2627 * 9.9999997473787516355514526367188e-05;
        float _2635 = (-1.0) - _2634;
        float _2637 = _2634 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2633 > _2637) || ((_2633 < _2635) || ((_2632 > _2637) || ((_2632 < _2635) || ((_2631 < _2635) || (_2631 > _2637))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2751 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2633, cbModelParam._m0[17u].z, fma(_2632, cbModelParam._m0[17u].y, _2631 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2633, cbModelParam._m0[18u].z, fma(_2632, cbModelParam._m0[18u].y, _2631 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2633, cbModelParam._m0[19u].z, fma(_2632, cbModelParam._m0[19u].y, _2631 * cbModelParam._m0[19u].x))), _1802);
            frontier_phi_25_50_ladder = _2751.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2751.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2751.x * cbModelParam._m0[1u].z;
        }
        _1892 = frontier_phi_25_50_ladder_2;
        _1894 = frontier_phi_25_50_ladder_1;
        _1896 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1876 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_874, _875, _876), _1802);
        _1892 = _1876.x * cbModelParam._m0[1u].z;
        _1894 = _1876.y * cbModelParam._m0[1u].z;
        _1896 = _1876.z * cbModelParam._m0[1u].z;
    }
    float _1908 = ((((1.0 - _895) * ((_882 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_895 * _882)) * _866;
    float _1909 = _1908 * ((cbModelParam._m0[1u].w * (_1892 - _1793)) + _1793);
    float _1910 = _1908 * ((cbModelParam._m0[1u].w * (_1894 - _1795)) + _1795);
    float _1911 = _1908 * ((cbModelParam._m0[1u].w * (_1896 - _1797)) + _1797);
    float _1914 = fma(_1911, cbSceneParam._m0[89u].z, fma(_1910, cbSceneParam._m0[89u].y, _1909 * cbSceneParam._m0[89u].x));
    float _1917 = fma(_1911, cbSceneParam._m0[90u].z, fma(_1910, cbSceneParam._m0[90u].y, _1909 * cbSceneParam._m0[90u].x));
    float _1920 = fma(_1911, cbSceneParam._m0[91u].z, fma(_1910, cbSceneParam._m0[91u].y, _1909 * cbSceneParam._m0[91u].x));
    float _1954 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1958 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1962 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1966 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1967 = _1954 / _1966;
    float _1968 = _1958 / _1966;
    float _1969 = _1962 / _1966;
    float _2116;
    float _2117;
    float _2118;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1996 = ((uint(_1969 > cbSceneParam._m0[59u].y) + uint(_1969 > cbSceneParam._m0[59u].x)) + uint(_1969 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1997 = _1996 + 43u;
        uint _2005 = _1996 + 44u;
        uint _2013 = _1996 + 45u;
        uint _2021 = _1996 + 46u;
        float _2032 = fma(_1966, cbSceneParam._m0[_1997].w, fma(_1962, cbSceneParam._m0[_1997].z, fma(_1958, cbSceneParam._m0[_1997].y, _1954 * cbSceneParam._m0[_1997].x)));
        float _2036 = fma(_1966, cbSceneParam._m0[_2005].w, fma(_1962, cbSceneParam._m0[_2005].z, fma(_1958, cbSceneParam._m0[_2005].y, _1954 * cbSceneParam._m0[_2005].x)));
        float _2044 = fma(_1966, cbSceneParam._m0[_2021].w, fma(_1962, cbSceneParam._m0[_2021].z, fma(_1958, cbSceneParam._m0[_2021].y, _1954 * cbSceneParam._m0[_2021].x)));
        float _2049 = cbSceneParam._m0[33u].z * _2044;
        float _2051 = cbSceneParam._m0[33u].w * _2044;
        float _2054 = fma(_1966, cbSceneParam._m0[_2013].w, fma(_1962, cbSceneParam._m0[_2013].z, fma(_1958, cbSceneParam._m0[_2013].y, _1954 * cbSceneParam._m0[_2013].x))) / _2044;
        float _2102 = (cbSceneParam._m0[33u].x - sqrt(((_1968 * _1968) + (_1967 * _1967)) + (_1969 * _1969))) * cbSceneParam._m0[33u].y;
        float _4453 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
        float _2109 = (isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2049 + _2032) / _2044, (_2051 + _2036) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2051 + _2032) / _2044, (_2036 - _2049) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2032 - _2049) / _2044, (_2036 - _2051) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2032 - _2051) / _2044, (_2049 + _2036) / _2044), _2054), 0.0)).x), vec4(0.25)));
        _2116 = 1.0 - (_2109 * cbSceneParam._m0[34u].x);
        _2117 = 1.0 - (_2109 * cbSceneParam._m0[34u].y);
        _2118 = 1.0 - (_2109 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2116 = 1.0;
        _2117 = 1.0;
        _2118 = 1.0;
    }
    float _2182;
    float _2184;
    float _2186;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2170 = fma(_1966, cbSceneParam._m0[63u].w, fma(_1962, cbSceneParam._m0[63u].z, fma(_1958, cbSceneParam._m0[63u].y, _1954 * cbSceneParam._m0[63u].x)));
        float _2171 = fma(_1966, cbSceneParam._m0[60u].w, fma(_1962, cbSceneParam._m0[60u].z, fma(_1958, cbSceneParam._m0[60u].y, _1954 * cbSceneParam._m0[60u].x))) / _2170;
        float _2172 = fma(_1966, cbSceneParam._m0[61u].w, fma(_1962, cbSceneParam._m0[61u].z, fma(_1958, cbSceneParam._m0[61u].y, _1954 * cbSceneParam._m0[61u].x))) / _2170;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2171 >= cbSceneParam._m0[64u].x) && (_2172 >= cbSceneParam._m0[64u].y)) && (_2171 <= cbSceneParam._m0[64u].z)) && (_2172 <= cbSceneParam._m0[64u].w))
        {
            float _2310 = fma(_1966, cbSceneParam._m0[62u].w, fma(_1962, cbSceneParam._m0[62u].z, fma(_1958, cbSceneParam._m0[62u].y, _1954 * cbSceneParam._m0[62u].x))) / _2170;
            float _2314 = isnan(cbSceneParam._m0[41u].w) ? _2310 : (isnan(_2310) ? cbSceneParam._m0[41u].w : max(_2310, cbSceneParam._m0[41u].w));
            float _2357 = (cbSceneParam._m0[33u].x - sqrt(((_1968 * _1968) + (_1967 * _1967)) + (_1969 * _1969))) * cbSceneParam._m0[33u].y;
            float _4469 = isnan(0.0) ? _2357 : (isnan(_2357) ? 0.0 : max(_2357, 0.0));
            float _2364 = (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2171, cbSceneParam._m0[33u].w + _2172), _2314), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2171, _2172 - cbSceneParam._m0[33u].z), _2314), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2171 - cbSceneParam._m0[33u].z, _2172 - cbSceneParam._m0[33u].w), _2314), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2171 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2172), _2314), 0.0)).x), vec4(0.25)));
            float _2368 = 1.0 - (_2364 * cbSceneParam._m0[34u].x);
            float _2369 = 1.0 - (_2364 * cbSceneParam._m0[34u].y);
            float _2370 = 1.0 - (_2364 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2370) ? _2118 : (isnan(_2118) ? _2370 : min(_2118, _2370));
            frontier_phi_37_36_ladder_1 = isnan(_2369) ? _2117 : (isnan(_2117) ? _2369 : min(_2117, _2369));
            frontier_phi_37_36_ladder_2 = isnan(_2368) ? _2116 : (isnan(_2116) ? _2368 : min(_2116, _2368));
        }
        else
        {
            frontier_phi_37_36_ladder = _2118;
            frontier_phi_37_36_ladder_1 = _2117;
            frontier_phi_37_36_ladder_2 = _2116;
        }
        _2182 = frontier_phi_37_36_ladder_2;
        _2184 = frontier_phi_37_36_ladder_1;
        _2186 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2182 = _2116;
        _2184 = _2117;
        _2186 = _2118;
    }
    uvec4 _2191 = floatBitsToUint(cbInstanceData._m0[_248 + 5u]);
    uint _2193 = _2191.x * 14u;
    uint _2194 = _2193 + 13u;
    float _2201 = _866 + (-1.0);
    float _2206 = (cbLight._m0[_2194].x * _2201) + 1.0;
    float _2207 = (cbLight._m0[_2194].y * _2201) + 1.0;
    float _2208 = (cbLight._m0[_2194].z * _2201) + 1.0;
    float _2209 = (cbLight._m0[_2194].w * _2201) + 1.0;
    uint _2210 = _2193 + 5u;
    float _2216 = isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0));
    uint _2220 = _2193 + 4u;
    float _2229 = isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0));
    uint _2233 = _2193 | 1u;
    float _2244 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_703, _704, _705));
    float _2247 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_703, _704, _705));
    float _4505 = isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0));
    float _4516 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _2252 = (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * 0.3183098733425140380859375;
    float _2254 = (isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0))) * 0.3183098733425140380859375;
    float _2261 = ((cbLight._m0[_2210].x * _2216) * _2254) + (((cbLight._m0[_2220].x * _2182) * _2229) * _2252);
    float _2262 = ((_2216 * cbLight._m0[_2210].y) * _2254) + (((cbLight._m0[_2220].y * _2184) * _2229) * _2252);
    float _2263 = ((_2216 * cbLight._m0[_2210].z) * _2254) + (((cbLight._m0[_2220].z * _2186) * _2229) * _2252);
    uvec4 _2267 = floatBitsToUint(cbLight._m0[_2193 + 12u]);
    bool _2269 = _2267.x == 0u;
    float _2371;
    float _2373;
    float _2375;
    if (_2269)
    {
        _2371 = _2261;
        _2373 = _2262;
        _2375 = _2263;
    }
    else
    {
        uint _2379 = _2193 + 6u;
        float _2395 = (dot(vec3(cbLight._m0[_2193 + 2u].xyz), vec3(_703, _704, _705)) * 0.5) + 0.5;
        float _2396 = _2395 * _2395;
        float _4527 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
        float _2397 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _2398 = isnan(1.0) ? _2208 : (isnan(_2208) ? 1.0 : min(_2208, 1.0));
        _2371 = (((cbLight._m0[_2379].x * 0.3183098733425140380859375) * _2397) * _2398) + _2261;
        _2373 = (((cbLight._m0[_2379].y * 0.3183098733425140380859375) * _2397) * _2398) + _2262;
        _2375 = (((cbLight._m0[_2379].z * 0.3183098733425140380859375) * _2397) * _2398) + _2263;
    }
    bool _2378 = _2267.y == 0u;
    float _2433;
    float _2435;
    float _2437;
    if (_2378)
    {
        _2433 = _2371;
        _2435 = _2373;
        _2437 = _2375;
    }
    else
    {
        uint _2595 = _2193 + 7u;
        float _2611 = (dot(vec3(cbLight._m0[_2193 + 3u].xyz), vec3(_703, _704, _705)) * 0.5) + 0.5;
        float _2612 = _2611 * _2611;
        float _4543 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0));
        float _2613 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
        float _2614 = isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0));
        _2433 = (((cbLight._m0[_2595].x * 0.3183098733425140380859375) * _2613) * _2614) + _2371;
        _2435 = (((cbLight._m0[_2595].y * 0.3183098733425140380859375) * _2613) * _2614) + _2373;
        _2437 = (((cbLight._m0[_2595].z * 0.3183098733425140380859375) * _2613) * _2614) + _2375;
    }
    uint _2440 = _2193 + 8u;
    float _2453 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2193].w)) * _706) * 0.949999988079071044921875);
    float _2454 = _2453 * _2453;
    float _2455 = cbLight._m0[_2193].x + _783;
    float _2456 = cbLight._m0[_2193].y + _784;
    float _2457 = cbLight._m0[_2193].z + _785;
    float _2461 = inversesqrt(dot(vec3(_2455, _2456, _2457), vec3(_2455, _2456, _2457)));
    float _2462 = _2461 * _2455;
    float _2463 = _2461 * _2456;
    float _2464 = _2461 * _2457;
    float _2465 = dot(vec3(_703, _704, _705), vec3(cbLight._m0[_2193].xyz));
    float _4559 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
    float _2468 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
    float _4570 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _2469 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _2470 = dot(vec3(_703, _704, _705), vec3(_2462, _2463, _2464));
    float _4581 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0));
    float _2473 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
    float _2474 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_2462, _2463, _2464));
    float _4592 = isnan(0.0) ? _2474 : (isnan(_2474) ? 0.0 : max(_2474, 0.0));
    float _2478 = _2454 * _2454;
    float _2482 = ((_2473 * _2473) * (_2478 + (-1.0))) + 1.0;
    float _2493 = (exp2(log2(1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2494 = 1.0 - _2454;
    float _2505 = (0.5 / (((_2469 * ((_2468 * _2494) + _2454)) + 9.9999999392252902907785028219223e-09) + (((_2469 * _2494) + _2454) * _2468))) * _2468;
    float _4603 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2507 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2478 / ((_2482 * _2482) * 3.141590118408203125));
    uint _2521 = _2193 + 9u;
    float _2532 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2233].w)) * _706) * 0.949999988079071044921875);
    float _2533 = _2532 * _2532;
    float _2534 = cbLight._m0[_2233].x + _783;
    float _2535 = cbLight._m0[_2233].y + _784;
    float _2536 = cbLight._m0[_2233].z + _785;
    float _2540 = inversesqrt(dot(vec3(_2534, _2535, _2536), vec3(_2534, _2535, _2536)));
    float _2541 = _2540 * _2534;
    float _2542 = _2540 * _2535;
    float _2543 = _2540 * _2536;
    float _2544 = dot(vec3(_703, _704, _705), vec3(cbLight._m0[_2233].xyz));
    float _4614 = isnan(0.0) ? _2544 : (isnan(_2544) ? 0.0 : max(_2544, 0.0));
    float _2547 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _2548 = dot(vec3(_703, _704, _705), vec3(_2541, _2542, _2543));
    float _4625 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
    float _2551 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
    float _2552 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_2541, _2542, _2543));
    float _4636 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
    float _2556 = _2533 * _2533;
    float _2560 = ((_2551 * _2551) * (_2556 + (-1.0))) + 1.0;
    float _2569 = (exp2(log2(1.0 - (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2570 = 1.0 - _2533;
    float _2580 = (0.5 / (((_2469 * ((_2547 * _2570) + _2533)) + 9.9999999392252902907785028219223e-09) + (((_2469 * _2570) + _2533) * _2547))) * _2547;
    float _4647 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2582 = (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0))) * (_2556 / ((_2560 * _2560) * 3.141590118408203125));
    float _2592 = (((_2569 * cbLight._m0[_2521].x) * _2582) * _2216) + ((((cbLight._m0[_2440].x * _2182) * _2493) * _2507) * _2229);
    float _2593 = (((_2569 * cbLight._m0[_2521].y) * _2582) * _2216) + ((((cbLight._m0[_2440].y * _2184) * _2493) * _2507) * _2229);
    float _2594 = (((_2569 * cbLight._m0[_2521].z) * _2582) * _2216) + ((((cbLight._m0[_2440].z * _2186) * _2493) * _2507) * _2229);
    float _2650;
    float _2652;
    float _2654;
    if (_2269)
    {
        _2650 = _2592;
        _2652 = _2593;
        _2654 = _2594;
    }
    else
    {
        uint _2656 = _2193 + 2u;
        uint _2660 = _2193 + 10u;
        float _2674 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2656].w)) * _706) * 0.949999988079071044921875);
        float _2675 = _2674 * _2674;
        float _2676 = cbLight._m0[_2656].x + _783;
        float _2677 = cbLight._m0[_2656].y + _784;
        float _2678 = cbLight._m0[_2656].z + _785;
        float _2682 = inversesqrt(dot(vec3(_2676, _2677, _2678), vec3(_2676, _2677, _2678)));
        float _2683 = _2682 * _2676;
        float _2684 = _2682 * _2677;
        float _2685 = _2682 * _2678;
        float _2686 = dot(vec3(_703, _704, _705), vec3(cbLight._m0[_2656].xyz));
        float _4658 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2689 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _2690 = dot(vec3(_703, _704, _705), vec3(_2683, _2684, _2685));
        float _4669 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
        float _2693 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
        float _2694 = dot(vec3(cbLight._m0[_2656].xyz), vec3(_2683, _2684, _2685));
        float _4680 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
        float _2698 = _2675 * _2675;
        float _2702 = ((_2693 * _2693) * (_2698 + (-1.0))) + 1.0;
        float _2711 = (exp2(log2(1.0 - (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2712 = 1.0 - _2675;
        float _2722 = (0.5 / (((_2469 * ((_2689 * _2712) + _2675)) + 9.9999999392252902907785028219223e-09) + (((_2469 * _2712) + _2675) * _2689))) * _2689;
        float _4691 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        float _2724 = (isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0))) * (_2698 / ((_2702 * _2702) * 3.141590118408203125));
        float _2725 = isnan(1.0) ? _2208 : (isnan(_2208) ? 1.0 : min(_2208, 1.0));
        _2650 = (((_2711 * cbLight._m0[_2660].x) * _2724) * _2725) + _2592;
        _2652 = (((_2711 * cbLight._m0[_2660].y) * _2724) * _2725) + _2593;
        _2654 = (((_2711 * cbLight._m0[_2660].z) * _2724) * _2725) + _2594;
    }
    float _2756;
    float _2758;
    float _2760;
    if (_2378)
    {
        _2756 = _2650;
        _2758 = _2652;
        _2760 = _2654;
    }
    else
    {
        uint _2767 = _2193 + 3u;
        uint _2771 = _2193 + 11u;
        float _2785 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2767].w)) * _706) * 0.949999988079071044921875);
        float _2786 = _2785 * _2785;
        float _2787 = cbLight._m0[_2767].x + _783;
        float _2788 = cbLight._m0[_2767].y + _784;
        float _2789 = cbLight._m0[_2767].z + _785;
        float _2793 = inversesqrt(dot(vec3(_2787, _2788, _2789), vec3(_2787, _2788, _2789)));
        float _2794 = _2793 * _2787;
        float _2795 = _2793 * _2788;
        float _2796 = _2793 * _2789;
        float _2797 = dot(vec3(_703, _704, _705), vec3(cbLight._m0[_2767].xyz));
        float _4707 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2800 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
        float _2801 = dot(vec3(_703, _704, _705), vec3(_2794, _2795, _2796));
        float _4718 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2804 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2805 = dot(vec3(cbLight._m0[_2767].xyz), vec3(_2794, _2795, _2796));
        float _4729 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
        float _2809 = _2786 * _2786;
        float _2813 = ((_2804 * _2804) * (_2809 + (-1.0))) + 1.0;
        float _2822 = (exp2(log2(1.0 - (isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2823 = 1.0 - _2786;
        float _2833 = (0.5 / (((_2469 * ((_2800 * _2823) + _2786)) + 9.9999999392252902907785028219223e-09) + (((_2469 * _2823) + _2786) * _2800))) * _2800;
        float _4740 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        float _2835 = (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * (_2809 / ((_2813 * _2813) * 3.141590118408203125));
        float _2836 = isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0));
        _2756 = (((_2822 * cbLight._m0[_2771].x) * _2835) * _2836) + _2650;
        _2758 = (((_2822 * cbLight._m0[_2771].y) * _2835) * _2836) + _2652;
        _2760 = (((_2822 * cbLight._m0[_2771].z) * _2835) * _2836) + _2654;
    }
    float _2902;
    float _2904;
    float _2906;
    float _2908;
    float _2910;
    float _2912;
    if (_2191.y == 0u)
    {
        uvec4 _2857 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2858 = _2857.x;
        uint _2869 = uint((float(_2857.y) * floor(float(uint(cbSceneParam._m0[85u].y * _804) / _2858))) + floor(float(uint(cbSceneParam._m0[85u].x * _803) / _2858)));
        float _2879 = (log2(_1969 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2880 = isnan(0.0) ? _2879 : (isnan(_2879) ? 0.0 : max(_2879, 0.0));
        uint _2883 = uint(isnan(14.0) ? _2880 : (isnan(_2880) ? 14.0 : min(_2880, 14.0)));
        uvec4 _2888 = texelFetch(g_lightClusterGridBuffer, int(((_2883 << 2u) + (_2869 << 6u)) >> 2u));
        uint _2889 = _2888.x;
        uint _2890 = _2857.z;
        float _2969;
        float _2971;
        float _2973;
        float _2975;
        float _2977;
        float _2979;
        if (((((1u << ((_2890 >> 4u) & 15u)) + 4294967295u) & _2889) == 0u) || ((_2890 & 240u) == 0u))
        {
            _2969 = 0.0;
            _2971 = 0.0;
            _2973 = 0.0;
            _2975 = 0.0;
            _2977 = 0.0;
            _2979 = 0.0;
        }
        else
        {
            float _2970;
            float _2972;
            float _2974;
            float _2976;
            float _2978;
            float _2980;
            float _3122 = 0.0;
            float _3123 = 0.0;
            float _3124 = 0.0;
            float _3125 = 0.0;
            float _3126 = 0.0;
            float _3127 = 0.0;
            uint _3128 = 0u;
            uint _3137;
            bool _3138;
            for (;;)
            {
                _3137 = texelFetch(g_lightClassification, int((((_2883 << 5u) + (_2869 << 9u)) + (_3128 << 2u)) >> 2u)).x;
                _3138 = _3137 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3138)
                {
                    frontier_phi_71_pred = _3127;
                    frontier_phi_71_pred_1 = _3126;
                    frontier_phi_71_pred_2 = _3125;
                    frontier_phi_71_pred_3 = _3124;
                    frontier_phi_71_pred_4 = _3123;
                    frontier_phi_71_pred_5 = _3122;
                }
                else
                {
                    float _3267;
                    float _3268;
                    float _3269;
                    float _3270;
                    float _3271;
                    float _3272;
                    uint _3273;
                    _3267 = _3122;
                    _3268 = _3123;
                    _3269 = _3124;
                    _3270 = _3125;
                    _3271 = _3126;
                    _3272 = _3127;
                    _3273 = _3137;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    float _3198;
                    float _3199;
                    for (;;)
                    {
                        uint _3277 = uint(findLSB(_3273)) + (_3128 << 5u);
                        uint _3274 = (_3273 + 4294967295u) & _3273;
                        uint _3279 = _3277 * 48u;
                        vec4 _3293 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 3u)).x));
                        uint _3299 = (_3277 * 48u) + 4u;
                        vec4 _3312 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3299)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 3u)).x));
                        uint _3318 = (_3277 * 48u) + 8u;
                        vec3 _3329 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3318)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 2u)).x));
                        float _3333 = _3293.x - _1967;
                        float _3334 = _3293.y - _1968;
                        float _3335 = _3293.z - _1969;
                        float _3336 = dot(vec3(_3333, _3334, _3335), vec3(_3333, _3334, _3335));
                        float _3339 = inversesqrt(_3336);
                        float _3340 = _3339 * _3333;
                        float _3341 = _3339 * _3334;
                        float _3342 = _3339 * _3335;
                        float _3343 = dot(vec3(_822, _825, _828), vec3(_3340, _3341, _3342));
                        float _3348 = 1.0 - (_3336 * _3293.w);
                        float _4766 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0));
                        float _3349 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
                        float _3350 = sqrt(_3336) * _3312.w;
                        float _3353 = 1.39999997615814208984375 / (_3350 + 1.39999997615814208984375);
                        float _3354 = _3353 * _3353;
                        float _3357 = ((1.0 - _3354) * _3343) + _3354;
                        float _3360 = _3350 * _3350;
                        float _3364 = ((isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0))) * _3349) / ((_3360 * 0.699999988079071044921875) + 1.0);
                        float _3368 = (-0.0) - _1967;
                        float _3369 = (-0.0) - _1968;
                        float _3370 = (-0.0) - _1969;
                        float _3374 = inversesqrt(dot(vec3(_3368, _3369, _3370), vec3(_3368, _3369, _3370)));
                        float _3375 = _3374 * _3368;
                        float _3376 = _3374 * _3369;
                        float _3377 = _3374 * _3370;
                        float _3384 = exp2(log2(1.0 / ((_3360 * 3.5) + 5.0)) * 0.25);
                        float _3385 = 1.0 - _882;
                        float _3392 = sqrt(1.0 - ((1.0 - (_3385 * _3385)) * (1.0 - (_3384 * _3384))));
                        float _3393 = _3392 * _3392;
                        float _3394 = _3393 * _3393;
                        float _3395 = _3375 + _3340;
                        float _3396 = _3376 + _3341;
                        float _3397 = _3377 + _3342;
                        float _3401 = inversesqrt(dot(vec3(_3395, _3396, _3397), vec3(_3395, _3396, _3397)));
                        float _3405 = dot(vec3(_822, _825, _828), vec3(_3375, _3376, _3377));
                        float _4782 = isnan(0.0) ? _3405 : (isnan(_3405) ? 0.0 : max(_3405, 0.0));
                        float _3408 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
                        float _3409 = dot(vec3(_822, _825, _828), vec3(_3401 * _3395, _3401 * _3396, _3401 * _3397));
                        float _4793 = isnan(0.0) ? _3409 : (isnan(_3409) ? 0.0 : max(_3409, 0.0));
                        float _3412 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                        float _3416 = ((_3412 * _3412) * (_3394 + (-1.0))) + 1.0;
                        float _3417 = _3353 * _3393;
                        float _3418 = _3417 * _3417;
                        float _3421 = ((1.0 - _3418) * _3343) + _3418;
                        float _4804 = isnan(0.0) ? _3421 : (isnan(_3421) ? 0.0 : max(_3421, 0.0));
                        float _3422 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
                        float _3423 = 1.0 - _3393;
                        float _3433 = (0.5 / (((_3422 * ((_3408 * _3423) + _3393)) + 9.9999999392252902907785028219223e-09) + (((_3422 * _3423) + _3393) * _3408))) * _3422;
                        float _4815 = isnan(0.0) ? _3433 : (isnan(_3433) ? 0.0 : max(_3433, 0.0));
                        float _3444 = (((_3394 * 3.1415927410125732421875) * (isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0)))) / ((_3416 * _3416) * ((_3360 * 2.1991131305694580078125) + 3.141590118408203125))) * _3349;
                        _3197 = (_3364 * _3312.x) + _3270;
                        _3198 = (_3364 * _3312.y) + _3271;
                        _3199 = (_3364 * _3312.z) + _3272;
                        _3194 = (_3444 * _3329.x) + _3267;
                        _3195 = (_3444 * _3329.y) + _3268;
                        _3196 = (_3444 * _3329.z) + _3269;
                        if (_3274 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3267 = _3194;
                            _3268 = _3195;
                            _3269 = _3196;
                            _3270 = _3197;
                            _3271 = _3198;
                            _3272 = _3199;
                            _3273 = _3274;
                        }
                    }
                    frontier_phi_71_pred = _3199;
                    frontier_phi_71_pred_1 = _3198;
                    frontier_phi_71_pred_2 = _3197;
                    frontier_phi_71_pred_3 = _3196;
                    frontier_phi_71_pred_4 = _3195;
                    frontier_phi_71_pred_5 = _3194;
                }
                _2980 = frontier_phi_71_pred;
                _2978 = frontier_phi_71_pred_1;
                _2976 = frontier_phi_71_pred_2;
                _2974 = frontier_phi_71_pred_3;
                _2972 = frontier_phi_71_pred_4;
                _2970 = frontier_phi_71_pred_5;
                uint _3129 = _3128 + 1u;
                if (_3129 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3122 = _2970;
                    _3123 = _2972;
                    _3124 = _2974;
                    _3125 = _2976;
                    _3126 = _2978;
                    _3127 = _2980;
                    _3128 = _3129;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2969 = _2970;
            _2971 = _2972;
            _2973 = _2974;
            _2975 = _2976;
            _2977 = _2978;
            _2979 = _2980;
        }
        uvec4 _2983 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2984 = _2983.z;
        uint _2986 = (_2984 >> 8u) & 15u;
        float _3090;
        float _3092;
        float _3094;
        float _3096;
        float _3098;
        float _3100;
        if (((4294967295u << _2986) & _2889) == 0u)
        {
            _3090 = _2969;
            _3092 = _2971;
            _3094 = _2973;
            _3096 = _2975;
            _3098 = _2977;
            _3100 = _2979;
        }
        else
        {
            float _3115 = inversesqrt(dot(vec3(_1967, _1968, _1969), vec3(_1967, _1968, _1969)));
            float _3116 = _3115 * _1967;
            float _3117 = _3115 * _1968;
            float _3118 = _3115 * _1969;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2986 < ((_2984 >> 12u) & 15u))
            {
                float _3091;
                float _3093;
                float _3095;
                float _3097;
                float _3099;
                float _3101;
                float _3250 = _2969;
                float _3251 = _2971;
                float _3252 = _2973;
                float _3253 = _2975;
                float _3254 = _2977;
                float _3255 = _2979;
                uint _3256 = _2986;
                uint _3265;
                bool _3266;
                for (;;)
                {
                    _3265 = texelFetch(g_lightClassification, int((((_2883 << 5u) + (_2869 << 9u)) + (_3256 << 2u)) >> 2u)).x;
                    _3266 = _3265 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3266)
                    {
                        frontier_phi_82_pred = _3255;
                        frontier_phi_82_pred_1 = _3254;
                        frontier_phi_82_pred_2 = _3253;
                        frontier_phi_82_pred_3 = _3252;
                        frontier_phi_82_pred_4 = _3251;
                        frontier_phi_82_pred_5 = _3250;
                    }
                    else
                    {
                        float _3458;
                        float _3459;
                        float _3460;
                        float _3461;
                        float _3462;
                        float _3463;
                        float _3751;
                        float _3752;
                        float _3753;
                        float _3754;
                        float _3755;
                        float _3756;
                        float _3471 = _3250;
                        float _3472 = _3251;
                        float _3473 = _3252;
                        float _3474 = _3253;
                        float _3475 = _3254;
                        float _3476 = _3255;
                        uint _3477 = _3265;
                        uint _3478;
                        vec4 _3503;
                        float _3504;
                        vec4 _3519;
                        vec3 _3531;
                        vec4 _3546;
                        vec4 _3561;
                        float _3607;
                        bool _3608;
                        for (;;)
                        {
                            uint _3488 = ((_3256 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3477));
                            _3478 = (_3477 + 4294967295u) & _3477;
                            uint _3490 = _3488 * 40u;
                            _3503 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3490)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 3u)).x));
                            _3504 = _3503.w;
                            uint _3506 = (_3488 * 40u) + 4u;
                            _3519 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 3u)).x));
                            uint _3521 = (_3488 * 40u) + 8u;
                            _3531 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3521)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 2u)).x));
                            uint _3533 = (_3488 * 40u) + 16u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3548 = (_3488 * 40u) + 20u;
                            _3561 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3548)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 3u)).x));
                            uint _3563 = (_3488 * 40u) + 24u;
                            vec4 _3576 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3563)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 3u)).x));
                            uint _3582 = (_3488 * 40u) + 28u;
                            vec4 _3595 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 3u)).x));
                            _3607 = fma(_1969, _3595.z, fma(_1968, _3595.y, _3595.x * _1967)) + _3595.w;
                            _3608 = !((fma(_1969, _3576.z, fma(_1968, _3576.y, _3576.x * _1967)) + _3576.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3608)
                            {
                                float _3635 = _3503.x - _1967;
                                float _3636 = _3503.y - _1968;
                                float _3637 = _3503.z - _1969;
                                float _3638 = dot(vec3(_3635, _3636, _3637), vec3(_3635, _3636, _3637));
                                float _3641 = inversesqrt(_3638);
                                float _3642 = _3641 * _3635;
                                float _3643 = _3641 * _3636;
                                float _3644 = _3641 * _3637;
                                float _3648 = 1.0 - (_3638 / (_3504 * _3504));
                                float _4826 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3649 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                                float _3653 = sqrt(_3638) * _3519.w;
                                float _3655 = 1.39999997615814208984375 / (_3653 + 1.39999997615814208984375);
                                float _3656 = _3655 * _3655;
                                float _3659 = ((1.0 - _3656) * dot(vec3(_3642, _3643, _3644), vec3(_822, _825, _828))) + _3656;
                                float _3662 = _3653 * _3653;
                                float _3666 = (fma(_1969, _3546.z, fma(_1968, _3546.y, _3546.x * _1967)) + _3546.w) / _3607;
                                float _3667 = (fma(_1969, _3561.z, fma(_1968, _3561.y, _3561.x * _1967)) + _3561.w) / _3607;
                                float _3671 = 1.0 - dot(vec2(_3666, _3667), vec2(_3666, _3667));
                                float _4842 = isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0));
                                float _3672 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                                float _3673 = _3672 * (((isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0))) * _3649) / ((_3662 * 0.699999988079071044921875) + 1.0));
                                float _3685 = exp2(log2(1.0 / ((_3662 * 3.5) + 5.0)) * 0.25);
                                float _3686 = 1.0 - _882;
                                float _3693 = sqrt(1.0 - ((1.0 - (_3686 * _3686)) * (1.0 - (_3685 * _3685))));
                                float _3694 = _3693 * _3693;
                                float _3695 = _3694 * _3694;
                                float _3696 = _3642 - _3116;
                                float _3697 = _3643 - _3117;
                                float _3698 = _3644 - _3118;
                                float _3702 = inversesqrt(dot(vec3(_3696, _3697, _3698), vec3(_3696, _3697, _3698)));
                                float _3706 = dot(vec3(_822, _825, _828), vec3((-0.0) - _3116, (-0.0) - _3117, (-0.0) - _3118));
                                float _4853 = isnan(0.0) ? _3706 : (isnan(_3706) ? 0.0 : max(_3706, 0.0));
                                float _3709 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                                float _3710 = dot(vec3(_822, _825, _828), vec3(_3702 * _3696, _3702 * _3697, _3702 * _3698));
                                float _4864 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                                float _3713 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                                float _3717 = ((_3713 * _3713) * (_3695 + (-1.0))) + 1.0;
                                float _3718 = _3655 * _3694;
                                float _3719 = _3718 * _3718;
                                float _3725 = ((1.0 - _3719) * dot(vec3(_822, _825, _828), vec3(_3642, _3643, _3644))) + _3719;
                                float _4875 = isnan(0.0) ? _3725 : (isnan(_3725) ? 0.0 : max(_3725, 0.0));
                                float _3726 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                                float _3727 = 1.0 - _3694;
                                float _3737 = (0.5 / (((_3726 * ((_3709 * _3727) + _3694)) + 9.9999999392252902907785028219223e-09) + (((_3726 * _3727) + _3694) * _3709))) * _3726;
                                float _4886 = isnan(0.0) ? _3737 : (isnan(_3737) ? 0.0 : max(_3737, 0.0));
                                float _3747 = (_3672 * _3649) * (((_3695 * 3.1415927410125732421875) * (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0)))) / ((_3717 * _3717) * ((_3662 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3673 * _3519.z;
                                frontier_phi_88_pred_1 = _3673 * _3519.y;
                                frontier_phi_88_pred_2 = _3673 * _3519.x;
                                frontier_phi_88_pred_3 = _3747 * _3531.z;
                                frontier_phi_88_pred_4 = _3747 * _3531.y;
                                frontier_phi_88_pred_5 = _3747 * _3531.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3756 = frontier_phi_88_pred;
                            _3755 = frontier_phi_88_pred_1;
                            _3754 = frontier_phi_88_pred_2;
                            _3753 = frontier_phi_88_pred_3;
                            _3752 = frontier_phi_88_pred_4;
                            _3751 = frontier_phi_88_pred_5;
                            _3461 = _3754 + _3474;
                            _3462 = _3755 + _3475;
                            _3463 = _3756 + _3476;
                            _3458 = _3751 + _3471;
                            _3459 = _3752 + _3472;
                            _3460 = _3753 + _3473;
                            if (_3478 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3471 = _3458;
                                _3472 = _3459;
                                _3473 = _3460;
                                _3474 = _3461;
                                _3475 = _3462;
                                _3476 = _3463;
                                _3477 = _3478;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3463;
                        frontier_phi_82_pred_1 = _3462;
                        frontier_phi_82_pred_2 = _3461;
                        frontier_phi_82_pred_3 = _3460;
                        frontier_phi_82_pred_4 = _3459;
                        frontier_phi_82_pred_5 = _3458;
                    }
                    _3101 = frontier_phi_82_pred;
                    _3099 = frontier_phi_82_pred_1;
                    _3097 = frontier_phi_82_pred_2;
                    _3095 = frontier_phi_82_pred_3;
                    _3093 = frontier_phi_82_pred_4;
                    _3091 = frontier_phi_82_pred_5;
                    uint _3257 = _3256 + 1u;
                    if (_3257 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3250 = _3091;
                        _3251 = _3093;
                        _3252 = _3095;
                        _3253 = _3097;
                        _3254 = _3099;
                        _3255 = _3101;
                        _3256 = _3257;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3097;
                frontier_phi_63_64_ladder_1 = _3101;
                frontier_phi_63_64_ladder_2 = _3099;
                frontier_phi_63_64_ladder_3 = _3095;
                frontier_phi_63_64_ladder_4 = _3093;
                frontier_phi_63_64_ladder_5 = _3091;
            }
            else
            {
                frontier_phi_63_64_ladder = _2975;
                frontier_phi_63_64_ladder_1 = _2979;
                frontier_phi_63_64_ladder_2 = _2977;
                frontier_phi_63_64_ladder_3 = _2973;
                frontier_phi_63_64_ladder_4 = _2971;
                frontier_phi_63_64_ladder_5 = _2969;
            }
            _3090 = frontier_phi_63_64_ladder_5;
            _3092 = frontier_phi_63_64_ladder_4;
            _3094 = frontier_phi_63_64_ladder_3;
            _3096 = frontier_phi_63_64_ladder;
            _3098 = frontier_phi_63_64_ladder_2;
            _3100 = frontier_phi_63_64_ladder_1;
        }
        float _3105 = isnan(1.0) ? _866 : (isnan(_866) ? 1.0 : min(_866, 1.0));
        _2902 = (_3105 * _3096) + _2433;
        _2904 = (_3105 * _3098) + _2435;
        _2906 = (_3105 * _3100) + _2437;
        _2908 = ((_3090 * 0.039999999105930328369140625) * _3105) + _2756;
        _2910 = ((_3092 * 0.039999999105930328369140625) * _3105) + _2758;
        _2912 = ((_3094 * 0.039999999105930328369140625) * _3105) + _2760;
    }
    else
    {
        _2902 = _2433;
        _2904 = _2435;
        _2906 = _2437;
        _2908 = _2756;
        _2910 = _2758;
        _2912 = _2760;
    }
    float _4902 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _4913 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _4924 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _2929 = ((isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0))) * (_2902 + ((isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0))) * _866))) + ((_2908 + ((isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    float _2930 = ((isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * (_2904 + ((isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))) * _866))) + ((_2910 + ((isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    float _2931 = ((isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0))) * (_2906 + ((isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0))) * _866))) + ((_2912 + ((isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    uint _2932 = _248 + 6u;
    float _2940 = _803 / cbSceneParam._m0[86u].x;
    float _2941 = _804 / cbSceneParam._m0[86u].y;
    vec4 _2955 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2940, _2941, (log2((isnan(cbSceneParam._m0[77u].w) ? _724 : (isnan(_724) ? cbSceneParam._m0[77u].w : min(_724, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2957 = _2955.x;
    float _2958 = _2955.y;
    float _2959 = _2955.z;
    float _2960 = _2955.w;
    float _3032;
    float _3034;
    float _3036;
    float _3038;
    if (_724 > cbSceneParam._m0[78u].w)
    {
        float _2994 = isnan(_724) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _724 : min(cbSceneParam._m0[80u].w, _724));
        float _2995 = _2994 / _724;
        float _3006 = _2995 * _776;
        float _3007 = _777 * _2995;
        float _3008 = (-0.0) - _3007;
        float _3010 = _2995 * _778;
        float _3012 = (cbSceneParam._m0[77u].w * _3008) / _2994;
        float _3013 = _3012 + cbSceneParam._m0[79u].w;
        float _3014 = cbSceneParam._m0[79u].w - _3007;
        float _3020 = sqrt(((_3006 * _3006) + (_3007 * _3007)) + (_3010 * _3010));
        float _3023 = (1.0 - (cbSceneParam._m0[77u].w / _2994)) * _3020;
        float _3028 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3030 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3207;
        if (abs((_3008 - _3012) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3207 = ((((_3013 > 0.0) ? exp2(_3028 * _3013) : (2.0 - exp2(_3030 * _3013))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3023;
        }
        else
        {
            float _3151 = 1.0 / cbSceneParam._m0[80u].x;
            float _3152 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : max(_3013, _3014));
            float _3153 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : min(_3013, _3014));
            float _3162 = isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : min(_3152, 0.0));
            float _3163 = isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : min(_3153, 0.0));
            _3207 = ((abs(_3020 / _3008) * cbSceneParam._m0[80u].y) * ((((_3162 - _3163) * 2.0) - ((exp2(_3028 * (isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0)))) - exp2(_3028 * (isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : max(_3153, 0.0))))) * _3151)) - ((exp2(_3030 * _3162) - exp2(_3030 * _3163)) * _3151))) + (_3023 * cbSceneParam._m0[80u].z);
        }
        vec4 _3209 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2940, _2941, 1.0), 0.0);
        float _3218 = exp2((_3207 * (-1.44269502162933349609375)) * (1.0 - _3209.w));
        float _3219 = log2(_3218);
        float _3235 = log2(_2960);
        _3032 = (exp2(_3235 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].x)) * _3209.x) / cbSceneParam._m0[78u].x)) + _2957;
        _3034 = (exp2(_3235 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].y)) * _3209.y) / cbSceneParam._m0[78u].y)) + _2958;
        _3036 = (exp2(_3235 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].z)) * _3209.z) / cbSceneParam._m0[78u].z)) + _2959;
        _3038 = _3218 * _2960;
    }
    else
    {
        _3032 = _2957;
        _3034 = _2958;
        _3036 = _2959;
        _3038 = _2960;
    }
    bool _3245;
    vec4 _3048;
    vec4 _3070;
    float _3072;
    float _3076;
    float _3077;
    float _3078;
    float _3079;
    bool _3089;
    for (;;)
    {
        _3048 = cbMatDynParam._m0[0u];
        float _3050 = roundEven(_3048.y);
        bool _3051 = _3050 == 3.0;
        float _3052 = log2(_3038);
        float _3059 = exp2(_3052 * cbSceneParam._m0[78u].x) * _2929;
        float _3060 = exp2(_3052 * cbSceneParam._m0[78u].y) * _2930;
        float _3061 = exp2(_3052 * cbSceneParam._m0[78u].z) * _2931;
        float _3068 = _792 + (-0.5);
        _3070 = cbMtdParam._m0[1u];
        _3072 = _3070.y * _3068;
        float _3075 = (_3050 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3076 = _3075 * (_3051 ? _3059 : (_3059 + (cbSceneParam._m0[72u].w * _3032)));
        _3077 = _3075 * (_3051 ? _3060 : (_3060 + (cbSceneParam._m0[72u].w * _3034)));
        _3078 = _3075 * (_3051 ? _3061 : (_3061 + (cbSceneParam._m0[72u].w * _3036)));
        _3079 = _3068 * 0.999000012874603271484375;
        _3089 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3089)
        {
            if ((cbInstanceData._m0[_248 + 7u].x + _3079) < 0.5)
            {
                _3245 = true;
                break;
            }
        }
        uint _3186 = _841 + uint(_3048.w);
        if ((cbInstanceData._m0[_3186].w < 1.0) && ((cbInstanceData._m0[_3186].w + _3079) < 0.5))
        {
            _3245 = true;
            break;
        }
        if ((_3072 + 1.0) < _3070.x)
        {
            _3245 = true;
            break;
        }
        _3245 = false;
        break;
    }
    float _3449;
    if (_3245)
    {
        discard_state = true;
        _3449 = 0.0;
    }
    else
    {
        _3449 = cbInstanceData._m0[_2932].w;
    }
    SV_Target.x = _3076;
    SV_Target.y = _3077;
    SV_Target.z = _3078;
    SV_Target.w = _3449;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2932].w;
    discard_exit();
}


