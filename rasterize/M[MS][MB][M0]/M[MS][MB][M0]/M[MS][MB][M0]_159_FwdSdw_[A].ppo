#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1311;
float _3952;
float _3953;
float _3954;
float _3955;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _234 = _233 * _225;
    float _235 = _233 * _226;
    float _236 = _233 * _227;
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = _240 * NORMAL.x;
    float _242 = _240 * NORMAL.y;
    float _243 = _240 * NORMAL.z;
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = _247 * TANGENT.x;
    float _249 = _247 * TANGENT.y;
    float _250 = _247 * TANGENT.z;
    uint _253 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = _253 + 1u;
    uint _262 = _253 + 2u;
    float _271 = sqrt(((cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x) + (cbInstanceData._m0[_253].x * cbInstanceData._m0[_253].x)) + (cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x));
    float _272 = _271 * TEXCOORD.z;
    float _273 = _271 * TEXCOORD.w;
    vec4 _293 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _299 = _293.x * cbMtdParam._m0[11u].x;
    float _300 = _293.y * cbMtdParam._m0[11u].y;
    float _301 = _293.z * cbMtdParam._m0[11u].z;
    vec4 _320 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _272) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _273) + cbTextureTilingScale._m0[5u].w));
    vec4 _358 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _360 = _358.x;
    float _370 = dot(vec4(_360, _358.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _387 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_360 - _370) * cbMtdParam._m0[24u].x) + _370) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3964 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
    float _395 = (_388 * ((_320.x * cbMtdParam._m0[12u].x) - _299)) + _299;
    float _396 = (_388 * ((_320.y * cbMtdParam._m0[12u].y) - _300)) + _300;
    float _397 = (_388 * ((_320.z * cbMtdParam._m0[12u].z) - _301)) + _301;
    vec4 _416 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _272) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _273) + cbTextureTilingScale._m0[14u].w));
    vec4 _436 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _272) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _273) + cbTextureTilingScale._m0[4u].w));
    vec4 _453 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _455 = _453.x;
    float _456 = _453.y;
    float _457 = _453.z;
    float _466 = ((_436.z - _457) * _388) + _457;
    float _469 = ((((_436.x - _455) * _388) + _455) * 2.0) + (-1.0);
    float _471 = ((((_436.y - _456) * _388) + _456) * 2.0) + (-1.0);
    float _472 = dot(vec2(_469, _471), vec2(_469, _471));
    float _3975 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _477 = sqrt(1.0 - (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))));
    float _480 = fma(_477, _241, fma(_471, _248, _469 * _234));
    float _483 = fma(_477, _242, fma(_471, _249, _469 * _235));
    float _486 = fma(_477, _243, fma(_471, _250, _469 * _236));
    float _490 = inversesqrt(dot(vec3(_480, _483, _486), vec3(_480, _483, _486)));
    vec4 _506 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _534 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _272) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _273) + cbTextureTilingScale._m0[11u].w));
    float _536 = _534.x;
    float _537 = 1.0 - _536;
    float _541 = ((_536 - _537) * cbMtdParam._m0[24u].z) + _537;
    float _543 = (cbMtdParam._m0[19u].x + dot(vec4(_490 * _480, _490 * _483, _490 * _486, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_541 * cbMtdParam._m0[21u].z);
    float _3986 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _544 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
    float _546 = (-0.0) - cbMtdParam._m0[24u].y;
    float _548 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _549 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
    float _556 = _544 - ((_544 * TEXCOORD_8.x) * _549);
    float _557 = _544 - ((_544 * TEXCOORD_8.y) * _549);
    float _558 = _544 - ((_544 * TEXCOORD_8.z) * _549);
    float _565 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _569 = ((isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : min(_565, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _577 = (_569 - (((_541 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _569))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4017 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _578 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _582 = ((_556 * ((_416.x * cbMtdParam._m0[18u].x) - _395)) * _578) + _395;
    float _583 = ((_557 * ((_416.y * cbMtdParam._m0[18u].y) - _396)) * _578) + _396;
    float _584 = ((_558 * ((_416.z * cbMtdParam._m0[18u].z) - _397)) * _578) + _397;
    vec4 _596 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _272) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _273) + cbTextureTilingScale._m0[19u].w));
    float _598 = _596.x;
    float _599 = 1.0 - _598;
    float _626 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_598 - _599) * cbMtdParam._m0[24u].w) + _599) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4028 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _627 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _635 = ((((cbMtdParam._m0[10u].x - _582) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _627) + _582;
    float _636 = ((((cbMtdParam._m0[10u].y - _583) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _627) + _583;
    float _637 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _584)) * _627) + _584;
    vec4 _651 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _272) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _273) + cbTextureTilingScale._m0[15u].w));
    float _658 = (_651.x * 2.0) + (-1.0);
    float _659 = (_651.y * 2.0) + (-1.0);
    float _660 = dot(vec2(_658, _659), vec2(_658, _659));
    float _4039 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _669 = (((_651.z - _466) * _556) * _578) + _466;
    float _672 = ((cbMtdParam._m0[23u].y - _669) * _627) + _669;
    vec4 _691 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _272) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _273) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _697 = (_691.x * 2.0) + (-1.0);
    float _698 = (_691.y * 2.0) + (-1.0);
    float _699 = dot(vec2(_697, _698), vec2(_697, _698));
    float _4050 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _719 = (((cbMtdParam._m0[21u].x * _469) + ((_658 - _469) * _556)) * _578) + _469;
    float _720 = (((cbMtdParam._m0[21u].x * _471) + ((_659 - _471) * _557)) * _578) + _471;
    float _721 = (((sqrt(1.0 - (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0)))) - _477) * _558) * _578) + _477;
    float _732 = (((_697 - _719) + (_719 * cbMtdParam._m0[22u].z)) * _627) + _719;
    float _733 = (((_698 - _720) + (_720 * cbMtdParam._m0[22u].z)) * _627) + _720;
    float _734 = ((sqrt(1.0 - (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0)))) - _721) * _627) + _721;
    float _736 = cbMtdParam._m0[22u].x + _506.w;
    float _739 = fma(_734, _241, fma(_733, _248, _732 * _234));
    float _742 = fma(_734, _242, fma(_733, _249, _732 * _235));
    float _745 = fma(_734, _243, fma(_733, _250, _732 * _236));
    float _749 = inversesqrt(dot(vec3(_739, _742, _745), vec3(_739, _742, _745)));
    float _750 = _749 * _739;
    float _751 = _749 * _742;
    float _752 = _749 * _745;
    float _4061 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _753 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _4072 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _4083 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _4094 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _4105 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _771 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _812 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _822 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _812);
    float _823 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _812);
    float _824 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _812);
    float _828 = inversesqrt(dot(vec3(_822, _823, _824), vec3(_822, _823, _824)));
    float _829 = _822 * _828;
    float _830 = _823 * _828;
    float _831 = _824 * _828;
    vec4 _836 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _838 = _836.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _992 = sqrt(((_822 * _822) + (_823 * _823)) + (_824 * _824));
        float _998 = (cbMatDynParam._m0[5u].x * _992) + cbMatDynParam._m0[5u].y;
        float _4116 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
        float _999 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1003 = (cbMatDynParam._m0[5u].z * _992) + cbMatDynParam._m0[5u].w;
        float _4127 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) - _999)) + _999) < ((_838 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _849 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _850 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _868 = fma(_752, cbSceneParam._m0[5u].z, fma(_751, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _750));
    float _871 = fma(_752, cbSceneParam._m0[6u].z, fma(_751, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _750));
    float _874 = fma(_752, cbSceneParam._m0[7u].z, fma(_751, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _750));
    uint _887 = _253 + 9u;
    uint _888 = _887 + uint(cbMatDynParam._m0[0u].w);
    float _894 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0)))) * cbInstanceData._m0[_888].x;
    float _895 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0)))) * cbInstanceData._m0[_888].y;
    float _896 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0)))) * cbInstanceData._m0[_888].z;
    float _4138 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _897 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
    float _4149 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _898 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
    float _4160 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _899 = isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0));
    vec4 _908 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _849, cbSceneParam._m0[86u].y * _850));
    float _912 = ((isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))) * TEXCOORD_5.w) * _908.x;
    float _913 = dot(vec3(_750, _751, _752), vec3(_829, _830, _831));
    float _916 = _913 * 2.0;
    float _920 = (_916 * _750) - _829;
    float _921 = (_916 * _751) - _830;
    float _922 = (_916 * _752) - _831;
    float _926 = abs(dot(vec3(_829, _830, _831), vec3(_750, _751, _752)));
    float _4171 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _928 = sqrt(_753);
    float _941 = exp2((_928 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_928 * 3.0));
    float _973 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _977 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _981 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1310;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    float _1325;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1035 = fma(_981, cbModelParam._m0[26u].z, fma(_977, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _973));
        float _1039 = fma(_981, cbModelParam._m0[27u].z, fma(_977, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _973));
        float _1043 = fma(_981, cbModelParam._m0[28u].z, fma(_977, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _973));
        float _1068 = _973 + _750;
        float _1069 = _977 + _751;
        float _1070 = _981 + _752;
        float _1080 = fma(_1070, cbModelParam._m0[26u].z, fma(_1069, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1068)) - _1035;
        float _1081 = fma(_1070, cbModelParam._m0[27u].z, fma(_1069, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1068)) - _1039;
        float _1082 = fma(_1070, cbModelParam._m0[28u].z, fma(_1069, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1068)) - _1043;
        float _1086 = inversesqrt(dot(vec3(_1080, _1081, _1082), vec3(_1080, _1081, _1082)));
        float _1099 = ((_1086 * _1080) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1035 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1100 = ((_1086 * _1081) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1039 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1101 = ((_1086 * _1082) / cbModelParam._m0[34u].z) + ((((((_1043 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1104 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1099, _1100, _1101), 0.0);
        vec4 _1111 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1099, _1100, _1101), 0.0);
        vec4 _1118 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1099, _1100, _1101), 0.0);
        vec4 _1125 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1099, _1100, _1101), 0.0);
        float _1138 = exp2((_1104.w + (-0.5)) * 20.0) * 2.0;
        float _1139 = _1138 * (_1104.x + (-0.5));
        float _1140 = _1138 * (_1104.y + (-0.5));
        float _1141 = _1138 * (_1104.z + (-0.5));
        float _1148 = exp2((_1111.w + (-0.5)) * 20.0) * 2.0;
        float _1149 = _1148 * (_1111.x + (-0.5));
        float _1150 = _1148 * (_1111.y + (-0.5));
        float _1151 = _1148 * (_1111.z + (-0.5));
        float _1158 = exp2((_1118.w + (-0.5)) * 20.0) * 2.0;
        float _1159 = _1158 * (_1118.x + (-0.5));
        float _1160 = _1158 * (_1118.y + (-0.5));
        float _1161 = _1158 * (_1118.z + (-0.5));
        float _1168 = exp2((_1125.w + (-0.5)) * 20.0) * 2.0;
        float _1169 = _1168 * (_1125.x + (-0.5));
        float _1170 = _1168 * (_1125.y + (-0.5));
        float _1171 = _1168 * (_1125.z + (-0.5));
        float _1172 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1173 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1174 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1175 = _1139 * 0.5;
        float _1176 = _1149 * 0.5;
        float _1177 = _1159 * 0.5;
        float _1178 = dot(vec3(_1175, _1176, _1177), vec3(_1175, _1176, _1177));
        float _1183 = (_1178 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1178);
        float _1192 = (dot(vec3(_750, _751, _752), vec3(_1183 * _1175, _1183 * _1176, _1183 * _1177)) + 1.0) * 0.5;
        float _4197 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1202 = sqrt(((_1176 * _1176) + (_1175 * _1175)) + (_1177 * _1177)) / (_1172 + 9.9999997473787516355514526367188e-06);
        float _4208 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _4219 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0))) * (_1204 + 1.0))) + _1209) * _1172;
        float _1219 = _1140 * 0.5;
        float _1220 = _1150 * 0.5;
        float _1221 = _1160 * 0.5;
        float _1222 = dot(vec3(_1219, _1220, _1221), vec3(_1219, _1220, _1221));
        float _1227 = (_1222 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1222);
        float _1235 = (dot(vec3(_750, _751, _752), vec3(_1227 * _1219, _1227 * _1220, _1227 * _1221)) + 1.0) * 0.5;
        float _4230 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1244 = sqrt(((_1220 * _1220) + (_1219 * _1219)) + (_1221 * _1221)) / (_1173 + 9.9999997473787516355514526367188e-06);
        float _4241 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
        float _1246 = _1245 * 2.0;
        float _1250 = (1.0 - _1245) / (_1245 + 1.0);
        float _4252 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
        float _1260 = ((((1.0 - _1251) * (_1246 + 2.0)) * exp2(log2(isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0))) * (_1246 + 1.0))) + _1251) * _1173;
        float _1261 = _1141 * 0.5;
        float _1262 = _1151 * 0.5;
        float _1263 = _1161 * 0.5;
        float _1264 = dot(vec3(_1261, _1262, _1263), vec3(_1261, _1262, _1263));
        float _1269 = (_1264 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1264);
        float _1277 = (dot(vec3(_750, _751, _752), vec3(_1269 * _1261, _1269 * _1262, _1269 * _1263)) + 1.0) * 0.5;
        float _4263 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1286 = sqrt(((_1262 * _1262) + (_1261 * _1261)) + (_1263 * _1263)) / (_1174 + 9.9999997473787516355514526367188e-06);
        float _4274 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1287 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
        float _1288 = _1287 * 2.0;
        float _1292 = (1.0 - _1287) / (_1287 + 1.0);
        float _4285 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1293 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
        float _1302 = ((((1.0 - _1293) * (_1288 + 2.0)) * exp2(log2(isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0))) * (_1288 + 1.0))) + _1293) * _1174;
        _1310 = _1141;
        _1312 = _1140;
        _1313 = _1139;
        _1314 = _1151;
        _1315 = _1150;
        _1316 = _1149;
        _1317 = _1161;
        _1318 = _1160;
        _1319 = _1159;
        _1320 = _1174;
        _1321 = _1173;
        _1322 = _1172;
        _1323 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
        _1324 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0)));
        _1325 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0)));
    }
    else
    {
        _1310 = _1311;
        _1312 = _1311;
        _1313 = _1311;
        _1314 = _1311;
        _1315 = _1311;
        _1316 = _1311;
        _1317 = _1311;
        _1318 = _1311;
        _1319 = _1311;
        _1320 = _1311;
        _1321 = _1311;
        _1322 = _1311;
        _1323 = 0.0;
        _1324 = 0.0;
        _1325 = 0.0;
    }
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1353 = fma(_981, cbModelParam._m0[30u].z, fma(_977, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _973));
        float _1357 = fma(_981, cbModelParam._m0[31u].z, fma(_977, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _973));
        float _1361 = fma(_981, cbModelParam._m0[32u].z, fma(_977, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _973));
        float _1384 = _973 + _750;
        float _1385 = _977 + _751;
        float _1386 = _981 + _752;
        float _1396 = fma(_1386, cbModelParam._m0[30u].z, fma(_1385, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1384)) - _1353;
        float _1397 = fma(_1386, cbModelParam._m0[31u].z, fma(_1385, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1384)) - _1357;
        float _1398 = fma(_1386, cbModelParam._m0[32u].z, fma(_1385, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1384)) - _1361;
        float _1402 = inversesqrt(dot(vec3(_1396, _1397, _1398), vec3(_1396, _1397, _1398)));
        float _1415 = ((_1402 * _1396) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1353 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1416 = ((_1402 * _1397) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1357 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1417 = ((_1402 * _1398) / cbModelParam._m0[35u].z) + ((((((_1361 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        float _1452 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1453 = _1452 * (_1419.x + (-0.5));
        float _1454 = _1452 * (_1419.y + (-0.5));
        float _1455 = _1452 * (_1419.z + (-0.5));
        float _1462 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1463 = _1462 * (_1426.x + (-0.5));
        float _1464 = _1462 * (_1426.y + (-0.5));
        float _1465 = _1462 * (_1426.z + (-0.5));
        float _1472 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1473 = _1472 * (_1433.x + (-0.5));
        float _1474 = _1472 * (_1433.y + (-0.5));
        float _1475 = _1472 * (_1433.z + (-0.5));
        float _1482 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1483 = _1482 * (_1440.x + (-0.5));
        float _1484 = _1482 * (_1440.y + (-0.5));
        float _1485 = _1482 * (_1440.z + (-0.5));
        float _1486 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = _1453 * 0.5;
        float _1490 = _1463 * 0.5;
        float _1491 = _1473 * 0.5;
        float _1492 = dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491));
        float _1497 = (_1492 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1492);
        float _1505 = (dot(vec3(_750, _751, _752), vec3(_1497 * _1489, _1497 * _1490, _1497 * _1491)) + 1.0) * 0.5;
        float _4326 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1514 = sqrt(((_1490 * _1490) + (_1489 * _1489)) + (_1491 * _1491)) / (_1486 + 9.9999997473787516355514526367188e-06);
        float _4337 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _1516 = _1515 * 2.0;
        float _1520 = (1.0 - _1515) / (_1515 + 1.0);
        float _4348 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _1530 = ((((1.0 - _1521) * (_1516 + 2.0)) * exp2(log2(isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0))) * (_1516 + 1.0))) + _1521) * _1486;
        float _1531 = _1454 * 0.5;
        float _1532 = _1464 * 0.5;
        float _1533 = _1474 * 0.5;
        float _1534 = dot(vec3(_1531, _1532, _1533), vec3(_1531, _1532, _1533));
        float _1539 = (_1534 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1534);
        float _1547 = (dot(vec3(_750, _751, _752), vec3(_1539 * _1531, _1539 * _1532, _1539 * _1533)) + 1.0) * 0.5;
        float _4359 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1556 = sqrt(((_1532 * _1532) + (_1531 * _1531)) + (_1533 * _1533)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4370 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1557 = isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0));
        float _1558 = _1557 * 2.0;
        float _1562 = (1.0 - _1557) / (_1557 + 1.0);
        float _4381 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1563 = isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0));
        float _1572 = ((((1.0 - _1563) * (_1558 + 2.0)) * exp2(log2(isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0))) * (_1558 + 1.0))) + _1563) * _1487;
        float _1573 = _1455 * 0.5;
        float _1574 = _1465 * 0.5;
        float _1575 = _1475 * 0.5;
        float _1576 = dot(vec3(_1573, _1574, _1575), vec3(_1573, _1574, _1575));
        float _1581 = (_1576 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1576);
        float _1589 = (dot(vec3(_750, _751, _752), vec3(_1581 * _1573, _1581 * _1574, _1581 * _1575)) + 1.0) * 0.5;
        float _4392 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1598 = sqrt(((_1574 * _1574) + (_1573 * _1573)) + (_1575 * _1575)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4403 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1599 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
        float _1600 = _1599 * 2.0;
        float _1604 = (1.0 - _1599) / (_1599 + 1.0);
        float _4414 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1605 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
        float _1614 = ((((1.0 - _1605) * (_1600 + 2.0)) * exp2(log2(isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0))) * (_1600 + 1.0))) + _1605) * _1488;
        _1622 = _1455;
        _1623 = _1454;
        _1624 = _1453;
        _1625 = _1465;
        _1626 = _1464;
        _1627 = _1463;
        _1628 = _1475;
        _1629 = _1474;
        _1630 = _1473;
        _1631 = _1488;
        _1632 = _1487;
        _1633 = _1486;
        _1634 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)));
        _1635 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0)));
        _1636 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)));
    }
    else
    {
        _1622 = _1311;
        _1623 = _1311;
        _1624 = _1311;
        _1625 = _1311;
        _1626 = _1311;
        _1627 = _1311;
        _1628 = _1311;
        _1629 = _1311;
        _1630 = _1311;
        _1631 = _1311;
        _1632 = _1311;
        _1633 = _1311;
        _1634 = 0.0;
        _1635 = 0.0;
        _1636 = 0.0;
    }
    float _1646 = (cbModelParam._m0[1u].x * (_1634 - _1323)) + _1323;
    float _1647 = (cbModelParam._m0[1u].x * (_1635 - _1324)) + _1324;
    float _1648 = (cbModelParam._m0[1u].x * (_1636 - _1325)) + _1325;
    float _1669 = fma(_1648, cbSceneParam._m0[89u].z, fma(_1647, cbSceneParam._m0[89u].y, _1646 * cbSceneParam._m0[89u].x));
    float _1672 = fma(_1648, cbSceneParam._m0[90u].z, fma(_1647, cbSceneParam._m0[90u].y, _1646 * cbSceneParam._m0[90u].x));
    float _1675 = fma(_1648, cbSceneParam._m0[91u].z, fma(_1647, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1646));
    float _1690 = _920 * 0.5;
    float _1691 = _921 * 0.5;
    float _1692 = _922 * 0.5;
    float _1693 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1624, _1627, _1630, _1633));
    float _1696 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1623, _1626, _1629, _1632));
    float _1699 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1622, _1625, _1628, _1631));
    float _1733;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1706 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1310, _1314, _1317, _1320));
        float _1710 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1312, _1315, _1318, _1321));
        float _1714 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1313, _1316, _1319, _1322));
        float _1721 = dot(vec4(cbModelParam._m0[39u]), vec4(_1690, _1691, _1692, 1.0));
        _1733 = dot(vec3(isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)), isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)), isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1721) ? 0.0 : (isnan(0.0) ? _1721 : max(0.0, _1721))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1733 = 1.0;
    }
    float _1744;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1735 = dot(vec4(cbModelParam._m0[40u]), vec4(_1690, _1691, _1692, 1.0));
        _1744 = dot(vec3(isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)), isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)), isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1735) ? 0.0 : (isnan(0.0) ? _1735 : max(0.0, _1735))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1744 = 1.0;
    }
    float _1748 = (_1744 * cbModelParam._m0[1u].x) + (_1733 * (1.0 - cbModelParam._m0[1u].x));
    float _1758 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _753);
    float _1759 = isnan(_1758) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1758 : min(cbModelParam._m0[25u].z, _1758));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1806 = fma(_981, cbModelParam._m0[13u].z, fma(_977, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _973)) + cbModelParam._m0[13u].w;
        float _1810 = fma(_981, cbModelParam._m0[14u].z, fma(_977, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _973)) + cbModelParam._m0[14u].w;
        float _1814 = fma(_981, cbModelParam._m0[15u].z, fma(_977, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _973)) + cbModelParam._m0[15u].w;
        float _1817 = fma(_922, cbModelParam._m0[13u].z, fma(_921, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _920));
        float _1820 = fma(_922, cbModelParam._m0[14u].z, fma(_921, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _920));
        float _1823 = fma(_922, cbModelParam._m0[15u].z, fma(_921, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _920));
        float _1851;
        if (_1817 > 0.0)
        {
            _1851 = abs((1.0 - _1806) / _1817);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1806 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1851 = frontier_phi_17_15_ladder;
        }
        float _2020;
        if (_1820 > 0.0)
        {
            _2020 = abs((1.0 - _1810) / _1820);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1810 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2020 = frontier_phi_26_22_ladder;
        }
        float _2315;
        if (_1823 > 0.0)
        {
            _2315 = abs((1.0 - _1814) / _1823);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1823 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1814 + 1.0) / _1823);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2315 = frontier_phi_38_33_ladder;
        }
        float _2317 = isnan(_2020) ? _1851 : (isnan(_1851) ? _2020 : min(_1851, _2020));
        float _2318 = isnan(_2315) ? _2317 : (isnan(_2317) ? _2315 : min(_2317, _2315));
        float _2322 = (_2318 * _1817) + _1806;
        float _2323 = (_2318 * _1820) + _1810;
        float _2324 = (_2318 * _1823) + _1814;
        float _2325 = _2318 * 9.9999997473787516355514526367188e-05;
        float _2327 = (-1.0) - _2325;
        float _2329 = _2325 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2324 > _2329) || ((_2324 < _2327) || ((_2323 > _2329) || ((_2323 < _2327) || ((_2322 < _2327) || (_2322 > _2329))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2469 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2324, cbModelParam._m0[9u].z, fma(_2323, cbModelParam._m0[9u].y, _2322 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2324, cbModelParam._m0[10u].z, fma(_2323, cbModelParam._m0[10u].y, _2322 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2324, cbModelParam._m0[11u].z, fma(_2323, cbModelParam._m0[11u].y, _2322 * cbModelParam._m0[11u].x))), _1759);
            frontier_phi_16_38_ladder = _2469.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2469.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2469.x * cbModelParam._m0[1u].y;
        }
        _1839 = frontier_phi_16_38_ladder_2;
        _1841 = frontier_phi_16_38_ladder_1;
        _1843 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1827 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_920, _921, _922), _1759);
        _1839 = _1827.x * cbModelParam._m0[1u].y;
        _1841 = _1827.y * cbModelParam._m0[1u].y;
        _1843 = _1827.z * cbModelParam._m0[1u].y;
    }
    float _1847 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _753);
    float _1848 = isnan(_1847) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1847 : min(cbModelParam._m0[25u].w, _1847));
    float _1937;
    float _1939;
    float _1941;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1901 = fma(_981, cbModelParam._m0[21u].z, fma(_977, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _973)) + cbModelParam._m0[21u].w;
        float _1905 = fma(_981, cbModelParam._m0[22u].z, fma(_977, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _973)) + cbModelParam._m0[22u].w;
        float _1909 = fma(_981, cbModelParam._m0[23u].z, fma(_977, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _973)) + cbModelParam._m0[23u].w;
        float _1912 = fma(_922, cbModelParam._m0[21u].z, fma(_921, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _920));
        float _1915 = fma(_922, cbModelParam._m0[22u].z, fma(_921, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _920));
        float _1918 = fma(_922, cbModelParam._m0[23u].z, fma(_921, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _920));
        float _2025;
        if (_1912 > 0.0)
        {
            _2025 = abs((1.0 - _1901) / _1912);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1912 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1901 + 1.0) / _1912);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2025 = frontier_phi_28_24_ladder;
        }
        float _2342;
        if (_1915 > 0.0)
        {
            _2342 = abs((1.0 - _1905) / _1915);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1915 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1905 + 1.0) / _1915);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2342 = frontier_phi_40_35_ladder;
        }
        float _2669;
        if (_1918 > 0.0)
        {
            _2669 = abs((1.0 - _1909) / _1918);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1918 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1909 + 1.0) / _1918);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2669 = frontier_phi_50_47_ladder;
        }
        float _2671 = isnan(_2342) ? _2025 : (isnan(_2025) ? _2342 : min(_2025, _2342));
        float _2672 = isnan(_2669) ? _2671 : (isnan(_2671) ? _2669 : min(_2671, _2669));
        float _2676 = (_2672 * _1912) + _1901;
        float _2677 = (_2672 * _1915) + _1905;
        float _2678 = (_2672 * _1918) + _1909;
        float _2679 = _2672 * 9.9999997473787516355514526367188e-05;
        float _2680 = (-1.0) - _2679;
        float _2682 = _2679 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2678 > _2682) || ((_2678 < _2680) || ((_2677 > _2682) || ((_2677 < _2680) || ((_2676 < _2680) || (_2676 > _2682))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2796 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2678, cbModelParam._m0[17u].z, fma(_2677, cbModelParam._m0[17u].y, _2676 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2678, cbModelParam._m0[18u].z, fma(_2677, cbModelParam._m0[18u].y, _2676 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2678, cbModelParam._m0[19u].z, fma(_2677, cbModelParam._m0[19u].y, _2676 * cbModelParam._m0[19u].x))), _1848);
            frontier_phi_25_50_ladder = _2796.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2796.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2796.x * cbModelParam._m0[1u].z;
        }
        _1937 = frontier_phi_25_50_ladder_2;
        _1939 = frontier_phi_25_50_ladder_1;
        _1941 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1921 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_920, _921, _922), _1848);
        _1937 = _1921.x * cbModelParam._m0[1u].z;
        _1939 = _1921.y * cbModelParam._m0[1u].z;
        _1941 = _1921.z * cbModelParam._m0[1u].z;
    }
    float _1953 = ((((1.0 - _941) * ((_928 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_941 * _928)) * _912;
    float _1954 = _1953 * ((cbModelParam._m0[1u].w * (_1937 - _1839)) + _1839);
    float _1955 = _1953 * ((cbModelParam._m0[1u].w * (_1939 - _1841)) + _1841);
    float _1956 = _1953 * ((cbModelParam._m0[1u].w * (_1941 - _1843)) + _1843);
    float _1959 = fma(_1956, cbSceneParam._m0[89u].z, fma(_1955, cbSceneParam._m0[89u].y, _1954 * cbSceneParam._m0[89u].x));
    float _1962 = fma(_1956, cbSceneParam._m0[90u].z, fma(_1955, cbSceneParam._m0[90u].y, _1954 * cbSceneParam._m0[90u].x));
    float _1965 = fma(_1956, cbSceneParam._m0[91u].z, fma(_1955, cbSceneParam._m0[91u].y, _1954 * cbSceneParam._m0[91u].x));
    float _1999 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2003 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2007 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2011 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2012 = _1999 / _2011;
    float _2013 = _2003 / _2011;
    float _2014 = _2007 / _2011;
    float _2161;
    float _2162;
    float _2163;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2041 = ((uint(_2014 > cbSceneParam._m0[59u].y) + uint(_2014 > cbSceneParam._m0[59u].x)) + uint(_2014 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2042 = _2041 + 43u;
        uint _2050 = _2041 + 44u;
        uint _2058 = _2041 + 45u;
        uint _2066 = _2041 + 46u;
        float _2077 = fma(_2011, cbSceneParam._m0[_2042].w, fma(_2007, cbSceneParam._m0[_2042].z, fma(_2003, cbSceneParam._m0[_2042].y, _1999 * cbSceneParam._m0[_2042].x)));
        float _2081 = fma(_2011, cbSceneParam._m0[_2050].w, fma(_2007, cbSceneParam._m0[_2050].z, fma(_2003, cbSceneParam._m0[_2050].y, _1999 * cbSceneParam._m0[_2050].x)));
        float _2089 = fma(_2011, cbSceneParam._m0[_2066].w, fma(_2007, cbSceneParam._m0[_2066].z, fma(_2003, cbSceneParam._m0[_2066].y, _1999 * cbSceneParam._m0[_2066].x)));
        float _2094 = cbSceneParam._m0[33u].z * _2089;
        float _2096 = cbSceneParam._m0[33u].w * _2089;
        float _2099 = fma(_2011, cbSceneParam._m0[_2058].w, fma(_2007, cbSceneParam._m0[_2058].z, fma(_2003, cbSceneParam._m0[_2058].y, _1999 * cbSceneParam._m0[_2058].x))) / _2089;
        float _2147 = (cbSceneParam._m0[33u].x - sqrt(((_2013 * _2013) + (_2012 * _2012)) + (_2014 * _2014))) * cbSceneParam._m0[33u].y;
        float _4540 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
        float _2154 = (isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2094 + _2077) / _2089, (_2096 + _2081) / _2089), _2099), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2096 + _2077) / _2089, (_2081 - _2094) / _2089), _2099), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2077 - _2094) / _2089, (_2081 - _2096) / _2089), _2099), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2077 - _2096) / _2089, (_2094 + _2081) / _2089), _2099), 0.0)).x), vec4(0.25)));
        _2161 = 1.0 - (_2154 * cbSceneParam._m0[34u].x);
        _2162 = 1.0 - (_2154 * cbSceneParam._m0[34u].y);
        _2163 = 1.0 - (_2154 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2161 = 1.0;
        _2162 = 1.0;
        _2163 = 1.0;
    }
    float _2227;
    float _2229;
    float _2231;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2215 = fma(_2011, cbSceneParam._m0[63u].w, fma(_2007, cbSceneParam._m0[63u].z, fma(_2003, cbSceneParam._m0[63u].y, _1999 * cbSceneParam._m0[63u].x)));
        float _2216 = fma(_2011, cbSceneParam._m0[60u].w, fma(_2007, cbSceneParam._m0[60u].z, fma(_2003, cbSceneParam._m0[60u].y, _1999 * cbSceneParam._m0[60u].x))) / _2215;
        float _2217 = fma(_2011, cbSceneParam._m0[61u].w, fma(_2007, cbSceneParam._m0[61u].z, fma(_2003, cbSceneParam._m0[61u].y, _1999 * cbSceneParam._m0[61u].x))) / _2215;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2216 >= cbSceneParam._m0[64u].x) && (_2217 >= cbSceneParam._m0[64u].y)) && (_2216 <= cbSceneParam._m0[64u].z)) && (_2217 <= cbSceneParam._m0[64u].w))
        {
            float _2355 = fma(_2011, cbSceneParam._m0[62u].w, fma(_2007, cbSceneParam._m0[62u].z, fma(_2003, cbSceneParam._m0[62u].y, _1999 * cbSceneParam._m0[62u].x))) / _2215;
            float _2359 = isnan(cbSceneParam._m0[41u].w) ? _2355 : (isnan(_2355) ? cbSceneParam._m0[41u].w : max(_2355, cbSceneParam._m0[41u].w));
            float _2402 = (cbSceneParam._m0[33u].x - sqrt(((_2013 * _2013) + (_2012 * _2012)) + (_2014 * _2014))) * cbSceneParam._m0[33u].y;
            float _4556 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
            float _2409 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2216, cbSceneParam._m0[33u].w + _2217), _2359), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2216, _2217 - cbSceneParam._m0[33u].z), _2359), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2216 - cbSceneParam._m0[33u].z, _2217 - cbSceneParam._m0[33u].w), _2359), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2216 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2217), _2359), 0.0)).x), vec4(0.25)));
            float _2413 = 1.0 - (_2409 * cbSceneParam._m0[34u].x);
            float _2414 = 1.0 - (_2409 * cbSceneParam._m0[34u].y);
            float _2415 = 1.0 - (_2409 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2415) ? _2163 : (isnan(_2163) ? _2415 : min(_2163, _2415));
            frontier_phi_37_36_ladder_1 = isnan(_2414) ? _2162 : (isnan(_2162) ? _2414 : min(_2162, _2414));
            frontier_phi_37_36_ladder_2 = isnan(_2413) ? _2161 : (isnan(_2161) ? _2413 : min(_2161, _2413));
        }
        else
        {
            frontier_phi_37_36_ladder = _2163;
            frontier_phi_37_36_ladder_1 = _2162;
            frontier_phi_37_36_ladder_2 = _2161;
        }
        _2227 = frontier_phi_37_36_ladder_2;
        _2229 = frontier_phi_37_36_ladder_1;
        _2231 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2227 = _2161;
        _2229 = _2162;
        _2231 = _2163;
    }
    uvec4 _2236 = floatBitsToUint(cbInstanceData._m0[_253 + 5u]);
    uint _2238 = _2236.x * 14u;
    uint _2239 = _2238 + 13u;
    float _2246 = _912 + (-1.0);
    float _2251 = (cbLight._m0[_2239].x * _2246) + 1.0;
    float _2252 = (cbLight._m0[_2239].y * _2246) + 1.0;
    float _2253 = (cbLight._m0[_2239].z * _2246) + 1.0;
    float _2254 = (cbLight._m0[_2239].w * _2246) + 1.0;
    uint _2255 = _2238 + 5u;
    float _2261 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
    uint _2265 = _2238 + 4u;
    float _2274 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
    uint _2278 = _2238 | 1u;
    float _2289 = dot(vec3(cbLight._m0[_2238].xyz), vec3(_750, _751, _752));
    float _2292 = dot(vec3(cbLight._m0[_2278].xyz), vec3(_750, _751, _752));
    float _4592 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
    float _4603 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _2297 = (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0))) * 0.3183098733425140380859375;
    float _2299 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * 0.3183098733425140380859375;
    float _2306 = ((cbLight._m0[_2255].x * _2261) * _2299) + (((cbLight._m0[_2265].x * _2227) * _2274) * _2297);
    float _2307 = ((_2261 * cbLight._m0[_2255].y) * _2299) + (((cbLight._m0[_2265].y * _2229) * _2274) * _2297);
    float _2308 = ((_2261 * cbLight._m0[_2255].z) * _2299) + (((cbLight._m0[_2265].z * _2231) * _2274) * _2297);
    uvec4 _2312 = floatBitsToUint(cbLight._m0[_2238 + 12u]);
    bool _2314 = _2312.x == 0u;
    float _2416;
    float _2418;
    float _2420;
    if (_2314)
    {
        _2416 = _2306;
        _2418 = _2307;
        _2420 = _2308;
    }
    else
    {
        uint _2424 = _2238 + 6u;
        float _2440 = (dot(vec3(cbLight._m0[_2238 + 2u].xyz), vec3(_750, _751, _752)) * 0.5) + 0.5;
        float _2441 = _2440 * _2440;
        float _4614 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
        float _2442 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
        float _2443 = isnan(1.0) ? _2253 : (isnan(_2253) ? 1.0 : min(_2253, 1.0));
        _2416 = (((cbLight._m0[_2424].x * 0.3183098733425140380859375) * _2442) * _2443) + _2306;
        _2418 = (((cbLight._m0[_2424].y * 0.3183098733425140380859375) * _2442) * _2443) + _2307;
        _2420 = (((cbLight._m0[_2424].z * 0.3183098733425140380859375) * _2442) * _2443) + _2308;
    }
    bool _2423 = _2312.y == 0u;
    float _2478;
    float _2480;
    float _2482;
    if (_2423)
    {
        _2478 = _2416;
        _2480 = _2418;
        _2482 = _2420;
    }
    else
    {
        uint _2640 = _2238 + 7u;
        float _2656 = (dot(vec3(cbLight._m0[_2238 + 3u].xyz), vec3(_750, _751, _752)) * 0.5) + 0.5;
        float _2657 = _2656 * _2656;
        float _4630 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
        float _2658 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2659 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
        _2478 = (((cbLight._m0[_2640].x * 0.3183098733425140380859375) * _2658) * _2659) + _2416;
        _2480 = (((cbLight._m0[_2640].y * 0.3183098733425140380859375) * _2658) * _2659) + _2418;
        _2482 = (((cbLight._m0[_2640].z * 0.3183098733425140380859375) * _2658) * _2659) + _2420;
    }
    uint _2485 = _2238 + 8u;
    float _2498 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2238].w)) * _753) * 0.949999988079071044921875);
    float _2499 = _2498 * _2498;
    float _2500 = cbLight._m0[_2238].x + _829;
    float _2501 = cbLight._m0[_2238].y + _830;
    float _2502 = cbLight._m0[_2238].z + _831;
    float _2506 = inversesqrt(dot(vec3(_2500, _2501, _2502), vec3(_2500, _2501, _2502)));
    float _2507 = _2506 * _2500;
    float _2508 = _2506 * _2501;
    float _2509 = _2506 * _2502;
    float _2510 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_2238].xyz));
    float _4646 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2513 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
    float _4657 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    float _2514 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
    float _2515 = dot(vec3(_750, _751, _752), vec3(_2507, _2508, _2509));
    float _4668 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
    float _2518 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
    float _2519 = dot(vec3(cbLight._m0[_2238].xyz), vec3(_2507, _2508, _2509));
    float _4679 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
    float _2523 = _2499 * _2499;
    float _2527 = ((_2518 * _2518) * (_2523 + (-1.0))) + 1.0;
    float _2538 = (exp2(log2(1.0 - (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2539 = 1.0 - _2499;
    float _2550 = (0.5 / (((_2514 * ((_2513 * _2539) + _2499)) + 9.9999999392252902907785028219223e-09) + (((_2514 * _2539) + _2499) * _2513))) * _2513;
    float _4690 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
    float _2552 = (isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0))) * (_2523 / ((_2527 * _2527) * 3.141590118408203125));
    uint _2566 = _2238 + 9u;
    float _2577 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2278].w)) * _753) * 0.949999988079071044921875);
    float _2578 = _2577 * _2577;
    float _2579 = cbLight._m0[_2278].x + _829;
    float _2580 = cbLight._m0[_2278].y + _830;
    float _2581 = cbLight._m0[_2278].z + _831;
    float _2585 = inversesqrt(dot(vec3(_2579, _2580, _2581), vec3(_2579, _2580, _2581)));
    float _2586 = _2585 * _2579;
    float _2587 = _2585 * _2580;
    float _2588 = _2585 * _2581;
    float _2589 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_2278].xyz));
    float _4701 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
    float _2592 = isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0));
    float _2593 = dot(vec3(_750, _751, _752), vec3(_2586, _2587, _2588));
    float _4712 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2596 = isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0));
    float _2597 = dot(vec3(cbLight._m0[_2278].xyz), vec3(_2586, _2587, _2588));
    float _4723 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
    float _2601 = _2578 * _2578;
    float _2605 = ((_2596 * _2596) * (_2601 + (-1.0))) + 1.0;
    float _2614 = (exp2(log2(1.0 - (isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2615 = 1.0 - _2578;
    float _2625 = (0.5 / (((_2514 * ((_2592 * _2615) + _2578)) + 9.9999999392252902907785028219223e-09) + (((_2514 * _2615) + _2578) * _2592))) * _2592;
    float _4734 = isnan(0.0) ? _2625 : (isnan(_2625) ? 0.0 : max(_2625, 0.0));
    float _2627 = (isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0))) * (_2601 / ((_2605 * _2605) * 3.141590118408203125));
    float _2637 = (((_2614 * cbLight._m0[_2566].x) * _2627) * _2261) + ((((cbLight._m0[_2485].x * _2227) * _2538) * _2552) * _2274);
    float _2638 = (((_2614 * cbLight._m0[_2566].y) * _2627) * _2261) + ((((cbLight._m0[_2485].y * _2229) * _2538) * _2552) * _2274);
    float _2639 = (((_2614 * cbLight._m0[_2566].z) * _2627) * _2261) + ((((cbLight._m0[_2485].z * _2231) * _2538) * _2552) * _2274);
    float _2695;
    float _2697;
    float _2699;
    if (_2314)
    {
        _2695 = _2637;
        _2697 = _2638;
        _2699 = _2639;
    }
    else
    {
        uint _2701 = _2238 + 2u;
        uint _2705 = _2238 + 10u;
        float _2719 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2701].w)) * _753) * 0.949999988079071044921875);
        float _2720 = _2719 * _2719;
        float _2721 = cbLight._m0[_2701].x + _829;
        float _2722 = cbLight._m0[_2701].y + _830;
        float _2723 = cbLight._m0[_2701].z + _831;
        float _2727 = inversesqrt(dot(vec3(_2721, _2722, _2723), vec3(_2721, _2722, _2723)));
        float _2728 = _2727 * _2721;
        float _2729 = _2727 * _2722;
        float _2730 = _2727 * _2723;
        float _2731 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_2701].xyz));
        float _4745 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2734 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
        float _2735 = dot(vec3(_750, _751, _752), vec3(_2728, _2729, _2730));
        float _4756 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
        float _2738 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
        float _2739 = dot(vec3(cbLight._m0[_2701].xyz), vec3(_2728, _2729, _2730));
        float _4767 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
        float _2743 = _2720 * _2720;
        float _2747 = ((_2738 * _2738) * (_2743 + (-1.0))) + 1.0;
        float _2756 = (exp2(log2(1.0 - (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2757 = 1.0 - _2720;
        float _2767 = (0.5 / (((_2514 * ((_2734 * _2757) + _2720)) + 9.9999999392252902907785028219223e-09) + (((_2514 * _2757) + _2720) * _2734))) * _2734;
        float _4778 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
        float _2769 = (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * (_2743 / ((_2747 * _2747) * 3.141590118408203125));
        float _2770 = isnan(1.0) ? _2253 : (isnan(_2253) ? 1.0 : min(_2253, 1.0));
        _2695 = (((_2756 * cbLight._m0[_2705].x) * _2769) * _2770) + _2637;
        _2697 = (((_2756 * cbLight._m0[_2705].y) * _2769) * _2770) + _2638;
        _2699 = (((_2756 * cbLight._m0[_2705].z) * _2769) * _2770) + _2639;
    }
    float _2801;
    float _2803;
    float _2805;
    if (_2423)
    {
        _2801 = _2695;
        _2803 = _2697;
        _2805 = _2699;
    }
    else
    {
        uint _2812 = _2238 + 3u;
        uint _2816 = _2238 + 11u;
        float _2830 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2812].w)) * _753) * 0.949999988079071044921875);
        float _2831 = _2830 * _2830;
        float _2832 = cbLight._m0[_2812].x + _829;
        float _2833 = cbLight._m0[_2812].y + _830;
        float _2834 = cbLight._m0[_2812].z + _831;
        float _2838 = inversesqrt(dot(vec3(_2832, _2833, _2834), vec3(_2832, _2833, _2834)));
        float _2839 = _2838 * _2832;
        float _2840 = _2838 * _2833;
        float _2841 = _2838 * _2834;
        float _2842 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_2812].xyz));
        float _4794 = isnan(0.0) ? _2842 : (isnan(_2842) ? 0.0 : max(_2842, 0.0));
        float _2845 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
        float _2846 = dot(vec3(_750, _751, _752), vec3(_2839, _2840, _2841));
        float _4805 = isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0));
        float _2849 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
        float _2850 = dot(vec3(cbLight._m0[_2812].xyz), vec3(_2839, _2840, _2841));
        float _4816 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
        float _2854 = _2831 * _2831;
        float _2858 = ((_2849 * _2849) * (_2854 + (-1.0))) + 1.0;
        float _2867 = (exp2(log2(1.0 - (isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2868 = 1.0 - _2831;
        float _2878 = (0.5 / (((_2514 * ((_2845 * _2868) + _2831)) + 9.9999999392252902907785028219223e-09) + (((_2514 * _2868) + _2831) * _2845))) * _2845;
        float _4827 = isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0));
        float _2880 = (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0))) * (_2854 / ((_2858 * _2858) * 3.141590118408203125));
        float _2881 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
        _2801 = (((_2867 * cbLight._m0[_2816].x) * _2880) * _2881) + _2695;
        _2803 = (((_2867 * cbLight._m0[_2816].y) * _2880) * _2881) + _2697;
        _2805 = (((_2867 * cbLight._m0[_2816].z) * _2880) * _2881) + _2699;
    }
    float _2947;
    float _2949;
    float _2951;
    float _2953;
    float _2955;
    float _2957;
    if (_2236.y == 0u)
    {
        uvec4 _2902 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2903 = _2902.x;
        uint _2914 = uint((float(_2902.y) * floor(float(uint(cbSceneParam._m0[85u].y * _850) / _2903))) + floor(float(uint(cbSceneParam._m0[85u].x * _849) / _2903)));
        float _2924 = (log2(_2014 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2925 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
        uint _2928 = uint(isnan(14.0) ? _2925 : (isnan(_2925) ? 14.0 : min(_2925, 14.0)));
        uvec4 _2933 = texelFetch(g_lightClusterGridBuffer, int(((_2928 << 2u) + (_2914 << 6u)) >> 2u));
        uint _2934 = _2933.x;
        uint _2935 = _2902.z;
        float _3014;
        float _3016;
        float _3018;
        float _3020;
        float _3022;
        float _3024;
        if (((((1u << ((_2935 >> 4u) & 15u)) + 4294967295u) & _2934) == 0u) || ((_2935 & 240u) == 0u))
        {
            _3014 = 0.0;
            _3016 = 0.0;
            _3018 = 0.0;
            _3020 = 0.0;
            _3022 = 0.0;
            _3024 = 0.0;
        }
        else
        {
            float _3015;
            float _3017;
            float _3019;
            float _3021;
            float _3023;
            float _3025;
            float _3166 = 0.0;
            float _3167 = 0.0;
            float _3168 = 0.0;
            float _3169 = 0.0;
            float _3170 = 0.0;
            float _3171 = 0.0;
            uint _3172 = 0u;
            uint _3181;
            bool _3182;
            for (;;)
            {
                _3181 = texelFetch(g_lightClassification, int((((_2928 << 5u) + (_2914 << 9u)) + (_3172 << 2u)) >> 2u)).x;
                _3182 = _3181 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3182)
                {
                    frontier_phi_71_pred = _3171;
                    frontier_phi_71_pred_1 = _3170;
                    frontier_phi_71_pred_2 = _3169;
                    frontier_phi_71_pred_3 = _3168;
                    frontier_phi_71_pred_4 = _3167;
                    frontier_phi_71_pred_5 = _3166;
                }
                else
                {
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    float _3315;
                    float _3316;
                    uint _3317;
                    _3311 = _3166;
                    _3312 = _3167;
                    _3313 = _3168;
                    _3314 = _3169;
                    _3315 = _3170;
                    _3316 = _3171;
                    _3317 = _3181;
                    float _3238;
                    float _3239;
                    float _3240;
                    float _3241;
                    float _3242;
                    float _3243;
                    for (;;)
                    {
                        uint _3321 = uint(findLSB(_3317)) + (_3172 << 5u);
                        uint _3318 = (_3317 + 4294967295u) & _3317;
                        uint _3323 = _3321 * 48u;
                        vec4 _3337 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3323)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 3u)).x));
                        uint _3343 = (_3321 * 48u) + 4u;
                        vec4 _3356 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3343)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 3u)).x));
                        uint _3362 = (_3321 * 48u) + 8u;
                        vec3 _3373 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3362)).x, texelFetch(g_PointLightRenderingBuffer, int(_3362 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3362 + 2u)).x));
                        float _3377 = _3337.x - _2012;
                        float _3378 = _3337.y - _2013;
                        float _3379 = _3337.z - _2014;
                        float _3380 = dot(vec3(_3377, _3378, _3379), vec3(_3377, _3378, _3379));
                        float _3383 = inversesqrt(_3380);
                        float _3384 = _3383 * _3377;
                        float _3385 = _3383 * _3378;
                        float _3386 = _3383 * _3379;
                        float _3387 = dot(vec3(_868, _871, _874), vec3(_3384, _3385, _3386));
                        float _3392 = 1.0 - (_3380 * _3337.w);
                        float _4853 = isnan(0.0) ? _3392 : (isnan(_3392) ? 0.0 : max(_3392, 0.0));
                        float _3393 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                        float _3394 = sqrt(_3380) * _3356.w;
                        float _3397 = 1.39999997615814208984375 / (_3394 + 1.39999997615814208984375);
                        float _3398 = _3397 * _3397;
                        float _3401 = ((1.0 - _3398) * _3387) + _3398;
                        float _3404 = _3394 * _3394;
                        float _3408 = ((isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0))) * _3393) / ((_3404 * 0.699999988079071044921875) + 1.0);
                        float _3412 = (-0.0) - _2012;
                        float _3413 = (-0.0) - _2013;
                        float _3414 = (-0.0) - _2014;
                        float _3418 = inversesqrt(dot(vec3(_3412, _3413, _3414), vec3(_3412, _3413, _3414)));
                        float _3419 = _3418 * _3412;
                        float _3420 = _3418 * _3413;
                        float _3421 = _3418 * _3414;
                        float _3428 = exp2(log2(1.0 / ((_3404 * 3.5) + 5.0)) * 0.25);
                        float _3429 = 1.0 - _928;
                        float _3436 = sqrt(1.0 - ((1.0 - (_3429 * _3429)) * (1.0 - (_3428 * _3428))));
                        float _3437 = _3436 * _3436;
                        float _3438 = _3437 * _3437;
                        float _3439 = _3419 + _3384;
                        float _3440 = _3420 + _3385;
                        float _3441 = _3421 + _3386;
                        float _3445 = inversesqrt(dot(vec3(_3439, _3440, _3441), vec3(_3439, _3440, _3441)));
                        float _3449 = dot(vec3(_868, _871, _874), vec3(_3419, _3420, _3421));
                        float _4869 = isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : max(_3449, 0.0));
                        float _3452 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
                        float _3453 = dot(vec3(_868, _871, _874), vec3(_3445 * _3439, _3445 * _3440, _3445 * _3441));
                        float _4880 = isnan(0.0) ? _3453 : (isnan(_3453) ? 0.0 : max(_3453, 0.0));
                        float _3456 = isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0));
                        float _3460 = ((_3456 * _3456) * (_3438 + (-1.0))) + 1.0;
                        float _3461 = _3397 * _3437;
                        float _3462 = _3461 * _3461;
                        float _3465 = ((1.0 - _3462) * _3387) + _3462;
                        float _4891 = isnan(0.0) ? _3465 : (isnan(_3465) ? 0.0 : max(_3465, 0.0));
                        float _3466 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
                        float _3467 = 1.0 - _3437;
                        float _3477 = (0.5 / (((_3466 * ((_3452 * _3467) + _3437)) + 9.9999999392252902907785028219223e-09) + (((_3466 * _3467) + _3437) * _3452))) * _3466;
                        float _4902 = isnan(0.0) ? _3477 : (isnan(_3477) ? 0.0 : max(_3477, 0.0));
                        float _3488 = (((_3438 * 3.1415927410125732421875) * (isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0)))) / ((_3460 * _3460) * ((_3404 * 2.1991131305694580078125) + 3.141590118408203125))) * _3393;
                        _3241 = (_3408 * _3356.x) + _3314;
                        _3242 = (_3408 * _3356.y) + _3315;
                        _3243 = (_3408 * _3356.z) + _3316;
                        _3238 = (_3488 * _3373.x) + _3311;
                        _3239 = (_3488 * _3373.y) + _3312;
                        _3240 = (_3488 * _3373.z) + _3313;
                        if (_3318 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3311 = _3238;
                            _3312 = _3239;
                            _3313 = _3240;
                            _3314 = _3241;
                            _3315 = _3242;
                            _3316 = _3243;
                            _3317 = _3318;
                        }
                    }
                    frontier_phi_71_pred = _3243;
                    frontier_phi_71_pred_1 = _3242;
                    frontier_phi_71_pred_2 = _3241;
                    frontier_phi_71_pred_3 = _3240;
                    frontier_phi_71_pred_4 = _3239;
                    frontier_phi_71_pred_5 = _3238;
                }
                _3025 = frontier_phi_71_pred;
                _3023 = frontier_phi_71_pred_1;
                _3021 = frontier_phi_71_pred_2;
                _3019 = frontier_phi_71_pred_3;
                _3017 = frontier_phi_71_pred_4;
                _3015 = frontier_phi_71_pred_5;
                uint _3173 = _3172 + 1u;
                if (_3173 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3166 = _3015;
                    _3167 = _3017;
                    _3168 = _3019;
                    _3169 = _3021;
                    _3170 = _3023;
                    _3171 = _3025;
                    _3172 = _3173;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3014 = _3015;
            _3016 = _3017;
            _3018 = _3019;
            _3020 = _3021;
            _3022 = _3023;
            _3024 = _3025;
        }
        uvec4 _3028 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3029 = _3028.z;
        uint _3031 = (_3029 >> 8u) & 15u;
        float _3134;
        float _3136;
        float _3138;
        float _3140;
        float _3142;
        float _3144;
        if (((4294967295u << _3031) & _2934) == 0u)
        {
            _3134 = _3014;
            _3136 = _3016;
            _3138 = _3018;
            _3140 = _3020;
            _3142 = _3022;
            _3144 = _3024;
        }
        else
        {
            float _3159 = inversesqrt(dot(vec3(_2012, _2013, _2014), vec3(_2012, _2013, _2014)));
            float _3160 = _3159 * _2012;
            float _3161 = _3159 * _2013;
            float _3162 = _3159 * _2014;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3031 < ((_3029 >> 12u) & 15u))
            {
                float _3135;
                float _3137;
                float _3139;
                float _3141;
                float _3143;
                float _3145;
                float _3294 = _3014;
                float _3295 = _3016;
                float _3296 = _3018;
                float _3297 = _3020;
                float _3298 = _3022;
                float _3299 = _3024;
                uint _3300 = _3031;
                uint _3309;
                bool _3310;
                for (;;)
                {
                    _3309 = texelFetch(g_lightClassification, int((((_2928 << 5u) + (_2914 << 9u)) + (_3300 << 2u)) >> 2u)).x;
                    _3310 = _3309 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3310)
                    {
                        frontier_phi_82_pred = _3299;
                        frontier_phi_82_pred_1 = _3298;
                        frontier_phi_82_pred_2 = _3297;
                        frontier_phi_82_pred_3 = _3296;
                        frontier_phi_82_pred_4 = _3295;
                        frontier_phi_82_pred_5 = _3294;
                    }
                    else
                    {
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3506;
                        float _3507;
                        float _3796;
                        float _3797;
                        float _3798;
                        float _3799;
                        float _3800;
                        float _3801;
                        float _3515 = _3294;
                        float _3516 = _3295;
                        float _3517 = _3296;
                        float _3518 = _3297;
                        float _3519 = _3298;
                        float _3520 = _3299;
                        uint _3521 = _3309;
                        uint _3522;
                        vec4 _3547;
                        float _3548;
                        vec4 _3563;
                        vec3 _3575;
                        vec4 _3590;
                        vec4 _3606;
                        float _3652;
                        bool _3653;
                        for (;;)
                        {
                            uint _3532 = ((_3300 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3521));
                            _3522 = (_3521 + 4294967295u) & _3521;
                            uint _3534 = _3532 * 40u;
                            _3547 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3534)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 3u)).x));
                            _3548 = _3547.w;
                            uint _3550 = (_3532 * 40u) + 4u;
                            _3563 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3550)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 3u)).x));
                            uint _3565 = (_3532 * 40u) + 8u;
                            _3575 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3565)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3565 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3565 + 2u)).x));
                            uint _3577 = (_3532 * 40u) + 16u;
                            _3590 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3577)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 3u)).x));
                            uint _3593 = (_3532 * 40u) + 20u;
                            _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            uint _3608 = (_3532 * 40u) + 24u;
                            vec4 _3621 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3608)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 3u)).x));
                            uint _3627 = (_3532 * 40u) + 28u;
                            vec4 _3640 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3627)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 3u)).x));
                            _3652 = fma(_2014, _3640.z, fma(_2013, _3640.y, _3640.x * _2012)) + _3640.w;
                            _3653 = !((fma(_2014, _3621.z, fma(_2013, _3621.y, _3621.x * _2012)) + _3621.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3653)
                            {
                                float _3680 = _3547.x - _2012;
                                float _3681 = _3547.y - _2013;
                                float _3682 = _3547.z - _2014;
                                float _3683 = dot(vec3(_3680, _3681, _3682), vec3(_3680, _3681, _3682));
                                float _3686 = inversesqrt(_3683);
                                float _3687 = _3686 * _3680;
                                float _3688 = _3686 * _3681;
                                float _3689 = _3686 * _3682;
                                float _3693 = 1.0 - (_3683 / (_3548 * _3548));
                                float _4913 = isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0));
                                float _3694 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
                                float _3698 = sqrt(_3683) * _3563.w;
                                float _3700 = 1.39999997615814208984375 / (_3698 + 1.39999997615814208984375);
                                float _3701 = _3700 * _3700;
                                float _3704 = ((1.0 - _3701) * dot(vec3(_3687, _3688, _3689), vec3(_868, _871, _874))) + _3701;
                                float _3707 = _3698 * _3698;
                                float _3711 = (fma(_2014, _3590.z, fma(_2013, _3590.y, _3590.x * _2012)) + _3590.w) / _3652;
                                float _3712 = (fma(_2014, _3606.z, fma(_2013, _3606.y, _3606.x * _2012)) + _3606.w) / _3652;
                                float _3716 = 1.0 - dot(vec2(_3711, _3712), vec2(_3711, _3712));
                                float _4929 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3717 = isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0));
                                float _3718 = _3717 * (((isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0))) * _3694) / ((_3707 * 0.699999988079071044921875) + 1.0));
                                float _3730 = exp2(log2(1.0 / ((_3707 * 3.5) + 5.0)) * 0.25);
                                float _3731 = 1.0 - _928;
                                float _3738 = sqrt(1.0 - ((1.0 - (_3731 * _3731)) * (1.0 - (_3730 * _3730))));
                                float _3739 = _3738 * _3738;
                                float _3740 = _3739 * _3739;
                                float _3741 = _3687 - _3160;
                                float _3742 = _3688 - _3161;
                                float _3743 = _3689 - _3162;
                                float _3747 = inversesqrt(dot(vec3(_3741, _3742, _3743), vec3(_3741, _3742, _3743)));
                                float _3751 = dot(vec3(_868, _871, _874), vec3((-0.0) - _3160, (-0.0) - _3161, (-0.0) - _3162));
                                float _4940 = isnan(0.0) ? _3751 : (isnan(_3751) ? 0.0 : max(_3751, 0.0));
                                float _3754 = isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0));
                                float _3755 = dot(vec3(_868, _871, _874), vec3(_3747 * _3741, _3747 * _3742, _3747 * _3743));
                                float _4951 = isnan(0.0) ? _3755 : (isnan(_3755) ? 0.0 : max(_3755, 0.0));
                                float _3758 = isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0));
                                float _3762 = ((_3758 * _3758) * (_3740 + (-1.0))) + 1.0;
                                float _3763 = _3700 * _3739;
                                float _3764 = _3763 * _3763;
                                float _3770 = ((1.0 - _3764) * dot(vec3(_868, _871, _874), vec3(_3687, _3688, _3689))) + _3764;
                                float _4962 = isnan(0.0) ? _3770 : (isnan(_3770) ? 0.0 : max(_3770, 0.0));
                                float _3771 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
                                float _3772 = 1.0 - _3739;
                                float _3782 = (0.5 / (((_3771 * ((_3754 * _3772) + _3739)) + 9.9999999392252902907785028219223e-09) + (((_3771 * _3772) + _3739) * _3754))) * _3771;
                                float _4973 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                                float _3792 = (_3717 * _3694) * (((_3740 * 3.1415927410125732421875) * (isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0)))) / ((_3762 * _3762) * ((_3707 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3718 * _3563.z;
                                frontier_phi_88_pred_1 = _3718 * _3563.y;
                                frontier_phi_88_pred_2 = _3718 * _3563.x;
                                frontier_phi_88_pred_3 = _3792 * _3575.z;
                                frontier_phi_88_pred_4 = _3792 * _3575.y;
                                frontier_phi_88_pred_5 = _3792 * _3575.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3801 = frontier_phi_88_pred;
                            _3800 = frontier_phi_88_pred_1;
                            _3799 = frontier_phi_88_pred_2;
                            _3798 = frontier_phi_88_pred_3;
                            _3797 = frontier_phi_88_pred_4;
                            _3796 = frontier_phi_88_pred_5;
                            _3505 = _3799 + _3518;
                            _3506 = _3800 + _3519;
                            _3507 = _3801 + _3520;
                            _3502 = _3796 + _3515;
                            _3503 = _3797 + _3516;
                            _3504 = _3798 + _3517;
                            if (_3522 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3515 = _3502;
                                _3516 = _3503;
                                _3517 = _3504;
                                _3518 = _3505;
                                _3519 = _3506;
                                _3520 = _3507;
                                _3521 = _3522;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3507;
                        frontier_phi_82_pred_1 = _3506;
                        frontier_phi_82_pred_2 = _3505;
                        frontier_phi_82_pred_3 = _3504;
                        frontier_phi_82_pred_4 = _3503;
                        frontier_phi_82_pred_5 = _3502;
                    }
                    _3145 = frontier_phi_82_pred;
                    _3143 = frontier_phi_82_pred_1;
                    _3141 = frontier_phi_82_pred_2;
                    _3139 = frontier_phi_82_pred_3;
                    _3137 = frontier_phi_82_pred_4;
                    _3135 = frontier_phi_82_pred_5;
                    uint _3301 = _3300 + 1u;
                    if (_3301 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3294 = _3135;
                        _3295 = _3137;
                        _3296 = _3139;
                        _3297 = _3141;
                        _3298 = _3143;
                        _3299 = _3145;
                        _3300 = _3301;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3141;
                frontier_phi_63_64_ladder_1 = _3145;
                frontier_phi_63_64_ladder_2 = _3143;
                frontier_phi_63_64_ladder_3 = _3139;
                frontier_phi_63_64_ladder_4 = _3137;
                frontier_phi_63_64_ladder_5 = _3135;
            }
            else
            {
                frontier_phi_63_64_ladder = _3020;
                frontier_phi_63_64_ladder_1 = _3024;
                frontier_phi_63_64_ladder_2 = _3022;
                frontier_phi_63_64_ladder_3 = _3018;
                frontier_phi_63_64_ladder_4 = _3016;
                frontier_phi_63_64_ladder_5 = _3014;
            }
            _3134 = frontier_phi_63_64_ladder_5;
            _3136 = frontier_phi_63_64_ladder_4;
            _3138 = frontier_phi_63_64_ladder_3;
            _3140 = frontier_phi_63_64_ladder;
            _3142 = frontier_phi_63_64_ladder_2;
            _3144 = frontier_phi_63_64_ladder_1;
        }
        float _3149 = isnan(1.0) ? _912 : (isnan(_912) ? 1.0 : min(_912, 1.0));
        _2947 = (_3149 * _3140) + _2478;
        _2949 = (_3149 * _3142) + _2480;
        _2951 = (_3149 * _3144) + _2482;
        _2953 = ((_3134 * 0.039999999105930328369140625) * _3149) + _2801;
        _2955 = ((_3136 * 0.039999999105930328369140625) * _3149) + _2803;
        _2957 = ((_3138 * 0.039999999105930328369140625) * _3149) + _2805;
    }
    else
    {
        _2947 = _2478;
        _2949 = _2480;
        _2951 = _2482;
        _2953 = _2801;
        _2955 = _2803;
        _2957 = _2805;
    }
    float _4989 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _5000 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _5011 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _2974 = ((isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0))) * (_2947 + ((isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0))) * _912))) + ((_2953 + ((isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))) * _1748)) * cbPerFrame._m0[3u].x);
    float _2975 = ((isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0))) * (_2949 + ((isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0))) * _912))) + ((_2955 + ((isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0))) * _1748)) * cbPerFrame._m0[3u].x);
    float _2976 = ((isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0))) * (_2951 + ((isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))) * _912))) + ((_2957 + ((isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))) * _1748)) * cbPerFrame._m0[3u].x);
    uint _2977 = _253 + 6u;
    float _2985 = _849 / cbSceneParam._m0[86u].x;
    float _2986 = _850 / cbSceneParam._m0[86u].y;
    vec4 _3000 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2985, _2986, (log2((isnan(cbSceneParam._m0[77u].w) ? _771 : (isnan(_771) ? cbSceneParam._m0[77u].w : min(_771, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3002 = _3000.x;
    float _3003 = _3000.y;
    float _3004 = _3000.z;
    float _3005 = _3000.w;
    float _3076;
    float _3078;
    float _3080;
    float _3082;
    if (_771 > cbSceneParam._m0[78u].w)
    {
        float _3039 = isnan(_771) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _771 : min(cbSceneParam._m0[80u].w, _771));
        float _3040 = _3039 / _771;
        float _3051 = _3040 * _822;
        float _3052 = _823 * _3040;
        float _3053 = (-0.0) - _3052;
        float _3054 = _3040 * _824;
        float _3056 = (cbSceneParam._m0[77u].w * _3053) / _3039;
        float _3057 = _3056 + cbSceneParam._m0[79u].w;
        float _3058 = cbSceneParam._m0[79u].w - _3052;
        float _3064 = sqrt(((_3051 * _3051) + (_3052 * _3052)) + (_3054 * _3054));
        float _3067 = (1.0 - (cbSceneParam._m0[77u].w / _3039)) * _3064;
        float _3072 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3074 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3251;
        if (abs((_3053 - _3056) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3251 = ((((_3057 > 0.0) ? exp2(_3072 * _3057) : (2.0 - exp2(_3074 * _3057))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3067;
        }
        else
        {
            float _3195 = 1.0 / cbSceneParam._m0[80u].x;
            float _3196 = isnan(_3058) ? _3057 : (isnan(_3057) ? _3058 : max(_3057, _3058));
            float _3197 = isnan(_3058) ? _3057 : (isnan(_3057) ? _3058 : min(_3057, _3058));
            float _3206 = isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : min(_3196, 0.0));
            float _3207 = isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : min(_3197, 0.0));
            _3251 = ((abs(_3064 / _3053) * cbSceneParam._m0[80u].y) * ((((_3206 - _3207) * 2.0) - ((exp2(_3072 * (isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0)))) - exp2(_3072 * (isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : max(_3197, 0.0))))) * _3195)) - ((exp2(_3074 * _3206) - exp2(_3074 * _3207)) * _3195))) + (_3067 * cbSceneParam._m0[80u].z);
        }
        vec4 _3253 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2985, _2986, 1.0), 0.0);
        float _3262 = exp2((_3251 * (-1.44269502162933349609375)) * (1.0 - _3253.w));
        float _3263 = log2(_3262);
        float _3279 = log2(_3005);
        _3076 = (exp2(_3279 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3263 * cbSceneParam._m0[78u].x)) * _3253.x) / cbSceneParam._m0[78u].x)) + _3002;
        _3078 = (exp2(_3279 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3263 * cbSceneParam._m0[78u].y)) * _3253.y) / cbSceneParam._m0[78u].y)) + _3003;
        _3080 = (exp2(_3279 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3263 * cbSceneParam._m0[78u].z)) * _3253.z) / cbSceneParam._m0[78u].z)) + _3004;
        _3082 = _3262 * _3005;
    }
    else
    {
        _3076 = _3002;
        _3078 = _3003;
        _3080 = _3004;
        _3082 = _3005;
    }
    bool _3289;
    vec4 _3092;
    vec4 _3114;
    float _3116;
    float _3120;
    float _3121;
    float _3122;
    float _3123;
    bool _3133;
    for (;;)
    {
        _3092 = cbMatDynParam._m0[0u];
        float _3094 = roundEven(_3092.y);
        bool _3095 = _3094 == 3.0;
        float _3096 = log2(_3082);
        float _3103 = exp2(_3096 * cbSceneParam._m0[78u].x) * _2974;
        float _3104 = exp2(_3096 * cbSceneParam._m0[78u].y) * _2975;
        float _3105 = exp2(_3096 * cbSceneParam._m0[78u].z) * _2976;
        float _3112 = _838 + (-0.5);
        _3114 = cbMtdParam._m0[1u];
        _3116 = _3114.y * _3112;
        float _3119 = (_3094 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3120 = _3119 * (_3095 ? _3103 : (_3103 + (cbSceneParam._m0[72u].w * _3076)));
        _3121 = _3119 * (_3095 ? _3104 : (_3104 + (cbSceneParam._m0[72u].w * _3078)));
        _3122 = _3119 * (_3095 ? _3105 : (_3105 + (cbSceneParam._m0[72u].w * _3080)));
        _3123 = _3112 * 0.999000012874603271484375;
        _3133 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3133)
        {
            if ((cbInstanceData._m0[_253 + 7u].x + _3123) < 0.5)
            {
                _3289 = true;
                break;
            }
        }
        uint _3230 = _887 + uint(_3092.w);
        if ((cbInstanceData._m0[_3230].w < 1.0) && ((cbInstanceData._m0[_3230].w + _3123) < 0.5))
        {
            _3289 = true;
            break;
        }
        if ((_3116 + 1.0) < _3114.x)
        {
            _3289 = true;
            break;
        }
        _3289 = false;
        break;
    }
    float _3493;
    if (_3289)
    {
        discard_state = true;
        _3493 = 0.0;
    }
    else
    {
        _3493 = cbInstanceData._m0[_2977].w;
    }
    SV_Target.x = _3120;
    SV_Target.y = _3121;
    SV_Target.z = _3122;
    SV_Target.w = _3493;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2977].w;
    discard_exit();
}


