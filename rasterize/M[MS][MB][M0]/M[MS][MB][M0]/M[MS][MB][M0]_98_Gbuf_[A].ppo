#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _167 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _168 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _169 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _175 = inversesqrt(dot(vec3(_167, _168, _169), vec3(_167, _168, _169)));
    float _176 = _175 * _167;
    float _177 = _175 * _168;
    float _178 = _175 * _169;
    float _182 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _183 = _182 * NORMAL.x;
    float _184 = _182 * NORMAL.y;
    float _185 = _182 * NORMAL.z;
    float _189 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _190 = _189 * TANGENT.x;
    float _191 = _189 * TANGENT.y;
    float _192 = _189 * TANGENT.z;
    uint _195 = uint(roundEven(NORMAL.w)) * 13u;
    uint _201 = _195 + 1u;
    uint _205 = _195 + 2u;
    float _214 = sqrt(((cbInstanceData._m0[_201].x * cbInstanceData._m0[_201].x) + (cbInstanceData._m0[_195].x * cbInstanceData._m0[_195].x)) + (cbInstanceData._m0[_205].x * cbInstanceData._m0[_205].x));
    float _215 = _214 * TEXCOORD.z;
    float _216 = _214 * TEXCOORD.w;
    vec4 _236 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _242 = _236.x * cbMtdParam._m0[11u].x;
    float _243 = _236.y * cbMtdParam._m0[11u].y;
    float _244 = _236.z * cbMtdParam._m0[11u].z;
    vec4 _263 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _215) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _216) + cbTextureTilingScale._m0[5u].w));
    vec4 _302 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _304 = _302.x;
    float _314 = dot(vec4(_304, _302.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _331 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_304 - _314) * cbMtdParam._m0[24u].x) + _314) * cbMtdParam._m0[23u].x))) + 1.0;
    float _795 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _332 = isnan(1.0) ? _795 : (isnan(_795) ? 1.0 : min(_795, 1.0));
    float _339 = (_332 * ((_263.x * cbMtdParam._m0[12u].x) - _242)) + _242;
    float _340 = (_332 * ((_263.y * cbMtdParam._m0[12u].y) - _243)) + _243;
    float _341 = (_332 * ((_263.z * cbMtdParam._m0[12u].z) - _244)) + _244;
    vec4 _359 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _215) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _216) + cbTextureTilingScale._m0[4u].w));
    vec4 _376 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _378 = _376.x;
    float _379 = _376.y;
    float _380 = _376.z;
    float _389 = ((_359.z - _380) * _332) + _380;
    float _392 = ((((_359.x - _378) * _332) + _378) * 2.0) + (-1.0);
    float _394 = ((((_359.y - _379) * _332) + _379) * 2.0) + (-1.0);
    float _395 = dot(vec2(_392, _394), vec2(_392, _394));
    float _806 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _400 = sqrt(1.0 - (isnan(1.0) ? _806 : (isnan(_806) ? 1.0 : min(_806, 1.0))));
    vec4 _416 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _428 = (((_416.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _392;
    float _429 = (((_416.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _394;
    float _432 = fma(_400, _183, fma(_429, _190, _428 * _176));
    float _435 = fma(_400, _184, fma(_429, _191, _428 * _177));
    float _438 = fma(_400, _185, fma(_429, _192, _428 * _178));
    float _442 = inversesqrt(dot(vec3(_432, _435, _438), vec3(_432, _435, _438)));
    vec4 _472 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _215) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _216) + cbTextureTilingScale._m0[11u].w));
    float _474 = _472.x;
    float _475 = 1.0 - _474;
    float _481 = (cbMtdParam._m0[19u].x + dot(vec4(_442 * _432, _442 * _435, _442 * _438, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_474 - _475) * cbMtdParam._m0[24u].z) + _475) * cbMtdParam._m0[21u].z);
    float _817 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _482 = isnan(1.0) ? _817 : (isnan(_817) ? 1.0 : min(_817, 1.0));
    float _489 = (_482 * (cbMtdParam._m0[17u].x - _339)) + _339;
    float _490 = (_482 * (cbMtdParam._m0[17u].y - _340)) + _340;
    float _491 = (_482 * (cbMtdParam._m0[17u].z - _341)) + _341;
    float _495 = (cbMtdParam._m0[19u].w * (_416.z - _389)) + _389;
    vec4 _508 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _215) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _216) + cbTextureTilingScale._m0[15u].w));
    float _515 = (_508.x * 2.0) + (-1.0);
    float _516 = (_508.y * 2.0) + (-1.0);
    float _517 = dot(vec2(_515, _516), vec2(_515, _516));
    float _828 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _525 = ((_508.z - _495) * _482) + _495;
    float _535 = ((sqrt(1.0 - (isnan(1.0) ? _828 : (isnan(_828) ? 1.0 : min(_828, 1.0)))) - _400) * _482) + _400;
    float _538 = (((_515 - _428) * _482) + _428) + (cbMtdParam._m0[21u].x * _428);
    float _539 = (((_516 - _429) * _482) + _429) + (cbMtdParam._m0[21u].x * _429);
    float _544 = cbMtdParam._m0[22u].x + _416.w;
    float _547 = fma(_535, _183, fma(_539, _190, _538 * _176));
    float _550 = fma(_535, _184, fma(_539, _191, _538 * _177));
    float _553 = fma(_535, _185, fma(_539, _192, _538 * _178));
    float _557 = inversesqrt(dot(vec3(_547, _550, _553), vec3(_547, _550, _553)));
    float _839 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
    float _850 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _559 = isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0));
    float _861 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _560 = isnan(1.0) ? _861 : (isnan(_861) ? 1.0 : min(_861, 1.0));
    float _872 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _561 = isnan(1.0) ? _872 : (isnan(_872) ? 1.0 : min(_872, 1.0));
    float _883 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _562 = isnan(1.0) ? _883 : (isnan(_883) ? 1.0 : min(_883, 1.0));
    float _604 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _614 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _604);
    float _615 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _604);
    float _616 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _604);
    vec4 _621 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _623 = _621.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _683 = sqrt(((_614 * _614) + (_615 * _615)) + (_616 * _616));
        float _689 = (cbMatDynParam._m0[5u].x * _683) + cbMatDynParam._m0[5u].y;
        float _894 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
        float _690 = isnan(1.0) ? _894 : (isnan(_894) ? 1.0 : min(_894, 1.0));
        float _694 = (cbMatDynParam._m0[5u].z * _683) + cbMatDynParam._m0[5u].w;
        float _905 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0))) - _690)) + _690) < ((_623 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _722;
    vec4 _645;
    float _652;
    float _653;
    float _654;
    float _655;
    float _659;
    vec4 _663;
    float _665;
    float _666;
    bool _677;
    for (;;)
    {
        _645 = cbInstanceData._m0[(_195 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _649 = (cbMtdParam._m0[0u].x * _560) * _645.x;
        float _650 = (cbMtdParam._m0[0u].y * _561) * _645.y;
        float _651 = (cbMtdParam._m0[0u].z * _562) * _645.z;
        float _916 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
        _652 = isnan(1.0) ? _916 : (isnan(_916) ? 1.0 : min(_916, 1.0));
        float _927 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
        _653 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
        float _938 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        _654 = isnan(1.0) ? _938 : (isnan(_938) ? 1.0 : min(_938, 1.0));
        _655 = _559 * TEXCOORD_5.w;
        _659 = cbInstanceData._m0[_195 + 6u].w;
        float _660 = _623 + (-0.5);
        _663 = cbMtdParam._m0[1u];
        _665 = _663.y * _660;
        _666 = _660 * 0.999000012874603271484375;
        _677 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_677)
        {
            if ((cbInstanceData._m0[_195 + 7u].x + _666) < 0.5)
            {
                _722 = true;
                break;
            }
        }
        if ((_645.w < 1.0) && ((_645.w + _666) < 0.5))
        {
            _722 = true;
            break;
        }
        if ((_665 + 1.0) < _663.x)
        {
            _722 = true;
            break;
        }
        _722 = false;
        break;
    }
    if (_722)
    {
        discard_state = true;
    }
    bool _748 = cbMtdParam._m0[1u].z != 0.0;
    float _749 = _748 ? _659 : 0.0;
    SV_Target.x = ((_547 * 0.5) * _557) + 0.500488758087158203125;
    SV_Target.y = ((_550 * 0.5) * _557) + 0.500488758087158203125;
    SV_Target.z = ((_553 * 0.5) * _557) + 0.500488758087158203125;
    SV_Target.w = _749;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _748 ? _659 : _655;
    SV_Target_2.x = _652;
    SV_Target_2.y = _653;
    SV_Target_2.z = _654;
    SV_Target_2.w = _748 ? _659 : (float(floatBitsToUint(cbInstanceData._m0[_195 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _749;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _749;
    discard_exit();
}


