#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _197 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _198 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _199 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _205 = inversesqrt(dot(vec3(_197, _198, _199), vec3(_197, _198, _199)));
    float _206 = _205 * _197;
    float _207 = _205 * _198;
    float _208 = _205 * _199;
    float _212 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _213 = _212 * NORMAL.x;
    float _214 = _212 * NORMAL.y;
    float _215 = _212 * NORMAL.z;
    float _219 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _220 = _219 * TANGENT.x;
    float _221 = _219 * TANGENT.y;
    float _222 = _219 * TANGENT.z;
    uint _225 = uint(roundEven(NORMAL.w)) * 13u;
    uint _230 = _225 + 1u;
    uint _234 = _225 + 2u;
    float _243 = sqrt(((cbInstanceData._m0[_230].x * cbInstanceData._m0[_230].x) + (cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x)) + (cbInstanceData._m0[_234].x * cbInstanceData._m0[_234].x));
    float _244 = _243 * TEXCOORD.z;
    float _245 = _243 * TEXCOORD.w;
    vec4 _265 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _271 = _265.x * cbMtdParam._m0[11u].x;
    float _272 = _265.y * cbMtdParam._m0[11u].y;
    float _273 = _265.z * cbMtdParam._m0[11u].z;
    vec4 _292 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _244) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _245) + cbTextureTilingScale._m0[5u].w));
    vec4 _330 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _332 = _330.x;
    float _342 = dot(vec4(_332, _330.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _359 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_332 - _342) * cbMtdParam._m0[24u].x) + _342) * cbMtdParam._m0[23u].x))) + 1.0;
    float _993 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _360 = isnan(1.0) ? _993 : (isnan(_993) ? 1.0 : min(_993, 1.0));
    float _367 = (_360 * ((_292.x * cbMtdParam._m0[12u].x) - _271)) + _271;
    float _368 = (_360 * ((_292.y * cbMtdParam._m0[12u].y) - _272)) + _272;
    float _369 = (_360 * ((_292.z * cbMtdParam._m0[12u].z) - _273)) + _273;
    vec4 _388 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _244) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _245) + cbTextureTilingScale._m0[14u].w));
    vec4 _408 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _244) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _245) + cbTextureTilingScale._m0[20u].w));
    vec4 _435 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _244) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _245) + cbTextureTilingScale._m0[4u].w));
    vec4 _452 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _454 = _452.x;
    float _455 = _452.y;
    float _456 = _452.z;
    float _465 = ((_435.z - _456) * _360) + _456;
    float _468 = ((((_435.x - _454) * _360) + _454) * 2.0) + (-1.0);
    float _469 = ((((_435.y - _455) * _360) + _455) * 2.0) + (-1.0);
    float _470 = dot(vec2(_468, _469), vec2(_468, _469));
    float _1004 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _475 = sqrt(1.0 - (isnan(1.0) ? _1004 : (isnan(_1004) ? 1.0 : min(_1004, 1.0))));
    float _478 = _468 + ((((_408.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _479 = _469 + ((((_408.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _482 = fma(_475, _213, fma(_479, _220, _478 * _206));
    float _485 = fma(_475, _214, fma(_479, _221, _478 * _207));
    float _488 = fma(_475, _215, fma(_479, _222, _478 * _208));
    float _492 = inversesqrt(dot(vec3(_482, _485, _488), vec3(_482, _485, _488)));
    vec4 _508 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _537 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _244) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _245) + cbTextureTilingScale._m0[11u].w));
    float _539 = _537.x;
    float _540 = 1.0 - _539;
    float _544 = ((_539 - _540) * cbMtdParam._m0[24u].z) + _540;
    float _546 = (cbMtdParam._m0[19u].x + dot(vec4(_492 * _482, _492 * _485, _492 * _488, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_544 * cbMtdParam._m0[21u].z);
    float _1015 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _1015 : (isnan(_1015) ? 1.0 : min(_1015, 1.0));
    float _549 = (-0.0) - cbMtdParam._m0[24u].y;
    float _551 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _552 = isnan(1.0) ? _551 : (isnan(_551) ? 1.0 : min(_551, 1.0));
    float _559 = _547 - ((_547 * TEXCOORD_8.x) * _552);
    float _560 = _547 - ((_547 * TEXCOORD_8.y) * _552);
    float _561 = _547 - ((_547 * TEXCOORD_8.z) * _552);
    float _568 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _572 = ((isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : min(_568, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _580 = (_572 - (((_544 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _572))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1046 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0));
    float _585 = ((_559 * ((_388.x * cbMtdParam._m0[18u].x) - _367)) * _581) + _367;
    float _586 = ((_560 * ((_388.y * cbMtdParam._m0[18u].y) - _368)) * _581) + _368;
    float _587 = ((_561 * ((_388.z * cbMtdParam._m0[18u].z) - _369)) * _581) + _369;
    vec4 _599 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _244) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _245) + cbTextureTilingScale._m0[19u].w));
    float _601 = _599.x;
    float _602 = 1.0 - _601;
    float _629 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_601 - _602) * cbMtdParam._m0[24u].w) + _602) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _1057 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0));
    float _638 = ((((cbMtdParam._m0[10u].x - _585) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _630) + _585;
    float _639 = ((((cbMtdParam._m0[10u].y - _586) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _630) + _586;
    float _640 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _587)) * _630) + _587;
    float _645 = (((_408.z - _465) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _465;
    vec4 _659 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _244) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _245) + cbTextureTilingScale._m0[15u].w));
    float _666 = (_659.x * 2.0) + (-1.0);
    float _667 = (_659.y * 2.0) + (-1.0);
    float _668 = dot(vec2(_666, _667), vec2(_666, _667));
    float _1068 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _677 = (((_659.z - _645) * _559) * _581) + _645;
    float _680 = ((cbMtdParam._m0[23u].y - _677) * _630) + _677;
    vec4 _699 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _244) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _245) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _705 = (_699.x * 2.0) + (-1.0);
    float _706 = (_699.y * 2.0) + (-1.0);
    float _707 = dot(vec2(_705, _706), vec2(_705, _706));
    float _1079 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _727 = (((cbMtdParam._m0[21u].x * _478) + ((_666 - _478) * _559)) * _581) + _478;
    float _728 = (((cbMtdParam._m0[21u].x * _479) + ((_667 - _479) * _560)) * _581) + _479;
    float _729 = (((sqrt(1.0 - (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0)))) - _475) * _561) * _581) + _475;
    float _740 = (((_705 - _727) + (_727 * cbMtdParam._m0[22u].z)) * _630) + _727;
    float _741 = (((_706 - _728) + (_728 * cbMtdParam._m0[22u].z)) * _630) + _728;
    float _742 = ((sqrt(1.0 - (isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0)))) - _729) * _630) + _729;
    float _744 = cbMtdParam._m0[22u].x + _508.w;
    float _747 = fma(_742, _213, fma(_741, _220, _740 * _206));
    float _750 = fma(_742, _214, fma(_741, _221, _740 * _207));
    float _753 = fma(_742, _215, fma(_741, _222, _740 * _208));
    float _757 = inversesqrt(dot(vec3(_747, _750, _753), vec3(_747, _750, _753)));
    float _1090 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _1101 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _759 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
    float _1112 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _760 = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
    float _1123 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _761 = isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0));
    float _1134 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _762 = isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0));
    float _803 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _813 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _803);
    float _814 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _803);
    float _815 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _803);
    vec4 _820 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _822 = _820.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _882 = sqrt(((_813 * _813) + (_814 * _814)) + (_815 * _815));
        float _888 = (cbMatDynParam._m0[5u].x * _882) + cbMatDynParam._m0[5u].y;
        float _1145 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _889 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        float _893 = (cbMatDynParam._m0[5u].z * _882) + cbMatDynParam._m0[5u].w;
        float _1156 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1156 : (isnan(_1156) ? 1.0 : min(_1156, 1.0))) - _889)) + _889) < ((_822 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _920;
    vec4 _844;
    float _851;
    float _852;
    float _853;
    float _854;
    float _858;
    vec4 _862;
    float _864;
    float _865;
    bool _876;
    for (;;)
    {
        _844 = cbInstanceData._m0[(_225 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _848 = (cbMtdParam._m0[0u].x * _760) * _844.x;
        float _849 = (cbMtdParam._m0[0u].y * _761) * _844.y;
        float _850 = (cbMtdParam._m0[0u].z * _762) * _844.z;
        float _1167 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        _851 = isnan(1.0) ? _1167 : (isnan(_1167) ? 1.0 : min(_1167, 1.0));
        float _1178 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        _852 = isnan(1.0) ? _1178 : (isnan(_1178) ? 1.0 : min(_1178, 1.0));
        float _1189 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
        _853 = isnan(1.0) ? _1189 : (isnan(_1189) ? 1.0 : min(_1189, 1.0));
        _854 = _759 * TEXCOORD_5.w;
        _858 = cbInstanceData._m0[_225 + 6u].w;
        float _859 = _822 + (-0.5);
        _862 = cbMtdParam._m0[1u];
        _864 = _862.y * _859;
        _865 = _859 * 0.999000012874603271484375;
        _876 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_876)
        {
            if ((cbInstanceData._m0[_225 + 7u].x + _865) < 0.5)
            {
                _920 = true;
                break;
            }
        }
        if ((_844.w < 1.0) && ((_844.w + _865) < 0.5))
        {
            _920 = true;
            break;
        }
        if ((_864 + 1.0) < _862.x)
        {
            _920 = true;
            break;
        }
        _920 = false;
        break;
    }
    if (_920)
    {
        discard_state = true;
    }
    bool _946 = cbMtdParam._m0[1u].z != 0.0;
    float _947 = _946 ? _858 : 0.0;
    SV_Target.x = ((_747 * 0.5) * _757) + 0.500488758087158203125;
    SV_Target.y = ((_750 * 0.5) * _757) + 0.500488758087158203125;
    SV_Target.z = ((_753 * 0.5) * _757) + 0.500488758087158203125;
    SV_Target.w = _947;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _946 ? _858 : _854;
    SV_Target_2.x = _851;
    SV_Target_2.y = _852;
    SV_Target_2.z = _853;
    SV_Target_2.w = _946 ? _858 : (float(floatBitsToUint(cbInstanceData._m0[_225 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _947;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _947;
    discard_exit();
}


