#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1404;
float _4046;
float _4047;
float _4048;
float _4049;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _243 = _242 * _234;
    float _244 = _242 * _235;
    float _245 = _242 * _236;
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = _249 * NORMAL.x;
    float _251 = _249 * NORMAL.y;
    float _252 = _249 * NORMAL.z;
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = _256 * TANGENT.x;
    float _258 = _256 * TANGENT.y;
    float _259 = _256 * TANGENT.z;
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4058 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _4069 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _4080 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    uint _281 = uint(roundEven(NORMAL.w)) * 13u;
    uint _286 = _281 + 1u;
    uint _290 = _281 + 2u;
    float _299 = sqrt(((cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x));
    float _300 = _299 * TEXCOORD.z;
    float _301 = _299 * TEXCOORD.w;
    vec4 _314 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _300) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _301) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = _338.x * cbMtdParam._m0[11u].x;
    float _344 = _338.y * cbMtdParam._m0[11u].y;
    float _345 = _338.z * cbMtdParam._m0[11u].z;
    vec4 _364 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _300) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _301) + cbTextureTilingScale._m0[5u].w));
    vec4 _400 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _402 = _400.x;
    float _412 = dot(vec4(_402, _400.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_402 - _412) * cbMtdParam._m0[24u].x) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4091 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _437 = (_430 * ((_364.x * cbMtdParam._m0[12u].x) - _343)) + _343;
    float _438 = (_430 * ((_364.y * cbMtdParam._m0[12u].y) - _344)) + _344;
    float _439 = (_430 * ((_364.z * cbMtdParam._m0[12u].z) - _345)) + _345;
    float _443 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _314.x) * _437;
    float _446 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _314.y) * _438;
    float _449 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _314.z) * _439;
    float _456 = ((_437 - _443) * (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0)))) + _443;
    float _457 = ((_438 - _446) * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) + _446;
    float _458 = ((_439 - _449) * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) + _449;
    vec4 _476 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _300) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _301) + cbTextureTilingScale._m0[20u].w));
    vec4 _503 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    vec4 _520 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _522 = _520.x;
    float _523 = _520.y;
    float _524 = _520.z;
    float _533 = ((_503.z - _524) * _430) + _524;
    float _536 = ((((_503.x - _522) * _430) + _522) * 2.0) + (-1.0);
    float _537 = ((((_503.y - _523) * _430) + _523) * 2.0) + (-1.0);
    float _538 = dot(vec2(_536, _537), vec2(_536, _537));
    float _4102 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _543 = sqrt(1.0 - (isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))));
    vec4 _563 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _575 = (_536 + ((((_476.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_563.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _576 = (_537 + ((((_476.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_563.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _579 = fma(_543, _250, fma(_576, _257, _575 * _243));
    float _582 = fma(_543, _251, fma(_576, _258, _575 * _244));
    float _585 = fma(_543, _252, fma(_576, _259, _575 * _245));
    float _589 = inversesqrt(dot(vec3(_579, _582, _585), vec3(_579, _582, _585)));
    vec4 _618 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _300) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _301) + cbTextureTilingScale._m0[11u].w));
    float _620 = _618.x;
    float _621 = 1.0 - _620;
    float _625 = ((_620 - _621) * cbMtdParam._m0[24u].z) + _621;
    float _627 = (cbMtdParam._m0[19u].x + dot(vec4(_589 * _579, _589 * _582, _589 * _585, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_625 * cbMtdParam._m0[21u].z);
    float _4113 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _628 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _630 = (-0.0) - cbMtdParam._m0[24u].y;
    float _632 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _633 = isnan(1.0) ? _632 : (isnan(_632) ? 1.0 : min(_632, 1.0));
    float _640 = _628 - ((_628 * TEXCOORD_8.x) * _633);
    float _641 = _628 - ((_628 * TEXCOORD_8.y) * _633);
    float _642 = _628 - ((_628 * TEXCOORD_8.z) * _633);
    float _649 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _653 = ((isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : min(_649, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _661 = (_653 - (((_625 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _653))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4144 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _662 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
    float _666 = ((_640 * (cbMtdParam._m0[17u].x - _456)) * _662) + _456;
    float _667 = ((_641 * (cbMtdParam._m0[17u].y - _457)) * _662) + _457;
    float _668 = ((_642 * (cbMtdParam._m0[17u].z - _458)) * _662) + _458;
    vec4 _680 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _300) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _301) + cbTextureTilingScale._m0[19u].w));
    float _682 = _680.x;
    float _683 = 1.0 - _682;
    float _708 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_682 - _683) * cbMtdParam._m0[24u].w) + _683) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4155 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _709 = isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0));
    float _717 = ((((cbMtdParam._m0[10u].x - _666) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _709) + _666;
    float _718 = ((((cbMtdParam._m0[10u].y - _667) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _709) + _667;
    float _719 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _668)) * _709) + _668;
    float _724 = (((_476.z - _533) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _533;
    float _728 = ((_563.z - _724) * cbMtdParam._m0[19u].w) + _724;
    vec4 _742 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _300) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _301) + cbTextureTilingScale._m0[15u].w));
    float _749 = (_742.x * 2.0) + (-1.0);
    float _750 = (_742.y * 2.0) + (-1.0);
    float _751 = dot(vec2(_749, _750), vec2(_749, _750));
    float _4166 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _760 = (((_742.z - _728) * _640) * _662) + _728;
    float _763 = ((cbMtdParam._m0[23u].y - _760) * _709) + _760;
    vec4 _782 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _300) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _301) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _788 = (_782.x * 2.0) + (-1.0);
    float _789 = (_782.y * 2.0) + (-1.0);
    float _790 = dot(vec2(_788, _789), vec2(_788, _789));
    float _4177 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _810 = (((cbMtdParam._m0[21u].x * _575) + ((_749 - _575) * _640)) * _662) + _575;
    float _811 = (((cbMtdParam._m0[21u].x * _576) + ((_750 - _576) * _641)) * _662) + _576;
    float _812 = (((sqrt(1.0 - (isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0)))) - _543) * _642) * _662) + _543;
    float _823 = (((_788 - _810) + (_810 * cbMtdParam._m0[22u].z)) * _709) + _810;
    float _824 = (((_789 - _811) + (_811 * cbMtdParam._m0[22u].z)) * _709) + _811;
    float _825 = ((sqrt(1.0 - (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)))) - _812) * _709) + _812;
    float _829 = cbMtdParam._m0[22u].x + _563.w;
    float _832 = fma(_825, _250, fma(_824, _257, _823 * _243));
    float _835 = fma(_825, _251, fma(_824, _258, _823 * _244));
    float _838 = fma(_825, _252, fma(_824, _259, _823 * _245));
    float _842 = inversesqrt(dot(vec3(_832, _835, _838), vec3(_832, _835, _838)));
    float _843 = _842 * _832;
    float _844 = _842 * _835;
    float _845 = _842 * _838;
    float _4188 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _846 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
    float _4199 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4210 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _4221 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _4232 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _864 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _915 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _905);
    float _916 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _905);
    float _917 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _905);
    float _921 = inversesqrt(dot(vec3(_915, _916, _917), vec3(_915, _916, _917)));
    float _922 = _915 * _921;
    float _923 = _916 * _921;
    float _924 = _917 * _921;
    vec4 _929 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _931 = _929.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1085 = sqrt(((_915 * _915) + (_916 * _916)) + (_917 * _917));
        float _1091 = (cbMatDynParam._m0[5u].x * _1085) + cbMatDynParam._m0[5u].y;
        float _4243 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1092 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
        float _1096 = (cbMatDynParam._m0[5u].z * _1085) + cbMatDynParam._m0[5u].w;
        float _4254 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0))) - _1092)) + _1092) < ((_931 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _942 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _943 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _961 = fma(_845, cbSceneParam._m0[5u].z, fma(_844, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _843));
    float _964 = fma(_845, cbSceneParam._m0[6u].z, fma(_844, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _843));
    float _967 = fma(_845, cbSceneParam._m0[7u].z, fma(_844, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _843));
    uint _980 = _281 + 9u;
    uint _981 = _980 + uint(cbMatDynParam._m0[0u].w);
    float _987 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0)))) * cbInstanceData._m0[_981].x;
    float _988 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) * cbInstanceData._m0[_981].y;
    float _989 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0)))) * cbInstanceData._m0[_981].z;
    float _4265 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _990 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
    float _4276 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    float _991 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _992 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    vec4 _1001 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _942, cbSceneParam._m0[86u].y * _943));
    float _1005 = ((isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0))) * TEXCOORD_5.w) * _1001.x;
    float _1006 = dot(vec3(_843, _844, _845), vec3(_922, _923, _924));
    float _1009 = _1006 * 2.0;
    float _1013 = (_1009 * _843) - _922;
    float _1014 = (_1009 * _844) - _923;
    float _1015 = (_1009 * _845) - _924;
    float _1019 = abs(dot(vec3(_922, _923, _924), vec3(_843, _844, _845)));
    float _4298 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1021 = sqrt(_846);
    float _1034 = exp2((_1021 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1021 * 3.0));
    float _1066 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1070 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1074 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1403;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1128 = fma(_1074, cbModelParam._m0[26u].z, fma(_1070, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1066));
        float _1132 = fma(_1074, cbModelParam._m0[27u].z, fma(_1070, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1066));
        float _1136 = fma(_1074, cbModelParam._m0[28u].z, fma(_1070, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1066));
        float _1161 = _1066 + _843;
        float _1162 = _1070 + _844;
        float _1163 = _1074 + _845;
        float _1173 = fma(_1163, cbModelParam._m0[26u].z, fma(_1162, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1161)) - _1128;
        float _1174 = fma(_1163, cbModelParam._m0[27u].z, fma(_1162, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1161)) - _1132;
        float _1175 = fma(_1163, cbModelParam._m0[28u].z, fma(_1162, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1161)) - _1136;
        float _1179 = inversesqrt(dot(vec3(_1173, _1174, _1175), vec3(_1173, _1174, _1175)));
        float _1192 = ((_1179 * _1173) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1128 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1193 = ((_1179 * _1174) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1132 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1194 = ((_1179 * _1175) / cbModelParam._m0[34u].z) + ((((((_1136 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1197 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1204 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1211 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1218 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        float _1231 = exp2((_1197.w + (-0.5)) * 20.0) * 2.0;
        float _1232 = _1231 * (_1197.x + (-0.5));
        float _1233 = _1231 * (_1197.y + (-0.5));
        float _1234 = _1231 * (_1197.z + (-0.5));
        float _1241 = exp2((_1204.w + (-0.5)) * 20.0) * 2.0;
        float _1242 = _1241 * (_1204.x + (-0.5));
        float _1243 = _1241 * (_1204.y + (-0.5));
        float _1244 = _1241 * (_1204.z + (-0.5));
        float _1251 = exp2((_1211.w + (-0.5)) * 20.0) * 2.0;
        float _1252 = _1251 * (_1211.x + (-0.5));
        float _1253 = _1251 * (_1211.y + (-0.5));
        float _1254 = _1251 * (_1211.z + (-0.5));
        float _1261 = exp2((_1218.w + (-0.5)) * 20.0) * 2.0;
        float _1262 = _1261 * (_1218.x + (-0.5));
        float _1263 = _1261 * (_1218.y + (-0.5));
        float _1264 = _1261 * (_1218.z + (-0.5));
        float _1265 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1266 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1267 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1268 = _1232 * 0.5;
        float _1269 = _1242 * 0.5;
        float _1270 = _1252 * 0.5;
        float _1271 = dot(vec3(_1268, _1269, _1270), vec3(_1268, _1269, _1270));
        float _1276 = (_1271 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1271);
        float _1285 = (dot(vec3(_843, _844, _845), vec3(_1276 * _1268, _1276 * _1269, _1276 * _1270)) + 1.0) * 0.5;
        float _4324 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1295 = sqrt(((_1269 * _1269) + (_1268 * _1268)) + (_1270 * _1270)) / (_1265 + 9.9999997473787516355514526367188e-06);
        float _4335 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1296 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1297 = _1296 * 2.0;
        float _1301 = (1.0 - _1296) / (_1296 + 1.0);
        float _4346 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1311 = ((((1.0 - _1302) * (_1297 + 2.0)) * exp2(log2(isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_1297 + 1.0))) + _1302) * _1265;
        float _1312 = _1233 * 0.5;
        float _1313 = _1243 * 0.5;
        float _1314 = _1253 * 0.5;
        float _1315 = dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314));
        float _1320 = (_1315 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1315);
        float _1328 = (dot(vec3(_843, _844, _845), vec3(_1320 * _1312, _1320 * _1313, _1320 * _1314)) + 1.0) * 0.5;
        float _4357 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1337 = sqrt(((_1313 * _1313) + (_1312 * _1312)) + (_1314 * _1314)) / (_1266 + 9.9999997473787516355514526367188e-06);
        float _4368 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _1339 = _1338 * 2.0;
        float _1343 = (1.0 - _1338) / (_1338 + 1.0);
        float _4379 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1344 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1353 = ((((1.0 - _1344) * (_1339 + 2.0)) * exp2(log2(isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (_1339 + 1.0))) + _1344) * _1266;
        float _1354 = _1234 * 0.5;
        float _1355 = _1244 * 0.5;
        float _1356 = _1254 * 0.5;
        float _1357 = dot(vec3(_1354, _1355, _1356), vec3(_1354, _1355, _1356));
        float _1362 = (_1357 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1357);
        float _1370 = (dot(vec3(_843, _844, _845), vec3(_1362 * _1354, _1362 * _1355, _1362 * _1356)) + 1.0) * 0.5;
        float _4390 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1379 = sqrt(((_1355 * _1355) + (_1354 * _1354)) + (_1356 * _1356)) / (_1267 + 9.9999997473787516355514526367188e-06);
        float _4401 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _1381 = _1380 * 2.0;
        float _1385 = (1.0 - _1380) / (_1380 + 1.0);
        float _4412 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1386 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1395 = ((((1.0 - _1386) * (_1381 + 2.0)) * exp2(log2(isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_1381 + 1.0))) + _1386) * _1267;
        _1403 = _1234;
        _1405 = _1233;
        _1406 = _1232;
        _1407 = _1244;
        _1408 = _1243;
        _1409 = _1242;
        _1410 = _1254;
        _1411 = _1253;
        _1412 = _1252;
        _1413 = _1267;
        _1414 = _1266;
        _1415 = _1265;
        _1416 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0)));
        _1417 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)));
        _1418 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0)));
    }
    else
    {
        _1403 = _1404;
        _1405 = _1404;
        _1406 = _1404;
        _1407 = _1404;
        _1408 = _1404;
        _1409 = _1404;
        _1410 = _1404;
        _1411 = _1404;
        _1412 = _1404;
        _1413 = _1404;
        _1414 = _1404;
        _1415 = _1404;
        _1416 = 0.0;
        _1417 = 0.0;
        _1418 = 0.0;
    }
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1446 = fma(_1074, cbModelParam._m0[30u].z, fma(_1070, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1066));
        float _1450 = fma(_1074, cbModelParam._m0[31u].z, fma(_1070, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1066));
        float _1454 = fma(_1074, cbModelParam._m0[32u].z, fma(_1070, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1066));
        float _1477 = _1066 + _843;
        float _1478 = _1070 + _844;
        float _1479 = _1074 + _845;
        float _1489 = fma(_1479, cbModelParam._m0[30u].z, fma(_1478, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1477)) - _1446;
        float _1490 = fma(_1479, cbModelParam._m0[31u].z, fma(_1478, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1477)) - _1450;
        float _1491 = fma(_1479, cbModelParam._m0[32u].z, fma(_1478, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1477)) - _1454;
        float _1495 = inversesqrt(dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491)));
        float _1508 = ((_1495 * _1489) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1446 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1509 = ((_1495 * _1490) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1450 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1510 = ((_1495 * _1491) / cbModelParam._m0[35u].z) + ((((((_1454 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1512 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1508, _1509, _1510), 0.0);
        vec4 _1519 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1508, _1509, _1510), 0.0);
        vec4 _1526 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1508, _1509, _1510), 0.0);
        vec4 _1533 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1508, _1509, _1510), 0.0);
        float _1545 = exp2((_1512.w + (-0.5)) * 20.0) * 2.0;
        float _1546 = _1545 * (_1512.x + (-0.5));
        float _1547 = _1545 * (_1512.y + (-0.5));
        float _1548 = _1545 * (_1512.z + (-0.5));
        float _1555 = exp2((_1519.w + (-0.5)) * 20.0) * 2.0;
        float _1556 = _1555 * (_1519.x + (-0.5));
        float _1557 = _1555 * (_1519.y + (-0.5));
        float _1558 = _1555 * (_1519.z + (-0.5));
        float _1565 = exp2((_1526.w + (-0.5)) * 20.0) * 2.0;
        float _1566 = _1565 * (_1526.x + (-0.5));
        float _1567 = _1565 * (_1526.y + (-0.5));
        float _1568 = _1565 * (_1526.z + (-0.5));
        float _1575 = exp2((_1533.w + (-0.5)) * 20.0) * 2.0;
        float _1576 = _1575 * (_1533.x + (-0.5));
        float _1577 = _1575 * (_1533.y + (-0.5));
        float _1578 = _1575 * (_1533.z + (-0.5));
        float _1579 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1580 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1581 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1582 = _1546 * 0.5;
        float _1583 = _1556 * 0.5;
        float _1584 = _1566 * 0.5;
        float _1585 = dot(vec3(_1582, _1583, _1584), vec3(_1582, _1583, _1584));
        float _1590 = (_1585 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1585);
        float _1598 = (dot(vec3(_843, _844, _845), vec3(_1590 * _1582, _1590 * _1583, _1590 * _1584)) + 1.0) * 0.5;
        float _4453 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1607 = sqrt(((_1583 * _1583) + (_1582 * _1582)) + (_1584 * _1584)) / (_1579 + 9.9999997473787516355514526367188e-06);
        float _4464 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1608 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1609 = _1608 * 2.0;
        float _1613 = (1.0 - _1608) / (_1608 + 1.0);
        float _4475 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1614 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1623 = ((((1.0 - _1614) * (_1609 + 2.0)) * exp2(log2(isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (_1609 + 1.0))) + _1614) * _1579;
        float _1624 = _1547 * 0.5;
        float _1625 = _1557 * 0.5;
        float _1626 = _1567 * 0.5;
        float _1627 = dot(vec3(_1624, _1625, _1626), vec3(_1624, _1625, _1626));
        float _1632 = (_1627 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1627);
        float _1640 = (dot(vec3(_843, _844, _845), vec3(_1632 * _1624, _1632 * _1625, _1632 * _1626)) + 1.0) * 0.5;
        float _4486 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1649 = sqrt(((_1625 * _1625) + (_1624 * _1624)) + (_1626 * _1626)) / (_1580 + 9.9999997473787516355514526367188e-06);
        float _4497 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1650 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _1651 = _1650 * 2.0;
        float _1655 = (1.0 - _1650) / (_1650 + 1.0);
        float _4508 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1665 = ((((1.0 - _1656) * (_1651 + 2.0)) * exp2(log2(isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))) * (_1651 + 1.0))) + _1656) * _1580;
        float _1666 = _1548 * 0.5;
        float _1667 = _1558 * 0.5;
        float _1668 = _1568 * 0.5;
        float _1669 = dot(vec3(_1666, _1667, _1668), vec3(_1666, _1667, _1668));
        float _1674 = (_1669 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1669);
        float _1682 = (dot(vec3(_843, _844, _845), vec3(_1674 * _1666, _1674 * _1667, _1674 * _1668)) + 1.0) * 0.5;
        float _4519 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1691 = sqrt(((_1667 * _1667) + (_1666 * _1666)) + (_1668 * _1668)) / (_1581 + 9.9999997473787516355514526367188e-06);
        float _4530 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1692 = isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0));
        float _1693 = _1692 * 2.0;
        float _1697 = (1.0 - _1692) / (_1692 + 1.0);
        float _4541 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1707 = ((((1.0 - _1698) * (_1693 + 2.0)) * exp2(log2(isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0))) * (_1693 + 1.0))) + _1698) * _1581;
        _1715 = _1548;
        _1716 = _1547;
        _1717 = _1546;
        _1718 = _1558;
        _1719 = _1557;
        _1720 = _1556;
        _1721 = _1568;
        _1722 = _1567;
        _1723 = _1566;
        _1724 = _1581;
        _1725 = _1580;
        _1726 = _1579;
        _1727 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0)));
        _1728 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0)));
        _1729 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)));
    }
    else
    {
        _1715 = _1404;
        _1716 = _1404;
        _1717 = _1404;
        _1718 = _1404;
        _1719 = _1404;
        _1720 = _1404;
        _1721 = _1404;
        _1722 = _1404;
        _1723 = _1404;
        _1724 = _1404;
        _1725 = _1404;
        _1726 = _1404;
        _1727 = 0.0;
        _1728 = 0.0;
        _1729 = 0.0;
    }
    float _1739 = (cbModelParam._m0[1u].x * (_1727 - _1416)) + _1416;
    float _1740 = (cbModelParam._m0[1u].x * (_1728 - _1417)) + _1417;
    float _1741 = (cbModelParam._m0[1u].x * (_1729 - _1418)) + _1418;
    float _1762 = fma(_1741, cbSceneParam._m0[89u].z, fma(_1740, cbSceneParam._m0[89u].y, _1739 * cbSceneParam._m0[89u].x));
    float _1765 = fma(_1741, cbSceneParam._m0[90u].z, fma(_1740, cbSceneParam._m0[90u].y, _1739 * cbSceneParam._m0[90u].x));
    float _1768 = fma(_1741, cbSceneParam._m0[91u].z, fma(_1740, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1739));
    float _1783 = _1013 * 0.5;
    float _1784 = _1014 * 0.5;
    float _1785 = _1015 * 0.5;
    float _1786 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1717, _1720, _1723, _1726));
    float _1789 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1716, _1719, _1722, _1725));
    float _1792 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1715, _1718, _1721, _1724));
    float _1826;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1799 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1403, _1407, _1410, _1413));
        float _1803 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1405, _1408, _1411, _1414));
        float _1807 = dot(vec4(_1783, _1784, _1785, 1.0), vec4(_1406, _1409, _1412, _1415));
        float _1814 = dot(vec4(cbModelParam._m0[39u]), vec4(_1783, _1784, _1785, 1.0));
        _1826 = dot(vec3(isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0)), isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0)), isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1814) ? 0.0 : (isnan(0.0) ? _1814 : max(0.0, _1814))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1826 = 1.0;
    }
    float _1837;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1828 = dot(vec4(cbModelParam._m0[40u]), vec4(_1783, _1784, _1785, 1.0));
        _1837 = dot(vec3(isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0)), isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)), isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1828) ? 0.0 : (isnan(0.0) ? _1828 : max(0.0, _1828))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1837 = 1.0;
    }
    float _1841 = (_1837 * cbModelParam._m0[1u].x) + (_1826 * (1.0 - cbModelParam._m0[1u].x));
    float _1851 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _846);
    float _1852 = isnan(_1851) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1851 : min(cbModelParam._m0[25u].z, _1851));
    float _1933;
    float _1935;
    float _1937;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1900 = fma(_1074, cbModelParam._m0[13u].z, fma(_1070, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1066)) + cbModelParam._m0[13u].w;
        float _1904 = fma(_1074, cbModelParam._m0[14u].z, fma(_1070, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1066)) + cbModelParam._m0[14u].w;
        float _1908 = fma(_1074, cbModelParam._m0[15u].z, fma(_1070, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1066)) + cbModelParam._m0[15u].w;
        float _1911 = fma(_1015, cbModelParam._m0[13u].z, fma(_1014, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1013));
        float _1914 = fma(_1015, cbModelParam._m0[14u].z, fma(_1014, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1013));
        float _1917 = fma(_1015, cbModelParam._m0[15u].z, fma(_1014, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1013));
        float _1945;
        if (_1911 > 0.0)
        {
            _1945 = abs((1.0 - _1900) / _1911);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1911 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1900 + 1.0) / _1911);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1945 = frontier_phi_17_15_ladder;
        }
        float _2115;
        if (_1914 > 0.0)
        {
            _2115 = abs((1.0 - _1904) / _1914);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1914 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1904 + 1.0) / _1914);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2115 = frontier_phi_26_22_ladder;
        }
        float _2410;
        if (_1917 > 0.0)
        {
            _2410 = abs((1.0 - _1908) / _1917);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1917 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1908 + 1.0) / _1917);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2410 = frontier_phi_38_33_ladder;
        }
        float _2412 = isnan(_2115) ? _1945 : (isnan(_1945) ? _2115 : min(_1945, _2115));
        float _2413 = isnan(_2410) ? _2412 : (isnan(_2412) ? _2410 : min(_2412, _2410));
        float _2417 = (_2413 * _1911) + _1900;
        float _2418 = (_2413 * _1914) + _1904;
        float _2419 = (_2413 * _1917) + _1908;
        float _2420 = _2413 * 9.9999997473787516355514526367188e-05;
        float _2422 = (-1.0) - _2420;
        float _2424 = _2420 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2419 > _2424) || ((_2419 < _2422) || ((_2418 > _2424) || ((_2418 < _2422) || ((_2417 < _2422) || (_2417 > _2424))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2564 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2419, cbModelParam._m0[9u].z, fma(_2418, cbModelParam._m0[9u].y, _2417 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2419, cbModelParam._m0[10u].z, fma(_2418, cbModelParam._m0[10u].y, _2417 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2419, cbModelParam._m0[11u].z, fma(_2418, cbModelParam._m0[11u].y, _2417 * cbModelParam._m0[11u].x))), _1852);
            frontier_phi_16_38_ladder = _2564.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2564.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2564.x * cbModelParam._m0[1u].y;
        }
        _1933 = frontier_phi_16_38_ladder_2;
        _1935 = frontier_phi_16_38_ladder_1;
        _1937 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1921 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1013, _1014, _1015), _1852);
        _1933 = _1921.x * cbModelParam._m0[1u].y;
        _1935 = _1921.y * cbModelParam._m0[1u].y;
        _1937 = _1921.z * cbModelParam._m0[1u].y;
    }
    float _1941 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _846);
    float _1942 = isnan(_1941) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1941 : min(cbModelParam._m0[25u].w, _1941));
    float _2032;
    float _2034;
    float _2036;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1996 = fma(_1074, cbModelParam._m0[21u].z, fma(_1070, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1066)) + cbModelParam._m0[21u].w;
        float _2000 = fma(_1074, cbModelParam._m0[22u].z, fma(_1070, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1066)) + cbModelParam._m0[22u].w;
        float _2004 = fma(_1074, cbModelParam._m0[23u].z, fma(_1070, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1066)) + cbModelParam._m0[23u].w;
        float _2007 = fma(_1015, cbModelParam._m0[21u].z, fma(_1014, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1013));
        float _2010 = fma(_1015, cbModelParam._m0[22u].z, fma(_1014, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1013));
        float _2013 = fma(_1015, cbModelParam._m0[23u].z, fma(_1014, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1013));
        float _2120;
        if (_2007 > 0.0)
        {
            _2120 = abs((1.0 - _1996) / _2007);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2007 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1996 + 1.0) / _2007);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2120 = frontier_phi_28_24_ladder;
        }
        float _2437;
        if (_2010 > 0.0)
        {
            _2437 = abs((1.0 - _2000) / _2010);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2010 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2000 + 1.0) / _2010);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2437 = frontier_phi_40_35_ladder;
        }
        float _2764;
        if (_2013 > 0.0)
        {
            _2764 = abs((1.0 - _2004) / _2013);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2013 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2004 + 1.0) / _2013);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2764 = frontier_phi_50_47_ladder;
        }
        float _2766 = isnan(_2437) ? _2120 : (isnan(_2120) ? _2437 : min(_2120, _2437));
        float _2767 = isnan(_2764) ? _2766 : (isnan(_2766) ? _2764 : min(_2766, _2764));
        float _2771 = (_2767 * _2007) + _1996;
        float _2772 = (_2767 * _2010) + _2000;
        float _2773 = (_2767 * _2013) + _2004;
        float _2774 = _2767 * 9.9999997473787516355514526367188e-05;
        float _2775 = (-1.0) - _2774;
        float _2777 = _2774 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2773 > _2777) || ((_2773 < _2775) || ((_2772 > _2777) || ((_2772 < _2775) || ((_2771 < _2775) || (_2771 > _2777))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2891 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2773, cbModelParam._m0[17u].z, fma(_2772, cbModelParam._m0[17u].y, _2771 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2773, cbModelParam._m0[18u].z, fma(_2772, cbModelParam._m0[18u].y, _2771 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2773, cbModelParam._m0[19u].z, fma(_2772, cbModelParam._m0[19u].y, _2771 * cbModelParam._m0[19u].x))), _1942);
            frontier_phi_25_50_ladder = _2891.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2891.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2891.x * cbModelParam._m0[1u].z;
        }
        _2032 = frontier_phi_25_50_ladder_2;
        _2034 = frontier_phi_25_50_ladder_1;
        _2036 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2016 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1013, _1014, _1015), _1942);
        _2032 = _2016.x * cbModelParam._m0[1u].z;
        _2034 = _2016.y * cbModelParam._m0[1u].z;
        _2036 = _2016.z * cbModelParam._m0[1u].z;
    }
    float _2048 = ((((1.0 - _1034) * ((_1021 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1034 * _1021)) * _1005;
    float _2049 = _2048 * ((cbModelParam._m0[1u].w * (_2032 - _1933)) + _1933);
    float _2050 = _2048 * ((cbModelParam._m0[1u].w * (_2034 - _1935)) + _1935);
    float _2051 = _2048 * ((cbModelParam._m0[1u].w * (_2036 - _1937)) + _1937);
    float _2054 = fma(_2051, cbSceneParam._m0[89u].z, fma(_2050, cbSceneParam._m0[89u].y, _2049 * cbSceneParam._m0[89u].x));
    float _2057 = fma(_2051, cbSceneParam._m0[90u].z, fma(_2050, cbSceneParam._m0[90u].y, _2049 * cbSceneParam._m0[90u].x));
    float _2060 = fma(_2051, cbSceneParam._m0[91u].z, fma(_2050, cbSceneParam._m0[91u].y, _2049 * cbSceneParam._m0[91u].x));
    float _2094 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2098 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2102 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2106 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2107 = _2094 / _2106;
    float _2108 = _2098 / _2106;
    float _2109 = _2102 / _2106;
    float _2256;
    float _2257;
    float _2258;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2136 = ((uint(_2109 > cbSceneParam._m0[59u].y) + uint(_2109 > cbSceneParam._m0[59u].x)) + uint(_2109 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2137 = _2136 + 43u;
        uint _2145 = _2136 + 44u;
        uint _2153 = _2136 + 45u;
        uint _2161 = _2136 + 46u;
        float _2172 = fma(_2106, cbSceneParam._m0[_2137].w, fma(_2102, cbSceneParam._m0[_2137].z, fma(_2098, cbSceneParam._m0[_2137].y, _2094 * cbSceneParam._m0[_2137].x)));
        float _2176 = fma(_2106, cbSceneParam._m0[_2145].w, fma(_2102, cbSceneParam._m0[_2145].z, fma(_2098, cbSceneParam._m0[_2145].y, _2094 * cbSceneParam._m0[_2145].x)));
        float _2184 = fma(_2106, cbSceneParam._m0[_2161].w, fma(_2102, cbSceneParam._m0[_2161].z, fma(_2098, cbSceneParam._m0[_2161].y, _2094 * cbSceneParam._m0[_2161].x)));
        float _2189 = cbSceneParam._m0[33u].z * _2184;
        float _2191 = cbSceneParam._m0[33u].w * _2184;
        float _2194 = fma(_2106, cbSceneParam._m0[_2153].w, fma(_2102, cbSceneParam._m0[_2153].z, fma(_2098, cbSceneParam._m0[_2153].y, _2094 * cbSceneParam._m0[_2153].x))) / _2184;
        float _2242 = (cbSceneParam._m0[33u].x - sqrt(((_2108 * _2108) + (_2107 * _2107)) + (_2109 * _2109))) * cbSceneParam._m0[33u].y;
        float _4667 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
        float _2249 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2189 + _2172) / _2184, (_2191 + _2176) / _2184), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2191 + _2172) / _2184, (_2176 - _2189) / _2184), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2172 - _2189) / _2184, (_2176 - _2191) / _2184), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2172 - _2191) / _2184, (_2189 + _2176) / _2184), _2194), 0.0)).x), vec4(0.25)));
        _2256 = 1.0 - (_2249 * cbSceneParam._m0[34u].x);
        _2257 = 1.0 - (_2249 * cbSceneParam._m0[34u].y);
        _2258 = 1.0 - (_2249 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2256 = 1.0;
        _2257 = 1.0;
        _2258 = 1.0;
    }
    float _2322;
    float _2324;
    float _2326;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2310 = fma(_2106, cbSceneParam._m0[63u].w, fma(_2102, cbSceneParam._m0[63u].z, fma(_2098, cbSceneParam._m0[63u].y, _2094 * cbSceneParam._m0[63u].x)));
        float _2311 = fma(_2106, cbSceneParam._m0[60u].w, fma(_2102, cbSceneParam._m0[60u].z, fma(_2098, cbSceneParam._m0[60u].y, _2094 * cbSceneParam._m0[60u].x))) / _2310;
        float _2312 = fma(_2106, cbSceneParam._m0[61u].w, fma(_2102, cbSceneParam._m0[61u].z, fma(_2098, cbSceneParam._m0[61u].y, _2094 * cbSceneParam._m0[61u].x))) / _2310;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2311 >= cbSceneParam._m0[64u].x) && (_2312 >= cbSceneParam._m0[64u].y)) && (_2311 <= cbSceneParam._m0[64u].z)) && (_2312 <= cbSceneParam._m0[64u].w))
        {
            float _2450 = fma(_2106, cbSceneParam._m0[62u].w, fma(_2102, cbSceneParam._m0[62u].z, fma(_2098, cbSceneParam._m0[62u].y, _2094 * cbSceneParam._m0[62u].x))) / _2310;
            float _2454 = isnan(cbSceneParam._m0[41u].w) ? _2450 : (isnan(_2450) ? cbSceneParam._m0[41u].w : max(_2450, cbSceneParam._m0[41u].w));
            float _2497 = (cbSceneParam._m0[33u].x - sqrt(((_2108 * _2108) + (_2107 * _2107)) + (_2109 * _2109))) * cbSceneParam._m0[33u].y;
            float _4683 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
            float _2504 = (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2311, cbSceneParam._m0[33u].w + _2312), _2454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2311, _2312 - cbSceneParam._m0[33u].z), _2454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2311 - cbSceneParam._m0[33u].z, _2312 - cbSceneParam._m0[33u].w), _2454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2311 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2312), _2454), 0.0)).x), vec4(0.25)));
            float _2508 = 1.0 - (_2504 * cbSceneParam._m0[34u].x);
            float _2509 = 1.0 - (_2504 * cbSceneParam._m0[34u].y);
            float _2510 = 1.0 - (_2504 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2510) ? _2258 : (isnan(_2258) ? _2510 : min(_2258, _2510));
            frontier_phi_37_36_ladder_1 = isnan(_2509) ? _2257 : (isnan(_2257) ? _2509 : min(_2257, _2509));
            frontier_phi_37_36_ladder_2 = isnan(_2508) ? _2256 : (isnan(_2256) ? _2508 : min(_2256, _2508));
        }
        else
        {
            frontier_phi_37_36_ladder = _2258;
            frontier_phi_37_36_ladder_1 = _2257;
            frontier_phi_37_36_ladder_2 = _2256;
        }
        _2322 = frontier_phi_37_36_ladder_2;
        _2324 = frontier_phi_37_36_ladder_1;
        _2326 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2322 = _2256;
        _2324 = _2257;
        _2326 = _2258;
    }
    uvec4 _2331 = floatBitsToUint(cbInstanceData._m0[_281 + 5u]);
    uint _2333 = _2331.x * 14u;
    uint _2334 = _2333 + 13u;
    float _2341 = _1005 + (-1.0);
    float _2346 = (cbLight._m0[_2334].x * _2341) + 1.0;
    float _2347 = (cbLight._m0[_2334].y * _2341) + 1.0;
    float _2348 = (cbLight._m0[_2334].z * _2341) + 1.0;
    float _2349 = (cbLight._m0[_2334].w * _2341) + 1.0;
    uint _2350 = _2333 + 5u;
    float _2356 = isnan(1.0) ? _2347 : (isnan(_2347) ? 1.0 : min(_2347, 1.0));
    uint _2360 = _2333 + 4u;
    float _2369 = isnan(1.0) ? _2346 : (isnan(_2346) ? 1.0 : min(_2346, 1.0));
    uint _2373 = _2333 | 1u;
    float _2384 = dot(vec3(cbLight._m0[_2333].xyz), vec3(_843, _844, _845));
    float _2387 = dot(vec3(cbLight._m0[_2373].xyz), vec3(_843, _844, _845));
    float _4719 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
    float _4730 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    float _2392 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * 0.3183098733425140380859375;
    float _2394 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * 0.3183098733425140380859375;
    float _2401 = ((cbLight._m0[_2350].x * _2356) * _2394) + (((cbLight._m0[_2360].x * _2322) * _2369) * _2392);
    float _2402 = ((_2356 * cbLight._m0[_2350].y) * _2394) + (((cbLight._m0[_2360].y * _2324) * _2369) * _2392);
    float _2403 = ((_2356 * cbLight._m0[_2350].z) * _2394) + (((cbLight._m0[_2360].z * _2326) * _2369) * _2392);
    uvec4 _2407 = floatBitsToUint(cbLight._m0[_2333 + 12u]);
    bool _2409 = _2407.x == 0u;
    float _2511;
    float _2513;
    float _2515;
    if (_2409)
    {
        _2511 = _2401;
        _2513 = _2402;
        _2515 = _2403;
    }
    else
    {
        uint _2519 = _2333 + 6u;
        float _2535 = (dot(vec3(cbLight._m0[_2333 + 2u].xyz), vec3(_843, _844, _845)) * 0.5) + 0.5;
        float _2536 = _2535 * _2535;
        float _4741 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
        float _2537 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2538 = isnan(1.0) ? _2348 : (isnan(_2348) ? 1.0 : min(_2348, 1.0));
        _2511 = (((cbLight._m0[_2519].x * 0.3183098733425140380859375) * _2537) * _2538) + _2401;
        _2513 = (((cbLight._m0[_2519].y * 0.3183098733425140380859375) * _2537) * _2538) + _2402;
        _2515 = (((cbLight._m0[_2519].z * 0.3183098733425140380859375) * _2537) * _2538) + _2403;
    }
    bool _2518 = _2407.y == 0u;
    float _2573;
    float _2575;
    float _2577;
    if (_2518)
    {
        _2573 = _2511;
        _2575 = _2513;
        _2577 = _2515;
    }
    else
    {
        uint _2735 = _2333 + 7u;
        float _2751 = (dot(vec3(cbLight._m0[_2333 + 3u].xyz), vec3(_843, _844, _845)) * 0.5) + 0.5;
        float _2752 = _2751 * _2751;
        float _4757 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2753 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
        float _2754 = isnan(1.0) ? _2349 : (isnan(_2349) ? 1.0 : min(_2349, 1.0));
        _2573 = (((cbLight._m0[_2735].x * 0.3183098733425140380859375) * _2753) * _2754) + _2511;
        _2575 = (((cbLight._m0[_2735].y * 0.3183098733425140380859375) * _2753) * _2754) + _2513;
        _2577 = (((cbLight._m0[_2735].z * 0.3183098733425140380859375) * _2753) * _2754) + _2515;
    }
    uint _2580 = _2333 + 8u;
    float _2593 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2333].w)) * _846) * 0.949999988079071044921875);
    float _2594 = _2593 * _2593;
    float _2595 = cbLight._m0[_2333].x + _922;
    float _2596 = cbLight._m0[_2333].y + _923;
    float _2597 = cbLight._m0[_2333].z + _924;
    float _2601 = inversesqrt(dot(vec3(_2595, _2596, _2597), vec3(_2595, _2596, _2597)));
    float _2602 = _2601 * _2595;
    float _2603 = _2601 * _2596;
    float _2604 = _2601 * _2597;
    float _2605 = dot(vec3(_843, _844, _845), vec3(cbLight._m0[_2333].xyz));
    float _4773 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
    float _2608 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
    float _4784 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _2609 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _2610 = dot(vec3(_843, _844, _845), vec3(_2602, _2603, _2604));
    float _4795 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
    float _2613 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _2614 = dot(vec3(cbLight._m0[_2333].xyz), vec3(_2602, _2603, _2604));
    float _4806 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
    float _2618 = _2594 * _2594;
    float _2622 = ((_2613 * _2613) * (_2618 + (-1.0))) + 1.0;
    float _2633 = (exp2(log2(1.0 - (isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2634 = 1.0 - _2594;
    float _2645 = (0.5 / (((_2609 * ((_2608 * _2634) + _2594)) + 9.9999999392252902907785028219223e-09) + (((_2609 * _2634) + _2594) * _2608))) * _2608;
    float _4817 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
    float _2647 = (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0))) * (_2618 / ((_2622 * _2622) * 3.141590118408203125));
    uint _2661 = _2333 + 9u;
    float _2672 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2373].w)) * _846) * 0.949999988079071044921875);
    float _2673 = _2672 * _2672;
    float _2674 = cbLight._m0[_2373].x + _922;
    float _2675 = cbLight._m0[_2373].y + _923;
    float _2676 = cbLight._m0[_2373].z + _924;
    float _2680 = inversesqrt(dot(vec3(_2674, _2675, _2676), vec3(_2674, _2675, _2676)));
    float _2681 = _2680 * _2674;
    float _2682 = _2680 * _2675;
    float _2683 = _2680 * _2676;
    float _2684 = dot(vec3(_843, _844, _845), vec3(cbLight._m0[_2373].xyz));
    float _4828 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
    float _2687 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
    float _2688 = dot(vec3(_843, _844, _845), vec3(_2681, _2682, _2683));
    float _4839 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
    float _2691 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    float _2692 = dot(vec3(cbLight._m0[_2373].xyz), vec3(_2681, _2682, _2683));
    float _4850 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
    float _2696 = _2673 * _2673;
    float _2700 = ((_2691 * _2691) * (_2696 + (-1.0))) + 1.0;
    float _2709 = (exp2(log2(1.0 - (isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2710 = 1.0 - _2673;
    float _2720 = (0.5 / (((_2609 * ((_2687 * _2710) + _2673)) + 9.9999999392252902907785028219223e-09) + (((_2609 * _2710) + _2673) * _2687))) * _2687;
    float _4861 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
    float _2722 = (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (_2696 / ((_2700 * _2700) * 3.141590118408203125));
    float _2732 = (((_2709 * cbLight._m0[_2661].x) * _2722) * _2356) + ((((cbLight._m0[_2580].x * _2322) * _2633) * _2647) * _2369);
    float _2733 = (((_2709 * cbLight._m0[_2661].y) * _2722) * _2356) + ((((cbLight._m0[_2580].y * _2324) * _2633) * _2647) * _2369);
    float _2734 = (((_2709 * cbLight._m0[_2661].z) * _2722) * _2356) + ((((cbLight._m0[_2580].z * _2326) * _2633) * _2647) * _2369);
    float _2790;
    float _2792;
    float _2794;
    if (_2409)
    {
        _2790 = _2732;
        _2792 = _2733;
        _2794 = _2734;
    }
    else
    {
        uint _2796 = _2333 + 2u;
        uint _2800 = _2333 + 10u;
        float _2814 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2796].w)) * _846) * 0.949999988079071044921875);
        float _2815 = _2814 * _2814;
        float _2816 = cbLight._m0[_2796].x + _922;
        float _2817 = cbLight._m0[_2796].y + _923;
        float _2818 = cbLight._m0[_2796].z + _924;
        float _2822 = inversesqrt(dot(vec3(_2816, _2817, _2818), vec3(_2816, _2817, _2818)));
        float _2823 = _2822 * _2816;
        float _2824 = _2822 * _2817;
        float _2825 = _2822 * _2818;
        float _2826 = dot(vec3(_843, _844, _845), vec3(cbLight._m0[_2796].xyz));
        float _4872 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        float _2829 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _2830 = dot(vec3(_843, _844, _845), vec3(_2823, _2824, _2825));
        float _4883 = isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : max(_2830, 0.0));
        float _2833 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2834 = dot(vec3(cbLight._m0[_2796].xyz), vec3(_2823, _2824, _2825));
        float _4894 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
        float _2838 = _2815 * _2815;
        float _2842 = ((_2833 * _2833) * (_2838 + (-1.0))) + 1.0;
        float _2851 = (exp2(log2(1.0 - (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2852 = 1.0 - _2815;
        float _2862 = (0.5 / (((_2609 * ((_2829 * _2852) + _2815)) + 9.9999999392252902907785028219223e-09) + (((_2609 * _2852) + _2815) * _2829))) * _2829;
        float _4905 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2864 = (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0))) * (_2838 / ((_2842 * _2842) * 3.141590118408203125));
        float _2865 = isnan(1.0) ? _2348 : (isnan(_2348) ? 1.0 : min(_2348, 1.0));
        _2790 = (((_2851 * cbLight._m0[_2800].x) * _2864) * _2865) + _2732;
        _2792 = (((_2851 * cbLight._m0[_2800].y) * _2864) * _2865) + _2733;
        _2794 = (((_2851 * cbLight._m0[_2800].z) * _2864) * _2865) + _2734;
    }
    float _2896;
    float _2898;
    float _2900;
    if (_2518)
    {
        _2896 = _2790;
        _2898 = _2792;
        _2900 = _2794;
    }
    else
    {
        uint _2907 = _2333 + 3u;
        uint _2911 = _2333 + 11u;
        float _2925 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2907].w)) * _846) * 0.949999988079071044921875);
        float _2926 = _2925 * _2925;
        float _2927 = cbLight._m0[_2907].x + _922;
        float _2928 = cbLight._m0[_2907].y + _923;
        float _2929 = cbLight._m0[_2907].z + _924;
        float _2933 = inversesqrt(dot(vec3(_2927, _2928, _2929), vec3(_2927, _2928, _2929)));
        float _2934 = _2933 * _2927;
        float _2935 = _2933 * _2928;
        float _2936 = _2933 * _2929;
        float _2937 = dot(vec3(_843, _844, _845), vec3(cbLight._m0[_2907].xyz));
        float _4921 = isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0));
        float _2940 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
        float _2941 = dot(vec3(_843, _844, _845), vec3(_2934, _2935, _2936));
        float _4932 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
        float _2944 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _2945 = dot(vec3(cbLight._m0[_2907].xyz), vec3(_2934, _2935, _2936));
        float _4943 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
        float _2949 = _2926 * _2926;
        float _2953 = ((_2944 * _2944) * (_2949 + (-1.0))) + 1.0;
        float _2962 = (exp2(log2(1.0 - (isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2963 = 1.0 - _2926;
        float _2973 = (0.5 / (((_2609 * ((_2940 * _2963) + _2926)) + 9.9999999392252902907785028219223e-09) + (((_2609 * _2963) + _2926) * _2940))) * _2940;
        float _4954 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
        float _2975 = (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0))) * (_2949 / ((_2953 * _2953) * 3.141590118408203125));
        float _2976 = isnan(1.0) ? _2349 : (isnan(_2349) ? 1.0 : min(_2349, 1.0));
        _2896 = (((_2962 * cbLight._m0[_2911].x) * _2975) * _2976) + _2790;
        _2898 = (((_2962 * cbLight._m0[_2911].y) * _2975) * _2976) + _2792;
        _2900 = (((_2962 * cbLight._m0[_2911].z) * _2975) * _2976) + _2794;
    }
    float _3042;
    float _3044;
    float _3046;
    float _3048;
    float _3050;
    float _3052;
    if (_2331.y == 0u)
    {
        uvec4 _2997 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2998 = _2997.x;
        uint _3009 = uint((float(_2997.y) * floor(float(uint(cbSceneParam._m0[85u].y * _943) / _2998))) + floor(float(uint(cbSceneParam._m0[85u].x * _942) / _2998)));
        float _3019 = (log2(_2109 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3020 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
        uint _3023 = uint(isnan(14.0) ? _3020 : (isnan(_3020) ? 14.0 : min(_3020, 14.0)));
        uvec4 _3028 = texelFetch(g_lightClusterGridBuffer, int(((_3023 << 2u) + (_3009 << 6u)) >> 2u));
        uint _3029 = _3028.x;
        uint _3030 = _2997.z;
        float _3109;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        if (((((1u << ((_3030 >> 4u) & 15u)) + 4294967295u) & _3029) == 0u) || ((_3030 & 240u) == 0u))
        {
            _3109 = 0.0;
            _3111 = 0.0;
            _3113 = 0.0;
            _3115 = 0.0;
            _3117 = 0.0;
            _3119 = 0.0;
        }
        else
        {
            float _3110;
            float _3112;
            float _3114;
            float _3116;
            float _3118;
            float _3120;
            float _3261 = 0.0;
            float _3262 = 0.0;
            float _3263 = 0.0;
            float _3264 = 0.0;
            float _3265 = 0.0;
            float _3266 = 0.0;
            uint _3267 = 0u;
            uint _3276;
            bool _3277;
            for (;;)
            {
                _3276 = texelFetch(g_lightClassification, int((((_3023 << 5u) + (_3009 << 9u)) + (_3267 << 2u)) >> 2u)).x;
                _3277 = _3276 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3277)
                {
                    frontier_phi_71_pred = _3266;
                    frontier_phi_71_pred_1 = _3265;
                    frontier_phi_71_pred_2 = _3264;
                    frontier_phi_71_pred_3 = _3263;
                    frontier_phi_71_pred_4 = _3262;
                    frontier_phi_71_pred_5 = _3261;
                }
                else
                {
                    float _3406;
                    float _3407;
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    uint _3412;
                    _3406 = _3261;
                    _3407 = _3262;
                    _3408 = _3263;
                    _3409 = _3264;
                    _3410 = _3265;
                    _3411 = _3266;
                    _3412 = _3276;
                    float _3333;
                    float _3334;
                    float _3335;
                    float _3336;
                    float _3337;
                    float _3338;
                    for (;;)
                    {
                        uint _3416 = uint(findLSB(_3412)) + (_3267 << 5u);
                        uint _3413 = (_3412 + 4294967295u) & _3412;
                        uint _3418 = _3416 * 48u;
                        vec4 _3432 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3418)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 3u)).x));
                        uint _3438 = (_3416 * 48u) + 4u;
                        vec4 _3451 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3438)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 3u)).x));
                        uint _3457 = (_3416 * 48u) + 8u;
                        vec3 _3468 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3457)).x, texelFetch(g_PointLightRenderingBuffer, int(_3457 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3457 + 2u)).x));
                        float _3472 = _3432.x - _2107;
                        float _3473 = _3432.y - _2108;
                        float _3474 = _3432.z - _2109;
                        float _3475 = dot(vec3(_3472, _3473, _3474), vec3(_3472, _3473, _3474));
                        float _3478 = inversesqrt(_3475);
                        float _3479 = _3478 * _3472;
                        float _3480 = _3478 * _3473;
                        float _3481 = _3478 * _3474;
                        float _3482 = dot(vec3(_961, _964, _967), vec3(_3479, _3480, _3481));
                        float _3487 = 1.0 - (_3475 * _3432.w);
                        float _4980 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                        float _3488 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3489 = sqrt(_3475) * _3451.w;
                        float _3492 = 1.39999997615814208984375 / (_3489 + 1.39999997615814208984375);
                        float _3493 = _3492 * _3492;
                        float _3496 = ((1.0 - _3493) * _3482) + _3493;
                        float _3499 = _3489 * _3489;
                        float _3503 = ((isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : max(_3496, 0.0))) * _3488) / ((_3499 * 0.699999988079071044921875) + 1.0);
                        float _3507 = (-0.0) - _2107;
                        float _3508 = (-0.0) - _2108;
                        float _3509 = (-0.0) - _2109;
                        float _3513 = inversesqrt(dot(vec3(_3507, _3508, _3509), vec3(_3507, _3508, _3509)));
                        float _3514 = _3513 * _3507;
                        float _3515 = _3513 * _3508;
                        float _3516 = _3513 * _3509;
                        float _3523 = exp2(log2(1.0 / ((_3499 * 3.5) + 5.0)) * 0.25);
                        float _3524 = 1.0 - _1021;
                        float _3531 = sqrt(1.0 - ((1.0 - (_3524 * _3524)) * (1.0 - (_3523 * _3523))));
                        float _3532 = _3531 * _3531;
                        float _3533 = _3532 * _3532;
                        float _3534 = _3514 + _3479;
                        float _3535 = _3515 + _3480;
                        float _3536 = _3516 + _3481;
                        float _3540 = inversesqrt(dot(vec3(_3534, _3535, _3536), vec3(_3534, _3535, _3536)));
                        float _3544 = dot(vec3(_961, _964, _967), vec3(_3514, _3515, _3516));
                        float _4996 = isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0));
                        float _3547 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                        float _3548 = dot(vec3(_961, _964, _967), vec3(_3540 * _3534, _3540 * _3535, _3540 * _3536));
                        float _5007 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                        float _3551 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                        float _3555 = ((_3551 * _3551) * (_3533 + (-1.0))) + 1.0;
                        float _3556 = _3492 * _3532;
                        float _3557 = _3556 * _3556;
                        float _3560 = ((1.0 - _3557) * _3482) + _3557;
                        float _5018 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0));
                        float _3561 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                        float _3562 = 1.0 - _3532;
                        float _3572 = (0.5 / (((_3561 * ((_3547 * _3562) + _3532)) + 9.9999999392252902907785028219223e-09) + (((_3561 * _3562) + _3532) * _3547))) * _3561;
                        float _5029 = isnan(0.0) ? _3572 : (isnan(_3572) ? 0.0 : max(_3572, 0.0));
                        float _3583 = (((_3533 * 3.1415927410125732421875) * (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) / ((_3555 * _3555) * ((_3499 * 2.1991131305694580078125) + 3.141590118408203125))) * _3488;
                        _3336 = (_3503 * _3451.x) + _3409;
                        _3337 = (_3503 * _3451.y) + _3410;
                        _3338 = (_3503 * _3451.z) + _3411;
                        _3333 = (_3583 * _3468.x) + _3406;
                        _3334 = (_3583 * _3468.y) + _3407;
                        _3335 = (_3583 * _3468.z) + _3408;
                        if (_3413 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3406 = _3333;
                            _3407 = _3334;
                            _3408 = _3335;
                            _3409 = _3336;
                            _3410 = _3337;
                            _3411 = _3338;
                            _3412 = _3413;
                        }
                    }
                    frontier_phi_71_pred = _3338;
                    frontier_phi_71_pred_1 = _3337;
                    frontier_phi_71_pred_2 = _3336;
                    frontier_phi_71_pred_3 = _3335;
                    frontier_phi_71_pred_4 = _3334;
                    frontier_phi_71_pred_5 = _3333;
                }
                _3120 = frontier_phi_71_pred;
                _3118 = frontier_phi_71_pred_1;
                _3116 = frontier_phi_71_pred_2;
                _3114 = frontier_phi_71_pred_3;
                _3112 = frontier_phi_71_pred_4;
                _3110 = frontier_phi_71_pred_5;
                uint _3268 = _3267 + 1u;
                if (_3268 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3261 = _3110;
                    _3262 = _3112;
                    _3263 = _3114;
                    _3264 = _3116;
                    _3265 = _3118;
                    _3266 = _3120;
                    _3267 = _3268;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3109 = _3110;
            _3111 = _3112;
            _3113 = _3114;
            _3115 = _3116;
            _3117 = _3118;
            _3119 = _3120;
        }
        uvec4 _3123 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3124 = _3123.z;
        uint _3126 = (_3124 >> 8u) & 15u;
        float _3229;
        float _3231;
        float _3233;
        float _3235;
        float _3237;
        float _3239;
        if (((4294967295u << _3126) & _3029) == 0u)
        {
            _3229 = _3109;
            _3231 = _3111;
            _3233 = _3113;
            _3235 = _3115;
            _3237 = _3117;
            _3239 = _3119;
        }
        else
        {
            float _3254 = inversesqrt(dot(vec3(_2107, _2108, _2109), vec3(_2107, _2108, _2109)));
            float _3255 = _3254 * _2107;
            float _3256 = _3254 * _2108;
            float _3257 = _3254 * _2109;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3126 < ((_3124 >> 12u) & 15u))
            {
                float _3230;
                float _3232;
                float _3234;
                float _3236;
                float _3238;
                float _3240;
                float _3389 = _3109;
                float _3390 = _3111;
                float _3391 = _3113;
                float _3392 = _3115;
                float _3393 = _3117;
                float _3394 = _3119;
                uint _3395 = _3126;
                uint _3404;
                bool _3405;
                for (;;)
                {
                    _3404 = texelFetch(g_lightClassification, int((((_3023 << 5u) + (_3009 << 9u)) + (_3395 << 2u)) >> 2u)).x;
                    _3405 = _3404 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3405)
                    {
                        frontier_phi_82_pred = _3394;
                        frontier_phi_82_pred_1 = _3393;
                        frontier_phi_82_pred_2 = _3392;
                        frontier_phi_82_pred_3 = _3391;
                        frontier_phi_82_pred_4 = _3390;
                        frontier_phi_82_pred_5 = _3389;
                    }
                    else
                    {
                        float _3597;
                        float _3598;
                        float _3599;
                        float _3600;
                        float _3601;
                        float _3602;
                        float _3890;
                        float _3891;
                        float _3892;
                        float _3893;
                        float _3894;
                        float _3895;
                        float _3610 = _3389;
                        float _3611 = _3390;
                        float _3612 = _3391;
                        float _3613 = _3392;
                        float _3614 = _3393;
                        float _3615 = _3394;
                        uint _3616 = _3404;
                        uint _3617;
                        vec4 _3642;
                        float _3643;
                        vec4 _3658;
                        vec3 _3670;
                        vec4 _3685;
                        vec4 _3700;
                        float _3746;
                        bool _3747;
                        for (;;)
                        {
                            uint _3627 = ((_3395 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3616));
                            _3617 = (_3616 + 4294967295u) & _3616;
                            uint _3629 = _3627 * 40u;
                            _3642 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3629)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 3u)).x));
                            _3643 = _3642.w;
                            uint _3645 = (_3627 * 40u) + 4u;
                            _3658 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3645)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3645 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3645 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3645 + 3u)).x));
                            uint _3660 = (_3627 * 40u) + 8u;
                            _3670 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3660)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 2u)).x));
                            uint _3672 = (_3627 * 40u) + 16u;
                            _3685 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3672)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 3u)).x));
                            uint _3687 = (_3627 * 40u) + 20u;
                            _3700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 3u)).x));
                            uint _3702 = (_3627 * 40u) + 24u;
                            vec4 _3715 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3702)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 3u)).x));
                            uint _3721 = (_3627 * 40u) + 28u;
                            vec4 _3734 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3721)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 3u)).x));
                            _3746 = fma(_2109, _3734.z, fma(_2108, _3734.y, _3734.x * _2107)) + _3734.w;
                            _3747 = !((fma(_2109, _3715.z, fma(_2108, _3715.y, _3715.x * _2107)) + _3715.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3747)
                            {
                                float _3774 = _3642.x - _2107;
                                float _3775 = _3642.y - _2108;
                                float _3776 = _3642.z - _2109;
                                float _3777 = dot(vec3(_3774, _3775, _3776), vec3(_3774, _3775, _3776));
                                float _3780 = inversesqrt(_3777);
                                float _3781 = _3780 * _3774;
                                float _3782 = _3780 * _3775;
                                float _3783 = _3780 * _3776;
                                float _3787 = 1.0 - (_3777 / (_3643 * _3643));
                                float _5040 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3788 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3792 = sqrt(_3777) * _3658.w;
                                float _3794 = 1.39999997615814208984375 / (_3792 + 1.39999997615814208984375);
                                float _3795 = _3794 * _3794;
                                float _3798 = ((1.0 - _3795) * dot(vec3(_3781, _3782, _3783), vec3(_961, _964, _967))) + _3795;
                                float _3801 = _3792 * _3792;
                                float _3805 = (fma(_2109, _3685.z, fma(_2108, _3685.y, _3685.x * _2107)) + _3685.w) / _3746;
                                float _3806 = (fma(_2109, _3700.z, fma(_2108, _3700.y, _3700.x * _2107)) + _3700.w) / _3746;
                                float _3810 = 1.0 - dot(vec2(_3805, _3806), vec2(_3805, _3806));
                                float _5056 = isnan(0.0) ? _3810 : (isnan(_3810) ? 0.0 : max(_3810, 0.0));
                                float _3811 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
                                float _3812 = _3811 * (((isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0))) * _3788) / ((_3801 * 0.699999988079071044921875) + 1.0));
                                float _3824 = exp2(log2(1.0 / ((_3801 * 3.5) + 5.0)) * 0.25);
                                float _3825 = 1.0 - _1021;
                                float _3832 = sqrt(1.0 - ((1.0 - (_3825 * _3825)) * (1.0 - (_3824 * _3824))));
                                float _3833 = _3832 * _3832;
                                float _3834 = _3833 * _3833;
                                float _3835 = _3781 - _3255;
                                float _3836 = _3782 - _3256;
                                float _3837 = _3783 - _3257;
                                float _3841 = inversesqrt(dot(vec3(_3835, _3836, _3837), vec3(_3835, _3836, _3837)));
                                float _3845 = dot(vec3(_961, _964, _967), vec3((-0.0) - _3255, (-0.0) - _3256, (-0.0) - _3257));
                                float _5067 = isnan(0.0) ? _3845 : (isnan(_3845) ? 0.0 : max(_3845, 0.0));
                                float _3848 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                                float _3849 = dot(vec3(_961, _964, _967), vec3(_3841 * _3835, _3841 * _3836, _3841 * _3837));
                                float _5078 = isnan(0.0) ? _3849 : (isnan(_3849) ? 0.0 : max(_3849, 0.0));
                                float _3852 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                                float _3856 = ((_3852 * _3852) * (_3834 + (-1.0))) + 1.0;
                                float _3857 = _3794 * _3833;
                                float _3858 = _3857 * _3857;
                                float _3864 = ((1.0 - _3858) * dot(vec3(_961, _964, _967), vec3(_3781, _3782, _3783))) + _3858;
                                float _5089 = isnan(0.0) ? _3864 : (isnan(_3864) ? 0.0 : max(_3864, 0.0));
                                float _3865 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                                float _3866 = 1.0 - _3833;
                                float _3876 = (0.5 / (((_3865 * ((_3848 * _3866) + _3833)) + 9.9999999392252902907785028219223e-09) + (((_3865 * _3866) + _3833) * _3848))) * _3865;
                                float _5100 = isnan(0.0) ? _3876 : (isnan(_3876) ? 0.0 : max(_3876, 0.0));
                                float _3886 = (_3811 * _3788) * (((_3834 * 3.1415927410125732421875) * (isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0)))) / ((_3856 * _3856) * ((_3801 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3812 * _3658.z;
                                frontier_phi_88_pred_1 = _3812 * _3658.y;
                                frontier_phi_88_pred_2 = _3812 * _3658.x;
                                frontier_phi_88_pred_3 = _3886 * _3670.z;
                                frontier_phi_88_pred_4 = _3886 * _3670.y;
                                frontier_phi_88_pred_5 = _3886 * _3670.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3895 = frontier_phi_88_pred;
                            _3894 = frontier_phi_88_pred_1;
                            _3893 = frontier_phi_88_pred_2;
                            _3892 = frontier_phi_88_pred_3;
                            _3891 = frontier_phi_88_pred_4;
                            _3890 = frontier_phi_88_pred_5;
                            _3600 = _3893 + _3613;
                            _3601 = _3894 + _3614;
                            _3602 = _3895 + _3615;
                            _3597 = _3890 + _3610;
                            _3598 = _3891 + _3611;
                            _3599 = _3892 + _3612;
                            if (_3617 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3610 = _3597;
                                _3611 = _3598;
                                _3612 = _3599;
                                _3613 = _3600;
                                _3614 = _3601;
                                _3615 = _3602;
                                _3616 = _3617;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3602;
                        frontier_phi_82_pred_1 = _3601;
                        frontier_phi_82_pred_2 = _3600;
                        frontier_phi_82_pred_3 = _3599;
                        frontier_phi_82_pred_4 = _3598;
                        frontier_phi_82_pred_5 = _3597;
                    }
                    _3240 = frontier_phi_82_pred;
                    _3238 = frontier_phi_82_pred_1;
                    _3236 = frontier_phi_82_pred_2;
                    _3234 = frontier_phi_82_pred_3;
                    _3232 = frontier_phi_82_pred_4;
                    _3230 = frontier_phi_82_pred_5;
                    uint _3396 = _3395 + 1u;
                    if (_3396 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3389 = _3230;
                        _3390 = _3232;
                        _3391 = _3234;
                        _3392 = _3236;
                        _3393 = _3238;
                        _3394 = _3240;
                        _3395 = _3396;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3236;
                frontier_phi_63_64_ladder_1 = _3240;
                frontier_phi_63_64_ladder_2 = _3238;
                frontier_phi_63_64_ladder_3 = _3234;
                frontier_phi_63_64_ladder_4 = _3232;
                frontier_phi_63_64_ladder_5 = _3230;
            }
            else
            {
                frontier_phi_63_64_ladder = _3115;
                frontier_phi_63_64_ladder_1 = _3119;
                frontier_phi_63_64_ladder_2 = _3117;
                frontier_phi_63_64_ladder_3 = _3113;
                frontier_phi_63_64_ladder_4 = _3111;
                frontier_phi_63_64_ladder_5 = _3109;
            }
            _3229 = frontier_phi_63_64_ladder_5;
            _3231 = frontier_phi_63_64_ladder_4;
            _3233 = frontier_phi_63_64_ladder_3;
            _3235 = frontier_phi_63_64_ladder;
            _3237 = frontier_phi_63_64_ladder_2;
            _3239 = frontier_phi_63_64_ladder_1;
        }
        float _3244 = isnan(1.0) ? _1005 : (isnan(_1005) ? 1.0 : min(_1005, 1.0));
        _3042 = (_3244 * _3235) + _2573;
        _3044 = (_3244 * _3237) + _2575;
        _3046 = (_3244 * _3239) + _2577;
        _3048 = ((_3229 * 0.039999999105930328369140625) * _3244) + _2896;
        _3050 = ((_3231 * 0.039999999105930328369140625) * _3244) + _2898;
        _3052 = ((_3233 * 0.039999999105930328369140625) * _3244) + _2900;
    }
    else
    {
        _3042 = _2573;
        _3044 = _2575;
        _3046 = _2577;
        _3048 = _2896;
        _3050 = _2898;
        _3052 = _2900;
    }
    float _5116 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _5127 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _5138 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    float _3069 = ((isnan(1.0) ? _5116 : (isnan(_5116) ? 1.0 : min(_5116, 1.0))) * (_3042 + ((isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0))) * _1005))) + ((_3048 + ((isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0))) * _1841)) * cbPerFrame._m0[3u].x);
    float _3070 = ((isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_3044 + ((isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0))) * _1005))) + ((_3050 + ((isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0))) * _1841)) * cbPerFrame._m0[3u].x);
    float _3071 = ((isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0))) * (_3046 + ((isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0))) * _1005))) + ((_3052 + ((isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0))) * _1841)) * cbPerFrame._m0[3u].x);
    uint _3072 = _281 + 6u;
    float _3080 = _942 / cbSceneParam._m0[86u].x;
    float _3081 = _943 / cbSceneParam._m0[86u].y;
    vec4 _3095 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3080, _3081, (log2((isnan(cbSceneParam._m0[77u].w) ? _864 : (isnan(_864) ? cbSceneParam._m0[77u].w : min(_864, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3097 = _3095.x;
    float _3098 = _3095.y;
    float _3099 = _3095.z;
    float _3100 = _3095.w;
    float _3171;
    float _3173;
    float _3175;
    float _3177;
    if (_864 > cbSceneParam._m0[78u].w)
    {
        float _3134 = isnan(_864) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _864 : min(cbSceneParam._m0[80u].w, _864));
        float _3135 = _3134 / _864;
        float _3146 = _3135 * _915;
        float _3147 = _916 * _3135;
        float _3148 = (-0.0) - _3147;
        float _3149 = _3135 * _917;
        float _3151 = (cbSceneParam._m0[77u].w * _3148) / _3134;
        float _3152 = _3151 + cbSceneParam._m0[79u].w;
        float _3153 = cbSceneParam._m0[79u].w - _3147;
        float _3159 = sqrt(((_3146 * _3146) + (_3147 * _3147)) + (_3149 * _3149));
        float _3162 = (1.0 - (cbSceneParam._m0[77u].w / _3134)) * _3159;
        float _3167 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3169 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3346;
        if (abs((_3148 - _3151) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3346 = ((((_3152 > 0.0) ? exp2(_3167 * _3152) : (2.0 - exp2(_3169 * _3152))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3162;
        }
        else
        {
            float _3290 = 1.0 / cbSceneParam._m0[80u].x;
            float _3291 = isnan(_3153) ? _3152 : (isnan(_3152) ? _3153 : max(_3152, _3153));
            float _3292 = isnan(_3153) ? _3152 : (isnan(_3152) ? _3153 : min(_3152, _3153));
            float _3301 = isnan(0.0) ? _3291 : (isnan(_3291) ? 0.0 : min(_3291, 0.0));
            float _3302 = isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : min(_3292, 0.0));
            _3346 = ((abs(_3159 / _3148) * cbSceneParam._m0[80u].y) * ((((_3301 - _3302) * 2.0) - ((exp2(_3167 * (isnan(0.0) ? _3291 : (isnan(_3291) ? 0.0 : max(_3291, 0.0)))) - exp2(_3167 * (isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : max(_3292, 0.0))))) * _3290)) - ((exp2(_3169 * _3301) - exp2(_3169 * _3302)) * _3290))) + (_3162 * cbSceneParam._m0[80u].z);
        }
        vec4 _3348 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3080, _3081, 1.0), 0.0);
        float _3357 = exp2((_3346 * (-1.44269502162933349609375)) * (1.0 - _3348.w));
        float _3358 = log2(_3357);
        float _3374 = log2(_3100);
        _3171 = (exp2(_3374 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3358 * cbSceneParam._m0[78u].x)) * _3348.x) / cbSceneParam._m0[78u].x)) + _3097;
        _3173 = (exp2(_3374 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3358 * cbSceneParam._m0[78u].y)) * _3348.y) / cbSceneParam._m0[78u].y)) + _3098;
        _3175 = (exp2(_3374 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3358 * cbSceneParam._m0[78u].z)) * _3348.z) / cbSceneParam._m0[78u].z)) + _3099;
        _3177 = _3357 * _3100;
    }
    else
    {
        _3171 = _3097;
        _3173 = _3098;
        _3175 = _3099;
        _3177 = _3100;
    }
    bool _3384;
    vec4 _3187;
    vec4 _3209;
    float _3211;
    float _3215;
    float _3216;
    float _3217;
    float _3218;
    bool _3228;
    for (;;)
    {
        _3187 = cbMatDynParam._m0[0u];
        float _3189 = roundEven(_3187.y);
        bool _3190 = _3189 == 3.0;
        float _3191 = log2(_3177);
        float _3198 = exp2(_3191 * cbSceneParam._m0[78u].x) * _3069;
        float _3199 = exp2(_3191 * cbSceneParam._m0[78u].y) * _3070;
        float _3200 = exp2(_3191 * cbSceneParam._m0[78u].z) * _3071;
        float _3207 = _931 + (-0.5);
        _3209 = cbMtdParam._m0[1u];
        _3211 = _3209.y * _3207;
        float _3214 = (_3189 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3215 = _3214 * (_3190 ? _3198 : (_3198 + (cbSceneParam._m0[72u].w * _3171)));
        _3216 = _3214 * (_3190 ? _3199 : (_3199 + (cbSceneParam._m0[72u].w * _3173)));
        _3217 = _3214 * (_3190 ? _3200 : (_3200 + (cbSceneParam._m0[72u].w * _3175)));
        _3218 = _3207 * 0.999000012874603271484375;
        _3228 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3228)
        {
            if ((cbInstanceData._m0[_281 + 7u].x + _3218) < 0.5)
            {
                _3384 = true;
                break;
            }
        }
        uint _3325 = _980 + uint(_3187.w);
        if ((cbInstanceData._m0[_3325].w < 1.0) && ((cbInstanceData._m0[_3325].w + _3218) < 0.5))
        {
            _3384 = true;
            break;
        }
        if ((_3211 + 1.0) < _3209.x)
        {
            _3384 = true;
            break;
        }
        _3384 = false;
        break;
    }
    float _3588;
    if (_3384)
    {
        discard_state = true;
        _3588 = 0.0;
    }
    else
    {
        _3588 = cbInstanceData._m0[_3072].w;
    }
    SV_Target.x = _3215;
    SV_Target.y = _3216;
    SV_Target.z = _3217;
    SV_Target.w = _3588;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3072].w;
    discard_exit();
}


