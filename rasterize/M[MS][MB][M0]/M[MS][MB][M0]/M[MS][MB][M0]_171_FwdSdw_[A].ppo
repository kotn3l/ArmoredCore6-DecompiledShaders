#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1240;
float _3884;
float _3885;
float _3886;
float _3887;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _255 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _258 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3896 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _3907 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _3918 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    uint _268 = uint(roundEven(NORMAL.w)) * 13u;
    uint _273 = _268 + 1u;
    uint _277 = _268 + 2u;
    float _286 = sqrt(((cbInstanceData._m0[_273].x * cbInstanceData._m0[_273].x) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x)) + (cbInstanceData._m0[_277].x * cbInstanceData._m0[_277].x));
    float _287 = _286 * TEXCOORD.z;
    float _288 = _286 * TEXCOORD.w;
    vec4 _301 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _287) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _288) + cbTextureTilingScale._m0[13u].w));
    vec4 _325 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _330 = _325.x * cbMtdParam._m0[11u].x;
    float _331 = _325.y * cbMtdParam._m0[11u].y;
    float _332 = _325.z * cbMtdParam._m0[11u].z;
    vec4 _351 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _287) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _288) + cbTextureTilingScale._m0[5u].w));
    vec4 _388 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _390 = _388.x;
    float _400 = dot(vec4(_390, _388.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _417 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_390 - _400) * cbMtdParam._m0[24u].x) + _400) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3929 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _418 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _425 = (_418 * ((_351.x * cbMtdParam._m0[12u].x) - _330)) + _330;
    float _426 = (_418 * ((_351.y * cbMtdParam._m0[12u].y) - _331)) + _331;
    float _427 = (_418 * ((_351.z * cbMtdParam._m0[12u].z) - _332)) + _332;
    vec4 _444 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _287) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _288) + cbTextureTilingScale._m0[3u].w));
    vec4 _464 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _466 = _464.x;
    float _476 = dot(vec4(_466, _464.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _490 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_466 - _476) * cbMtdParam._m0[24u].x) + _476) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3940 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _491 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _498 = (_491 * ((_444.x * cbMtdParam._m0[13u].x) - _425)) + _425;
    float _499 = (_491 * ((_444.y * cbMtdParam._m0[13u].y) - _426)) + _426;
    float _500 = (_491 * ((_444.z * cbMtdParam._m0[13u].z) - _427)) + _427;
    float _504 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _301.x) * _498;
    float _507 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _301.y) * _499;
    float _510 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _301.z) * _500;
    float _517 = ((_498 - _504) * (isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0)))) + _504;
    float _518 = ((_499 - _507) * (isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0)))) + _507;
    float _519 = ((_500 - _510) * (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0)))) + _510;
    vec4 _531 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _287) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _288) + cbTextureTilingScale._m0[20u].w));
    vec4 _554 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _287) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _288) + cbTextureTilingScale._m0[4u].w));
    vec4 _571 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _573 = _571.x;
    float _574 = _571.y;
    float _575 = _571.z;
    float _582 = ((_554.x - _573) * _418) + _573;
    float _583 = ((_554.y - _574) * _418) + _574;
    float _584 = ((_554.z - _575) * _418) + _575;
    vec4 _596 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _287) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _288) + cbTextureTilingScale._m0[2u].w));
    float _609 = ((_596.z - _584) * _491) + _584;
    float _612 = ((((_596.x - _582) * _491) + _582) * 2.0) + (-1.0);
    float _613 = ((((_596.y - _583) * _491) + _583) * 2.0) + (-1.0);
    float _614 = dot(vec2(_612, _613), vec2(_612, _613));
    float _3951 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _619 = sqrt(1.0 - (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0))));
    vec4 _639 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _651 = (_612 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_531.x * 2.0) + (-1.0)))) + (((_639.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _652 = (_613 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_531.y * 2.0) + (-1.0)))) + (((_639.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _657 = (((_531.z - _609) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _609;
    float _661 = ((_639.z - _657) * cbMtdParam._m0[19u].w) + _657;
    float _663 = cbMtdParam._m0[22u].x + _639.w;
    float _666 = fma(_619, _234 * NORMAL.x, fma(_652, _241 * TANGENT.x, (_227 * _219) * _651));
    float _669 = fma(_619, _234 * NORMAL.y, fma(_652, _241 * TANGENT.y, (_227 * _220) * _651));
    float _672 = fma(_619, _234 * NORMAL.z, fma(_652, _241 * TANGENT.z, (_227 * _221) * _651));
    float _676 = inversesqrt(dot(vec3(_666, _669, _672), vec3(_666, _669, _672)));
    float _677 = _676 * _666;
    float _678 = _676 * _669;
    float _679 = _676 * _672;
    float _3962 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _680 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
    float _3973 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _3984 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _3995 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _4006 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _698 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _740 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _750 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _740);
    float _751 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _740);
    float _752 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _740);
    float _756 = inversesqrt(dot(vec3(_750, _751, _752), vec3(_750, _751, _752)));
    float _757 = _750 * _756;
    float _758 = _751 * _756;
    float _759 = _752 * _756;
    vec4 _764 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _766 = _764.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _920 = sqrt(((_750 * _750) + (_751 * _751)) + (_752 * _752));
        float _926 = (cbMatDynParam._m0[5u].x * _920) + cbMatDynParam._m0[5u].y;
        float _4017 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
        float _927 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
        float _931 = (cbMatDynParam._m0[5u].z * _920) + cbMatDynParam._m0[5u].w;
        float _4028 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0))) - _927)) + _927) < ((_766 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _777 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _778 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _796 = fma(_679, cbSceneParam._m0[5u].z, fma(_678, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _677));
    float _799 = fma(_679, cbSceneParam._m0[6u].z, fma(_678, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _677));
    float _802 = fma(_679, cbSceneParam._m0[7u].z, fma(_678, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _677));
    uint _815 = _268 + 9u;
    uint _816 = _815 + uint(cbMatDynParam._m0[0u].w);
    float _822 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0)))) * cbInstanceData._m0[_816].x;
    float _823 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0)))) * cbInstanceData._m0[_816].y;
    float _824 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0)))) * cbInstanceData._m0[_816].z;
    float _4039 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
    float _4050 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    float _4061 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    vec4 _836 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _777, cbSceneParam._m0[86u].y * _778));
    float _840 = ((isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0))) * TEXCOORD_5.w) * _836.x;
    float _841 = dot(vec3(_677, _678, _679), vec3(_757, _758, _759));
    float _844 = _841 * 2.0;
    float _848 = (_844 * _677) - _757;
    float _849 = (_844 * _678) - _758;
    float _850 = (_844 * _679) - _759;
    float _854 = abs(dot(vec3(_757, _758, _759), vec3(_677, _678, _679)));
    float _4072 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _856 = sqrt(_680);
    float _869 = exp2((_856 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_856 * 3.0));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _909 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1239;
    float _1241;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _964 = fma(_909, cbModelParam._m0[26u].z, fma(_905, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _901));
        float _968 = fma(_909, cbModelParam._m0[27u].z, fma(_905, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _901));
        float _972 = fma(_909, cbModelParam._m0[28u].z, fma(_905, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _901));
        float _997 = _901 + _677;
        float _998 = _905 + _678;
        float _999 = _909 + _679;
        float _1009 = fma(_999, cbModelParam._m0[26u].z, fma(_998, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _997)) - _964;
        float _1010 = fma(_999, cbModelParam._m0[27u].z, fma(_998, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _997)) - _968;
        float _1011 = fma(_999, cbModelParam._m0[28u].z, fma(_998, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _997)) - _972;
        float _1015 = inversesqrt(dot(vec3(_1009, _1010, _1011), vec3(_1009, _1010, _1011)));
        float _1028 = ((_1015 * _1009) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_964 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1029 = ((_1015 * _1010) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_968 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1030 = ((_1015 * _1011) / cbModelParam._m0[34u].z) + ((((((_972 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1033 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1028, _1029, _1030), 0.0);
        vec4 _1040 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1028, _1029, _1030), 0.0);
        vec4 _1047 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1028, _1029, _1030), 0.0);
        vec4 _1054 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1028, _1029, _1030), 0.0);
        float _1067 = exp2((_1033.w + (-0.5)) * 20.0) * 2.0;
        float _1068 = _1067 * (_1033.x + (-0.5));
        float _1069 = _1067 * (_1033.y + (-0.5));
        float _1070 = _1067 * (_1033.z + (-0.5));
        float _1077 = exp2((_1040.w + (-0.5)) * 20.0) * 2.0;
        float _1078 = _1077 * (_1040.x + (-0.5));
        float _1079 = _1077 * (_1040.y + (-0.5));
        float _1080 = _1077 * (_1040.z + (-0.5));
        float _1087 = exp2((_1047.w + (-0.5)) * 20.0) * 2.0;
        float _1088 = _1087 * (_1047.x + (-0.5));
        float _1089 = _1087 * (_1047.y + (-0.5));
        float _1090 = _1087 * (_1047.z + (-0.5));
        float _1097 = exp2((_1054.w + (-0.5)) * 20.0) * 2.0;
        float _1098 = _1097 * (_1054.x + (-0.5));
        float _1099 = _1097 * (_1054.y + (-0.5));
        float _1100 = _1097 * (_1054.z + (-0.5));
        float _1101 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1102 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1103 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1104 = _1068 * 0.5;
        float _1105 = _1078 * 0.5;
        float _1106 = _1088 * 0.5;
        float _1107 = dot(vec3(_1104, _1105, _1106), vec3(_1104, _1105, _1106));
        float _1112 = (_1107 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1107);
        float _1121 = (dot(vec3(_677, _678, _679), vec3(_1112 * _1104, _1112 * _1105, _1112 * _1106)) + 1.0) * 0.5;
        float _4098 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1131 = sqrt(((_1105 * _1105) + (_1104 * _1104)) + (_1106 * _1106)) / (_1101 + 9.9999997473787516355514526367188e-06);
        float _4109 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1132 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
        float _1133 = _1132 * 2.0;
        float _1137 = (1.0 - _1132) / (_1132 + 1.0);
        float _4120 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1138 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1147 = ((((1.0 - _1138) * (_1133 + 2.0)) * exp2(log2(isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * (_1133 + 1.0))) + _1138) * _1101;
        float _1148 = _1069 * 0.5;
        float _1149 = _1079 * 0.5;
        float _1150 = _1089 * 0.5;
        float _1151 = dot(vec3(_1148, _1149, _1150), vec3(_1148, _1149, _1150));
        float _1156 = (_1151 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1151);
        float _1164 = (dot(vec3(_677, _678, _679), vec3(_1156 * _1148, _1156 * _1149, _1156 * _1150)) + 1.0) * 0.5;
        float _4131 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1173 = sqrt(((_1149 * _1149) + (_1148 * _1148)) + (_1150 * _1150)) / (_1102 + 9.9999997473787516355514526367188e-06);
        float _4142 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1174 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1175 = _1174 * 2.0;
        float _1179 = (1.0 - _1174) / (_1174 + 1.0);
        float _4153 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1189 = ((((1.0 - _1180) * (_1175 + 2.0)) * exp2(log2(isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * (_1175 + 1.0))) + _1180) * _1102;
        float _1190 = _1070 * 0.5;
        float _1191 = _1080 * 0.5;
        float _1192 = _1090 * 0.5;
        float _1193 = dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192));
        float _1198 = (_1193 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1193);
        float _1206 = (dot(vec3(_677, _678, _679), vec3(_1198 * _1190, _1198 * _1191, _1198 * _1192)) + 1.0) * 0.5;
        float _4164 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1215 = sqrt(((_1191 * _1191) + (_1190 * _1190)) + (_1192 * _1192)) / (_1103 + 9.9999997473787516355514526367188e-06);
        float _4175 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1216 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _1217 = _1216 * 2.0;
        float _1221 = (1.0 - _1216) / (_1216 + 1.0);
        float _4186 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1231 = ((((1.0 - _1222) * (_1217 + 2.0)) * exp2(log2(isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) * (_1217 + 1.0))) + _1222) * _1103;
        _1239 = _1070;
        _1241 = _1069;
        _1242 = _1068;
        _1243 = _1080;
        _1244 = _1079;
        _1245 = _1078;
        _1246 = _1090;
        _1247 = _1089;
        _1248 = _1088;
        _1249 = _1103;
        _1250 = _1102;
        _1251 = _1101;
        _1252 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0)));
        _1253 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0)));
        _1254 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0)));
    }
    else
    {
        _1239 = _1240;
        _1241 = _1240;
        _1242 = _1240;
        _1243 = _1240;
        _1244 = _1240;
        _1245 = _1240;
        _1246 = _1240;
        _1247 = _1240;
        _1248 = _1240;
        _1249 = _1240;
        _1250 = _1240;
        _1251 = _1240;
        _1252 = 0.0;
        _1253 = 0.0;
        _1254 = 0.0;
    }
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1281 = fma(_909, cbModelParam._m0[30u].z, fma(_905, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _901));
        float _1285 = fma(_909, cbModelParam._m0[31u].z, fma(_905, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _901));
        float _1289 = fma(_909, cbModelParam._m0[32u].z, fma(_905, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _901));
        float _1312 = _901 + _677;
        float _1313 = _905 + _678;
        float _1314 = _909 + _679;
        float _1324 = fma(_1314, cbModelParam._m0[30u].z, fma(_1313, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1312)) - _1281;
        float _1325 = fma(_1314, cbModelParam._m0[31u].z, fma(_1313, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1312)) - _1285;
        float _1326 = fma(_1314, cbModelParam._m0[32u].z, fma(_1313, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1312)) - _1289;
        float _1330 = inversesqrt(dot(vec3(_1324, _1325, _1326), vec3(_1324, _1325, _1326)));
        float _1343 = ((_1330 * _1324) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1281 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1344 = ((_1330 * _1325) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1285 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1345 = ((_1330 * _1326) / cbModelParam._m0[35u].z) + ((((((_1289 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1347 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1343, _1344, _1345), 0.0);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1343, _1344, _1345), 0.0);
        vec4 _1361 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1343, _1344, _1345), 0.0);
        vec4 _1368 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1343, _1344, _1345), 0.0);
        float _1380 = exp2((_1347.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1347.x + (-0.5));
        float _1382 = _1380 * (_1347.y + (-0.5));
        float _1383 = _1380 * (_1347.z + (-0.5));
        float _1390 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1354.x + (-0.5));
        float _1392 = _1390 * (_1354.y + (-0.5));
        float _1393 = _1390 * (_1354.z + (-0.5));
        float _1400 = exp2((_1361.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1361.x + (-0.5));
        float _1402 = _1400 * (_1361.y + (-0.5));
        float _1403 = _1400 * (_1361.z + (-0.5));
        float _1410 = exp2((_1368.w + (-0.5)) * 20.0) * 2.0;
        float _1411 = _1410 * (_1368.x + (-0.5));
        float _1412 = _1410 * (_1368.y + (-0.5));
        float _1413 = _1410 * (_1368.z + (-0.5));
        float _1414 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1415 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1416 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1417 = _1381 * 0.5;
        float _1418 = _1391 * 0.5;
        float _1419 = _1401 * 0.5;
        float _1420 = dot(vec3(_1417, _1418, _1419), vec3(_1417, _1418, _1419));
        float _1425 = (_1420 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1420);
        float _1433 = (dot(vec3(_677, _678, _679), vec3(_1425 * _1417, _1425 * _1418, _1425 * _1419)) + 1.0) * 0.5;
        float _4227 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1442 = sqrt(((_1418 * _1418) + (_1417 * _1417)) + (_1419 * _1419)) / (_1414 + 9.9999997473787516355514526367188e-06);
        float _4238 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1444 = _1443 * 2.0;
        float _1448 = (1.0 - _1443) / (_1443 + 1.0);
        float _4249 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1458 = ((((1.0 - _1449) * (_1444 + 2.0)) * exp2(log2(isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0))) * (_1444 + 1.0))) + _1449) * _1414;
        float _1459 = _1382 * 0.5;
        float _1460 = _1392 * 0.5;
        float _1461 = _1402 * 0.5;
        float _1462 = dot(vec3(_1459, _1460, _1461), vec3(_1459, _1460, _1461));
        float _1467 = (_1462 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1462);
        float _1475 = (dot(vec3(_677, _678, _679), vec3(_1467 * _1459, _1467 * _1460, _1467 * _1461)) + 1.0) * 0.5;
        float _4260 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1484 = sqrt(((_1460 * _1460) + (_1459 * _1459)) + (_1461 * _1461)) / (_1415 + 9.9999997473787516355514526367188e-06);
        float _4271 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1485 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1486 = _1485 * 2.0;
        float _1490 = (1.0 - _1485) / (_1485 + 1.0);
        float _4282 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1491 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1500 = ((((1.0 - _1491) * (_1486 + 2.0)) * exp2(log2(isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * (_1486 + 1.0))) + _1491) * _1415;
        float _1501 = _1383 * 0.5;
        float _1502 = _1393 * 0.5;
        float _1503 = _1403 * 0.5;
        float _1504 = dot(vec3(_1501, _1502, _1503), vec3(_1501, _1502, _1503));
        float _1509 = (_1504 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1504);
        float _1517 = (dot(vec3(_677, _678, _679), vec3(_1509 * _1501, _1509 * _1502, _1509 * _1503)) + 1.0) * 0.5;
        float _4293 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1526 = sqrt(((_1502 * _1502) + (_1501 * _1501)) + (_1503 * _1503)) / (_1416 + 9.9999997473787516355514526367188e-06);
        float _4304 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1527 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
        float _1528 = _1527 * 2.0;
        float _1532 = (1.0 - _1527) / (_1527 + 1.0);
        float _4315 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1533 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1542 = ((((1.0 - _1533) * (_1528 + 2.0)) * exp2(log2(isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0))) * (_1528 + 1.0))) + _1533) * _1416;
        _1550 = _1383;
        _1551 = _1382;
        _1552 = _1381;
        _1553 = _1393;
        _1554 = _1392;
        _1555 = _1391;
        _1556 = _1403;
        _1557 = _1402;
        _1558 = _1401;
        _1559 = _1416;
        _1560 = _1415;
        _1561 = _1414;
        _1562 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0)));
        _1563 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0)));
        _1564 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0)));
    }
    else
    {
        _1550 = _1240;
        _1551 = _1240;
        _1552 = _1240;
        _1553 = _1240;
        _1554 = _1240;
        _1555 = _1240;
        _1556 = _1240;
        _1557 = _1240;
        _1558 = _1240;
        _1559 = _1240;
        _1560 = _1240;
        _1561 = _1240;
        _1562 = 0.0;
        _1563 = 0.0;
        _1564 = 0.0;
    }
    float _1574 = (cbModelParam._m0[1u].x * (_1562 - _1252)) + _1252;
    float _1575 = (cbModelParam._m0[1u].x * (_1563 - _1253)) + _1253;
    float _1576 = (cbModelParam._m0[1u].x * (_1564 - _1254)) + _1254;
    float _1597 = fma(_1576, cbSceneParam._m0[89u].z, fma(_1575, cbSceneParam._m0[89u].y, _1574 * cbSceneParam._m0[89u].x));
    float _1600 = fma(_1576, cbSceneParam._m0[90u].z, fma(_1575, cbSceneParam._m0[90u].y, _1574 * cbSceneParam._m0[90u].x));
    float _1603 = fma(_1576, cbSceneParam._m0[91u].z, fma(_1575, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1574));
    float _1618 = _848 * 0.5;
    float _1619 = _849 * 0.5;
    float _1620 = _850 * 0.5;
    float _1621 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1552, _1555, _1558, _1561));
    float _1624 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1551, _1554, _1557, _1560));
    float _1627 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1550, _1553, _1556, _1559));
    float _1661;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1634 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1239, _1243, _1246, _1249));
        float _1638 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1241, _1244, _1247, _1250));
        float _1642 = dot(vec4(_1618, _1619, _1620, 1.0), vec4(_1242, _1245, _1248, _1251));
        float _1649 = dot(vec4(cbModelParam._m0[39u]), vec4(_1618, _1619, _1620, 1.0));
        _1661 = dot(vec3(isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0)), isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)), isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1649) ? 0.0 : (isnan(0.0) ? _1649 : max(0.0, _1649))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1661 = 1.0;
    }
    float _1672;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1663 = dot(vec4(cbModelParam._m0[40u]), vec4(_1618, _1619, _1620, 1.0));
        _1672 = dot(vec3(isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0)), isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1663) ? 0.0 : (isnan(0.0) ? _1663 : max(0.0, _1663))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1672 = 1.0;
    }
    float _1676 = (_1672 * cbModelParam._m0[1u].x) + (_1661 * (1.0 - cbModelParam._m0[1u].x));
    float _1686 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _680);
    float _1687 = isnan(_1686) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1686 : min(cbModelParam._m0[25u].z, _1686));
    float _1769;
    float _1771;
    float _1773;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1736 = fma(_909, cbModelParam._m0[13u].z, fma(_905, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _901)) + cbModelParam._m0[13u].w;
        float _1740 = fma(_909, cbModelParam._m0[14u].z, fma(_905, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _901)) + cbModelParam._m0[14u].w;
        float _1744 = fma(_909, cbModelParam._m0[15u].z, fma(_905, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _901)) + cbModelParam._m0[15u].w;
        float _1747 = fma(_850, cbModelParam._m0[13u].z, fma(_849, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _848));
        float _1750 = fma(_850, cbModelParam._m0[14u].z, fma(_849, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _848));
        float _1753 = fma(_850, cbModelParam._m0[15u].z, fma(_849, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _848));
        float _1781;
        if (_1747 > 0.0)
        {
            _1781 = abs((1.0 - _1736) / _1747);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1747 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1736 + 1.0) / _1747);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1781 = frontier_phi_17_15_ladder;
        }
        float _1952;
        if (_1750 > 0.0)
        {
            _1952 = abs((1.0 - _1740) / _1750);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1750 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1740 + 1.0) / _1750);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1952 = frontier_phi_26_22_ladder;
        }
        float _2247;
        if (_1753 > 0.0)
        {
            _2247 = abs((1.0 - _1744) / _1753);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1753 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1744 + 1.0) / _1753);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2247 = frontier_phi_38_33_ladder;
        }
        float _2249 = isnan(_1952) ? _1781 : (isnan(_1781) ? _1952 : min(_1781, _1952));
        float _2250 = isnan(_2247) ? _2249 : (isnan(_2249) ? _2247 : min(_2249, _2247));
        float _2254 = (_2250 * _1747) + _1736;
        float _2255 = (_2250 * _1750) + _1740;
        float _2256 = (_2250 * _1753) + _1744;
        float _2257 = _2250 * 9.9999997473787516355514526367188e-05;
        float _2259 = (-1.0) - _2257;
        float _2261 = _2257 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2256 > _2261) || ((_2256 < _2259) || ((_2255 > _2261) || ((_2255 < _2259) || ((_2254 < _2259) || (_2254 > _2261))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2401 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2256, cbModelParam._m0[9u].z, fma(_2255, cbModelParam._m0[9u].y, _2254 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2256, cbModelParam._m0[10u].z, fma(_2255, cbModelParam._m0[10u].y, _2254 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2256, cbModelParam._m0[11u].z, fma(_2255, cbModelParam._m0[11u].y, _2254 * cbModelParam._m0[11u].x))), _1687);
            frontier_phi_16_38_ladder = _2401.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2401.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2401.x * cbModelParam._m0[1u].y;
        }
        _1769 = frontier_phi_16_38_ladder_2;
        _1771 = frontier_phi_16_38_ladder_1;
        _1773 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1757 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_848, _849, _850), _1687);
        _1769 = _1757.x * cbModelParam._m0[1u].y;
        _1771 = _1757.y * cbModelParam._m0[1u].y;
        _1773 = _1757.z * cbModelParam._m0[1u].y;
    }
    float _1777 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _680);
    float _1778 = isnan(_1777) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1777 : min(cbModelParam._m0[25u].w, _1777));
    float _1869;
    float _1871;
    float _1873;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1833 = fma(_909, cbModelParam._m0[21u].z, fma(_905, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _901)) + cbModelParam._m0[21u].w;
        float _1837 = fma(_909, cbModelParam._m0[22u].z, fma(_905, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _901)) + cbModelParam._m0[22u].w;
        float _1841 = fma(_909, cbModelParam._m0[23u].z, fma(_905, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _901)) + cbModelParam._m0[23u].w;
        float _1844 = fma(_850, cbModelParam._m0[21u].z, fma(_849, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _848));
        float _1847 = fma(_850, cbModelParam._m0[22u].z, fma(_849, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _848));
        float _1850 = fma(_850, cbModelParam._m0[23u].z, fma(_849, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _848));
        float _1957;
        if (_1844 > 0.0)
        {
            _1957 = abs((1.0 - _1833) / _1844);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1833 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1957 = frontier_phi_28_24_ladder;
        }
        float _2274;
        if (_1847 > 0.0)
        {
            _2274 = abs((1.0 - _1837) / _1847);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1837 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2274 = frontier_phi_40_35_ladder;
        }
        float _2601;
        if (_1850 > 0.0)
        {
            _2601 = abs((1.0 - _1841) / _1850);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1841 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2601 = frontier_phi_50_47_ladder;
        }
        float _2603 = isnan(_2274) ? _1957 : (isnan(_1957) ? _2274 : min(_1957, _2274));
        float _2604 = isnan(_2601) ? _2603 : (isnan(_2603) ? _2601 : min(_2603, _2601));
        float _2608 = (_2604 * _1844) + _1833;
        float _2609 = (_2604 * _1847) + _1837;
        float _2610 = (_2604 * _1850) + _1841;
        float _2611 = _2604 * 9.9999997473787516355514526367188e-05;
        float _2612 = (-1.0) - _2611;
        float _2614 = _2611 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2610 > _2614) || ((_2610 < _2612) || ((_2609 > _2614) || ((_2609 < _2612) || ((_2608 < _2612) || (_2608 > _2614))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2728 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2610, cbModelParam._m0[17u].z, fma(_2609, cbModelParam._m0[17u].y, _2608 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2610, cbModelParam._m0[18u].z, fma(_2609, cbModelParam._m0[18u].y, _2608 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2610, cbModelParam._m0[19u].z, fma(_2609, cbModelParam._m0[19u].y, _2608 * cbModelParam._m0[19u].x))), _1778);
            frontier_phi_25_50_ladder = _2728.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2728.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2728.x * cbModelParam._m0[1u].z;
        }
        _1869 = frontier_phi_25_50_ladder_2;
        _1871 = frontier_phi_25_50_ladder_1;
        _1873 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1853 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_848, _849, _850), _1778);
        _1869 = _1853.x * cbModelParam._m0[1u].z;
        _1871 = _1853.y * cbModelParam._m0[1u].z;
        _1873 = _1853.z * cbModelParam._m0[1u].z;
    }
    float _1885 = ((((1.0 - _869) * ((_856 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_869 * _856)) * _840;
    float _1886 = _1885 * ((cbModelParam._m0[1u].w * (_1869 - _1769)) + _1769);
    float _1887 = _1885 * ((cbModelParam._m0[1u].w * (_1871 - _1771)) + _1771);
    float _1888 = _1885 * ((cbModelParam._m0[1u].w * (_1873 - _1773)) + _1773);
    float _1891 = fma(_1888, cbSceneParam._m0[89u].z, fma(_1887, cbSceneParam._m0[89u].y, _1886 * cbSceneParam._m0[89u].x));
    float _1894 = fma(_1888, cbSceneParam._m0[90u].z, fma(_1887, cbSceneParam._m0[90u].y, _1886 * cbSceneParam._m0[90u].x));
    float _1897 = fma(_1888, cbSceneParam._m0[91u].z, fma(_1887, cbSceneParam._m0[91u].y, _1886 * cbSceneParam._m0[91u].x));
    float _1931 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1935 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1939 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1943 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1944 = _1931 / _1943;
    float _1945 = _1935 / _1943;
    float _1946 = _1939 / _1943;
    float _2093;
    float _2094;
    float _2095;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1973 = ((uint(_1946 > cbSceneParam._m0[59u].y) + uint(_1946 > cbSceneParam._m0[59u].x)) + uint(_1946 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1974 = _1973 + 43u;
        uint _1982 = _1973 + 44u;
        uint _1990 = _1973 + 45u;
        uint _1998 = _1973 + 46u;
        float _2009 = fma(_1943, cbSceneParam._m0[_1974].w, fma(_1939, cbSceneParam._m0[_1974].z, fma(_1935, cbSceneParam._m0[_1974].y, _1931 * cbSceneParam._m0[_1974].x)));
        float _2013 = fma(_1943, cbSceneParam._m0[_1982].w, fma(_1939, cbSceneParam._m0[_1982].z, fma(_1935, cbSceneParam._m0[_1982].y, _1931 * cbSceneParam._m0[_1982].x)));
        float _2021 = fma(_1943, cbSceneParam._m0[_1998].w, fma(_1939, cbSceneParam._m0[_1998].z, fma(_1935, cbSceneParam._m0[_1998].y, _1931 * cbSceneParam._m0[_1998].x)));
        float _2026 = cbSceneParam._m0[33u].z * _2021;
        float _2028 = cbSceneParam._m0[33u].w * _2021;
        float _2031 = fma(_1943, cbSceneParam._m0[_1990].w, fma(_1939, cbSceneParam._m0[_1990].z, fma(_1935, cbSceneParam._m0[_1990].y, _1931 * cbSceneParam._m0[_1990].x))) / _2021;
        float _2079 = (cbSceneParam._m0[33u].x - sqrt(((_1945 * _1945) + (_1944 * _1944)) + (_1946 * _1946))) * cbSceneParam._m0[33u].y;
        float _4441 = isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0));
        float _2086 = (isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2026 + _2009) / _2021, (_2028 + _2013) / _2021), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2028 + _2009) / _2021, (_2013 - _2026) / _2021), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2009 - _2026) / _2021, (_2013 - _2028) / _2021), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2009 - _2028) / _2021, (_2026 + _2013) / _2021), _2031), 0.0)).x), vec4(0.25)));
        _2093 = 1.0 - (_2086 * cbSceneParam._m0[34u].x);
        _2094 = 1.0 - (_2086 * cbSceneParam._m0[34u].y);
        _2095 = 1.0 - (_2086 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2093 = 1.0;
        _2094 = 1.0;
        _2095 = 1.0;
    }
    float _2159;
    float _2161;
    float _2163;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2147 = fma(_1943, cbSceneParam._m0[63u].w, fma(_1939, cbSceneParam._m0[63u].z, fma(_1935, cbSceneParam._m0[63u].y, _1931 * cbSceneParam._m0[63u].x)));
        float _2148 = fma(_1943, cbSceneParam._m0[60u].w, fma(_1939, cbSceneParam._m0[60u].z, fma(_1935, cbSceneParam._m0[60u].y, _1931 * cbSceneParam._m0[60u].x))) / _2147;
        float _2149 = fma(_1943, cbSceneParam._m0[61u].w, fma(_1939, cbSceneParam._m0[61u].z, fma(_1935, cbSceneParam._m0[61u].y, _1931 * cbSceneParam._m0[61u].x))) / _2147;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2148 >= cbSceneParam._m0[64u].x) && (_2149 >= cbSceneParam._m0[64u].y)) && (_2148 <= cbSceneParam._m0[64u].z)) && (_2149 <= cbSceneParam._m0[64u].w))
        {
            float _2287 = fma(_1943, cbSceneParam._m0[62u].w, fma(_1939, cbSceneParam._m0[62u].z, fma(_1935, cbSceneParam._m0[62u].y, _1931 * cbSceneParam._m0[62u].x))) / _2147;
            float _2291 = isnan(cbSceneParam._m0[41u].w) ? _2287 : (isnan(_2287) ? cbSceneParam._m0[41u].w : max(_2287, cbSceneParam._m0[41u].w));
            float _2334 = (cbSceneParam._m0[33u].x - sqrt(((_1945 * _1945) + (_1944 * _1944)) + (_1946 * _1946))) * cbSceneParam._m0[33u].y;
            float _4457 = isnan(0.0) ? _2334 : (isnan(_2334) ? 0.0 : max(_2334, 0.0));
            float _2341 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2148, cbSceneParam._m0[33u].w + _2149), _2291), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2148, _2149 - cbSceneParam._m0[33u].z), _2291), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2148 - cbSceneParam._m0[33u].z, _2149 - cbSceneParam._m0[33u].w), _2291), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2148 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2149), _2291), 0.0)).x), vec4(0.25)));
            float _2345 = 1.0 - (_2341 * cbSceneParam._m0[34u].x);
            float _2346 = 1.0 - (_2341 * cbSceneParam._m0[34u].y);
            float _2347 = 1.0 - (_2341 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2347) ? _2095 : (isnan(_2095) ? _2347 : min(_2095, _2347));
            frontier_phi_37_36_ladder_1 = isnan(_2346) ? _2094 : (isnan(_2094) ? _2346 : min(_2094, _2346));
            frontier_phi_37_36_ladder_2 = isnan(_2345) ? _2093 : (isnan(_2093) ? _2345 : min(_2093, _2345));
        }
        else
        {
            frontier_phi_37_36_ladder = _2095;
            frontier_phi_37_36_ladder_1 = _2094;
            frontier_phi_37_36_ladder_2 = _2093;
        }
        _2159 = frontier_phi_37_36_ladder_2;
        _2161 = frontier_phi_37_36_ladder_1;
        _2163 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2159 = _2093;
        _2161 = _2094;
        _2163 = _2095;
    }
    uvec4 _2168 = floatBitsToUint(cbInstanceData._m0[_268 + 5u]);
    uint _2170 = _2168.x * 14u;
    uint _2171 = _2170 + 13u;
    float _2178 = _840 + (-1.0);
    float _2183 = (cbLight._m0[_2171].x * _2178) + 1.0;
    float _2184 = (cbLight._m0[_2171].y * _2178) + 1.0;
    float _2185 = (cbLight._m0[_2171].z * _2178) + 1.0;
    float _2186 = (cbLight._m0[_2171].w * _2178) + 1.0;
    uint _2187 = _2170 + 5u;
    float _2193 = isnan(1.0) ? _2184 : (isnan(_2184) ? 1.0 : min(_2184, 1.0));
    uint _2197 = _2170 + 4u;
    float _2206 = isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0));
    uint _2210 = _2170 | 1u;
    float _2221 = dot(vec3(cbLight._m0[_2170].xyz), vec3(_677, _678, _679));
    float _2224 = dot(vec3(cbLight._m0[_2210].xyz), vec3(_677, _678, _679));
    float _4493 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
    float _4504 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
    float _2229 = (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0))) * 0.3183098733425140380859375;
    float _2231 = (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0))) * 0.3183098733425140380859375;
    float _2238 = ((cbLight._m0[_2187].x * _2193) * _2231) + (((cbLight._m0[_2197].x * _2159) * _2206) * _2229);
    float _2239 = ((_2193 * cbLight._m0[_2187].y) * _2231) + (((cbLight._m0[_2197].y * _2161) * _2206) * _2229);
    float _2240 = ((_2193 * cbLight._m0[_2187].z) * _2231) + (((cbLight._m0[_2197].z * _2163) * _2206) * _2229);
    uvec4 _2244 = floatBitsToUint(cbLight._m0[_2170 + 12u]);
    bool _2246 = _2244.x == 0u;
    float _2348;
    float _2350;
    float _2352;
    if (_2246)
    {
        _2348 = _2238;
        _2350 = _2239;
        _2352 = _2240;
    }
    else
    {
        uint _2356 = _2170 + 6u;
        float _2372 = (dot(vec3(cbLight._m0[_2170 + 2u].xyz), vec3(_677, _678, _679)) * 0.5) + 0.5;
        float _2373 = _2372 * _2372;
        float _4515 = isnan(0.0) ? _2373 : (isnan(_2373) ? 0.0 : max(_2373, 0.0));
        float _2374 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
        float _2375 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
        _2348 = (((cbLight._m0[_2356].x * 0.3183098733425140380859375) * _2374) * _2375) + _2238;
        _2350 = (((cbLight._m0[_2356].y * 0.3183098733425140380859375) * _2374) * _2375) + _2239;
        _2352 = (((cbLight._m0[_2356].z * 0.3183098733425140380859375) * _2374) * _2375) + _2240;
    }
    bool _2355 = _2244.y == 0u;
    float _2410;
    float _2412;
    float _2414;
    if (_2355)
    {
        _2410 = _2348;
        _2412 = _2350;
        _2414 = _2352;
    }
    else
    {
        uint _2572 = _2170 + 7u;
        float _2588 = (dot(vec3(cbLight._m0[_2170 + 3u].xyz), vec3(_677, _678, _679)) * 0.5) + 0.5;
        float _2589 = _2588 * _2588;
        float _4531 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2590 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _2591 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
        _2410 = (((cbLight._m0[_2572].x * 0.3183098733425140380859375) * _2590) * _2591) + _2348;
        _2412 = (((cbLight._m0[_2572].y * 0.3183098733425140380859375) * _2590) * _2591) + _2350;
        _2414 = (((cbLight._m0[_2572].z * 0.3183098733425140380859375) * _2590) * _2591) + _2352;
    }
    uint _2417 = _2170 + 8u;
    float _2430 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2170].w)) * _680) * 0.949999988079071044921875);
    float _2431 = _2430 * _2430;
    float _2432 = cbLight._m0[_2170].x + _757;
    float _2433 = cbLight._m0[_2170].y + _758;
    float _2434 = cbLight._m0[_2170].z + _759;
    float _2438 = inversesqrt(dot(vec3(_2432, _2433, _2434), vec3(_2432, _2433, _2434)));
    float _2439 = _2438 * _2432;
    float _2440 = _2438 * _2433;
    float _2441 = _2438 * _2434;
    float _2442 = dot(vec3(_677, _678, _679), vec3(cbLight._m0[_2170].xyz));
    float _4547 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
    float _2445 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
    float _4558 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _2446 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
    float _2447 = dot(vec3(_677, _678, _679), vec3(_2439, _2440, _2441));
    float _4569 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _2450 = isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0));
    float _2451 = dot(vec3(cbLight._m0[_2170].xyz), vec3(_2439, _2440, _2441));
    float _4580 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2455 = _2431 * _2431;
    float _2459 = ((_2450 * _2450) * (_2455 + (-1.0))) + 1.0;
    float _2470 = (exp2(log2(1.0 - (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2471 = 1.0 - _2431;
    float _2482 = (0.5 / (((_2446 * ((_2445 * _2471) + _2431)) + 9.9999999392252902907785028219223e-09) + (((_2446 * _2471) + _2431) * _2445))) * _2445;
    float _4591 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
    float _2484 = (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0))) * (_2455 / ((_2459 * _2459) * 3.141590118408203125));
    uint _2498 = _2170 + 9u;
    float _2509 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2210].w)) * _680) * 0.949999988079071044921875);
    float _2510 = _2509 * _2509;
    float _2511 = cbLight._m0[_2210].x + _757;
    float _2512 = cbLight._m0[_2210].y + _758;
    float _2513 = cbLight._m0[_2210].z + _759;
    float _2517 = inversesqrt(dot(vec3(_2511, _2512, _2513), vec3(_2511, _2512, _2513)));
    float _2518 = _2517 * _2511;
    float _2519 = _2517 * _2512;
    float _2520 = _2517 * _2513;
    float _2521 = dot(vec3(_677, _678, _679), vec3(cbLight._m0[_2210].xyz));
    float _4602 = isnan(0.0) ? _2521 : (isnan(_2521) ? 0.0 : max(_2521, 0.0));
    float _2524 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
    float _2525 = dot(vec3(_677, _678, _679), vec3(_2518, _2519, _2520));
    float _4613 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
    float _2528 = isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0));
    float _2529 = dot(vec3(cbLight._m0[_2210].xyz), vec3(_2518, _2519, _2520));
    float _4624 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2533 = _2510 * _2510;
    float _2537 = ((_2528 * _2528) * (_2533 + (-1.0))) + 1.0;
    float _2546 = (exp2(log2(1.0 - (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2547 = 1.0 - _2510;
    float _2557 = (0.5 / (((_2446 * ((_2524 * _2547) + _2510)) + 9.9999999392252902907785028219223e-09) + (((_2446 * _2547) + _2510) * _2524))) * _2524;
    float _4635 = isnan(0.0) ? _2557 : (isnan(_2557) ? 0.0 : max(_2557, 0.0));
    float _2559 = (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0))) * (_2533 / ((_2537 * _2537) * 3.141590118408203125));
    float _2569 = (((_2546 * cbLight._m0[_2498].x) * _2559) * _2193) + ((((cbLight._m0[_2417].x * _2159) * _2470) * _2484) * _2206);
    float _2570 = (((_2546 * cbLight._m0[_2498].y) * _2559) * _2193) + ((((cbLight._m0[_2417].y * _2161) * _2470) * _2484) * _2206);
    float _2571 = (((_2546 * cbLight._m0[_2498].z) * _2559) * _2193) + ((((cbLight._m0[_2417].z * _2163) * _2470) * _2484) * _2206);
    float _2627;
    float _2629;
    float _2631;
    if (_2246)
    {
        _2627 = _2569;
        _2629 = _2570;
        _2631 = _2571;
    }
    else
    {
        uint _2633 = _2170 + 2u;
        uint _2637 = _2170 + 10u;
        float _2651 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2633].w)) * _680) * 0.949999988079071044921875);
        float _2652 = _2651 * _2651;
        float _2653 = cbLight._m0[_2633].x + _757;
        float _2654 = cbLight._m0[_2633].y + _758;
        float _2655 = cbLight._m0[_2633].z + _759;
        float _2659 = inversesqrt(dot(vec3(_2653, _2654, _2655), vec3(_2653, _2654, _2655)));
        float _2660 = _2659 * _2653;
        float _2661 = _2659 * _2654;
        float _2662 = _2659 * _2655;
        float _2663 = dot(vec3(_677, _678, _679), vec3(cbLight._m0[_2633].xyz));
        float _4646 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        float _2666 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
        float _2667 = dot(vec3(_677, _678, _679), vec3(_2660, _2661, _2662));
        float _4657 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
        float _2670 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
        float _2671 = dot(vec3(cbLight._m0[_2633].xyz), vec3(_2660, _2661, _2662));
        float _4668 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
        float _2675 = _2652 * _2652;
        float _2679 = ((_2670 * _2670) * (_2675 + (-1.0))) + 1.0;
        float _2688 = (exp2(log2(1.0 - (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2689 = 1.0 - _2652;
        float _2699 = (0.5 / (((_2446 * ((_2666 * _2689) + _2652)) + 9.9999999392252902907785028219223e-09) + (((_2446 * _2689) + _2652) * _2666))) * _2666;
        float _4679 = isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : max(_2699, 0.0));
        float _2701 = (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0))) * (_2675 / ((_2679 * _2679) * 3.141590118408203125));
        float _2702 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
        _2627 = (((_2688 * cbLight._m0[_2637].x) * _2701) * _2702) + _2569;
        _2629 = (((_2688 * cbLight._m0[_2637].y) * _2701) * _2702) + _2570;
        _2631 = (((_2688 * cbLight._m0[_2637].z) * _2701) * _2702) + _2571;
    }
    float _2733;
    float _2735;
    float _2737;
    if (_2355)
    {
        _2733 = _2627;
        _2735 = _2629;
        _2737 = _2631;
    }
    else
    {
        uint _2744 = _2170 + 3u;
        uint _2748 = _2170 + 11u;
        float _2762 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2744].w)) * _680) * 0.949999988079071044921875);
        float _2763 = _2762 * _2762;
        float _2764 = cbLight._m0[_2744].x + _757;
        float _2765 = cbLight._m0[_2744].y + _758;
        float _2766 = cbLight._m0[_2744].z + _759;
        float _2770 = inversesqrt(dot(vec3(_2764, _2765, _2766), vec3(_2764, _2765, _2766)));
        float _2771 = _2770 * _2764;
        float _2772 = _2770 * _2765;
        float _2773 = _2770 * _2766;
        float _2774 = dot(vec3(_677, _678, _679), vec3(cbLight._m0[_2744].xyz));
        float _4695 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2777 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _2778 = dot(vec3(_677, _678, _679), vec3(_2771, _2772, _2773));
        float _4706 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
        float _2781 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _2782 = dot(vec3(cbLight._m0[_2744].xyz), vec3(_2771, _2772, _2773));
        float _4717 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        float _2786 = _2763 * _2763;
        float _2790 = ((_2781 * _2781) * (_2786 + (-1.0))) + 1.0;
        float _2799 = (exp2(log2(1.0 - (isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2800 = 1.0 - _2763;
        float _2810 = (0.5 / (((_2446 * ((_2777 * _2800) + _2763)) + 9.9999999392252902907785028219223e-09) + (((_2446 * _2800) + _2763) * _2777))) * _2777;
        float _4728 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
        float _2812 = (isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0))) * (_2786 / ((_2790 * _2790) * 3.141590118408203125));
        float _2813 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
        _2733 = (((_2799 * cbLight._m0[_2748].x) * _2812) * _2813) + _2627;
        _2735 = (((_2799 * cbLight._m0[_2748].y) * _2812) * _2813) + _2629;
        _2737 = (((_2799 * cbLight._m0[_2748].z) * _2812) * _2813) + _2631;
    }
    float _2879;
    float _2881;
    float _2883;
    float _2885;
    float _2887;
    float _2889;
    if (_2168.y == 0u)
    {
        uvec4 _2834 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2835 = _2834.x;
        uint _2846 = uint((float(_2834.y) * floor(float(uint(cbSceneParam._m0[85u].y * _778) / _2835))) + floor(float(uint(cbSceneParam._m0[85u].x * _777) / _2835)));
        float _2856 = (log2(_1946 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2857 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        uint _2860 = uint(isnan(14.0) ? _2857 : (isnan(_2857) ? 14.0 : min(_2857, 14.0)));
        uvec4 _2865 = texelFetch(g_lightClusterGridBuffer, int(((_2860 << 2u) + (_2846 << 6u)) >> 2u));
        uint _2866 = _2865.x;
        uint _2867 = _2834.z;
        float _2946;
        float _2948;
        float _2950;
        float _2952;
        float _2954;
        float _2956;
        if (((((1u << ((_2867 >> 4u) & 15u)) + 4294967295u) & _2866) == 0u) || ((_2867 & 240u) == 0u))
        {
            _2946 = 0.0;
            _2948 = 0.0;
            _2950 = 0.0;
            _2952 = 0.0;
            _2954 = 0.0;
            _2956 = 0.0;
        }
        else
        {
            float _2947;
            float _2949;
            float _2951;
            float _2953;
            float _2955;
            float _2957;
            float _3099 = 0.0;
            float _3100 = 0.0;
            float _3101 = 0.0;
            float _3102 = 0.0;
            float _3103 = 0.0;
            float _3104 = 0.0;
            uint _3105 = 0u;
            uint _3114;
            bool _3115;
            for (;;)
            {
                _3114 = texelFetch(g_lightClassification, int((((_2860 << 5u) + (_2846 << 9u)) + (_3105 << 2u)) >> 2u)).x;
                _3115 = _3114 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3115)
                {
                    frontier_phi_71_pred = _3104;
                    frontier_phi_71_pred_1 = _3103;
                    frontier_phi_71_pred_2 = _3102;
                    frontier_phi_71_pred_3 = _3101;
                    frontier_phi_71_pred_4 = _3100;
                    frontier_phi_71_pred_5 = _3099;
                }
                else
                {
                    float _3244;
                    float _3245;
                    float _3246;
                    float _3247;
                    float _3248;
                    float _3249;
                    uint _3250;
                    _3244 = _3099;
                    _3245 = _3100;
                    _3246 = _3101;
                    _3247 = _3102;
                    _3248 = _3103;
                    _3249 = _3104;
                    _3250 = _3114;
                    float _3171;
                    float _3172;
                    float _3173;
                    float _3174;
                    float _3175;
                    float _3176;
                    for (;;)
                    {
                        uint _3254 = uint(findLSB(_3250)) + (_3105 << 5u);
                        uint _3251 = (_3250 + 4294967295u) & _3250;
                        uint _3256 = _3254 * 48u;
                        vec4 _3270 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3256)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 3u)).x));
                        uint _3276 = (_3254 * 48u) + 4u;
                        vec4 _3289 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3276)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 3u)).x));
                        uint _3295 = (_3254 * 48u) + 8u;
                        vec3 _3306 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3295)).x, texelFetch(g_PointLightRenderingBuffer, int(_3295 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3295 + 2u)).x));
                        float _3310 = _3270.x - _1944;
                        float _3311 = _3270.y - _1945;
                        float _3312 = _3270.z - _1946;
                        float _3313 = dot(vec3(_3310, _3311, _3312), vec3(_3310, _3311, _3312));
                        float _3316 = inversesqrt(_3313);
                        float _3317 = _3316 * _3310;
                        float _3318 = _3316 * _3311;
                        float _3319 = _3316 * _3312;
                        float _3320 = dot(vec3(_796, _799, _802), vec3(_3317, _3318, _3319));
                        float _3325 = 1.0 - (_3313 * _3270.w);
                        float _4754 = isnan(0.0) ? _3325 : (isnan(_3325) ? 0.0 : max(_3325, 0.0));
                        float _3326 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                        float _3327 = sqrt(_3313) * _3289.w;
                        float _3330 = 1.39999997615814208984375 / (_3327 + 1.39999997615814208984375);
                        float _3331 = _3330 * _3330;
                        float _3334 = ((1.0 - _3331) * _3320) + _3331;
                        float _3337 = _3327 * _3327;
                        float _3341 = ((isnan(0.0) ? _3334 : (isnan(_3334) ? 0.0 : max(_3334, 0.0))) * _3326) / ((_3337 * 0.699999988079071044921875) + 1.0);
                        float _3345 = (-0.0) - _1944;
                        float _3346 = (-0.0) - _1945;
                        float _3347 = (-0.0) - _1946;
                        float _3351 = inversesqrt(dot(vec3(_3345, _3346, _3347), vec3(_3345, _3346, _3347)));
                        float _3352 = _3351 * _3345;
                        float _3353 = _3351 * _3346;
                        float _3354 = _3351 * _3347;
                        float _3361 = exp2(log2(1.0 / ((_3337 * 3.5) + 5.0)) * 0.25);
                        float _3362 = 1.0 - _856;
                        float _3369 = sqrt(1.0 - ((1.0 - (_3362 * _3362)) * (1.0 - (_3361 * _3361))));
                        float _3370 = _3369 * _3369;
                        float _3371 = _3370 * _3370;
                        float _3372 = _3352 + _3317;
                        float _3373 = _3353 + _3318;
                        float _3374 = _3354 + _3319;
                        float _3378 = inversesqrt(dot(vec3(_3372, _3373, _3374), vec3(_3372, _3373, _3374)));
                        float _3382 = dot(vec3(_796, _799, _802), vec3(_3352, _3353, _3354));
                        float _4770 = isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : max(_3382, 0.0));
                        float _3385 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                        float _3386 = dot(vec3(_796, _799, _802), vec3(_3378 * _3372, _3378 * _3373, _3378 * _3374));
                        float _4781 = isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0));
                        float _3389 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
                        float _3393 = ((_3389 * _3389) * (_3371 + (-1.0))) + 1.0;
                        float _3394 = _3330 * _3370;
                        float _3395 = _3394 * _3394;
                        float _3398 = ((1.0 - _3395) * _3320) + _3395;
                        float _4792 = isnan(0.0) ? _3398 : (isnan(_3398) ? 0.0 : max(_3398, 0.0));
                        float _3399 = isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0));
                        float _3400 = 1.0 - _3370;
                        float _3410 = (0.5 / (((_3399 * ((_3385 * _3400) + _3370)) + 9.9999999392252902907785028219223e-09) + (((_3399 * _3400) + _3370) * _3385))) * _3399;
                        float _4803 = isnan(0.0) ? _3410 : (isnan(_3410) ? 0.0 : max(_3410, 0.0));
                        float _3421 = (((_3371 * 3.1415927410125732421875) * (isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0)))) / ((_3393 * _3393) * ((_3337 * 2.1991131305694580078125) + 3.141590118408203125))) * _3326;
                        _3174 = (_3341 * _3289.x) + _3247;
                        _3175 = (_3341 * _3289.y) + _3248;
                        _3176 = (_3341 * _3289.z) + _3249;
                        _3171 = (_3421 * _3306.x) + _3244;
                        _3172 = (_3421 * _3306.y) + _3245;
                        _3173 = (_3421 * _3306.z) + _3246;
                        if (_3251 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3244 = _3171;
                            _3245 = _3172;
                            _3246 = _3173;
                            _3247 = _3174;
                            _3248 = _3175;
                            _3249 = _3176;
                            _3250 = _3251;
                        }
                    }
                    frontier_phi_71_pred = _3176;
                    frontier_phi_71_pred_1 = _3175;
                    frontier_phi_71_pred_2 = _3174;
                    frontier_phi_71_pred_3 = _3173;
                    frontier_phi_71_pred_4 = _3172;
                    frontier_phi_71_pred_5 = _3171;
                }
                _2957 = frontier_phi_71_pred;
                _2955 = frontier_phi_71_pred_1;
                _2953 = frontier_phi_71_pred_2;
                _2951 = frontier_phi_71_pred_3;
                _2949 = frontier_phi_71_pred_4;
                _2947 = frontier_phi_71_pred_5;
                uint _3106 = _3105 + 1u;
                if (_3106 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3099 = _2947;
                    _3100 = _2949;
                    _3101 = _2951;
                    _3102 = _2953;
                    _3103 = _2955;
                    _3104 = _2957;
                    _3105 = _3106;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2946 = _2947;
            _2948 = _2949;
            _2950 = _2951;
            _2952 = _2953;
            _2954 = _2955;
            _2956 = _2957;
        }
        uvec4 _2960 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2961 = _2960.z;
        uint _2963 = (_2961 >> 8u) & 15u;
        float _3067;
        float _3069;
        float _3071;
        float _3073;
        float _3075;
        float _3077;
        if (((4294967295u << _2963) & _2866) == 0u)
        {
            _3067 = _2946;
            _3069 = _2948;
            _3071 = _2950;
            _3073 = _2952;
            _3075 = _2954;
            _3077 = _2956;
        }
        else
        {
            float _3092 = inversesqrt(dot(vec3(_1944, _1945, _1946), vec3(_1944, _1945, _1946)));
            float _3093 = _3092 * _1944;
            float _3094 = _3092 * _1945;
            float _3095 = _3092 * _1946;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2963 < ((_2961 >> 12u) & 15u))
            {
                float _3068;
                float _3070;
                float _3072;
                float _3074;
                float _3076;
                float _3078;
                float _3227 = _2946;
                float _3228 = _2948;
                float _3229 = _2950;
                float _3230 = _2952;
                float _3231 = _2954;
                float _3232 = _2956;
                uint _3233 = _2963;
                uint _3242;
                bool _3243;
                for (;;)
                {
                    _3242 = texelFetch(g_lightClassification, int((((_2860 << 5u) + (_2846 << 9u)) + (_3233 << 2u)) >> 2u)).x;
                    _3243 = _3242 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3243)
                    {
                        frontier_phi_82_pred = _3232;
                        frontier_phi_82_pred_1 = _3231;
                        frontier_phi_82_pred_2 = _3230;
                        frontier_phi_82_pred_3 = _3229;
                        frontier_phi_82_pred_4 = _3228;
                        frontier_phi_82_pred_5 = _3227;
                    }
                    else
                    {
                        float _3435;
                        float _3436;
                        float _3437;
                        float _3438;
                        float _3439;
                        float _3440;
                        float _3728;
                        float _3729;
                        float _3730;
                        float _3731;
                        float _3732;
                        float _3733;
                        float _3448 = _3227;
                        float _3449 = _3228;
                        float _3450 = _3229;
                        float _3451 = _3230;
                        float _3452 = _3231;
                        float _3453 = _3232;
                        uint _3454 = _3242;
                        uint _3455;
                        vec4 _3480;
                        float _3481;
                        vec4 _3496;
                        vec3 _3508;
                        vec4 _3523;
                        vec4 _3538;
                        float _3584;
                        bool _3585;
                        for (;;)
                        {
                            uint _3465 = ((_3233 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3454));
                            _3455 = (_3454 + 4294967295u) & _3454;
                            uint _3467 = _3465 * 40u;
                            _3480 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3467)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 3u)).x));
                            _3481 = _3480.w;
                            uint _3483 = (_3465 * 40u) + 4u;
                            _3496 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3483)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 3u)).x));
                            uint _3498 = (_3465 * 40u) + 8u;
                            _3508 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x));
                            uint _3510 = (_3465 * 40u) + 16u;
                            _3523 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 3u)).x));
                            uint _3525 = (_3465 * 40u) + 20u;
                            _3538 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3525)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 3u)).x));
                            uint _3540 = (_3465 * 40u) + 24u;
                            vec4 _3553 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3540)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 3u)).x));
                            uint _3559 = (_3465 * 40u) + 28u;
                            vec4 _3572 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3559)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 3u)).x));
                            _3584 = fma(_1946, _3572.z, fma(_1945, _3572.y, _3572.x * _1944)) + _3572.w;
                            _3585 = !((fma(_1946, _3553.z, fma(_1945, _3553.y, _3553.x * _1944)) + _3553.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3585)
                            {
                                float _3612 = _3480.x - _1944;
                                float _3613 = _3480.y - _1945;
                                float _3614 = _3480.z - _1946;
                                float _3615 = dot(vec3(_3612, _3613, _3614), vec3(_3612, _3613, _3614));
                                float _3618 = inversesqrt(_3615);
                                float _3619 = _3618 * _3612;
                                float _3620 = _3618 * _3613;
                                float _3621 = _3618 * _3614;
                                float _3625 = 1.0 - (_3615 / (_3481 * _3481));
                                float _4814 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                                float _3626 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
                                float _3630 = sqrt(_3615) * _3496.w;
                                float _3632 = 1.39999997615814208984375 / (_3630 + 1.39999997615814208984375);
                                float _3633 = _3632 * _3632;
                                float _3636 = ((1.0 - _3633) * dot(vec3(_3619, _3620, _3621), vec3(_796, _799, _802))) + _3633;
                                float _3639 = _3630 * _3630;
                                float _3643 = (fma(_1946, _3523.z, fma(_1945, _3523.y, _3523.x * _1944)) + _3523.w) / _3584;
                                float _3644 = (fma(_1946, _3538.z, fma(_1945, _3538.y, _3538.x * _1944)) + _3538.w) / _3584;
                                float _3648 = 1.0 - dot(vec2(_3643, _3644), vec2(_3643, _3644));
                                float _4830 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3649 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                                float _3650 = _3649 * (((isnan(0.0) ? _3636 : (isnan(_3636) ? 0.0 : max(_3636, 0.0))) * _3626) / ((_3639 * 0.699999988079071044921875) + 1.0));
                                float _3662 = exp2(log2(1.0 / ((_3639 * 3.5) + 5.0)) * 0.25);
                                float _3663 = 1.0 - _856;
                                float _3670 = sqrt(1.0 - ((1.0 - (_3663 * _3663)) * (1.0 - (_3662 * _3662))));
                                float _3671 = _3670 * _3670;
                                float _3672 = _3671 * _3671;
                                float _3673 = _3619 - _3093;
                                float _3674 = _3620 - _3094;
                                float _3675 = _3621 - _3095;
                                float _3679 = inversesqrt(dot(vec3(_3673, _3674, _3675), vec3(_3673, _3674, _3675)));
                                float _3683 = dot(vec3(_796, _799, _802), vec3((-0.0) - _3093, (-0.0) - _3094, (-0.0) - _3095));
                                float _4841 = isnan(0.0) ? _3683 : (isnan(_3683) ? 0.0 : max(_3683, 0.0));
                                float _3686 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
                                float _3687 = dot(vec3(_796, _799, _802), vec3(_3679 * _3673, _3679 * _3674, _3679 * _3675));
                                float _4852 = isnan(0.0) ? _3687 : (isnan(_3687) ? 0.0 : max(_3687, 0.0));
                                float _3690 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
                                float _3694 = ((_3690 * _3690) * (_3672 + (-1.0))) + 1.0;
                                float _3695 = _3632 * _3671;
                                float _3696 = _3695 * _3695;
                                float _3702 = ((1.0 - _3696) * dot(vec3(_796, _799, _802), vec3(_3619, _3620, _3621))) + _3696;
                                float _4863 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                                float _3703 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
                                float _3704 = 1.0 - _3671;
                                float _3714 = (0.5 / (((_3703 * ((_3686 * _3704) + _3671)) + 9.9999999392252902907785028219223e-09) + (((_3703 * _3704) + _3671) * _3686))) * _3703;
                                float _4874 = isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0));
                                float _3724 = (_3649 * _3626) * (((_3672 * 3.1415927410125732421875) * (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0)))) / ((_3694 * _3694) * ((_3639 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3650 * _3496.z;
                                frontier_phi_88_pred_1 = _3650 * _3496.y;
                                frontier_phi_88_pred_2 = _3650 * _3496.x;
                                frontier_phi_88_pred_3 = _3724 * _3508.z;
                                frontier_phi_88_pred_4 = _3724 * _3508.y;
                                frontier_phi_88_pred_5 = _3724 * _3508.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3733 = frontier_phi_88_pred;
                            _3732 = frontier_phi_88_pred_1;
                            _3731 = frontier_phi_88_pred_2;
                            _3730 = frontier_phi_88_pred_3;
                            _3729 = frontier_phi_88_pred_4;
                            _3728 = frontier_phi_88_pred_5;
                            _3438 = _3731 + _3451;
                            _3439 = _3732 + _3452;
                            _3440 = _3733 + _3453;
                            _3435 = _3728 + _3448;
                            _3436 = _3729 + _3449;
                            _3437 = _3730 + _3450;
                            if (_3455 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3448 = _3435;
                                _3449 = _3436;
                                _3450 = _3437;
                                _3451 = _3438;
                                _3452 = _3439;
                                _3453 = _3440;
                                _3454 = _3455;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3440;
                        frontier_phi_82_pred_1 = _3439;
                        frontier_phi_82_pred_2 = _3438;
                        frontier_phi_82_pred_3 = _3437;
                        frontier_phi_82_pred_4 = _3436;
                        frontier_phi_82_pred_5 = _3435;
                    }
                    _3078 = frontier_phi_82_pred;
                    _3076 = frontier_phi_82_pred_1;
                    _3074 = frontier_phi_82_pred_2;
                    _3072 = frontier_phi_82_pred_3;
                    _3070 = frontier_phi_82_pred_4;
                    _3068 = frontier_phi_82_pred_5;
                    uint _3234 = _3233 + 1u;
                    if (_3234 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3227 = _3068;
                        _3228 = _3070;
                        _3229 = _3072;
                        _3230 = _3074;
                        _3231 = _3076;
                        _3232 = _3078;
                        _3233 = _3234;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3074;
                frontier_phi_63_64_ladder_1 = _3078;
                frontier_phi_63_64_ladder_2 = _3076;
                frontier_phi_63_64_ladder_3 = _3072;
                frontier_phi_63_64_ladder_4 = _3070;
                frontier_phi_63_64_ladder_5 = _3068;
            }
            else
            {
                frontier_phi_63_64_ladder = _2952;
                frontier_phi_63_64_ladder_1 = _2956;
                frontier_phi_63_64_ladder_2 = _2954;
                frontier_phi_63_64_ladder_3 = _2950;
                frontier_phi_63_64_ladder_4 = _2948;
                frontier_phi_63_64_ladder_5 = _2946;
            }
            _3067 = frontier_phi_63_64_ladder_5;
            _3069 = frontier_phi_63_64_ladder_4;
            _3071 = frontier_phi_63_64_ladder_3;
            _3073 = frontier_phi_63_64_ladder;
            _3075 = frontier_phi_63_64_ladder_2;
            _3077 = frontier_phi_63_64_ladder_1;
        }
        float _3082 = isnan(1.0) ? _840 : (isnan(_840) ? 1.0 : min(_840, 1.0));
        _2879 = (_3082 * _3073) + _2410;
        _2881 = (_3082 * _3075) + _2412;
        _2883 = (_3082 * _3077) + _2414;
        _2885 = ((_3067 * 0.039999999105930328369140625) * _3082) + _2733;
        _2887 = ((_3069 * 0.039999999105930328369140625) * _3082) + _2735;
        _2889 = ((_3071 * 0.039999999105930328369140625) * _3082) + _2737;
    }
    else
    {
        _2879 = _2410;
        _2881 = _2412;
        _2883 = _2414;
        _2885 = _2733;
        _2887 = _2735;
        _2889 = _2737;
    }
    float _4890 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4901 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _4912 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _2906 = ((isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0))) * (_2879 + ((isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))) * _840))) + ((_2885 + ((isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0))) * _1676)) * cbPerFrame._m0[3u].x);
    float _2907 = ((isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0))) * (_2881 + ((isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))) * _840))) + ((_2887 + ((isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0))) * _1676)) * cbPerFrame._m0[3u].x);
    float _2908 = ((isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0))) * (_2883 + ((isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))) * _840))) + ((_2889 + ((isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))) * _1676)) * cbPerFrame._m0[3u].x);
    uint _2909 = _268 + 6u;
    float _2917 = _777 / cbSceneParam._m0[86u].x;
    float _2918 = _778 / cbSceneParam._m0[86u].y;
    vec4 _2932 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2917, _2918, (log2((isnan(cbSceneParam._m0[77u].w) ? _698 : (isnan(_698) ? cbSceneParam._m0[77u].w : min(_698, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2934 = _2932.x;
    float _2935 = _2932.y;
    float _2936 = _2932.z;
    float _2937 = _2932.w;
    float _3009;
    float _3011;
    float _3013;
    float _3015;
    if (_698 > cbSceneParam._m0[78u].w)
    {
        float _2971 = isnan(_698) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _698 : min(cbSceneParam._m0[80u].w, _698));
        float _2972 = _2971 / _698;
        float _2983 = _2972 * _750;
        float _2984 = _751 * _2972;
        float _2985 = (-0.0) - _2984;
        float _2987 = _2972 * _752;
        float _2989 = (cbSceneParam._m0[77u].w * _2985) / _2971;
        float _2990 = _2989 + cbSceneParam._m0[79u].w;
        float _2991 = cbSceneParam._m0[79u].w - _2984;
        float _2997 = sqrt(((_2983 * _2983) + (_2984 * _2984)) + (_2987 * _2987));
        float _3000 = (1.0 - (cbSceneParam._m0[77u].w / _2971)) * _2997;
        float _3005 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3007 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3184;
        if (abs((_2985 - _2989) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3184 = ((((_2990 > 0.0) ? exp2(_3005 * _2990) : (2.0 - exp2(_3007 * _2990))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3000;
        }
        else
        {
            float _3128 = 1.0 / cbSceneParam._m0[80u].x;
            float _3129 = isnan(_2991) ? _2990 : (isnan(_2990) ? _2991 : max(_2990, _2991));
            float _3130 = isnan(_2991) ? _2990 : (isnan(_2990) ? _2991 : min(_2990, _2991));
            float _3139 = isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : min(_3129, 0.0));
            float _3140 = isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : min(_3130, 0.0));
            _3184 = ((abs(_2997 / _2985) * cbSceneParam._m0[80u].y) * ((((_3139 - _3140) * 2.0) - ((exp2(_3005 * (isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : max(_3129, 0.0)))) - exp2(_3005 * (isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : max(_3130, 0.0))))) * _3128)) - ((exp2(_3007 * _3139) - exp2(_3007 * _3140)) * _3128))) + (_3000 * cbSceneParam._m0[80u].z);
        }
        vec4 _3186 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2917, _2918, 1.0), 0.0);
        float _3195 = exp2((_3184 * (-1.44269502162933349609375)) * (1.0 - _3186.w));
        float _3196 = log2(_3195);
        float _3212 = log2(_2937);
        _3009 = (exp2(_3212 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3196 * cbSceneParam._m0[78u].x)) * _3186.x) / cbSceneParam._m0[78u].x)) + _2934;
        _3011 = (exp2(_3212 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3196 * cbSceneParam._m0[78u].y)) * _3186.y) / cbSceneParam._m0[78u].y)) + _2935;
        _3013 = (exp2(_3212 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3196 * cbSceneParam._m0[78u].z)) * _3186.z) / cbSceneParam._m0[78u].z)) + _2936;
        _3015 = _3195 * _2937;
    }
    else
    {
        _3009 = _2934;
        _3011 = _2935;
        _3013 = _2936;
        _3015 = _2937;
    }
    bool _3222;
    vec4 _3025;
    vec4 _3047;
    float _3049;
    float _3053;
    float _3054;
    float _3055;
    float _3056;
    bool _3066;
    for (;;)
    {
        _3025 = cbMatDynParam._m0[0u];
        float _3027 = roundEven(_3025.y);
        bool _3028 = _3027 == 3.0;
        float _3029 = log2(_3015);
        float _3036 = exp2(_3029 * cbSceneParam._m0[78u].x) * _2906;
        float _3037 = exp2(_3029 * cbSceneParam._m0[78u].y) * _2907;
        float _3038 = exp2(_3029 * cbSceneParam._m0[78u].z) * _2908;
        float _3045 = _766 + (-0.5);
        _3047 = cbMtdParam._m0[1u];
        _3049 = _3047.y * _3045;
        float _3052 = (_3027 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3053 = _3052 * (_3028 ? _3036 : (_3036 + (cbSceneParam._m0[72u].w * _3009)));
        _3054 = _3052 * (_3028 ? _3037 : (_3037 + (cbSceneParam._m0[72u].w * _3011)));
        _3055 = _3052 * (_3028 ? _3038 : (_3038 + (cbSceneParam._m0[72u].w * _3013)));
        _3056 = _3045 * 0.999000012874603271484375;
        _3066 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3066)
        {
            if ((cbInstanceData._m0[_268 + 7u].x + _3056) < 0.5)
            {
                _3222 = true;
                break;
            }
        }
        uint _3163 = _815 + uint(_3025.w);
        if ((cbInstanceData._m0[_3163].w < 1.0) && ((cbInstanceData._m0[_3163].w + _3056) < 0.5))
        {
            _3222 = true;
            break;
        }
        if ((_3049 + 1.0) < _3047.x)
        {
            _3222 = true;
            break;
        }
        _3222 = false;
        break;
    }
    float _3426;
    if (_3222)
    {
        discard_state = true;
        _3426 = 0.0;
    }
    else
    {
        _3426 = cbInstanceData._m0[_2909].w;
    }
    SV_Target.x = _3053;
    SV_Target.y = _3054;
    SV_Target.z = _3055;
    SV_Target.w = _3426;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2909].w;
    discard_exit();
}


