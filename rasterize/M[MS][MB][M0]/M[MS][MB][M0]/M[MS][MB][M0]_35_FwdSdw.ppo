#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1210;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _229 = _228 * _220;
    float _230 = _228 * _221;
    float _231 = _228 * _222;
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _236 = _235 * NORMAL.x;
    float _237 = _235 * NORMAL.y;
    float _238 = _235 * NORMAL.z;
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243 = _242 * TANGENT.x;
    float _244 = _242 * TANGENT.y;
    float _245 = _242 * TANGENT.z;
    float _254 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3800 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _3811 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _3822 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    uint _267 = uint(roundEven(NORMAL.w)) * 13u;
    uint _272 = _267 + 1u;
    uint _276 = _267 + 2u;
    float _285 = sqrt(((cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x) + (cbInstanceData._m0[_267].x * cbInstanceData._m0[_267].x)) + (cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x));
    float _286 = _285 * TEXCOORD.z;
    float _287 = _285 * TEXCOORD.w;
    vec4 _300 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _286) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _287) + cbTextureTilingScale._m0[13u].w));
    vec4 _323 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _328 = _323.x * cbMtdParam._m0[9u].x;
    float _329 = _323.y * cbMtdParam._m0[9u].y;
    float _330 = _323.z * cbMtdParam._m0[9u].z;
    float _334 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _300.x) * _328;
    float _337 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _300.y) * _329;
    float _340 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _300.z) * _330;
    float _347 = ((_328 - _334) * (isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0)))) + _334;
    float _348 = ((_329 - _337) * (isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0)))) + _337;
    float _349 = ((_330 - _340) * (isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0)))) + _340;
    vec4 _367 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _286) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _287) + cbTextureTilingScale._m0[20u].w));
    vec4 _393 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _397 = _393.z;
    float _401 = (_393.x * 2.0) + (-1.0);
    float _402 = (_393.y * 2.0) + (-1.0);
    float _403 = dot(vec2(_401, _402), vec2(_401, _402));
    float _3833 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _408 = sqrt(1.0 - (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))));
    float _413 = _401 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_367.x * 2.0) + (-1.0)));
    float _414 = _402 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_367.y * 2.0) + (-1.0)));
    float _417 = fma(_408, _236, fma(_414, _243, _413 * _229));
    float _420 = fma(_408, _237, fma(_414, _244, _413 * _230));
    float _423 = fma(_408, _238, fma(_414, _245, _413 * _231));
    float _427 = inversesqrt(dot(vec3(_417, _420, _423), vec3(_417, _420, _423)));
    vec4 _463 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _286) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _287) + cbTextureTilingScale._m0[11u].w));
    float _465 = _463.x;
    float _466 = 1.0 - _465;
    float _473 = ((_465 - _466) * cbMtdParam._m0[24u].z) + _466;
    float _475 = (cbMtdParam._m0[19u].x + dot(vec4(_427 * _417, _427 * _420, _427 * _423, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_473 * cbMtdParam._m0[21u].z);
    float _3844 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _476 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
    float _478 = (-0.0) - cbMtdParam._m0[24u].y;
    float _480 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _481 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
    float _488 = _476 - ((_476 * TEXCOORD_8.x) * _481);
    float _489 = _476 - ((_476 * TEXCOORD_8.y) * _481);
    float _490 = _476 - ((_476 * TEXCOORD_8.z) * _481);
    float _497 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _501 = ((isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : min(_497, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _509 = (_501 - (((_473 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _501))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3875 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _510 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _514 = ((_488 * (cbMtdParam._m0[17u].x - _347)) * _510) + _347;
    float _515 = ((_489 * (cbMtdParam._m0[17u].y - _348)) * _510) + _348;
    float _516 = ((_490 * (cbMtdParam._m0[17u].z - _349)) * _510) + _349;
    vec4 _528 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _286) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _287) + cbTextureTilingScale._m0[19u].w));
    float _530 = _528.x;
    float _531 = 1.0 - _530;
    float _558 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_530 - _531) * cbMtdParam._m0[24u].w) + _531) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3886 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _559 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _567 = ((((cbMtdParam._m0[10u].x - _514) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _559) + _514;
    float _568 = ((((cbMtdParam._m0[10u].y - _515) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _559) + _515;
    float _569 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _516)) * _559) + _516;
    float _574 = (((_367.z - _397) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _397;
    vec4 _588 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _286) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _287) + cbTextureTilingScale._m0[15u].w));
    float _595 = (_588.x * 2.0) + (-1.0);
    float _596 = (_588.y * 2.0) + (-1.0);
    float _597 = dot(vec2(_595, _596), vec2(_595, _596));
    float _3897 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _606 = (((_588.z - _574) * _488) * _510) + _574;
    float _609 = ((cbMtdParam._m0[23u].y - _606) * _559) + _606;
    vec4 _628 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _286) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _287) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _634 = (_628.x * 2.0) + (-1.0);
    float _635 = (_628.y * 2.0) + (-1.0);
    float _636 = dot(vec2(_634, _635), vec2(_634, _635));
    float _3908 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _656 = (((cbMtdParam._m0[21u].x * _413) + ((_595 - _413) * _488)) * _510) + _413;
    float _657 = (((cbMtdParam._m0[21u].x * _414) + ((_596 - _414) * _489)) * _510) + _414;
    float _658 = (((sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) - _408) * _490) * _510) + _408;
    float _669 = (((_634 - _656) + (_656 * cbMtdParam._m0[22u].z)) * _559) + _656;
    float _670 = (((_635 - _657) + (_657 * cbMtdParam._m0[22u].z)) * _559) + _657;
    float _671 = ((sqrt(1.0 - (isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0)))) - _658) * _559) + _658;
    float _673 = cbMtdParam._m0[22u].x + _393.w;
    float _676 = fma(_671, _236, fma(_670, _243, _669 * _229));
    float _679 = fma(_671, _237, fma(_670, _244, _669 * _230));
    float _682 = fma(_671, _238, fma(_670, _245, _669 * _231));
    float _686 = inversesqrt(dot(vec3(_676, _679, _682), vec3(_676, _679, _682)));
    float _687 = _686 * _676;
    float _688 = _686 * _679;
    float _689 = _686 * _682;
    float _3919 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _690 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _3930 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _3941 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _3952 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _3963 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _708 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _748 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _758 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _748);
    float _759 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _748);
    float _760 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _748);
    float _764 = inversesqrt(dot(vec3(_758, _759, _760), vec3(_758, _759, _760)));
    float _765 = _758 * _764;
    float _766 = _759 * _764;
    float _767 = _760 * _764;
    float _773 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _774 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _795 = fma(_689, cbSceneParam._m0[5u].z, fma(_688, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _687));
    float _798 = fma(_689, cbSceneParam._m0[6u].z, fma(_688, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _687));
    float _801 = fma(_689, cbSceneParam._m0[7u].z, fma(_688, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _687));
    uint _815 = (_267 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _821 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_815].x;
    float _822 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_815].y;
    float _823 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) * cbInstanceData._m0[_815].z;
    float _3974 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _824 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _3996 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    vec4 _835 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _773, cbSceneParam._m0[86u].y * _774));
    float _839 = ((isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0))) * TEXCOORD_5.w) * _835.x;
    float _840 = dot(vec3(_687, _688, _689), vec3(_765, _766, _767));
    float _843 = _840 * 2.0;
    float _847 = (_843 * _687) - _765;
    float _848 = (_843 * _688) - _766;
    float _849 = (_843 * _689) - _767;
    float _853 = abs(dot(vec3(_765, _766, _767), vec3(_687, _688, _689)));
    float _4007 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _855 = sqrt(_690);
    float _868 = exp2((_855 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_855 * 3.0));
    float _900 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _904 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1209;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _934 = fma(_908, cbModelParam._m0[26u].z, fma(_904, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _900));
        float _938 = fma(_908, cbModelParam._m0[27u].z, fma(_904, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _900));
        float _942 = fma(_908, cbModelParam._m0[28u].z, fma(_904, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _900));
        float _967 = _900 + _687;
        float _968 = _904 + _688;
        float _969 = _908 + _689;
        float _979 = fma(_969, cbModelParam._m0[26u].z, fma(_968, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _967)) - _934;
        float _980 = fma(_969, cbModelParam._m0[27u].z, fma(_968, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _967)) - _938;
        float _981 = fma(_969, cbModelParam._m0[28u].z, fma(_968, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _967)) - _942;
        float _985 = inversesqrt(dot(vec3(_979, _980, _981), vec3(_979, _980, _981)));
        float _998 = ((_985 * _979) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_934 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _999 = ((_985 * _980) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_938 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_985 * _981) / cbModelParam._m0[34u].z) + ((((((_942 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1003 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1010 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1017 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        float _1037 = exp2((_1003.w + (-0.5)) * 20.0) * 2.0;
        float _1038 = _1037 * (_1003.x + (-0.5));
        float _1039 = _1037 * (_1003.y + (-0.5));
        float _1040 = _1037 * (_1003.z + (-0.5));
        float _1047 = exp2((_1010.w + (-0.5)) * 20.0) * 2.0;
        float _1048 = _1047 * (_1010.x + (-0.5));
        float _1049 = _1047 * (_1010.y + (-0.5));
        float _1050 = _1047 * (_1010.z + (-0.5));
        float _1057 = exp2((_1017.w + (-0.5)) * 20.0) * 2.0;
        float _1058 = _1057 * (_1017.x + (-0.5));
        float _1059 = _1057 * (_1017.y + (-0.5));
        float _1060 = _1057 * (_1017.z + (-0.5));
        float _1067 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1068 = _1067 * (_1024.x + (-0.5));
        float _1069 = _1067 * (_1024.y + (-0.5));
        float _1070 = _1067 * (_1024.z + (-0.5));
        float _1071 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = _1038 * 0.5;
        float _1075 = _1048 * 0.5;
        float _1076 = _1058 * 0.5;
        float _1077 = dot(vec3(_1074, _1075, _1076), vec3(_1074, _1075, _1076));
        float _1082 = (_1077 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1077);
        float _1091 = (dot(vec3(_687, _688, _689), vec3(_1082 * _1074, _1082 * _1075, _1082 * _1076)) + 1.0) * 0.5;
        float _4033 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1101 = sqrt(((_1075 * _1075) + (_1074 * _1074)) + (_1076 * _1076)) / (_1071 + 9.9999997473787516355514526367188e-06);
        float _4044 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1103 = _1102 * 2.0;
        float _1107 = (1.0 - _1102) / (_1102 + 1.0);
        float _4055 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1108 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1117 = ((((1.0 - _1108) * (_1103 + 2.0)) * exp2(log2(isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * (_1103 + 1.0))) + _1108) * _1071;
        float _1118 = _1039 * 0.5;
        float _1119 = _1049 * 0.5;
        float _1120 = _1059 * 0.5;
        float _1121 = dot(vec3(_1118, _1119, _1120), vec3(_1118, _1119, _1120));
        float _1126 = (_1121 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1121);
        float _1134 = (dot(vec3(_687, _688, _689), vec3(_1126 * _1118, _1126 * _1119, _1126 * _1120)) + 1.0) * 0.5;
        float _4066 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1143 = sqrt(((_1119 * _1119) + (_1118 * _1118)) + (_1120 * _1120)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _4077 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1145 = _1144 * 2.0;
        float _1149 = (1.0 - _1144) / (_1144 + 1.0);
        float _4088 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1150 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1159 = ((((1.0 - _1150) * (_1145 + 2.0)) * exp2(log2(isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * (_1145 + 1.0))) + _1150) * _1072;
        float _1160 = _1040 * 0.5;
        float _1161 = _1050 * 0.5;
        float _1162 = _1060 * 0.5;
        float _1163 = dot(vec3(_1160, _1161, _1162), vec3(_1160, _1161, _1162));
        float _1168 = (_1163 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1163);
        float _1176 = (dot(vec3(_687, _688, _689), vec3(_1168 * _1160, _1168 * _1161, _1168 * _1162)) + 1.0) * 0.5;
        float _4099 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1185 = sqrt(((_1161 * _1161) + (_1160 * _1160)) + (_1162 * _1162)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4110 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1187 = _1186 * 2.0;
        float _1191 = (1.0 - _1186) / (_1186 + 1.0);
        float _4121 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1192 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1201 = ((((1.0 - _1192) * (_1187 + 2.0)) * exp2(log2(isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * (_1187 + 1.0))) + _1192) * _1073;
        _1209 = _1040;
        _1211 = _1039;
        _1212 = _1038;
        _1213 = _1050;
        _1214 = _1049;
        _1215 = _1048;
        _1216 = _1060;
        _1217 = _1059;
        _1218 = _1058;
        _1219 = _1073;
        _1220 = _1072;
        _1221 = _1071;
        _1222 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0)));
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0)));
    }
    else
    {
        _1209 = _1210;
        _1211 = _1210;
        _1212 = _1210;
        _1213 = _1210;
        _1214 = _1210;
        _1215 = _1210;
        _1216 = _1210;
        _1217 = _1210;
        _1218 = _1210;
        _1219 = _1210;
        _1220 = _1210;
        _1221 = _1210;
        _1222 = 0.0;
        _1223 = 0.0;
        _1224 = 0.0;
    }
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1249 = fma(_908, cbModelParam._m0[30u].z, fma(_904, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _900));
        float _1253 = fma(_908, cbModelParam._m0[31u].z, fma(_904, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _900));
        float _1257 = fma(_908, cbModelParam._m0[32u].z, fma(_904, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _900));
        float _1280 = _900 + _687;
        float _1281 = _904 + _688;
        float _1282 = _908 + _689;
        float _1292 = fma(_1282, cbModelParam._m0[30u].z, fma(_1281, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1280)) - _1249;
        float _1293 = fma(_1282, cbModelParam._m0[31u].z, fma(_1281, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1280)) - _1253;
        float _1294 = fma(_1282, cbModelParam._m0[32u].z, fma(_1281, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1280)) - _1257;
        float _1298 = inversesqrt(dot(vec3(_1292, _1293, _1294), vec3(_1292, _1293, _1294)));
        float _1311 = ((_1298 * _1292) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1249 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1312 = ((_1298 * _1293) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1253 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1313 = ((_1298 * _1294) / cbModelParam._m0[35u].z) + ((((((_1257 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1315 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1322 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        float _1348 = exp2((_1315.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1315.x + (-0.5));
        float _1350 = _1348 * (_1315.y + (-0.5));
        float _1351 = _1348 * (_1315.z + (-0.5));
        float _1358 = exp2((_1322.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1322.x + (-0.5));
        float _1360 = _1358 * (_1322.y + (-0.5));
        float _1361 = _1358 * (_1322.z + (-0.5));
        float _1368 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1329.x + (-0.5));
        float _1370 = _1368 * (_1329.y + (-0.5));
        float _1371 = _1368 * (_1329.z + (-0.5));
        float _1378 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1379 = _1378 * (_1336.x + (-0.5));
        float _1380 = _1378 * (_1336.y + (-0.5));
        float _1381 = _1378 * (_1336.z + (-0.5));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = _1349 * 0.5;
        float _1386 = _1359 * 0.5;
        float _1387 = _1369 * 0.5;
        float _1388 = dot(vec3(_1385, _1386, _1387), vec3(_1385, _1386, _1387));
        float _1393 = (_1388 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1388);
        float _1401 = (dot(vec3(_687, _688, _689), vec3(_1393 * _1385, _1393 * _1386, _1393 * _1387)) + 1.0) * 0.5;
        float _4162 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1410 = sqrt(((_1386 * _1386) + (_1385 * _1385)) + (_1387 * _1387)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _4173 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1412 = _1411 * 2.0;
        float _1416 = (1.0 - _1411) / (_1411 + 1.0);
        float _4184 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1426 = ((((1.0 - _1417) * (_1412 + 2.0)) * exp2(log2(isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))) * (_1412 + 1.0))) + _1417) * _1382;
        float _1427 = _1350 * 0.5;
        float _1428 = _1360 * 0.5;
        float _1429 = _1370 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1443 = (dot(vec3(_687, _688, _689), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1452 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1454 = _1453 * 2.0;
        float _1458 = (1.0 - _1453) / (_1453 + 1.0);
        float _4217 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1468 = ((((1.0 - _1459) * (_1454 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1454 + 1.0))) + _1459) * _1383;
        float _1469 = _1351 * 0.5;
        float _1470 = _1361 * 0.5;
        float _1471 = _1371 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_687, _688, _689), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _4250 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1496 + 1.0))) + _1501) * _1384;
        _1518 = _1351;
        _1519 = _1350;
        _1520 = _1349;
        _1521 = _1361;
        _1522 = _1360;
        _1523 = _1359;
        _1524 = _1371;
        _1525 = _1370;
        _1526 = _1369;
        _1527 = _1384;
        _1528 = _1383;
        _1529 = _1382;
        _1530 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)));
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0)));
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
    }
    else
    {
        _1518 = _1210;
        _1519 = _1210;
        _1520 = _1210;
        _1521 = _1210;
        _1522 = _1210;
        _1523 = _1210;
        _1524 = _1210;
        _1525 = _1210;
        _1526 = _1210;
        _1527 = _1210;
        _1528 = _1210;
        _1529 = _1210;
        _1530 = 0.0;
        _1531 = 0.0;
        _1532 = 0.0;
    }
    float _1542 = (cbModelParam._m0[1u].x * (_1530 - _1222)) + _1222;
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1223)) + _1223;
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1224)) + _1224;
    float _1565 = fma(_1544, cbSceneParam._m0[89u].z, fma(_1543, cbSceneParam._m0[89u].y, _1542 * cbSceneParam._m0[89u].x));
    float _1568 = fma(_1544, cbSceneParam._m0[90u].z, fma(_1543, cbSceneParam._m0[90u].y, _1542 * cbSceneParam._m0[90u].x));
    float _1571 = fma(_1544, cbSceneParam._m0[91u].z, fma(_1543, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1542));
    float _1586 = _847 * 0.5;
    float _1587 = _848 * 0.5;
    float _1588 = _849 * 0.5;
    float _1589 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1592 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1595 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1518, _1521, _1524, _1527));
    float _1629;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1602 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1209, _1213, _1216, _1219));
        float _1606 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1211, _1214, _1217, _1220));
        float _1610 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1617 = dot(vec4(cbModelParam._m0[39u]), vec4(_1586, _1587, _1588, 1.0));
        _1629 = dot(vec3(isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1617) ? 0.0 : (isnan(0.0) ? _1617 : max(0.0, _1617))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1629 = 1.0;
    }
    float _1640;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1631 = dot(vec4(cbModelParam._m0[40u]), vec4(_1586, _1587, _1588, 1.0));
        _1640 = dot(vec3(isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0)), isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1631) ? 0.0 : (isnan(0.0) ? _1631 : max(0.0, _1631))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1640 = 1.0;
    }
    float _1644 = (_1640 * cbModelParam._m0[1u].x) + (_1629 * (1.0 - cbModelParam._m0[1u].x));
    float _1654 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _690);
    float _1655 = isnan(_1654) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1654 : min(cbModelParam._m0[25u].z, _1654));
    float _1736;
    float _1738;
    float _1740;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1703 = fma(_908, cbModelParam._m0[13u].z, fma(_904, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _900)) + cbModelParam._m0[13u].w;
        float _1707 = fma(_908, cbModelParam._m0[14u].z, fma(_904, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _900)) + cbModelParam._m0[14u].w;
        float _1711 = fma(_908, cbModelParam._m0[15u].z, fma(_904, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _900)) + cbModelParam._m0[15u].w;
        float _1714 = fma(_849, cbModelParam._m0[13u].z, fma(_848, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _847));
        float _1717 = fma(_849, cbModelParam._m0[14u].z, fma(_848, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _847));
        float _1720 = fma(_849, cbModelParam._m0[15u].z, fma(_848, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _847));
        float _1748;
        if (_1714 > 0.0)
        {
            _1748 = abs((1.0 - _1703) / _1714);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1714 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1703 + 1.0) / _1714);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1748 = frontier_phi_14_12_ladder;
        }
        float _1919;
        if (_1717 > 0.0)
        {
            _1919 = abs((1.0 - _1707) / _1717);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1717 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1707 + 1.0) / _1717);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1919 = frontier_phi_23_19_ladder;
        }
        float _2215;
        if (_1720 > 0.0)
        {
            _2215 = abs((1.0 - _1711) / _1720);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1720 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1711 + 1.0) / _1720);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2215 = frontier_phi_35_30_ladder;
        }
        float _2217 = isnan(_1919) ? _1748 : (isnan(_1748) ? _1919 : min(_1748, _1919));
        float _2218 = isnan(_2215) ? _2217 : (isnan(_2217) ? _2215 : min(_2217, _2215));
        float _2222 = (_2218 * _1714) + _1703;
        float _2223 = (_2218 * _1717) + _1707;
        float _2224 = (_2218 * _1720) + _1711;
        float _2225 = _2218 * 9.9999997473787516355514526367188e-05;
        float _2227 = (-1.0) - _2225;
        float _2229 = _2225 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2224 > _2229) || ((_2224 < _2227) || ((_2223 > _2229) || ((_2223 < _2227) || ((_2222 < _2227) || (_2222 > _2229))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2369 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2224, cbModelParam._m0[9u].z, fma(_2223, cbModelParam._m0[9u].y, _2222 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2224, cbModelParam._m0[10u].z, fma(_2223, cbModelParam._m0[10u].y, _2222 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2224, cbModelParam._m0[11u].z, fma(_2223, cbModelParam._m0[11u].y, _2222 * cbModelParam._m0[11u].x))), _1655);
            frontier_phi_13_35_ladder = _2369.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2369.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2369.x * cbModelParam._m0[1u].y;
        }
        _1736 = frontier_phi_13_35_ladder_2;
        _1738 = frontier_phi_13_35_ladder_1;
        _1740 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1724 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_847, _848, _849), _1655);
        _1736 = _1724.x * cbModelParam._m0[1u].y;
        _1738 = _1724.y * cbModelParam._m0[1u].y;
        _1740 = _1724.z * cbModelParam._m0[1u].y;
    }
    float _1744 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _690);
    float _1745 = isnan(_1744) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1744 : min(cbModelParam._m0[25u].w, _1744));
    float _1835;
    float _1837;
    float _1839;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1799 = fma(_908, cbModelParam._m0[21u].z, fma(_904, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _900)) + cbModelParam._m0[21u].w;
        float _1803 = fma(_908, cbModelParam._m0[22u].z, fma(_904, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _900)) + cbModelParam._m0[22u].w;
        float _1807 = fma(_908, cbModelParam._m0[23u].z, fma(_904, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _900)) + cbModelParam._m0[23u].w;
        float _1810 = fma(_849, cbModelParam._m0[21u].z, fma(_848, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _847));
        float _1813 = fma(_849, cbModelParam._m0[22u].z, fma(_848, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _847));
        float _1816 = fma(_849, cbModelParam._m0[23u].z, fma(_848, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _847));
        float _1924;
        if (_1810 > 0.0)
        {
            _1924 = abs((1.0 - _1799) / _1810);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1810 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1799 + 1.0) / _1810);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1924 = frontier_phi_25_21_ladder;
        }
        float _2242;
        if (_1813 > 0.0)
        {
            _2242 = abs((1.0 - _1803) / _1813);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1803 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2242 = frontier_phi_37_32_ladder;
        }
        float _2569;
        if (_1816 > 0.0)
        {
            _2569 = abs((1.0 - _1807) / _1816);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1816 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1807 + 1.0) / _1816);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2569 = frontier_phi_47_44_ladder;
        }
        float _2571 = isnan(_2242) ? _1924 : (isnan(_1924) ? _2242 : min(_1924, _2242));
        float _2572 = isnan(_2569) ? _2571 : (isnan(_2571) ? _2569 : min(_2571, _2569));
        float _2576 = (_2572 * _1810) + _1799;
        float _2577 = (_2572 * _1813) + _1803;
        float _2578 = (_2572 * _1816) + _1807;
        float _2579 = _2572 * 9.9999997473787516355514526367188e-05;
        float _2580 = (-1.0) - _2579;
        float _2582 = _2579 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2578 > _2582) || ((_2578 < _2580) || ((_2577 > _2582) || ((_2577 < _2580) || ((_2576 < _2580) || (_2576 > _2582))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2696 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2578, cbModelParam._m0[17u].z, fma(_2577, cbModelParam._m0[17u].y, _2576 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2578, cbModelParam._m0[18u].z, fma(_2577, cbModelParam._m0[18u].y, _2576 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2578, cbModelParam._m0[19u].z, fma(_2577, cbModelParam._m0[19u].y, _2576 * cbModelParam._m0[19u].x))), _1745);
            frontier_phi_22_47_ladder = _2696.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2696.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2696.x * cbModelParam._m0[1u].z;
        }
        _1835 = frontier_phi_22_47_ladder_2;
        _1837 = frontier_phi_22_47_ladder_1;
        _1839 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1819 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_847, _848, _849), _1745);
        _1835 = _1819.x * cbModelParam._m0[1u].z;
        _1837 = _1819.y * cbModelParam._m0[1u].z;
        _1839 = _1819.z * cbModelParam._m0[1u].z;
    }
    float _1851 = ((((1.0 - _868) * ((_855 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_868 * _855)) * _839;
    float _1852 = _1851 * ((cbModelParam._m0[1u].w * (_1835 - _1736)) + _1736);
    float _1853 = _1851 * ((cbModelParam._m0[1u].w * (_1837 - _1738)) + _1738);
    float _1854 = _1851 * ((cbModelParam._m0[1u].w * (_1839 - _1740)) + _1740);
    float _1857 = fma(_1854, cbSceneParam._m0[89u].z, fma(_1853, cbSceneParam._m0[89u].y, _1852 * cbSceneParam._m0[89u].x));
    float _1860 = fma(_1854, cbSceneParam._m0[90u].z, fma(_1853, cbSceneParam._m0[90u].y, _1852 * cbSceneParam._m0[90u].x));
    float _1863 = fma(_1854, cbSceneParam._m0[91u].z, fma(_1853, cbSceneParam._m0[91u].y, _1852 * cbSceneParam._m0[91u].x));
    float _1898 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1902 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1906 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1910 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1911 = _1898 / _1910;
    float _1912 = _1902 / _1910;
    float _1913 = _1906 / _1910;
    float _2060;
    float _2061;
    float _2062;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1940 = ((uint(_1913 > cbSceneParam._m0[59u].y) + uint(_1913 > cbSceneParam._m0[59u].x)) + uint(_1913 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1941 = _1940 + 43u;
        uint _1949 = _1940 + 44u;
        uint _1957 = _1940 + 45u;
        uint _1965 = _1940 + 46u;
        float _1976 = fma(_1910, cbSceneParam._m0[_1941].w, fma(_1906, cbSceneParam._m0[_1941].z, fma(_1902, cbSceneParam._m0[_1941].y, _1898 * cbSceneParam._m0[_1941].x)));
        float _1980 = fma(_1910, cbSceneParam._m0[_1949].w, fma(_1906, cbSceneParam._m0[_1949].z, fma(_1902, cbSceneParam._m0[_1949].y, _1898 * cbSceneParam._m0[_1949].x)));
        float _1988 = fma(_1910, cbSceneParam._m0[_1965].w, fma(_1906, cbSceneParam._m0[_1965].z, fma(_1902, cbSceneParam._m0[_1965].y, _1898 * cbSceneParam._m0[_1965].x)));
        float _1993 = cbSceneParam._m0[33u].z * _1988;
        float _1995 = cbSceneParam._m0[33u].w * _1988;
        float _1998 = fma(_1910, cbSceneParam._m0[_1957].w, fma(_1906, cbSceneParam._m0[_1957].z, fma(_1902, cbSceneParam._m0[_1957].y, _1898 * cbSceneParam._m0[_1957].x))) / _1988;
        float _2046 = (cbSceneParam._m0[33u].x - sqrt(((_1912 * _1912) + (_1911 * _1911)) + (_1913 * _1913))) * cbSceneParam._m0[33u].y;
        float _4376 = isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0));
        float _2053 = (isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1993 + _1976) / _1988, (_1995 + _1980) / _1988), _1998), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1995 + _1976) / _1988, (_1980 - _1993) / _1988), _1998), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1976 - _1993) / _1988, (_1980 - _1995) / _1988), _1998), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1976 - _1995) / _1988, (_1993 + _1980) / _1988), _1998), 0.0)).x), vec4(0.25)));
        _2060 = 1.0 - (_2053 * cbSceneParam._m0[34u].x);
        _2061 = 1.0 - (_2053 * cbSceneParam._m0[34u].y);
        _2062 = 1.0 - (_2053 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2060 = 1.0;
        _2061 = 1.0;
        _2062 = 1.0;
    }
    float _2126;
    float _2128;
    float _2130;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2114 = fma(_1910, cbSceneParam._m0[63u].w, fma(_1906, cbSceneParam._m0[63u].z, fma(_1902, cbSceneParam._m0[63u].y, _1898 * cbSceneParam._m0[63u].x)));
        float _2115 = fma(_1910, cbSceneParam._m0[60u].w, fma(_1906, cbSceneParam._m0[60u].z, fma(_1902, cbSceneParam._m0[60u].y, _1898 * cbSceneParam._m0[60u].x))) / _2114;
        float _2116 = fma(_1910, cbSceneParam._m0[61u].w, fma(_1906, cbSceneParam._m0[61u].z, fma(_1902, cbSceneParam._m0[61u].y, _1898 * cbSceneParam._m0[61u].x))) / _2114;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2115 >= cbSceneParam._m0[64u].x) && (_2116 >= cbSceneParam._m0[64u].y)) && (_2115 <= cbSceneParam._m0[64u].z)) && (_2116 <= cbSceneParam._m0[64u].w))
        {
            float _2255 = fma(_1910, cbSceneParam._m0[62u].w, fma(_1906, cbSceneParam._m0[62u].z, fma(_1902, cbSceneParam._m0[62u].y, _1898 * cbSceneParam._m0[62u].x))) / _2114;
            float _2259 = isnan(cbSceneParam._m0[41u].w) ? _2255 : (isnan(_2255) ? cbSceneParam._m0[41u].w : max(_2255, cbSceneParam._m0[41u].w));
            float _2302 = (cbSceneParam._m0[33u].x - sqrt(((_1912 * _1912) + (_1911 * _1911)) + (_1913 * _1913))) * cbSceneParam._m0[33u].y;
            float _4392 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0));
            float _2309 = (isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2115, cbSceneParam._m0[33u].w + _2116), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2115, _2116 - cbSceneParam._m0[33u].z), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2115 - cbSceneParam._m0[33u].z, _2116 - cbSceneParam._m0[33u].w), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2115 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2116), _2259), 0.0)).x), vec4(0.25)));
            float _2313 = 1.0 - (_2309 * cbSceneParam._m0[34u].x);
            float _2314 = 1.0 - (_2309 * cbSceneParam._m0[34u].y);
            float _2315 = 1.0 - (_2309 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2315) ? _2062 : (isnan(_2062) ? _2315 : min(_2062, _2315));
            frontier_phi_34_33_ladder_1 = isnan(_2314) ? _2061 : (isnan(_2061) ? _2314 : min(_2061, _2314));
            frontier_phi_34_33_ladder_2 = isnan(_2313) ? _2060 : (isnan(_2060) ? _2313 : min(_2060, _2313));
        }
        else
        {
            frontier_phi_34_33_ladder = _2062;
            frontier_phi_34_33_ladder_1 = _2061;
            frontier_phi_34_33_ladder_2 = _2060;
        }
        _2126 = frontier_phi_34_33_ladder_2;
        _2128 = frontier_phi_34_33_ladder_1;
        _2130 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2126 = _2060;
        _2128 = _2061;
        _2130 = _2062;
    }
    uvec4 _2135 = floatBitsToUint(cbInstanceData._m0[_267 + 5u]);
    uint _2137 = _2135.x * 14u;
    uint _2138 = _2137 + 13u;
    float _2145 = _839 + (-1.0);
    float _2150 = (cbLight._m0[_2138].x * _2145) + 1.0;
    float _2151 = (cbLight._m0[_2138].y * _2145) + 1.0;
    float _2152 = (cbLight._m0[_2138].z * _2145) + 1.0;
    float _2153 = (cbLight._m0[_2138].w * _2145) + 1.0;
    uint _2154 = _2137 + 5u;
    float _2160 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
    uint _2164 = _2137 + 4u;
    float _2174 = isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0));
    uint _2178 = _2137 | 1u;
    float _2189 = dot(vec3(cbLight._m0[_2137].xyz), vec3(_687, _688, _689));
    float _2192 = dot(vec3(cbLight._m0[_2178].xyz), vec3(_687, _688, _689));
    float _4428 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
    float _4439 = isnan(0.0) ? _2192 : (isnan(_2192) ? 0.0 : max(_2192, 0.0));
    float _2197 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2199 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * 0.3183098733425140380859375;
    float _2206 = ((cbLight._m0[_2154].x * _2160) * _2199) + (((cbLight._m0[_2164].x * _2126) * _2174) * _2197);
    float _2207 = ((_2160 * cbLight._m0[_2154].y) * _2199) + (((cbLight._m0[_2164].y * _2128) * _2174) * _2197);
    float _2208 = ((_2160 * cbLight._m0[_2154].z) * _2199) + (((cbLight._m0[_2164].z * _2130) * _2174) * _2197);
    uvec4 _2212 = floatBitsToUint(cbLight._m0[_2137 + 12u]);
    bool _2214 = _2212.x == 0u;
    float _2316;
    float _2318;
    float _2320;
    if (_2214)
    {
        _2316 = _2206;
        _2318 = _2207;
        _2320 = _2208;
    }
    else
    {
        uint _2324 = _2137 + 6u;
        float _2340 = (dot(vec3(cbLight._m0[_2137 + 2u].xyz), vec3(_687, _688, _689)) * 0.5) + 0.5;
        float _2341 = _2340 * _2340;
        float _4450 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
        float _2342 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _2343 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2316 = (((cbLight._m0[_2324].x * 0.3183098733425140380859375) * _2342) * _2343) + _2206;
        _2318 = (((cbLight._m0[_2324].y * 0.3183098733425140380859375) * _2342) * _2343) + _2207;
        _2320 = (((cbLight._m0[_2324].z * 0.3183098733425140380859375) * _2342) * _2343) + _2208;
    }
    bool _2323 = _2212.y == 0u;
    float _2378;
    float _2380;
    float _2382;
    if (_2323)
    {
        _2378 = _2316;
        _2380 = _2318;
        _2382 = _2320;
    }
    else
    {
        uint _2540 = _2137 + 7u;
        float _2556 = (dot(vec3(cbLight._m0[_2137 + 3u].xyz), vec3(_687, _688, _689)) * 0.5) + 0.5;
        float _2557 = _2556 * _2556;
        float _4466 = isnan(0.0) ? _2557 : (isnan(_2557) ? 0.0 : max(_2557, 0.0));
        float _2558 = isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0));
        float _2559 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
        _2378 = (((cbLight._m0[_2540].x * 0.3183098733425140380859375) * _2558) * _2559) + _2316;
        _2380 = (((cbLight._m0[_2540].y * 0.3183098733425140380859375) * _2558) * _2559) + _2318;
        _2382 = (((cbLight._m0[_2540].z * 0.3183098733425140380859375) * _2558) * _2559) + _2320;
    }
    uint _2385 = _2137 + 8u;
    float _2398 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2137].w)) * _690) * 0.949999988079071044921875);
    float _2399 = _2398 * _2398;
    float _2400 = cbLight._m0[_2137].x + _765;
    float _2401 = cbLight._m0[_2137].y + _766;
    float _2402 = cbLight._m0[_2137].z + _767;
    float _2406 = inversesqrt(dot(vec3(_2400, _2401, _2402), vec3(_2400, _2401, _2402)));
    float _2407 = _2406 * _2400;
    float _2408 = _2406 * _2401;
    float _2409 = _2406 * _2402;
    float _2410 = dot(vec3(_687, _688, _689), vec3(cbLight._m0[_2137].xyz));
    float _4482 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
    float _2413 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _4493 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _2414 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2415 = dot(vec3(_687, _688, _689), vec3(_2407, _2408, _2409));
    float _4504 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
    float _2418 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _2419 = dot(vec3(cbLight._m0[_2137].xyz), vec3(_2407, _2408, _2409));
    float _4515 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2423 = _2399 * _2399;
    float _2427 = ((_2418 * _2418) * (_2423 + (-1.0))) + 1.0;
    float _2438 = (exp2(log2(1.0 - (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2439 = 1.0 - _2399;
    float _2450 = (0.5 / (((_2414 * ((_2413 * _2439) + _2399)) + 9.9999999392252902907785028219223e-09) + (((_2414 * _2439) + _2399) * _2413))) * _2413;
    float _4526 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2452 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * (_2423 / ((_2427 * _2427) * 3.141590118408203125));
    uint _2466 = _2137 + 9u;
    float _2477 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2178].w)) * _690) * 0.949999988079071044921875);
    float _2478 = _2477 * _2477;
    float _2479 = cbLight._m0[_2178].x + _765;
    float _2480 = cbLight._m0[_2178].y + _766;
    float _2481 = cbLight._m0[_2178].z + _767;
    float _2485 = inversesqrt(dot(vec3(_2479, _2480, _2481), vec3(_2479, _2480, _2481)));
    float _2486 = _2485 * _2479;
    float _2487 = _2485 * _2480;
    float _2488 = _2485 * _2481;
    float _2489 = dot(vec3(_687, _688, _689), vec3(cbLight._m0[_2178].xyz));
    float _4537 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
    float _2492 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2493 = dot(vec3(_687, _688, _689), vec3(_2486, _2487, _2488));
    float _4548 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
    float _2496 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _2497 = dot(vec3(cbLight._m0[_2178].xyz), vec3(_2486, _2487, _2488));
    float _4559 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2501 = _2478 * _2478;
    float _2505 = ((_2496 * _2496) * (_2501 + (-1.0))) + 1.0;
    float _2514 = (exp2(log2(1.0 - (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2515 = 1.0 - _2478;
    float _2525 = (0.5 / (((_2414 * ((_2492 * _2515) + _2478)) + 9.9999999392252902907785028219223e-09) + (((_2414 * _2515) + _2478) * _2492))) * _2492;
    float _4570 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
    float _2527 = (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_2501 / ((_2505 * _2505) * 3.141590118408203125));
    float _2537 = (((_2514 * cbLight._m0[_2466].x) * _2527) * _2160) + ((((cbLight._m0[_2385].x * _2126) * _2438) * _2452) * _2174);
    float _2538 = (((_2514 * cbLight._m0[_2466].y) * _2527) * _2160) + ((((cbLight._m0[_2385].y * _2128) * _2438) * _2452) * _2174);
    float _2539 = (((_2514 * cbLight._m0[_2466].z) * _2527) * _2160) + ((((cbLight._m0[_2385].z * _2130) * _2438) * _2452) * _2174);
    float _2595;
    float _2597;
    float _2599;
    if (_2214)
    {
        _2595 = _2537;
        _2597 = _2538;
        _2599 = _2539;
    }
    else
    {
        uint _2601 = _2137 + 2u;
        uint _2605 = _2137 + 10u;
        float _2619 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2601].w)) * _690) * 0.949999988079071044921875);
        float _2620 = _2619 * _2619;
        float _2621 = cbLight._m0[_2601].x + _765;
        float _2622 = cbLight._m0[_2601].y + _766;
        float _2623 = cbLight._m0[_2601].z + _767;
        float _2627 = inversesqrt(dot(vec3(_2621, _2622, _2623), vec3(_2621, _2622, _2623)));
        float _2628 = _2627 * _2621;
        float _2629 = _2627 * _2622;
        float _2630 = _2627 * _2623;
        float _2631 = dot(vec3(_687, _688, _689), vec3(cbLight._m0[_2601].xyz));
        float _4581 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        float _2634 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2635 = dot(vec3(_687, _688, _689), vec3(_2628, _2629, _2630));
        float _4592 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2638 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2639 = dot(vec3(cbLight._m0[_2601].xyz), vec3(_2628, _2629, _2630));
        float _4603 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        float _2643 = _2620 * _2620;
        float _2647 = ((_2638 * _2638) * (_2643 + (-1.0))) + 1.0;
        float _2656 = (exp2(log2(1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2657 = 1.0 - _2620;
        float _2667 = (0.5 / (((_2414 * ((_2634 * _2657) + _2620)) + 9.9999999392252902907785028219223e-09) + (((_2414 * _2657) + _2620) * _2634))) * _2634;
        float _4614 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
        float _2669 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_2643 / ((_2647 * _2647) * 3.141590118408203125));
        float _2670 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2595 = (((_2656 * cbLight._m0[_2605].x) * _2669) * _2670) + _2537;
        _2597 = (((_2656 * cbLight._m0[_2605].y) * _2669) * _2670) + _2538;
        _2599 = (((_2656 * cbLight._m0[_2605].z) * _2669) * _2670) + _2539;
    }
    float _2701;
    float _2703;
    float _2705;
    if (_2323)
    {
        _2701 = _2595;
        _2703 = _2597;
        _2705 = _2599;
    }
    else
    {
        uint _2712 = _2137 + 3u;
        uint _2716 = _2137 + 11u;
        float _2730 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2712].w)) * _690) * 0.949999988079071044921875);
        float _2731 = _2730 * _2730;
        float _2732 = cbLight._m0[_2712].x + _765;
        float _2733 = cbLight._m0[_2712].y + _766;
        float _2734 = cbLight._m0[_2712].z + _767;
        float _2738 = inversesqrt(dot(vec3(_2732, _2733, _2734), vec3(_2732, _2733, _2734)));
        float _2739 = _2738 * _2732;
        float _2740 = _2738 * _2733;
        float _2741 = _2738 * _2734;
        float _2742 = dot(vec3(_687, _688, _689), vec3(cbLight._m0[_2712].xyz));
        float _4630 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        float _2745 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2746 = dot(vec3(_687, _688, _689), vec3(_2739, _2740, _2741));
        float _4641 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
        float _2749 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _2750 = dot(vec3(cbLight._m0[_2712].xyz), vec3(_2739, _2740, _2741));
        float _4652 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        float _2754 = _2731 * _2731;
        float _2758 = ((_2749 * _2749) * (_2754 + (-1.0))) + 1.0;
        float _2767 = (exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2768 = 1.0 - _2731;
        float _2778 = (0.5 / (((_2414 * ((_2745 * _2768) + _2731)) + 9.9999999392252902907785028219223e-09) + (((_2414 * _2768) + _2731) * _2745))) * _2745;
        float _4663 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
        float _2780 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2754 / ((_2758 * _2758) * 3.141590118408203125));
        float _2781 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
        _2701 = (((_2767 * cbLight._m0[_2716].x) * _2780) * _2781) + _2595;
        _2703 = (((_2767 * cbLight._m0[_2716].y) * _2780) * _2781) + _2597;
        _2705 = (((_2767 * cbLight._m0[_2716].z) * _2780) * _2781) + _2599;
    }
    float _2847;
    float _2849;
    float _2851;
    float _2853;
    float _2855;
    float _2857;
    if (_2135.y == 0u)
    {
        uvec4 _2802 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2803 = _2802.x;
        uint _2814 = uint((float(_2802.y) * floor(float(uint(cbSceneParam._m0[85u].y * _774) / _2803))) + floor(float(uint(cbSceneParam._m0[85u].x * _773) / _2803)));
        float _2824 = (log2(_1913 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2825 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        uint _2828 = uint(isnan(14.0) ? _2825 : (isnan(_2825) ? 14.0 : min(_2825, 14.0)));
        uvec4 _2833 = texelFetch(g_lightClusterGridBuffer, int(((_2828 << 2u) + (_2814 << 6u)) >> 2u));
        uint _2834 = _2833.x;
        uint _2835 = _2802.z;
        float _2914;
        float _2916;
        float _2918;
        float _2920;
        float _2922;
        float _2924;
        if (((((1u << ((_2835 >> 4u) & 15u)) + 4294967295u) & _2834) == 0u) || ((_2835 & 240u) == 0u))
        {
            _2914 = 0.0;
            _2916 = 0.0;
            _2918 = 0.0;
            _2920 = 0.0;
            _2922 = 0.0;
            _2924 = 0.0;
        }
        else
        {
            float _2915;
            float _2917;
            float _2919;
            float _2921;
            float _2923;
            float _2925;
            float _3058 = 0.0;
            float _3059 = 0.0;
            float _3060 = 0.0;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            uint _3064 = 0u;
            uint _3073;
            bool _3074;
            for (;;)
            {
                _3073 = texelFetch(g_lightClassification, int((((_2828 << 5u) + (_2814 << 9u)) + (_3064 << 2u)) >> 2u)).x;
                _3074 = _3073 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3074)
                {
                    frontier_phi_66_pred = _3063;
                    frontier_phi_66_pred_1 = _3062;
                    frontier_phi_66_pred_2 = _3061;
                    frontier_phi_66_pred_3 = _3060;
                    frontier_phi_66_pred_4 = _3059;
                    frontier_phi_66_pred_5 = _3058;
                }
                else
                {
                    float _3182;
                    float _3183;
                    float _3184;
                    float _3185;
                    float _3186;
                    float _3187;
                    uint _3188;
                    _3182 = _3058;
                    _3183 = _3059;
                    _3184 = _3060;
                    _3185 = _3061;
                    _3186 = _3062;
                    _3187 = _3063;
                    _3188 = _3073;
                    float _3114;
                    float _3115;
                    float _3116;
                    float _3117;
                    float _3118;
                    float _3119;
                    for (;;)
                    {
                        uint _3192 = uint(findLSB(_3188)) + (_3064 << 5u);
                        uint _3189 = (_3188 + 4294967295u) & _3188;
                        uint _3194 = _3192 * 48u;
                        vec4 _3208 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3194)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 3u)).x));
                        uint _3214 = (_3192 * 48u) + 4u;
                        vec4 _3227 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3214)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3214 + 3u)).x));
                        uint _3233 = (_3192 * 48u) + 8u;
                        vec3 _3244 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3233)).x, texelFetch(g_PointLightRenderingBuffer, int(_3233 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3233 + 2u)).x));
                        float _3248 = _3208.x - _1911;
                        float _3249 = _3208.y - _1912;
                        float _3250 = _3208.z - _1913;
                        float _3251 = dot(vec3(_3248, _3249, _3250), vec3(_3248, _3249, _3250));
                        float _3254 = inversesqrt(_3251);
                        float _3255 = _3254 * _3248;
                        float _3256 = _3254 * _3249;
                        float _3257 = _3254 * _3250;
                        float _3258 = dot(vec3(_795, _798, _801), vec3(_3255, _3256, _3257));
                        float _3263 = 1.0 - (_3251 * _3208.w);
                        float _4689 = isnan(0.0) ? _3263 : (isnan(_3263) ? 0.0 : max(_3263, 0.0));
                        float _3264 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                        float _3265 = sqrt(_3251) * _3227.w;
                        float _3268 = 1.39999997615814208984375 / (_3265 + 1.39999997615814208984375);
                        float _3269 = _3268 * _3268;
                        float _3272 = ((1.0 - _3269) * _3258) + _3269;
                        float _3275 = _3265 * _3265;
                        float _3279 = ((isnan(0.0) ? _3272 : (isnan(_3272) ? 0.0 : max(_3272, 0.0))) * _3264) / ((_3275 * 0.699999988079071044921875) + 1.0);
                        float _3283 = (-0.0) - _1911;
                        float _3284 = (-0.0) - _1912;
                        float _3285 = (-0.0) - _1913;
                        float _3289 = inversesqrt(dot(vec3(_3283, _3284, _3285), vec3(_3283, _3284, _3285)));
                        float _3290 = _3289 * _3283;
                        float _3291 = _3289 * _3284;
                        float _3292 = _3289 * _3285;
                        float _3299 = exp2(log2(1.0 / ((_3275 * 3.5) + 5.0)) * 0.25);
                        float _3300 = 1.0 - _855;
                        float _3307 = sqrt(1.0 - ((1.0 - (_3300 * _3300)) * (1.0 - (_3299 * _3299))));
                        float _3308 = _3307 * _3307;
                        float _3309 = _3308 * _3308;
                        float _3310 = _3290 + _3255;
                        float _3311 = _3291 + _3256;
                        float _3312 = _3292 + _3257;
                        float _3316 = inversesqrt(dot(vec3(_3310, _3311, _3312), vec3(_3310, _3311, _3312)));
                        float _3320 = dot(vec3(_795, _798, _801), vec3(_3290, _3291, _3292));
                        float _4705 = isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0));
                        float _3323 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3324 = dot(vec3(_795, _798, _801), vec3(_3316 * _3310, _3316 * _3311, _3316 * _3312));
                        float _4716 = isnan(0.0) ? _3324 : (isnan(_3324) ? 0.0 : max(_3324, 0.0));
                        float _3327 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3331 = ((_3327 * _3327) * (_3309 + (-1.0))) + 1.0;
                        float _3332 = _3268 * _3308;
                        float _3333 = _3332 * _3332;
                        float _3336 = ((1.0 - _3333) * _3258) + _3333;
                        float _4727 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0));
                        float _3337 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                        float _3338 = 1.0 - _3308;
                        float _3348 = (0.5 / (((_3337 * ((_3323 * _3338) + _3308)) + 9.9999999392252902907785028219223e-09) + (((_3337 * _3338) + _3308) * _3323))) * _3337;
                        float _4738 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0));
                        float _3359 = (((_3309 * 3.1415927410125732421875) * (isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0)))) / ((_3331 * _3331) * ((_3275 * 2.1991131305694580078125) + 3.141590118408203125))) * _3264;
                        _3117 = (_3279 * _3227.x) + _3185;
                        _3118 = (_3279 * _3227.y) + _3186;
                        _3119 = (_3279 * _3227.z) + _3187;
                        _3114 = (_3359 * _3244.x) + _3182;
                        _3115 = (_3359 * _3244.y) + _3183;
                        _3116 = (_3359 * _3244.z) + _3184;
                        if (_3189 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3182 = _3114;
                            _3183 = _3115;
                            _3184 = _3116;
                            _3185 = _3117;
                            _3186 = _3118;
                            _3187 = _3119;
                            _3188 = _3189;
                        }
                    }
                    frontier_phi_66_pred = _3119;
                    frontier_phi_66_pred_1 = _3118;
                    frontier_phi_66_pred_2 = _3117;
                    frontier_phi_66_pred_3 = _3116;
                    frontier_phi_66_pred_4 = _3115;
                    frontier_phi_66_pred_5 = _3114;
                }
                _2925 = frontier_phi_66_pred;
                _2923 = frontier_phi_66_pred_1;
                _2921 = frontier_phi_66_pred_2;
                _2919 = frontier_phi_66_pred_3;
                _2917 = frontier_phi_66_pred_4;
                _2915 = frontier_phi_66_pred_5;
                uint _3065 = _3064 + 1u;
                if (_3065 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3058 = _2915;
                    _3059 = _2917;
                    _3060 = _2919;
                    _3061 = _2921;
                    _3062 = _2923;
                    _3063 = _2925;
                    _3064 = _3065;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2914 = _2915;
            _2916 = _2917;
            _2918 = _2919;
            _2920 = _2921;
            _2922 = _2923;
            _2924 = _2925;
        }
        uvec4 _2928 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2929 = _2928.z;
        uint _2931 = (_2929 >> 8u) & 15u;
        float _3026;
        float _3028;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        if (((4294967295u << _2931) & _2834) == 0u)
        {
            _3026 = _2914;
            _3028 = _2916;
            _3030 = _2918;
            _3032 = _2920;
            _3034 = _2922;
            _3036 = _2924;
        }
        else
        {
            float _3051 = inversesqrt(dot(vec3(_1911, _1912, _1913), vec3(_1911, _1912, _1913)));
            float _3052 = _3051 * _1911;
            float _3053 = _3051 * _1912;
            float _3054 = _3051 * _1913;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2931 < ((_2929 >> 12u) & 15u))
            {
                float _3027;
                float _3029;
                float _3031;
                float _3033;
                float _3035;
                float _3037;
                float _3165 = _2914;
                float _3166 = _2916;
                float _3167 = _2918;
                float _3168 = _2920;
                float _3169 = _2922;
                float _3170 = _2924;
                uint _3171 = _2931;
                uint _3180;
                bool _3181;
                for (;;)
                {
                    _3180 = texelFetch(g_lightClassification, int((((_2828 << 5u) + (_2814 << 9u)) + (_3171 << 2u)) >> 2u)).x;
                    _3181 = _3180 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3181)
                    {
                        frontier_phi_72_pred = _3170;
                        frontier_phi_72_pred_1 = _3169;
                        frontier_phi_72_pred_2 = _3168;
                        frontier_phi_72_pred_3 = _3167;
                        frontier_phi_72_pred_4 = _3166;
                        frontier_phi_72_pred_5 = _3165;
                    }
                    else
                    {
                        float _3364;
                        float _3365;
                        float _3366;
                        float _3367;
                        float _3368;
                        float _3369;
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3377 = _3165;
                        float _3378 = _3166;
                        float _3379 = _3167;
                        float _3380 = _3168;
                        float _3381 = _3169;
                        float _3382 = _3170;
                        uint _3383 = _3180;
                        uint _3384;
                        vec4 _3409;
                        float _3410;
                        vec4 _3425;
                        vec3 _3437;
                        vec4 _3452;
                        vec4 _3467;
                        float _3513;
                        bool _3514;
                        for (;;)
                        {
                            uint _3394 = ((_3171 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3383));
                            _3384 = (_3383 + 4294967295u) & _3383;
                            uint _3396 = _3394 * 40u;
                            _3409 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3396)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 3u)).x));
                            _3410 = _3409.w;
                            uint _3412 = (_3394 * 40u) + 4u;
                            _3425 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3412)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3412 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3412 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3412 + 3u)).x));
                            uint _3427 = (_3394 * 40u) + 8u;
                            _3437 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3427)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3427 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3427 + 2u)).x));
                            uint _3439 = (_3394 * 40u) + 16u;
                            _3452 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3439)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 3u)).x));
                            uint _3454 = (_3394 * 40u) + 20u;
                            _3467 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3454)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 3u)).x));
                            uint _3469 = (_3394 * 40u) + 24u;
                            vec4 _3482 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3469)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 3u)).x));
                            uint _3488 = (_3394 * 40u) + 28u;
                            vec4 _3501 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3488)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 3u)).x));
                            _3513 = fma(_1913, _3501.z, fma(_1912, _3501.y, _3501.x * _1911)) + _3501.w;
                            _3514 = !((fma(_1913, _3482.z, fma(_1912, _3482.y, _3482.x * _1911)) + _3482.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3514)
                            {
                                float _3541 = _3409.x - _1911;
                                float _3542 = _3409.y - _1912;
                                float _3543 = _3409.z - _1913;
                                float _3544 = dot(vec3(_3541, _3542, _3543), vec3(_3541, _3542, _3543));
                                float _3547 = inversesqrt(_3544);
                                float _3548 = _3547 * _3541;
                                float _3549 = _3547 * _3542;
                                float _3550 = _3547 * _3543;
                                float _3554 = 1.0 - (_3544 / (_3410 * _3410));
                                float _4749 = isnan(0.0) ? _3554 : (isnan(_3554) ? 0.0 : max(_3554, 0.0));
                                float _3555 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                                float _3559 = sqrt(_3544) * _3425.w;
                                float _3561 = 1.39999997615814208984375 / (_3559 + 1.39999997615814208984375);
                                float _3562 = _3561 * _3561;
                                float _3565 = ((1.0 - _3562) * dot(vec3(_3548, _3549, _3550), vec3(_795, _798, _801))) + _3562;
                                float _3568 = _3559 * _3559;
                                float _3572 = (fma(_1913, _3452.z, fma(_1912, _3452.y, _3452.x * _1911)) + _3452.w) / _3513;
                                float _3573 = (fma(_1913, _3467.z, fma(_1912, _3467.y, _3467.x * _1911)) + _3467.w) / _3513;
                                float _3577 = 1.0 - dot(vec2(_3572, _3573), vec2(_3572, _3573));
                                float _4765 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                                float _3578 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3579 = _3578 * (((isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0))) * _3555) / ((_3568 * 0.699999988079071044921875) + 1.0));
                                float _3591 = exp2(log2(1.0 / ((_3568 * 3.5) + 5.0)) * 0.25);
                                float _3592 = 1.0 - _855;
                                float _3599 = sqrt(1.0 - ((1.0 - (_3592 * _3592)) * (1.0 - (_3591 * _3591))));
                                float _3600 = _3599 * _3599;
                                float _3601 = _3600 * _3600;
                                float _3602 = _3548 - _3052;
                                float _3603 = _3549 - _3053;
                                float _3604 = _3550 - _3054;
                                float _3608 = inversesqrt(dot(vec3(_3602, _3603, _3604), vec3(_3602, _3603, _3604)));
                                float _3612 = dot(vec3(_795, _798, _801), vec3((-0.0) - _3052, (-0.0) - _3053, (-0.0) - _3054));
                                float _4776 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                                float _3615 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3616 = dot(vec3(_795, _798, _801), vec3(_3608 * _3602, _3608 * _3603, _3608 * _3604));
                                float _4787 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                                float _3619 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3623 = ((_3619 * _3619) * (_3601 + (-1.0))) + 1.0;
                                float _3624 = _3561 * _3600;
                                float _3625 = _3624 * _3624;
                                float _3631 = ((1.0 - _3625) * dot(vec3(_795, _798, _801), vec3(_3548, _3549, _3550))) + _3625;
                                float _4798 = isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0));
                                float _3632 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
                                float _3633 = 1.0 - _3600;
                                float _3643 = (0.5 / (((_3632 * ((_3615 * _3633) + _3600)) + 9.9999999392252902907785028219223e-09) + (((_3632 * _3633) + _3600) * _3615))) * _3632;
                                float _4809 = isnan(0.0) ? _3643 : (isnan(_3643) ? 0.0 : max(_3643, 0.0));
                                float _3653 = (_3578 * _3555) * (((_3601 * 3.1415927410125732421875) * (isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0)))) / ((_3623 * _3623) * ((_3568 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3579 * _3425.y;
                                frontier_phi_78_pred_1 = _3579 * _3425.x;
                                frontier_phi_78_pred_2 = _3653 * _3437.z;
                                frontier_phi_78_pred_3 = _3653 * _3437.y;
                                frontier_phi_78_pred_4 = _3653 * _3437.x;
                                frontier_phi_78_pred_5 = _3579 * _3425.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3661 = frontier_phi_78_pred;
                            _3660 = frontier_phi_78_pred_1;
                            _3659 = frontier_phi_78_pred_2;
                            _3658 = frontier_phi_78_pred_3;
                            _3657 = frontier_phi_78_pred_4;
                            _3662 = frontier_phi_78_pred_5;
                            _3367 = _3660 + _3380;
                            _3368 = _3661 + _3381;
                            _3369 = _3662 + _3382;
                            _3364 = _3657 + _3377;
                            _3365 = _3658 + _3378;
                            _3366 = _3659 + _3379;
                            if (_3384 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3377 = _3364;
                                _3378 = _3365;
                                _3379 = _3366;
                                _3380 = _3367;
                                _3381 = _3368;
                                _3382 = _3369;
                                _3383 = _3384;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3369;
                        frontier_phi_72_pred_1 = _3368;
                        frontier_phi_72_pred_2 = _3367;
                        frontier_phi_72_pred_3 = _3366;
                        frontier_phi_72_pred_4 = _3365;
                        frontier_phi_72_pred_5 = _3364;
                    }
                    _3037 = frontier_phi_72_pred;
                    _3035 = frontier_phi_72_pred_1;
                    _3033 = frontier_phi_72_pred_2;
                    _3031 = frontier_phi_72_pred_3;
                    _3029 = frontier_phi_72_pred_4;
                    _3027 = frontier_phi_72_pred_5;
                    uint _3172 = _3171 + 1u;
                    if (_3172 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3165 = _3027;
                        _3166 = _3029;
                        _3167 = _3031;
                        _3168 = _3033;
                        _3169 = _3035;
                        _3170 = _3037;
                        _3171 = _3172;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3037;
                frontier_phi_60_61_ladder_1 = _3035;
                frontier_phi_60_61_ladder_2 = _3031;
                frontier_phi_60_61_ladder_3 = _3029;
                frontier_phi_60_61_ladder_4 = _3027;
                frontier_phi_60_61_ladder_5 = _3033;
            }
            else
            {
                frontier_phi_60_61_ladder = _2924;
                frontier_phi_60_61_ladder_1 = _2922;
                frontier_phi_60_61_ladder_2 = _2918;
                frontier_phi_60_61_ladder_3 = _2916;
                frontier_phi_60_61_ladder_4 = _2914;
                frontier_phi_60_61_ladder_5 = _2920;
            }
            _3026 = frontier_phi_60_61_ladder_4;
            _3028 = frontier_phi_60_61_ladder_3;
            _3030 = frontier_phi_60_61_ladder_2;
            _3032 = frontier_phi_60_61_ladder_5;
            _3034 = frontier_phi_60_61_ladder_1;
            _3036 = frontier_phi_60_61_ladder;
        }
        float _3041 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
        _2847 = (_3041 * _3032) + _2378;
        _2849 = (_3041 * _3034) + _2380;
        _2851 = (_3041 * _3036) + _2382;
        _2853 = ((_3026 * 0.039999999105930328369140625) * _3041) + _2701;
        _2855 = ((_3028 * 0.039999999105930328369140625) * _3041) + _2703;
        _2857 = ((_3030 * 0.039999999105930328369140625) * _3041) + _2705;
    }
    else
    {
        _2847 = _2378;
        _2849 = _2380;
        _2851 = _2382;
        _2853 = _2701;
        _2855 = _2703;
        _2857 = _2705;
    }
    float _4825 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _4836 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4847 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    uint _2877 = _267 + 6u;
    float _2885 = _773 / cbSceneParam._m0[86u].x;
    float _2886 = _774 / cbSceneParam._m0[86u].y;
    vec4 _2900 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2885, _2886, (log2((isnan(cbSceneParam._m0[77u].w) ? _708 : (isnan(_708) ? cbSceneParam._m0[77u].w : min(_708, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2902 = _2900.x;
    float _2903 = _2900.y;
    float _2904 = _2900.z;
    float _2905 = _2900.w;
    float _2976;
    float _2978;
    float _2980;
    float _2982;
    if (_708 > cbSceneParam._m0[78u].w)
    {
        float _2939 = isnan(_708) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _708 : min(cbSceneParam._m0[80u].w, _708));
        float _2940 = _2939 / _708;
        float _2951 = _2940 * _758;
        float _2952 = _759 * _2940;
        float _2953 = (-0.0) - _2952;
        float _2954 = _2940 * _760;
        float _2956 = (cbSceneParam._m0[77u].w * _2953) / _2939;
        float _2957 = _2956 + cbSceneParam._m0[79u].w;
        float _2958 = cbSceneParam._m0[79u].w - _2952;
        float _2964 = sqrt(((_2951 * _2951) + (_2952 * _2952)) + (_2954 * _2954));
        float _2967 = (1.0 - (cbSceneParam._m0[77u].w / _2939)) * _2964;
        float _2972 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2974 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3127;
        if (abs((_2953 - _2956) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3127 = ((((_2957 > 0.0) ? exp2(_2972 * _2957) : (2.0 - exp2(_2974 * _2957))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2967;
        }
        else
        {
            float _3087 = 1.0 / cbSceneParam._m0[80u].x;
            float _3088 = isnan(_2958) ? _2957 : (isnan(_2957) ? _2958 : max(_2957, _2958));
            float _3089 = isnan(_2958) ? _2957 : (isnan(_2957) ? _2958 : min(_2957, _2958));
            float _3098 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : min(_3088, 0.0));
            float _3099 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : min(_3089, 0.0));
            _3127 = ((abs(_2964 / _2953) * cbSceneParam._m0[80u].y) * ((((_3098 - _3099) * 2.0) - ((exp2(_2972 * (isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0)))) - exp2(_2972 * (isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0))))) * _3087)) - ((exp2(_2974 * _3098) - exp2(_2974 * _3099)) * _3087))) + (_2967 * cbSceneParam._m0[80u].z);
        }
        vec4 _3129 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2885, _2886, 1.0), 0.0);
        float _3138 = exp2((_3127 * (-1.44269502162933349609375)) * (1.0 - _3129.w));
        float _3139 = log2(_3138);
        float _3155 = log2(_2905);
        _2976 = (exp2(_3155 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3139 * cbSceneParam._m0[78u].x)) * _3129.x) / cbSceneParam._m0[78u].x)) + _2902;
        _2978 = (exp2(_3155 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3139 * cbSceneParam._m0[78u].y)) * _3129.y) / cbSceneParam._m0[78u].y)) + _2903;
        _2980 = (exp2(_3155 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3139 * cbSceneParam._m0[78u].z)) * _3129.z) / cbSceneParam._m0[78u].z)) + _2904;
        _2982 = _3138 * _2905;
    }
    else
    {
        _2976 = _2902;
        _2978 = _2903;
        _2980 = _2904;
        _2982 = _2905;
    }
    float _2994 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2995 = _2994 == 3.0;
    float _2996 = log2(_2982);
    float _3003 = exp2(_2996 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2847 + ((isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0))) * _839))) + ((_2853 + ((isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0))) * _1644)) * cbPerFrame._m0[3u].x));
    float _3004 = exp2(_2996 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2849 + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _839))) + ((_2855 + ((isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))) * _1644)) * cbPerFrame._m0[3u].x));
    float _3005 = exp2(_2996 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2851 + ((isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))) * _839))) + ((_2857 + ((isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))) * _1644)) * cbPerFrame._m0[3u].x));
    float _3014 = (_2994 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3014 * (_2995 ? _3003 : (_3003 + (cbSceneParam._m0[72u].w * _2976)));
    SV_Target.y = _3014 * (_2995 ? _3004 : (_3004 + (cbSceneParam._m0[72u].w * _2978)));
    SV_Target.z = _3014 * (_2995 ? _3005 : (_3005 + (cbSceneParam._m0[72u].w * _2980)));
    SV_Target.w = cbInstanceData._m0[_2877].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2877].w;
}


