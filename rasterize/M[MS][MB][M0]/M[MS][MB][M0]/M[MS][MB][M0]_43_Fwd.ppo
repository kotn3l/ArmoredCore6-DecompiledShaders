#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1178;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _252 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _254 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _255 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3484 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    float _3495 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _3506 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    uint _265 = uint(roundEven(NORMAL.w)) * 13u;
    uint _270 = _265 + 1u;
    uint _274 = _265 + 2u;
    float _283 = sqrt(((cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x) + (cbInstanceData._m0[_265].x * cbInstanceData._m0[_265].x)) + (cbInstanceData._m0[_274].x * cbInstanceData._m0[_274].x));
    float _284 = _283 * TEXCOORD.z;
    float _285 = _283 * TEXCOORD.w;
    vec4 _298 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _284) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _285) + cbTextureTilingScale._m0[13u].w));
    vec4 _321 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _326 = _321.x * cbMtdParam._m0[9u].x;
    float _327 = _321.y * cbMtdParam._m0[9u].y;
    float _328 = _321.z * cbMtdParam._m0[9u].z;
    float _332 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _298.x) * _326;
    float _335 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _298.y) * _327;
    float _338 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _298.z) * _328;
    float _345 = ((_326 - _332) * (isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0)))) + _332;
    float _346 = ((_327 - _335) * (isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0)))) + _335;
    float _347 = ((_328 - _338) * (isnan(1.0) ? _3506 : (isnan(_3506) ? 1.0 : min(_3506, 1.0)))) + _338;
    vec4 _366 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _284) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _285) + cbTextureTilingScale._m0[14u].w));
    vec4 _386 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _284) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _285) + cbTextureTilingScale._m0[20u].w));
    vec4 _412 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _416 = _412.z;
    float _420 = (_412.x * 2.0) + (-1.0);
    float _421 = (_412.y * 2.0) + (-1.0);
    float _422 = dot(vec2(_420, _421), vec2(_420, _421));
    float _3517 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _427 = sqrt(1.0 - (isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0))));
    float _432 = _420 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_386.x * 2.0) + (-1.0)));
    float _433 = _421 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_386.y * 2.0) + (-1.0)));
    vec4 _450 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _284) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _285) + cbTextureTilingScale._m0[11u].w));
    float _452 = _450.x;
    float _453 = 1.0 - _452;
    float _462 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _465 = ((isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : min(_462, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _474 = (_465 - ((((((_452 - _453) * cbMtdParam._m0[24u].z) + _453) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _465))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3538 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _475 = isnan(1.0) ? _3538 : (isnan(_3538) ? 1.0 : min(_3538, 1.0));
    float _482 = (_475 * ((_366.x * cbMtdParam._m0[18u].x) - _345)) + _345;
    float _483 = (_475 * ((_366.y * cbMtdParam._m0[18u].y) - _346)) + _346;
    float _484 = (_475 * ((_366.z * cbMtdParam._m0[18u].z) - _347)) + _347;
    vec4 _497 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _284) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _285) + cbTextureTilingScale._m0[19u].w));
    float _499 = _497.x;
    float _500 = 1.0 - _499;
    float _527 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_499 - _500) * cbMtdParam._m0[24u].w) + _500) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3549 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _528 = isnan(1.0) ? _3549 : (isnan(_3549) ? 1.0 : min(_3549, 1.0));
    float _536 = ((((cbMtdParam._m0[10u].x - _482) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _528) + _482;
    float _537 = ((((cbMtdParam._m0[10u].y - _483) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _528) + _483;
    float _538 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _484)) * _528) + _484;
    float _543 = (((_386.z - _416) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _416;
    vec4 _557 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _284) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _285) + cbTextureTilingScale._m0[15u].w));
    float _564 = (_557.x * 2.0) + (-1.0);
    float _565 = (_557.y * 2.0) + (-1.0);
    float _566 = dot(vec2(_564, _565), vec2(_564, _565));
    float _3560 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _574 = (_475 * (_557.z - _543)) + _543;
    float _577 = ((cbMtdParam._m0[23u].y - _574) * _528) + _574;
    vec4 _599 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _284) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _285) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _605 = (_599.x * 2.0) + (-1.0);
    float _606 = (_599.y * 2.0) + (-1.0);
    float _607 = dot(vec2(_605, _606), vec2(_605, _606));
    float _3571 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _624 = (((_564 - _432) + (cbMtdParam._m0[21u].x * _432)) * _475) + _432;
    float _625 = (((_565 - _433) + (cbMtdParam._m0[21u].x * _433)) * _475) + _433;
    float _626 = (_475 * (sqrt(1.0 - (isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0)))) - _427)) + _427;
    float _637 = (((_605 - _624) + (_624 * cbMtdParam._m0[22u].z)) * _528) + _624;
    float _638 = (((_606 - _625) + (_625 * cbMtdParam._m0[22u].z)) * _528) + _625;
    float _639 = ((sqrt(1.0 - (isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0)))) - _626) * _528) + _626;
    float _641 = cbMtdParam._m0[22u].x + _412.w;
    float _644 = fma(_639, _233 * NORMAL.x, fma(_638, _240 * TANGENT.x, (_226 * _218) * _637));
    float _647 = fma(_639, _233 * NORMAL.y, fma(_638, _240 * TANGENT.y, (_226 * _219) * _637));
    float _650 = fma(_639, _233 * NORMAL.z, fma(_638, _240 * TANGENT.z, (_226 * _220) * _637));
    float _654 = inversesqrt(dot(vec3(_644, _647, _650), vec3(_644, _647, _650)));
    float _655 = _654 * _644;
    float _656 = _654 * _647;
    float _657 = _654 * _650;
    float _3582 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _658 = isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0));
    float _3593 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _3604 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _3615 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _3626 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _676 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _716 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _726 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _716);
    float _727 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _716);
    float _728 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _716);
    float _732 = inversesqrt(dot(vec3(_726, _727, _728), vec3(_726, _727, _728)));
    float _733 = _726 * _732;
    float _734 = _727 * _732;
    float _735 = _728 * _732;
    float _741 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _742 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _763 = fma(_657, cbSceneParam._m0[5u].z, fma(_656, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _655));
    float _766 = fma(_657, cbSceneParam._m0[6u].z, fma(_656, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _655));
    float _769 = fma(_657, cbSceneParam._m0[7u].z, fma(_656, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _655));
    uint _783 = (_265 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _789 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0)))) * cbInstanceData._m0[_783].x;
    float _790 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0)))) * cbInstanceData._m0[_783].y;
    float _791 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0)))) * cbInstanceData._m0[_783].z;
    float _3637 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _792 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
    float _3648 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _793 = isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0));
    float _3659 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _794 = isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0));
    vec4 _803 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _741, cbSceneParam._m0[86u].y * _742));
    float _807 = ((isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0))) * TEXCOORD_5.w) * _803.x;
    float _808 = dot(vec3(_655, _656, _657), vec3(_733, _734, _735));
    float _811 = _808 * 2.0;
    float _815 = (_811 * _655) - _733;
    float _816 = (_811 * _656) - _734;
    float _817 = (_811 * _657) - _735;
    float _821 = abs(dot(vec3(_733, _734, _735), vec3(_655, _656, _657)));
    float _3670 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _823 = sqrt(_658);
    float _836 = exp2((_823 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_823 * 3.0));
    float _868 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _872 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _876 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1177;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    float _1192;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _902 = fma(_876, cbModelParam._m0[26u].z, fma(_872, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _868));
        float _906 = fma(_876, cbModelParam._m0[27u].z, fma(_872, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _868));
        float _910 = fma(_876, cbModelParam._m0[28u].z, fma(_872, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _868));
        float _935 = _868 + _655;
        float _936 = _872 + _656;
        float _937 = _876 + _657;
        float _947 = fma(_937, cbModelParam._m0[26u].z, fma(_936, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _935)) - _902;
        float _948 = fma(_937, cbModelParam._m0[27u].z, fma(_936, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _935)) - _906;
        float _949 = fma(_937, cbModelParam._m0[28u].z, fma(_936, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _935)) - _910;
        float _953 = inversesqrt(dot(vec3(_947, _948, _949), vec3(_947, _948, _949)));
        float _966 = ((_953 * _947) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_902 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _967 = ((_953 * _948) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_906 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _968 = ((_953 * _949) / cbModelParam._m0[34u].z) + ((((((_910 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _971 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _978 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _985 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _992 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        float _1005 = exp2((_971.w + (-0.5)) * 20.0) * 2.0;
        float _1006 = _1005 * (_971.x + (-0.5));
        float _1007 = _1005 * (_971.y + (-0.5));
        float _1008 = _1005 * (_971.z + (-0.5));
        float _1015 = exp2((_978.w + (-0.5)) * 20.0) * 2.0;
        float _1016 = _1015 * (_978.x + (-0.5));
        float _1017 = _1015 * (_978.y + (-0.5));
        float _1018 = _1015 * (_978.z + (-0.5));
        float _1025 = exp2((_985.w + (-0.5)) * 20.0) * 2.0;
        float _1026 = _1025 * (_985.x + (-0.5));
        float _1027 = _1025 * (_985.y + (-0.5));
        float _1028 = _1025 * (_985.z + (-0.5));
        float _1035 = exp2((_992.w + (-0.5)) * 20.0) * 2.0;
        float _1036 = _1035 * (_992.x + (-0.5));
        float _1037 = _1035 * (_992.y + (-0.5));
        float _1038 = _1035 * (_992.z + (-0.5));
        float _1039 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1040 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1041 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1042 = _1006 * 0.5;
        float _1043 = _1016 * 0.5;
        float _1044 = _1026 * 0.5;
        float _1045 = dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044));
        float _1050 = (_1045 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1045);
        float _1059 = (dot(vec3(_655, _656, _657), vec3(_1050 * _1042, _1050 * _1043, _1050 * _1044)) + 1.0) * 0.5;
        float _3696 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
        float _1069 = sqrt(((_1043 * _1043) + (_1042 * _1042)) + (_1044 * _1044)) / (_1039 + 9.9999997473787516355514526367188e-06);
        float _3707 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1070 = isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0));
        float _1071 = _1070 * 2.0;
        float _1075 = (1.0 - _1070) / (_1070 + 1.0);
        float _3718 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1076 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
        float _1085 = ((((1.0 - _1076) * (_1071 + 2.0)) * exp2(log2(isnan(1.0) ? _3696 : (isnan(_3696) ? 1.0 : min(_3696, 1.0))) * (_1071 + 1.0))) + _1076) * _1039;
        float _1086 = _1007 * 0.5;
        float _1087 = _1017 * 0.5;
        float _1088 = _1027 * 0.5;
        float _1089 = dot(vec3(_1086, _1087, _1088), vec3(_1086, _1087, _1088));
        float _1094 = (_1089 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1089);
        float _1102 = (dot(vec3(_655, _656, _657), vec3(_1094 * _1086, _1094 * _1087, _1094 * _1088)) + 1.0) * 0.5;
        float _3729 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1111 = sqrt(((_1087 * _1087) + (_1086 * _1086)) + (_1088 * _1088)) / (_1040 + 9.9999997473787516355514526367188e-06);
        float _3740 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0));
        float _1113 = _1112 * 2.0;
        float _1117 = (1.0 - _1112) / (_1112 + 1.0);
        float _3751 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
        float _1127 = ((((1.0 - _1118) * (_1113 + 2.0)) * exp2(log2(isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0))) * (_1113 + 1.0))) + _1118) * _1040;
        float _1128 = _1008 * 0.5;
        float _1129 = _1018 * 0.5;
        float _1130 = _1028 * 0.5;
        float _1131 = dot(vec3(_1128, _1129, _1130), vec3(_1128, _1129, _1130));
        float _1136 = (_1131 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1131);
        float _1144 = (dot(vec3(_655, _656, _657), vec3(_1136 * _1128, _1136 * _1129, _1136 * _1130)) + 1.0) * 0.5;
        float _3762 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1153 = sqrt(((_1129 * _1129) + (_1128 * _1128)) + (_1130 * _1130)) / (_1041 + 9.9999997473787516355514526367188e-06);
        float _3773 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _3784 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0))) * (_1155 + 1.0))) + _1160) * _1041;
        _1177 = _1008;
        _1179 = _1007;
        _1180 = _1006;
        _1181 = _1018;
        _1182 = _1017;
        _1183 = _1016;
        _1184 = _1028;
        _1185 = _1027;
        _1186 = _1026;
        _1187 = _1041;
        _1188 = _1040;
        _1189 = _1039;
        _1190 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0)));
        _1191 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0)));
        _1192 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
    }
    else
    {
        _1177 = _1178;
        _1179 = _1178;
        _1180 = _1178;
        _1181 = _1178;
        _1182 = _1178;
        _1183 = _1178;
        _1184 = _1178;
        _1185 = _1178;
        _1186 = _1178;
        _1187 = _1178;
        _1188 = _1178;
        _1189 = _1178;
        _1190 = 0.0;
        _1191 = 0.0;
        _1192 = 0.0;
    }
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1217 = fma(_876, cbModelParam._m0[30u].z, fma(_872, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _868));
        float _1221 = fma(_876, cbModelParam._m0[31u].z, fma(_872, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _868));
        float _1225 = fma(_876, cbModelParam._m0[32u].z, fma(_872, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _868));
        float _1248 = _868 + _655;
        float _1249 = _872 + _656;
        float _1250 = _876 + _657;
        float _1260 = fma(_1250, cbModelParam._m0[30u].z, fma(_1249, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1248)) - _1217;
        float _1261 = fma(_1250, cbModelParam._m0[31u].z, fma(_1249, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1248)) - _1221;
        float _1262 = fma(_1250, cbModelParam._m0[32u].z, fma(_1249, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1248)) - _1225;
        float _1266 = inversesqrt(dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262)));
        float _1279 = ((_1266 * _1260) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1217 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1280 = ((_1266 * _1261) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1221 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1281 = ((_1266 * _1262) / cbModelParam._m0[35u].z) + ((((((_1225 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1283 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1290 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1297 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        float _1316 = exp2((_1283.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1283.x + (-0.5));
        float _1318 = _1316 * (_1283.y + (-0.5));
        float _1319 = _1316 * (_1283.z + (-0.5));
        float _1326 = exp2((_1290.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1290.x + (-0.5));
        float _1328 = _1326 * (_1290.y + (-0.5));
        float _1329 = _1326 * (_1290.z + (-0.5));
        float _1336 = exp2((_1297.w + (-0.5)) * 20.0) * 2.0;
        float _1337 = _1336 * (_1297.x + (-0.5));
        float _1338 = _1336 * (_1297.y + (-0.5));
        float _1339 = _1336 * (_1297.z + (-0.5));
        float _1346 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1304.x + (-0.5));
        float _1348 = _1346 * (_1304.y + (-0.5));
        float _1349 = _1346 * (_1304.z + (-0.5));
        float _1350 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1352 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1353 = _1317 * 0.5;
        float _1354 = _1327 * 0.5;
        float _1355 = _1337 * 0.5;
        float _1356 = dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355));
        float _1361 = (_1356 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1356);
        float _1369 = (dot(vec3(_655, _656, _657), vec3(_1361 * _1353, _1361 * _1354, _1361 * _1355)) + 1.0) * 0.5;
        float _3825 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1378 = sqrt(((_1354 * _1354) + (_1353 * _1353)) + (_1355 * _1355)) / (_1350 + 9.9999997473787516355514526367188e-06);
        float _3836 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
        float _1380 = _1379 * 2.0;
        float _1384 = (1.0 - _1379) / (_1379 + 1.0);
        float _3847 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1385 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
        float _1394 = ((((1.0 - _1385) * (_1380 + 2.0)) * exp2(log2(isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0))) * (_1380 + 1.0))) + _1385) * _1350;
        float _1395 = _1318 * 0.5;
        float _1396 = _1328 * 0.5;
        float _1397 = _1338 * 0.5;
        float _1398 = dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397));
        float _1403 = (_1398 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1398);
        float _1411 = (dot(vec3(_655, _656, _657), vec3(_1403 * _1395, _1403 * _1396, _1403 * _1397)) + 1.0) * 0.5;
        float _3858 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1420 = sqrt(((_1396 * _1396) + (_1395 * _1395)) + (_1397 * _1397)) / (_1351 + 9.9999997473787516355514526367188e-06);
        float _3869 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
        float _1422 = _1421 * 2.0;
        float _1426 = (1.0 - _1421) / (_1421 + 1.0);
        float _3880 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0));
        float _1436 = ((((1.0 - _1427) * (_1422 + 2.0)) * exp2(log2(isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0))) * (_1422 + 1.0))) + _1427) * _1351;
        float _1437 = _1319 * 0.5;
        float _1438 = _1329 * 0.5;
        float _1439 = _1339 * 0.5;
        float _1440 = dot(vec3(_1437, _1438, _1439), vec3(_1437, _1438, _1439));
        float _1445 = (_1440 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1440);
        float _1453 = (dot(vec3(_655, _656, _657), vec3(_1445 * _1437, _1445 * _1438, _1445 * _1439)) + 1.0) * 0.5;
        float _3891 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1462 = sqrt(((_1438 * _1438) + (_1437 * _1437)) + (_1439 * _1439)) / (_1352 + 9.9999997473787516355514526367188e-06);
        float _3902 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1463 = isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0));
        float _1464 = _1463 * 2.0;
        float _1468 = (1.0 - _1463) / (_1463 + 1.0);
        float _3913 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0));
        float _1478 = ((((1.0 - _1469) * (_1464 + 2.0)) * exp2(log2(isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0))) * (_1464 + 1.0))) + _1469) * _1352;
        _1486 = _1319;
        _1487 = _1318;
        _1488 = _1317;
        _1489 = _1329;
        _1490 = _1328;
        _1491 = _1327;
        _1492 = _1339;
        _1493 = _1338;
        _1494 = _1337;
        _1495 = _1352;
        _1496 = _1351;
        _1497 = _1350;
        _1498 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0)));
        _1499 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0)));
        _1500 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0)));
    }
    else
    {
        _1486 = _1178;
        _1487 = _1178;
        _1488 = _1178;
        _1489 = _1178;
        _1490 = _1178;
        _1491 = _1178;
        _1492 = _1178;
        _1493 = _1178;
        _1494 = _1178;
        _1495 = _1178;
        _1496 = _1178;
        _1497 = _1178;
        _1498 = 0.0;
        _1499 = 0.0;
        _1500 = 0.0;
    }
    float _1510 = (cbModelParam._m0[1u].x * (_1498 - _1190)) + _1190;
    float _1511 = (cbModelParam._m0[1u].x * (_1499 - _1191)) + _1191;
    float _1512 = (cbModelParam._m0[1u].x * (_1500 - _1192)) + _1192;
    float _1533 = fma(_1512, cbSceneParam._m0[89u].z, fma(_1511, cbSceneParam._m0[89u].y, _1510 * cbSceneParam._m0[89u].x));
    float _1536 = fma(_1512, cbSceneParam._m0[90u].z, fma(_1511, cbSceneParam._m0[90u].y, _1510 * cbSceneParam._m0[90u].x));
    float _1539 = fma(_1512, cbSceneParam._m0[91u].z, fma(_1511, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1510));
    float _1554 = _815 * 0.5;
    float _1555 = _816 * 0.5;
    float _1556 = _817 * 0.5;
    float _1557 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1488, _1491, _1494, _1497));
    float _1560 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1487, _1490, _1493, _1496));
    float _1563 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1486, _1489, _1492, _1495));
    float _1597;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1570 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1177, _1181, _1184, _1187));
        float _1574 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1179, _1182, _1185, _1188));
        float _1578 = dot(vec4(_1554, _1555, _1556, 1.0), vec4(_1180, _1183, _1186, _1189));
        float _1585 = dot(vec4(cbModelParam._m0[39u]), vec4(_1554, _1555, _1556, 1.0));
        _1597 = dot(vec3(isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0)), isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)), isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1585) ? 0.0 : (isnan(0.0) ? _1585 : max(0.0, _1585))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1597 = 1.0;
    }
    float _1608;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1599 = dot(vec4(cbModelParam._m0[40u]), vec4(_1554, _1555, _1556, 1.0));
        _1608 = dot(vec3(isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0)), isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0)), isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1599) ? 0.0 : (isnan(0.0) ? _1599 : max(0.0, _1599))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1608 = 1.0;
    }
    float _1612 = (_1608 * cbModelParam._m0[1u].x) + (_1597 * (1.0 - cbModelParam._m0[1u].x));
    float _1622 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _658);
    float _1623 = isnan(_1622) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1622 : min(cbModelParam._m0[25u].z, _1622));
    float _1703;
    float _1705;
    float _1707;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1670 = fma(_876, cbModelParam._m0[13u].z, fma(_872, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _868)) + cbModelParam._m0[13u].w;
        float _1674 = fma(_876, cbModelParam._m0[14u].z, fma(_872, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _868)) + cbModelParam._m0[14u].w;
        float _1678 = fma(_876, cbModelParam._m0[15u].z, fma(_872, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _868)) + cbModelParam._m0[15u].w;
        float _1681 = fma(_817, cbModelParam._m0[13u].z, fma(_816, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _815));
        float _1684 = fma(_817, cbModelParam._m0[14u].z, fma(_816, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _815));
        float _1687 = fma(_817, cbModelParam._m0[15u].z, fma(_816, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _815));
        float _1715;
        if (_1681 > 0.0)
        {
            _1715 = abs((1.0 - _1670) / _1681);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1681 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1670 + 1.0) / _1681);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1715 = frontier_phi_14_12_ladder;
        }
        float _1917;
        if (_1684 > 0.0)
        {
            _1917 = abs((1.0 - _1674) / _1684);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1684 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1674 + 1.0) / _1684);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1917 = frontier_phi_23_19_ladder;
        }
        float _2160;
        if (_1687 > 0.0)
        {
            _2160 = abs((1.0 - _1678) / _1687);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1687 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1678 + 1.0) / _1687);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2160 = frontier_phi_35_30_ladder;
        }
        float _2162 = isnan(_1917) ? _1715 : (isnan(_1715) ? _1917 : min(_1715, _1917));
        float _2163 = isnan(_2160) ? _2162 : (isnan(_2162) ? _2160 : min(_2162, _2160));
        float _2167 = (_2163 * _1681) + _1670;
        float _2168 = (_2163 * _1684) + _1674;
        float _2169 = (_2163 * _1687) + _1678;
        float _2170 = _2163 * 9.9999997473787516355514526367188e-05;
        float _2172 = (-1.0) - _2170;
        float _2174 = _2170 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2169 > _2174) || ((_2169 < _2172) || ((_2168 > _2174) || ((_2168 < _2172) || ((_2167 < _2172) || (_2167 > _2174))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2293 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2169, cbModelParam._m0[9u].z, fma(_2168, cbModelParam._m0[9u].y, _2167 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2169, cbModelParam._m0[10u].z, fma(_2168, cbModelParam._m0[10u].y, _2167 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2169, cbModelParam._m0[11u].z, fma(_2168, cbModelParam._m0[11u].y, _2167 * cbModelParam._m0[11u].x))), _1623);
            frontier_phi_13_35_ladder = _2293.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2293.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2293.x * cbModelParam._m0[1u].y;
        }
        _1703 = frontier_phi_13_35_ladder_2;
        _1705 = frontier_phi_13_35_ladder_1;
        _1707 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1691 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_815, _816, _817), _1623);
        _1703 = _1691.x * cbModelParam._m0[1u].y;
        _1705 = _1691.y * cbModelParam._m0[1u].y;
        _1707 = _1691.z * cbModelParam._m0[1u].y;
    }
    float _1711 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _658);
    float _1712 = isnan(_1711) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1711 : min(cbModelParam._m0[25u].w, _1711));
    float _1801;
    float _1803;
    float _1805;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1765 = fma(_876, cbModelParam._m0[21u].z, fma(_872, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _868)) + cbModelParam._m0[21u].w;
        float _1769 = fma(_876, cbModelParam._m0[22u].z, fma(_872, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _868)) + cbModelParam._m0[22u].w;
        float _1773 = fma(_876, cbModelParam._m0[23u].z, fma(_872, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _868)) + cbModelParam._m0[23u].w;
        float _1776 = fma(_817, cbModelParam._m0[21u].z, fma(_816, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _815));
        float _1779 = fma(_817, cbModelParam._m0[22u].z, fma(_816, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _815));
        float _1782 = fma(_817, cbModelParam._m0[23u].z, fma(_816, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _815));
        float _1922;
        if (_1776 > 0.0)
        {
            _1922 = abs((1.0 - _1765) / _1776);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1765 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1922 = frontier_phi_25_21_ladder;
        }
        float _2187;
        if (_1779 > 0.0)
        {
            _2187 = abs((1.0 - _1769) / _1779);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1769 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2187 = frontier_phi_37_32_ladder;
        }
        float _2392;
        if (_1782 > 0.0)
        {
            _2392 = abs((1.0 - _1773) / _1782);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1782 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1773 + 1.0) / _1782);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2392 = frontier_phi_46_43_ladder;
        }
        float _2394 = isnan(_2187) ? _1922 : (isnan(_1922) ? _2187 : min(_1922, _2187));
        float _2395 = isnan(_2392) ? _2394 : (isnan(_2394) ? _2392 : min(_2394, _2392));
        float _2399 = (_2395 * _1776) + _1765;
        float _2400 = (_2395 * _1779) + _1769;
        float _2401 = (_2395 * _1782) + _1773;
        float _2402 = _2395 * 9.9999997473787516355514526367188e-05;
        float _2403 = (-1.0) - _2402;
        float _2405 = _2402 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2401 > _2405) || ((_2401 < _2403) || ((_2400 > _2405) || ((_2400 < _2403) || ((_2399 < _2403) || (_2399 > _2405))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2600 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2401, cbModelParam._m0[17u].z, fma(_2400, cbModelParam._m0[17u].y, _2399 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2401, cbModelParam._m0[18u].z, fma(_2400, cbModelParam._m0[18u].y, _2399 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2401, cbModelParam._m0[19u].z, fma(_2400, cbModelParam._m0[19u].y, _2399 * cbModelParam._m0[19u].x))), _1712);
            frontier_phi_22_46_ladder = _2600.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2600.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2600.x * cbModelParam._m0[1u].z;
        }
        _1801 = frontier_phi_22_46_ladder_2;
        _1803 = frontier_phi_22_46_ladder_1;
        _1805 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1785 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_815, _816, _817), _1712);
        _1801 = _1785.x * cbModelParam._m0[1u].z;
        _1803 = _1785.y * cbModelParam._m0[1u].z;
        _1805 = _1785.z * cbModelParam._m0[1u].z;
    }
    float _1817 = ((((1.0 - _836) * ((_823 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_836 * _823)) * _807;
    float _1818 = _1817 * ((cbModelParam._m0[1u].w * (_1801 - _1703)) + _1703);
    float _1819 = _1817 * ((cbModelParam._m0[1u].w * (_1803 - _1705)) + _1705);
    float _1820 = _1817 * ((cbModelParam._m0[1u].w * (_1805 - _1707)) + _1707);
    float _1823 = fma(_1820, cbSceneParam._m0[89u].z, fma(_1819, cbSceneParam._m0[89u].y, _1818 * cbSceneParam._m0[89u].x));
    float _1826 = fma(_1820, cbSceneParam._m0[90u].z, fma(_1819, cbSceneParam._m0[90u].y, _1818 * cbSceneParam._m0[90u].x));
    float _1829 = fma(_1820, cbSceneParam._m0[91u].z, fma(_1819, cbSceneParam._m0[91u].y, _1818 * cbSceneParam._m0[91u].x));
    uvec4 _1839 = floatBitsToUint(cbInstanceData._m0[_265 + 5u]);
    uint _1841 = _1839.x * 14u;
    uint _1842 = _1841 + 13u;
    float _1849 = _807 + (-1.0);
    float _1854 = (cbLight._m0[_1842].x * _1849) + 1.0;
    float _1855 = (cbLight._m0[_1842].y * _1849) + 1.0;
    float _1856 = (cbLight._m0[_1842].z * _1849) + 1.0;
    float _1857 = (cbLight._m0[_1842].w * _1849) + 1.0;
    uint _1858 = _1841 + 5u;
    float _1864 = isnan(1.0) ? _1855 : (isnan(_1855) ? 1.0 : min(_1855, 1.0));
    uint _1868 = _1841 + 4u;
    float _1875 = isnan(1.0) ? _1854 : (isnan(_1854) ? 1.0 : min(_1854, 1.0));
    uint _1879 = _1841 | 1u;
    float _1890 = dot(vec3(cbLight._m0[_1841].xyz), vec3(_655, _656, _657));
    float _1893 = dot(vec3(cbLight._m0[_1879].xyz), vec3(_655, _656, _657));
    float _4049 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
    float _4060 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
    float _1898 = (isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0))) * 0.3183098733425140380859375;
    float _1900 = (isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0))) * 0.3183098733425140380859375;
    float _1907 = ((cbLight._m0[_1858].x * _1864) * _1900) + ((cbLight._m0[_1868].x * _1875) * _1898);
    float _1908 = ((_1864 * cbLight._m0[_1858].y) * _1900) + ((_1875 * cbLight._m0[_1868].y) * _1898);
    float _1909 = ((_1864 * cbLight._m0[_1858].z) * _1900) + ((_1875 * cbLight._m0[_1868].z) * _1898);
    uvec4 _1914 = floatBitsToUint(cbLight._m0[_1841 + 12u]);
    bool _1916 = _1914.x == 0u;
    float _1927;
    float _1929;
    float _1931;
    if (_1916)
    {
        _1927 = _1907;
        _1929 = _1908;
        _1931 = _1909;
    }
    else
    {
        uint _1935 = _1841 + 6u;
        float _1951 = (dot(vec3(cbLight._m0[_1841 + 2u].xyz), vec3(_655, _656, _657)) * 0.5) + 0.5;
        float _1952 = _1951 * _1951;
        float _4071 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1953 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
        float _1954 = isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0));
        _1927 = (((cbLight._m0[_1935].x * 0.3183098733425140380859375) * _1953) * _1954) + _1907;
        _1929 = (((cbLight._m0[_1935].y * 0.3183098733425140380859375) * _1953) * _1954) + _1908;
        _1931 = (((cbLight._m0[_1935].z * 0.3183098733425140380859375) * _1953) * _1954) + _1909;
    }
    bool _1934 = _1914.y == 0u;
    float _1972;
    float _1974;
    float _1976;
    if (_1934)
    {
        _1972 = _1927;
        _1974 = _1929;
        _1976 = _1931;
    }
    else
    {
        uint _2131 = _1841 + 7u;
        float _2147 = (dot(vec3(cbLight._m0[_1841 + 3u].xyz), vec3(_655, _656, _657)) * 0.5) + 0.5;
        float _2148 = _2147 * _2147;
        float _4087 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
        float _2149 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _2150 = isnan(1.0) ? _1857 : (isnan(_1857) ? 1.0 : min(_1857, 1.0));
        _1972 = (((cbLight._m0[_2131].x * 0.3183098733425140380859375) * _2149) * _2150) + _1927;
        _1974 = (((cbLight._m0[_2131].y * 0.3183098733425140380859375) * _2149) * _2150) + _1929;
        _1976 = (((cbLight._m0[_2131].z * 0.3183098733425140380859375) * _2149) * _2150) + _1931;
    }
    uint _1979 = _1841 + 8u;
    float _1992 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1841].w)) * _658) * 0.949999988079071044921875);
    float _1993 = _1992 * _1992;
    float _1994 = cbLight._m0[_1841].x + _733;
    float _1995 = cbLight._m0[_1841].y + _734;
    float _1996 = cbLight._m0[_1841].z + _735;
    float _2000 = inversesqrt(dot(vec3(_1994, _1995, _1996), vec3(_1994, _1995, _1996)));
    float _2001 = _2000 * _1994;
    float _2002 = _2000 * _1995;
    float _2003 = _2000 * _1996;
    float _2004 = dot(vec3(_655, _656, _657), vec3(cbLight._m0[_1841].xyz));
    float _4103 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0));
    float _2007 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
    float _4114 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _2008 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
    float _2009 = dot(vec3(_655, _656, _657), vec3(_2001, _2002, _2003));
    float _4125 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
    float _2012 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
    float _2013 = dot(vec3(cbLight._m0[_1841].xyz), vec3(_2001, _2002, _2003));
    float _4136 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
    float _2017 = _1993 * _1993;
    float _2021 = ((_2012 * _2012) * (_2017 + (-1.0))) + 1.0;
    float _2032 = (exp2(log2(1.0 - (isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2033 = 1.0 - _1993;
    float _2044 = (0.5 / (((_2008 * ((_2007 * _2033) + _1993)) + 9.9999999392252902907785028219223e-09) + (((_2008 * _2033) + _1993) * _2007))) * _2007;
    float _4147 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2046 = (isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (_2017 / ((_2021 * _2021) * 3.141590118408203125));
    uint _2057 = _1841 + 9u;
    float _2068 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1879].w)) * _658) * 0.949999988079071044921875);
    float _2069 = _2068 * _2068;
    float _2070 = cbLight._m0[_1879].x + _733;
    float _2071 = cbLight._m0[_1879].y + _734;
    float _2072 = cbLight._m0[_1879].z + _735;
    float _2076 = inversesqrt(dot(vec3(_2070, _2071, _2072), vec3(_2070, _2071, _2072)));
    float _2077 = _2076 * _2070;
    float _2078 = _2076 * _2071;
    float _2079 = _2076 * _2072;
    float _2080 = dot(vec3(_655, _656, _657), vec3(cbLight._m0[_1879].xyz));
    float _4158 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    float _2083 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
    float _2084 = dot(vec3(_655, _656, _657), vec3(_2077, _2078, _2079));
    float _4169 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
    float _2087 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
    float _2088 = dot(vec3(cbLight._m0[_1879].xyz), vec3(_2077, _2078, _2079));
    float _4180 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2092 = _2069 * _2069;
    float _2096 = ((_2087 * _2087) * (_2092 + (-1.0))) + 1.0;
    float _2105 = (exp2(log2(1.0 - (isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2106 = 1.0 - _2069;
    float _2116 = (0.5 / (((_2008 * ((_2083 * _2106) + _2069)) + 9.9999999392252902907785028219223e-09) + (((_2008 * _2106) + _2069) * _2083))) * _2083;
    float _4191 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _2118 = (isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_2092 / ((_2096 * _2096) * 3.141590118408203125));
    float _2128 = (((_2105 * cbLight._m0[_2057].x) * _2118) * _1864) + (((_2032 * cbLight._m0[_1979].x) * _2046) * _1875);
    float _2129 = (((_2105 * cbLight._m0[_2057].y) * _2118) * _1864) + (((_2032 * cbLight._m0[_1979].y) * _2046) * _1875);
    float _2130 = (((_2105 * cbLight._m0[_2057].z) * _2118) * _1864) + (((_2032 * cbLight._m0[_1979].z) * _2046) * _1875);
    float _2192;
    float _2194;
    float _2196;
    if (_1916)
    {
        _2192 = _2128;
        _2194 = _2129;
        _2196 = _2130;
    }
    else
    {
        uint _2198 = _1841 + 2u;
        uint _2202 = _1841 + 10u;
        float _2216 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2198].w)) * _658) * 0.949999988079071044921875);
        float _2217 = _2216 * _2216;
        float _2218 = cbLight._m0[_2198].x + _733;
        float _2219 = cbLight._m0[_2198].y + _734;
        float _2220 = cbLight._m0[_2198].z + _735;
        float _2224 = inversesqrt(dot(vec3(_2218, _2219, _2220), vec3(_2218, _2219, _2220)));
        float _2225 = _2224 * _2218;
        float _2226 = _2224 * _2219;
        float _2227 = _2224 * _2220;
        float _2228 = dot(vec3(_655, _656, _657), vec3(cbLight._m0[_2198].xyz));
        float _4202 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
        float _2231 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _2232 = dot(vec3(_655, _656, _657), vec3(_2225, _2226, _2227));
        float _4213 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
        float _2235 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _2236 = dot(vec3(cbLight._m0[_2198].xyz), vec3(_2225, _2226, _2227));
        float _4224 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
        float _2240 = _2217 * _2217;
        float _2244 = ((_2235 * _2235) * (_2240 + (-1.0))) + 1.0;
        float _2253 = (exp2(log2(1.0 - (isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2254 = 1.0 - _2217;
        float _2264 = (0.5 / (((_2008 * ((_2231 * _2254) + _2217)) + 9.9999999392252902907785028219223e-09) + (((_2008 * _2254) + _2217) * _2231))) * _2231;
        float _4235 = isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0));
        float _2266 = (isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0))) * (_2240 / ((_2244 * _2244) * 3.141590118408203125));
        float _2267 = isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0));
        _2192 = (((_2253 * cbLight._m0[_2202].x) * _2266) * _2267) + _2128;
        _2194 = (((_2253 * cbLight._m0[_2202].y) * _2266) * _2267) + _2129;
        _2196 = (((_2253 * cbLight._m0[_2202].z) * _2266) * _2267) + _2130;
    }
    float _2302;
    float _2304;
    float _2306;
    if (_1934)
    {
        _2302 = _2192;
        _2304 = _2194;
        _2306 = _2196;
    }
    else
    {
        uint _2313 = _1841 + 3u;
        uint _2317 = _1841 + 11u;
        float _2331 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2313].w)) * _658) * 0.949999988079071044921875);
        float _2332 = _2331 * _2331;
        float _2333 = cbLight._m0[_2313].x + _733;
        float _2334 = cbLight._m0[_2313].y + _734;
        float _2335 = cbLight._m0[_2313].z + _735;
        float _2339 = inversesqrt(dot(vec3(_2333, _2334, _2335), vec3(_2333, _2334, _2335)));
        float _2340 = _2339 * _2333;
        float _2341 = _2339 * _2334;
        float _2342 = _2339 * _2335;
        float _2343 = dot(vec3(_655, _656, _657), vec3(cbLight._m0[_2313].xyz));
        float _4251 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
        float _2346 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
        float _2347 = dot(vec3(_655, _656, _657), vec3(_2340, _2341, _2342));
        float _4262 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
        float _2350 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
        float _2351 = dot(vec3(cbLight._m0[_2313].xyz), vec3(_2340, _2341, _2342));
        float _4273 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
        float _2355 = _2332 * _2332;
        float _2359 = ((_2350 * _2350) * (_2355 + (-1.0))) + 1.0;
        float _2368 = (exp2(log2(1.0 - (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2369 = 1.0 - _2332;
        float _2379 = (0.5 / (((_2008 * ((_2346 * _2369) + _2332)) + 9.9999999392252902907785028219223e-09) + (((_2008 * _2369) + _2332) * _2346))) * _2346;
        float _4284 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
        float _2381 = (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0))) * (_2355 / ((_2359 * _2359) * 3.141590118408203125));
        float _2382 = isnan(1.0) ? _1857 : (isnan(_1857) ? 1.0 : min(_1857, 1.0));
        _2302 = (((_2368 * cbLight._m0[_2317].x) * _2381) * _2382) + _2192;
        _2304 = (((_2368 * cbLight._m0[_2317].y) * _2381) * _2382) + _2194;
        _2306 = (((_2368 * cbLight._m0[_2317].z) * _2381) * _2382) + _2196;
    }
    float _2517;
    float _2519;
    float _2521;
    float _2523;
    float _2525;
    float _2527;
    if (_1839.y == 0u)
    {
        float _2457 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2458 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2457;
        float _2459 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2457;
        float _2460 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2457;
        uvec4 _2472 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2473 = _2472.x;
        uint _2484 = uint((float(_2472.y) * floor(float(uint(cbSceneParam._m0[85u].y * _742) / _2473))) + floor(float(uint(cbSceneParam._m0[85u].x * _741) / _2473)));
        float _2494 = (log2(_2460 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2495 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
        uint _2498 = uint(isnan(14.0) ? _2495 : (isnan(_2495) ? 14.0 : min(_2495, 14.0)));
        uvec4 _2503 = texelFetch(g_lightClusterGridBuffer, int(((_2498 << 2u) + (_2484 << 6u)) >> 2u));
        uint _2504 = _2503.x;
        uint _2505 = _2472.z;
        float _2605;
        float _2607;
        float _2609;
        float _2611;
        float _2613;
        float _2615;
        if (((((1u << ((_2505 >> 4u) & 15u)) + 4294967295u) & _2504) == 0u) || ((_2505 & 240u) == 0u))
        {
            _2605 = 0.0;
            _2607 = 0.0;
            _2609 = 0.0;
            _2611 = 0.0;
            _2613 = 0.0;
            _2615 = 0.0;
        }
        else
        {
            float _2606;
            float _2608;
            float _2610;
            float _2612;
            float _2614;
            float _2616;
            float _2750 = 0.0;
            float _2751 = 0.0;
            float _2752 = 0.0;
            float _2753 = 0.0;
            float _2754 = 0.0;
            float _2755 = 0.0;
            uint _2756 = 0u;
            uint _2765;
            bool _2766;
            for (;;)
            {
                _2765 = texelFetch(g_lightClassification, int((((_2498 << 5u) + (_2484 << 9u)) + (_2756 << 2u)) >> 2u)).x;
                _2766 = _2765 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2766)
                {
                    frontier_phi_61_pred = _2750;
                    frontier_phi_61_pred_1 = _2755;
                    frontier_phi_61_pred_2 = _2754;
                    frontier_phi_61_pred_3 = _2753;
                    frontier_phi_61_pred_4 = _2752;
                    frontier_phi_61_pred_5 = _2751;
                }
                else
                {
                    float _2874;
                    float _2875;
                    float _2876;
                    float _2877;
                    float _2878;
                    float _2879;
                    uint _2880;
                    _2874 = _2750;
                    _2875 = _2751;
                    _2876 = _2752;
                    _2877 = _2753;
                    _2878 = _2754;
                    _2879 = _2755;
                    _2880 = _2765;
                    float _2806;
                    float _2807;
                    float _2808;
                    float _2809;
                    float _2810;
                    float _2811;
                    for (;;)
                    {
                        uint _2884 = uint(findLSB(_2880)) + (_2756 << 5u);
                        uint _2881 = (_2880 + 4294967295u) & _2880;
                        uint _2886 = _2884 * 48u;
                        vec4 _2900 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2886)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 3u)).x));
                        uint _2906 = (_2884 * 48u) + 4u;
                        vec4 _2919 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2906)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 3u)).x));
                        uint _2925 = (_2884 * 48u) + 8u;
                        vec3 _2936 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2925)).x, texelFetch(g_PointLightRenderingBuffer, int(_2925 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2925 + 2u)).x));
                        float _2940 = _2900.x - _2458;
                        float _2941 = _2900.y - _2459;
                        float _2942 = _2900.z - _2460;
                        float _2943 = dot(vec3(_2940, _2941, _2942), vec3(_2940, _2941, _2942));
                        float _2946 = inversesqrt(_2943);
                        float _2947 = _2946 * _2940;
                        float _2948 = _2946 * _2941;
                        float _2949 = _2946 * _2942;
                        float _2950 = dot(vec3(_763, _766, _769), vec3(_2947, _2948, _2949));
                        float _2955 = 1.0 - (_2943 * _2900.w);
                        float _4310 = isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0));
                        float _2956 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
                        float _2957 = sqrt(_2943) * _2919.w;
                        float _2960 = 1.39999997615814208984375 / (_2957 + 1.39999997615814208984375);
                        float _2961 = _2960 * _2960;
                        float _2964 = ((1.0 - _2961) * _2950) + _2961;
                        float _2967 = _2957 * _2957;
                        float _2971 = ((isnan(0.0) ? _2964 : (isnan(_2964) ? 0.0 : max(_2964, 0.0))) * _2956) / ((_2967 * 0.699999988079071044921875) + 1.0);
                        float _2975 = (-0.0) - _2458;
                        float _2976 = (-0.0) - _2459;
                        float _2977 = (-0.0) - _2460;
                        float _2981 = inversesqrt(dot(vec3(_2975, _2976, _2977), vec3(_2975, _2976, _2977)));
                        float _2982 = _2981 * _2975;
                        float _2983 = _2981 * _2976;
                        float _2984 = _2981 * _2977;
                        float _2992 = exp2(log2(1.0 / ((_2967 * 3.5) + 5.0)) * 0.25);
                        float _2993 = 1.0 - _823;
                        float _3000 = sqrt(1.0 - ((1.0 - (_2993 * _2993)) * (1.0 - (_2992 * _2992))));
                        float _3001 = _3000 * _3000;
                        float _3002 = _3001 * _3001;
                        float _3003 = _2982 + _2947;
                        float _3004 = _2983 + _2948;
                        float _3005 = _2984 + _2949;
                        float _3009 = inversesqrt(dot(vec3(_3003, _3004, _3005), vec3(_3003, _3004, _3005)));
                        float _3013 = dot(vec3(_763, _766, _769), vec3(_2982, _2983, _2984));
                        float _4326 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
                        float _3016 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
                        float _3017 = dot(vec3(_763, _766, _769), vec3(_3009 * _3003, _3009 * _3004, _3009 * _3005));
                        float _4337 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
                        float _3020 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
                        float _3024 = ((_3020 * _3020) * (_3002 + (-1.0))) + 1.0;
                        float _3025 = _2960 * _3001;
                        float _3026 = _3025 * _3025;
                        float _3029 = ((1.0 - _3026) * _2950) + _3026;
                        float _4348 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
                        float _3030 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
                        float _3031 = 1.0 - _3001;
                        float _3041 = (0.5 / (((_3030 * ((_3016 * _3031) + _3001)) + 9.9999999392252902907785028219223e-09) + (((_3030 * _3031) + _3001) * _3016))) * _3030;
                        float _4359 = isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : max(_3041, 0.0));
                        float _3052 = (((_3002 * 3.1415927410125732421875) * (isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0)))) / ((_3024 * _3024) * ((_2967 * 2.1991131305694580078125) + 3.141590118408203125))) * _2956;
                        _2809 = (_2971 * _2919.x) + _2877;
                        _2810 = (_2971 * _2919.y) + _2878;
                        _2811 = (_2971 * _2919.z) + _2879;
                        _2806 = (_3052 * _2936.x) + _2874;
                        _2807 = (_3052 * _2936.y) + _2875;
                        _2808 = (_3052 * _2936.z) + _2876;
                        if (_2881 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2874 = _2806;
                            _2875 = _2807;
                            _2876 = _2808;
                            _2877 = _2809;
                            _2878 = _2810;
                            _2879 = _2811;
                            _2880 = _2881;
                        }
                    }
                    frontier_phi_61_pred = _2806;
                    frontier_phi_61_pred_1 = _2811;
                    frontier_phi_61_pred_2 = _2810;
                    frontier_phi_61_pred_3 = _2809;
                    frontier_phi_61_pred_4 = _2808;
                    frontier_phi_61_pred_5 = _2807;
                }
                _2606 = frontier_phi_61_pred;
                _2616 = frontier_phi_61_pred_1;
                _2614 = frontier_phi_61_pred_2;
                _2612 = frontier_phi_61_pred_3;
                _2610 = frontier_phi_61_pred_4;
                _2608 = frontier_phi_61_pred_5;
                uint _2757 = _2756 + 1u;
                if (_2757 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2750 = _2606;
                    _2751 = _2608;
                    _2752 = _2610;
                    _2753 = _2612;
                    _2754 = _2614;
                    _2755 = _2616;
                    _2756 = _2757;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2605 = _2606;
            _2607 = _2608;
            _2609 = _2610;
            _2611 = _2612;
            _2613 = _2614;
            _2615 = _2616;
        }
        uvec4 _2619 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2620 = _2619.z;
        uint _2622 = (_2620 >> 8u) & 15u;
        float _2718;
        float _2720;
        float _2722;
        float _2724;
        float _2726;
        float _2728;
        if (((4294967295u << _2622) & _2504) == 0u)
        {
            _2718 = _2605;
            _2720 = _2607;
            _2722 = _2609;
            _2724 = _2611;
            _2726 = _2613;
            _2728 = _2615;
        }
        else
        {
            float _2743 = inversesqrt(dot(vec3(_2458, _2459, _2460), vec3(_2458, _2459, _2460)));
            float _2744 = _2743 * _2458;
            float _2745 = _2743 * _2459;
            float _2746 = _2743 * _2460;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2622 < ((_2620 >> 12u) & 15u))
            {
                float _2719;
                float _2721;
                float _2723;
                float _2725;
                float _2727;
                float _2729;
                float _2857 = _2605;
                float _2858 = _2607;
                float _2859 = _2609;
                float _2860 = _2611;
                float _2861 = _2613;
                float _2862 = _2615;
                uint _2863 = _2622;
                uint _2872;
                bool _2873;
                for (;;)
                {
                    _2872 = texelFetch(g_lightClassification, int((((_2498 << 5u) + (_2484 << 9u)) + (_2863 << 2u)) >> 2u)).x;
                    _2873 = _2872 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2873)
                    {
                        frontier_phi_67_pred = _2860;
                        frontier_phi_67_pred_1 = _2861;
                        frontier_phi_67_pred_2 = _2862;
                        frontier_phi_67_pred_3 = _2859;
                        frontier_phi_67_pred_4 = _2858;
                        frontier_phi_67_pred_5 = _2857;
                    }
                    else
                    {
                        float _3057;
                        float _3058;
                        float _3059;
                        float _3060;
                        float _3061;
                        float _3062;
                        float _3350;
                        float _3351;
                        float _3352;
                        float _3353;
                        float _3354;
                        float _3355;
                        float _3070 = _2857;
                        float _3071 = _2858;
                        float _3072 = _2859;
                        float _3073 = _2860;
                        float _3074 = _2861;
                        float _3075 = _2862;
                        uint _3076 = _2872;
                        uint _3077;
                        vec4 _3102;
                        float _3103;
                        vec4 _3118;
                        vec3 _3130;
                        vec4 _3145;
                        vec4 _3160;
                        float _3206;
                        bool _3207;
                        for (;;)
                        {
                            uint _3087 = ((_2863 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3076));
                            _3077 = (_3076 + 4294967295u) & _3076;
                            uint _3089 = _3087 * 40u;
                            _3102 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3089)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3089 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3089 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3089 + 3u)).x));
                            _3103 = _3102.w;
                            uint _3105 = (_3087 * 40u) + 4u;
                            _3118 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3105)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 3u)).x));
                            uint _3120 = (_3087 * 40u) + 8u;
                            _3130 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3120)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3120 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3120 + 2u)).x));
                            uint _3132 = (_3087 * 40u) + 16u;
                            _3145 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3132)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3132 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3132 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3132 + 3u)).x));
                            uint _3147 = (_3087 * 40u) + 20u;
                            _3160 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3147)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3147 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3147 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3147 + 3u)).x));
                            uint _3162 = (_3087 * 40u) + 24u;
                            vec4 _3175 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3162)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3162 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3162 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3162 + 3u)).x));
                            uint _3181 = (_3087 * 40u) + 28u;
                            vec4 _3194 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3181)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3181 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3181 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3181 + 3u)).x));
                            _3206 = fma(_2460, _3194.z, fma(_2459, _3194.y, _3194.x * _2458)) + _3194.w;
                            _3207 = !((fma(_2460, _3175.z, fma(_2459, _3175.y, _3175.x * _2458)) + _3175.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3207)
                            {
                                float _3234 = _3102.x - _2458;
                                float _3235 = _3102.y - _2459;
                                float _3236 = _3102.z - _2460;
                                float _3237 = dot(vec3(_3234, _3235, _3236), vec3(_3234, _3235, _3236));
                                float _3240 = inversesqrt(_3237);
                                float _3241 = _3240 * _3234;
                                float _3242 = _3240 * _3235;
                                float _3243 = _3240 * _3236;
                                float _3247 = 1.0 - (_3237 / (_3103 * _3103));
                                float _4370 = isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : max(_3247, 0.0));
                                float _3248 = isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0));
                                float _3252 = sqrt(_3237) * _3118.w;
                                float _3254 = 1.39999997615814208984375 / (_3252 + 1.39999997615814208984375);
                                float _3255 = _3254 * _3254;
                                float _3258 = ((1.0 - _3255) * dot(vec3(_3241, _3242, _3243), vec3(_763, _766, _769))) + _3255;
                                float _3261 = _3252 * _3252;
                                float _3265 = (fma(_2460, _3145.z, fma(_2459, _3145.y, _3145.x * _2458)) + _3145.w) / _3206;
                                float _3266 = (fma(_2460, _3160.z, fma(_2459, _3160.y, _3160.x * _2458)) + _3160.w) / _3206;
                                float _3270 = 1.0 - dot(vec2(_3265, _3266), vec2(_3265, _3266));
                                float _4386 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0));
                                float _3271 = isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0));
                                float _3272 = _3271 * (((isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0))) * _3248) / ((_3261 * 0.699999988079071044921875) + 1.0));
                                float _3284 = exp2(log2(1.0 / ((_3261 * 3.5) + 5.0)) * 0.25);
                                float _3285 = 1.0 - _823;
                                float _3292 = sqrt(1.0 - ((1.0 - (_3285 * _3285)) * (1.0 - (_3284 * _3284))));
                                float _3293 = _3292 * _3292;
                                float _3294 = _3293 * _3293;
                                float _3295 = _3241 - _2744;
                                float _3296 = _3242 - _2745;
                                float _3297 = _3243 - _2746;
                                float _3301 = inversesqrt(dot(vec3(_3295, _3296, _3297), vec3(_3295, _3296, _3297)));
                                float _3305 = dot(vec3(_763, _766, _769), vec3((-0.0) - _2744, (-0.0) - _2745, (-0.0) - _2746));
                                float _4397 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                                float _3308 = isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0));
                                float _3309 = dot(vec3(_763, _766, _769), vec3(_3301 * _3295, _3301 * _3296, _3301 * _3297));
                                float _4408 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                                float _3312 = isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0));
                                float _3316 = ((_3312 * _3312) * (_3294 + (-1.0))) + 1.0;
                                float _3317 = _3254 * _3293;
                                float _3318 = _3317 * _3317;
                                float _3324 = ((1.0 - _3318) * dot(vec3(_763, _766, _769), vec3(_3241, _3242, _3243))) + _3318;
                                float _4419 = isnan(0.0) ? _3324 : (isnan(_3324) ? 0.0 : max(_3324, 0.0));
                                float _3325 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
                                float _3326 = 1.0 - _3293;
                                float _3336 = (0.5 / (((_3325 * ((_3308 * _3326) + _3293)) + 9.9999999392252902907785028219223e-09) + (((_3325 * _3326) + _3293) * _3308))) * _3325;
                                float _4430 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0));
                                float _3346 = (_3271 * _3248) * (((_3294 * 3.1415927410125732421875) * (isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0)))) / ((_3316 * _3316) * ((_3261 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3346 * _3130.x;
                                frontier_phi_73_pred_1 = _3346 * _3130.y;
                                frontier_phi_73_pred_2 = _3272 * _3118.z;
                                frontier_phi_73_pred_3 = _3272 * _3118.y;
                                frontier_phi_73_pred_4 = _3272 * _3118.x;
                                frontier_phi_73_pred_5 = _3346 * _3130.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3350 = frontier_phi_73_pred;
                            _3351 = frontier_phi_73_pred_1;
                            _3355 = frontier_phi_73_pred_2;
                            _3354 = frontier_phi_73_pred_3;
                            _3353 = frontier_phi_73_pred_4;
                            _3352 = frontier_phi_73_pred_5;
                            _3060 = _3353 + _3073;
                            _3061 = _3354 + _3074;
                            _3062 = _3355 + _3075;
                            _3057 = _3350 + _3070;
                            _3058 = _3351 + _3071;
                            _3059 = _3352 + _3072;
                            if (_3077 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3070 = _3057;
                                _3071 = _3058;
                                _3072 = _3059;
                                _3073 = _3060;
                                _3074 = _3061;
                                _3075 = _3062;
                                _3076 = _3077;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3060;
                        frontier_phi_67_pred_1 = _3061;
                        frontier_phi_67_pred_2 = _3062;
                        frontier_phi_67_pred_3 = _3059;
                        frontier_phi_67_pred_4 = _3058;
                        frontier_phi_67_pred_5 = _3057;
                    }
                    _2725 = frontier_phi_67_pred;
                    _2727 = frontier_phi_67_pred_1;
                    _2729 = frontier_phi_67_pred_2;
                    _2723 = frontier_phi_67_pred_3;
                    _2721 = frontier_phi_67_pred_4;
                    _2719 = frontier_phi_67_pred_5;
                    uint _2864 = _2863 + 1u;
                    if (_2864 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2857 = _2719;
                        _2858 = _2721;
                        _2859 = _2723;
                        _2860 = _2725;
                        _2861 = _2727;
                        _2862 = _2729;
                        _2863 = _2864;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2727;
                frontier_phi_55_56_ladder_1 = _2729;
                frontier_phi_55_56_ladder_2 = _2725;
                frontier_phi_55_56_ladder_3 = _2723;
                frontier_phi_55_56_ladder_4 = _2721;
                frontier_phi_55_56_ladder_5 = _2719;
            }
            else
            {
                frontier_phi_55_56_ladder = _2613;
                frontier_phi_55_56_ladder_1 = _2615;
                frontier_phi_55_56_ladder_2 = _2611;
                frontier_phi_55_56_ladder_3 = _2609;
                frontier_phi_55_56_ladder_4 = _2607;
                frontier_phi_55_56_ladder_5 = _2605;
            }
            _2718 = frontier_phi_55_56_ladder_5;
            _2720 = frontier_phi_55_56_ladder_4;
            _2722 = frontier_phi_55_56_ladder_3;
            _2724 = frontier_phi_55_56_ladder_2;
            _2726 = frontier_phi_55_56_ladder;
            _2728 = frontier_phi_55_56_ladder_1;
        }
        float _2733 = isnan(1.0) ? _807 : (isnan(_807) ? 1.0 : min(_807, 1.0));
        _2517 = (_2733 * _2724) + _1972;
        _2519 = (_2733 * _2726) + _1974;
        _2521 = (_2733 * _2728) + _1976;
        _2523 = ((_2718 * 0.039999999105930328369140625) * _2733) + _2302;
        _2525 = ((_2720 * 0.039999999105930328369140625) * _2733) + _2304;
        _2527 = ((_2722 * 0.039999999105930328369140625) * _2733) + _2306;
    }
    else
    {
        _2517 = _1972;
        _2519 = _1974;
        _2521 = _1976;
        _2523 = _2302;
        _2525 = _2304;
        _2527 = _2306;
    }
    float _4446 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _4457 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _4468 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    uint _2547 = _265 + 6u;
    float _2555 = _741 / cbSceneParam._m0[86u].x;
    float _2556 = _742 / cbSceneParam._m0[86u].y;
    vec4 _2570 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2555, _2556, (log2((isnan(cbSceneParam._m0[77u].w) ? _676 : (isnan(_676) ? cbSceneParam._m0[77u].w : min(_676, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2572 = _2570.x;
    float _2573 = _2570.y;
    float _2574 = _2570.z;
    float _2575 = _2570.w;
    float _2668;
    float _2670;
    float _2672;
    float _2674;
    if (_676 > cbSceneParam._m0[78u].w)
    {
        float _2630 = isnan(_676) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _676 : min(cbSceneParam._m0[80u].w, _676));
        float _2631 = _2630 / _676;
        float _2642 = _2631 * _726;
        float _2643 = _727 * _2631;
        float _2644 = (-0.0) - _2643;
        float _2646 = _2631 * _728;
        float _2648 = (cbSceneParam._m0[77u].w * _2644) / _2630;
        float _2649 = _2648 + cbSceneParam._m0[79u].w;
        float _2650 = cbSceneParam._m0[79u].w - _2643;
        float _2656 = sqrt(((_2642 * _2642) + (_2643 * _2643)) + (_2646 * _2646));
        float _2659 = (1.0 - (cbSceneParam._m0[77u].w / _2630)) * _2656;
        float _2664 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2666 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2819;
        if (abs((_2644 - _2648) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2819 = ((((_2649 > 0.0) ? exp2(_2664 * _2649) : (2.0 - exp2(_2666 * _2649))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2659;
        }
        else
        {
            float _2779 = 1.0 / cbSceneParam._m0[80u].x;
            float _2780 = isnan(_2650) ? _2649 : (isnan(_2649) ? _2650 : max(_2649, _2650));
            float _2781 = isnan(_2650) ? _2649 : (isnan(_2649) ? _2650 : min(_2649, _2650));
            float _2790 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : min(_2780, 0.0));
            float _2791 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : min(_2781, 0.0));
            _2819 = ((abs(_2656 / _2644) * cbSceneParam._m0[80u].y) * ((((_2790 - _2791) * 2.0) - ((exp2(_2664 * (isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0)))) - exp2(_2664 * (isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0))))) * _2779)) - ((exp2(_2666 * _2790) - exp2(_2666 * _2791)) * _2779))) + (_2659 * cbSceneParam._m0[80u].z);
        }
        vec4 _2821 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2555, _2556, 1.0), 0.0);
        float _2830 = exp2((_2819 * (-1.44269502162933349609375)) * (1.0 - _2821.w));
        float _2831 = log2(_2830);
        float _2847 = log2(_2575);
        _2668 = (exp2(_2847 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2831 * cbSceneParam._m0[78u].x)) * _2821.x) / cbSceneParam._m0[78u].x)) + _2572;
        _2670 = (exp2(_2847 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2831 * cbSceneParam._m0[78u].y)) * _2821.y) / cbSceneParam._m0[78u].y)) + _2573;
        _2672 = (exp2(_2847 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2831 * cbSceneParam._m0[78u].z)) * _2821.z) / cbSceneParam._m0[78u].z)) + _2574;
        _2674 = _2830 * _2575;
    }
    else
    {
        _2668 = _2572;
        _2670 = _2573;
        _2672 = _2574;
        _2674 = _2575;
    }
    float _2686 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2687 = _2686 == 3.0;
    float _2688 = log2(_2674);
    float _2695 = exp2(_2688 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))) * (_2517 + ((isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0))) * _807))) + ((_2523 + ((isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))) * _1612)) * cbPerFrame._m0[3u].x));
    float _2696 = exp2(_2688 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (_2519 + ((isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0))) * _807))) + ((_2525 + ((isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))) * _1612)) * cbPerFrame._m0[3u].x));
    float _2697 = exp2(_2688 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * (_2521 + ((isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0))) * _807))) + ((_2527 + ((isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))) * _1612)) * cbPerFrame._m0[3u].x));
    float _2706 = (_2686 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2706 * (_2687 ? _2695 : (_2695 + (cbSceneParam._m0[72u].w * _2668)));
    SV_Target.y = _2706 * (_2687 ? _2696 : (_2696 + (cbSceneParam._m0[72u].w * _2670)));
    SV_Target.z = _2706 * (_2687 ? _2697 : (_2697 + (cbSceneParam._m0[72u].w * _2672)));
    SV_Target.w = cbInstanceData._m0[_2547].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2547].w;
}


