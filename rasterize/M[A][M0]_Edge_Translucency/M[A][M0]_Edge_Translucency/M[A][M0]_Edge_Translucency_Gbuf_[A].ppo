#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_Translucency_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_Edge_Translucency_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _120 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _121 = _120 * NORMAL.x;
    float _122 = _120 * NORMAL.y;
    float _123 = _120 * NORMAL.z;
    float _128;
    float _129;
    float _130;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _128 = (-0.0) - _121;
        _129 = (-0.0) - _122;
        _130 = (-0.0) - _123;
    }
    else
    {
        _128 = _121;
        _129 = _122;
        _130 = _123;
    }
    vec4 _150 = texture(sampler2D(M_A_M0_Edge_Translucency_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _156 = _150.w;
    float _157 = _150.x * cbMtdParam._m0[9u].x;
    float _158 = _150.y * cbMtdParam._m0[9u].y;
    float _159 = _150.z * cbMtdParam._m0[9u].z;
    vec4 _171 = texture(sampler2D(M_A_M0_Edge_Translucency_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _178 = cbMtdParam._m0[10u].x * _171.x;
    float _182 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _375 = isnan(0.0) ? _157 : (isnan(_157) ? 0.0 : max(_157, 0.0));
    float _185 = isnan(1.0) ? _375 : (isnan(_375) ? 1.0 : min(_375, 1.0));
    float _386 = isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0));
    float _186 = isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0));
    float _397 = isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0));
    float _187 = isnan(1.0) ? _397 : (isnan(_397) ? 1.0 : min(_397, 1.0));
    uint _189 = uint(roundEven(NORMAL.w));
    vec4 _194 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _196 = _194.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _259 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _408 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
        float _260 = isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0));
        float _264 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _419 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0))) - _260)) + _260) < ((_196 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _293;
    uint _216;
    vec4 _221;
    float _228;
    float _229;
    float _230;
    float _234;
    vec4 _238;
    float _240;
    float _241;
    bool _252;
    for (;;)
    {
        _216 = _189 * 13u;
        _221 = cbInstanceData._m0[(_216 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _225 = (cbMtdParam._m0[0u].x * _185) * _221.x;
        float _226 = (cbMtdParam._m0[0u].y * _186) * _221.y;
        float _227 = (cbMtdParam._m0[0u].z * _187) * _221.z;
        float _430 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
        _228 = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
        float _441 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
        _229 = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
        float _452 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
        _230 = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
        _234 = cbInstanceData._m0[_216 + 6u].w;
        float _235 = _196 + (-0.5);
        _238 = cbMtdParam._m0[1u];
        _240 = _238.y * _235;
        _241 = _235 * 0.999000012874603271484375;
        _252 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_252)
        {
            if ((cbInstanceData._m0[_216 + 7u].x + _241) < 0.5)
            {
                _293 = true;
                break;
            }
        }
        if ((_221.w < 1.0) && ((_221.w + _241) < 0.5))
        {
            _293 = true;
            break;
        }
        if ((_240 + _156) < _238.x)
        {
            _293 = true;
            break;
        }
        _293 = false;
        break;
    }
    if (_293)
    {
        discard_state = true;
    }
    bool _321 = cbMtdParam._m0[1u].z != 0.0;
    float _322 = _321 ? _234 : 0.0;
    SV_Target.x = ((_128 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.y = ((_129 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.z = ((_130 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.w = _322;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = (isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0))) * 0.100000001490116119384765625;
    SV_Target_1.w = _321 ? _234 : TEXCOORD.z;
    SV_Target_2.x = _228;
    SV_Target_2.y = _229;
    SV_Target_2.z = _230;
    SV_Target_2.w = _321 ? _234 : (float(floatBitsToUint(cbInstanceData._m0[_216 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _322;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _322;
    discard_exit();
}


