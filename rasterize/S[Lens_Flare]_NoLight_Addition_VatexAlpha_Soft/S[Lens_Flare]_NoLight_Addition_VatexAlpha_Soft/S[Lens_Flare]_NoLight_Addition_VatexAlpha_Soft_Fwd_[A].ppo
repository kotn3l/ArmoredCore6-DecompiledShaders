#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _722;
float _723;
float _724;
float _725;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _118 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _175 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _165);
    float _176 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _165);
    float _177 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _165);
    vec4 _190 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _193 = _190.x;
    bool _200 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _217 = ((_200 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _193)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _193))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _734 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    vec4 _231 = texture(sampler2D(S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _235 = _231.z;
    float _239 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _243 = dot(vec4(_239 * _175, _239 * _176, _239 * _177, 0.0), vec4(_118 * NORMAL.x, _118 * NORMAL.y, _118 * NORMAL.z, 0.0));
    float _246 = _243 * _243;
    float _249 = (_246 * _246) * (_235 * TEXCOORD_1.z);
    float _254 = isnan(cbMtdParam._m0[10u].z) ? _249 : (isnan(_249) ? cbMtdParam._m0[10u].z : max(_249, cbMtdParam._m0[10u].z));
    float _256 = (isnan(cbMtdParam._m0[10u].y) ? _254 : (isnan(_254) ? cbMtdParam._m0[10u].y : min(_254, cbMtdParam._m0[10u].y))) * (isnan(1.0) ? _734 : (isnan(_734) ? 1.0 : min(_734, 1.0)));
    float _755 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _270 = _200 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _310 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _319 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _310);
    float _320 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _310);
    float _321 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _310);
    vec4 _326 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _328 = _326.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _415 = sqrt(((_319 * _319) + (_320 * _320)) + (_321 * _321));
        float _422 = (cbMatDynParam._m0[5u].x * _415) + cbMatDynParam._m0[5u].y;
        float _766 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
        float _423 = isnan(1.0) ? _766 : (isnan(_766) ? 1.0 : min(_766, 1.0));
        float _427 = (cbMatDynParam._m0[5u].z * _415) + cbMatDynParam._m0[5u].w;
        float _777 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _777 : (isnan(_777) ? 1.0 : min(_777, 1.0))) - _423)) + _423) < ((_328 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _339 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _340 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _345 = uint(roundEven(NORMAL.w)) * 13u;
    uint _347 = _345 + 9u;
    uint _348 = _347 + uint(cbMatDynParam._m0[0u].w);
    float _354 = (cbMtdParam._m0[9u].x * _231.x) * cbInstanceData._m0[_348].x;
    float _355 = (cbMtdParam._m0[9u].y * _231.y) * cbInstanceData._m0[_348].y;
    float _356 = (cbMtdParam._m0[9u].z * _235) * cbInstanceData._m0[_348].z;
    float _357 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _358 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _359 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _365 = cbMtdParam._m0[2u].x * _354;
    float _366 = cbMtdParam._m0[2u].y * _355;
    float _367 = cbMtdParam._m0[2u].z * _356;
    float _803 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _369 = isnan(1.0) ? _803 : (isnan(_803) ? 1.0 : min(_803, 1.0));
    float _374 = cbInstanceData._m0[_345 + 6u].w * (isnan(1.0) ? _755 : (isnan(_755) ? 1.0 : min(_755, 1.0)));
    float _380 = _339 / cbSceneParam._m0[86u].x;
    float _381 = _340 / cbSceneParam._m0[86u].y;
    vec4 _396 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_380, _381, (log2((isnan(cbSceneParam._m0[77u].w) ? _270 : (isnan(_270) ? cbSceneParam._m0[77u].w : min(_270, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _398 = _396.x;
    float _399 = _396.y;
    float _400 = _396.z;
    float _401 = _396.w;
    float _482;
    float _484;
    float _486;
    float _488;
    if (_270 > cbSceneParam._m0[78u].w)
    {
        float _444 = isnan(_270) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _270 : min(cbSceneParam._m0[80u].w, _270));
        float _445 = _444 / _270;
        float _456 = _445 * _319;
        float _457 = _320 * _445;
        float _458 = (-0.0) - _457;
        float _459 = _445 * _321;
        float _461 = (cbSceneParam._m0[77u].w * _458) / _444;
        float _462 = _461 + cbSceneParam._m0[79u].w;
        float _463 = cbSceneParam._m0[79u].w - _457;
        float _469 = sqrt(((_456 * _456) + (_457 * _457)) + (_459 * _459));
        float _472 = (1.0 - (cbSceneParam._m0[77u].w / _444)) * _469;
        float _478 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _480 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _650;
        if (abs((_458 - _461) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _650 = ((((_462 > 0.0) ? exp2(_478 * _462) : (2.0 - exp2(_480 * _462))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _472;
        }
        else
        {
            float _605 = 1.0 / cbSceneParam._m0[80u].x;
            float _606 = isnan(_463) ? _462 : (isnan(_462) ? _463 : max(_462, _463));
            float _607 = isnan(_463) ? _462 : (isnan(_462) ? _463 : min(_462, _463));
            float _616 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : min(_606, 0.0));
            float _617 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : min(_607, 0.0));
            _650 = ((abs(_469 / _458) * cbSceneParam._m0[80u].y) * ((((_616 - _617) * 2.0) - ((exp2(_478 * (isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0)))) - exp2(_478 * (isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0))))) * _605)) - ((exp2(_480 * _616) - exp2(_480 * _617)) * _605))) + (_472 * cbSceneParam._m0[80u].z);
        }
        vec4 _652 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_380, _381, 1.0), 0.0);
        float _661 = exp2((_650 * (-1.44269502162933349609375)) * (1.0 - _652.w));
        float _662 = log2(_661);
        float _678 = log2(_401);
        _482 = (exp2(_678 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].x)) * _652.x) / cbSceneParam._m0[78u].x)) + _398;
        _484 = (exp2(_678 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].y)) * _652.y) / cbSceneParam._m0[78u].y)) + _399;
        _486 = (exp2(_678 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].z)) * _652.z) / cbSceneParam._m0[78u].z)) + _400;
        _488 = _661 * _401;
    }
    else
    {
        _482 = _398;
        _484 = _399;
        _486 = _400;
        _488 = _401;
    }
    bool _688;
    float _546;
    vec4 _550;
    float _552;
    vec4 _554;
    float _563;
    float _564;
    float _565;
    float _569;
    float _573;
    float _577;
    float _578;
    bool _589;
    for (;;)
    {
        bool _501 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _503 = log2(_488);
        float _507 = exp2(_503 * cbSceneParam._m0[78u].x);
        float _508 = exp2(_503 * cbSceneParam._m0[78u].y);
        float _509 = exp2(_503 * cbSceneParam._m0[78u].z);
        float _510 = _507 * _357;
        float _511 = _508 * _358;
        float _512 = _509 * _359;
        vec4 _520 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_339, _340));
        float _522 = _520.x;
        float _543 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _522)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _522))) - _270) * 0.100000001490116119384765625;
        float _854 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
        float _545 = isnan(1.0) ? _854 : (isnan(_854) ? 1.0 : min(_854, 1.0));
        _546 = _374 * _545;
        float _547 = _328 + (-0.5);
        _550 = cbMtdParam._m0[1u];
        _552 = _550.y * _547;
        _554 = cbMatDynParam._m0[0u];
        float _562 = (roundEven(_554.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _563 = _562 * (_501 ? _510 : (_510 + (cbSceneParam._m0[72u].w * _482)));
        _564 = _562 * (_501 ? _511 : (_511 + (cbSceneParam._m0[72u].w * _484)));
        _565 = _562 * (_501 ? _512 : (_512 + (cbSceneParam._m0[72u].w * _486)));
        _569 = (((_365 * _369) * _507) * _545) * _562;
        _573 = (((_366 * _369) * _508) * _545) * _562;
        _577 = (((_367 * _369) * _509) * _545) * _562;
        _578 = _547 * 0.999000012874603271484375;
        _589 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_589)
        {
            if ((cbInstanceData._m0[_345 + 7u].x + _578) < 0.5)
            {
                _688 = true;
                break;
            }
        }
        uint _642 = _347 + uint(_554.w);
        if ((cbInstanceData._m0[_642].w < 1.0) && ((cbInstanceData._m0[_642].w + _578) < 0.5))
        {
            _688 = true;
            break;
        }
        if ((_552 + 1.0) < _550.x)
        {
            _688 = true;
            break;
        }
        _688 = false;
        break;
    }
    float _693;
    if (_688)
    {
        discard_state = true;
        _693 = 0.0;
    }
    else
    {
        _693 = _546;
    }
    SV_Target.x = _563;
    SV_Target.y = _564;
    SV_Target.z = _565;
    SV_Target.w = _693;
    SV_Target_1.x = _569;
    SV_Target_1.y = _573;
    SV_Target_1.z = _577;
    SV_Target_1.w = _546;
    discard_exit();
}


