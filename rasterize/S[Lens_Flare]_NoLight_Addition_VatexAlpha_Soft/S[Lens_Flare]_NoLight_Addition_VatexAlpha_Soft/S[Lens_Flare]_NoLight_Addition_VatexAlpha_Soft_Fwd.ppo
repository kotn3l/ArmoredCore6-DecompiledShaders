#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _109 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _166 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _156);
    float _167 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _156);
    float _168 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _156);
    vec4 _181 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _184 = _181.x;
    bool _191 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _208 = ((_191 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _184)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _184))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _613 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    vec4 _222 = texture(sampler2D(S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _226 = _222.z;
    float _230 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _234 = dot(vec4(_230 * _166, _230 * _167, _230 * _168, 0.0), vec4(_109 * NORMAL.x, _109 * NORMAL.y, _109 * NORMAL.z, 0.0));
    float _237 = _234 * _234;
    float _240 = (_237 * _237) * (_226 * TEXCOORD_1.z);
    float _245 = isnan(cbMtdParam._m0[10u].z) ? _240 : (isnan(_240) ? cbMtdParam._m0[10u].z : max(_240, cbMtdParam._m0[10u].z));
    float _247 = (isnan(cbMtdParam._m0[10u].y) ? _245 : (isnan(_245) ? cbMtdParam._m0[10u].y : min(_245, cbMtdParam._m0[10u].y))) * (isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0)));
    float _634 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _261 = _191 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _277 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _284 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _285 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _290 = uint(roundEven(NORMAL.w)) * 13u;
    uint _293 = (_290 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _299 = (cbMtdParam._m0[9u].x * _222.x) * cbInstanceData._m0[_293].x;
    float _300 = (cbMtdParam._m0[9u].y * _222.y) * cbInstanceData._m0[_293].y;
    float _301 = (cbMtdParam._m0[9u].z * _226) * cbInstanceData._m0[_293].z;
    float _660 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _314 = isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0));
    float _326 = _284 / cbSceneParam._m0[86u].x;
    float _327 = _285 / cbSceneParam._m0[86u].y;
    vec4 _342 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_326, _327, (log2((isnan(cbSceneParam._m0[77u].w) ? _261 : (isnan(_261) ? cbSceneParam._m0[77u].w : min(_261, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _344 = _342.x;
    float _345 = _342.y;
    float _346 = _342.z;
    float _347 = _342.w;
    float _431;
    float _433;
    float _435;
    float _437;
    if (_261 > cbSceneParam._m0[78u].w)
    {
        float _393 = isnan(_261) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _261 : min(cbSceneParam._m0[80u].w, _261));
        float _394 = _393 / _261;
        float _405 = _394 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _277));
        float _406 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _277)) * _394;
        float _407 = (-0.0) - _406;
        float _408 = _394 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _277));
        float _410 = (cbSceneParam._m0[77u].w * _407) / _393;
        float _411 = _410 + cbSceneParam._m0[79u].w;
        float _412 = cbSceneParam._m0[79u].w - _406;
        float _418 = sqrt(((_405 * _405) + (_406 * _406)) + (_408 * _408));
        float _421 = (1.0 - (cbSceneParam._m0[77u].w / _393)) * _418;
        float _427 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _429 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _568;
        if (abs((_407 - _410) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _568 = ((((_411 > 0.0) ? exp2(_427 * _411) : (2.0 - exp2(_429 * _411))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _421;
        }
        else
        {
            float _541 = 1.0 / cbSceneParam._m0[80u].x;
            float _542 = isnan(_412) ? _411 : (isnan(_411) ? _412 : max(_411, _412));
            float _543 = isnan(_412) ? _411 : (isnan(_411) ? _412 : min(_411, _412));
            float _552 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : min(_542, 0.0));
            float _553 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : min(_543, 0.0));
            _568 = ((abs(_418 / _407) * cbSceneParam._m0[80u].y) * ((((_552 - _553) * 2.0) - ((exp2(_427 * (isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0)))) - exp2(_427 * (isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0))))) * _541)) - ((exp2(_429 * _552) - exp2(_429 * _553)) * _541))) + (_421 * cbSceneParam._m0[80u].z);
        }
        vec4 _570 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_326, _327, 1.0), 0.0);
        float _579 = exp2((_568 * (-1.44269502162933349609375)) * (1.0 - _570.w));
        float _580 = log2(_579);
        float _596 = log2(_347);
        _431 = (exp2(_596 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].x)) * _570.x) / cbSceneParam._m0[78u].x)) + _344;
        _433 = (exp2(_596 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].y)) * _570.y) / cbSceneParam._m0[78u].y)) + _345;
        _435 = (exp2(_596 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].z)) * _570.z) / cbSceneParam._m0[78u].z)) + _346;
        _437 = _579 * _347;
    }
    else
    {
        _431 = _344;
        _433 = _345;
        _435 = _346;
        _437 = _347;
    }
    bool _450 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _452 = log2(_437);
    float _456 = exp2(_452 * cbSceneParam._m0[78u].x);
    float _457 = exp2(_452 * cbSceneParam._m0[78u].y);
    float _458 = exp2(_452 * cbSceneParam._m0[78u].z);
    float _459 = _456 * (isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0)));
    float _460 = _457 * (isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0)));
    float _461 = _458 * (isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0)));
    vec4 _469 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_284, _285));
    float _471 = _469.x;
    float _492 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _471)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _471))) - _261) * 0.100000001490116119384765625;
    float _711 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _494 = isnan(1.0) ? _711 : (isnan(_711) ? 1.0 : min(_711, 1.0));
    float _495 = (cbInstanceData._m0[_290 + 6u].w * (isnan(1.0) ? _634 : (isnan(_634) ? 1.0 : min(_634, 1.0)))) * _494;
    float _505 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _505 * (_450 ? _459 : (_459 + (cbSceneParam._m0[72u].w * _431)));
    SV_Target.y = _505 * (_450 ? _460 : (_460 + (cbSceneParam._m0[72u].w * _433)));
    SV_Target.z = _505 * (_450 ? _461 : (_461 + (cbSceneParam._m0[72u].w * _435)));
    SV_Target.w = _495;
    SV_Target_1.x = ((((cbMtdParam._m0[2u].x * _299) * _314) * _456) * _494) * _505;
    SV_Target_1.y = ((((cbMtdParam._m0[2u].y * _300) * _314) * _457) * _494) * _505;
    SV_Target_1.z = ((((cbMtdParam._m0[2u].z * _301) * _314) * _458) * _494) * _505;
    SV_Target_1.w = _495;
}


