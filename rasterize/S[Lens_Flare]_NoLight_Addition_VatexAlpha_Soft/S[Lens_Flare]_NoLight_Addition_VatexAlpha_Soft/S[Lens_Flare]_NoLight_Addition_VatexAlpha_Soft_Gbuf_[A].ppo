#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _129 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _130 = _129 * NORMAL.x;
    float _131 = _129 * NORMAL.y;
    float _132 = _129 * NORMAL.z;
    float _176 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _186 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _176);
    float _187 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _176);
    float _188 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _176);
    vec4 _201 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _204 = _201.x;
    bool _211 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _228 = ((_211 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _204)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _204))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _517 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _248 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _252 = dot(vec4(_248 * _186, _248 * _187, _248 * _188, 0.0), vec4(_130, _131, _132, 0.0));
    float _255 = _252 * _252;
    float _258 = (_255 * _255) * (texture(sampler2D(S_Lens_Flare_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w)).z * TEXCOORD_1.z);
    float _263 = isnan(cbMtdParam._m0[10u].z) ? _258 : (isnan(_258) ? cbMtdParam._m0[10u].z : max(_258, cbMtdParam._m0[10u].z));
    float _265 = (isnan(cbMtdParam._m0[10u].y) ? _263 : (isnan(_263) ? cbMtdParam._m0[10u].y : min(_263, cbMtdParam._m0[10u].y))) * (isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0)));
    float _269 = inversesqrt(dot(vec3(_130, _131, _132), vec3(_130, _131, _132)));
    float _538 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _270 = isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0));
    uint _272 = uint(roundEven(NORMAL.w));
    float _275 = _211 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _315 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _324 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _315);
    float _325 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _315);
    float _326 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _315);
    vec4 _331 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _333 = _331.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _404 = sqrt(((_324 * _324) + (_325 * _325)) + (_326 * _326));
        float _411 = (cbMatDynParam._m0[5u].x * _404) + cbMatDynParam._m0[5u].y;
        float _549 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
        float _412 = isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0));
        float _416 = (cbMatDynParam._m0[5u].z * _404) + cbMatDynParam._m0[5u].w;
        float _560 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0))) - _412)) + _412) < ((_333 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _453;
    uint _346;
    float _380;
    vec4 _384;
    float _386;
    float _387;
    bool _398;
    for (;;)
    {
        _346 = _272 * 13u;
        vec4 _354 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _356 = _354.x;
        float _377 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _356)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _356))) - _275) * 0.100000001490116119384765625;
        float _571 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
        _380 = (cbInstanceData._m0[_346 + 6u].w * _270) * (isnan(1.0) ? _571 : (isnan(_571) ? 1.0 : min(_571, 1.0)));
        float _381 = _333 + (-0.5);
        _384 = cbMtdParam._m0[1u];
        _386 = _384.y * _381;
        _387 = _381 * 0.999000012874603271484375;
        _398 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_398)
        {
            if ((cbInstanceData._m0[_346 + 7u].x + _387) < 0.5)
            {
                _453 = true;
                break;
            }
        }
        uint _442 = (_346 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_442].w < 1.0) && ((cbInstanceData._m0[_442].w + _387) < 0.5))
        {
            _453 = true;
            break;
        }
        if ((_386 + 1.0) < _384.x)
        {
            _453 = true;
            break;
        }
        _453 = false;
        break;
    }
    if (_453)
    {
        discard_state = true;
    }
    bool _471 = cbMtdParam._m0[1u].z != 0.0;
    float _472 = _471 ? _380 : 0.0;
    SV_Target.x = ((_130 * 0.5) * _269) + 0.500488758087158203125;
    SV_Target.y = ((_131 * 0.5) * _269) + 0.500488758087158203125;
    SV_Target.z = ((_132 * 0.5) * _269) + 0.500488758087158203125;
    SV_Target.w = _472;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _471 ? _380 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _380;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _472;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _472;
    discard_exit();
}


