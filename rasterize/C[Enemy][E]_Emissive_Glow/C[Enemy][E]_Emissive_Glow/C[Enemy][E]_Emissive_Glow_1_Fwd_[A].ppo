#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _603;
float _604;
float _605;
float _606;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _135 = texture(sampler2D(C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _153 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _615 = isnan(0.0) ? _153 : (isnan(_153) ? 0.0 : max(_153, 0.0));
    float _155 = isnan(1.0) ? _615 : (isnan(_615) ? 1.0 : min(_615, 1.0));
    float _163 = (((_155 * _155) * (3.0 - (_155 * 2.0))) * cbMtdParam._m0[10u].w) - cbMtdParam._m0[10u].z;
    float _179 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _220 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _230 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _220);
    float _231 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _220);
    float _232 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _220);
    vec4 _237 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _239 = _237.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _334 = sqrt(((_230 * _230) + (_231 * _231)) + (_232 * _232));
        float _341 = (cbMatDynParam._m0[5u].x * _334) + cbMatDynParam._m0[5u].y;
        float _626 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
        float _342 = isnan(1.0) ? _626 : (isnan(_626) ? 1.0 : min(_626, 1.0));
        float _346 = (cbMatDynParam._m0[5u].z * _334) + cbMatDynParam._m0[5u].w;
        float _637 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _637 : (isnan(_637) ? 1.0 : min(_637, 1.0))) - _342)) + _342) < ((_239 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = _257 + 9u;
    uint _259 = _258 + uint(cbMatDynParam._m0[0u].w);
    float _268 = (((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _135.x) * _163) * cbInstanceData._m0[_259].x;
    float _272 = (((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _135.y) * _163) * cbInstanceData._m0[_259].y;
    float _276 = (((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _135.z) * _163) * cbInstanceData._m0[_259].z;
    float _277 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _278 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _279 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _285 = cbMtdParam._m0[2u].x * _268;
    float _286 = cbMtdParam._m0[2u].y * _272;
    float _287 = cbMtdParam._m0[2u].z * _276;
    float _663 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _289 = isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0));
    uint _290 = _257 + 6u;
    float _299 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _300 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _315 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_299, _300, (log2((isnan(cbSceneParam._m0[77u].w) ? _179 : (isnan(_179) ? cbSceneParam._m0[77u].w : min(_179, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _317 = _315.x;
    float _318 = _315.y;
    float _319 = _315.z;
    float _320 = _315.w;
    float _402;
    float _404;
    float _406;
    float _408;
    if (_179 > cbSceneParam._m0[78u].w)
    {
        float _363 = isnan(_179) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _179 : min(cbSceneParam._m0[80u].w, _179));
        float _364 = _363 / _179;
        float _375 = _364 * _230;
        float _376 = _231 * _364;
        float _377 = (-0.0) - _376;
        float _379 = _364 * _232;
        float _381 = (cbSceneParam._m0[77u].w * _377) / _363;
        float _382 = _381 + cbSceneParam._m0[79u].w;
        float _383 = cbSceneParam._m0[79u].w - _376;
        float _389 = sqrt(((_375 * _375) + (_376 * _376)) + (_379 * _379));
        float _392 = (1.0 - (cbSceneParam._m0[77u].w / _363)) * _389;
        float _398 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _400 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _531;
        if (abs((_377 - _381) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _531 = ((((_382 > 0.0) ? exp2(_398 * _382) : (2.0 - exp2(_400 * _382))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _392;
        }
        else
        {
            float _486 = 1.0 / cbSceneParam._m0[80u].x;
            float _487 = isnan(_383) ? _382 : (isnan(_382) ? _383 : max(_382, _383));
            float _488 = isnan(_383) ? _382 : (isnan(_382) ? _383 : min(_382, _383));
            float _497 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : min(_487, 0.0));
            float _498 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : min(_488, 0.0));
            _531 = ((abs(_389 / _377) * cbSceneParam._m0[80u].y) * ((((_497 - _498) * 2.0) - ((exp2(_398 * (isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0)))) - exp2(_398 * (isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0))))) * _486)) - ((exp2(_400 * _497) - exp2(_400 * _498)) * _486))) + (_392 * cbSceneParam._m0[80u].z);
        }
        vec4 _533 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_299, _300, 1.0), 0.0);
        float _542 = exp2((_531 * (-1.44269502162933349609375)) * (1.0 - _533.w));
        float _543 = log2(_542);
        float _559 = log2(_320);
        _402 = (exp2(_559 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].x)) * _533.x) / cbSceneParam._m0[78u].x)) + _317;
        _404 = (exp2(_559 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].y)) * _533.y) / cbSceneParam._m0[78u].y)) + _318;
        _406 = (exp2(_559 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].z)) * _533.z) / cbSceneParam._m0[78u].z)) + _319;
        _408 = _542 * _320;
    }
    else
    {
        _402 = _317;
        _404 = _318;
        _406 = _319;
        _408 = _320;
    }
    bool _569;
    vec4 _418;
    vec4 _441;
    float _443;
    float _447;
    float _448;
    float _449;
    float _452;
    float _455;
    float _458;
    float _459;
    bool _470;
    for (;;)
    {
        _418 = cbMatDynParam._m0[0u];
        float _420 = roundEven(_418.y);
        bool _421 = _420 == 3.0;
        float _422 = log2(_408);
        float _426 = exp2(_422 * cbSceneParam._m0[78u].x);
        float _427 = exp2(_422 * cbSceneParam._m0[78u].y);
        float _428 = exp2(_422 * cbSceneParam._m0[78u].z);
        float _429 = _426 * _277;
        float _430 = _427 * _278;
        float _431 = _428 * _279;
        float _438 = _239 + (-0.5);
        _441 = cbMtdParam._m0[1u];
        _443 = _441.y * _438;
        float _446 = (_420 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _447 = _446 * (_421 ? _429 : (_429 + (cbSceneParam._m0[72u].w * _402)));
        _448 = _446 * (_421 ? _430 : (_430 + (cbSceneParam._m0[72u].w * _404)));
        _449 = _446 * (_421 ? _431 : (_431 + (cbSceneParam._m0[72u].w * _406)));
        _452 = ((_285 * _289) * _426) * _446;
        _455 = ((_286 * _289) * _427) * _446;
        _458 = ((_287 * _289) * _428) * _446;
        _459 = _438 * 0.999000012874603271484375;
        _470 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_470)
        {
            if ((cbInstanceData._m0[_257 + 7u].x + _459) < 0.5)
            {
                _569 = true;
                break;
            }
        }
        uint _523 = _258 + uint(_418.w);
        if ((cbInstanceData._m0[_523].w < 1.0) && ((cbInstanceData._m0[_523].w + _459) < 0.5))
        {
            _569 = true;
            break;
        }
        if ((_443 + 1.0) < _441.x)
        {
            _569 = true;
            break;
        }
        _569 = false;
        break;
    }
    float _574;
    if (_569)
    {
        discard_state = true;
        _574 = 0.0;
    }
    else
    {
        _574 = cbInstanceData._m0[_290].w;
    }
    SV_Target.x = _447;
    SV_Target.y = _448;
    SV_Target.z = _449;
    SV_Target.w = _574;
    SV_Target_1.x = _452;
    SV_Target_1.y = _455;
    SV_Target_1.z = _458;
    SV_Target_1.w = cbInstanceData._m0[_290].w;
    discard_exit();
}


