#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _615;
float _616;
float _617;
float _618;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _150 = texture(sampler2D(C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _165 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _627 = isnan(0.0) ? _165 : (isnan(_165) ? 0.0 : max(_165, 0.0));
    float _167 = isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0));
    float _175 = (((_167 * _167) * (3.0 - (_167 * 2.0))) * cbMtdParam._m0[10u].w) - cbMtdParam._m0[10u].z;
    float _191 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _232 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _242 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _232);
    float _243 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _232);
    float _244 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _232);
    vec4 _249 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _251 = _249.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _346 = sqrt(((_242 * _242) + (_243 * _243)) + (_244 * _244));
        float _353 = (cbMatDynParam._m0[5u].x * _346) + cbMatDynParam._m0[5u].y;
        float _638 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
        float _354 = isnan(1.0) ? _638 : (isnan(_638) ? 1.0 : min(_638, 1.0));
        float _358 = (cbMatDynParam._m0[5u].z * _346) + cbMatDynParam._m0[5u].w;
        float _649 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0))) - _354)) + _354) < ((_251 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _269 = uint(roundEven(NORMAL.w)) * 13u;
    uint _270 = _269 + 9u;
    uint _271 = _270 + uint(cbMatDynParam._m0[0u].w);
    float _280 = (((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _150.x) * _175) * cbInstanceData._m0[_271].x;
    float _284 = (((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _150.y) * _175) * cbInstanceData._m0[_271].y;
    float _288 = (((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _150.z) * _175) * cbInstanceData._m0[_271].z;
    float _289 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _290 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _291 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _297 = cbMtdParam._m0[2u].x * _280;
    float _298 = cbMtdParam._m0[2u].y * _284;
    float _299 = cbMtdParam._m0[2u].z * _288;
    float _675 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _301 = isnan(1.0) ? _675 : (isnan(_675) ? 1.0 : min(_675, 1.0));
    uint _302 = _269 + 6u;
    float _311 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _312 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _327 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_311, _312, (log2((isnan(cbSceneParam._m0[77u].w) ? _191 : (isnan(_191) ? cbSceneParam._m0[77u].w : min(_191, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _329 = _327.x;
    float _330 = _327.y;
    float _331 = _327.z;
    float _332 = _327.w;
    float _414;
    float _416;
    float _418;
    float _420;
    if (_191 > cbSceneParam._m0[78u].w)
    {
        float _375 = isnan(_191) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _191 : min(cbSceneParam._m0[80u].w, _191));
        float _376 = _375 / _191;
        float _387 = _376 * _242;
        float _388 = _243 * _376;
        float _389 = (-0.0) - _388;
        float _391 = _376 * _244;
        float _393 = (cbSceneParam._m0[77u].w * _389) / _375;
        float _394 = _393 + cbSceneParam._m0[79u].w;
        float _395 = cbSceneParam._m0[79u].w - _388;
        float _401 = sqrt(((_387 * _387) + (_388 * _388)) + (_391 * _391));
        float _404 = (1.0 - (cbSceneParam._m0[77u].w / _375)) * _401;
        float _410 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _412 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _543;
        if (abs((_389 - _393) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _543 = ((((_394 > 0.0) ? exp2(_410 * _394) : (2.0 - exp2(_412 * _394))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _404;
        }
        else
        {
            float _498 = 1.0 / cbSceneParam._m0[80u].x;
            float _499 = isnan(_395) ? _394 : (isnan(_394) ? _395 : max(_394, _395));
            float _500 = isnan(_395) ? _394 : (isnan(_394) ? _395 : min(_394, _395));
            float _509 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : min(_499, 0.0));
            float _510 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : min(_500, 0.0));
            _543 = ((abs(_401 / _389) * cbSceneParam._m0[80u].y) * ((((_509 - _510) * 2.0) - ((exp2(_410 * (isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0)))) - exp2(_410 * (isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0))))) * _498)) - ((exp2(_412 * _509) - exp2(_412 * _510)) * _498))) + (_404 * cbSceneParam._m0[80u].z);
        }
        vec4 _545 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_311, _312, 1.0), 0.0);
        float _554 = exp2((_543 * (-1.44269502162933349609375)) * (1.0 - _545.w));
        float _555 = log2(_554);
        float _571 = log2(_332);
        _414 = (exp2(_571 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_555 * cbSceneParam._m0[78u].x)) * _545.x) / cbSceneParam._m0[78u].x)) + _329;
        _416 = (exp2(_571 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_555 * cbSceneParam._m0[78u].y)) * _545.y) / cbSceneParam._m0[78u].y)) + _330;
        _418 = (exp2(_571 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_555 * cbSceneParam._m0[78u].z)) * _545.z) / cbSceneParam._m0[78u].z)) + _331;
        _420 = _554 * _332;
    }
    else
    {
        _414 = _329;
        _416 = _330;
        _418 = _331;
        _420 = _332;
    }
    bool _581;
    vec4 _430;
    vec4 _453;
    float _455;
    float _459;
    float _460;
    float _461;
    float _464;
    float _467;
    float _470;
    float _471;
    bool _482;
    for (;;)
    {
        _430 = cbMatDynParam._m0[0u];
        float _432 = roundEven(_430.y);
        bool _433 = _432 == 3.0;
        float _434 = log2(_420);
        float _438 = exp2(_434 * cbSceneParam._m0[78u].x);
        float _439 = exp2(_434 * cbSceneParam._m0[78u].y);
        float _440 = exp2(_434 * cbSceneParam._m0[78u].z);
        float _441 = _438 * _289;
        float _442 = _439 * _290;
        float _443 = _440 * _291;
        float _450 = _251 + (-0.5);
        _453 = cbMtdParam._m0[1u];
        _455 = _453.y * _450;
        float _458 = (_432 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _459 = _458 * (_433 ? _441 : (_441 + (cbSceneParam._m0[72u].w * _414)));
        _460 = _458 * (_433 ? _442 : (_442 + (cbSceneParam._m0[72u].w * _416)));
        _461 = _458 * (_433 ? _443 : (_443 + (cbSceneParam._m0[72u].w * _418)));
        _464 = ((_297 * _301) * _438) * _458;
        _467 = ((_298 * _301) * _439) * _458;
        _470 = ((_299 * _301) * _440) * _458;
        _471 = _450 * 0.999000012874603271484375;
        _482 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_482)
        {
            if ((cbInstanceData._m0[_269 + 7u].x + _471) < 0.5)
            {
                _581 = true;
                break;
            }
        }
        uint _535 = _270 + uint(_430.w);
        if ((cbInstanceData._m0[_535].w < 1.0) && ((cbInstanceData._m0[_535].w + _471) < 0.5))
        {
            _581 = true;
            break;
        }
        if ((_455 + 1.0) < _453.x)
        {
            _581 = true;
            break;
        }
        _581 = false;
        break;
    }
    float _586;
    if (_581)
    {
        discard_state = true;
        _586 = 0.0;
    }
    else
    {
        _586 = cbInstanceData._m0[_302].w;
    }
    SV_Target.x = _459;
    SV_Target.y = _460;
    SV_Target.z = _461;
    SV_Target.w = _586;
    SV_Target_1.x = _464;
    SV_Target_1.y = _467;
    SV_Target_1.z = _470;
    SV_Target_1.w = cbInstanceData._m0[_302].w;
    discard_exit();
}


