#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _596;
float _597;
float _598;
float _599;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _150 = texture(sampler2D(C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _172 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _213 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _223 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _213);
    float _224 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _213);
    float _225 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _213);
    vec4 _230 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _232 = _230.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _325 = sqrt(((_223 * _223) + (_224 * _224)) + (_225 * _225));
        float _332 = (cbMatDynParam._m0[5u].x * _325) + cbMatDynParam._m0[5u].y;
        float _608 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
        float _333 = isnan(1.0) ? _608 : (isnan(_608) ? 1.0 : min(_608, 1.0));
        float _337 = (cbMatDynParam._m0[5u].z * _325) + cbMatDynParam._m0[5u].w;
        float _619 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _619 : (isnan(_619) ? 1.0 : min(_619, 1.0))) - _333)) + _333) < ((_232 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _250 = uint(roundEven(NORMAL.w)) * 13u;
    uint _251 = _250 + 9u;
    uint _252 = _251 + uint(cbMatDynParam._m0[0u].w);
    float _260 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _150.x) * cbInstanceData._m0[_252].x;
    float _263 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _150.y) * cbInstanceData._m0[_252].y;
    float _266 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _150.z) * cbInstanceData._m0[_252].z;
    float _267 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _268 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _269 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _275 = cbMtdParam._m0[2u].x * _260;
    float _276 = cbMtdParam._m0[2u].y * _263;
    float _277 = cbMtdParam._m0[2u].z * _266;
    float _645 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _280 = isnan(1.0) ? _645 : (isnan(_645) ? 1.0 : min(_645, 1.0));
    uint _281 = _250 + 6u;
    float _290 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _291 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _306 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_290, _291, (log2((isnan(cbSceneParam._m0[77u].w) ? _172 : (isnan(_172) ? cbSceneParam._m0[77u].w : min(_172, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _308 = _306.x;
    float _309 = _306.y;
    float _310 = _306.z;
    float _311 = _306.w;
    float _393;
    float _395;
    float _397;
    float _399;
    if (_172 > cbSceneParam._m0[78u].w)
    {
        float _354 = isnan(_172) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _172 : min(cbSceneParam._m0[80u].w, _172));
        float _355 = _354 / _172;
        float _366 = _355 * _223;
        float _367 = _224 * _355;
        float _368 = (-0.0) - _367;
        float _370 = _355 * _225;
        float _372 = (cbSceneParam._m0[77u].w * _368) / _354;
        float _373 = _372 + cbSceneParam._m0[79u].w;
        float _374 = cbSceneParam._m0[79u].w - _367;
        float _380 = sqrt(((_366 * _366) + (_367 * _367)) + (_370 * _370));
        float _383 = (1.0 - (cbSceneParam._m0[77u].w / _354)) * _380;
        float _389 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _391 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _524;
        if (abs((_368 - _372) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _524 = ((((_373 > 0.0) ? exp2(_389 * _373) : (2.0 - exp2(_391 * _373))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _383;
        }
        else
        {
            float _479 = 1.0 / cbSceneParam._m0[80u].x;
            float _480 = isnan(_374) ? _373 : (isnan(_373) ? _374 : max(_373, _374));
            float _481 = isnan(_374) ? _373 : (isnan(_373) ? _374 : min(_373, _374));
            float _490 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : min(_480, 0.0));
            float _491 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : min(_481, 0.0));
            _524 = ((abs(_380 / _368) * cbSceneParam._m0[80u].y) * ((((_490 - _491) * 2.0) - ((exp2(_389 * (isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0)))) - exp2(_389 * (isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0))))) * _479)) - ((exp2(_391 * _490) - exp2(_391 * _491)) * _479))) + (_383 * cbSceneParam._m0[80u].z);
        }
        vec4 _526 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_290, _291, 1.0), 0.0);
        float _535 = exp2((_524 * (-1.44269502162933349609375)) * (1.0 - _526.w));
        float _536 = log2(_535);
        float _552 = log2(_311);
        _393 = (exp2(_552 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_536 * cbSceneParam._m0[78u].x)) * _526.x) / cbSceneParam._m0[78u].x)) + _308;
        _395 = (exp2(_552 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_536 * cbSceneParam._m0[78u].y)) * _526.y) / cbSceneParam._m0[78u].y)) + _309;
        _397 = (exp2(_552 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_536 * cbSceneParam._m0[78u].z)) * _526.z) / cbSceneParam._m0[78u].z)) + _310;
        _399 = _535 * _311;
    }
    else
    {
        _393 = _308;
        _395 = _309;
        _397 = _310;
        _399 = _311;
    }
    bool _562;
    vec4 _409;
    vec4 _433;
    float _435;
    float _440;
    float _441;
    float _442;
    float _445;
    float _448;
    float _451;
    float _452;
    bool _463;
    for (;;)
    {
        _409 = cbMatDynParam._m0[0u];
        float _411 = roundEven(_409.y);
        bool _412 = _411 == 3.0;
        float _414 = log2(_399);
        float _418 = exp2(_414 * cbSceneParam._m0[78u].x);
        float _419 = exp2(_414 * cbSceneParam._m0[78u].y);
        float _420 = exp2(_414 * cbSceneParam._m0[78u].z);
        float _421 = _418 * _267;
        float _422 = _419 * _268;
        float _423 = _420 * _269;
        float _430 = _232 + (-0.5);
        _433 = cbMtdParam._m0[1u];
        _435 = _433.y * _430;
        float _439 = (_411 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _440 = _439 * (_412 ? _421 : (_421 + (cbSceneParam._m0[72u].w * _393)));
        _441 = _439 * (_412 ? _422 : (_422 + (cbSceneParam._m0[72u].w * _395)));
        _442 = _439 * (_412 ? _423 : (_423 + (cbSceneParam._m0[72u].w * _397)));
        _445 = ((_275 * _280) * _418) * _439;
        _448 = ((_276 * _280) * _419) * _439;
        _451 = ((_277 * _280) * _420) * _439;
        _452 = _430 * 0.999000012874603271484375;
        _463 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_463)
        {
            if ((cbInstanceData._m0[_250 + 7u].x + _452) < 0.5)
            {
                _562 = true;
                break;
            }
        }
        uint _516 = _251 + uint(_409.w);
        if ((cbInstanceData._m0[_516].w < 1.0) && ((cbInstanceData._m0[_516].w + _452) < 0.5))
        {
            _562 = true;
            break;
        }
        if ((_435 + 1.0) < _433.x)
        {
            _562 = true;
            break;
        }
        _562 = false;
        break;
    }
    float _567;
    if (_562)
    {
        discard_state = true;
        _567 = 0.0;
    }
    else
    {
        _567 = cbInstanceData._m0[_281].w;
    }
    SV_Target.x = _440;
    SV_Target.y = _441;
    SV_Target.z = _442;
    SV_Target.w = _567;
    SV_Target_1.x = _445;
    SV_Target_1.y = _448;
    SV_Target_1.z = _451;
    SV_Target_1.w = cbInstanceData._m0[_281].w;
    discard_exit();
}


