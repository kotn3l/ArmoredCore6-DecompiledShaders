#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _99 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _100 = _99 * NORMAL.x;
    float _101 = _99 * NORMAL.y;
    float _102 = _99 * NORMAL.z;
    float _106 = inversesqrt(dot(vec3(_100, _101, _102), vec3(_100, _101, _102)));
    uint _108 = uint(roundEven(NORMAL.w));
    vec4 _114 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _117 = _114.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _155 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _263 = isnan(0.0) ? _155 : (isnan(_155) ? 0.0 : max(_155, 0.0));
        float _157 = isnan(1.0) ? _263 : (isnan(_263) ? 1.0 : min(_263, 1.0));
        float _161 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _274 = isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _274 : (isnan(_274) ? 1.0 : min(_274, 1.0))) - _157)) + _157) < ((_117 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _199;
    uint _126;
    float _130;
    vec4 _134;
    float _136;
    float _137;
    bool _148;
    for (;;)
    {
        _126 = _108 * 13u;
        _130 = cbInstanceData._m0[_126 + 6u].w;
        float _131 = _117 + (-0.5);
        _134 = cbMtdParam._m0[1u];
        _136 = _134.y * _131;
        _137 = _131 * 0.999000012874603271484375;
        _148 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_148)
        {
            if ((cbInstanceData._m0[_126 + 7u].x + _137) < 0.5)
            {
                _199 = true;
                break;
            }
        }
        uint _188 = (_126 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_188].w < 1.0) && ((cbInstanceData._m0[_188].w + _137) < 0.5))
        {
            _199 = true;
            break;
        }
        if ((_136 + 1.0) < _134.x)
        {
            _199 = true;
            break;
        }
        _199 = false;
        break;
    }
    if (_199)
    {
        discard_state = true;
    }
    bool _217 = cbMtdParam._m0[1u].z != 0.0;
    float _218 = _217 ? _130 : 0.0;
    SV_Target.x = ((_100 * 0.5) * _106) + 0.500488758087158203125;
    SV_Target.y = ((_101 * 0.5) * _106) + 0.500488758087158203125;
    SV_Target.z = ((_102 * 0.5) * _106) + 0.500488758087158203125;
    SV_Target.w = _218;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _217 ? _130 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _130;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _218;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _218;
    discard_exit();
}


