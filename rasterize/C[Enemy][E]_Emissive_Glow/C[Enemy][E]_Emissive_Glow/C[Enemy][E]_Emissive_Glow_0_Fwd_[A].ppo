#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _573;
float _574;
float _575;
float _576;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _126 = texture(sampler2D(C_Enemy_E_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _190 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _200 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _190);
    float _201 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _190);
    float _202 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _190);
    vec4 _207 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _209 = _207.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _302 = sqrt(((_200 * _200) + (_201 * _201)) + (_202 * _202));
        float _309 = (cbMatDynParam._m0[5u].x * _302) + cbMatDynParam._m0[5u].y;
        float _585 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
        float _310 = isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0));
        float _314 = (cbMatDynParam._m0[5u].z * _302) + cbMatDynParam._m0[5u].w;
        float _596 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _596 : (isnan(_596) ? 1.0 : min(_596, 1.0))) - _310)) + _310) < ((_209 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _227 = uint(roundEven(NORMAL.w)) * 13u;
    uint _228 = _227 + 9u;
    uint _229 = _228 + uint(cbMatDynParam._m0[0u].w);
    float _237 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _126.x) * cbInstanceData._m0[_229].x;
    float _240 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _126.y) * cbInstanceData._m0[_229].y;
    float _243 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _126.z) * cbInstanceData._m0[_229].z;
    float _244 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _245 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _246 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _252 = cbMtdParam._m0[2u].x * _237;
    float _253 = cbMtdParam._m0[2u].y * _240;
    float _254 = cbMtdParam._m0[2u].z * _243;
    float _622 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _257 = isnan(1.0) ? _622 : (isnan(_622) ? 1.0 : min(_622, 1.0));
    uint _258 = _227 + 6u;
    float _267 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _268 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _283 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_267, _268, (log2((isnan(cbSceneParam._m0[77u].w) ? _148 : (isnan(_148) ? cbSceneParam._m0[77u].w : min(_148, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _285 = _283.x;
    float _286 = _283.y;
    float _287 = _283.z;
    float _288 = _283.w;
    float _370;
    float _372;
    float _374;
    float _376;
    if (_148 > cbSceneParam._m0[78u].w)
    {
        float _331 = isnan(_148) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _148 : min(cbSceneParam._m0[80u].w, _148));
        float _332 = _331 / _148;
        float _343 = _332 * _200;
        float _344 = _201 * _332;
        float _345 = (-0.0) - _344;
        float _347 = _332 * _202;
        float _349 = (cbSceneParam._m0[77u].w * _345) / _331;
        float _350 = _349 + cbSceneParam._m0[79u].w;
        float _351 = cbSceneParam._m0[79u].w - _344;
        float _357 = sqrt(((_343 * _343) + (_344 * _344)) + (_347 * _347));
        float _360 = (1.0 - (cbSceneParam._m0[77u].w / _331)) * _357;
        float _366 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _368 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _501;
        if (abs((_345 - _349) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _501 = ((((_350 > 0.0) ? exp2(_366 * _350) : (2.0 - exp2(_368 * _350))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _360;
        }
        else
        {
            float _456 = 1.0 / cbSceneParam._m0[80u].x;
            float _457 = isnan(_351) ? _350 : (isnan(_350) ? _351 : max(_350, _351));
            float _458 = isnan(_351) ? _350 : (isnan(_350) ? _351 : min(_350, _351));
            float _467 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : min(_457, 0.0));
            float _468 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : min(_458, 0.0));
            _501 = ((abs(_357 / _345) * cbSceneParam._m0[80u].y) * ((((_467 - _468) * 2.0) - ((exp2(_366 * (isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0)))) - exp2(_366 * (isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0))))) * _456)) - ((exp2(_368 * _467) - exp2(_368 * _468)) * _456))) + (_360 * cbSceneParam._m0[80u].z);
        }
        vec4 _503 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_267, _268, 1.0), 0.0);
        float _512 = exp2((_501 * (-1.44269502162933349609375)) * (1.0 - _503.w));
        float _513 = log2(_512);
        float _529 = log2(_288);
        _370 = (exp2(_529 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_513 * cbSceneParam._m0[78u].x)) * _503.x) / cbSceneParam._m0[78u].x)) + _285;
        _372 = (exp2(_529 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_513 * cbSceneParam._m0[78u].y)) * _503.y) / cbSceneParam._m0[78u].y)) + _286;
        _374 = (exp2(_529 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_513 * cbSceneParam._m0[78u].z)) * _503.z) / cbSceneParam._m0[78u].z)) + _287;
        _376 = _512 * _288;
    }
    else
    {
        _370 = _285;
        _372 = _286;
        _374 = _287;
        _376 = _288;
    }
    bool _539;
    vec4 _386;
    vec4 _410;
    float _412;
    float _417;
    float _418;
    float _419;
    float _422;
    float _425;
    float _428;
    float _429;
    bool _440;
    for (;;)
    {
        _386 = cbMatDynParam._m0[0u];
        float _388 = roundEven(_386.y);
        bool _389 = _388 == 3.0;
        float _391 = log2(_376);
        float _395 = exp2(_391 * cbSceneParam._m0[78u].x);
        float _396 = exp2(_391 * cbSceneParam._m0[78u].y);
        float _397 = exp2(_391 * cbSceneParam._m0[78u].z);
        float _398 = _395 * _244;
        float _399 = _396 * _245;
        float _400 = _397 * _246;
        float _407 = _209 + (-0.5);
        _410 = cbMtdParam._m0[1u];
        _412 = _410.y * _407;
        float _416 = (_388 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _417 = _416 * (_389 ? _398 : (_398 + (cbSceneParam._m0[72u].w * _370)));
        _418 = _416 * (_389 ? _399 : (_399 + (cbSceneParam._m0[72u].w * _372)));
        _419 = _416 * (_389 ? _400 : (_400 + (cbSceneParam._m0[72u].w * _374)));
        _422 = ((_252 * _257) * _395) * _416;
        _425 = ((_253 * _257) * _396) * _416;
        _428 = ((_254 * _257) * _397) * _416;
        _429 = _407 * 0.999000012874603271484375;
        _440 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_440)
        {
            if ((cbInstanceData._m0[_227 + 7u].x + _429) < 0.5)
            {
                _539 = true;
                break;
            }
        }
        uint _493 = _228 + uint(_386.w);
        if ((cbInstanceData._m0[_493].w < 1.0) && ((cbInstanceData._m0[_493].w + _429) < 0.5))
        {
            _539 = true;
            break;
        }
        if ((_412 + 1.0) < _410.x)
        {
            _539 = true;
            break;
        }
        _539 = false;
        break;
    }
    float _544;
    if (_539)
    {
        discard_state = true;
        _544 = 0.0;
    }
    else
    {
        _544 = cbInstanceData._m0[_258].w;
    }
    SV_Target.x = _417;
    SV_Target.y = _418;
    SV_Target.z = _419;
    SV_Target.w = _544;
    SV_Target_1.x = _422;
    SV_Target_1.y = _425;
    SV_Target_1.z = _428;
    SV_Target_1.w = cbInstanceData._m0[_258].w;
    discard_exit();
}


