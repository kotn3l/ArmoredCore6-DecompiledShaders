#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 3) uniform texture2D S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _160;
    float _161;
    float _162;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _160 = (-0.0) - _153;
        _161 = (-0.0) - _154;
        _162 = (-0.0) - _155;
    }
    else
    {
        _160 = _153;
        _161 = _154;
        _162 = _155;
    }
    vec4 _176 = texture(sampler2D(S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_1.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1.w) + cbTextureTilingScale._m0[6u].w));
    float _183 = cbMtdParam._m0[16u].y * _176.x;
    float _190 = sin(cbMtdParam._m0[14u].w);
    float _191 = cos(cbMtdParam._m0[14u].w);
    float _192 = TEXCOORD_1.z - cbMtdParam._m0[14u].z;
    float _193 = TEXCOORD_1.w - cbMtdParam._m0[14u].z;
    float _199 = fma(_193, (-0.0) - _190, _191 * _192) + cbMtdParam._m0[14u].z;
    float _200 = fma(_193, _191, _192 * _190) + cbMtdParam._m0[14u].z;
    vec4 _226 = texture(sampler2D(S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[19u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[3u].w));
    float _232 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[15u].z;
    float _239 = ((_226.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].x;
    float _241 = (-0.0) - (cbMtdParam._m0[15u].x * ((_226.x * 0.5) + (-0.25)));
    float _242 = fract(_232);
    float _244 = fract(_232 + 0.5);
    vec4 _273 = texture(sampler2D(S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_242 * _241) + _199) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_239 * _242) + _200) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _275 = _273.x;
    float _285 = (((((texture(sampler2D(S_PC_PAShield_C_NoCamfade_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_244 * _241) + _199) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_239 * _244) + _200) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).x - _275) * abs((_242 * 2.0) + (-1.0))) + _275) * (cbMtdParam._m0[16u].z - _183)) + _183) * TEXCOORD.x;
    float _289 = inversesqrt(dot(vec3(_160, _161, _162), vec3(_160, _161, _162)));
    float _506 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _291 = isnan(1.0) ? _506 : (isnan(_506) ? 1.0 : min(_506, 1.0));
    uint _293 = uint(roundEven(NORMAL.w));
    float _337 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _347 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _337);
    float _348 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _337);
    float _349 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _337);
    vec4 _354 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _356 = _354.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _393 = sqrt(((_347 * _347) + (_348 * _348)) + (_349 * _349));
        float _399 = (cbMatDynParam._m0[5u].x * _393) + cbMatDynParam._m0[5u].y;
        float _517 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
        float _400 = isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0));
        float _404 = (cbMatDynParam._m0[5u].z * _393) + cbMatDynParam._m0[5u].w;
        float _528 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _528 : (isnan(_528) ? 1.0 : min(_528, 1.0))) - _400)) + _400) < ((_356 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _440;
    uint _363;
    float _369;
    vec4 _373;
    float _375;
    float _376;
    bool _387;
    for (;;)
    {
        _363 = _293 * 13u;
        _369 = cbInstanceData._m0[_363 + 6u].w * _291;
        float _370 = _356 + (-0.5);
        _373 = cbMtdParam._m0[1u];
        _375 = _373.y * _370;
        _376 = _370 * 0.999000012874603271484375;
        _387 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_387)
        {
            if ((cbInstanceData._m0[_363 + 7u].x + _376) < 0.5)
            {
                _440 = true;
                break;
            }
        }
        uint _429 = (_363 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_429].w < 1.0) && ((cbInstanceData._m0[_429].w + _376) < 0.5))
        {
            _440 = true;
            break;
        }
        if ((_375 + 1.0) < _373.x)
        {
            _440 = true;
            break;
        }
        _440 = false;
        break;
    }
    if (_440)
    {
        discard_state = true;
    }
    bool _458 = cbMtdParam._m0[1u].z != 0.0;
    float _459 = _458 ? _369 : 0.0;
    SV_Target.x = ((_160 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.y = ((_161 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.z = ((_162 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.w = _459;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _458 ? _369 : TEXCOORD.y;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _369;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _459;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _459;
    discard_exit();
}


