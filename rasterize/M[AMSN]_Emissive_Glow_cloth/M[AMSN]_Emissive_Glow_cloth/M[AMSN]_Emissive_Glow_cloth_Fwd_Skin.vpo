#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _167 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    float _425;
    float _426;
    float _427;
    float _428;
    float _429;
    float _430;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _203 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        precise float _207 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _212 = isnan(_207) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _207 : max(0.001000000047497451305389404296875, _207));
        precise float _214 = BLENDWEIGHT.x / _212;
        precise float _215 = BLENDWEIGHT.y / _212;
        precise float _216 = BLENDWEIGHT.z / _212;
        precise float _217 = BLENDWEIGHT.w / _212;
        uvec4 _224 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_203)).x * 13u) + 4u]);
        uint _225 = _224.x;
        uint _227 = (_225 + uint(float(BLENDINDICES.x))) * 3u;
        uint _234 = _227 + 1u;
        uint _241 = _227 + 2u;
        precise float _248 = _214 * cbObjMatrix._m0[_227].x;
        precise float _249 = _214 * cbObjMatrix._m0[_234].x;
        precise float _250 = _214 * cbObjMatrix._m0[_241].x;
        precise float _251 = _214 * cbObjMatrix._m0[_227].y;
        precise float _252 = _214 * cbObjMatrix._m0[_234].y;
        precise float _253 = _214 * cbObjMatrix._m0[_241].y;
        precise float _254 = _214 * cbObjMatrix._m0[_227].z;
        precise float _255 = _214 * cbObjMatrix._m0[_234].z;
        precise float _256 = _214 * cbObjMatrix._m0[_241].z;
        precise float _257 = _214 * cbObjMatrix._m0[_227].w;
        precise float _258 = _214 * cbObjMatrix._m0[_234].w;
        precise float _259 = _214 * cbObjMatrix._m0[_241].w;
        uint _262 = (_225 + uint(float(BLENDINDICES.y))) * 3u;
        uint _269 = _262 + 1u;
        uint _276 = _262 + 2u;
        precise float _283 = _215 * cbObjMatrix._m0[_262].x;
        precise float _284 = _215 * cbObjMatrix._m0[_269].x;
        precise float _285 = _215 * cbObjMatrix._m0[_276].x;
        precise float _286 = _215 * cbObjMatrix._m0[_262].y;
        precise float _287 = _215 * cbObjMatrix._m0[_269].y;
        precise float _288 = _215 * cbObjMatrix._m0[_276].y;
        precise float _289 = _215 * cbObjMatrix._m0[_262].z;
        precise float _290 = _215 * cbObjMatrix._m0[_269].z;
        precise float _291 = _215 * cbObjMatrix._m0[_276].z;
        precise float _292 = _215 * cbObjMatrix._m0[_262].w;
        precise float _293 = _215 * cbObjMatrix._m0[_269].w;
        precise float _294 = _215 * cbObjMatrix._m0[_276].w;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        precise float _305 = _258 + _293;
        precise float _306 = _259 + _294;
        uint _309 = (_225 + uint(float(BLENDINDICES.z))) * 3u;
        uint _316 = _309 + 1u;
        uint _323 = _309 + 2u;
        precise float _330 = _216 * cbObjMatrix._m0[_309].x;
        precise float _331 = _216 * cbObjMatrix._m0[_316].x;
        precise float _332 = _216 * cbObjMatrix._m0[_323].x;
        precise float _333 = _216 * cbObjMatrix._m0[_309].y;
        precise float _334 = _216 * cbObjMatrix._m0[_316].y;
        precise float _335 = _216 * cbObjMatrix._m0[_323].y;
        precise float _336 = _216 * cbObjMatrix._m0[_309].z;
        precise float _337 = _216 * cbObjMatrix._m0[_316].z;
        precise float _338 = _216 * cbObjMatrix._m0[_323].z;
        precise float _339 = _216 * cbObjMatrix._m0[_309].w;
        precise float _340 = _216 * cbObjMatrix._m0[_316].w;
        precise float _341 = _216 * cbObjMatrix._m0[_323].w;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        uint _356 = (_225 + uint(float(BLENDINDICES.w))) * 3u;
        uint _363 = _356 + 1u;
        uint _370 = _356 + 2u;
        precise float _377 = _217 * cbObjMatrix._m0[_356].x;
        precise float _378 = _217 * cbObjMatrix._m0[_363].x;
        precise float _379 = _217 * cbObjMatrix._m0[_370].x;
        precise float _380 = _217 * cbObjMatrix._m0[_356].y;
        precise float _381 = _217 * cbObjMatrix._m0[_363].y;
        precise float _382 = _217 * cbObjMatrix._m0[_370].y;
        precise float _383 = _217 * cbObjMatrix._m0[_356].z;
        precise float _384 = _217 * cbObjMatrix._m0[_363].z;
        precise float _385 = _217 * cbObjMatrix._m0[_370].z;
        precise float _386 = _217 * cbObjMatrix._m0[_356].w;
        precise float _387 = _217 * cbObjMatrix._m0[_363].w;
        precise float _388 = _217 * cbObjMatrix._m0[_370].w;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        _419 = _389;
        _420 = _392;
        _421 = _395;
        _422 = _398;
        _423 = _390;
        _424 = _393;
        _425 = _396;
        _426 = _399;
        _427 = _391;
        _428 = _394;
        _429 = _397;
        _430 = _400;
    }
    else
    {
        _419 = cbvModelParam._m0[0u].x;
        _420 = cbvModelParam._m0[0u].y;
        _421 = cbvModelParam._m0[0u].z;
        _422 = cbvModelParam._m0[0u].w;
        _423 = cbvModelParam._m0[1u].x;
        _424 = cbvModelParam._m0[1u].y;
        _425 = cbvModelParam._m0[1u].z;
        _426 = cbvModelParam._m0[1u].w;
        _427 = cbvModelParam._m0[2u].x;
        _428 = cbvModelParam._m0[2u].y;
        _429 = cbvModelParam._m0[2u].z;
        _430 = cbvModelParam._m0[2u].w;
    }
    precise float _431 = POSITION.x * _419;
    precise float _432 = POSITION.y * _420;
    precise float _433 = _432 + _431;
    precise float _434 = POSITION.z * _421;
    precise float _435 = _434 + _433;
    precise float _436 = 1.0 * _422;
    precise float _437 = _436 + _435;
    precise float _438 = POSITION.x * _423;
    precise float _439 = POSITION.y * _424;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.z * _425;
    precise float _442 = _441 + _440;
    precise float _443 = 1.0 * _426;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.x * _427;
    precise float _446 = POSITION.y * _428;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.z * _429;
    precise float _449 = _448 + _447;
    precise float _450 = 1.0 * _430;
    precise float _451 = _450 + _449;
    uint _465 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    uvec4 _467 = texelFetch(g_InstanceIndexBuffer, int(_465));
    uint _468 = _467.x;
    precise float _484 = _437 - cbSceneParam._m0[3u].x;
    precise float _485 = _444 - cbSceneParam._m0[3u].y;
    precise float _486 = _451 - cbSceneParam._m0[3u].z;
    precise float _514 = _484 * cbSceneParam._m0[24u].x;
    precise float _515 = _485 * cbSceneParam._m0[24u].y;
    precise float _516 = _515 + _514;
    precise float _517 = _486 * cbSceneParam._m0[24u].z;
    precise float _518 = _517 + _516;
    precise float _519 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _520 = _519 + _518;
    precise float _521 = _484 * cbSceneParam._m0[25u].x;
    precise float _522 = _485 * cbSceneParam._m0[25u].y;
    precise float _523 = _522 + _521;
    precise float _524 = _486 * cbSceneParam._m0[25u].z;
    precise float _525 = _524 + _523;
    precise float _526 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _527 = _526 + _525;
    precise float _528 = _484 * cbSceneParam._m0[26u].x;
    precise float _529 = _485 * cbSceneParam._m0[26u].y;
    precise float _530 = _529 + _528;
    precise float _531 = _486 * cbSceneParam._m0[26u].z;
    precise float _532 = _531 + _530;
    precise float _533 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _534 = _533 + _532;
    precise float _535 = _484 * cbSceneParam._m0[27u].x;
    precise float _536 = _485 * cbSceneParam._m0[27u].y;
    precise float _537 = _536 + _535;
    precise float _538 = _486 * cbSceneParam._m0[27u].z;
    precise float _539 = _538 + _537;
    precise float _540 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _541 = _540 + _539;
    gl_Position.x = _520;
    gl_Position.y = _527;
    gl_Position.z = _534;
    gl_Position.w = _541;
    POSITION_1.x = _520;
    POSITION_1.y = _527;
    POSITION_1.z = _534;
    POSITION_1.w = _541;
    NORMAL_1.x = fma(_170, _421, fma(_169, _420, _419 * _167));
    NORMAL_1.y = fma(_170, _425, fma(_169, _424, _423 * _167));
    NORMAL_1.z = fma(_170, _429, fma(_169, _428, _427 * _167));
    NORMAL_1.w = float(_468);
    TANGENT_1.x = fma(_179, _421, fma(_178, _420, _419 * _177));
    TANGENT_1.y = fma(_179, _425, fma(_178, _424, _423 * _177));
    TANGENT_1.z = fma(_179, _429, fma(_178, _428, _427 * _177));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_520, _527, _534, _541), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_520, _527, _534, _541), vec4(cbInstanceData._m0[(_468 * 13u) + 3u]));
}


