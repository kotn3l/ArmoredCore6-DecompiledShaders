#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_2;
layout(location = 6) out vec2 TEXCOORD_4;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_9;
layout(location = 9) out vec3 TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _224 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _260 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _262 = texelFetch(g_InstanceIndexBuffer, int(_260));
    uint _263 = _262.x;
    precise float _264 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _269 = isnan(_264) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _264 : max(0.001000000047497451305389404296875, _264));
    precise float _271 = BLENDWEIGHT.x / _269;
    precise float _272 = BLENDWEIGHT.y / _269;
    precise float _273 = BLENDWEIGHT.z / _269;
    precise float _274 = BLENDWEIGHT.w / _269;
    uint _276 = _263 * 13u;
    uvec4 _281 = floatBitsToUint(cbInstanceData._m0[_276 + 4u]);
    uint _282 = _281.x;
    uint _284 = (_282 + uint(float(BLENDINDICES.x))) * 3u;
    uint _291 = _284 + 1u;
    uint _298 = _284 + 2u;
    precise float _305 = _271 * cbObjMatrix._m0[_284].x;
    precise float _306 = _271 * cbObjMatrix._m0[_291].x;
    precise float _307 = _271 * cbObjMatrix._m0[_298].x;
    precise float _308 = _271 * cbObjMatrix._m0[_284].y;
    precise float _309 = _271 * cbObjMatrix._m0[_291].y;
    precise float _310 = _271 * cbObjMatrix._m0[_298].y;
    precise float _311 = _271 * cbObjMatrix._m0[_284].z;
    precise float _312 = _271 * cbObjMatrix._m0[_291].z;
    precise float _313 = _271 * cbObjMatrix._m0[_298].z;
    precise float _314 = _271 * cbObjMatrix._m0[_284].w;
    precise float _315 = _271 * cbObjMatrix._m0[_291].w;
    precise float _316 = _271 * cbObjMatrix._m0[_298].w;
    uint _319 = (_282 + uint(float(BLENDINDICES.y))) * 3u;
    uint _326 = _319 + 1u;
    uint _333 = _319 + 2u;
    precise float _340 = _272 * cbObjMatrix._m0[_319].x;
    precise float _341 = _272 * cbObjMatrix._m0[_326].x;
    precise float _342 = _272 * cbObjMatrix._m0[_333].x;
    precise float _343 = _272 * cbObjMatrix._m0[_319].y;
    precise float _344 = _272 * cbObjMatrix._m0[_326].y;
    precise float _345 = _272 * cbObjMatrix._m0[_333].y;
    precise float _346 = _272 * cbObjMatrix._m0[_319].z;
    precise float _347 = _272 * cbObjMatrix._m0[_326].z;
    precise float _348 = _272 * cbObjMatrix._m0[_333].z;
    precise float _349 = _272 * cbObjMatrix._m0[_319].w;
    precise float _350 = _272 * cbObjMatrix._m0[_326].w;
    precise float _351 = _272 * cbObjMatrix._m0[_333].w;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    uint _366 = (_282 + uint(float(BLENDINDICES.z))) * 3u;
    uint _373 = _366 + 1u;
    uint _380 = _366 + 2u;
    precise float _387 = _273 * cbObjMatrix._m0[_366].x;
    precise float _388 = _273 * cbObjMatrix._m0[_373].x;
    precise float _389 = _273 * cbObjMatrix._m0[_380].x;
    precise float _390 = _273 * cbObjMatrix._m0[_366].y;
    precise float _391 = _273 * cbObjMatrix._m0[_373].y;
    precise float _392 = _273 * cbObjMatrix._m0[_380].y;
    precise float _393 = _273 * cbObjMatrix._m0[_366].z;
    precise float _394 = _273 * cbObjMatrix._m0[_373].z;
    precise float _395 = _273 * cbObjMatrix._m0[_380].z;
    precise float _396 = _273 * cbObjMatrix._m0[_366].w;
    precise float _397 = _273 * cbObjMatrix._m0[_373].w;
    precise float _398 = _273 * cbObjMatrix._m0[_380].w;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    uint _413 = (_282 + uint(float(BLENDINDICES.w))) * 3u;
    uint _420 = _413 + 1u;
    uint _427 = _413 + 2u;
    precise float _434 = _274 * cbObjMatrix._m0[_413].x;
    precise float _435 = _274 * cbObjMatrix._m0[_420].x;
    precise float _436 = _274 * cbObjMatrix._m0[_427].x;
    precise float _437 = _274 * cbObjMatrix._m0[_413].y;
    precise float _438 = _274 * cbObjMatrix._m0[_420].y;
    precise float _439 = _274 * cbObjMatrix._m0[_427].y;
    precise float _440 = _274 * cbObjMatrix._m0[_413].z;
    precise float _441 = _274 * cbObjMatrix._m0[_420].z;
    precise float _442 = _274 * cbObjMatrix._m0[_427].z;
    precise float _443 = _274 * cbObjMatrix._m0[_413].w;
    precise float _444 = _274 * cbObjMatrix._m0[_420].w;
    precise float _445 = _274 * cbObjMatrix._m0[_427].w;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = POSITION.x * _446;
    precise float _459 = POSITION.y * _449;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.z * _452;
    precise float _462 = _461 + _460;
    precise float _463 = 1.0 * _455;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.x * _447;
    precise float _466 = POSITION.y * _450;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.z * _453;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * _456;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.x * _448;
    precise float _473 = POSITION.y * _451;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.z * _454;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * _457;
    precise float _478 = _477 + _476;
    float _653 = (((((cbPrevObjMatrix._m0[_319].w * _272) + (cbPrevObjMatrix._m0[_284].w * _271)) + (cbPrevObjMatrix._m0[_366].w * _273)) + (cbPrevObjMatrix._m0[_413].w * _274)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_319].z * _272) + (cbPrevObjMatrix._m0[_284].z * _271)) + (cbPrevObjMatrix._m0[_366].z * _273)) + (cbPrevObjMatrix._m0[_413].z * _274), fma(POSITION.y, (((cbPrevObjMatrix._m0[_319].y * _272) + (cbPrevObjMatrix._m0[_284].y * _271)) + (cbPrevObjMatrix._m0[_366].y * _273)) + (cbPrevObjMatrix._m0[_413].y * _274), ((((cbPrevObjMatrix._m0[_319].x * _272) + (cbPrevObjMatrix._m0[_284].x * _271)) + (cbPrevObjMatrix._m0[_366].x * _273)) + (cbPrevObjMatrix._m0[_413].x * _274)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _654 = (((((cbPrevObjMatrix._m0[_326].w * _272) + (cbPrevObjMatrix._m0[_291].w * _271)) + (cbPrevObjMatrix._m0[_373].w * _273)) + (cbPrevObjMatrix._m0[_420].w * _274)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_326].z * _272) + (cbPrevObjMatrix._m0[_291].z * _271)) + (cbPrevObjMatrix._m0[_373].z * _273)) + (cbPrevObjMatrix._m0[_420].z * _274), fma(POSITION.y, (((cbPrevObjMatrix._m0[_326].y * _272) + (cbPrevObjMatrix._m0[_291].y * _271)) + (cbPrevObjMatrix._m0[_373].y * _273)) + (cbPrevObjMatrix._m0[_420].y * _274), ((((cbPrevObjMatrix._m0[_326].x * _272) + (cbPrevObjMatrix._m0[_291].x * _271)) + (cbPrevObjMatrix._m0[_373].x * _273)) + (cbPrevObjMatrix._m0[_420].x * _274)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _655 = (((((cbPrevObjMatrix._m0[_333].w * _272) + (cbPrevObjMatrix._m0[_298].w * _271)) + (cbPrevObjMatrix._m0[_380].w * _273)) + (cbPrevObjMatrix._m0[_427].w * _274)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_333].z * _272) + (cbPrevObjMatrix._m0[_298].z * _271)) + (cbPrevObjMatrix._m0[_380].z * _273)) + (cbPrevObjMatrix._m0[_427].z * _274), fma(POSITION.y, (((cbPrevObjMatrix._m0[_333].y * _272) + (cbPrevObjMatrix._m0[_298].y * _271)) + (cbPrevObjMatrix._m0[_380].y * _273)) + (cbPrevObjMatrix._m0[_427].y * _274), ((((cbPrevObjMatrix._m0[_333].x * _272) + (cbPrevObjMatrix._m0[_298].x * _271)) + (cbPrevObjMatrix._m0[_380].x * _273)) + (cbPrevObjMatrix._m0[_427].x * _274)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _702 = fma(_227, _452, fma(_226, _449, _446 * _224));
    float _705 = fma(_227, _453, fma(_226, _450, _447 * _224));
    float _708 = fma(_227, _454, fma(_226, _451, _448 * _224));
    precise float _733 = _464 - cbSceneParam._m0[3u].x;
    precise float _734 = _471 - cbSceneParam._m0[3u].y;
    precise float _735 = _478 - cbSceneParam._m0[3u].z;
    precise float _763 = _733 * cbSceneParam._m0[24u].x;
    precise float _764 = _734 * cbSceneParam._m0[24u].y;
    precise float _765 = _764 + _763;
    precise float _766 = _735 * cbSceneParam._m0[24u].z;
    precise float _767 = _766 + _765;
    precise float _768 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _769 = _768 + _767;
    precise float _770 = _733 * cbSceneParam._m0[25u].x;
    precise float _771 = _734 * cbSceneParam._m0[25u].y;
    precise float _772 = _771 + _770;
    precise float _773 = _735 * cbSceneParam._m0[25u].z;
    precise float _774 = _773 + _772;
    precise float _775 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _776 = _775 + _774;
    precise float _777 = _733 * cbSceneParam._m0[26u].x;
    precise float _778 = _734 * cbSceneParam._m0[26u].y;
    precise float _779 = _778 + _777;
    precise float _780 = _735 * cbSceneParam._m0[26u].z;
    precise float _781 = _780 + _779;
    precise float _782 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _783 = _782 + _781;
    precise float _784 = _733 * cbSceneParam._m0[27u].x;
    precise float _785 = _734 * cbSceneParam._m0[27u].y;
    precise float _786 = _785 + _784;
    precise float _787 = _735 * cbSceneParam._m0[27u].z;
    precise float _788 = _787 + _786;
    precise float _789 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _790 = _789 + _788;
    gl_Position.x = _769;
    gl_Position.y = _776;
    gl_Position.z = _783;
    gl_Position.w = _790;
    POSITION_1.x = _769;
    POSITION_1.y = _776;
    POSITION_1.z = _783;
    POSITION_1.w = _790;
    NORMAL_1.x = _702;
    NORMAL_1.y = _705;
    NORMAL_1.z = _708;
    NORMAL_1.w = float(_263);
    TANGENT_1.x = fma(_238, _452, fma(_237, _449, _446 * _236));
    TANGENT_1.y = fma(_238, _453, fma(_237, _450, _447 * _236));
    TANGENT_1.z = fma(_238, _454, fma(_237, _451, _448 * _236));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_250, _452, fma(_249, _449, _446 * _248));
    TANGENT_2_1.y = fma(_250, _453, fma(_249, _450, _447 * _248));
    TANGENT_2_1.z = fma(_250, _454, fma(_249, _451, _448 * _248));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = COLOR_1.x;
    TEXCOORD_4.y = TEXCOORD_1.x;
    TEXCOORD_8.x = _769;
    TEXCOORD_8.y = _776;
    TEXCOORD_8.z = _783;
    TEXCOORD_8.w = _790;
    TEXCOORD_9.x = fma(_655, cbSceneParam._m0[29u].z, fma(_654, cbSceneParam._m0[29u].y, _653 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_9.y = fma(_655, cbSceneParam._m0[30u].z, fma(_654, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _653)) + cbSceneParam._m0[30u].w;
    TEXCOORD_9.z = fma(_655, cbSceneParam._m0[31u].z, fma(_654, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _653)) + cbSceneParam._m0[31u].w;
    TEXCOORD_9.w = fma(_655, cbSceneParam._m0[32u].z, fma(_654, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _653)) + cbSceneParam._m0[32u].w;
    TEXCOORD_10.x = _702;
    TEXCOORD_10.y = _705;
    TEXCOORD_10.z = _708;
    gl_ClipDistance[0u] = dot(vec4(_769, _776, _783, _790), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_769, _776, _783, _790), vec4(cbInstanceData._m0[_276 + 3u]));
}


