#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_2;
layout(location = 6) out vec2 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _205 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _241 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _243 = texelFetch(g_InstanceIndexBuffer, int(_241));
    uint _244 = _243.x;
    precise float _245 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _250 = isnan(_245) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _245 : max(0.001000000047497451305389404296875, _245));
    precise float _252 = BLENDWEIGHT.x / _250;
    precise float _253 = BLENDWEIGHT.y / _250;
    precise float _254 = BLENDWEIGHT.z / _250;
    precise float _255 = BLENDWEIGHT.w / _250;
    uint _257 = _244 * 13u;
    uvec4 _262 = floatBitsToUint(cbInstanceData._m0[_257 + 4u]);
    uint _263 = _262.x;
    uint _265 = (_263 + uint(float(BLENDINDICES.x))) * 3u;
    uint _272 = _265 + 1u;
    uint _279 = _265 + 2u;
    precise float _286 = _252 * cbObjMatrix._m0[_265].x;
    precise float _287 = _252 * cbObjMatrix._m0[_272].x;
    precise float _288 = _252 * cbObjMatrix._m0[_279].x;
    precise float _289 = _252 * cbObjMatrix._m0[_265].y;
    precise float _290 = _252 * cbObjMatrix._m0[_272].y;
    precise float _291 = _252 * cbObjMatrix._m0[_279].y;
    precise float _292 = _252 * cbObjMatrix._m0[_265].z;
    precise float _293 = _252 * cbObjMatrix._m0[_272].z;
    precise float _294 = _252 * cbObjMatrix._m0[_279].z;
    precise float _295 = _252 * cbObjMatrix._m0[_265].w;
    precise float _296 = _252 * cbObjMatrix._m0[_272].w;
    precise float _297 = _252 * cbObjMatrix._m0[_279].w;
    uint _300 = (_263 + uint(float(BLENDINDICES.y))) * 3u;
    uint _307 = _300 + 1u;
    uint _314 = _300 + 2u;
    precise float _321 = _253 * cbObjMatrix._m0[_300].x;
    precise float _322 = _253 * cbObjMatrix._m0[_307].x;
    precise float _323 = _253 * cbObjMatrix._m0[_314].x;
    precise float _324 = _253 * cbObjMatrix._m0[_300].y;
    precise float _325 = _253 * cbObjMatrix._m0[_307].y;
    precise float _326 = _253 * cbObjMatrix._m0[_314].y;
    precise float _327 = _253 * cbObjMatrix._m0[_300].z;
    precise float _328 = _253 * cbObjMatrix._m0[_307].z;
    precise float _329 = _253 * cbObjMatrix._m0[_314].z;
    precise float _330 = _253 * cbObjMatrix._m0[_300].w;
    precise float _331 = _253 * cbObjMatrix._m0[_307].w;
    precise float _332 = _253 * cbObjMatrix._m0[_314].w;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    uint _347 = (_263 + uint(float(BLENDINDICES.z))) * 3u;
    uint _354 = _347 + 1u;
    uint _361 = _347 + 2u;
    precise float _368 = _254 * cbObjMatrix._m0[_347].x;
    precise float _369 = _254 * cbObjMatrix._m0[_354].x;
    precise float _370 = _254 * cbObjMatrix._m0[_361].x;
    precise float _371 = _254 * cbObjMatrix._m0[_347].y;
    precise float _372 = _254 * cbObjMatrix._m0[_354].y;
    precise float _373 = _254 * cbObjMatrix._m0[_361].y;
    precise float _374 = _254 * cbObjMatrix._m0[_347].z;
    precise float _375 = _254 * cbObjMatrix._m0[_354].z;
    precise float _376 = _254 * cbObjMatrix._m0[_361].z;
    precise float _377 = _254 * cbObjMatrix._m0[_347].w;
    precise float _378 = _254 * cbObjMatrix._m0[_354].w;
    precise float _379 = _254 * cbObjMatrix._m0[_361].w;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    uint _394 = (_263 + uint(float(BLENDINDICES.w))) * 3u;
    uint _401 = _394 + 1u;
    uint _408 = _394 + 2u;
    precise float _415 = _255 * cbObjMatrix._m0[_394].x;
    precise float _416 = _255 * cbObjMatrix._m0[_401].x;
    precise float _417 = _255 * cbObjMatrix._m0[_408].x;
    precise float _418 = _255 * cbObjMatrix._m0[_394].y;
    precise float _419 = _255 * cbObjMatrix._m0[_401].y;
    precise float _420 = _255 * cbObjMatrix._m0[_408].y;
    precise float _421 = _255 * cbObjMatrix._m0[_394].z;
    precise float _422 = _255 * cbObjMatrix._m0[_401].z;
    precise float _423 = _255 * cbObjMatrix._m0[_408].z;
    precise float _424 = _255 * cbObjMatrix._m0[_394].w;
    precise float _425 = _255 * cbObjMatrix._m0[_401].w;
    precise float _426 = _255 * cbObjMatrix._m0[_408].w;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = POSITION.x * _427;
    precise float _440 = POSITION.y * _430;
    precise float _441 = _440 + _439;
    precise float _442 = POSITION.z * _433;
    precise float _443 = _442 + _441;
    precise float _444 = 1.0 * _436;
    precise float _445 = _444 + _443;
    precise float _446 = POSITION.x * _428;
    precise float _447 = POSITION.y * _431;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.z * _434;
    precise float _450 = _449 + _448;
    precise float _451 = 1.0 * _437;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.x * _429;
    precise float _454 = POSITION.y * _432;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.z * _435;
    precise float _457 = _456 + _455;
    precise float _458 = 1.0 * _438;
    precise float _459 = _458 + _457;
    precise float _493 = _445 - cbSceneParam._m0[3u].x;
    precise float _494 = _452 - cbSceneParam._m0[3u].y;
    precise float _495 = _459 - cbSceneParam._m0[3u].z;
    precise float _523 = _493 * cbSceneParam._m0[24u].x;
    precise float _524 = _494 * cbSceneParam._m0[24u].y;
    precise float _525 = _524 + _523;
    precise float _526 = _495 * cbSceneParam._m0[24u].z;
    precise float _527 = _526 + _525;
    precise float _528 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _529 = _528 + _527;
    precise float _530 = _493 * cbSceneParam._m0[25u].x;
    precise float _531 = _494 * cbSceneParam._m0[25u].y;
    precise float _532 = _531 + _530;
    precise float _533 = _495 * cbSceneParam._m0[25u].z;
    precise float _534 = _533 + _532;
    precise float _535 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _536 = _535 + _534;
    precise float _537 = _493 * cbSceneParam._m0[26u].x;
    precise float _538 = _494 * cbSceneParam._m0[26u].y;
    precise float _539 = _538 + _537;
    precise float _540 = _495 * cbSceneParam._m0[26u].z;
    precise float _541 = _540 + _539;
    precise float _542 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _543 = _542 + _541;
    precise float _544 = _493 * cbSceneParam._m0[27u].x;
    precise float _545 = _494 * cbSceneParam._m0[27u].y;
    precise float _546 = _545 + _544;
    precise float _547 = _495 * cbSceneParam._m0[27u].z;
    precise float _548 = _547 + _546;
    precise float _549 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _550 = _549 + _548;
    gl_Position.x = _529;
    gl_Position.y = _536;
    gl_Position.z = _543;
    gl_Position.w = _550;
    POSITION_1.x = _529;
    POSITION_1.y = _536;
    POSITION_1.z = _543;
    POSITION_1.w = _550;
    NORMAL_1.x = fma(_208, _433, fma(_207, _430, _427 * _205));
    NORMAL_1.y = fma(_208, _434, fma(_207, _431, _428 * _205));
    NORMAL_1.z = fma(_208, _435, fma(_207, _432, _429 * _205));
    NORMAL_1.w = float(_244);
    TANGENT_1.x = fma(_219, _433, fma(_218, _430, _427 * _217));
    TANGENT_1.y = fma(_219, _434, fma(_218, _431, _428 * _217));
    TANGENT_1.z = fma(_219, _435, fma(_218, _432, _429 * _217));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_231, _433, fma(_230, _430, _427 * _229));
    TANGENT_2_1.y = fma(_231, _434, fma(_230, _431, _428 * _229));
    TANGENT_2_1.z = fma(_231, _435, fma(_230, _432, _429 * _229));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = COLOR_1.x;
    TEXCOORD_4.y = TEXCOORD_1.x;
    gl_ClipDistance[0u] = dot(vec4(_529, _536, _543, _550), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_529, _536, _543, _550), vec4(cbInstanceData._m0[_257 + 3u]));
}


