#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_2;
layout(location = 6) out vec2 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _189 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _214 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _222 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _224 = texelFetch(g_InstanceIndexBuffer, int(_222));
    uint _225 = _224.x;
    uint _227 = _225 * 13u;
    uint _235 = (floatBitsToUint(cbInstanceData._m0[_227 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _242 = _235 + 1u;
    uint _249 = _235 + 2u;
    precise float _256 = POSITION.x * cbObjMatrix._m0[_235].x;
    precise float _257 = POSITION.y * cbObjMatrix._m0[_235].y;
    precise float _258 = _257 + _256;
    precise float _259 = POSITION.z * cbObjMatrix._m0[_235].z;
    precise float _260 = _259 + _258;
    precise float _261 = 1.0 * cbObjMatrix._m0[_235].w;
    precise float _263 = _261 + _260;
    precise float _264 = POSITION.x * cbObjMatrix._m0[_242].x;
    precise float _265 = POSITION.y * cbObjMatrix._m0[_242].y;
    precise float _266 = _265 + _264;
    precise float _267 = POSITION.z * cbObjMatrix._m0[_242].z;
    precise float _268 = _267 + _266;
    precise float _269 = 1.0 * cbObjMatrix._m0[_242].w;
    precise float _270 = _269 + _268;
    precise float _271 = POSITION.x * cbObjMatrix._m0[_249].x;
    precise float _272 = POSITION.y * cbObjMatrix._m0[_249].y;
    precise float _273 = _272 + _271;
    precise float _274 = POSITION.z * cbObjMatrix._m0[_249].z;
    precise float _275 = _274 + _273;
    precise float _276 = 1.0 * cbObjMatrix._m0[_249].w;
    precise float _277 = _276 + _275;
    precise float _312 = _263 - cbSceneParam._m0[3u].x;
    precise float _313 = _270 - cbSceneParam._m0[3u].y;
    precise float _314 = _277 - cbSceneParam._m0[3u].z;
    precise float _342 = _312 * cbSceneParam._m0[24u].x;
    precise float _343 = _313 * cbSceneParam._m0[24u].y;
    precise float _344 = _343 + _342;
    precise float _345 = _314 * cbSceneParam._m0[24u].z;
    precise float _346 = _345 + _344;
    precise float _347 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _348 = _347 + _346;
    precise float _349 = _312 * cbSceneParam._m0[25u].x;
    precise float _350 = _313 * cbSceneParam._m0[25u].y;
    precise float _351 = _350 + _349;
    precise float _352 = _314 * cbSceneParam._m0[25u].z;
    precise float _353 = _352 + _351;
    precise float _354 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _355 = _354 + _353;
    precise float _356 = _312 * cbSceneParam._m0[26u].x;
    precise float _357 = _313 * cbSceneParam._m0[26u].y;
    precise float _358 = _357 + _356;
    precise float _359 = _314 * cbSceneParam._m0[26u].z;
    precise float _360 = _359 + _358;
    precise float _361 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _362 = _361 + _360;
    precise float _363 = _312 * cbSceneParam._m0[27u].x;
    precise float _364 = _313 * cbSceneParam._m0[27u].y;
    precise float _365 = _364 + _363;
    precise float _366 = _314 * cbSceneParam._m0[27u].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _369 = _368 + _367;
    gl_Position.x = _348;
    gl_Position.y = _355;
    gl_Position.z = _362;
    gl_Position.w = _369;
    POSITION_1.x = _348;
    POSITION_1.y = _355;
    POSITION_1.z = _362;
    POSITION_1.w = _369;
    NORMAL_1.x = fma(_192, cbObjMatrix._m0[_235].z, fma(_191, cbObjMatrix._m0[_235].y, cbObjMatrix._m0[_235].x * _189));
    NORMAL_1.y = fma(_192, cbObjMatrix._m0[_242].z, fma(_191, cbObjMatrix._m0[_242].y, cbObjMatrix._m0[_242].x * _189));
    NORMAL_1.z = fma(_192, cbObjMatrix._m0[_249].z, fma(_191, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _189));
    NORMAL_1.w = float(_225);
    TANGENT_1.x = fma(_204, cbObjMatrix._m0[_235].z, fma(_203, cbObjMatrix._m0[_235].y, cbObjMatrix._m0[_235].x * _202));
    TANGENT_1.y = fma(_204, cbObjMatrix._m0[_242].z, fma(_203, cbObjMatrix._m0[_242].y, cbObjMatrix._m0[_242].x * _202));
    TANGENT_1.z = fma(_204, cbObjMatrix._m0[_249].z, fma(_203, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _202));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_216, cbObjMatrix._m0[_235].z, fma(_215, cbObjMatrix._m0[_235].y, cbObjMatrix._m0[_235].x * _214));
    TANGENT_2_1.y = fma(_216, cbObjMatrix._m0[_242].z, fma(_215, cbObjMatrix._m0[_242].y, cbObjMatrix._m0[_242].x * _214));
    TANGENT_2_1.z = fma(_216, cbObjMatrix._m0[_249].z, fma(_215, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _214));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = COLOR_1.x;
    TEXCOORD_4.y = TEXCOORD_1.x;
    gl_ClipDistance[0u] = dot(vec4(_348, _355, _362, _369), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_348, _355, _362, _369), vec4(cbInstanceData._m0[_227 + 3u]));
}


