#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_2;
layout(location = 4, component = 1) out float TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_9;
layout(location = 8) out vec3 TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    float _186 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _210 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _212 = texelFetch(g_InstanceIndexBuffer, int(_210));
    uint _213 = _212.x;
    precise float _214 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _219 = isnan(_214) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _214 : max(0.001000000047497451305389404296875, _214));
    precise float _221 = BLENDWEIGHT.x / _219;
    precise float _222 = BLENDWEIGHT.y / _219;
    precise float _223 = BLENDWEIGHT.z / _219;
    precise float _224 = BLENDWEIGHT.w / _219;
    uvec4 _231 = floatBitsToUint(cbInstanceData._m0[(_213 * 13u) + 4u]);
    uint _232 = _231.x;
    uint _234 = (_232 + uint(float(BLENDINDICES.x))) * 3u;
    uint _241 = _234 + 1u;
    uint _248 = _234 + 2u;
    precise float _255 = _221 * cbObjMatrix._m0[_234].x;
    precise float _256 = _221 * cbObjMatrix._m0[_241].x;
    precise float _257 = _221 * cbObjMatrix._m0[_248].x;
    precise float _258 = _221 * cbObjMatrix._m0[_234].y;
    precise float _259 = _221 * cbObjMatrix._m0[_241].y;
    precise float _260 = _221 * cbObjMatrix._m0[_248].y;
    precise float _261 = _221 * cbObjMatrix._m0[_234].z;
    precise float _262 = _221 * cbObjMatrix._m0[_241].z;
    precise float _263 = _221 * cbObjMatrix._m0[_248].z;
    precise float _264 = _221 * cbObjMatrix._m0[_234].w;
    precise float _265 = _221 * cbObjMatrix._m0[_241].w;
    precise float _266 = _221 * cbObjMatrix._m0[_248].w;
    uint _269 = (_232 + uint(float(BLENDINDICES.y))) * 3u;
    uint _276 = _269 + 1u;
    uint _283 = _269 + 2u;
    precise float _290 = _222 * cbObjMatrix._m0[_269].x;
    precise float _291 = _222 * cbObjMatrix._m0[_276].x;
    precise float _292 = _222 * cbObjMatrix._m0[_283].x;
    precise float _293 = _222 * cbObjMatrix._m0[_269].y;
    precise float _294 = _222 * cbObjMatrix._m0[_276].y;
    precise float _295 = _222 * cbObjMatrix._m0[_283].y;
    precise float _296 = _222 * cbObjMatrix._m0[_269].z;
    precise float _297 = _222 * cbObjMatrix._m0[_276].z;
    precise float _298 = _222 * cbObjMatrix._m0[_283].z;
    precise float _299 = _222 * cbObjMatrix._m0[_269].w;
    precise float _300 = _222 * cbObjMatrix._m0[_276].w;
    precise float _301 = _222 * cbObjMatrix._m0[_283].w;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    uint _316 = (_232 + uint(float(BLENDINDICES.z))) * 3u;
    uint _323 = _316 + 1u;
    uint _330 = _316 + 2u;
    precise float _337 = _223 * cbObjMatrix._m0[_316].x;
    precise float _338 = _223 * cbObjMatrix._m0[_323].x;
    precise float _339 = _223 * cbObjMatrix._m0[_330].x;
    precise float _340 = _223 * cbObjMatrix._m0[_316].y;
    precise float _341 = _223 * cbObjMatrix._m0[_323].y;
    precise float _342 = _223 * cbObjMatrix._m0[_330].y;
    precise float _343 = _223 * cbObjMatrix._m0[_316].z;
    precise float _344 = _223 * cbObjMatrix._m0[_323].z;
    precise float _345 = _223 * cbObjMatrix._m0[_330].z;
    precise float _346 = _223 * cbObjMatrix._m0[_316].w;
    precise float _347 = _223 * cbObjMatrix._m0[_323].w;
    precise float _348 = _223 * cbObjMatrix._m0[_330].w;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    uint _363 = (_232 + uint(float(BLENDINDICES.w))) * 3u;
    uint _370 = _363 + 1u;
    uint _377 = _363 + 2u;
    precise float _384 = _224 * cbObjMatrix._m0[_363].x;
    precise float _385 = _224 * cbObjMatrix._m0[_370].x;
    precise float _386 = _224 * cbObjMatrix._m0[_377].x;
    precise float _387 = _224 * cbObjMatrix._m0[_363].y;
    precise float _388 = _224 * cbObjMatrix._m0[_370].y;
    precise float _389 = _224 * cbObjMatrix._m0[_377].y;
    precise float _390 = _224 * cbObjMatrix._m0[_363].z;
    precise float _391 = _224 * cbObjMatrix._m0[_370].z;
    precise float _392 = _224 * cbObjMatrix._m0[_377].z;
    precise float _393 = _224 * cbObjMatrix._m0[_363].w;
    precise float _394 = _224 * cbObjMatrix._m0[_370].w;
    precise float _395 = _224 * cbObjMatrix._m0[_377].w;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _425 = _396 * cbSceneParam._m0[5u].x;
    precise float _426 = _397 * cbSceneParam._m0[5u].y;
    precise float _427 = _426 + _425;
    precise float _428 = _398 * cbSceneParam._m0[5u].z;
    precise float _429 = _428 + _427;
    precise float _430 = _396 * cbSceneParam._m0[6u].x;
    precise float _431 = _397 * cbSceneParam._m0[6u].y;
    precise float _432 = _431 + _430;
    precise float _433 = _398 * cbSceneParam._m0[6u].z;
    precise float _434 = _433 + _432;
    precise float _435 = _396 * cbSceneParam._m0[7u].x;
    precise float _436 = _397 * cbSceneParam._m0[7u].y;
    precise float _437 = _436 + _435;
    precise float _438 = _398 * cbSceneParam._m0[7u].z;
    precise float _439 = _438 + _437;
    precise float _440 = _399 * cbSceneParam._m0[5u].x;
    precise float _441 = _400 * cbSceneParam._m0[5u].y;
    precise float _442 = _441 + _440;
    precise float _443 = _401 * cbSceneParam._m0[5u].z;
    precise float _444 = _443 + _442;
    precise float _445 = _399 * cbSceneParam._m0[6u].x;
    precise float _446 = _400 * cbSceneParam._m0[6u].y;
    precise float _447 = _446 + _445;
    precise float _448 = _401 * cbSceneParam._m0[6u].z;
    precise float _449 = _448 + _447;
    precise float _450 = _399 * cbSceneParam._m0[7u].x;
    precise float _451 = _400 * cbSceneParam._m0[7u].y;
    precise float _452 = _451 + _450;
    precise float _453 = _401 * cbSceneParam._m0[7u].z;
    precise float _454 = _453 + _452;
    precise float _455 = _402 * cbSceneParam._m0[5u].x;
    precise float _456 = _403 * cbSceneParam._m0[5u].y;
    precise float _457 = _456 + _455;
    precise float _458 = _404 * cbSceneParam._m0[5u].z;
    precise float _459 = _458 + _457;
    precise float _460 = _402 * cbSceneParam._m0[6u].x;
    precise float _461 = _403 * cbSceneParam._m0[6u].y;
    precise float _462 = _461 + _460;
    precise float _463 = _404 * cbSceneParam._m0[6u].z;
    precise float _464 = _463 + _462;
    precise float _465 = _402 * cbSceneParam._m0[7u].x;
    precise float _466 = _403 * cbSceneParam._m0[7u].y;
    precise float _467 = _466 + _465;
    precise float _468 = _404 * cbSceneParam._m0[7u].z;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.x - TEXCOORD_1.x;
    precise float _471 = POSITION.y - TEXCOORD_1.y;
    precise float _472 = POSITION.z - TEXCOORD_1.z;
    precise float _473 = _470 * _429;
    precise float _474 = _434 * _471;
    precise float _475 = _474 + _473;
    precise float _476 = _439 * _472;
    precise float _477 = _476 + _475;
    precise float _478 = _470 * _444;
    precise float _479 = _449 * _471;
    precise float _480 = _479 + _478;
    precise float _481 = _454 * _472;
    precise float _482 = _481 + _480;
    precise float _483 = _470 * _459;
    precise float _484 = _464 * _471;
    precise float _485 = _484 + _483;
    precise float _486 = _469 * _472;
    precise float _487 = _486 + _485;
    precise float _488 = TEXCOORD_1.x + _477;
    precise float _489 = TEXCOORD_1.y + _482;
    precise float _490 = TEXCOORD_1.z + _487;
    precise float _491 = _396 * _488;
    precise float _492 = _489 * _399;
    precise float _493 = _492 + _491;
    precise float _494 = _490 * _402;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _405;
    precise float _497 = _496 + _495;
    precise float _498 = _397 * _488;
    precise float _499 = _489 * _400;
    precise float _500 = _499 + _498;
    precise float _501 = _490 * _403;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _406;
    precise float _504 = _503 + _502;
    precise float _505 = _398 * _488;
    precise float _506 = _489 * _401;
    precise float _507 = _506 + _505;
    precise float _508 = _490 * _404;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _407;
    precise float _511 = _510 + _509;
    float _686 = (((((cbPrevObjMatrix._m0[_269].w * _222) + (cbPrevObjMatrix._m0[_234].w * _221)) + (cbPrevObjMatrix._m0[_316].w * _223)) + (cbPrevObjMatrix._m0[_363].w * _224)) + fma(_490, (((cbPrevObjMatrix._m0[_269].z * _222) + (cbPrevObjMatrix._m0[_234].z * _221)) + (cbPrevObjMatrix._m0[_316].z * _223)) + (cbPrevObjMatrix._m0[_363].z * _224), fma(_489, (((cbPrevObjMatrix._m0[_269].y * _222) + (cbPrevObjMatrix._m0[_234].y * _221)) + (cbPrevObjMatrix._m0[_316].y * _223)) + (cbPrevObjMatrix._m0[_363].y * _224), ((((cbPrevObjMatrix._m0[_269].x * _222) + (cbPrevObjMatrix._m0[_234].x * _221)) + (cbPrevObjMatrix._m0[_316].x * _223)) + (cbPrevObjMatrix._m0[_363].x * _224)) * _488))) - cbSceneParam._m0[28u].x;
    float _687 = (((((cbPrevObjMatrix._m0[_276].w * _222) + (cbPrevObjMatrix._m0[_241].w * _221)) + (cbPrevObjMatrix._m0[_323].w * _223)) + (cbPrevObjMatrix._m0[_370].w * _224)) + fma(_490, (((cbPrevObjMatrix._m0[_276].z * _222) + (cbPrevObjMatrix._m0[_241].z * _221)) + (cbPrevObjMatrix._m0[_323].z * _223)) + (cbPrevObjMatrix._m0[_370].z * _224), fma(_489, (((cbPrevObjMatrix._m0[_276].y * _222) + (cbPrevObjMatrix._m0[_241].y * _221)) + (cbPrevObjMatrix._m0[_323].y * _223)) + (cbPrevObjMatrix._m0[_370].y * _224), ((((cbPrevObjMatrix._m0[_276].x * _222) + (cbPrevObjMatrix._m0[_241].x * _221)) + (cbPrevObjMatrix._m0[_323].x * _223)) + (cbPrevObjMatrix._m0[_370].x * _224)) * _488))) - cbSceneParam._m0[28u].y;
    float _688 = (((((cbPrevObjMatrix._m0[_283].w * _222) + (cbPrevObjMatrix._m0[_248].w * _221)) + (cbPrevObjMatrix._m0[_330].w * _223)) + (cbPrevObjMatrix._m0[_377].w * _224)) + fma(_490, (((cbPrevObjMatrix._m0[_283].z * _222) + (cbPrevObjMatrix._m0[_248].z * _221)) + (cbPrevObjMatrix._m0[_330].z * _223)) + (cbPrevObjMatrix._m0[_377].z * _224), fma(_489, (((cbPrevObjMatrix._m0[_283].y * _222) + (cbPrevObjMatrix._m0[_248].y * _221)) + (cbPrevObjMatrix._m0[_330].y * _223)) + (cbPrevObjMatrix._m0[_377].y * _224), ((((cbPrevObjMatrix._m0[_283].x * _222) + (cbPrevObjMatrix._m0[_248].x * _221)) + (cbPrevObjMatrix._m0[_330].x * _223)) + (cbPrevObjMatrix._m0[_377].x * _224)) * _488))) - cbSceneParam._m0[28u].z;
    float _735 = fma(_439, _189, fma(_434, _188, _429 * _186));
    float _738 = fma(_454, _189, fma(_449, _188, _444 * _186));
    float _741 = fma(_469, _189, fma(_464, _188, _459 * _186));
    precise float _757 = _497 - cbSceneParam._m0[3u].x;
    precise float _758 = _504 - cbSceneParam._m0[3u].y;
    precise float _759 = _511 - cbSceneParam._m0[3u].z;
    precise float _787 = _757 * cbSceneParam._m0[24u].x;
    precise float _788 = _758 * cbSceneParam._m0[24u].y;
    precise float _789 = _788 + _787;
    precise float _790 = _759 * cbSceneParam._m0[24u].z;
    precise float _791 = _790 + _789;
    precise float _792 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _793 = _792 + _791;
    precise float _794 = _757 * cbSceneParam._m0[25u].x;
    precise float _795 = _758 * cbSceneParam._m0[25u].y;
    precise float _796 = _795 + _794;
    precise float _797 = _759 * cbSceneParam._m0[25u].z;
    precise float _798 = _797 + _796;
    precise float _799 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _800 = _799 + _798;
    precise float _801 = _757 * cbSceneParam._m0[26u].x;
    precise float _802 = _758 * cbSceneParam._m0[26u].y;
    precise float _803 = _802 + _801;
    precise float _804 = _759 * cbSceneParam._m0[26u].z;
    precise float _805 = _804 + _803;
    precise float _806 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _807 = _806 + _805;
    precise float _808 = _757 * cbSceneParam._m0[27u].x;
    precise float _809 = _758 * cbSceneParam._m0[27u].y;
    precise float _810 = _809 + _808;
    precise float _811 = _759 * cbSceneParam._m0[27u].z;
    precise float _812 = _811 + _810;
    precise float _813 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _814 = _813 + _812;
    gl_Position.x = _793;
    gl_Position.y = _800;
    gl_Position.z = _807;
    gl_Position.w = _814;
    POSITION_1.x = _793;
    POSITION_1.y = _800;
    POSITION_1.z = _807;
    POSITION_1.w = _814;
    NORMAL_1.x = _735;
    NORMAL_1.y = _738;
    NORMAL_1.z = _741;
    NORMAL_1.w = float(_213);
    TANGENT_1.x = fma(_200, _402, fma(_199, _399, _396 * _198));
    TANGENT_1.y = fma(_200, _403, fma(_199, _400, _397 * _198));
    TANGENT_1.z = fma(_200, _404, fma(_199, _401, _398 * _198));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_8.x = _793;
    TEXCOORD_8.y = _800;
    TEXCOORD_8.z = _807;
    TEXCOORD_8.w = _814;
    TEXCOORD_9.x = fma(_688, cbSceneParam._m0[29u].z, fma(_687, cbSceneParam._m0[29u].y, _686 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_9.y = fma(_688, cbSceneParam._m0[30u].z, fma(_687, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _686)) + cbSceneParam._m0[30u].w;
    TEXCOORD_9.z = fma(_688, cbSceneParam._m0[31u].z, fma(_687, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _686)) + cbSceneParam._m0[31u].w;
    TEXCOORD_9.w = fma(_688, cbSceneParam._m0[32u].z, fma(_687, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _686)) + cbSceneParam._m0[32u].w;
    TEXCOORD_10.x = _735;
    TEXCOORD_10.y = _738;
    TEXCOORD_10.z = _741;
}


