#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _113 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _525 = isnan(0.0) ? _113 : (isnan(_113) ? 0.0 : max(_113, 0.0));
    float _115 = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    float _122 = ((_115 * _115) * (3.0 - (_115 * 2.0))) - cbMtdParam._m0[11u].y;
    vec4 _145 = texture(sampler2D(M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _152 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _145.x;
    float _154 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _145.y;
    float _156 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _145.z;
    float _168 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _536 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    float _169 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
    float _174 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _547 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _175 = isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0));
    float _179 = _152 - (_175 * _152);
    float _180 = _154 - (_175 * _154);
    float _181 = _156 - (_175 * _156);
    float _209 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _226 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _241 = uint(roundEven(NORMAL.w)) * 13u;
    uint _243 = (_241 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _249 = (((((_152 * cbMtdParam._m0[10u].y) - _179) * _169) + _179) * _122) * cbInstanceData._m0[_243].x;
    float _250 = (((((_154 * cbMtdParam._m0[10u].y) - _180) * _169) + _180) * _122) * cbInstanceData._m0[_243].y;
    float _251 = (((((_156 * cbMtdParam._m0[10u].y) - _181) * _169) + _181) * _122) * cbInstanceData._m0[_243].z;
    float _573 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _264 = isnan(1.0) ? _573 : (isnan(_573) ? 1.0 : min(_573, 1.0));
    uint _265 = _241 + 6u;
    float _275 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _276 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _291 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_275, _276, (log2((isnan(cbSceneParam._m0[77u].w) ? _209 : (isnan(_209) ? cbSceneParam._m0[77u].w : min(_209, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _294 = _291.x;
    float _295 = _291.y;
    float _296 = _291.z;
    float _297 = _291.w;
    float _382;
    float _384;
    float _386;
    float _388;
    if (_209 > cbSceneParam._m0[78u].w)
    {
        float _343 = isnan(_209) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _209 : min(cbSceneParam._m0[80u].w, _209));
        float _344 = _343 / _209;
        float _355 = _344 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _226));
        float _356 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _226)) * _344;
        float _357 = (-0.0) - _356;
        float _359 = _344 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _226));
        float _361 = (cbSceneParam._m0[77u].w * _357) / _343;
        float _362 = _361 + cbSceneParam._m0[79u].w;
        float _363 = cbSceneParam._m0[79u].w - _356;
        float _369 = sqrt(((_355 * _355) + (_356 * _356)) + (_359 * _359));
        float _372 = (1.0 - (cbSceneParam._m0[77u].w / _343)) * _369;
        float _378 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _380 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _480;
        if (abs((_357 - _361) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _480 = ((((_362 > 0.0) ? exp2(_378 * _362) : (2.0 - exp2(_380 * _362))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _372;
        }
        else
        {
            float _453 = 1.0 / cbSceneParam._m0[80u].x;
            float _454 = isnan(_363) ? _362 : (isnan(_362) ? _363 : max(_362, _363));
            float _455 = isnan(_363) ? _362 : (isnan(_362) ? _363 : min(_362, _363));
            float _464 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : min(_454, 0.0));
            float _465 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : min(_455, 0.0));
            _480 = ((abs(_369 / _357) * cbSceneParam._m0[80u].y) * ((((_464 - _465) * 2.0) - ((exp2(_378 * (isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0)))) - exp2(_378 * (isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0))))) * _453)) - ((exp2(_380 * _464) - exp2(_380 * _465)) * _453))) + (_372 * cbSceneParam._m0[80u].z);
        }
        vec4 _482 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_275, _276, 1.0), 0.0);
        float _491 = exp2((_480 * (-1.44269502162933349609375)) * (1.0 - _482.w));
        float _492 = log2(_491);
        float _508 = log2(_297);
        _382 = (exp2(_508 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].x)) * _482.x) / cbSceneParam._m0[78u].x)) + _294;
        _384 = (exp2(_508 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].y)) * _482.y) / cbSceneParam._m0[78u].y)) + _295;
        _386 = (exp2(_508 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].z)) * _482.z) / cbSceneParam._m0[78u].z)) + _296;
        _388 = _491 * _297;
    }
    else
    {
        _382 = _294;
        _384 = _295;
        _386 = _296;
        _388 = _297;
    }
    float _400 = roundEven(cbMatDynParam._m0[0u].y);
    bool _401 = _400 == 3.0;
    float _402 = log2(_388);
    float _406 = exp2(_402 * cbSceneParam._m0[78u].x);
    float _407 = exp2(_402 * cbSceneParam._m0[78u].y);
    float _408 = exp2(_402 * cbSceneParam._m0[78u].z);
    float _409 = _406 * (isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0)));
    float _410 = _407 * (isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0)));
    float _411 = _408 * (isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0)));
    float _420 = (_400 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _420 * (_401 ? _409 : (_409 + (cbSceneParam._m0[72u].w * _382)));
    SV_Target.y = _420 * (_401 ? _410 : (_410 + (cbSceneParam._m0[72u].w * _384)));
    SV_Target.z = _420 * (_401 ? _411 : (_411 + (cbSceneParam._m0[72u].w * _386)));
    SV_Target.w = cbInstanceData._m0[_265].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _249) * _264) * _406) * _420;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _250) * _264) * _407) * _420;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _251) * _264) * _408) * _420;
    SV_Target_1.w = cbInstanceData._m0[_265].w;
}


