#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _115 = texture(sampler2D(M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _122 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _115.x;
    float _124 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _115.y;
    float _126 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _115.z;
    float _139 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _499 = isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0));
    float _141 = isnan(1.0) ? _499 : (isnan(_499) ? 1.0 : min(_499, 1.0));
    float _149 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _510 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _150 = isnan(1.0) ? _510 : (isnan(_510) ? 1.0 : min(_510, 1.0));
    float _154 = _122 - (_150 * _122);
    float _155 = _124 - (_150 * _124);
    float _156 = _126 - (_150 * _126);
    float _181 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _198 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _213 = uint(roundEven(NORMAL.w)) * 13u;
    uint _215 = (_213 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _221 = cbInstanceData._m0[_215].x * ((((_122 * cbMtdParam._m0[10u].y) - _154) * _141) + _154);
    float _222 = cbInstanceData._m0[_215].y * ((((_124 * cbMtdParam._m0[10u].y) - _155) * _141) + _155);
    float _223 = cbInstanceData._m0[_215].z * ((((_126 * cbMtdParam._m0[10u].y) - _156) * _141) + _156);
    float _536 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _236 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
    uint _237 = _213 + 6u;
    float _247 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _248 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _263 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, (log2((isnan(cbSceneParam._m0[77u].w) ? _181 : (isnan(_181) ? cbSceneParam._m0[77u].w : min(_181, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _266 = _263.x;
    float _267 = _263.y;
    float _268 = _263.z;
    float _269 = _263.w;
    float _354;
    float _356;
    float _358;
    float _360;
    if (_181 > cbSceneParam._m0[78u].w)
    {
        float _315 = isnan(_181) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _181 : min(cbSceneParam._m0[80u].w, _181));
        float _316 = _315 / _181;
        float _327 = _316 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _198));
        float _328 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _198)) * _316;
        float _329 = (-0.0) - _328;
        float _331 = _316 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _198));
        float _333 = (cbSceneParam._m0[77u].w * _329) / _315;
        float _334 = _333 + cbSceneParam._m0[79u].w;
        float _335 = cbSceneParam._m0[79u].w - _328;
        float _341 = sqrt(((_327 * _327) + (_328 * _328)) + (_331 * _331));
        float _344 = (1.0 - (cbSceneParam._m0[77u].w / _315)) * _341;
        float _350 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _352 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _454;
        if (abs((_329 - _333) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _454 = ((((_334 > 0.0) ? exp2(_350 * _334) : (2.0 - exp2(_352 * _334))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _344;
        }
        else
        {
            float _427 = 1.0 / cbSceneParam._m0[80u].x;
            float _428 = isnan(_335) ? _334 : (isnan(_334) ? _335 : max(_334, _335));
            float _429 = isnan(_335) ? _334 : (isnan(_334) ? _335 : min(_334, _335));
            float _438 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : min(_428, 0.0));
            float _439 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : min(_429, 0.0));
            _454 = ((abs(_341 / _329) * cbSceneParam._m0[80u].y) * ((((_438 - _439) * 2.0) - ((exp2(_350 * (isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0)))) - exp2(_350 * (isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0))))) * _427)) - ((exp2(_352 * _438) - exp2(_352 * _439)) * _427))) + (_344 * cbSceneParam._m0[80u].z);
        }
        vec4 _456 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, 1.0), 0.0);
        float _465 = exp2((_454 * (-1.44269502162933349609375)) * (1.0 - _456.w));
        float _466 = log2(_465);
        float _482 = log2(_269);
        _354 = (exp2(_482 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_466 * cbSceneParam._m0[78u].x)) * _456.x) / cbSceneParam._m0[78u].x)) + _266;
        _356 = (exp2(_482 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_466 * cbSceneParam._m0[78u].y)) * _456.y) / cbSceneParam._m0[78u].y)) + _267;
        _358 = (exp2(_482 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_466 * cbSceneParam._m0[78u].z)) * _456.z) / cbSceneParam._m0[78u].z)) + _268;
        _360 = _465 * _269;
    }
    else
    {
        _354 = _266;
        _356 = _267;
        _358 = _268;
        _360 = _269;
    }
    float _372 = roundEven(cbMatDynParam._m0[0u].y);
    bool _373 = _372 == 3.0;
    float _375 = log2(_360);
    float _379 = exp2(_375 * cbSceneParam._m0[78u].x);
    float _380 = exp2(_375 * cbSceneParam._m0[78u].y);
    float _381 = exp2(_375 * cbSceneParam._m0[78u].z);
    float _382 = _379 * (isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0)));
    float _383 = _380 * (isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0)));
    float _384 = _381 * (isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0)));
    float _394 = (_372 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _394 * (_373 ? _382 : (_382 + (cbSceneParam._m0[72u].w * _354)));
    SV_Target.y = _394 * (_373 ? _383 : (_383 + (cbSceneParam._m0[72u].w * _356)));
    SV_Target.z = _394 * (_373 ? _384 : (_384 + (cbSceneParam._m0[72u].w * _358)));
    SV_Target.w = cbInstanceData._m0[_237].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _221) * _236) * _379) * _394;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _222) * _236) * _380) * _394;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _223) * _236) * _381) * _394;
    SV_Target_1.w = cbInstanceData._m0[_237].w;
}


