#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _710;
float _711;
float _712;
float _713;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _155 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _165 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _155);
    float _166 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _155);
    float _167 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _155);
    float _179 = cbMtdParam._m0[10u].x - cbMtdParam._m0[10u].z;
    float _183 = gl_FragCoord.x * 0.125;
    float _185 = gl_FragCoord.y * 0.125;
    vec4 _188 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_183, _185));
    bool _196 = ((sqrt(((_165 * _165) + (_166 * _166)) + (_167 * _167)) - cbMtdParam._m0[10u].z) / (isnan(0.001000000047497451305389404296875) ? _179 : (isnan(_179) ? 0.001000000047497451305389404296875 : max(_179, 0.001000000047497451305389404296875)))) >= ((_188.w * 0.9900000095367431640625) + 0.00999999977648258209228515625);
    float _198 = float(_196);
    float _208 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _727 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _209 = isnan(1.0) ? _727 : (isnan(_727) ? 1.0 : min(_727, 1.0));
    float _216 = ((_209 * _209) * (3.0 - (_209 * 2.0))) - cbMtdParam._m0[11u].y;
    vec4 _236 = texture(sampler2D(M_E_Billboard_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _242 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _236.x;
    float _244 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _236.y;
    float _246 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _236.z;
    float _258 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _738 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _259 = isnan(1.0) ? _738 : (isnan(_738) ? 1.0 : min(_738, 1.0));
    float _264 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _749 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _265 = isnan(1.0) ? _749 : (isnan(_749) ? 1.0 : min(_749, 1.0));
    float _269 = _242 - (_265 * _242);
    float _270 = _244 - (_265 * _244);
    float _271 = _246 - (_265 * _246);
    if (!_196)
    {
        discard_state = true;
    }
    float _299 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _339 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _348 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _339);
    float _349 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _339);
    float _350 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _339);
    vec4 _352 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_183, _185));
    float _354 = _352.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _444 = sqrt(((_348 * _348) + (_349 * _349)) + (_350 * _350));
        float _451 = (cbMatDynParam._m0[5u].x * _444) + cbMatDynParam._m0[5u].y;
        float _760 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
        float _452 = isnan(1.0) ? _760 : (isnan(_760) ? 1.0 : min(_760, 1.0));
        float _456 = (cbMatDynParam._m0[5u].z * _444) + cbMatDynParam._m0[5u].w;
        float _771 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _771 : (isnan(_771) ? 1.0 : min(_771, 1.0))) - _452)) + _452) < ((_354 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _375 = uint(roundEven(NORMAL.w)) * 13u;
    uint _376 = _375 + 9u;
    uint _377 = _376 + uint(cbMatDynParam._m0[0u].w);
    float _383 = (((((_242 * cbMtdParam._m0[10u].y) - _269) * _259) + _269) * _216) * cbInstanceData._m0[_377].x;
    float _384 = (((((_244 * cbMtdParam._m0[10u].y) - _270) * _259) + _270) * _216) * cbInstanceData._m0[_377].y;
    float _385 = (((((_246 * cbMtdParam._m0[10u].y) - _271) * _259) + _271) * _216) * cbInstanceData._m0[_377].z;
    float _386 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _387 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _388 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _394 = cbMtdParam._m0[2u].x * _383;
    float _395 = cbMtdParam._m0[2u].y * _384;
    float _396 = cbMtdParam._m0[2u].z * _385;
    float _797 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _398 = isnan(1.0) ? _797 : (isnan(_797) ? 1.0 : min(_797, 1.0));
    uint _399 = _375 + 6u;
    float _408 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _409 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _424 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_408, _409, (log2((isnan(cbSceneParam._m0[77u].w) ? _299 : (isnan(_299) ? cbSceneParam._m0[77u].w : min(_299, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _427 = _424.x;
    float _428 = _424.y;
    float _429 = _424.z;
    float _430 = _424.w;
    float _510;
    float _512;
    float _514;
    float _516;
    if (_299 > cbSceneParam._m0[78u].w)
    {
        float _471 = isnan(_299) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _299 : min(cbSceneParam._m0[80u].w, _299));
        float _472 = _471 / _299;
        float _483 = _472 * _348;
        float _484 = _349 * _472;
        float _485 = (-0.0) - _484;
        float _487 = _472 * _350;
        float _489 = (cbSceneParam._m0[77u].w * _485) / _471;
        float _490 = _489 + cbSceneParam._m0[79u].w;
        float _491 = cbSceneParam._m0[79u].w - _484;
        float _497 = sqrt(((_483 * _483) + (_484 * _484)) + (_487 * _487));
        float _500 = (1.0 - (cbSceneParam._m0[77u].w / _471)) * _497;
        float _506 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _508 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _636;
        if (abs((_485 - _489) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _636 = ((((_490 > 0.0) ? exp2(_506 * _490) : (2.0 - exp2(_508 * _490))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _500;
        }
        else
        {
            float _591 = 1.0 / cbSceneParam._m0[80u].x;
            float _592 = isnan(_491) ? _490 : (isnan(_490) ? _491 : max(_490, _491));
            float _593 = isnan(_491) ? _490 : (isnan(_490) ? _491 : min(_490, _491));
            float _602 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : min(_592, 0.0));
            float _603 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : min(_593, 0.0));
            _636 = ((abs(_497 / _485) * cbSceneParam._m0[80u].y) * ((((_602 - _603) * 2.0) - ((exp2(_506 * (isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0)))) - exp2(_506 * (isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0))))) * _591)) - ((exp2(_508 * _602) - exp2(_508 * _603)) * _591))) + (_500 * cbSceneParam._m0[80u].z);
        }
        vec4 _638 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_408, _409, 1.0), 0.0);
        float _647 = exp2((_636 * (-1.44269502162933349609375)) * (1.0 - _638.w));
        float _648 = log2(_647);
        float _664 = log2(_430);
        _510 = (exp2(_664 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].x)) * _638.x) / cbSceneParam._m0[78u].x)) + _427;
        _512 = (exp2(_664 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].y)) * _638.y) / cbSceneParam._m0[78u].y)) + _428;
        _514 = (exp2(_664 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].z)) * _638.z) / cbSceneParam._m0[78u].z)) + _429;
        _516 = _647 * _430;
    }
    else
    {
        _510 = _427;
        _512 = _428;
        _514 = _429;
        _516 = _430;
    }
    bool _674;
    vec4 _526;
    vec4 _549;
    float _551;
    float _555;
    float _556;
    float _557;
    float _560;
    float _563;
    float _566;
    float _567;
    bool _578;
    for (;;)
    {
        _526 = cbMatDynParam._m0[0u];
        float _528 = roundEven(_526.y);
        bool _529 = _528 == 3.0;
        float _530 = log2(_516);
        float _534 = exp2(_530 * cbSceneParam._m0[78u].x);
        float _535 = exp2(_530 * cbSceneParam._m0[78u].y);
        float _536 = exp2(_530 * cbSceneParam._m0[78u].z);
        float _537 = _534 * _386;
        float _538 = _535 * _387;
        float _539 = _536 * _388;
        float _546 = _354 + (-0.5);
        _549 = cbMtdParam._m0[1u];
        _551 = _549.y * _546;
        float _554 = (_528 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _555 = _554 * (_529 ? _537 : (_537 + (cbSceneParam._m0[72u].w * _510)));
        _556 = _554 * (_529 ? _538 : (_538 + (cbSceneParam._m0[72u].w * _512)));
        _557 = _554 * (_529 ? _539 : (_539 + (cbSceneParam._m0[72u].w * _514)));
        _560 = ((_394 * _398) * _534) * _554;
        _563 = ((_395 * _398) * _535) * _554;
        _566 = ((_396 * _398) * _536) * _554;
        _567 = _546 * 0.999000012874603271484375;
        _578 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_578)
        {
            if ((cbInstanceData._m0[_375 + 7u].x + _567) < 0.5)
            {
                _674 = true;
                break;
            }
        }
        uint _628 = _376 + uint(_526.w);
        if ((cbInstanceData._m0[_628].w < 1.0) && ((cbInstanceData._m0[_628].w + _567) < 0.5))
        {
            _674 = true;
            break;
        }
        if ((_551 + _198) < _549.x)
        {
            _674 = true;
            break;
        }
        _674 = false;
        break;
    }
    float _679;
    if (_674)
    {
        discard_state = true;
        _679 = 0.0;
    }
    else
    {
        _679 = cbInstanceData._m0[_399].w;
    }
    SV_Target.x = _555;
    SV_Target.y = _556;
    SV_Target.z = _557;
    SV_Target.w = _679;
    SV_Target_1.x = _560;
    SV_Target_1.y = _563;
    SV_Target_1.z = _566;
    SV_Target_1.w = cbInstanceData._m0[_399].w;
    discard_exit();
}


