#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _118 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _119 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _120 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _125 = inversesqrt(dot(vec3(_118, _119, _120), vec3(_118, _119, _120)));
    float _129 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _130 = _129 * NORMAL.x;
    float _131 = _129 * NORMAL.y;
    float _132 = _129 * NORMAL.z;
    float _136 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _144;
    float _145;
    float _146;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _144 = (-0.0) - _130;
        _145 = (-0.0) - _131;
        _146 = (-0.0) - _132;
    }
    else
    {
        _144 = _130;
        _145 = _131;
        _146 = _132;
    }
    float _191 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _201 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _191);
    float _202 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _191);
    float _203 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _191);
    vec4 _216 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _219 = _216.x;
    float _242 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _219)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _219))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _371 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _245 = 1.0 - (isnan(1.0) ? _371 : (isnan(_371) ? 1.0 : min(_371, 1.0)));
    float _257 = cbMtdParam._m0[11u].y - cbMtdParam._m0[11u].x;
    float _260 = (sqrt(((_201 * _201) + (_202 * _202)) + (_203 * _203)) - cbMtdParam._m0[11u].x) / (isnan(0.00999999977648258209228515625) ? _257 : (isnan(_257) ? 0.00999999977648258209228515625 : max(_257, 0.00999999977648258209228515625)));
    float _387 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _271 = fma(0.989949524402618408203125, _144, fma(-0.10000002384185791015625, _136 * TANGENT.x, (_118 * (-0.10000002384185791015625)) * _125));
    float _276 = fma(0.989949524402618408203125, _145, fma(-0.10000002384185791015625, _136 * TANGENT.y, (_119 * (-0.10000002384185791015625)) * _125));
    float _280 = fma(0.989949524402618408203125, _146, fma(-0.10000002384185791015625, _136 * TANGENT.z, (_120 * (-0.10000002384185791015625)) * _125));
    float _284 = inversesqrt(dot(vec3(_271, _276, _280), vec3(_271, _276, _280)));
    float _291 = inversesqrt(dot(vec3(_201, _202, _203), vec3(_201, _202, _203)));
    float _298 = dot(vec4(_291 * _201, _291 * _202, _291 * _203, 0.0), vec4(_284 * _271, _284 * _276, _284 * _280, 0.0)) - cbMtdParam._m0[12u].x;
    float _398 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _306 = exp2(log2(1.0 - (isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].w : (isnan(cbMtdParam._m0[11u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].w, 0.001000000047497451305389404296875)))) * (isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0)));
    float _414 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _307 = isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0));
    float _315 = _306 - (((_307 * _307) * _306) * (3.0 - (_307 * 2.0)));
    float _319 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _425 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _329 = cbInstanceData._m0[(uint(roundEven(NORMAL.w)) * 13u) + 6u].w * (isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0)));
    bool _344 = cbMtdParam._m0[1u].z != 0.0;
    float _345 = _344 ? _329 : 0.0;
    SV_Target.x = ((_144 * 0.5) * _319) + 0.500488758087158203125;
    SV_Target.y = ((_145 * 0.5) * _319) + 0.500488758087158203125;
    SV_Target.z = ((_146 * 0.5) * _319) + 0.500488758087158203125;
    SV_Target.w = _345;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _344 ? _329 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _329;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _345;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _345;
}


