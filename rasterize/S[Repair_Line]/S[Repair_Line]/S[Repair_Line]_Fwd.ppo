#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Repair_Line_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _135 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _136 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _137 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _142 = inversesqrt(dot(vec3(_135, _136, _137), vec3(_135, _136, _137)));
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _161;
    float _162;
    float _163;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _161 = (-0.0) - _147;
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
    }
    else
    {
        _161 = _147;
        _162 = _148;
        _163 = _149;
    }
    float _209 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _219 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _209);
    float _220 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _209);
    float _221 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _209);
    vec4 _234 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _237 = _234.x;
    float _260 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _237)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _237))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _760 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _263 = 1.0 - (isnan(1.0) ? _760 : (isnan(_760) ? 1.0 : min(_760, 1.0)));
    float _275 = cbMtdParam._m0[11u].y - cbMtdParam._m0[11u].x;
    float _278 = (sqrt(((_219 * _219) + (_220 * _220)) + (_221 * _221)) - cbMtdParam._m0[11u].x) / (isnan(0.00999999977648258209228515625) ? _275 : (isnan(_275) ? 0.00999999977648258209228515625 : max(_275, 0.00999999977648258209228515625)));
    float _776 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _289 = fma(0.989949524402618408203125, _161, fma(-0.10000002384185791015625, _153 * TANGENT.x, (_135 * (-0.10000002384185791015625)) * _142));
    float _294 = fma(0.989949524402618408203125, _162, fma(-0.10000002384185791015625, _153 * TANGENT.y, (_136 * (-0.10000002384185791015625)) * _142));
    float _298 = fma(0.989949524402618408203125, _163, fma(-0.10000002384185791015625, _153 * TANGENT.z, (_137 * (-0.10000002384185791015625)) * _142));
    float _302 = inversesqrt(dot(vec3(_289, _294, _298), vec3(_289, _294, _298)));
    float _309 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _316 = dot(vec4(_309 * _219, _309 * _220, _309 * _221, 0.0), vec4(_302 * _289, _302 * _294, _302 * _298, 0.0)) - cbMtdParam._m0[12u].x;
    float _787 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _324 = exp2(log2(1.0 - (isnan(1.0) ? _787 : (isnan(_787) ? 1.0 : min(_787, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].w : (isnan(cbMtdParam._m0[11u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].w, 0.001000000047497451305389404296875)))) * (isnan(1.0) ? _776 : (isnan(_776) ? 1.0 : min(_776, 1.0)));
    float _803 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _325 = isnan(1.0) ? _803 : (isnan(_803) ? 1.0 : min(_803, 1.0));
    float _333 = _324 - (((_325 * _325) * _324) * (3.0 - (_325 * 2.0)));
    uint _349 = uint(roundEven(NORMAL.w)) * 13u;
    uint _353 = _349 + 1u;
    uint _357 = _349 + 2u;
    float _366 = sqrt(((cbInstanceData._m0[_353].x * cbInstanceData._m0[_353].x) + (cbInstanceData._m0[_349].x * cbInstanceData._m0[_349].x)) + (cbInstanceData._m0[_357].x * cbInstanceData._m0[_357].x));
    vec4 _382 = texture(sampler2D(S_Repair_Line_snp_0_Texture2D_18, SS_DiffuseMap), vec2((((_366 * TEXCOORD.x) + ((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_366 * TEXCOORD.y) + ((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _387 = _382.x * cbMtdParam._m0[9u].x;
    float _388 = _382.y * cbMtdParam._m0[9u].y;
    float _389 = _382.z * cbMtdParam._m0[9u].z;
    vec4 _397 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _399 = _397.x;
    bool _404 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _420 = ((_404 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _399)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _399))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _814 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _421 = isnan(1.0) ? _814 : (isnan(_814) ? 1.0 : min(_814, 1.0));
    float _825 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _825 : (isnan(_825) ? 1.0 : min(_825, 1.0));
    float _424 = 3.0 - (_422 * 2.0);
    float _428 = _422 * _422;
    float _836 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _447 = _404 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _463 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _477 = (_349 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _483 = ((((_428 * (cbMtdParam._m0[10u].z - _387)) * _424) + _387) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_477].x;
    float _484 = ((((_428 * (cbMtdParam._m0[10u].z - _388)) * _424) + _388) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_477].y;
    float _485 = ((((_428 * (cbMtdParam._m0[10u].z - _389)) * _424) + _389) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_477].z;
    float _862 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _498 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
    float _504 = cbInstanceData._m0[_349 + 6u].w * (isnan(1.0) ? _836 : (isnan(_836) ? 1.0 : min(_836, 1.0)));
    float _510 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _511 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _526 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_510, _511, (log2((isnan(cbSceneParam._m0[77u].w) ? _447 : (isnan(_447) ? cbSceneParam._m0[77u].w : min(_447, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _528 = _526.x;
    float _529 = _526.y;
    float _530 = _526.z;
    float _531 = _526.w;
    float _615;
    float _617;
    float _619;
    float _621;
    if (_447 > cbSceneParam._m0[78u].w)
    {
        float _577 = isnan(_447) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _447 : min(cbSceneParam._m0[80u].w, _447));
        float _578 = _577 / _447;
        float _589 = _578 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _463));
        float _590 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _463)) * _578;
        float _591 = (-0.0) - _590;
        float _592 = _578 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _463));
        float _594 = (cbSceneParam._m0[77u].w * _591) / _577;
        float _595 = _594 + cbSceneParam._m0[79u].w;
        float _596 = cbSceneParam._m0[79u].w - _590;
        float _602 = sqrt(((_589 * _589) + (_590 * _590)) + (_592 * _592));
        float _605 = (1.0 - (cbSceneParam._m0[77u].w / _577)) * _602;
        float _611 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _613 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _713;
        if (abs((_591 - _594) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _713 = ((((_595 > 0.0) ? exp2(_611 * _595) : (2.0 - exp2(_613 * _595))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _605;
        }
        else
        {
            float _686 = 1.0 / cbSceneParam._m0[80u].x;
            float _687 = isnan(_596) ? _595 : (isnan(_595) ? _596 : max(_595, _596));
            float _688 = isnan(_596) ? _595 : (isnan(_595) ? _596 : min(_595, _596));
            float _697 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : min(_687, 0.0));
            float _698 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : min(_688, 0.0));
            _713 = ((abs(_602 / _591) * cbSceneParam._m0[80u].y) * ((((_697 - _698) * 2.0) - ((exp2(_611 * (isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0)))) - exp2(_611 * (isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0))))) * _686)) - ((exp2(_613 * _697) - exp2(_613 * _698)) * _686))) + (_605 * cbSceneParam._m0[80u].z);
        }
        vec4 _715 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_510, _511, 1.0), 0.0);
        float _724 = exp2((_713 * (-1.44269502162933349609375)) * (1.0 - _715.w));
        float _725 = log2(_724);
        float _741 = log2(_531);
        _615 = (exp2(_741 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_725 * cbSceneParam._m0[78u].x)) * _715.x) / cbSceneParam._m0[78u].x)) + _528;
        _617 = (exp2(_741 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_725 * cbSceneParam._m0[78u].y)) * _715.y) / cbSceneParam._m0[78u].y)) + _529;
        _619 = (exp2(_741 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_725 * cbSceneParam._m0[78u].z)) * _715.z) / cbSceneParam._m0[78u].z)) + _530;
        _621 = _724 * _531;
    }
    else
    {
        _615 = _528;
        _617 = _529;
        _619 = _530;
        _621 = _531;
    }
    float _633 = roundEven(cbMatDynParam._m0[0u].y);
    bool _634 = _633 == 3.0;
    float _635 = log2(_621);
    float _639 = exp2(_635 * cbSceneParam._m0[78u].x);
    float _640 = exp2(_635 * cbSceneParam._m0[78u].y);
    float _641 = exp2(_635 * cbSceneParam._m0[78u].z);
    float _642 = _639 * (isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0)));
    float _643 = _640 * (isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0)));
    float _644 = _641 * (isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0)));
    float _653 = (_633 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _653 * (_634 ? _642 : (_642 + (cbSceneParam._m0[72u].w * _615)));
    SV_Target.y = _653 * (_634 ? _643 : (_643 + (cbSceneParam._m0[72u].w * _617)));
    SV_Target.z = _653 * (_634 ? _644 : (_644 + (cbSceneParam._m0[72u].w * _619)));
    SV_Target.w = _504;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _483) * _498) * _639) * _653;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _484) * _498) * _640) * _653;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _485) * _498) * _641) * _653;
    SV_Target_1.w = _504;
}


