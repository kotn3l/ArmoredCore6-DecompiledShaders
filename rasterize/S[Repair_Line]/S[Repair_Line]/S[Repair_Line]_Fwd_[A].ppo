#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Repair_Line_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _868;
float _869;
float _870;
float _871;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _144 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _145 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _146 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _151 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = _155 * NORMAL.x;
    float _157 = _155 * NORMAL.y;
    float _158 = _155 * NORMAL.z;
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _156;
        _171 = (-0.0) - _157;
        _172 = (-0.0) - _158;
    }
    else
    {
        _170 = _156;
        _171 = _157;
        _172 = _158;
    }
    float _218 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _228 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _218);
    float _229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _218);
    float _230 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _218);
    vec4 _243 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _246 = _243.x;
    float _269 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _246)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _246))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _880 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _272 = 1.0 - (isnan(1.0) ? _880 : (isnan(_880) ? 1.0 : min(_880, 1.0)));
    float _284 = cbMtdParam._m0[11u].y - cbMtdParam._m0[11u].x;
    float _287 = (sqrt(((_228 * _228) + (_229 * _229)) + (_230 * _230)) - cbMtdParam._m0[11u].x) / (isnan(0.00999999977648258209228515625) ? _284 : (isnan(_284) ? 0.00999999977648258209228515625 : max(_284, 0.00999999977648258209228515625)));
    float _896 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _298 = fma(0.989949524402618408203125, _170, fma(-0.10000002384185791015625, _162 * TANGENT.x, (_144 * (-0.10000002384185791015625)) * _151));
    float _303 = fma(0.989949524402618408203125, _171, fma(-0.10000002384185791015625, _162 * TANGENT.y, (_145 * (-0.10000002384185791015625)) * _151));
    float _307 = fma(0.989949524402618408203125, _172, fma(-0.10000002384185791015625, _162 * TANGENT.z, (_146 * (-0.10000002384185791015625)) * _151));
    float _311 = inversesqrt(dot(vec3(_298, _303, _307), vec3(_298, _303, _307)));
    float _318 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _325 = dot(vec4(_318 * _228, _318 * _229, _318 * _230, 0.0), vec4(_311 * _298, _311 * _303, _311 * _307, 0.0)) - cbMtdParam._m0[12u].x;
    float _907 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _333 = exp2(log2(1.0 - (isnan(1.0) ? _907 : (isnan(_907) ? 1.0 : min(_907, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].w : (isnan(cbMtdParam._m0[11u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].w, 0.001000000047497451305389404296875)))) * (isnan(1.0) ? _896 : (isnan(_896) ? 1.0 : min(_896, 1.0)));
    float _923 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _334 = isnan(1.0) ? _923 : (isnan(_923) ? 1.0 : min(_923, 1.0));
    float _342 = _333 - (((_334 * _334) * _333) * (3.0 - (_334 * 2.0)));
    uint _358 = uint(roundEven(NORMAL.w)) * 13u;
    uint _362 = _358 + 1u;
    uint _366 = _358 + 2u;
    float _375 = sqrt(((cbInstanceData._m0[_362].x * cbInstanceData._m0[_362].x) + (cbInstanceData._m0[_358].x * cbInstanceData._m0[_358].x)) + (cbInstanceData._m0[_366].x * cbInstanceData._m0[_366].x));
    vec4 _391 = texture(sampler2D(S_Repair_Line_snp_0_Texture2D_18, SS_DiffuseMap), vec2((((_375 * TEXCOORD.x) + ((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_375 * TEXCOORD.y) + ((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _396 = _391.x * cbMtdParam._m0[9u].x;
    float _397 = _391.y * cbMtdParam._m0[9u].y;
    float _398 = _391.z * cbMtdParam._m0[9u].z;
    vec4 _406 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _408 = _406.x;
    bool _413 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _429 = ((_413 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _408)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _408))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _934 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _934 : (isnan(_934) ? 1.0 : min(_934, 1.0));
    float _945 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _945 : (isnan(_945) ? 1.0 : min(_945, 1.0));
    float _433 = 3.0 - (_431 * 2.0);
    float _437 = _431 * _431;
    float _956 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _456 = _413 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _496 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _505 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _496);
    float _506 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _496);
    float _507 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _496);
    vec4 _512 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _514 = _512.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _599 = sqrt(((_505 * _505) + (_506 * _506)) + (_507 * _507));
        float _606 = (cbMatDynParam._m0[5u].x * _599) + cbMatDynParam._m0[5u].y;
        float _967 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
        float _607 = isnan(1.0) ? _967 : (isnan(_967) ? 1.0 : min(_967, 1.0));
        float _611 = (cbMatDynParam._m0[5u].z * _599) + cbMatDynParam._m0[5u].w;
        float _978 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _978 : (isnan(_978) ? 1.0 : min(_978, 1.0))) - _607)) + _607) < ((_514 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _531 = _358 + 9u;
    uint _532 = _531 + uint(cbMatDynParam._m0[0u].w);
    float _538 = ((((_437 * (cbMtdParam._m0[10u].z - _396)) * _433) + _396) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_532].x;
    float _539 = ((((_437 * (cbMtdParam._m0[10u].z - _397)) * _433) + _397) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_532].y;
    float _540 = ((((_437 * (cbMtdParam._m0[10u].z - _398)) * _433) + _398) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_532].z;
    float _541 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _542 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _543 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _549 = cbMtdParam._m0[2u].x * _538;
    float _550 = cbMtdParam._m0[2u].y * _539;
    float _551 = cbMtdParam._m0[2u].z * _540;
    float _1004 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _553 = isnan(1.0) ? _1004 : (isnan(_1004) ? 1.0 : min(_1004, 1.0));
    float _558 = cbInstanceData._m0[_358 + 6u].w * (isnan(1.0) ? _956 : (isnan(_956) ? 1.0 : min(_956, 1.0)));
    float _564 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _565 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _580 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_564, _565, (log2((isnan(cbSceneParam._m0[77u].w) ? _456 : (isnan(_456) ? cbSceneParam._m0[77u].w : min(_456, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _582 = _580.x;
    float _583 = _580.y;
    float _584 = _580.z;
    float _585 = _580.w;
    float _665;
    float _667;
    float _669;
    float _671;
    if (_456 > cbSceneParam._m0[78u].w)
    {
        float _627 = isnan(_456) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _456 : min(cbSceneParam._m0[80u].w, _456));
        float _628 = _627 / _456;
        float _639 = _628 * _505;
        float _640 = _506 * _628;
        float _641 = (-0.0) - _640;
        float _642 = _628 * _507;
        float _644 = (cbSceneParam._m0[77u].w * _641) / _627;
        float _645 = _644 + cbSceneParam._m0[79u].w;
        float _646 = cbSceneParam._m0[79u].w - _640;
        float _652 = sqrt(((_639 * _639) + (_640 * _640)) + (_642 * _642));
        float _655 = (1.0 - (cbSceneParam._m0[77u].w / _627)) * _652;
        float _661 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _663 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _794;
        if (abs((_641 - _644) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _794 = ((((_645 > 0.0) ? exp2(_661 * _645) : (2.0 - exp2(_663 * _645))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _655;
        }
        else
        {
            float _749 = 1.0 / cbSceneParam._m0[80u].x;
            float _750 = isnan(_646) ? _645 : (isnan(_645) ? _646 : max(_645, _646));
            float _751 = isnan(_646) ? _645 : (isnan(_645) ? _646 : min(_645, _646));
            float _760 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : min(_750, 0.0));
            float _761 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : min(_751, 0.0));
            _794 = ((abs(_652 / _641) * cbSceneParam._m0[80u].y) * ((((_760 - _761) * 2.0) - ((exp2(_661 * (isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0)))) - exp2(_661 * (isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0))))) * _749)) - ((exp2(_663 * _760) - exp2(_663 * _761)) * _749))) + (_655 * cbSceneParam._m0[80u].z);
        }
        vec4 _796 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_564, _565, 1.0), 0.0);
        float _805 = exp2((_794 * (-1.44269502162933349609375)) * (1.0 - _796.w));
        float _806 = log2(_805);
        float _822 = log2(_585);
        _665 = (exp2(_822 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_806 * cbSceneParam._m0[78u].x)) * _796.x) / cbSceneParam._m0[78u].x)) + _582;
        _667 = (exp2(_822 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_806 * cbSceneParam._m0[78u].y)) * _796.y) / cbSceneParam._m0[78u].y)) + _583;
        _669 = (exp2(_822 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_806 * cbSceneParam._m0[78u].z)) * _796.z) / cbSceneParam._m0[78u].z)) + _584;
        _671 = _805 * _585;
    }
    else
    {
        _665 = _582;
        _667 = _583;
        _669 = _584;
        _671 = _585;
    }
    bool _832;
    vec4 _681;
    vec4 _704;
    float _706;
    float _710;
    float _711;
    float _712;
    float _715;
    float _718;
    float _721;
    float _722;
    bool _733;
    for (;;)
    {
        _681 = cbMatDynParam._m0[0u];
        float _683 = roundEven(_681.y);
        bool _684 = _683 == 3.0;
        float _685 = log2(_671);
        float _689 = exp2(_685 * cbSceneParam._m0[78u].x);
        float _690 = exp2(_685 * cbSceneParam._m0[78u].y);
        float _691 = exp2(_685 * cbSceneParam._m0[78u].z);
        float _692 = _689 * _541;
        float _693 = _690 * _542;
        float _694 = _691 * _543;
        float _701 = _514 + (-0.5);
        _704 = cbMtdParam._m0[1u];
        _706 = _704.y * _701;
        float _709 = (_683 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _710 = _709 * (_684 ? _692 : (_692 + (cbSceneParam._m0[72u].w * _665)));
        _711 = _709 * (_684 ? _693 : (_693 + (cbSceneParam._m0[72u].w * _667)));
        _712 = _709 * (_684 ? _694 : (_694 + (cbSceneParam._m0[72u].w * _669)));
        _715 = ((_549 * _553) * _689) * _709;
        _718 = ((_550 * _553) * _690) * _709;
        _721 = ((_551 * _553) * _691) * _709;
        _722 = _701 * 0.999000012874603271484375;
        _733 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_733)
        {
            if ((cbInstanceData._m0[_358 + 7u].x + _722) < 0.5)
            {
                _832 = true;
                break;
            }
        }
        uint _786 = _531 + uint(_681.w);
        if ((cbInstanceData._m0[_786].w < 1.0) && ((cbInstanceData._m0[_786].w + _722) < 0.5))
        {
            _832 = true;
            break;
        }
        if ((_706 + 1.0) < _704.x)
        {
            _832 = true;
            break;
        }
        _832 = false;
        break;
    }
    float _837;
    if (_832)
    {
        discard_state = true;
        _837 = 0.0;
    }
    else
    {
        _837 = _558;
    }
    SV_Target.x = _710;
    SV_Target.y = _711;
    SV_Target.z = _712;
    SV_Target.w = _837;
    SV_Target_1.x = _715;
    SV_Target_1.y = _718;
    SV_Target_1.z = _721;
    SV_Target_1.w = _558;
    discard_exit();
}


