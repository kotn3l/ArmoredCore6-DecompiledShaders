#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_5;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out float TEXCOORD_6;
layout(location = 6, component = 1) out vec2 TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _231 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _244 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _662 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _252 = (isnan(1.0) ? _662 : (isnan(_662) ? 1.0 : min(_662, 1.0))) * _244;
    precise float _253 = TEXCOORD_2.x * 255.0;
    precise float _255 = TEXCOORD_2.y * 255.0;
    precise float _256 = _255 * 256.0;
    precise float _258 = _253 + _256;
    precise float _259 = _258 + 0.5;
    float _261 = floor(_252);
    uint _262 = uint(int(_259));
    uint _263 = uint(int(_261));
    vec4 _264 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_262, _263)), int(0u));
    float _266 = _264.x;
    float _267 = _264.y;
    float _268 = _264.z;
    precise float _276 = _261 + 1.0;
    uint _278 = uint(int(isnan(_244) ? _276 : (isnan(_276) ? _244 : min(_276, _244))));
    vec4 _279 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_262, _278)), int(0u));
    float _284 = fract(_252);
    vec4 _297 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_262, _263)), int(0u));
    float _299 = _297.x;
    float _300 = _297.y;
    float _301 = _297.z;
    vec4 _302 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_262, _278)), int(0u));
    precise float _307 = _302.x - _299;
    precise float _308 = _302.y - _300;
    precise float _309 = _302.z - _301;
    precise float _310 = _284 * _307;
    precise float _311 = _284 * _308;
    precise float _312 = _284 * _309;
    precise float _313 = _299 + _310;
    precise float _314 = _300 + _311;
    precise float _315 = _301 + _312;
    uint _320 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _322 = texelFetch(g_InstanceIndexBuffer, int(_320));
    uint _323 = _322.x;
    precise float _324 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _327 = isnan(_324) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _324 : max(0.001000000047497451305389404296875, _324));
    precise float _329 = BLENDWEIGHT.x / _327;
    precise float _330 = BLENDWEIGHT.y / _327;
    precise float _331 = BLENDWEIGHT.z / _327;
    precise float _332 = BLENDWEIGHT.w / _327;
    uint _334 = _323 * 13u;
    uvec4 _339 = floatBitsToUint(cbInstanceData._m0[_334 + 4u]);
    uint _340 = _339.x;
    uint _342 = (_340 + uint(float(BLENDINDICES.x))) * 3u;
    uint _349 = _342 + 1u;
    uint _356 = _342 + 2u;
    precise float _363 = _329 * cbObjMatrix._m0[_342].x;
    precise float _364 = _329 * cbObjMatrix._m0[_349].x;
    precise float _365 = _329 * cbObjMatrix._m0[_356].x;
    precise float _366 = _329 * cbObjMatrix._m0[_342].y;
    precise float _367 = _329 * cbObjMatrix._m0[_349].y;
    precise float _368 = _329 * cbObjMatrix._m0[_356].y;
    precise float _369 = _329 * cbObjMatrix._m0[_342].z;
    precise float _370 = _329 * cbObjMatrix._m0[_349].z;
    precise float _371 = _329 * cbObjMatrix._m0[_356].z;
    precise float _372 = _329 * cbObjMatrix._m0[_342].w;
    precise float _373 = _329 * cbObjMatrix._m0[_349].w;
    precise float _374 = _329 * cbObjMatrix._m0[_356].w;
    uint _377 = (_340 + uint(float(BLENDINDICES.y))) * 3u;
    uint _384 = _377 + 1u;
    uint _391 = _377 + 2u;
    precise float _398 = _330 * cbObjMatrix._m0[_377].x;
    precise float _399 = _330 * cbObjMatrix._m0[_384].x;
    precise float _400 = _330 * cbObjMatrix._m0[_391].x;
    precise float _401 = _330 * cbObjMatrix._m0[_377].y;
    precise float _402 = _330 * cbObjMatrix._m0[_384].y;
    precise float _403 = _330 * cbObjMatrix._m0[_391].y;
    precise float _404 = _330 * cbObjMatrix._m0[_377].z;
    precise float _405 = _330 * cbObjMatrix._m0[_384].z;
    precise float _406 = _330 * cbObjMatrix._m0[_391].z;
    precise float _407 = _330 * cbObjMatrix._m0[_377].w;
    precise float _408 = _330 * cbObjMatrix._m0[_384].w;
    precise float _409 = _330 * cbObjMatrix._m0[_391].w;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    uint _424 = (_340 + uint(float(BLENDINDICES.z))) * 3u;
    uint _431 = _424 + 1u;
    uint _438 = _424 + 2u;
    precise float _445 = _331 * cbObjMatrix._m0[_424].x;
    precise float _446 = _331 * cbObjMatrix._m0[_431].x;
    precise float _447 = _331 * cbObjMatrix._m0[_438].x;
    precise float _448 = _331 * cbObjMatrix._m0[_424].y;
    precise float _449 = _331 * cbObjMatrix._m0[_431].y;
    precise float _450 = _331 * cbObjMatrix._m0[_438].y;
    precise float _451 = _331 * cbObjMatrix._m0[_424].z;
    precise float _452 = _331 * cbObjMatrix._m0[_431].z;
    precise float _453 = _331 * cbObjMatrix._m0[_438].z;
    precise float _454 = _331 * cbObjMatrix._m0[_424].w;
    precise float _455 = _331 * cbObjMatrix._m0[_431].w;
    precise float _456 = _331 * cbObjMatrix._m0[_438].w;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    uint _471 = (_340 + uint(float(BLENDINDICES.w))) * 3u;
    uint _478 = _471 + 1u;
    uint _485 = _471 + 2u;
    precise float _492 = _332 * cbObjMatrix._m0[_471].x;
    precise float _493 = _332 * cbObjMatrix._m0[_478].x;
    precise float _494 = _332 * cbObjMatrix._m0[_485].x;
    precise float _495 = _332 * cbObjMatrix._m0[_471].y;
    precise float _496 = _332 * cbObjMatrix._m0[_478].y;
    precise float _497 = _332 * cbObjMatrix._m0[_485].y;
    precise float _498 = _332 * cbObjMatrix._m0[_471].z;
    precise float _499 = _332 * cbObjMatrix._m0[_478].z;
    precise float _500 = _332 * cbObjMatrix._m0[_485].z;
    precise float _501 = _332 * cbObjMatrix._m0[_471].w;
    precise float _502 = _332 * cbObjMatrix._m0[_478].w;
    precise float _503 = _332 * cbObjMatrix._m0[_485].w;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _460 + _495;
    precise float _508 = _461 + _496;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = POSITION.x * _504;
    precise float _517 = POSITION.y * _507;
    precise float _518 = _517 + _516;
    precise float _519 = POSITION.z * _510;
    precise float _520 = _519 + _518;
    precise float _521 = 1.0 * _513;
    precise float _522 = _521 + _520;
    precise float _523 = POSITION.x * _505;
    precise float _524 = POSITION.y * _508;
    precise float _525 = _524 + _523;
    precise float _526 = POSITION.z * _511;
    precise float _527 = _526 + _525;
    precise float _528 = 1.0 * _514;
    precise float _529 = _528 + _527;
    precise float _530 = POSITION.x * _506;
    precise float _531 = POSITION.y * _509;
    precise float _532 = _531 + _530;
    precise float _533 = POSITION.z * _512;
    precise float _534 = _533 + _532;
    precise float _535 = 1.0 * _515;
    precise float _536 = _535 + _534;
    precise float _537 = _313 + _522;
    precise float _538 = _314 + _529;
    precise float _539 = _315 + _536;
    precise float _555 = _537 - cbSceneParam._m0[3u].x;
    precise float _556 = _538 - cbSceneParam._m0[3u].y;
    precise float _557 = _539 - cbSceneParam._m0[3u].z;
    precise float _585 = _555 * cbSceneParam._m0[24u].x;
    precise float _586 = _556 * cbSceneParam._m0[24u].y;
    precise float _587 = _586 + _585;
    precise float _588 = _557 * cbSceneParam._m0[24u].z;
    precise float _589 = _588 + _587;
    precise float _590 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _591 = _590 + _589;
    precise float _592 = _555 * cbSceneParam._m0[25u].x;
    precise float _593 = _556 * cbSceneParam._m0[25u].y;
    precise float _594 = _593 + _592;
    precise float _595 = _557 * cbSceneParam._m0[25u].z;
    precise float _596 = _595 + _594;
    precise float _597 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _598 = _597 + _596;
    precise float _599 = _555 * cbSceneParam._m0[26u].x;
    precise float _600 = _556 * cbSceneParam._m0[26u].y;
    precise float _601 = _600 + _599;
    precise float _602 = _557 * cbSceneParam._m0[26u].z;
    precise float _603 = _602 + _601;
    precise float _604 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _605 = _604 + _603;
    precise float _606 = _555 * cbSceneParam._m0[27u].x;
    precise float _607 = _556 * cbSceneParam._m0[27u].y;
    precise float _608 = _607 + _606;
    precise float _609 = _557 * cbSceneParam._m0[27u].z;
    precise float _610 = _609 + _608;
    precise float _611 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _612 = _611 + _610;
    gl_Position.x = _591;
    gl_Position.y = _598;
    gl_Position.z = _605;
    gl_Position.w = _612;
    POSITION_1.x = _591;
    POSITION_1.y = _598;
    POSITION_1.z = _605;
    POSITION_1.w = _612;
    NORMAL_1.x = (((_279.x - _266) * 2.0) * _284) + ((_266 * 2.0) + (-1.0));
    NORMAL_1.y = (((_279.y - _267) * 2.0) * _284) + ((_267 * 2.0) + (-1.0));
    NORMAL_1.z = (_284 * ((_279.z - _268) * 2.0)) + ((_268 * 2.0) + (-1.0));
    NORMAL_1.w = float(_323);
    TANGENT_1.x = fma(_234, _510, fma(_233, _507, _504 * _231));
    TANGENT_1.y = fma(_234, _511, fma(_233, _508, _505 * _231));
    TANGENT_1.z = fma(_234, _512, fma(_233, _509, _506 * _231));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_2.x;
    TEXCOORD_4_1.w = TEXCOORD_2.y;
    TEXCOORD_6 = COLOR_1.x;
    TEXCOORD_10.x = _605;
    TEXCOORD_10.y = _612;
    gl_ClipDistance[0u] = dot(vec4(_591, _598, _605, _612), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_591, _598, _605, _612), vec4(cbInstanceData._m0[_334 + 3u]));
}


