#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1269;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _203 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _204 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _205 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _211 = inversesqrt(dot(vec3(_203, _204, _205), vec3(_203, _204, _205)));
    float _218 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = cbMtdParam._m0[15u].y + TEXCOORD.x;
    float _245 = cbMtdParam._m0[15u].z + TEXCOORD.y;
    vec4 _258 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _244) + cbTextureTilingScale._m0[0u].z, (_245 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _264 = _258.x * cbMtdParam._m0[9u].w;
    float _265 = _258.y * cbMtdParam._m0[10u].x;
    float _266 = _258.z * cbMtdParam._m0[10u].y;
    float _280 = cbMtdParam._m0[17u].y + TEXCOORD.x;
    float _281 = cbMtdParam._m0[17u].z + TEXCOORD.y;
    vec4 _294 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _280) + cbTextureTilingScale._m0[5u].z, (_281 * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    uvec4 _311 = floatBitsToUint(cbMtdParam._m0[9u]);
    vec4 _325 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _327 = _325.x;
    float _338 = exp2(log2(((_311.z != 0u) ? (1.0 - _327) : _327) * cbMtdParam._m0[14u].w) * cbMtdParam._m0[15u].x);
    float _3636 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _346 = cbMtdParam._m0[16u].x * cbMtdParam._m0[15u].w;
    float _349 = (_346 + (-1.0)) * cbMtdParam._m0[14u].x;
    bool _351 = _311.y != 0u;
    float _363 = (cbMtdParam._m0[16u].w + cbMtdParam._m0[14u].y) + ((TEXCOORD.z - cbMtdParam._m0[16u].w) * cbMtdParam._m0[16u].y);
    float _365 = (cbMtdParam._m0[17u].x + cbMtdParam._m0[13u].w) + ((TEXCOORD.w - cbMtdParam._m0[17u].x) * cbMtdParam._m0[16u].z);
    float _3647 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _3658 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    uint _371 = uint(int(floor(_349)));
    uint _373 = _371 + 1u;
    uint _374 = uint(int(_346));
    uint _375 = _374 * 3u;
    uint _376 = _371 - _375 * (_371 / _375);
    uint _377 = _373 - _375 * (_373 / _375);
    float _380 = float(int(_376 - _374 * (_376 / _374)));
    float _384 = float(int(_377 - _374 * (_377 / _374)));
    float _388 = 1.0 / cbMtdParam._m0[15u].w;
    float _389 = 1.0 / cbMtdParam._m0[16u].x;
    float _390 = fract(_351 ? _363 : (isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0))));
    float _391 = fract(_351 ? _365 : (isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0))));
    vec4 _419 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_390 + (_380 - cbMtdParam._m0[15u].w * trunc(_380 / cbMtdParam._m0[15u].w))) * _388) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_391 + floor(_380 / cbMtdParam._m0[15u].w)) * _389) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _421 = _419.x;
    float _424 = ((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_390 + (_384 - cbMtdParam._m0[15u].w * trunc(_384 / cbMtdParam._m0[15u].w))) * _388) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_391 + floor(_384 / cbMtdParam._m0[15u].w)) * _389) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w)).x - _421) * fract(_349)) + _421;
    float _430 = exp2(log2(((_424 * (isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0)))) + _424) * cbMtdParam._m0[13u].x) * cbMtdParam._m0[13u].y);
    float _3669 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0));
    float _438 = (_431 * ((_294.x * cbMtdParam._m0[11u].w) - _264)) + _264;
    float _439 = (_431 * ((_294.y * cbMtdParam._m0[12u].x) - _265)) + _265;
    float _440 = (_431 * ((_294.z * cbMtdParam._m0[12u].y) - _266)) + _266;
    vec4 _450 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _452 = _450.x;
    bool _458 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _475 = ((_458 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _452)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _452))) - POSITION_1.w) / cbMtdParam._m0[13u].z;
    float _3680 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _476 = isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0));
    float _3691 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _477 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
    float _495 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _244) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _245) + cbTextureTilingScale._m0[2u].w)).x + cbMtdParam._m0[12u].w;
    float _517 = (((cbMtdParam._m0[14u].z - _495) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _280) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _281) + cbTextureTilingScale._m0[6u].w)).x) * _431) + _495;
    vec4 _529 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _244) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _245) + cbTextureTilingScale._m0[1u].w));
    float _531 = _529.x;
    float _532 = _529.y;
    float _533 = _529.z;
    vec4 _546 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _280) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _281) + cbTextureTilingScale._m0[7u].w));
    float _559 = ((_546.z - _533) * _431) + _533;
    float _563 = ((((_546.x - _531) * _431) + _531) * 2.0) + (-1.0);
    float _564 = ((((_546.y - _532) * _431) + _532) * 2.0) + (-1.0);
    float _565 = dot(vec2(_563, _564), vec2(_563, _564));
    float _3702 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _570 = sqrt(1.0 - (isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0))));
    bool _575 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _596 = fma(_570, _218 * NORMAL.x, fma(_564, _225 * TANGENT.x, (_211 * _203) * _563));
    float _599 = fma(_570, _218 * NORMAL.y, fma(_564, _225 * TANGENT.y, (_211 * _204) * _563));
    float _602 = fma(_570, _218 * NORMAL.z, fma(_564, _225 * TANGENT.z, (_211 * _205) * _563));
    float _606 = inversesqrt(dot(vec3(_596, _599, _602), vec3(_596, _599, _602)));
    float _607 = _606 * _596;
    float _608 = _606 * _599;
    float _609 = _606 * _602;
    float _3713 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _610 = isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0));
    float _3724 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _611 = isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0));
    float _3735 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _612 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
    float _3746 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _613 = isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0));
    float _3757 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _614 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
    float _3768 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _615 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
    float _620 = _458 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _660 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _670 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _660);
    float _671 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _660);
    float _672 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _660);
    float _676 = inversesqrt(dot(vec3(_670, _671, _672), vec3(_670, _671, _672)));
    float _677 = _670 * _676;
    float _678 = _671 * _676;
    float _679 = _672 * _676;
    float _684 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _685 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _687 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _689 = _687.w;
    float _707 = fma(_609, cbSceneParam._m0[5u].z, fma(_608, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _607));
    float _710 = fma(_609, cbSceneParam._m0[6u].z, fma(_608, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _607));
    float _713 = fma(_609, cbSceneParam._m0[7u].z, fma(_608, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _607));
    vec4 _715 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _717 = _715.x;
    float _729 = (((_715.y - _611) + (_715.w * _611)) * cbMtdParam._m0[3u].x) + _611;
    vec4 _730 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _746 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_717 * _717)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _730.z;
    float _754 = (((cbMatDynParam._m0[15u].x - _615) * cbMatDynParam._m0[15u].w) * _746) + _615;
    float _762 = ((_746 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _729)) + _729;
    uint _786 = uint(roundEven(NORMAL.w)) * 13u;
    uint _787 = _786 + 9u;
    uint _788 = _787 + uint(cbMatDynParam._m0[0u].w);
    float _794 = (cbMtdParam._m0[0u].x * _612) * cbInstanceData._m0[_788].x;
    float _795 = (cbMtdParam._m0[0u].y * _613) * cbInstanceData._m0[_788].y;
    float _796 = (cbMtdParam._m0[0u].z * _614) * cbInstanceData._m0[_788].z;
    float _3779 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _797 = isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0));
    float _3790 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _798 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
    float _3801 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _799 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
    vec4 _800 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    vec4 _805 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _816 = (((_805.x - _754) + (_805.w * _754)) * cbMtdParam._m0[3u].x) + _754;
    float _829 = (cbMtdParam._m0[3u].x * (((_797 * _689) - _797) + _800.x)) + _797;
    float _830 = (cbMtdParam._m0[3u].x * (((_798 * _689) - _798) + _800.y)) + _798;
    float _831 = (cbMtdParam._m0[3u].x * (((_799 * _689) - _799) + _800.z)) + _799;
    float _845 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_754 * (_612 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_754 * (_613 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_754 * (_614 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y)).z;
    float _849 = _845 * cbMatDynParam._m0[13u].w;
    float _859 = (_849 * (cbMatDynParam._m0[13u].x - _829)) + _829;
    float _860 = (_849 * (cbMatDynParam._m0[13u].y - _830)) + _830;
    float _861 = (_849 * (cbMatDynParam._m0[13u].z - _831)) + _831;
    float _869 = ((_845 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _816)) + _816;
    float _870 = 1.0 - _869;
    float _871 = _870 * _859;
    float _872 = _870 * _860;
    float _873 = _870 * _861;
    float _877 = (_859 + (-0.039999999105930328369140625)) * _869;
    float _878 = (_860 + (-0.039999999105930328369140625)) * _869;
    float _879 = (_861 + (-0.039999999105930328369140625)) * _869;
    float _880 = _877 + 0.039999999105930328369140625;
    float _881 = _878 + 0.039999999105930328369140625;
    float _882 = _879 + 0.039999999105930328369140625;
    vec4 _891 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _684, cbSceneParam._m0[86u].y * _685));
    float _894 = _891.x * TEXCOORD_6;
    float _895 = dot(vec3(_607, _608, _609), vec3(_677, _678, _679));
    float _898 = _895 * 2.0;
    float _902 = (_898 * _607) - _677;
    float _903 = (_898 * _608) - _678;
    float _904 = (_898 * _609) - _679;
    float _908 = abs(dot(vec3(_677, _678, _679), vec3(_607, _608, _609)));
    float _3812 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
    float _910 = sqrt(_762);
    float _923 = exp2((_910 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_910 * 3.0));
    float _929 = (1.0 - _923) * ((_910 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _930 = _923 * _910;
    float _958 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _962 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _966 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1268;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _993 = fma(_966, cbModelParam._m0[26u].z, fma(_962, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _958));
        float _997 = fma(_966, cbModelParam._m0[27u].z, fma(_962, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _958));
        float _1001 = fma(_966, cbModelParam._m0[28u].z, fma(_962, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _958));
        float _1026 = _958 + _607;
        float _1027 = _962 + _608;
        float _1028 = _966 + _609;
        float _1038 = fma(_1028, cbModelParam._m0[26u].z, fma(_1027, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1026)) - _993;
        float _1039 = fma(_1028, cbModelParam._m0[27u].z, fma(_1027, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1026)) - _997;
        float _1040 = fma(_1028, cbModelParam._m0[28u].z, fma(_1027, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1026)) - _1001;
        float _1044 = inversesqrt(dot(vec3(_1038, _1039, _1040), vec3(_1038, _1039, _1040)));
        float _1057 = ((_1044 * _1038) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_993 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1058 = ((_1044 * _1039) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_997 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1059 = ((_1044 * _1040) / cbModelParam._m0[34u].z) + ((((((_1001 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1076 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1083 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        float _1096 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1097 = _1096 * (_1062.x + (-0.5));
        float _1098 = _1096 * (_1062.y + (-0.5));
        float _1099 = _1096 * (_1062.z + (-0.5));
        float _1106 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1069.x + (-0.5));
        float _1108 = _1106 * (_1069.y + (-0.5));
        float _1109 = _1106 * (_1069.z + (-0.5));
        float _1116 = exp2((_1076.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1076.x + (-0.5));
        float _1118 = _1116 * (_1076.y + (-0.5));
        float _1119 = _1116 * (_1076.z + (-0.5));
        float _1126 = exp2((_1083.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1083.x + (-0.5));
        float _1128 = _1126 * (_1083.y + (-0.5));
        float _1129 = _1126 * (_1083.z + (-0.5));
        float _1130 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1131 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1132 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
        float _1133 = _1097 * 0.5;
        float _1134 = _1107 * 0.5;
        float _1135 = _1117 * 0.5;
        float _1136 = dot(vec3(_1133, _1134, _1135), vec3(_1133, _1134, _1135));
        float _1141 = (_1136 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1136);
        float _1150 = (dot(vec3(_607, _608, _609), vec3(_1141 * _1133, _1141 * _1134, _1141 * _1135)) + 1.0) * 0.5;
        float _3838 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1160 = sqrt(((_1134 * _1134) + (_1133 * _1133)) + (_1135 * _1135)) / (_1130 + 9.9999997473787516355514526367188e-06);
        float _3849 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _3860 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0))) * (_1162 + 1.0))) + _1167) * _1130;
        float _1177 = _1098 * 0.5;
        float _1178 = _1108 * 0.5;
        float _1179 = _1118 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1193 = (dot(vec3(_607, _608, _609), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _3871 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1202 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1131 + 9.9999997473787516355514526367188e-06);
        float _3882 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _3893 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))) * (_1204 + 1.0))) + _1209) * _1131;
        float _1219 = _1099 * 0.5;
        float _1220 = _1109 * 0.5;
        float _1221 = _1119 * 0.5;
        float _1222 = dot(vec3(_1219, _1220, _1221), vec3(_1219, _1220, _1221));
        float _1227 = (_1222 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1222);
        float _1235 = (dot(vec3(_607, _608, _609), vec3(_1227 * _1219, _1227 * _1220, _1227 * _1221)) + 1.0) * 0.5;
        float _3904 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1244 = sqrt(((_1220 * _1220) + (_1219 * _1219)) + (_1221 * _1221)) / (_1132 + 9.9999997473787516355514526367188e-06);
        float _3915 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
        float _1246 = _1245 * 2.0;
        float _1250 = (1.0 - _1245) / (_1245 + 1.0);
        float _3926 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
        float _1260 = ((((1.0 - _1251) * (_1246 + 2.0)) * exp2(log2(isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * (_1246 + 1.0))) + _1251) * _1132;
        _1268 = _1099;
        _1270 = _1098;
        _1271 = _1097;
        _1272 = _1109;
        _1273 = _1108;
        _1274 = _1107;
        _1275 = _1119;
        _1276 = _1118;
        _1277 = _1117;
        _1278 = _1132;
        _1279 = _1131;
        _1280 = _1130;
        _1281 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
        _1282 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
        _1283 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0)));
    }
    else
    {
        _1268 = _1269;
        _1270 = _1269;
        _1271 = _1269;
        _1272 = _1269;
        _1273 = _1269;
        _1274 = _1269;
        _1275 = _1269;
        _1276 = _1269;
        _1277 = _1269;
        _1278 = _1269;
        _1279 = _1269;
        _1280 = _1269;
        _1281 = 0.0;
        _1282 = 0.0;
        _1283 = 0.0;
    }
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1309 = fma(_966, cbModelParam._m0[30u].z, fma(_962, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _958));
        float _1313 = fma(_966, cbModelParam._m0[31u].z, fma(_962, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _958));
        float _1317 = fma(_966, cbModelParam._m0[32u].z, fma(_962, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _958));
        float _1340 = _958 + _607;
        float _1341 = _962 + _608;
        float _1342 = _966 + _609;
        float _1352 = fma(_1342, cbModelParam._m0[30u].z, fma(_1341, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1340)) - _1309;
        float _1353 = fma(_1342, cbModelParam._m0[31u].z, fma(_1341, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1340)) - _1313;
        float _1354 = fma(_1342, cbModelParam._m0[32u].z, fma(_1341, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1340)) - _1317;
        float _1358 = inversesqrt(dot(vec3(_1352, _1353, _1354), vec3(_1352, _1353, _1354)));
        float _1371 = ((_1358 * _1352) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1309 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1372 = ((_1358 * _1353) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1313 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1373 = ((_1358 * _1354) / cbModelParam._m0[35u].z) + ((((((_1317 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1375 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1371, _1372, _1373), 0.0);
        vec4 _1382 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1371, _1372, _1373), 0.0);
        vec4 _1389 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1371, _1372, _1373), 0.0);
        vec4 _1396 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1371, _1372, _1373), 0.0);
        float _1408 = exp2((_1375.w + (-0.5)) * 20.0) * 2.0;
        float _1409 = _1408 * (_1375.x + (-0.5));
        float _1410 = _1408 * (_1375.y + (-0.5));
        float _1411 = _1408 * (_1375.z + (-0.5));
        float _1418 = exp2((_1382.w + (-0.5)) * 20.0) * 2.0;
        float _1419 = _1418 * (_1382.x + (-0.5));
        float _1420 = _1418 * (_1382.y + (-0.5));
        float _1421 = _1418 * (_1382.z + (-0.5));
        float _1428 = exp2((_1389.w + (-0.5)) * 20.0) * 2.0;
        float _1429 = _1428 * (_1389.x + (-0.5));
        float _1430 = _1428 * (_1389.y + (-0.5));
        float _1431 = _1428 * (_1389.z + (-0.5));
        float _1438 = exp2((_1396.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1396.x + (-0.5));
        float _1440 = _1438 * (_1396.y + (-0.5));
        float _1441 = _1438 * (_1396.z + (-0.5));
        float _1442 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1443 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1444 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1445 = _1409 * 0.5;
        float _1446 = _1419 * 0.5;
        float _1447 = _1429 * 0.5;
        float _1448 = dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447));
        float _1453 = (_1448 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1448);
        float _1461 = (dot(vec3(_607, _608, _609), vec3(_1453 * _1445, _1453 * _1446, _1453 * _1447)) + 1.0) * 0.5;
        float _3967 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1470 = sqrt(((_1446 * _1446) + (_1445 * _1445)) + (_1447 * _1447)) / (_1442 + 9.9999997473787516355514526367188e-06);
        float _3978 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _3989 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0))) * (_1472 + 1.0))) + _1477) * _1442;
        float _1487 = _1410 * 0.5;
        float _1488 = _1420 * 0.5;
        float _1489 = _1430 * 0.5;
        float _1490 = dot(vec3(_1487, _1488, _1489), vec3(_1487, _1488, _1489));
        float _1495 = (_1490 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1490);
        float _1503 = (dot(vec3(_607, _608, _609), vec3(_1495 * _1487, _1495 * _1488, _1495 * _1489)) + 1.0) * 0.5;
        float _4000 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1512 = sqrt(((_1488 * _1488) + (_1487 * _1487)) + (_1489 * _1489)) / (_1443 + 9.9999997473787516355514526367188e-06);
        float _4011 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
        float _1514 = _1513 * 2.0;
        float _1518 = (1.0 - _1513) / (_1513 + 1.0);
        float _4022 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
        float _1528 = ((((1.0 - _1519) * (_1514 + 2.0)) * exp2(log2(isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0))) * (_1514 + 1.0))) + _1519) * _1443;
        float _1529 = _1411 * 0.5;
        float _1530 = _1421 * 0.5;
        float _1531 = _1431 * 0.5;
        float _1532 = dot(vec3(_1529, _1530, _1531), vec3(_1529, _1530, _1531));
        float _1537 = (_1532 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1532);
        float _1545 = (dot(vec3(_607, _608, _609), vec3(_1537 * _1529, _1537 * _1530, _1537 * _1531)) + 1.0) * 0.5;
        float _4033 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1554 = sqrt(((_1530 * _1530) + (_1529 * _1529)) + (_1531 * _1531)) / (_1444 + 9.9999997473787516355514526367188e-06);
        float _4044 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1555 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1556 = _1555 * 2.0;
        float _1560 = (1.0 - _1555) / (_1555 + 1.0);
        float _4055 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1561 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1570 = ((((1.0 - _1561) * (_1556 + 2.0)) * exp2(log2(isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * (_1556 + 1.0))) + _1561) * _1444;
        _1578 = _1411;
        _1579 = _1410;
        _1580 = _1409;
        _1581 = _1421;
        _1582 = _1420;
        _1583 = _1419;
        _1584 = _1431;
        _1585 = _1430;
        _1586 = _1429;
        _1587 = _1444;
        _1588 = _1443;
        _1589 = _1442;
        _1590 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
        _1591 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0)));
        _1592 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0)));
    }
    else
    {
        _1578 = _1269;
        _1579 = _1269;
        _1580 = _1269;
        _1581 = _1269;
        _1582 = _1269;
        _1583 = _1269;
        _1584 = _1269;
        _1585 = _1269;
        _1586 = _1269;
        _1587 = _1269;
        _1588 = _1269;
        _1589 = _1269;
        _1590 = 0.0;
        _1591 = 0.0;
        _1592 = 0.0;
    }
    float _1602 = (cbModelParam._m0[1u].x * (_1590 - _1281)) + _1281;
    float _1603 = (cbModelParam._m0[1u].x * (_1591 - _1282)) + _1282;
    float _1604 = (cbModelParam._m0[1u].x * (_1592 - _1283)) + _1283;
    float _1625 = fma(_1604, cbSceneParam._m0[89u].z, fma(_1603, cbSceneParam._m0[89u].y, _1602 * cbSceneParam._m0[89u].x));
    float _1628 = fma(_1604, cbSceneParam._m0[90u].z, fma(_1603, cbSceneParam._m0[90u].y, _1602 * cbSceneParam._m0[90u].x));
    float _1631 = fma(_1604, cbSceneParam._m0[91u].z, fma(_1603, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1602));
    float _1646 = _902 * 0.5;
    float _1647 = _903 * 0.5;
    float _1648 = _904 * 0.5;
    float _1649 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1580, _1583, _1586, _1589));
    float _1652 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1579, _1582, _1585, _1588));
    float _1655 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1578, _1581, _1584, _1587));
    float _1686;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1662 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1268, _1272, _1275, _1278));
        float _1666 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1270, _1273, _1276, _1279));
        float _1670 = dot(vec4(_1646, _1647, _1648, 1.0), vec4(_1271, _1274, _1277, _1280));
        float _1677 = dot(vec4(cbModelParam._m0[39u]), vec4(_1646, _1647, _1648, 1.0));
        _1686 = dot(vec3(isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)), isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0)), isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1677) ? 0.0 : (isnan(0.0) ? _1677 : max(0.0, _1677))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1686 = 1.0;
    }
    float _1697;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1688 = dot(vec4(cbModelParam._m0[40u]), vec4(_1646, _1647, _1648, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0)), isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1701 = (_1697 * cbModelParam._m0[1u].x) + (_1686 * (1.0 - cbModelParam._m0[1u].x));
    float _1711 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _762);
    float _1712 = isnan(_1711) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1711 : min(cbModelParam._m0[25u].z, _1711));
    float _1792;
    float _1794;
    float _1796;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1759 = fma(_966, cbModelParam._m0[13u].z, fma(_962, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _958)) + cbModelParam._m0[13u].w;
        float _1763 = fma(_966, cbModelParam._m0[14u].z, fma(_962, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _958)) + cbModelParam._m0[14u].w;
        float _1767 = fma(_966, cbModelParam._m0[15u].z, fma(_962, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _958)) + cbModelParam._m0[15u].w;
        float _1770 = fma(_904, cbModelParam._m0[13u].z, fma(_903, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _902));
        float _1773 = fma(_904, cbModelParam._m0[14u].z, fma(_903, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _902));
        float _1776 = fma(_904, cbModelParam._m0[15u].z, fma(_903, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _902));
        float _1804;
        if (_1770 > 0.0)
        {
            _1804 = abs((1.0 - _1759) / _1770);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1770 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1759 + 1.0) / _1770);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1804 = frontier_phi_14_12_ladder;
        }
        float _2009;
        if (_1773 > 0.0)
        {
            _2009 = abs((1.0 - _1763) / _1773);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1763 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2009 = frontier_phi_23_19_ladder;
        }
        float _2263;
        if (_1776 > 0.0)
        {
            _2263 = abs((1.0 - _1767) / _1776);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1767 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2263 = frontier_phi_35_30_ladder;
        }
        float _2265 = isnan(_2009) ? _1804 : (isnan(_1804) ? _2009 : min(_1804, _2009));
        float _2266 = isnan(_2263) ? _2265 : (isnan(_2265) ? _2263 : min(_2265, _2263));
        float _2270 = (_2266 * _1770) + _1759;
        float _2271 = (_2266 * _1773) + _1763;
        float _2272 = (_2266 * _1776) + _1767;
        float _2273 = _2266 * 9.9999997473787516355514526367188e-05;
        float _2275 = (-1.0) - _2273;
        float _2277 = _2273 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2272 > _2277) || ((_2272 < _2275) || ((_2271 > _2277) || ((_2271 < _2275) || ((_2270 < _2275) || (_2270 > _2277))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2400 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2272, cbModelParam._m0[9u].z, fma(_2271, cbModelParam._m0[9u].y, _2270 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2272, cbModelParam._m0[10u].z, fma(_2271, cbModelParam._m0[10u].y, _2270 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2272, cbModelParam._m0[11u].z, fma(_2271, cbModelParam._m0[11u].y, _2270 * cbModelParam._m0[11u].x))), _1712);
            frontier_phi_13_35_ladder = _2400.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2400.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2400.x * cbModelParam._m0[1u].y;
        }
        _1792 = frontier_phi_13_35_ladder_2;
        _1794 = frontier_phi_13_35_ladder_1;
        _1796 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1780 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_902, _903, _904), _1712);
        _1792 = _1780.x * cbModelParam._m0[1u].y;
        _1794 = _1780.y * cbModelParam._m0[1u].y;
        _1796 = _1780.z * cbModelParam._m0[1u].y;
    }
    float _1800 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _762);
    float _1801 = isnan(_1800) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1800 : min(cbModelParam._m0[25u].w, _1800));
    float _1892;
    float _1894;
    float _1896;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1856 = fma(_966, cbModelParam._m0[21u].z, fma(_962, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _958)) + cbModelParam._m0[21u].w;
        float _1860 = fma(_966, cbModelParam._m0[22u].z, fma(_962, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _958)) + cbModelParam._m0[22u].w;
        float _1864 = fma(_966, cbModelParam._m0[23u].z, fma(_962, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _958)) + cbModelParam._m0[23u].w;
        float _1867 = fma(_904, cbModelParam._m0[21u].z, fma(_903, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _902));
        float _1870 = fma(_904, cbModelParam._m0[22u].z, fma(_903, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _902));
        float _1873 = fma(_904, cbModelParam._m0[23u].z, fma(_903, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _902));
        float _2014;
        if (_1867 > 0.0)
        {
            _2014 = abs((1.0 - _1856) / _1867);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1867 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1856 + 1.0) / _1867);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2014 = frontier_phi_25_21_ladder;
        }
        float _2290;
        if (_1870 > 0.0)
        {
            _2290 = abs((1.0 - _1860) / _1870);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1870 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1860 + 1.0) / _1870);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2290 = frontier_phi_37_32_ladder;
        }
        float _2503;
        if (_1873 > 0.0)
        {
            _2503 = abs((1.0 - _1864) / _1873);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1864 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2503 = frontier_phi_46_43_ladder;
        }
        float _2505 = isnan(_2290) ? _2014 : (isnan(_2014) ? _2290 : min(_2014, _2290));
        float _2506 = isnan(_2503) ? _2505 : (isnan(_2505) ? _2503 : min(_2505, _2503));
        float _2510 = (_2506 * _1867) + _1856;
        float _2511 = (_2506 * _1870) + _1860;
        float _2512 = (_2506 * _1873) + _1864;
        float _2513 = _2506 * 9.9999997473787516355514526367188e-05;
        float _2514 = (-1.0) - _2513;
        float _2516 = _2513 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2512 > _2516) || ((_2512 < _2514) || ((_2511 > _2516) || ((_2511 < _2514) || ((_2510 < _2514) || (_2510 > _2516))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2742 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2512, cbModelParam._m0[17u].z, fma(_2511, cbModelParam._m0[17u].y, _2510 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2512, cbModelParam._m0[18u].z, fma(_2511, cbModelParam._m0[18u].y, _2510 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2512, cbModelParam._m0[19u].z, fma(_2511, cbModelParam._m0[19u].y, _2510 * cbModelParam._m0[19u].x))), _1801);
            frontier_phi_22_46_ladder = _2742.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2742.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2742.x * cbModelParam._m0[1u].z;
        }
        _1892 = frontier_phi_22_46_ladder_2;
        _1894 = frontier_phi_22_46_ladder_1;
        _1896 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1876 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_902, _903, _904), _1801);
        _1892 = _1876.x * cbModelParam._m0[1u].z;
        _1894 = _1876.y * cbModelParam._m0[1u].z;
        _1896 = _1876.z * cbModelParam._m0[1u].z;
    }
    float _1909 = (((_929 * _880) + _930) * _894) * ((cbModelParam._m0[1u].w * (_1892 - _1792)) + _1792);
    float _1911 = (((_929 * _881) + _930) * _894) * ((cbModelParam._m0[1u].w * (_1894 - _1794)) + _1794);
    float _1913 = (((_929 * _882) + _930) * _894) * ((cbModelParam._m0[1u].w * (_1896 - _1796)) + _1796);
    float _1916 = fma(_1913, cbSceneParam._m0[89u].z, fma(_1911, cbSceneParam._m0[89u].y, _1909 * cbSceneParam._m0[89u].x));
    float _1919 = fma(_1913, cbSceneParam._m0[90u].z, fma(_1911, cbSceneParam._m0[90u].y, _1909 * cbSceneParam._m0[90u].x));
    float _1922 = fma(_1913, cbSceneParam._m0[91u].z, fma(_1911, cbSceneParam._m0[91u].y, _1909 * cbSceneParam._m0[91u].x));
    uvec4 _1932 = floatBitsToUint(cbInstanceData._m0[_786 + 5u]);
    uint _1934 = _1932.x * 14u;
    uint _1935 = _1934 + 13u;
    float _1942 = _894 + (-1.0);
    float _1947 = (cbLight._m0[_1935].x * _1942) + 1.0;
    float _1948 = (cbLight._m0[_1935].y * _1942) + 1.0;
    float _1949 = (cbLight._m0[_1935].z * _1942) + 1.0;
    float _1950 = (cbLight._m0[_1935].w * _1942) + 1.0;
    uint _1951 = _1934 + 5u;
    float _1957 = isnan(1.0) ? _1948 : (isnan(_1948) ? 1.0 : min(_1948, 1.0));
    uint _1961 = _1934 + 4u;
    float _1968 = isnan(1.0) ? _1947 : (isnan(_1947) ? 1.0 : min(_1947, 1.0));
    uint _1972 = _1934 | 1u;
    float _1983 = dot(vec3(cbLight._m0[_1934].xyz), vec3(_607, _608, _609));
    float _1986 = dot(vec3(cbLight._m0[_1972].xyz), vec3(_607, _608, _609));
    float _4191 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
    float _4202 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
    float _1991 = (isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * 0.3183098733425140380859375;
    float _1993 = (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0))) * 0.3183098733425140380859375;
    float _2000 = ((cbLight._m0[_1951].x * _1957) * _1993) + ((cbLight._m0[_1961].x * _1968) * _1991);
    float _2001 = ((_1957 * cbLight._m0[_1951].y) * _1993) + ((_1968 * cbLight._m0[_1961].y) * _1991);
    float _2002 = ((_1957 * cbLight._m0[_1951].z) * _1993) + ((_1968 * cbLight._m0[_1961].z) * _1991);
    uvec4 _2006 = floatBitsToUint(cbLight._m0[_1934 + 12u]);
    bool _2008 = _2006.x == 0u;
    float _2019;
    float _2021;
    float _2023;
    if (_2008)
    {
        _2019 = _2000;
        _2021 = _2001;
        _2023 = _2002;
    }
    else
    {
        uint _2027 = _1934 + 6u;
        float _2043 = (dot(vec3(cbLight._m0[_1934 + 2u].xyz), vec3(_607, _608, _609)) * 0.5) + 0.5;
        float _2044 = _2043 * _2043;
        float _4213 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
        float _2045 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _2046 = isnan(1.0) ? _1949 : (isnan(_1949) ? 1.0 : min(_1949, 1.0));
        _2019 = (((cbLight._m0[_2027].x * 0.3183098733425140380859375) * _2045) * _2046) + _2000;
        _2021 = (((cbLight._m0[_2027].y * 0.3183098733425140380859375) * _2045) * _2046) + _2001;
        _2023 = (((cbLight._m0[_2027].z * 0.3183098733425140380859375) * _2045) * _2046) + _2002;
    }
    bool _2026 = _2006.y == 0u;
    float _2064;
    float _2066;
    float _2068;
    if (_2026)
    {
        _2064 = _2019;
        _2066 = _2021;
        _2068 = _2023;
    }
    else
    {
        uint _2234 = _1934 + 7u;
        float _2250 = (dot(vec3(cbLight._m0[_1934 + 3u].xyz), vec3(_607, _608, _609)) * 0.5) + 0.5;
        float _2251 = _2250 * _2250;
        float _4229 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2252 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _2253 = isnan(1.0) ? _1950 : (isnan(_1950) ? 1.0 : min(_1950, 1.0));
        _2064 = (((cbLight._m0[_2234].x * 0.3183098733425140380859375) * _2252) * _2253) + _2019;
        _2066 = (((cbLight._m0[_2234].y * 0.3183098733425140380859375) * _2252) * _2253) + _2021;
        _2068 = (((cbLight._m0[_2234].z * 0.3183098733425140380859375) * _2252) * _2253) + _2023;
    }
    uint _2071 = _1934 + 8u;
    float _2084 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1934].w)) * _762) * 0.949999988079071044921875);
    float _2085 = _2084 * _2084;
    float _2086 = cbLight._m0[_1934].x + _677;
    float _2087 = cbLight._m0[_1934].y + _678;
    float _2088 = cbLight._m0[_1934].z + _679;
    float _2092 = inversesqrt(dot(vec3(_2086, _2087, _2088), vec3(_2086, _2087, _2088)));
    float _2093 = _2092 * _2086;
    float _2094 = _2092 * _2087;
    float _2095 = _2092 * _2088;
    float _2096 = dot(vec3(_607, _608, _609), vec3(cbLight._m0[_1934].xyz));
    float _4245 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2099 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
    float _4256 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _2100 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
    float _2101 = dot(vec3(_607, _608, _609), vec3(_2093, _2094, _2095));
    float _4267 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
    float _2104 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
    float _2105 = dot(vec3(cbLight._m0[_1934].xyz), vec3(_2093, _2094, _2095));
    float _4278 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2109 = _2085 * _2085;
    float _2113 = ((_2104 * _2104) * (_2109 + (-1.0))) + 1.0;
    float _2121 = exp2(log2(1.0 - (isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0)))) * 5.0);
    float _2122 = 0.959999978542327880859375 - _877;
    float _2124 = 0.959999978542327880859375 - _878;
    float _2125 = 0.959999978542327880859375 - _879;
    float _2132 = 1.0 - _2085;
    float _2143 = (0.5 / (((_2100 * ((_2099 * _2132) + _2085)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2132) + _2085) * _2099))) * _2099;
    float _4289 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
    float _2145 = (isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0))) * (_2109 / ((_2113 * _2113) * 3.141590118408203125));
    uint _2156 = _1934 + 9u;
    float _2167 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1972].w)) * _762) * 0.949999988079071044921875);
    float _2168 = _2167 * _2167;
    float _2169 = cbLight._m0[_1972].x + _677;
    float _2170 = cbLight._m0[_1972].y + _678;
    float _2171 = cbLight._m0[_1972].z + _679;
    float _2175 = inversesqrt(dot(vec3(_2169, _2170, _2171), vec3(_2169, _2170, _2171)));
    float _2176 = _2175 * _2169;
    float _2177 = _2175 * _2170;
    float _2178 = _2175 * _2171;
    float _2179 = dot(vec3(_607, _608, _609), vec3(cbLight._m0[_1972].xyz));
    float _4300 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _2182 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
    float _2183 = dot(vec3(_607, _608, _609), vec3(_2176, _2177, _2178));
    float _4311 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
    float _2186 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
    float _2187 = dot(vec3(cbLight._m0[_1972].xyz), vec3(_2176, _2177, _2178));
    float _4322 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
    float _2191 = _2168 * _2168;
    float _2195 = ((_2186 * _2186) * (_2191 + (-1.0))) + 1.0;
    float _2202 = exp2(log2(1.0 - (isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0)))) * 5.0);
    float _2209 = 1.0 - _2168;
    float _2219 = (0.5 / (((_2100 * ((_2182 * _2209) + _2168)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2209) + _2168) * _2182))) * _2182;
    float _4333 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
    float _2221 = (isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0))) * (_2191 / ((_2195 * _2195) * 3.141590118408203125));
    float _2231 = (((((_2202 * _2122) + _880) * cbLight._m0[_2156].x) * _2221) * _1957) + (((((_2121 * _2122) + _880) * cbLight._m0[_2071].x) * _2145) * _1968);
    float _2232 = (((((_2202 * _2124) + _881) * cbLight._m0[_2156].y) * _2221) * _1957) + (((((_2121 * _2124) + _881) * cbLight._m0[_2071].y) * _2145) * _1968);
    float _2233 = (((((_2202 * _2125) + _882) * cbLight._m0[_2156].z) * _2221) * _1957) + (((((_2121 * _2125) + _882) * cbLight._m0[_2071].z) * _2145) * _1968);
    float _2295;
    float _2297;
    float _2299;
    if (_2008)
    {
        _2295 = _2231;
        _2297 = _2232;
        _2299 = _2233;
    }
    else
    {
        uint _2301 = _1934 + 2u;
        uint _2305 = _1934 + 10u;
        float _2319 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2301].w)) * _762) * 0.949999988079071044921875);
        float _2320 = _2319 * _2319;
        float _2321 = cbLight._m0[_2301].x + _677;
        float _2322 = cbLight._m0[_2301].y + _678;
        float _2323 = cbLight._m0[_2301].z + _679;
        float _2327 = inversesqrt(dot(vec3(_2321, _2322, _2323), vec3(_2321, _2322, _2323)));
        float _2328 = _2327 * _2321;
        float _2329 = _2327 * _2322;
        float _2330 = _2327 * _2323;
        float _2331 = dot(vec3(_607, _608, _609), vec3(cbLight._m0[_2301].xyz));
        float _4344 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
        float _2334 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _2335 = dot(vec3(_607, _608, _609), vec3(_2328, _2329, _2330));
        float _4355 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
        float _2338 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _2339 = dot(vec3(cbLight._m0[_2301].xyz), vec3(_2328, _2329, _2330));
        float _4366 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
        float _2343 = _2320 * _2320;
        float _2347 = ((_2338 * _2338) * (_2343 + (-1.0))) + 1.0;
        float _2354 = exp2(log2(1.0 - (isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0)))) * 5.0);
        float _2361 = 1.0 - _2320;
        float _2371 = (0.5 / (((_2100 * ((_2334 * _2361) + _2320)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2361) + _2320) * _2334))) * _2334;
        float _4377 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
        float _2373 = (isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0))) * (_2343 / ((_2347 * _2347) * 3.141590118408203125));
        float _2374 = isnan(1.0) ? _1949 : (isnan(_1949) ? 1.0 : min(_1949, 1.0));
        _2295 = (((((_2354 * _2122) + _880) * cbLight._m0[_2305].x) * _2373) * _2374) + _2231;
        _2297 = (((((_2354 * _2124) + _881) * cbLight._m0[_2305].y) * _2373) * _2374) + _2232;
        _2299 = (((((_2354 * _2125) + _882) * cbLight._m0[_2305].z) * _2373) * _2374) + _2233;
    }
    float _2409;
    float _2411;
    float _2413;
    if (_2026)
    {
        _2409 = _2295;
        _2411 = _2297;
        _2413 = _2299;
    }
    else
    {
        uint _2420 = _1934 + 3u;
        uint _2424 = _1934 + 11u;
        float _2438 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2420].w)) * _762) * 0.949999988079071044921875);
        float _2439 = _2438 * _2438;
        float _2440 = cbLight._m0[_2420].x + _677;
        float _2441 = cbLight._m0[_2420].y + _678;
        float _2442 = cbLight._m0[_2420].z + _679;
        float _2446 = inversesqrt(dot(vec3(_2440, _2441, _2442), vec3(_2440, _2441, _2442)));
        float _2447 = _2446 * _2440;
        float _2448 = _2446 * _2441;
        float _2449 = _2446 * _2442;
        float _2450 = dot(vec3(_607, _608, _609), vec3(cbLight._m0[_2420].xyz));
        float _4393 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
        float _2453 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _2454 = dot(vec3(_607, _608, _609), vec3(_2447, _2448, _2449));
        float _4404 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
        float _2457 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _2458 = dot(vec3(cbLight._m0[_2420].xyz), vec3(_2447, _2448, _2449));
        float _4415 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
        float _2462 = _2439 * _2439;
        float _2466 = ((_2457 * _2457) * (_2462 + (-1.0))) + 1.0;
        float _2473 = exp2(log2(1.0 - (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0)))) * 5.0);
        float _2480 = 1.0 - _2439;
        float _2490 = (0.5 / (((_2100 * ((_2453 * _2480) + _2439)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2480) + _2439) * _2453))) * _2453;
        float _4426 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        float _2492 = (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_2462 / ((_2466 * _2466) * 3.141590118408203125));
        float _2493 = isnan(1.0) ? _1950 : (isnan(_1950) ? 1.0 : min(_1950, 1.0));
        _2409 = (((((_2473 * _2122) + _880) * cbLight._m0[_2424].x) * _2492) * _2493) + _2295;
        _2411 = (((((_2473 * _2124) + _881) * cbLight._m0[_2424].y) * _2492) * _2493) + _2297;
        _2413 = (((((_2473 * _2125) + _882) * cbLight._m0[_2424].z) * _2492) * _2493) + _2299;
    }
    float _2628;
    float _2630;
    float _2632;
    float _2634;
    float _2636;
    float _2638;
    if (_1932.y == 0u)
    {
        float _2568 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2569 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2568;
        float _2570 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2568;
        float _2571 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2568;
        uvec4 _2583 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2584 = _2583.x;
        uint _2595 = uint((float(_2583.y) * floor(float(uint(cbSceneParam._m0[85u].y * _685) / _2584))) + floor(float(uint(cbSceneParam._m0[85u].x * _684) / _2584)));
        float _2605 = (log2(_2571 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2606 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
        uint _2609 = uint(isnan(14.0) ? _2606 : (isnan(_2606) ? 14.0 : min(_2606, 14.0)));
        uvec4 _2614 = texelFetch(g_lightClusterGridBuffer, int(((_2609 << 2u) + (_2595 << 6u)) >> 2u));
        uint _2615 = _2614.x;
        uint _2616 = _2583.z;
        float _2747;
        float _2749;
        float _2751;
        float _2753;
        float _2755;
        float _2757;
        if (((((1u << ((_2616 >> 4u) & 15u)) + 4294967295u) & _2615) == 0u) || ((_2616 & 240u) == 0u))
        {
            _2747 = 0.0;
            _2749 = 0.0;
            _2751 = 0.0;
            _2753 = 0.0;
            _2755 = 0.0;
            _2757 = 0.0;
        }
        else
        {
            float _2748;
            float _2750;
            float _2752;
            float _2754;
            float _2756;
            float _2758;
            float _2900 = 0.0;
            float _2901 = 0.0;
            float _2902 = 0.0;
            float _2903 = 0.0;
            float _2904 = 0.0;
            float _2905 = 0.0;
            uint _2906 = 0u;
            uint _2915;
            bool _2916;
            for (;;)
            {
                _2915 = texelFetch(g_lightClassification, int((((_2609 << 5u) + (_2595 << 9u)) + (_2906 << 2u)) >> 2u)).x;
                _2916 = _2915 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2916)
                {
                    frontier_phi_61_pred = _2900;
                    frontier_phi_61_pred_1 = _2905;
                    frontier_phi_61_pred_2 = _2904;
                    frontier_phi_61_pred_3 = _2903;
                    frontier_phi_61_pred_4 = _2902;
                    frontier_phi_61_pred_5 = _2901;
                }
                else
                {
                    float _3024;
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    float _3029;
                    uint _3030;
                    _3024 = _2900;
                    _3025 = _2901;
                    _3026 = _2902;
                    _3027 = _2903;
                    _3028 = _2904;
                    _3029 = _2905;
                    _3030 = _2915;
                    float _2956;
                    float _2957;
                    float _2958;
                    float _2959;
                    float _2960;
                    float _2961;
                    for (;;)
                    {
                        uint _3034 = uint(findLSB(_3030)) + (_2906 << 5u);
                        uint _3031 = (_3030 + 4294967295u) & _3030;
                        uint _3036 = _3034 * 48u;
                        vec4 _3050 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 3u)).x));
                        uint _3056 = (_3034 * 48u) + 4u;
                        vec4 _3069 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3056)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 3u)).x));
                        uint _3075 = (_3034 * 48u) + 8u;
                        vec3 _3086 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3075)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 2u)).x));
                        float _3090 = _3050.x - _2569;
                        float _3091 = _3050.y - _2570;
                        float _3092 = _3050.z - _2571;
                        float _3093 = dot(vec3(_3090, _3091, _3092), vec3(_3090, _3091, _3092));
                        float _3096 = inversesqrt(_3093);
                        float _3097 = _3096 * _3090;
                        float _3098 = _3096 * _3091;
                        float _3099 = _3096 * _3092;
                        float _3100 = dot(vec3(_707, _710, _713), vec3(_3097, _3098, _3099));
                        float _3105 = 1.0 - (_3093 * _3050.w);
                        float _4452 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
                        float _3106 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
                        float _3107 = sqrt(_3093) * _3069.w;
                        float _3110 = 1.39999997615814208984375 / (_3107 + 1.39999997615814208984375);
                        float _3111 = _3110 * _3110;
                        float _3114 = ((1.0 - _3111) * _3100) + _3111;
                        float _3117 = _3107 * _3107;
                        float _3121 = ((isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0))) * _3106) / ((_3117 * 0.699999988079071044921875) + 1.0);
                        float _3125 = (-0.0) - _2569;
                        float _3126 = (-0.0) - _2570;
                        float _3127 = (-0.0) - _2571;
                        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
                        float _3132 = _3131 * _3125;
                        float _3133 = _3131 * _3126;
                        float _3134 = _3131 * _3127;
                        float _3142 = exp2(log2(1.0 / ((_3117 * 3.5) + 5.0)) * 0.25);
                        float _3143 = 1.0 - _910;
                        float _3150 = sqrt(1.0 - ((1.0 - (_3143 * _3143)) * (1.0 - (_3142 * _3142))));
                        float _3151 = _3150 * _3150;
                        float _3152 = _3151 * _3151;
                        float _3153 = _3132 + _3097;
                        float _3154 = _3133 + _3098;
                        float _3155 = _3134 + _3099;
                        float _3159 = inversesqrt(dot(vec3(_3153, _3154, _3155), vec3(_3153, _3154, _3155)));
                        float _3163 = dot(vec3(_707, _710, _713), vec3(_3132, _3133, _3134));
                        float _4468 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0));
                        float _3166 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
                        float _3167 = dot(vec3(_707, _710, _713), vec3(_3159 * _3153, _3159 * _3154, _3159 * _3155));
                        float _4479 = isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : max(_3167, 0.0));
                        float _3170 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
                        float _3174 = ((_3170 * _3170) * (_3152 + (-1.0))) + 1.0;
                        float _3175 = _3110 * _3151;
                        float _3176 = _3175 * _3175;
                        float _3179 = ((1.0 - _3176) * _3100) + _3176;
                        float _4490 = isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0));
                        float _3180 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
                        float _3181 = 1.0 - _3151;
                        float _3191 = (0.5 / (((_3180 * ((_3166 * _3181) + _3151)) + 9.9999999392252902907785028219223e-09) + (((_3180 * _3181) + _3151) * _3166))) * _3180;
                        float _4501 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0));
                        float _3202 = (((_3152 * 3.1415927410125732421875) * (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)))) / ((_3174 * _3174) * ((_3117 * 2.1991131305694580078125) + 3.141590118408203125))) * _3106;
                        _2959 = (_3121 * _3069.x) + _3027;
                        _2960 = (_3121 * _3069.y) + _3028;
                        _2961 = (_3121 * _3069.z) + _3029;
                        _2956 = (_3202 * _3086.x) + _3024;
                        _2957 = (_3202 * _3086.y) + _3025;
                        _2958 = (_3202 * _3086.z) + _3026;
                        if (_3031 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3024 = _2956;
                            _3025 = _2957;
                            _3026 = _2958;
                            _3027 = _2959;
                            _3028 = _2960;
                            _3029 = _2961;
                            _3030 = _3031;
                        }
                    }
                    frontier_phi_61_pred = _2956;
                    frontier_phi_61_pred_1 = _2961;
                    frontier_phi_61_pred_2 = _2960;
                    frontier_phi_61_pred_3 = _2959;
                    frontier_phi_61_pred_4 = _2958;
                    frontier_phi_61_pred_5 = _2957;
                }
                _2748 = frontier_phi_61_pred;
                _2758 = frontier_phi_61_pred_1;
                _2756 = frontier_phi_61_pred_2;
                _2754 = frontier_phi_61_pred_3;
                _2752 = frontier_phi_61_pred_4;
                _2750 = frontier_phi_61_pred_5;
                uint _2907 = _2906 + 1u;
                if (_2907 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2900 = _2748;
                    _2901 = _2750;
                    _2902 = _2752;
                    _2903 = _2754;
                    _2904 = _2756;
                    _2905 = _2758;
                    _2906 = _2907;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2747 = _2748;
            _2749 = _2750;
            _2751 = _2752;
            _2753 = _2754;
            _2755 = _2756;
            _2757 = _2758;
        }
        uvec4 _2761 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2762 = _2761.z;
        uint _2764 = (_2762 >> 8u) & 15u;
        float _2868;
        float _2870;
        float _2872;
        float _2874;
        float _2876;
        float _2878;
        if (((4294967295u << _2764) & _2615) == 0u)
        {
            _2868 = _2747;
            _2870 = _2749;
            _2872 = _2751;
            _2874 = _2753;
            _2876 = _2755;
            _2878 = _2757;
        }
        else
        {
            float _2893 = inversesqrt(dot(vec3(_2569, _2570, _2571), vec3(_2569, _2570, _2571)));
            float _2894 = _2893 * _2569;
            float _2895 = _2893 * _2570;
            float _2896 = _2893 * _2571;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2764 < ((_2762 >> 12u) & 15u))
            {
                float _2869;
                float _2871;
                float _2873;
                float _2875;
                float _2877;
                float _2879;
                float _3007 = _2747;
                float _3008 = _2749;
                float _3009 = _2751;
                float _3010 = _2753;
                float _3011 = _2755;
                float _3012 = _2757;
                uint _3013 = _2764;
                uint _3022;
                bool _3023;
                for (;;)
                {
                    _3022 = texelFetch(g_lightClassification, int((((_2609 << 5u) + (_2595 << 9u)) + (_3013 << 2u)) >> 2u)).x;
                    _3023 = _3022 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3023)
                    {
                        frontier_phi_67_pred = _3010;
                        frontier_phi_67_pred_1 = _3011;
                        frontier_phi_67_pred_2 = _3012;
                        frontier_phi_67_pred_3 = _3009;
                        frontier_phi_67_pred_4 = _3008;
                        frontier_phi_67_pred_5 = _3007;
                    }
                    else
                    {
                        float _3207;
                        float _3208;
                        float _3209;
                        float _3210;
                        float _3211;
                        float _3212;
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3506;
                        float _3507;
                        float _3220 = _3007;
                        float _3221 = _3008;
                        float _3222 = _3009;
                        float _3223 = _3010;
                        float _3224 = _3011;
                        float _3225 = _3012;
                        uint _3226 = _3022;
                        uint _3227;
                        vec4 _3252;
                        float _3253;
                        vec4 _3268;
                        vec3 _3280;
                        vec4 _3295;
                        vec4 _3311;
                        float _3358;
                        bool _3359;
                        for (;;)
                        {
                            uint _3237 = ((_3013 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3226));
                            _3227 = (_3226 + 4294967295u) & _3226;
                            uint _3239 = _3237 * 40u;
                            _3252 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 3u)).x));
                            _3253 = _3252.w;
                            uint _3255 = (_3237 * 40u) + 4u;
                            _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            uint _3270 = (_3237 * 40u) + 8u;
                            _3280 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3270)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 2u)).x));
                            uint _3282 = (_3237 * 40u) + 16u;
                            _3295 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3282)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 3u)).x));
                            uint _3298 = (_3237 * 40u) + 20u;
                            _3311 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3298)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 3u)).x));
                            uint _3314 = (_3237 * 40u) + 24u;
                            vec4 _3327 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3314)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 3u)).x));
                            uint _3333 = (_3237 * 40u) + 28u;
                            vec4 _3346 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3333)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 3u)).x));
                            _3358 = fma(_2571, _3346.z, fma(_2570, _3346.y, _3346.x * _2569)) + _3346.w;
                            _3359 = !((fma(_2571, _3327.z, fma(_2570, _3327.y, _3327.x * _2569)) + _3327.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3359)
                            {
                                float _3386 = _3252.x - _2569;
                                float _3387 = _3252.y - _2570;
                                float _3388 = _3252.z - _2571;
                                float _3389 = dot(vec3(_3386, _3387, _3388), vec3(_3386, _3387, _3388));
                                float _3392 = inversesqrt(_3389);
                                float _3393 = _3392 * _3386;
                                float _3394 = _3392 * _3387;
                                float _3395 = _3392 * _3388;
                                float _3399 = 1.0 - (_3389 / (_3253 * _3253));
                                float _4512 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                                float _3400 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
                                float _3404 = sqrt(_3389) * _3268.w;
                                float _3406 = 1.39999997615814208984375 / (_3404 + 1.39999997615814208984375);
                                float _3407 = _3406 * _3406;
                                float _3410 = ((1.0 - _3407) * dot(vec3(_3393, _3394, _3395), vec3(_707, _710, _713))) + _3407;
                                float _3413 = _3404 * _3404;
                                float _3417 = (fma(_2571, _3295.z, fma(_2570, _3295.y, _3295.x * _2569)) + _3295.w) / _3358;
                                float _3418 = (fma(_2571, _3311.z, fma(_2570, _3311.y, _3311.x * _2569)) + _3311.w) / _3358;
                                float _3422 = 1.0 - dot(vec2(_3417, _3418), vec2(_3417, _3418));
                                float _4528 = isnan(0.0) ? _3422 : (isnan(_3422) ? 0.0 : max(_3422, 0.0));
                                float _3423 = isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0));
                                float _3424 = _3423 * (((isnan(0.0) ? _3410 : (isnan(_3410) ? 0.0 : max(_3410, 0.0))) * _3400) / ((_3413 * 0.699999988079071044921875) + 1.0));
                                float _3436 = exp2(log2(1.0 / ((_3413 * 3.5) + 5.0)) * 0.25);
                                float _3437 = 1.0 - _910;
                                float _3444 = sqrt(1.0 - ((1.0 - (_3437 * _3437)) * (1.0 - (_3436 * _3436))));
                                float _3445 = _3444 * _3444;
                                float _3446 = _3445 * _3445;
                                float _3447 = _3393 - _2894;
                                float _3448 = _3394 - _2895;
                                float _3449 = _3395 - _2896;
                                float _3453 = inversesqrt(dot(vec3(_3447, _3448, _3449), vec3(_3447, _3448, _3449)));
                                float _3457 = dot(vec3(_707, _710, _713), vec3((-0.0) - _2894, (-0.0) - _2895, (-0.0) - _2896));
                                float _4539 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0));
                                float _3460 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
                                float _3461 = dot(vec3(_707, _710, _713), vec3(_3453 * _3447, _3453 * _3448, _3453 * _3449));
                                float _4550 = isnan(0.0) ? _3461 : (isnan(_3461) ? 0.0 : max(_3461, 0.0));
                                float _3464 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
                                float _3468 = ((_3464 * _3464) * (_3446 + (-1.0))) + 1.0;
                                float _3469 = _3406 * _3445;
                                float _3470 = _3469 * _3469;
                                float _3476 = ((1.0 - _3470) * dot(vec3(_707, _710, _713), vec3(_3393, _3394, _3395))) + _3470;
                                float _4561 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                                float _3477 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
                                float _3478 = 1.0 - _3445;
                                float _3488 = (0.5 / (((_3477 * ((_3460 * _3478) + _3445)) + 9.9999999392252902907785028219223e-09) + (((_3477 * _3478) + _3445) * _3460))) * _3477;
                                float _4572 = isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0));
                                float _3498 = (_3423 * _3400) * (((_3446 * 3.1415927410125732421875) * (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0)))) / ((_3468 * _3468) * ((_3413 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3498 * _3280.x;
                                frontier_phi_73_pred_1 = _3498 * _3280.y;
                                frontier_phi_73_pred_2 = _3424 * _3268.z;
                                frontier_phi_73_pred_3 = _3424 * _3268.y;
                                frontier_phi_73_pred_4 = _3424 * _3268.x;
                                frontier_phi_73_pred_5 = _3498 * _3280.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3502 = frontier_phi_73_pred;
                            _3503 = frontier_phi_73_pred_1;
                            _3507 = frontier_phi_73_pred_2;
                            _3506 = frontier_phi_73_pred_3;
                            _3505 = frontier_phi_73_pred_4;
                            _3504 = frontier_phi_73_pred_5;
                            _3210 = _3505 + _3223;
                            _3211 = _3506 + _3224;
                            _3212 = _3507 + _3225;
                            _3207 = _3502 + _3220;
                            _3208 = _3503 + _3221;
                            _3209 = _3504 + _3222;
                            if (_3227 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3220 = _3207;
                                _3221 = _3208;
                                _3222 = _3209;
                                _3223 = _3210;
                                _3224 = _3211;
                                _3225 = _3212;
                                _3226 = _3227;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3210;
                        frontier_phi_67_pred_1 = _3211;
                        frontier_phi_67_pred_2 = _3212;
                        frontier_phi_67_pred_3 = _3209;
                        frontier_phi_67_pred_4 = _3208;
                        frontier_phi_67_pred_5 = _3207;
                    }
                    _2875 = frontier_phi_67_pred;
                    _2877 = frontier_phi_67_pred_1;
                    _2879 = frontier_phi_67_pred_2;
                    _2873 = frontier_phi_67_pred_3;
                    _2871 = frontier_phi_67_pred_4;
                    _2869 = frontier_phi_67_pred_5;
                    uint _3014 = _3013 + 1u;
                    if (_3014 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3007 = _2869;
                        _3008 = _2871;
                        _3009 = _2873;
                        _3010 = _2875;
                        _3011 = _2877;
                        _3012 = _2879;
                        _3013 = _3014;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2877;
                frontier_phi_55_56_ladder_1 = _2879;
                frontier_phi_55_56_ladder_2 = _2875;
                frontier_phi_55_56_ladder_3 = _2873;
                frontier_phi_55_56_ladder_4 = _2871;
                frontier_phi_55_56_ladder_5 = _2869;
            }
            else
            {
                frontier_phi_55_56_ladder = _2755;
                frontier_phi_55_56_ladder_1 = _2757;
                frontier_phi_55_56_ladder_2 = _2753;
                frontier_phi_55_56_ladder_3 = _2751;
                frontier_phi_55_56_ladder_4 = _2749;
                frontier_phi_55_56_ladder_5 = _2747;
            }
            _2868 = frontier_phi_55_56_ladder_5;
            _2870 = frontier_phi_55_56_ladder_4;
            _2872 = frontier_phi_55_56_ladder_3;
            _2874 = frontier_phi_55_56_ladder_2;
            _2876 = frontier_phi_55_56_ladder;
            _2878 = frontier_phi_55_56_ladder_1;
        }
        float _2883 = isnan(1.0) ? _894 : (isnan(_894) ? 1.0 : min(_894, 1.0));
        _2628 = (_2883 * _2874) + _2064;
        _2630 = (_2883 * _2876) + _2066;
        _2632 = (_2883 * _2878) + _2068;
        _2634 = ((_2868 * _880) * _2883) + _2409;
        _2636 = ((_2870 * _881) * _2883) + _2411;
        _2638 = ((_2872 * _882) * _2883) + _2413;
    }
    else
    {
        _2628 = _2064;
        _2630 = _2066;
        _2632 = _2068;
        _2634 = _2409;
        _2636 = _2411;
        _2638 = _2413;
    }
    uint _2644 = _787 + uint(cbMatDynParam._m0[0u].w);
    float _2650 = cbInstanceData._m0[_2644].x * (_575 ? cbMtdParam._m0[17u].w : cbMtdParam._m0[10u].w);
    float _2651 = cbInstanceData._m0[_2644].y * (_575 ? cbMtdParam._m0[18u].x : cbMtdParam._m0[11u].x);
    float _2652 = cbInstanceData._m0[_2644].z * (_575 ? cbMtdParam._m0[18u].y : cbMtdParam._m0[11u].y);
    float _4588 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _4599 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _4610 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _4621 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _2670 = (((isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0))) * (_2628 + ((isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))) * _894))) + ((_2634 + ((isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0))) * _1701)) * cbPerFrame._m0[3u].x)) + _2650;
    float _2672 = (_2651 + ((_2636 + ((isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0))) * _1701)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * (_2630 + ((isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0))) * _894)));
    float _2674 = (_2652 + ((_2638 + ((isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) * _1701)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0))) * (_2632 + ((isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0))) * _894)));
    float _4647 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2687 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
    float _2692 = cbInstanceData._m0[_786 + 6u].w * (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0)));
    float _2697 = _684 / cbSceneParam._m0[86u].x;
    float _2698 = _685 / cbSceneParam._m0[86u].y;
    vec4 _2712 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2697, _2698, (log2((isnan(cbSceneParam._m0[77u].w) ? _620 : (isnan(_620) ? cbSceneParam._m0[77u].w : min(_620, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2714 = _2712.x;
    float _2715 = _2712.y;
    float _2716 = _2712.z;
    float _2717 = _2712.w;
    float _2809;
    float _2811;
    float _2813;
    float _2815;
    if (_620 > cbSceneParam._m0[78u].w)
    {
        float _2772 = isnan(_620) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _620 : min(cbSceneParam._m0[80u].w, _620));
        float _2773 = _2772 / _620;
        float _2784 = _2773 * _670;
        float _2785 = _671 * _2773;
        float _2786 = (-0.0) - _2785;
        float _2787 = _2773 * _672;
        float _2789 = (cbSceneParam._m0[77u].w * _2786) / _2772;
        float _2790 = _2789 + cbSceneParam._m0[79u].w;
        float _2791 = cbSceneParam._m0[79u].w - _2785;
        float _2797 = sqrt(((_2784 * _2784) + (_2785 * _2785)) + (_2787 * _2787));
        float _2800 = (1.0 - (cbSceneParam._m0[77u].w / _2772)) * _2797;
        float _2805 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2807 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2969;
        if (abs((_2786 - _2789) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2969 = ((((_2790 > 0.0) ? exp2(_2805 * _2790) : (2.0 - exp2(_2807 * _2790))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2800;
        }
        else
        {
            float _2929 = 1.0 / cbSceneParam._m0[80u].x;
            float _2930 = isnan(_2791) ? _2790 : (isnan(_2790) ? _2791 : max(_2790, _2791));
            float _2931 = isnan(_2791) ? _2790 : (isnan(_2790) ? _2791 : min(_2790, _2791));
            float _2940 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : min(_2930, 0.0));
            float _2941 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : min(_2931, 0.0));
            _2969 = ((abs(_2797 / _2786) * cbSceneParam._m0[80u].y) * ((((_2940 - _2941) * 2.0) - ((exp2(_2805 * (isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0)))) - exp2(_2805 * (isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0))))) * _2929)) - ((exp2(_2807 * _2940) - exp2(_2807 * _2941)) * _2929))) + (_2800 * cbSceneParam._m0[80u].z);
        }
        vec4 _2971 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2697, _2698, 1.0), 0.0);
        float _2980 = exp2((_2969 * (-1.44269502162933349609375)) * (1.0 - _2971.w));
        float _2981 = log2(_2980);
        float _2997 = log2(_2717);
        _2809 = (exp2(_2997 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].x)) * _2971.x) / cbSceneParam._m0[78u].x)) + _2714;
        _2811 = (exp2(_2997 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].y)) * _2971.y) / cbSceneParam._m0[78u].y)) + _2715;
        _2813 = (exp2(_2997 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].z)) * _2971.z) / cbSceneParam._m0[78u].z)) + _2716;
        _2815 = _2980 * _2717;
    }
    else
    {
        _2809 = _2714;
        _2811 = _2715;
        _2813 = _2716;
        _2815 = _2717;
    }
    float _2827 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2828 = _2827 == 3.0;
    float _2829 = log2(_2815);
    float _2833 = exp2(_2829 * cbSceneParam._m0[78u].x);
    float _2834 = exp2(_2829 * cbSceneParam._m0[78u].y);
    float _2835 = exp2(_2829 * cbSceneParam._m0[78u].z);
    float _2836 = _2833 * (isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0)));
    float _2837 = _2834 * (isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0)));
    float _2838 = _2835 * (isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0)));
    float _2847 = (_2827 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2847 * (_2828 ? _2836 : (_2836 + (cbSceneParam._m0[72u].w * _2809)));
    SV_Target.y = _2847 * (_2828 ? _2837 : (_2837 + (cbSceneParam._m0[72u].w * _2811)));
    SV_Target.z = _2847 * (_2828 ? _2838 : (_2838 + (cbSceneParam._m0[72u].w * _2813)));
    SV_Target.w = _2692;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2650) * _2687) * _2833) * _2847;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2651) * _2687) * _2834) * _2847;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2652) * _2687) * _2835) * _2847;
    SV_Target_1.w = _2692;
}


