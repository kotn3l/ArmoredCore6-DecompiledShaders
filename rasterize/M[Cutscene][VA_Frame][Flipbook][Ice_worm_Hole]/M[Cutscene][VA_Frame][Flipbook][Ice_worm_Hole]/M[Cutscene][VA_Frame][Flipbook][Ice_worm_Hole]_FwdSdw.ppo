#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1273;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = cbMtdParam._m0[15u].y + TEXCOORD.x;
    float _249 = cbMtdParam._m0[15u].z + TEXCOORD.y;
    vec4 _262 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _248) + cbTextureTilingScale._m0[0u].z, (_249 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _268 = _262.x * cbMtdParam._m0[9u].w;
    float _269 = _262.y * cbMtdParam._m0[10u].x;
    float _270 = _262.z * cbMtdParam._m0[10u].y;
    float _284 = cbMtdParam._m0[17u].y + TEXCOORD.x;
    float _285 = cbMtdParam._m0[17u].z + TEXCOORD.y;
    vec4 _298 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _284) + cbTextureTilingScale._m0[5u].z, (_285 * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    uvec4 _315 = floatBitsToUint(cbMtdParam._m0[9u]);
    vec4 _329 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _331 = _329.x;
    float _342 = exp2(log2(((_315.z != 0u) ? (1.0 - _331) : _331) * cbMtdParam._m0[14u].w) * cbMtdParam._m0[15u].x);
    float _3923 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _350 = cbMtdParam._m0[16u].x * cbMtdParam._m0[15u].w;
    float _353 = (_350 + (-1.0)) * cbMtdParam._m0[14u].x;
    bool _355 = _315.y != 0u;
    float _367 = (cbMtdParam._m0[16u].w + cbMtdParam._m0[14u].y) + ((TEXCOORD.z - cbMtdParam._m0[16u].w) * cbMtdParam._m0[16u].y);
    float _369 = (cbMtdParam._m0[17u].x + cbMtdParam._m0[13u].w) + ((TEXCOORD.w - cbMtdParam._m0[17u].x) * cbMtdParam._m0[16u].z);
    float _3934 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _3945 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    uint _375 = uint(int(floor(_353)));
    uint _377 = _375 + 1u;
    uint _378 = uint(int(_350));
    uint _379 = _378 * 3u;
    uint _380 = _375 - _379 * (_375 / _379);
    uint _381 = _377 - _379 * (_377 / _379);
    float _384 = float(int(_380 - _378 * (_380 / _378)));
    float _388 = float(int(_381 - _378 * (_381 / _378)));
    float _392 = 1.0 / cbMtdParam._m0[15u].w;
    float _393 = 1.0 / cbMtdParam._m0[16u].x;
    float _394 = fract(_355 ? _367 : (isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0))));
    float _395 = fract(_355 ? _369 : (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))));
    vec4 _423 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_394 + (_384 - cbMtdParam._m0[15u].w * trunc(_384 / cbMtdParam._m0[15u].w))) * _392) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_395 + floor(_384 / cbMtdParam._m0[15u].w)) * _393) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _425 = _423.x;
    float _428 = ((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_394 + (_388 - cbMtdParam._m0[15u].w * trunc(_388 / cbMtdParam._m0[15u].w))) * _392) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_395 + floor(_388 / cbMtdParam._m0[15u].w)) * _393) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w)).x - _425) * fract(_353)) + _425;
    float _434 = exp2(log2(((_428 * (isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0)))) + _428) * cbMtdParam._m0[13u].x) * cbMtdParam._m0[13u].y);
    float _3956 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0));
    float _442 = (_435 * ((_298.x * cbMtdParam._m0[11u].w) - _268)) + _268;
    float _443 = (_435 * ((_298.y * cbMtdParam._m0[12u].x) - _269)) + _269;
    float _444 = (_435 * ((_298.z * cbMtdParam._m0[12u].y) - _270)) + _270;
    vec4 _454 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _456 = _454.x;
    bool _462 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _479 = ((_462 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _456)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _456))) - POSITION_1.w) / cbMtdParam._m0[13u].z;
    float _3967 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _480 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    float _3978 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _481 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    float _499 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _248) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _249) + cbTextureTilingScale._m0[2u].w)).x + cbMtdParam._m0[12u].w;
    float _521 = (((cbMtdParam._m0[14u].z - _499) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _284) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _285) + cbTextureTilingScale._m0[6u].w)).x) * _435) + _499;
    vec4 _533 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _248) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _249) + cbTextureTilingScale._m0[1u].w));
    float _535 = _533.x;
    float _536 = _533.y;
    float _537 = _533.z;
    vec4 _550 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _284) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _285) + cbTextureTilingScale._m0[7u].w));
    float _563 = ((_550.z - _537) * _435) + _537;
    float _567 = ((((_550.x - _535) * _435) + _535) * 2.0) + (-1.0);
    float _568 = ((((_550.y - _536) * _435) + _536) * 2.0) + (-1.0);
    float _569 = dot(vec2(_567, _568), vec2(_567, _568));
    float _3989 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _574 = sqrt(1.0 - (isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0))));
    bool _579 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _600 = fma(_574, _222 * NORMAL.x, fma(_568, _229 * TANGENT.x, (_215 * _207) * _567));
    float _603 = fma(_574, _222 * NORMAL.y, fma(_568, _229 * TANGENT.y, (_215 * _208) * _567));
    float _606 = fma(_574, _222 * NORMAL.z, fma(_568, _229 * TANGENT.z, (_215 * _209) * _567));
    float _610 = inversesqrt(dot(vec3(_600, _603, _606), vec3(_600, _603, _606)));
    float _611 = _610 * _600;
    float _612 = _610 * _603;
    float _613 = _610 * _606;
    float _4000 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _614 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _4011 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _615 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
    float _4022 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _616 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
    float _4033 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _617 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
    float _4044 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _618 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
    float _4055 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _619 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    float _624 = _462 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _664 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _674 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _664);
    float _675 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _664);
    float _676 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _664);
    float _680 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
    float _681 = _674 * _680;
    float _682 = _675 * _680;
    float _683 = _676 * _680;
    float _688 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _689 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _691 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _693 = _691.w;
    float _711 = fma(_613, cbSceneParam._m0[5u].z, fma(_612, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _611));
    float _714 = fma(_613, cbSceneParam._m0[6u].z, fma(_612, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _611));
    float _717 = fma(_613, cbSceneParam._m0[7u].z, fma(_612, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _611));
    vec4 _719 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _721 = _719.x;
    float _733 = (((_719.y - _615) + (_719.w * _615)) * cbMtdParam._m0[3u].x) + _615;
    vec4 _734 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _750 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_721 * _721)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _734.z;
    float _758 = (((cbMatDynParam._m0[15u].x - _619) * cbMatDynParam._m0[15u].w) * _750) + _619;
    float _766 = ((_750 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _733)) + _733;
    uint _790 = uint(roundEven(NORMAL.w)) * 13u;
    uint _791 = _790 + 9u;
    uint _792 = _791 + uint(cbMatDynParam._m0[0u].w);
    float _798 = (cbMtdParam._m0[0u].x * _616) * cbInstanceData._m0[_792].x;
    float _799 = (cbMtdParam._m0[0u].y * _617) * cbInstanceData._m0[_792].y;
    float _800 = (cbMtdParam._m0[0u].z * _618) * cbInstanceData._m0[_792].z;
    float _4066 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _801 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _4077 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _802 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    float _4088 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _803 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
    vec4 _804 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    vec4 _809 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _820 = (((_809.x - _758) + (_809.w * _758)) * cbMtdParam._m0[3u].x) + _758;
    float _833 = (cbMtdParam._m0[3u].x * (((_801 * _693) - _801) + _804.x)) + _801;
    float _834 = (cbMtdParam._m0[3u].x * (((_802 * _693) - _802) + _804.y)) + _802;
    float _835 = (cbMtdParam._m0[3u].x * (((_803 * _693) - _803) + _804.z)) + _803;
    float _849 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_758 * (_616 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_758 * (_617 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_758 * (_618 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y)).z;
    float _853 = _849 * cbMatDynParam._m0[13u].w;
    float _863 = (_853 * (cbMatDynParam._m0[13u].x - _833)) + _833;
    float _864 = (_853 * (cbMatDynParam._m0[13u].y - _834)) + _834;
    float _865 = (_853 * (cbMatDynParam._m0[13u].z - _835)) + _835;
    float _873 = ((_849 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _820)) + _820;
    float _874 = 1.0 - _873;
    float _875 = _874 * _863;
    float _876 = _874 * _864;
    float _877 = _874 * _865;
    float _881 = (_863 + (-0.039999999105930328369140625)) * _873;
    float _882 = (_864 + (-0.039999999105930328369140625)) * _873;
    float _883 = (_865 + (-0.039999999105930328369140625)) * _873;
    float _884 = _881 + 0.039999999105930328369140625;
    float _885 = _882 + 0.039999999105930328369140625;
    float _886 = _883 + 0.039999999105930328369140625;
    vec4 _895 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _688, cbSceneParam._m0[86u].y * _689));
    float _898 = _895.x * TEXCOORD_6;
    float _899 = dot(vec3(_611, _612, _613), vec3(_681, _682, _683));
    float _902 = _899 * 2.0;
    float _906 = (_902 * _611) - _681;
    float _907 = (_902 * _612) - _682;
    float _908 = (_902 * _613) - _683;
    float _912 = abs(dot(vec3(_681, _682, _683), vec3(_611, _612, _613)));
    float _4099 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _914 = sqrt(_766);
    float _927 = exp2((_914 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_914 * 3.0));
    float _933 = (1.0 - _927) * ((_914 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _934 = _927 * _914;
    float _962 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _966 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _970 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1272;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _997 = fma(_970, cbModelParam._m0[26u].z, fma(_966, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _962));
        float _1001 = fma(_970, cbModelParam._m0[27u].z, fma(_966, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _962));
        float _1005 = fma(_970, cbModelParam._m0[28u].z, fma(_966, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _962));
        float _1030 = _962 + _611;
        float _1031 = _966 + _612;
        float _1032 = _970 + _613;
        float _1042 = fma(_1032, cbModelParam._m0[26u].z, fma(_1031, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1030)) - _997;
        float _1043 = fma(_1032, cbModelParam._m0[27u].z, fma(_1031, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1030)) - _1001;
        float _1044 = fma(_1032, cbModelParam._m0[28u].z, fma(_1031, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1030)) - _1005;
        float _1048 = inversesqrt(dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044)));
        float _1061 = ((_1048 * _1042) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_997 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1062 = ((_1048 * _1043) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1001 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1063 = ((_1048 * _1044) / cbModelParam._m0[34u].z) + ((((((_1005 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1066 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1061, _1062, _1063), 0.0);
        vec4 _1073 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1061, _1062, _1063), 0.0);
        vec4 _1080 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1061, _1062, _1063), 0.0);
        vec4 _1087 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1061, _1062, _1063), 0.0);
        float _1100 = exp2((_1066.w + (-0.5)) * 20.0) * 2.0;
        float _1101 = _1100 * (_1066.x + (-0.5));
        float _1102 = _1100 * (_1066.y + (-0.5));
        float _1103 = _1100 * (_1066.z + (-0.5));
        float _1110 = exp2((_1073.w + (-0.5)) * 20.0) * 2.0;
        float _1111 = _1110 * (_1073.x + (-0.5));
        float _1112 = _1110 * (_1073.y + (-0.5));
        float _1113 = _1110 * (_1073.z + (-0.5));
        float _1120 = exp2((_1080.w + (-0.5)) * 20.0) * 2.0;
        float _1121 = _1120 * (_1080.x + (-0.5));
        float _1122 = _1120 * (_1080.y + (-0.5));
        float _1123 = _1120 * (_1080.z + (-0.5));
        float _1130 = exp2((_1087.w + (-0.5)) * 20.0) * 2.0;
        float _1131 = _1130 * (_1087.x + (-0.5));
        float _1132 = _1130 * (_1087.y + (-0.5));
        float _1133 = _1130 * (_1087.z + (-0.5));
        float _1134 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1135 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1136 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1137 = _1101 * 0.5;
        float _1138 = _1111 * 0.5;
        float _1139 = _1121 * 0.5;
        float _1140 = dot(vec3(_1137, _1138, _1139), vec3(_1137, _1138, _1139));
        float _1145 = (_1140 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1140);
        float _1154 = (dot(vec3(_611, _612, _613), vec3(_1145 * _1137, _1145 * _1138, _1145 * _1139)) + 1.0) * 0.5;
        float _4125 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1164 = sqrt(((_1138 * _1138) + (_1137 * _1137)) + (_1139 * _1139)) / (_1134 + 9.9999997473787516355514526367188e-06);
        float _4136 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1166 = _1165 * 2.0;
        float _1170 = (1.0 - _1165) / (_1165 + 1.0);
        float _4147 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1180 = ((((1.0 - _1171) * (_1166 + 2.0)) * exp2(log2(isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * (_1166 + 1.0))) + _1171) * _1134;
        float _1181 = _1102 * 0.5;
        float _1182 = _1112 * 0.5;
        float _1183 = _1122 * 0.5;
        float _1184 = dot(vec3(_1181, _1182, _1183), vec3(_1181, _1182, _1183));
        float _1189 = (_1184 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1184);
        float _1197 = (dot(vec3(_611, _612, _613), vec3(_1189 * _1181, _1189 * _1182, _1189 * _1183)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1206 = sqrt(((_1182 * _1182) + (_1181 * _1181)) + (_1183 * _1183)) / (_1135 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1208 = _1207 * 2.0;
        float _1212 = (1.0 - _1207) / (_1207 + 1.0);
        float _4180 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1222 = ((((1.0 - _1213) * (_1208 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1208 + 1.0))) + _1213) * _1135;
        float _1223 = _1103 * 0.5;
        float _1224 = _1113 * 0.5;
        float _1225 = _1123 * 0.5;
        float _1226 = dot(vec3(_1223, _1224, _1225), vec3(_1223, _1224, _1225));
        float _1231 = (_1226 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1226);
        float _1239 = (dot(vec3(_611, _612, _613), vec3(_1231 * _1223, _1231 * _1224, _1231 * _1225)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1248 = sqrt(((_1224 * _1224) + (_1223 * _1223)) + (_1225 * _1225)) / (_1136 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1249 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1250 = _1249 * 2.0;
        float _1254 = (1.0 - _1249) / (_1249 + 1.0);
        float _4213 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1264 = ((((1.0 - _1255) * (_1250 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1250 + 1.0))) + _1255) * _1136;
        _1272 = _1103;
        _1274 = _1102;
        _1275 = _1101;
        _1276 = _1113;
        _1277 = _1112;
        _1278 = _1111;
        _1279 = _1123;
        _1280 = _1122;
        _1281 = _1121;
        _1282 = _1136;
        _1283 = _1135;
        _1284 = _1134;
        _1285 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0)));
        _1286 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0)));
        _1287 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0)));
    }
    else
    {
        _1272 = _1273;
        _1274 = _1273;
        _1275 = _1273;
        _1276 = _1273;
        _1277 = _1273;
        _1278 = _1273;
        _1279 = _1273;
        _1280 = _1273;
        _1281 = _1273;
        _1282 = _1273;
        _1283 = _1273;
        _1284 = _1273;
        _1285 = 0.0;
        _1286 = 0.0;
        _1287 = 0.0;
    }
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1313 = fma(_970, cbModelParam._m0[30u].z, fma(_966, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _962));
        float _1317 = fma(_970, cbModelParam._m0[31u].z, fma(_966, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _962));
        float _1321 = fma(_970, cbModelParam._m0[32u].z, fma(_966, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _962));
        float _1344 = _962 + _611;
        float _1345 = _966 + _612;
        float _1346 = _970 + _613;
        float _1356 = fma(_1346, cbModelParam._m0[30u].z, fma(_1345, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1344)) - _1313;
        float _1357 = fma(_1346, cbModelParam._m0[31u].z, fma(_1345, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1344)) - _1317;
        float _1358 = fma(_1346, cbModelParam._m0[32u].z, fma(_1345, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1344)) - _1321;
        float _1362 = inversesqrt(dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358)));
        float _1375 = ((_1362 * _1356) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1313 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1376 = ((_1362 * _1357) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1317 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1377 = ((_1362 * _1358) / cbModelParam._m0[35u].z) + ((((((_1321 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1375, _1376, _1377), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1375, _1376, _1377), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1375, _1376, _1377), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1375, _1376, _1377), 0.0);
        float _1412 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1413 = _1412 * (_1379.x + (-0.5));
        float _1414 = _1412 * (_1379.y + (-0.5));
        float _1415 = _1412 * (_1379.z + (-0.5));
        float _1422 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1423 = _1422 * (_1386.x + (-0.5));
        float _1424 = _1422 * (_1386.y + (-0.5));
        float _1425 = _1422 * (_1386.z + (-0.5));
        float _1432 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1433 = _1432 * (_1393.x + (-0.5));
        float _1434 = _1432 * (_1393.y + (-0.5));
        float _1435 = _1432 * (_1393.z + (-0.5));
        float _1442 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1443 = _1442 * (_1400.x + (-0.5));
        float _1444 = _1442 * (_1400.y + (-0.5));
        float _1445 = _1442 * (_1400.z + (-0.5));
        float _1446 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1447 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1448 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1449 = _1413 * 0.5;
        float _1450 = _1423 * 0.5;
        float _1451 = _1433 * 0.5;
        float _1452 = dot(vec3(_1449, _1450, _1451), vec3(_1449, _1450, _1451));
        float _1457 = (_1452 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1452);
        float _1465 = (dot(vec3(_611, _612, _613), vec3(_1457 * _1449, _1457 * _1450, _1457 * _1451)) + 1.0) * 0.5;
        float _4254 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1474 = sqrt(((_1450 * _1450) + (_1449 * _1449)) + (_1451 * _1451)) / (_1446 + 9.9999997473787516355514526367188e-06);
        float _4265 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1476 = _1475 * 2.0;
        float _1480 = (1.0 - _1475) / (_1475 + 1.0);
        float _4276 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
        float _1490 = ((((1.0 - _1481) * (_1476 + 2.0)) * exp2(log2(isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0))) * (_1476 + 1.0))) + _1481) * _1446;
        float _1491 = _1414 * 0.5;
        float _1492 = _1424 * 0.5;
        float _1493 = _1434 * 0.5;
        float _1494 = dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493));
        float _1499 = (_1494 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1494);
        float _1507 = (dot(vec3(_611, _612, _613), vec3(_1499 * _1491, _1499 * _1492, _1499 * _1493)) + 1.0) * 0.5;
        float _4287 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1516 = sqrt(((_1492 * _1492) + (_1491 * _1491)) + (_1493 * _1493)) / (_1447 + 9.9999997473787516355514526367188e-06);
        float _4298 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1518 = _1517 * 2.0;
        float _1522 = (1.0 - _1517) / (_1517 + 1.0);
        float _4309 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
        float _1532 = ((((1.0 - _1523) * (_1518 + 2.0)) * exp2(log2(isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0))) * (_1518 + 1.0))) + _1523) * _1447;
        float _1533 = _1415 * 0.5;
        float _1534 = _1425 * 0.5;
        float _1535 = _1435 * 0.5;
        float _1536 = dot(vec3(_1533, _1534, _1535), vec3(_1533, _1534, _1535));
        float _1541 = (_1536 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1536);
        float _1549 = (dot(vec3(_611, _612, _613), vec3(_1541 * _1533, _1541 * _1534, _1541 * _1535)) + 1.0) * 0.5;
        float _4320 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1558 = sqrt(((_1534 * _1534) + (_1533 * _1533)) + (_1535 * _1535)) / (_1448 + 9.9999997473787516355514526367188e-06);
        float _4331 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1560 = _1559 * 2.0;
        float _1564 = (1.0 - _1559) / (_1559 + 1.0);
        float _4342 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1565 = isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0));
        float _1574 = ((((1.0 - _1565) * (_1560 + 2.0)) * exp2(log2(isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0))) * (_1560 + 1.0))) + _1565) * _1448;
        _1582 = _1415;
        _1583 = _1414;
        _1584 = _1413;
        _1585 = _1425;
        _1586 = _1424;
        _1587 = _1423;
        _1588 = _1435;
        _1589 = _1434;
        _1590 = _1433;
        _1591 = _1448;
        _1592 = _1447;
        _1593 = _1446;
        _1594 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0)));
        _1595 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)));
        _1596 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)));
    }
    else
    {
        _1582 = _1273;
        _1583 = _1273;
        _1584 = _1273;
        _1585 = _1273;
        _1586 = _1273;
        _1587 = _1273;
        _1588 = _1273;
        _1589 = _1273;
        _1590 = _1273;
        _1591 = _1273;
        _1592 = _1273;
        _1593 = _1273;
        _1594 = 0.0;
        _1595 = 0.0;
        _1596 = 0.0;
    }
    float _1606 = (cbModelParam._m0[1u].x * (_1594 - _1285)) + _1285;
    float _1607 = (cbModelParam._m0[1u].x * (_1595 - _1286)) + _1286;
    float _1608 = (cbModelParam._m0[1u].x * (_1596 - _1287)) + _1287;
    float _1629 = fma(_1608, cbSceneParam._m0[89u].z, fma(_1607, cbSceneParam._m0[89u].y, _1606 * cbSceneParam._m0[89u].x));
    float _1632 = fma(_1608, cbSceneParam._m0[90u].z, fma(_1607, cbSceneParam._m0[90u].y, _1606 * cbSceneParam._m0[90u].x));
    float _1635 = fma(_1608, cbSceneParam._m0[91u].z, fma(_1607, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1606));
    float _1650 = _906 * 0.5;
    float _1651 = _907 * 0.5;
    float _1652 = _908 * 0.5;
    float _1653 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1584, _1587, _1590, _1593));
    float _1656 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1583, _1586, _1589, _1592));
    float _1659 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1582, _1585, _1588, _1591));
    float _1690;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1666 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1272, _1276, _1279, _1282));
        float _1670 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1274, _1277, _1280, _1283));
        float _1674 = dot(vec4(_1650, _1651, _1652, 1.0), vec4(_1275, _1278, _1281, _1284));
        float _1681 = dot(vec4(cbModelParam._m0[39u]), vec4(_1650, _1651, _1652, 1.0));
        _1690 = dot(vec3(isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)), isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1681) ? 0.0 : (isnan(0.0) ? _1681 : max(0.0, _1681))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1690 = 1.0;
    }
    float _1701;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1692 = dot(vec4(cbModelParam._m0[40u]), vec4(_1650, _1651, _1652, 1.0));
        _1701 = dot(vec3(isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0)), isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0)), isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1692) ? 0.0 : (isnan(0.0) ? _1692 : max(0.0, _1692))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1701 = 1.0;
    }
    float _1705 = (_1701 * cbModelParam._m0[1u].x) + (_1690 * (1.0 - cbModelParam._m0[1u].x));
    float _1715 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _766);
    float _1716 = isnan(_1715) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1715 : min(cbModelParam._m0[25u].z, _1715));
    float _1796;
    float _1798;
    float _1800;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1763 = fma(_970, cbModelParam._m0[13u].z, fma(_966, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _962)) + cbModelParam._m0[13u].w;
        float _1767 = fma(_970, cbModelParam._m0[14u].z, fma(_966, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _962)) + cbModelParam._m0[14u].w;
        float _1771 = fma(_970, cbModelParam._m0[15u].z, fma(_966, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _962)) + cbModelParam._m0[15u].w;
        float _1774 = fma(_908, cbModelParam._m0[13u].z, fma(_907, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _906));
        float _1777 = fma(_908, cbModelParam._m0[14u].z, fma(_907, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _906));
        float _1780 = fma(_908, cbModelParam._m0[15u].z, fma(_907, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _906));
        float _1808;
        if (_1774 > 0.0)
        {
            _1808 = abs((1.0 - _1763) / _1774);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1774 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1763 + 1.0) / _1774);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1808 = frontier_phi_14_12_ladder;
        }
        float _1981;
        if (_1777 > 0.0)
        {
            _1981 = abs((1.0 - _1767) / _1777);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1777 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1767 + 1.0) / _1777);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1981 = frontier_phi_23_19_ladder;
        }
        float _2277;
        if (_1780 > 0.0)
        {
            _2277 = abs((1.0 - _1771) / _1780);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1780 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1771 + 1.0) / _1780);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2277 = frontier_phi_35_30_ladder;
        }
        float _2279 = isnan(_1981) ? _1808 : (isnan(_1808) ? _1981 : min(_1808, _1981));
        float _2280 = isnan(_2277) ? _2279 : (isnan(_2279) ? _2277 : min(_2279, _2277));
        float _2284 = (_2280 * _1774) + _1763;
        float _2285 = (_2280 * _1777) + _1767;
        float _2286 = (_2280 * _1780) + _1771;
        float _2287 = _2280 * 9.9999997473787516355514526367188e-05;
        float _2289 = (-1.0) - _2287;
        float _2291 = _2287 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2286 > _2291) || ((_2286 < _2289) || ((_2285 > _2291) || ((_2285 < _2289) || ((_2284 < _2289) || (_2284 > _2291))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2431 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2286, cbModelParam._m0[9u].z, fma(_2285, cbModelParam._m0[9u].y, _2284 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2286, cbModelParam._m0[10u].z, fma(_2285, cbModelParam._m0[10u].y, _2284 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2286, cbModelParam._m0[11u].z, fma(_2285, cbModelParam._m0[11u].y, _2284 * cbModelParam._m0[11u].x))), _1716);
            frontier_phi_13_35_ladder = _2431.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2431.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2431.x * cbModelParam._m0[1u].y;
        }
        _1796 = frontier_phi_13_35_ladder_2;
        _1798 = frontier_phi_13_35_ladder_1;
        _1800 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1784 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_906, _907, _908), _1716);
        _1796 = _1784.x * cbModelParam._m0[1u].y;
        _1798 = _1784.y * cbModelParam._m0[1u].y;
        _1800 = _1784.z * cbModelParam._m0[1u].y;
    }
    float _1804 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _766);
    float _1805 = isnan(_1804) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1804 : min(cbModelParam._m0[25u].w, _1804));
    float _1896;
    float _1898;
    float _1900;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1860 = fma(_970, cbModelParam._m0[21u].z, fma(_966, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _962)) + cbModelParam._m0[21u].w;
        float _1864 = fma(_970, cbModelParam._m0[22u].z, fma(_966, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _962)) + cbModelParam._m0[22u].w;
        float _1868 = fma(_970, cbModelParam._m0[23u].z, fma(_966, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _962)) + cbModelParam._m0[23u].w;
        float _1871 = fma(_908, cbModelParam._m0[21u].z, fma(_907, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _906));
        float _1874 = fma(_908, cbModelParam._m0[22u].z, fma(_907, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _906));
        float _1877 = fma(_908, cbModelParam._m0[23u].z, fma(_907, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _906));
        float _1986;
        if (_1871 > 0.0)
        {
            _1986 = abs((1.0 - _1860) / _1871);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1871 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1860 + 1.0) / _1871);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1986 = frontier_phi_25_21_ladder;
        }
        float _2304;
        if (_1874 > 0.0)
        {
            _2304 = abs((1.0 - _1864) / _1874);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1864 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2304 = frontier_phi_37_32_ladder;
        }
        float _2642;
        if (_1877 > 0.0)
        {
            _2642 = abs((1.0 - _1868) / _1877);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1868 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2642 = frontier_phi_47_44_ladder;
        }
        float _2644 = isnan(_2304) ? _1986 : (isnan(_1986) ? _2304 : min(_1986, _2304));
        float _2645 = isnan(_2642) ? _2644 : (isnan(_2644) ? _2642 : min(_2644, _2642));
        float _2649 = (_2645 * _1871) + _1860;
        float _2650 = (_2645 * _1874) + _1864;
        float _2651 = (_2645 * _1877) + _1868;
        float _2652 = _2645 * 9.9999997473787516355514526367188e-05;
        float _2653 = (-1.0) - _2652;
        float _2655 = _2652 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2651 > _2655) || ((_2651 < _2653) || ((_2650 > _2655) || ((_2650 < _2653) || ((_2649 < _2653) || (_2649 > _2655))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2773 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2651, cbModelParam._m0[17u].z, fma(_2650, cbModelParam._m0[17u].y, _2649 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2651, cbModelParam._m0[18u].z, fma(_2650, cbModelParam._m0[18u].y, _2649 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2651, cbModelParam._m0[19u].z, fma(_2650, cbModelParam._m0[19u].y, _2649 * cbModelParam._m0[19u].x))), _1805);
            frontier_phi_22_47_ladder = _2773.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2773.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2773.x * cbModelParam._m0[1u].z;
        }
        _1896 = frontier_phi_22_47_ladder_2;
        _1898 = frontier_phi_22_47_ladder_1;
        _1900 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1880 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_906, _907, _908), _1805);
        _1896 = _1880.x * cbModelParam._m0[1u].z;
        _1898 = _1880.y * cbModelParam._m0[1u].z;
        _1900 = _1880.z * cbModelParam._m0[1u].z;
    }
    float _1913 = (((_933 * _884) + _934) * _898) * ((cbModelParam._m0[1u].w * (_1896 - _1796)) + _1796);
    float _1915 = (((_933 * _885) + _934) * _898) * ((cbModelParam._m0[1u].w * (_1898 - _1798)) + _1798);
    float _1917 = (((_933 * _886) + _934) * _898) * ((cbModelParam._m0[1u].w * (_1900 - _1800)) + _1800);
    float _1920 = fma(_1917, cbSceneParam._m0[89u].z, fma(_1915, cbSceneParam._m0[89u].y, _1913 * cbSceneParam._m0[89u].x));
    float _1923 = fma(_1917, cbSceneParam._m0[90u].z, fma(_1915, cbSceneParam._m0[90u].y, _1913 * cbSceneParam._m0[90u].x));
    float _1926 = fma(_1917, cbSceneParam._m0[91u].z, fma(_1915, cbSceneParam._m0[91u].y, _1913 * cbSceneParam._m0[91u].x));
    float _1960 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1964 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1968 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1972 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1973 = _1960 / _1972;
    float _1974 = _1964 / _1972;
    float _1975 = _1968 / _1972;
    float _2122;
    float _2123;
    float _2124;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2002 = ((uint(_1975 > cbSceneParam._m0[59u].y) + uint(_1975 > cbSceneParam._m0[59u].x)) + uint(_1975 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2003 = _2002 + 43u;
        uint _2011 = _2002 + 44u;
        uint _2019 = _2002 + 45u;
        uint _2027 = _2002 + 46u;
        float _2038 = fma(_1972, cbSceneParam._m0[_2003].w, fma(_1968, cbSceneParam._m0[_2003].z, fma(_1964, cbSceneParam._m0[_2003].y, _1960 * cbSceneParam._m0[_2003].x)));
        float _2042 = fma(_1972, cbSceneParam._m0[_2011].w, fma(_1968, cbSceneParam._m0[_2011].z, fma(_1964, cbSceneParam._m0[_2011].y, _1960 * cbSceneParam._m0[_2011].x)));
        float _2050 = fma(_1972, cbSceneParam._m0[_2027].w, fma(_1968, cbSceneParam._m0[_2027].z, fma(_1964, cbSceneParam._m0[_2027].y, _1960 * cbSceneParam._m0[_2027].x)));
        float _2055 = cbSceneParam._m0[33u].z * _2050;
        float _2057 = cbSceneParam._m0[33u].w * _2050;
        float _2060 = fma(_1972, cbSceneParam._m0[_2019].w, fma(_1968, cbSceneParam._m0[_2019].z, fma(_1964, cbSceneParam._m0[_2019].y, _1960 * cbSceneParam._m0[_2019].x))) / _2050;
        float _2108 = (cbSceneParam._m0[33u].x - sqrt(((_1974 * _1974) + (_1973 * _1973)) + (_1975 * _1975))) * cbSceneParam._m0[33u].y;
        float _4468 = isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0));
        float _2115 = (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2055 + _2038) / _2050, (_2057 + _2042) / _2050), _2060), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2057 + _2038) / _2050, (_2042 - _2055) / _2050), _2060), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2038 - _2055) / _2050, (_2042 - _2057) / _2050), _2060), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2038 - _2057) / _2050, (_2055 + _2042) / _2050), _2060), 0.0)).x), vec4(0.25)));
        _2122 = 1.0 - (_2115 * cbSceneParam._m0[34u].x);
        _2123 = 1.0 - (_2115 * cbSceneParam._m0[34u].y);
        _2124 = 1.0 - (_2115 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2122 = 1.0;
        _2123 = 1.0;
        _2124 = 1.0;
    }
    float _2188;
    float _2190;
    float _2192;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2176 = fma(_1972, cbSceneParam._m0[63u].w, fma(_1968, cbSceneParam._m0[63u].z, fma(_1964, cbSceneParam._m0[63u].y, _1960 * cbSceneParam._m0[63u].x)));
        float _2177 = fma(_1972, cbSceneParam._m0[60u].w, fma(_1968, cbSceneParam._m0[60u].z, fma(_1964, cbSceneParam._m0[60u].y, _1960 * cbSceneParam._m0[60u].x))) / _2176;
        float _2178 = fma(_1972, cbSceneParam._m0[61u].w, fma(_1968, cbSceneParam._m0[61u].z, fma(_1964, cbSceneParam._m0[61u].y, _1960 * cbSceneParam._m0[61u].x))) / _2176;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2177 >= cbSceneParam._m0[64u].x) && (_2178 >= cbSceneParam._m0[64u].y)) && (_2177 <= cbSceneParam._m0[64u].z)) && (_2178 <= cbSceneParam._m0[64u].w))
        {
            float _2317 = fma(_1972, cbSceneParam._m0[62u].w, fma(_1968, cbSceneParam._m0[62u].z, fma(_1964, cbSceneParam._m0[62u].y, _1960 * cbSceneParam._m0[62u].x))) / _2176;
            float _2321 = isnan(cbSceneParam._m0[41u].w) ? _2317 : (isnan(_2317) ? cbSceneParam._m0[41u].w : max(_2317, cbSceneParam._m0[41u].w));
            float _2364 = (cbSceneParam._m0[33u].x - sqrt(((_1974 * _1974) + (_1973 * _1973)) + (_1975 * _1975))) * cbSceneParam._m0[33u].y;
            float _4484 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
            float _2371 = (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2177, cbSceneParam._m0[33u].w + _2178), _2321), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2177, _2178 - cbSceneParam._m0[33u].z), _2321), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2177 - cbSceneParam._m0[33u].z, _2178 - cbSceneParam._m0[33u].w), _2321), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2177 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2178), _2321), 0.0)).x), vec4(0.25)));
            float _2375 = 1.0 - (_2371 * cbSceneParam._m0[34u].x);
            float _2376 = 1.0 - (_2371 * cbSceneParam._m0[34u].y);
            float _2377 = 1.0 - (_2371 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2377) ? _2124 : (isnan(_2124) ? _2377 : min(_2124, _2377));
            frontier_phi_34_33_ladder_1 = isnan(_2376) ? _2123 : (isnan(_2123) ? _2376 : min(_2123, _2376));
            frontier_phi_34_33_ladder_2 = isnan(_2375) ? _2122 : (isnan(_2122) ? _2375 : min(_2122, _2375));
        }
        else
        {
            frontier_phi_34_33_ladder = _2124;
            frontier_phi_34_33_ladder_1 = _2123;
            frontier_phi_34_33_ladder_2 = _2122;
        }
        _2188 = frontier_phi_34_33_ladder_2;
        _2190 = frontier_phi_34_33_ladder_1;
        _2192 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2188 = _2122;
        _2190 = _2123;
        _2192 = _2124;
    }
    uvec4 _2197 = floatBitsToUint(cbInstanceData._m0[_790 + 5u]);
    uint _2199 = _2197.x * 14u;
    uint _2200 = _2199 + 13u;
    float _2207 = _898 + (-1.0);
    float _2212 = (cbLight._m0[_2200].x * _2207) + 1.0;
    float _2213 = (cbLight._m0[_2200].y * _2207) + 1.0;
    float _2214 = (cbLight._m0[_2200].z * _2207) + 1.0;
    float _2215 = (cbLight._m0[_2200].w * _2207) + 1.0;
    uint _2216 = _2199 + 5u;
    float _2222 = isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0));
    uint _2226 = _2199 + 4u;
    float _2236 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
    uint _2240 = _2199 | 1u;
    float _2251 = dot(vec3(cbLight._m0[_2199].xyz), vec3(_611, _612, _613));
    float _2254 = dot(vec3(cbLight._m0[_2240].xyz), vec3(_611, _612, _613));
    float _4520 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
    float _4531 = isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0));
    float _2259 = (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * 0.3183098733425140380859375;
    float _2261 = (isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0))) * 0.3183098733425140380859375;
    float _2268 = ((cbLight._m0[_2216].x * _2222) * _2261) + (((cbLight._m0[_2226].x * _2188) * _2236) * _2259);
    float _2269 = ((_2222 * cbLight._m0[_2216].y) * _2261) + (((cbLight._m0[_2226].y * _2190) * _2236) * _2259);
    float _2270 = ((_2222 * cbLight._m0[_2216].z) * _2261) + (((cbLight._m0[_2226].z * _2192) * _2236) * _2259);
    uvec4 _2274 = floatBitsToUint(cbLight._m0[_2199 + 12u]);
    bool _2276 = _2274.x == 0u;
    float _2378;
    float _2380;
    float _2382;
    if (_2276)
    {
        _2378 = _2268;
        _2380 = _2269;
        _2382 = _2270;
    }
    else
    {
        uint _2386 = _2199 + 6u;
        float _2402 = (dot(vec3(cbLight._m0[_2199 + 2u].xyz), vec3(_611, _612, _613)) * 0.5) + 0.5;
        float _2403 = _2402 * _2402;
        float _4542 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
        float _2404 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
        float _2405 = isnan(1.0) ? _2214 : (isnan(_2214) ? 1.0 : min(_2214, 1.0));
        _2378 = (((cbLight._m0[_2386].x * 0.3183098733425140380859375) * _2404) * _2405) + _2268;
        _2380 = (((cbLight._m0[_2386].y * 0.3183098733425140380859375) * _2404) * _2405) + _2269;
        _2382 = (((cbLight._m0[_2386].z * 0.3183098733425140380859375) * _2404) * _2405) + _2270;
    }
    bool _2385 = _2274.y == 0u;
    float _2440;
    float _2442;
    float _2444;
    if (_2385)
    {
        _2440 = _2378;
        _2442 = _2380;
        _2444 = _2382;
    }
    else
    {
        uint _2613 = _2199 + 7u;
        float _2629 = (dot(vec3(cbLight._m0[_2199 + 3u].xyz), vec3(_611, _612, _613)) * 0.5) + 0.5;
        float _2630 = _2629 * _2629;
        float _4558 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2631 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
        float _2632 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        _2440 = (((cbLight._m0[_2613].x * 0.3183098733425140380859375) * _2631) * _2632) + _2378;
        _2442 = (((cbLight._m0[_2613].y * 0.3183098733425140380859375) * _2631) * _2632) + _2380;
        _2444 = (((cbLight._m0[_2613].z * 0.3183098733425140380859375) * _2631) * _2632) + _2382;
    }
    uint _2447 = _2199 + 8u;
    float _2460 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2199].w)) * _766) * 0.949999988079071044921875);
    float _2461 = _2460 * _2460;
    float _2462 = cbLight._m0[_2199].x + _681;
    float _2463 = cbLight._m0[_2199].y + _682;
    float _2464 = cbLight._m0[_2199].z + _683;
    float _2468 = inversesqrt(dot(vec3(_2462, _2463, _2464), vec3(_2462, _2463, _2464)));
    float _2469 = _2468 * _2462;
    float _2470 = _2468 * _2463;
    float _2471 = _2468 * _2464;
    float _2472 = dot(vec3(_611, _612, _613), vec3(cbLight._m0[_2199].xyz));
    float _4574 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _2475 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
    float _4585 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _2476 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
    float _2477 = dot(vec3(_611, _612, _613), vec3(_2469, _2470, _2471));
    float _4596 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _2480 = isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0));
    float _2481 = dot(vec3(cbLight._m0[_2199].xyz), vec3(_2469, _2470, _2471));
    float _4607 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
    float _2485 = _2461 * _2461;
    float _2489 = ((_2480 * _2480) * (_2485 + (-1.0))) + 1.0;
    float _2497 = exp2(log2(1.0 - (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0)))) * 5.0);
    float _2498 = 0.959999978542327880859375 - _881;
    float _2500 = 0.959999978542327880859375 - _882;
    float _2501 = 0.959999978542327880859375 - _883;
    float _2508 = 1.0 - _2461;
    float _2519 = (0.5 / (((_2476 * ((_2475 * _2508) + _2461)) + 9.9999999392252902907785028219223e-09) + (((_2476 * _2508) + _2461) * _2475))) * _2475;
    float _4618 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
    float _2521 = (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0))) * (_2485 / ((_2489 * _2489) * 3.141590118408203125));
    uint _2535 = _2199 + 9u;
    float _2546 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2240].w)) * _766) * 0.949999988079071044921875);
    float _2547 = _2546 * _2546;
    float _2548 = cbLight._m0[_2240].x + _681;
    float _2549 = cbLight._m0[_2240].y + _682;
    float _2550 = cbLight._m0[_2240].z + _683;
    float _2554 = inversesqrt(dot(vec3(_2548, _2549, _2550), vec3(_2548, _2549, _2550)));
    float _2555 = _2554 * _2548;
    float _2556 = _2554 * _2549;
    float _2557 = _2554 * _2550;
    float _2558 = dot(vec3(_611, _612, _613), vec3(cbLight._m0[_2240].xyz));
    float _4629 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
    float _2561 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
    float _2562 = dot(vec3(_611, _612, _613), vec3(_2555, _2556, _2557));
    float _4640 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2565 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
    float _2566 = dot(vec3(cbLight._m0[_2240].xyz), vec3(_2555, _2556, _2557));
    float _4651 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
    float _2570 = _2547 * _2547;
    float _2574 = ((_2565 * _2565) * (_2570 + (-1.0))) + 1.0;
    float _2581 = exp2(log2(1.0 - (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0)))) * 5.0);
    float _2588 = 1.0 - _2547;
    float _2598 = (0.5 / (((_2476 * ((_2561 * _2588) + _2547)) + 9.9999999392252902907785028219223e-09) + (((_2476 * _2588) + _2547) * _2561))) * _2561;
    float _4662 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2600 = (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0))) * (_2570 / ((_2574 * _2574) * 3.141590118408203125));
    float _2610 = (((((_2581 * _2498) + _884) * cbLight._m0[_2535].x) * _2600) * _2222) + ((((cbLight._m0[_2447].x * _2188) * ((_2497 * _2498) + _884)) * _2521) * _2236);
    float _2611 = (((((_2581 * _2500) + _885) * cbLight._m0[_2535].y) * _2600) * _2222) + ((((cbLight._m0[_2447].y * _2190) * ((_2497 * _2500) + _885)) * _2521) * _2236);
    float _2612 = (((((_2581 * _2501) + _886) * cbLight._m0[_2535].z) * _2600) * _2222) + ((((cbLight._m0[_2447].z * _2192) * ((_2497 * _2501) + _886)) * _2521) * _2236);
    float _2668;
    float _2670;
    float _2672;
    if (_2276)
    {
        _2668 = _2610;
        _2670 = _2611;
        _2672 = _2612;
    }
    else
    {
        uint _2674 = _2199 + 2u;
        uint _2678 = _2199 + 10u;
        float _2692 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2674].w)) * _766) * 0.949999988079071044921875);
        float _2693 = _2692 * _2692;
        float _2694 = cbLight._m0[_2674].x + _681;
        float _2695 = cbLight._m0[_2674].y + _682;
        float _2696 = cbLight._m0[_2674].z + _683;
        float _2700 = inversesqrt(dot(vec3(_2694, _2695, _2696), vec3(_2694, _2695, _2696)));
        float _2701 = _2700 * _2694;
        float _2702 = _2700 * _2695;
        float _2703 = _2700 * _2696;
        float _2704 = dot(vec3(_611, _612, _613), vec3(cbLight._m0[_2674].xyz));
        float _4673 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2707 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2708 = dot(vec3(_611, _612, _613), vec3(_2701, _2702, _2703));
        float _4684 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2711 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
        float _2712 = dot(vec3(cbLight._m0[_2674].xyz), vec3(_2701, _2702, _2703));
        float _4695 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2716 = _2693 * _2693;
        float _2720 = ((_2711 * _2711) * (_2716 + (-1.0))) + 1.0;
        float _2727 = exp2(log2(1.0 - (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0)))) * 5.0);
        float _2734 = 1.0 - _2693;
        float _2744 = (0.5 / (((_2476 * ((_2707 * _2734) + _2693)) + 9.9999999392252902907785028219223e-09) + (((_2476 * _2734) + _2693) * _2707))) * _2707;
        float _4706 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
        float _2746 = (isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0))) * (_2716 / ((_2720 * _2720) * 3.141590118408203125));
        float _2747 = isnan(1.0) ? _2214 : (isnan(_2214) ? 1.0 : min(_2214, 1.0));
        _2668 = (((((_2727 * _2498) + _884) * cbLight._m0[_2678].x) * _2746) * _2747) + _2610;
        _2670 = (((((_2727 * _2500) + _885) * cbLight._m0[_2678].y) * _2746) * _2747) + _2611;
        _2672 = (((((_2727 * _2501) + _886) * cbLight._m0[_2678].z) * _2746) * _2747) + _2612;
    }
    float _2778;
    float _2780;
    float _2782;
    if (_2385)
    {
        _2778 = _2668;
        _2780 = _2670;
        _2782 = _2672;
    }
    else
    {
        uint _2789 = _2199 + 3u;
        uint _2793 = _2199 + 11u;
        float _2807 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2789].w)) * _766) * 0.949999988079071044921875);
        float _2808 = _2807 * _2807;
        float _2809 = cbLight._m0[_2789].x + _681;
        float _2810 = cbLight._m0[_2789].y + _682;
        float _2811 = cbLight._m0[_2789].z + _683;
        float _2815 = inversesqrt(dot(vec3(_2809, _2810, _2811), vec3(_2809, _2810, _2811)));
        float _2816 = _2815 * _2809;
        float _2817 = _2815 * _2810;
        float _2818 = _2815 * _2811;
        float _2819 = dot(vec3(_611, _612, _613), vec3(cbLight._m0[_2789].xyz));
        float _4722 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
        float _2822 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2823 = dot(vec3(_611, _612, _613), vec3(_2816, _2817, _2818));
        float _4733 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2826 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
        float _2827 = dot(vec3(cbLight._m0[_2789].xyz), vec3(_2816, _2817, _2818));
        float _4744 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2831 = _2808 * _2808;
        float _2835 = ((_2826 * _2826) * (_2831 + (-1.0))) + 1.0;
        float _2842 = exp2(log2(1.0 - (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0)))) * 5.0);
        float _2849 = 1.0 - _2808;
        float _2859 = (0.5 / (((_2476 * ((_2822 * _2849) + _2808)) + 9.9999999392252902907785028219223e-09) + (((_2476 * _2849) + _2808) * _2822))) * _2822;
        float _4755 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2861 = (isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * (_2831 / ((_2835 * _2835) * 3.141590118408203125));
        float _2862 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        _2778 = (((((_2842 * _2498) + _884) * cbLight._m0[_2793].x) * _2861) * _2862) + _2668;
        _2780 = (((((_2842 * _2500) + _885) * cbLight._m0[_2793].y) * _2861) * _2862) + _2670;
        _2782 = (((((_2842 * _2501) + _886) * cbLight._m0[_2793].z) * _2861) * _2862) + _2672;
    }
    float _2928;
    float _2930;
    float _2932;
    float _2934;
    float _2936;
    float _2938;
    if (_2197.y == 0u)
    {
        uvec4 _2883 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2884 = _2883.x;
        uint _2895 = uint((float(_2883.y) * floor(float(uint(cbSceneParam._m0[85u].y * _689) / _2884))) + floor(float(uint(cbSceneParam._m0[85u].x * _688) / _2884)));
        float _2905 = (log2(_1975 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2906 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
        uint _2909 = uint(isnan(14.0) ? _2906 : (isnan(_2906) ? 14.0 : min(_2906, 14.0)));
        uvec4 _2914 = texelFetch(g_lightClusterGridBuffer, int(((_2909 << 2u) + (_2895 << 6u)) >> 2u));
        uint _2915 = _2914.x;
        uint _2916 = _2883.z;
        float _3026;
        float _3028;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        if (((((1u << ((_2916 >> 4u) & 15u)) + 4294967295u) & _2915) == 0u) || ((_2916 & 240u) == 0u))
        {
            _3026 = 0.0;
            _3028 = 0.0;
            _3030 = 0.0;
            _3032 = 0.0;
            _3034 = 0.0;
            _3036 = 0.0;
        }
        else
        {
            float _3027;
            float _3029;
            float _3031;
            float _3033;
            float _3035;
            float _3037;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            float _3182 = 0.0;
            float _3183 = 0.0;
            float _3184 = 0.0;
            uint _3185 = 0u;
            uint _3194;
            bool _3195;
            for (;;)
            {
                _3194 = texelFetch(g_lightClassification, int((((_2909 << 5u) + (_2895 << 9u)) + (_3185 << 2u)) >> 2u)).x;
                _3195 = _3194 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3195)
                {
                    frontier_phi_66_pred = _3184;
                    frontier_phi_66_pred_1 = _3183;
                    frontier_phi_66_pred_2 = _3182;
                    frontier_phi_66_pred_3 = _3181;
                    frontier_phi_66_pred_4 = _3180;
                    frontier_phi_66_pred_5 = _3179;
                }
                else
                {
                    float _3303;
                    float _3304;
                    float _3305;
                    float _3306;
                    float _3307;
                    float _3308;
                    uint _3309;
                    _3303 = _3179;
                    _3304 = _3180;
                    _3305 = _3181;
                    _3306 = _3182;
                    _3307 = _3183;
                    _3308 = _3184;
                    _3309 = _3194;
                    float _3235;
                    float _3236;
                    float _3237;
                    float _3238;
                    float _3239;
                    float _3240;
                    for (;;)
                    {
                        uint _3313 = uint(findLSB(_3309)) + (_3185 << 5u);
                        uint _3310 = (_3309 + 4294967295u) & _3309;
                        uint _3315 = _3313 * 48u;
                        vec4 _3329 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3315)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 3u)).x));
                        uint _3335 = (_3313 * 48u) + 4u;
                        vec4 _3348 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3335)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 3u)).x));
                        uint _3354 = (_3313 * 48u) + 8u;
                        vec3 _3365 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3354)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 2u)).x));
                        float _3369 = _3329.x - _1973;
                        float _3370 = _3329.y - _1974;
                        float _3371 = _3329.z - _1975;
                        float _3372 = dot(vec3(_3369, _3370, _3371), vec3(_3369, _3370, _3371));
                        float _3375 = inversesqrt(_3372);
                        float _3376 = _3375 * _3369;
                        float _3377 = _3375 * _3370;
                        float _3378 = _3375 * _3371;
                        float _3379 = dot(vec3(_711, _714, _717), vec3(_3376, _3377, _3378));
                        float _3384 = 1.0 - (_3372 * _3329.w);
                        float _4781 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3385 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
                        float _3386 = sqrt(_3372) * _3348.w;
                        float _3389 = 1.39999997615814208984375 / (_3386 + 1.39999997615814208984375);
                        float _3390 = _3389 * _3389;
                        float _3393 = ((1.0 - _3390) * _3379) + _3390;
                        float _3396 = _3386 * _3386;
                        float _3400 = ((isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0))) * _3385) / ((_3396 * 0.699999988079071044921875) + 1.0);
                        float _3404 = (-0.0) - _1973;
                        float _3405 = (-0.0) - _1974;
                        float _3406 = (-0.0) - _1975;
                        float _3410 = inversesqrt(dot(vec3(_3404, _3405, _3406), vec3(_3404, _3405, _3406)));
                        float _3411 = _3410 * _3404;
                        float _3412 = _3410 * _3405;
                        float _3413 = _3410 * _3406;
                        float _3420 = exp2(log2(1.0 / ((_3396 * 3.5) + 5.0)) * 0.25);
                        float _3421 = 1.0 - _914;
                        float _3428 = sqrt(1.0 - ((1.0 - (_3421 * _3421)) * (1.0 - (_3420 * _3420))));
                        float _3429 = _3428 * _3428;
                        float _3430 = _3429 * _3429;
                        float _3431 = _3411 + _3376;
                        float _3432 = _3412 + _3377;
                        float _3433 = _3413 + _3378;
                        float _3437 = inversesqrt(dot(vec3(_3431, _3432, _3433), vec3(_3431, _3432, _3433)));
                        float _3441 = dot(vec3(_711, _714, _717), vec3(_3411, _3412, _3413));
                        float _4797 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                        float _3444 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                        float _3445 = dot(vec3(_711, _714, _717), vec3(_3437 * _3431, _3437 * _3432, _3437 * _3433));
                        float _4808 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0));
                        float _3448 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                        float _3452 = ((_3448 * _3448) * (_3430 + (-1.0))) + 1.0;
                        float _3453 = _3389 * _3429;
                        float _3454 = _3453 * _3453;
                        float _3457 = ((1.0 - _3454) * _3379) + _3454;
                        float _4819 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0));
                        float _3458 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
                        float _3459 = 1.0 - _3429;
                        float _3469 = (0.5 / (((_3458 * ((_3444 * _3459) + _3429)) + 9.9999999392252902907785028219223e-09) + (((_3458 * _3459) + _3429) * _3444))) * _3458;
                        float _4830 = isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0));
                        float _3480 = (((_3430 * 3.1415927410125732421875) * (isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0)))) / ((_3452 * _3452) * ((_3396 * 2.1991131305694580078125) + 3.141590118408203125))) * _3385;
                        _3238 = (_3400 * _3348.x) + _3306;
                        _3239 = (_3400 * _3348.y) + _3307;
                        _3240 = (_3400 * _3348.z) + _3308;
                        _3235 = (_3480 * _3365.x) + _3303;
                        _3236 = (_3480 * _3365.y) + _3304;
                        _3237 = (_3480 * _3365.z) + _3305;
                        if (_3310 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3303 = _3235;
                            _3304 = _3236;
                            _3305 = _3237;
                            _3306 = _3238;
                            _3307 = _3239;
                            _3308 = _3240;
                            _3309 = _3310;
                        }
                    }
                    frontier_phi_66_pred = _3240;
                    frontier_phi_66_pred_1 = _3239;
                    frontier_phi_66_pred_2 = _3238;
                    frontier_phi_66_pred_3 = _3237;
                    frontier_phi_66_pred_4 = _3236;
                    frontier_phi_66_pred_5 = _3235;
                }
                _3037 = frontier_phi_66_pred;
                _3035 = frontier_phi_66_pred_1;
                _3033 = frontier_phi_66_pred_2;
                _3031 = frontier_phi_66_pred_3;
                _3029 = frontier_phi_66_pred_4;
                _3027 = frontier_phi_66_pred_5;
                uint _3186 = _3185 + 1u;
                if (_3186 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3179 = _3027;
                    _3180 = _3029;
                    _3181 = _3031;
                    _3182 = _3033;
                    _3183 = _3035;
                    _3184 = _3037;
                    _3185 = _3186;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3026 = _3027;
            _3028 = _3029;
            _3030 = _3031;
            _3032 = _3033;
            _3034 = _3035;
            _3036 = _3037;
        }
        uvec4 _3040 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3041 = _3040.z;
        uint _3043 = (_3041 >> 8u) & 15u;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        float _3155;
        float _3157;
        if (((4294967295u << _3043) & _2915) == 0u)
        {
            _3147 = _3026;
            _3149 = _3028;
            _3151 = _3030;
            _3153 = _3032;
            _3155 = _3034;
            _3157 = _3036;
        }
        else
        {
            float _3172 = inversesqrt(dot(vec3(_1973, _1974, _1975), vec3(_1973, _1974, _1975)));
            float _3173 = _3172 * _1973;
            float _3174 = _3172 * _1974;
            float _3175 = _3172 * _1975;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3043 < ((_3041 >> 12u) & 15u))
            {
                float _3148;
                float _3150;
                float _3152;
                float _3154;
                float _3156;
                float _3158;
                float _3286 = _3026;
                float _3287 = _3028;
                float _3288 = _3030;
                float _3289 = _3032;
                float _3290 = _3034;
                float _3291 = _3036;
                uint _3292 = _3043;
                uint _3301;
                bool _3302;
                for (;;)
                {
                    _3301 = texelFetch(g_lightClassification, int((((_2909 << 5u) + (_2895 << 9u)) + (_3292 << 2u)) >> 2u)).x;
                    _3302 = _3301 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3302)
                    {
                        frontier_phi_72_pred = _3291;
                        frontier_phi_72_pred_1 = _3290;
                        frontier_phi_72_pred_2 = _3289;
                        frontier_phi_72_pred_3 = _3288;
                        frontier_phi_72_pred_4 = _3287;
                        frontier_phi_72_pred_5 = _3286;
                    }
                    else
                    {
                        float _3485;
                        float _3486;
                        float _3487;
                        float _3488;
                        float _3489;
                        float _3490;
                        float _3780;
                        float _3781;
                        float _3782;
                        float _3783;
                        float _3784;
                        float _3785;
                        float _3498 = _3286;
                        float _3499 = _3287;
                        float _3500 = _3288;
                        float _3501 = _3289;
                        float _3502 = _3290;
                        float _3503 = _3291;
                        uint _3504 = _3301;
                        uint _3505;
                        vec4 _3530;
                        float _3531;
                        vec4 _3546;
                        vec3 _3558;
                        vec4 _3573;
                        vec4 _3589;
                        float _3636;
                        bool _3637;
                        for (;;)
                        {
                            uint _3515 = ((_3292 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3504));
                            _3505 = (_3504 + 4294967295u) & _3504;
                            uint _3517 = _3515 * 40u;
                            _3530 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 3u)).x));
                            _3531 = _3530.w;
                            uint _3533 = (_3515 * 40u) + 4u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3548 = (_3515 * 40u) + 8u;
                            _3558 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3548)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 2u)).x));
                            uint _3560 = (_3515 * 40u) + 16u;
                            _3573 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3560)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 3u)).x));
                            uint _3576 = (_3515 * 40u) + 20u;
                            _3589 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3576)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 3u)).x));
                            uint _3592 = (_3515 * 40u) + 24u;
                            vec4 _3605 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3592)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 3u)).x));
                            uint _3611 = (_3515 * 40u) + 28u;
                            vec4 _3624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 3u)).x));
                            _3636 = fma(_1975, _3624.z, fma(_1974, _3624.y, _3624.x * _1973)) + _3624.w;
                            _3637 = !((fma(_1975, _3605.z, fma(_1974, _3605.y, _3605.x * _1973)) + _3605.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3637)
                            {
                                float _3664 = _3530.x - _1973;
                                float _3665 = _3530.y - _1974;
                                float _3666 = _3530.z - _1975;
                                float _3667 = dot(vec3(_3664, _3665, _3666), vec3(_3664, _3665, _3666));
                                float _3670 = inversesqrt(_3667);
                                float _3671 = _3670 * _3664;
                                float _3672 = _3670 * _3665;
                                float _3673 = _3670 * _3666;
                                float _3677 = 1.0 - (_3667 / (_3531 * _3531));
                                float _4841 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3678 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
                                float _3682 = sqrt(_3667) * _3546.w;
                                float _3684 = 1.39999997615814208984375 / (_3682 + 1.39999997615814208984375);
                                float _3685 = _3684 * _3684;
                                float _3688 = ((1.0 - _3685) * dot(vec3(_3671, _3672, _3673), vec3(_711, _714, _717))) + _3685;
                                float _3691 = _3682 * _3682;
                                float _3695 = (fma(_1975, _3573.z, fma(_1974, _3573.y, _3573.x * _1973)) + _3573.w) / _3636;
                                float _3696 = (fma(_1975, _3589.z, fma(_1974, _3589.y, _3589.x * _1973)) + _3589.w) / _3636;
                                float _3700 = 1.0 - dot(vec2(_3695, _3696), vec2(_3695, _3696));
                                float _4857 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3701 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
                                float _3702 = _3701 * (((isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0))) * _3678) / ((_3691 * 0.699999988079071044921875) + 1.0));
                                float _3714 = exp2(log2(1.0 / ((_3691 * 3.5) + 5.0)) * 0.25);
                                float _3715 = 1.0 - _914;
                                float _3722 = sqrt(1.0 - ((1.0 - (_3715 * _3715)) * (1.0 - (_3714 * _3714))));
                                float _3723 = _3722 * _3722;
                                float _3724 = _3723 * _3723;
                                float _3725 = _3671 - _3173;
                                float _3726 = _3672 - _3174;
                                float _3727 = _3673 - _3175;
                                float _3731 = inversesqrt(dot(vec3(_3725, _3726, _3727), vec3(_3725, _3726, _3727)));
                                float _3735 = dot(vec3(_711, _714, _717), vec3((-0.0) - _3173, (-0.0) - _3174, (-0.0) - _3175));
                                float _4868 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3738 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
                                float _3739 = dot(vec3(_711, _714, _717), vec3(_3731 * _3725, _3731 * _3726, _3731 * _3727));
                                float _4879 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3742 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
                                float _3746 = ((_3742 * _3742) * (_3724 + (-1.0))) + 1.0;
                                float _3747 = _3684 * _3723;
                                float _3748 = _3747 * _3747;
                                float _3754 = ((1.0 - _3748) * dot(vec3(_711, _714, _717), vec3(_3671, _3672, _3673))) + _3748;
                                float _4890 = isnan(0.0) ? _3754 : (isnan(_3754) ? 0.0 : max(_3754, 0.0));
                                float _3755 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
                                float _3756 = 1.0 - _3723;
                                float _3766 = (0.5 / (((_3755 * ((_3738 * _3756) + _3723)) + 9.9999999392252902907785028219223e-09) + (((_3755 * _3756) + _3723) * _3738))) * _3755;
                                float _4901 = isnan(0.0) ? _3766 : (isnan(_3766) ? 0.0 : max(_3766, 0.0));
                                float _3776 = (_3701 * _3678) * (((_3724 * 3.1415927410125732421875) * (isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0)))) / ((_3746 * _3746) * ((_3691 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3702 * _3546.y;
                                frontier_phi_78_pred_1 = _3702 * _3546.x;
                                frontier_phi_78_pred_2 = _3776 * _3558.z;
                                frontier_phi_78_pred_3 = _3776 * _3558.y;
                                frontier_phi_78_pred_4 = _3776 * _3558.x;
                                frontier_phi_78_pred_5 = _3702 * _3546.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3784 = frontier_phi_78_pred;
                            _3783 = frontier_phi_78_pred_1;
                            _3782 = frontier_phi_78_pred_2;
                            _3781 = frontier_phi_78_pred_3;
                            _3780 = frontier_phi_78_pred_4;
                            _3785 = frontier_phi_78_pred_5;
                            _3488 = _3783 + _3501;
                            _3489 = _3784 + _3502;
                            _3490 = _3785 + _3503;
                            _3485 = _3780 + _3498;
                            _3486 = _3781 + _3499;
                            _3487 = _3782 + _3500;
                            if (_3505 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3498 = _3485;
                                _3499 = _3486;
                                _3500 = _3487;
                                _3501 = _3488;
                                _3502 = _3489;
                                _3503 = _3490;
                                _3504 = _3505;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3490;
                        frontier_phi_72_pred_1 = _3489;
                        frontier_phi_72_pred_2 = _3488;
                        frontier_phi_72_pred_3 = _3487;
                        frontier_phi_72_pred_4 = _3486;
                        frontier_phi_72_pred_5 = _3485;
                    }
                    _3158 = frontier_phi_72_pred;
                    _3156 = frontier_phi_72_pred_1;
                    _3154 = frontier_phi_72_pred_2;
                    _3152 = frontier_phi_72_pred_3;
                    _3150 = frontier_phi_72_pred_4;
                    _3148 = frontier_phi_72_pred_5;
                    uint _3293 = _3292 + 1u;
                    if (_3293 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3286 = _3148;
                        _3287 = _3150;
                        _3288 = _3152;
                        _3289 = _3154;
                        _3290 = _3156;
                        _3291 = _3158;
                        _3292 = _3293;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3158;
                frontier_phi_60_61_ladder_1 = _3156;
                frontier_phi_60_61_ladder_2 = _3152;
                frontier_phi_60_61_ladder_3 = _3150;
                frontier_phi_60_61_ladder_4 = _3148;
                frontier_phi_60_61_ladder_5 = _3154;
            }
            else
            {
                frontier_phi_60_61_ladder = _3036;
                frontier_phi_60_61_ladder_1 = _3034;
                frontier_phi_60_61_ladder_2 = _3030;
                frontier_phi_60_61_ladder_3 = _3028;
                frontier_phi_60_61_ladder_4 = _3026;
                frontier_phi_60_61_ladder_5 = _3032;
            }
            _3147 = frontier_phi_60_61_ladder_4;
            _3149 = frontier_phi_60_61_ladder_3;
            _3151 = frontier_phi_60_61_ladder_2;
            _3153 = frontier_phi_60_61_ladder_5;
            _3155 = frontier_phi_60_61_ladder_1;
            _3157 = frontier_phi_60_61_ladder;
        }
        float _3162 = isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0));
        _2928 = (_3162 * _3153) + _2440;
        _2930 = (_3162 * _3155) + _2442;
        _2932 = (_3162 * _3157) + _2444;
        _2934 = ((_3147 * _884) * _3162) + _2778;
        _2936 = ((_3149 * _885) * _3162) + _2780;
        _2938 = ((_3151 * _886) * _3162) + _2782;
    }
    else
    {
        _2928 = _2440;
        _2930 = _2442;
        _2932 = _2444;
        _2934 = _2778;
        _2936 = _2780;
        _2938 = _2782;
    }
    uint _2944 = _791 + uint(cbMatDynParam._m0[0u].w);
    float _2950 = cbInstanceData._m0[_2944].x * (_579 ? cbMtdParam._m0[17u].w : cbMtdParam._m0[10u].w);
    float _2951 = cbInstanceData._m0[_2944].y * (_579 ? cbMtdParam._m0[18u].x : cbMtdParam._m0[11u].x);
    float _2952 = cbInstanceData._m0[_2944].z * (_579 ? cbMtdParam._m0[18u].y : cbMtdParam._m0[11u].y);
    float _4917 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _4928 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _4939 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _4950 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _2970 = (((isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0))) * (_2928 + ((isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0))) * _898))) + ((_2934 + ((isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + _2950;
    float _2972 = (_2951 + ((_2936 + ((isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0))) * (_2930 + ((isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0))) * _898)));
    float _2974 = (_2952 + ((_2938 + ((isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0))) * (_2932 + ((isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0))) * _898)));
    float _4976 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2987 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
    float _2992 = cbInstanceData._m0[_790 + 6u].w * (isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0)));
    float _2997 = _688 / cbSceneParam._m0[86u].x;
    float _2998 = _689 / cbSceneParam._m0[86u].y;
    vec4 _3012 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2997, _2998, (log2((isnan(cbSceneParam._m0[77u].w) ? _624 : (isnan(_624) ? cbSceneParam._m0[77u].w : min(_624, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3014 = _3012.x;
    float _3015 = _3012.y;
    float _3016 = _3012.z;
    float _3017 = _3012.w;
    float _3088;
    float _3090;
    float _3092;
    float _3094;
    if (_624 > cbSceneParam._m0[78u].w)
    {
        float _3051 = isnan(_624) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _624 : min(cbSceneParam._m0[80u].w, _624));
        float _3052 = _3051 / _624;
        float _3063 = _3052 * _674;
        float _3064 = _675 * _3052;
        float _3065 = (-0.0) - _3064;
        float _3066 = _3052 * _676;
        float _3068 = (cbSceneParam._m0[77u].w * _3065) / _3051;
        float _3069 = _3068 + cbSceneParam._m0[79u].w;
        float _3070 = cbSceneParam._m0[79u].w - _3064;
        float _3076 = sqrt(((_3063 * _3063) + (_3064 * _3064)) + (_3066 * _3066));
        float _3079 = (1.0 - (cbSceneParam._m0[77u].w / _3051)) * _3076;
        float _3084 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3086 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3248;
        if (abs((_3065 - _3068) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3248 = ((((_3069 > 0.0) ? exp2(_3084 * _3069) : (2.0 - exp2(_3086 * _3069))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3079;
        }
        else
        {
            float _3208 = 1.0 / cbSceneParam._m0[80u].x;
            float _3209 = isnan(_3070) ? _3069 : (isnan(_3069) ? _3070 : max(_3069, _3070));
            float _3210 = isnan(_3070) ? _3069 : (isnan(_3069) ? _3070 : min(_3069, _3070));
            float _3219 = isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : min(_3209, 0.0));
            float _3220 = isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : min(_3210, 0.0));
            _3248 = ((abs(_3076 / _3065) * cbSceneParam._m0[80u].y) * ((((_3219 - _3220) * 2.0) - ((exp2(_3084 * (isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : max(_3209, 0.0)))) - exp2(_3084 * (isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : max(_3210, 0.0))))) * _3208)) - ((exp2(_3086 * _3219) - exp2(_3086 * _3220)) * _3208))) + (_3079 * cbSceneParam._m0[80u].z);
        }
        vec4 _3250 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2997, _2998, 1.0), 0.0);
        float _3259 = exp2((_3248 * (-1.44269502162933349609375)) * (1.0 - _3250.w));
        float _3260 = log2(_3259);
        float _3276 = log2(_3017);
        _3088 = (exp2(_3276 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].x)) * _3250.x) / cbSceneParam._m0[78u].x)) + _3014;
        _3090 = (exp2(_3276 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].y)) * _3250.y) / cbSceneParam._m0[78u].y)) + _3015;
        _3092 = (exp2(_3276 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].z)) * _3250.z) / cbSceneParam._m0[78u].z)) + _3016;
        _3094 = _3259 * _3017;
    }
    else
    {
        _3088 = _3014;
        _3090 = _3015;
        _3092 = _3016;
        _3094 = _3017;
    }
    float _3106 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3107 = _3106 == 3.0;
    float _3108 = log2(_3094);
    float _3112 = exp2(_3108 * cbSceneParam._m0[78u].x);
    float _3113 = exp2(_3108 * cbSceneParam._m0[78u].y);
    float _3114 = exp2(_3108 * cbSceneParam._m0[78u].z);
    float _3115 = _3112 * (isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0)));
    float _3116 = _3113 * (isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0)));
    float _3117 = _3114 * (isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0)));
    float _3126 = (_3106 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3126 * (_3107 ? _3115 : (_3115 + (cbSceneParam._m0[72u].w * _3088)));
    SV_Target.y = _3126 * (_3107 ? _3116 : (_3116 + (cbSceneParam._m0[72u].w * _3090)));
    SV_Target.z = _3126 * (_3107 ? _3117 : (_3117 + (cbSceneParam._m0[72u].w * _3092)));
    SV_Target.w = _2992;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2950) * _2987) * _3112) * _3126;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2951) * _2987) * _3113) * _3126;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2952) * _2987) * _3114) * _3126;
    SV_Target_1.w = _2992;
}


