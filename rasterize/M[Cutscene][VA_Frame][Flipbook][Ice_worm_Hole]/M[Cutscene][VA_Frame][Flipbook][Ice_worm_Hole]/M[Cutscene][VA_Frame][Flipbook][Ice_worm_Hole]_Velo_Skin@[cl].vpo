#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_5;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out float TEXCOORD_6;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_12;
layout(location = 6, component = 1) out vec3 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    float _240 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _253 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _916 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _261 = (isnan(1.0) ? _916 : (isnan(_916) ? 1.0 : min(_916, 1.0))) * _253;
    precise float _262 = TEXCOORD_2.x * 255.0;
    precise float _264 = TEXCOORD_2.y * 255.0;
    precise float _265 = _264 * 256.0;
    precise float _267 = _262 + _265;
    precise float _268 = _267 + 0.5;
    float _270 = floor(_261);
    uint _271 = uint(int(_268));
    uint _272 = uint(int(_270));
    vec4 _273 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_271, _272)), int(0u));
    float _275 = _273.x;
    float _276 = _273.y;
    float _277 = _273.z;
    precise float _285 = _270 + 1.0;
    uint _287 = uint(int(isnan(_253) ? _285 : (isnan(_285) ? _253 : min(_285, _253))));
    vec4 _288 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_271, _287)), int(0u));
    float _293 = fract(_261);
    float _303 = (((_288.x - _275) * 2.0) * _293) + ((_275 * 2.0) + (-1.0));
    float _304 = (((_288.y - _276) * 2.0) * _293) + ((_276 * 2.0) + (-1.0));
    float _305 = (_293 * ((_288.z - _277) * 2.0)) + ((_277 * 2.0) + (-1.0));
    vec4 _306 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_271, _272)), int(0u));
    float _308 = _306.x;
    float _309 = _306.y;
    float _310 = _306.z;
    vec4 _311 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_271, _287)), int(0u));
    precise float _316 = _311.x - _308;
    precise float _317 = _311.y - _309;
    precise float _318 = _311.z - _310;
    precise float _319 = _293 * _316;
    precise float _320 = _293 * _317;
    precise float _321 = _293 * _318;
    precise float _322 = _308 + _319;
    precise float _323 = _309 + _320;
    precise float _324 = _310 + _321;
    uint _329 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _331 = texelFetch(g_InstanceIndexBuffer, int(_329));
    uint _332 = _331.x;
    precise float _333 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _336 = isnan(_333) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _333 : max(0.001000000047497451305389404296875, _333));
    precise float _338 = BLENDWEIGHT.x / _336;
    precise float _339 = BLENDWEIGHT.y / _336;
    precise float _340 = BLENDWEIGHT.z / _336;
    precise float _341 = BLENDWEIGHT.w / _336;
    uvec4 _348 = floatBitsToUint(cbInstanceData._m0[(_332 * 13u) + 4u]);
    uint _349 = _348.x;
    uint _351 = (_349 + uint(float(BLENDINDICES.x))) * 3u;
    uint _358 = _351 + 1u;
    uint _365 = _351 + 2u;
    precise float _372 = _338 * cbObjMatrix._m0[_351].x;
    precise float _373 = _338 * cbObjMatrix._m0[_358].x;
    precise float _374 = _338 * cbObjMatrix._m0[_365].x;
    precise float _375 = _338 * cbObjMatrix._m0[_351].y;
    precise float _376 = _338 * cbObjMatrix._m0[_358].y;
    precise float _377 = _338 * cbObjMatrix._m0[_365].y;
    precise float _378 = _338 * cbObjMatrix._m0[_351].z;
    precise float _379 = _338 * cbObjMatrix._m0[_358].z;
    precise float _380 = _338 * cbObjMatrix._m0[_365].z;
    precise float _381 = _338 * cbObjMatrix._m0[_351].w;
    precise float _382 = _338 * cbObjMatrix._m0[_358].w;
    precise float _383 = _338 * cbObjMatrix._m0[_365].w;
    uint _386 = (_349 + uint(float(BLENDINDICES.y))) * 3u;
    uint _393 = _386 + 1u;
    uint _400 = _386 + 2u;
    precise float _407 = _339 * cbObjMatrix._m0[_386].x;
    precise float _408 = _339 * cbObjMatrix._m0[_393].x;
    precise float _409 = _339 * cbObjMatrix._m0[_400].x;
    precise float _410 = _339 * cbObjMatrix._m0[_386].y;
    precise float _411 = _339 * cbObjMatrix._m0[_393].y;
    precise float _412 = _339 * cbObjMatrix._m0[_400].y;
    precise float _413 = _339 * cbObjMatrix._m0[_386].z;
    precise float _414 = _339 * cbObjMatrix._m0[_393].z;
    precise float _415 = _339 * cbObjMatrix._m0[_400].z;
    precise float _416 = _339 * cbObjMatrix._m0[_386].w;
    precise float _417 = _339 * cbObjMatrix._m0[_393].w;
    precise float _418 = _339 * cbObjMatrix._m0[_400].w;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    uint _433 = (_349 + uint(float(BLENDINDICES.z))) * 3u;
    uint _440 = _433 + 1u;
    uint _447 = _433 + 2u;
    precise float _454 = _340 * cbObjMatrix._m0[_433].x;
    precise float _455 = _340 * cbObjMatrix._m0[_440].x;
    precise float _456 = _340 * cbObjMatrix._m0[_447].x;
    precise float _457 = _340 * cbObjMatrix._m0[_433].y;
    precise float _458 = _340 * cbObjMatrix._m0[_440].y;
    precise float _459 = _340 * cbObjMatrix._m0[_447].y;
    precise float _460 = _340 * cbObjMatrix._m0[_433].z;
    precise float _461 = _340 * cbObjMatrix._m0[_440].z;
    precise float _462 = _340 * cbObjMatrix._m0[_447].z;
    precise float _463 = _340 * cbObjMatrix._m0[_433].w;
    precise float _464 = _340 * cbObjMatrix._m0[_440].w;
    precise float _465 = _340 * cbObjMatrix._m0[_447].w;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    uint _480 = (_349 + uint(float(BLENDINDICES.w))) * 3u;
    uint _487 = _480 + 1u;
    uint _494 = _480 + 2u;
    precise float _501 = _341 * cbObjMatrix._m0[_480].x;
    precise float _502 = _341 * cbObjMatrix._m0[_487].x;
    precise float _503 = _341 * cbObjMatrix._m0[_494].x;
    precise float _504 = _341 * cbObjMatrix._m0[_480].y;
    precise float _505 = _341 * cbObjMatrix._m0[_487].y;
    precise float _506 = _341 * cbObjMatrix._m0[_494].y;
    precise float _507 = _341 * cbObjMatrix._m0[_480].z;
    precise float _508 = _341 * cbObjMatrix._m0[_487].z;
    precise float _509 = _341 * cbObjMatrix._m0[_494].z;
    precise float _510 = _341 * cbObjMatrix._m0[_480].w;
    precise float _511 = _341 * cbObjMatrix._m0[_487].w;
    precise float _512 = _341 * cbObjMatrix._m0[_494].w;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _477 + _512;
    precise float _525 = POSITION.x * _513;
    precise float _526 = POSITION.y * _516;
    precise float _527 = _526 + _525;
    precise float _528 = POSITION.z * _519;
    precise float _529 = _528 + _527;
    precise float _530 = 1.0 * _522;
    precise float _531 = _530 + _529;
    precise float _532 = POSITION.x * _514;
    precise float _533 = POSITION.y * _517;
    precise float _534 = _533 + _532;
    precise float _535 = POSITION.z * _520;
    precise float _536 = _535 + _534;
    precise float _537 = 1.0 * _523;
    precise float _538 = _537 + _536;
    precise float _539 = POSITION.x * _515;
    precise float _540 = POSITION.y * _518;
    precise float _541 = _540 + _539;
    precise float _542 = POSITION.z * _521;
    precise float _543 = _542 + _541;
    precise float _544 = 1.0 * _524;
    precise float _545 = _544 + _543;
    precise float _546 = _322 + _531;
    precise float _547 = _323 + _538;
    precise float _548 = _324 + _545;
    float _937 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _707 = _253 * (isnan(1.0) ? _937 : (isnan(_937) ? 1.0 : min(_937, 1.0)));
    float _712 = floor(_707);
    float _713 = _712 + 1.0;
    float _715 = fract(_707);
    uint _716 = uint(int((_262 + 0.5) + (TEXCOORD_2.y * 65280.0)));
    vec4 _718 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_716, uint(int(_712)))), int(0u));
    float _720 = _718.x;
    float _721 = _718.y;
    float _722 = _718.z;
    vec4 _724 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_716, uint(int(isnan(_253) ? _713 : (isnan(_713) ? _253 : min(_713, _253)))))), int(0u));
    float _745 = (((((cbPrevObjMatrix._m0[_386].w * _339) + (cbPrevObjMatrix._m0[_351].w * _338)) + (cbPrevObjMatrix._m0[_433].w * _340)) + (cbPrevObjMatrix._m0[_480].w * _341)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_386].z * _339) + (cbPrevObjMatrix._m0[_351].z * _338)) + (cbPrevObjMatrix._m0[_433].z * _340)) + (cbPrevObjMatrix._m0[_480].z * _341), fma(POSITION.y, (((cbPrevObjMatrix._m0[_386].y * _339) + (cbPrevObjMatrix._m0[_351].y * _338)) + (cbPrevObjMatrix._m0[_433].y * _340)) + (cbPrevObjMatrix._m0[_480].y * _341), ((((cbPrevObjMatrix._m0[_386].x * _339) + (cbPrevObjMatrix._m0[_351].x * _338)) + (cbPrevObjMatrix._m0[_433].x * _340)) + (cbPrevObjMatrix._m0[_480].x * _341)) * POSITION.x))) + _720;
    float _747 = (_745 - cbSceneParam._m0[28u].x) + ((_724.x - _720) * _715);
    float _752 = (((((cbPrevObjMatrix._m0[_393].w * _339) + (cbPrevObjMatrix._m0[_358].w * _338)) + (cbPrevObjMatrix._m0[_440].w * _340)) + (cbPrevObjMatrix._m0[_487].w * _341)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_393].z * _339) + (cbPrevObjMatrix._m0[_358].z * _338)) + (cbPrevObjMatrix._m0[_440].z * _340)) + (cbPrevObjMatrix._m0[_487].z * _341), fma(POSITION.y, (((cbPrevObjMatrix._m0[_393].y * _339) + (cbPrevObjMatrix._m0[_358].y * _338)) + (cbPrevObjMatrix._m0[_440].y * _340)) + (cbPrevObjMatrix._m0[_487].y * _341), ((((cbPrevObjMatrix._m0[_393].x * _339) + (cbPrevObjMatrix._m0[_358].x * _338)) + (cbPrevObjMatrix._m0[_440].x * _340)) + (cbPrevObjMatrix._m0[_487].x * _341)) * POSITION.x))) + _721;
    float _754 = (_752 - cbSceneParam._m0[28u].y) + ((_724.y - _721) * _715);
    float _759 = (((((cbPrevObjMatrix._m0[_400].w * _339) + (cbPrevObjMatrix._m0[_365].w * _338)) + (cbPrevObjMatrix._m0[_447].w * _340)) + (cbPrevObjMatrix._m0[_494].w * _341)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_400].z * _339) + (cbPrevObjMatrix._m0[_365].z * _338)) + (cbPrevObjMatrix._m0[_447].z * _340)) + (cbPrevObjMatrix._m0[_494].z * _341), fma(POSITION.y, (((cbPrevObjMatrix._m0[_400].y * _339) + (cbPrevObjMatrix._m0[_365].y * _338)) + (cbPrevObjMatrix._m0[_447].y * _340)) + (cbPrevObjMatrix._m0[_494].y * _341), ((((cbPrevObjMatrix._m0[_400].x * _339) + (cbPrevObjMatrix._m0[_365].x * _338)) + (cbPrevObjMatrix._m0[_447].x * _340)) + (cbPrevObjMatrix._m0[_494].x * _341)) * POSITION.x))) + _722;
    float _761 = (_759 - cbSceneParam._m0[28u].z) + ((_724.z - _722) * _715);
    precise float _821 = _546 - cbSceneParam._m0[3u].x;
    precise float _822 = _547 - cbSceneParam._m0[3u].y;
    precise float _823 = _548 - cbSceneParam._m0[3u].z;
    precise float _851 = _821 * cbSceneParam._m0[24u].x;
    precise float _852 = _822 * cbSceneParam._m0[24u].y;
    precise float _853 = _852 + _851;
    precise float _854 = _823 * cbSceneParam._m0[24u].z;
    precise float _855 = _854 + _853;
    precise float _856 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _857 = _856 + _855;
    precise float _858 = _821 * cbSceneParam._m0[25u].x;
    precise float _859 = _822 * cbSceneParam._m0[25u].y;
    precise float _860 = _859 + _858;
    precise float _861 = _823 * cbSceneParam._m0[25u].z;
    precise float _862 = _861 + _860;
    precise float _863 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _864 = _863 + _862;
    precise float _865 = _821 * cbSceneParam._m0[26u].x;
    precise float _866 = _822 * cbSceneParam._m0[26u].y;
    precise float _867 = _866 + _865;
    precise float _868 = _823 * cbSceneParam._m0[26u].z;
    precise float _869 = _868 + _867;
    precise float _870 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _871 = _870 + _869;
    precise float _872 = _821 * cbSceneParam._m0[27u].x;
    precise float _873 = _822 * cbSceneParam._m0[27u].y;
    precise float _874 = _873 + _872;
    precise float _875 = _823 * cbSceneParam._m0[27u].z;
    precise float _876 = _875 + _874;
    precise float _877 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _878 = _877 + _876;
    gl_Position.x = _857;
    gl_Position.y = _864;
    gl_Position.z = _871;
    gl_Position.w = _878;
    POSITION_1.x = _857;
    POSITION_1.y = _864;
    POSITION_1.z = _871;
    POSITION_1.w = _878;
    NORMAL_1.x = _303;
    NORMAL_1.y = _304;
    NORMAL_1.z = _305;
    NORMAL_1.w = float(_332);
    TANGENT_1.x = fma(_243, _519, fma(_242, _516, _513 * _240));
    TANGENT_1.y = fma(_243, _520, fma(_242, _517, _514 * _240));
    TANGENT_1.z = fma(_243, _521, fma(_242, _518, _515 * _240));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_2.x;
    TEXCOORD_4_1.w = TEXCOORD_2.y;
    TEXCOORD_6 = COLOR_1.x;
    TEXCOORD_11.x = _857;
    TEXCOORD_11.y = _864;
    TEXCOORD_11.z = _871;
    TEXCOORD_11.w = _878;
    TEXCOORD_12.x = fma(_761, cbSceneParam._m0[29u].z, fma(_754, cbSceneParam._m0[29u].y, _747 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_761, cbSceneParam._m0[30u].z, fma(_754, cbSceneParam._m0[30u].y, _747 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_761, cbSceneParam._m0[31u].z, fma(_754, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _747)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_761, cbSceneParam._m0[32u].z, fma(_754, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _747)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _303;
    TEXCOORD_13.y = _304;
    TEXCOORD_13.z = _305;
}


