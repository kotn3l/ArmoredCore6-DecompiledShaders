#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_5;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_3;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    precise float _120 = float(int(uint(TEXCOORD_1.x))) * 0.00048828125;
    precise float _122 = float(int(uint(TEXCOORD_1.y))) * 0.00048828125;
    precise float _123 = _120 + 0.0;
    precise float _124 = _122 + 0.0;
    precise float _133 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _431 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _142 = (isnan(1.0) ? _431 : (isnan(_431) ? 1.0 : min(_431, 1.0))) * _133;
    precise float _143 = TEXCOORD_2.x * 255.0;
    precise float _145 = TEXCOORD_2.y * 255.0;
    precise float _146 = _145 * 256.0;
    precise float _148 = _143 + _146;
    precise float _149 = _148 + 0.5;
    float _151 = floor(_142);
    precise float _152 = _151 + 1.0;
    float _154 = fract(_142);
    uint _155 = uint(int(_149));
    vec4 _157 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_155, uint(int(_151)))), int(0u));
    float _159 = _157.x;
    float _160 = _157.y;
    float _161 = _157.z;
    vec4 _163 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_155, uint(int(isnan(_133) ? _152 : (isnan(_152) ? _133 : min(_152, _133)))))), int(0u));
    precise float _168 = _163.x - _159;
    precise float _169 = _163.y - _160;
    precise float _170 = _163.z - _161;
    precise float _171 = _154 * _168;
    precise float _172 = _154 * _169;
    precise float _173 = _154 * _170;
    precise float _174 = _159 + _171;
    precise float _175 = _160 + _172;
    precise float _176 = _161 + _173;
    uint _181 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _185 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _188 = isnan(_185) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _185 : max(0.001000000047497451305389404296875, _185));
    precise float _190 = BLENDWEIGHT.x / _188;
    precise float _191 = BLENDWEIGHT.y / _188;
    precise float _192 = BLENDWEIGHT.z / _188;
    precise float _193 = BLENDWEIGHT.w / _188;
    uvec4 _201 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_181)).x * 13u) + 4u]);
    uint _202 = _201.x;
    uint _204 = (_202 + uint(float(BLENDINDICES.x))) * 3u;
    uint _211 = _204 + 1u;
    uint _218 = _204 + 2u;
    precise float _225 = _190 * cbObjMatrix._m0[_204].x;
    precise float _226 = _190 * cbObjMatrix._m0[_211].x;
    precise float _227 = _190 * cbObjMatrix._m0[_218].x;
    precise float _228 = _190 * cbObjMatrix._m0[_204].y;
    precise float _229 = _190 * cbObjMatrix._m0[_211].y;
    precise float _230 = _190 * cbObjMatrix._m0[_218].y;
    precise float _231 = _190 * cbObjMatrix._m0[_204].z;
    precise float _232 = _190 * cbObjMatrix._m0[_211].z;
    precise float _233 = _190 * cbObjMatrix._m0[_218].z;
    precise float _234 = _190 * cbObjMatrix._m0[_204].w;
    precise float _235 = _190 * cbObjMatrix._m0[_211].w;
    precise float _236 = _190 * cbObjMatrix._m0[_218].w;
    uint _239 = (_202 + uint(float(BLENDINDICES.y))) * 3u;
    uint _246 = _239 + 1u;
    uint _253 = _239 + 2u;
    precise float _260 = _191 * cbObjMatrix._m0[_239].x;
    precise float _261 = _191 * cbObjMatrix._m0[_246].x;
    precise float _262 = _191 * cbObjMatrix._m0[_253].x;
    precise float _263 = _191 * cbObjMatrix._m0[_239].y;
    precise float _264 = _191 * cbObjMatrix._m0[_246].y;
    precise float _265 = _191 * cbObjMatrix._m0[_253].y;
    precise float _266 = _191 * cbObjMatrix._m0[_239].z;
    precise float _267 = _191 * cbObjMatrix._m0[_246].z;
    precise float _268 = _191 * cbObjMatrix._m0[_253].z;
    precise float _269 = _191 * cbObjMatrix._m0[_239].w;
    precise float _270 = _191 * cbObjMatrix._m0[_246].w;
    precise float _271 = _191 * cbObjMatrix._m0[_253].w;
    precise float _272 = _225 + _260;
    precise float _273 = _226 + _261;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    uint _286 = (_202 + uint(float(BLENDINDICES.z))) * 3u;
    uint _293 = _286 + 1u;
    uint _300 = _286 + 2u;
    precise float _307 = _192 * cbObjMatrix._m0[_286].x;
    precise float _308 = _192 * cbObjMatrix._m0[_293].x;
    precise float _309 = _192 * cbObjMatrix._m0[_300].x;
    precise float _310 = _192 * cbObjMatrix._m0[_286].y;
    precise float _311 = _192 * cbObjMatrix._m0[_293].y;
    precise float _312 = _192 * cbObjMatrix._m0[_300].y;
    precise float _313 = _192 * cbObjMatrix._m0[_286].z;
    precise float _314 = _192 * cbObjMatrix._m0[_293].z;
    precise float _315 = _192 * cbObjMatrix._m0[_300].z;
    precise float _316 = _192 * cbObjMatrix._m0[_286].w;
    precise float _317 = _192 * cbObjMatrix._m0[_293].w;
    precise float _318 = _192 * cbObjMatrix._m0[_300].w;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    uint _333 = (_202 + uint(float(BLENDINDICES.w))) * 3u;
    uint _340 = _333 + 1u;
    uint _347 = _333 + 2u;
    precise float _354 = _193 * cbObjMatrix._m0[_333].x;
    precise float _355 = _193 * cbObjMatrix._m0[_340].x;
    precise float _356 = _193 * cbObjMatrix._m0[_347].x;
    precise float _357 = _193 * cbObjMatrix._m0[_333].y;
    precise float _358 = _193 * cbObjMatrix._m0[_340].y;
    precise float _359 = _193 * cbObjMatrix._m0[_347].y;
    precise float _360 = _193 * cbObjMatrix._m0[_333].z;
    precise float _361 = _193 * cbObjMatrix._m0[_340].z;
    precise float _362 = _193 * cbObjMatrix._m0[_347].z;
    precise float _363 = _193 * cbObjMatrix._m0[_333].w;
    precise float _364 = _193 * cbObjMatrix._m0[_340].w;
    precise float _365 = _193 * cbObjMatrix._m0[_347].w;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = POSITION.x * _366;
    precise float _379 = POSITION.y * _369;
    precise float _380 = _379 + _378;
    precise float _381 = POSITION.z * _372;
    precise float _382 = _381 + _380;
    precise float _383 = 1.0 * _375;
    precise float _384 = _383 + _382;
    precise float _385 = POSITION.x * _367;
    precise float _386 = POSITION.y * _370;
    precise float _387 = _386 + _385;
    precise float _388 = POSITION.z * _373;
    precise float _389 = _388 + _387;
    precise float _390 = 1.0 * _376;
    precise float _391 = _390 + _389;
    precise float _392 = POSITION.x * _368;
    precise float _393 = POSITION.y * _371;
    precise float _394 = _393 + _392;
    precise float _395 = POSITION.z * _374;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * _377;
    precise float _398 = _397 + _396;
    precise float _399 = _174 + _384;
    precise float _400 = _175 + _391;
    precise float _401 = _176 + _398;
    precise float _402 = _123 * 2.0;
    precise float _404 = _124 * 2.0;
    precise float _405 = _402 + (-1.0);
    precise float _406 = 1.0 - _404;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    gl_Position.x = _405;
    gl_Position.y = _406;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_3.x = _399;
    TEXCOORD_3.y = _400;
    TEXCOORD_3.z = _401;
}


