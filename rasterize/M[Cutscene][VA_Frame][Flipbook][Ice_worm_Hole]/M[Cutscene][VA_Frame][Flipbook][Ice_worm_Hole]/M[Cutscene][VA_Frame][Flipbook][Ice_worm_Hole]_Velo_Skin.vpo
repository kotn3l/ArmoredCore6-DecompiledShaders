#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_5;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out float TEXCOORD_6;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_12;
layout(location = 6, component = 1) out vec3 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _245 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _258 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _942 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _266 = (isnan(1.0) ? _942 : (isnan(_942) ? 1.0 : min(_942, 1.0))) * _258;
    precise float _267 = TEXCOORD_2.x * 255.0;
    precise float _269 = TEXCOORD_2.y * 255.0;
    precise float _270 = _269 * 256.0;
    precise float _272 = _267 + _270;
    precise float _273 = _272 + 0.5;
    float _275 = floor(_266);
    uint _276 = uint(int(_273));
    uint _277 = uint(int(_275));
    vec4 _278 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_276, _277)), int(0u));
    float _280 = _278.x;
    float _281 = _278.y;
    float _282 = _278.z;
    precise float _290 = _275 + 1.0;
    uint _292 = uint(int(isnan(_258) ? _290 : (isnan(_290) ? _258 : min(_290, _258))));
    vec4 _293 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_276, _292)), int(0u));
    float _298 = fract(_266);
    float _308 = (((_293.x - _280) * 2.0) * _298) + ((_280 * 2.0) + (-1.0));
    float _309 = (((_293.y - _281) * 2.0) * _298) + ((_281 * 2.0) + (-1.0));
    float _310 = (_298 * ((_293.z - _282) * 2.0)) + ((_282 * 2.0) + (-1.0));
    vec4 _311 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_276, _277)), int(0u));
    float _313 = _311.x;
    float _314 = _311.y;
    float _315 = _311.z;
    vec4 _316 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_276, _292)), int(0u));
    precise float _321 = _316.x - _313;
    precise float _322 = _316.y - _314;
    precise float _323 = _316.z - _315;
    precise float _324 = _298 * _321;
    precise float _325 = _298 * _322;
    precise float _326 = _298 * _323;
    precise float _327 = _313 + _324;
    precise float _328 = _314 + _325;
    precise float _329 = _315 + _326;
    uint _334 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _336 = texelFetch(g_InstanceIndexBuffer, int(_334));
    uint _337 = _336.x;
    precise float _338 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _341 = isnan(_338) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _338 : max(0.001000000047497451305389404296875, _338));
    precise float _343 = BLENDWEIGHT.x / _341;
    precise float _344 = BLENDWEIGHT.y / _341;
    precise float _345 = BLENDWEIGHT.z / _341;
    precise float _346 = BLENDWEIGHT.w / _341;
    uint _348 = _337 * 13u;
    uvec4 _353 = floatBitsToUint(cbInstanceData._m0[_348 + 4u]);
    uint _354 = _353.x;
    uint _356 = (_354 + uint(float(BLENDINDICES.x))) * 3u;
    uint _363 = _356 + 1u;
    uint _370 = _356 + 2u;
    precise float _377 = _343 * cbObjMatrix._m0[_356].x;
    precise float _378 = _343 * cbObjMatrix._m0[_363].x;
    precise float _379 = _343 * cbObjMatrix._m0[_370].x;
    precise float _380 = _343 * cbObjMatrix._m0[_356].y;
    precise float _381 = _343 * cbObjMatrix._m0[_363].y;
    precise float _382 = _343 * cbObjMatrix._m0[_370].y;
    precise float _383 = _343 * cbObjMatrix._m0[_356].z;
    precise float _384 = _343 * cbObjMatrix._m0[_363].z;
    precise float _385 = _343 * cbObjMatrix._m0[_370].z;
    precise float _386 = _343 * cbObjMatrix._m0[_356].w;
    precise float _387 = _343 * cbObjMatrix._m0[_363].w;
    precise float _388 = _343 * cbObjMatrix._m0[_370].w;
    uint _391 = (_354 + uint(float(BLENDINDICES.y))) * 3u;
    uint _398 = _391 + 1u;
    uint _405 = _391 + 2u;
    precise float _412 = _344 * cbObjMatrix._m0[_391].x;
    precise float _413 = _344 * cbObjMatrix._m0[_398].x;
    precise float _414 = _344 * cbObjMatrix._m0[_405].x;
    precise float _415 = _344 * cbObjMatrix._m0[_391].y;
    precise float _416 = _344 * cbObjMatrix._m0[_398].y;
    precise float _417 = _344 * cbObjMatrix._m0[_405].y;
    precise float _418 = _344 * cbObjMatrix._m0[_391].z;
    precise float _419 = _344 * cbObjMatrix._m0[_398].z;
    precise float _420 = _344 * cbObjMatrix._m0[_405].z;
    precise float _421 = _344 * cbObjMatrix._m0[_391].w;
    precise float _422 = _344 * cbObjMatrix._m0[_398].w;
    precise float _423 = _344 * cbObjMatrix._m0[_405].w;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    uint _438 = (_354 + uint(float(BLENDINDICES.z))) * 3u;
    uint _445 = _438 + 1u;
    uint _452 = _438 + 2u;
    precise float _459 = _345 * cbObjMatrix._m0[_438].x;
    precise float _460 = _345 * cbObjMatrix._m0[_445].x;
    precise float _461 = _345 * cbObjMatrix._m0[_452].x;
    precise float _462 = _345 * cbObjMatrix._m0[_438].y;
    precise float _463 = _345 * cbObjMatrix._m0[_445].y;
    precise float _464 = _345 * cbObjMatrix._m0[_452].y;
    precise float _465 = _345 * cbObjMatrix._m0[_438].z;
    precise float _466 = _345 * cbObjMatrix._m0[_445].z;
    precise float _467 = _345 * cbObjMatrix._m0[_452].z;
    precise float _468 = _345 * cbObjMatrix._m0[_438].w;
    precise float _469 = _345 * cbObjMatrix._m0[_445].w;
    precise float _470 = _345 * cbObjMatrix._m0[_452].w;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    uint _485 = (_354 + uint(float(BLENDINDICES.w))) * 3u;
    uint _492 = _485 + 1u;
    uint _499 = _485 + 2u;
    precise float _506 = _346 * cbObjMatrix._m0[_485].x;
    precise float _507 = _346 * cbObjMatrix._m0[_492].x;
    precise float _508 = _346 * cbObjMatrix._m0[_499].x;
    precise float _509 = _346 * cbObjMatrix._m0[_485].y;
    precise float _510 = _346 * cbObjMatrix._m0[_492].y;
    precise float _511 = _346 * cbObjMatrix._m0[_499].y;
    precise float _512 = _346 * cbObjMatrix._m0[_485].z;
    precise float _513 = _346 * cbObjMatrix._m0[_492].z;
    precise float _514 = _346 * cbObjMatrix._m0[_499].z;
    precise float _515 = _346 * cbObjMatrix._m0[_485].w;
    precise float _516 = _346 * cbObjMatrix._m0[_492].w;
    precise float _517 = _346 * cbObjMatrix._m0[_499].w;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _477 + _512;
    precise float _525 = _478 + _513;
    precise float _526 = _479 + _514;
    precise float _527 = _480 + _515;
    precise float _528 = _481 + _516;
    precise float _529 = _482 + _517;
    precise float _530 = POSITION.x * _518;
    precise float _531 = POSITION.y * _521;
    precise float _532 = _531 + _530;
    precise float _533 = POSITION.z * _524;
    precise float _534 = _533 + _532;
    precise float _535 = 1.0 * _527;
    precise float _536 = _535 + _534;
    precise float _537 = POSITION.x * _519;
    precise float _538 = POSITION.y * _522;
    precise float _539 = _538 + _537;
    precise float _540 = POSITION.z * _525;
    precise float _541 = _540 + _539;
    precise float _542 = 1.0 * _528;
    precise float _543 = _542 + _541;
    precise float _544 = POSITION.x * _520;
    precise float _545 = POSITION.y * _523;
    precise float _546 = _545 + _544;
    precise float _547 = POSITION.z * _526;
    precise float _548 = _547 + _546;
    precise float _549 = 1.0 * _529;
    precise float _550 = _549 + _548;
    precise float _551 = _327 + _536;
    precise float _552 = _328 + _543;
    precise float _553 = _329 + _550;
    float _963 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _712 = _258 * (isnan(1.0) ? _963 : (isnan(_963) ? 1.0 : min(_963, 1.0)));
    float _717 = floor(_712);
    float _718 = _717 + 1.0;
    float _720 = fract(_712);
    uint _721 = uint(int((_267 + 0.5) + (TEXCOORD_2.y * 65280.0)));
    vec4 _723 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_721, uint(int(_717)))), int(0u));
    float _725 = _723.x;
    float _726 = _723.y;
    float _727 = _723.z;
    vec4 _729 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_721, uint(int(isnan(_258) ? _718 : (isnan(_718) ? _258 : min(_718, _258)))))), int(0u));
    float _750 = (((((cbPrevObjMatrix._m0[_391].w * _344) + (cbPrevObjMatrix._m0[_356].w * _343)) + (cbPrevObjMatrix._m0[_438].w * _345)) + (cbPrevObjMatrix._m0[_485].w * _346)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_391].z * _344) + (cbPrevObjMatrix._m0[_356].z * _343)) + (cbPrevObjMatrix._m0[_438].z * _345)) + (cbPrevObjMatrix._m0[_485].z * _346), fma(POSITION.y, (((cbPrevObjMatrix._m0[_391].y * _344) + (cbPrevObjMatrix._m0[_356].y * _343)) + (cbPrevObjMatrix._m0[_438].y * _345)) + (cbPrevObjMatrix._m0[_485].y * _346), ((((cbPrevObjMatrix._m0[_391].x * _344) + (cbPrevObjMatrix._m0[_356].x * _343)) + (cbPrevObjMatrix._m0[_438].x * _345)) + (cbPrevObjMatrix._m0[_485].x * _346)) * POSITION.x))) + _725;
    float _752 = (_750 - cbSceneParam._m0[28u].x) + ((_729.x - _725) * _720);
    float _757 = (((((cbPrevObjMatrix._m0[_398].w * _344) + (cbPrevObjMatrix._m0[_363].w * _343)) + (cbPrevObjMatrix._m0[_445].w * _345)) + (cbPrevObjMatrix._m0[_492].w * _346)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_398].z * _344) + (cbPrevObjMatrix._m0[_363].z * _343)) + (cbPrevObjMatrix._m0[_445].z * _345)) + (cbPrevObjMatrix._m0[_492].z * _346), fma(POSITION.y, (((cbPrevObjMatrix._m0[_398].y * _344) + (cbPrevObjMatrix._m0[_363].y * _343)) + (cbPrevObjMatrix._m0[_445].y * _345)) + (cbPrevObjMatrix._m0[_492].y * _346), ((((cbPrevObjMatrix._m0[_398].x * _344) + (cbPrevObjMatrix._m0[_363].x * _343)) + (cbPrevObjMatrix._m0[_445].x * _345)) + (cbPrevObjMatrix._m0[_492].x * _346)) * POSITION.x))) + _726;
    float _759 = (_757 - cbSceneParam._m0[28u].y) + ((_729.y - _726) * _720);
    float _764 = (((((cbPrevObjMatrix._m0[_405].w * _344) + (cbPrevObjMatrix._m0[_370].w * _343)) + (cbPrevObjMatrix._m0[_452].w * _345)) + (cbPrevObjMatrix._m0[_499].w * _346)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_405].z * _344) + (cbPrevObjMatrix._m0[_370].z * _343)) + (cbPrevObjMatrix._m0[_452].z * _345)) + (cbPrevObjMatrix._m0[_499].z * _346), fma(POSITION.y, (((cbPrevObjMatrix._m0[_405].y * _344) + (cbPrevObjMatrix._m0[_370].y * _343)) + (cbPrevObjMatrix._m0[_452].y * _345)) + (cbPrevObjMatrix._m0[_499].y * _346), ((((cbPrevObjMatrix._m0[_405].x * _344) + (cbPrevObjMatrix._m0[_370].x * _343)) + (cbPrevObjMatrix._m0[_452].x * _345)) + (cbPrevObjMatrix._m0[_499].x * _346)) * POSITION.x))) + _727;
    float _766 = (_764 - cbSceneParam._m0[28u].z) + ((_729.z - _727) * _720);
    precise float _826 = _551 - cbSceneParam._m0[3u].x;
    precise float _827 = _552 - cbSceneParam._m0[3u].y;
    precise float _828 = _553 - cbSceneParam._m0[3u].z;
    precise float _856 = _826 * cbSceneParam._m0[24u].x;
    precise float _857 = _827 * cbSceneParam._m0[24u].y;
    precise float _858 = _857 + _856;
    precise float _859 = _828 * cbSceneParam._m0[24u].z;
    precise float _860 = _859 + _858;
    precise float _861 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _862 = _861 + _860;
    precise float _863 = _826 * cbSceneParam._m0[25u].x;
    precise float _864 = _827 * cbSceneParam._m0[25u].y;
    precise float _865 = _864 + _863;
    precise float _866 = _828 * cbSceneParam._m0[25u].z;
    precise float _867 = _866 + _865;
    precise float _868 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _869 = _868 + _867;
    precise float _870 = _826 * cbSceneParam._m0[26u].x;
    precise float _871 = _827 * cbSceneParam._m0[26u].y;
    precise float _872 = _871 + _870;
    precise float _873 = _828 * cbSceneParam._m0[26u].z;
    precise float _874 = _873 + _872;
    precise float _875 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _876 = _875 + _874;
    precise float _877 = _826 * cbSceneParam._m0[27u].x;
    precise float _878 = _827 * cbSceneParam._m0[27u].y;
    precise float _879 = _878 + _877;
    precise float _880 = _828 * cbSceneParam._m0[27u].z;
    precise float _881 = _880 + _879;
    precise float _882 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _883 = _882 + _881;
    gl_Position.x = _862;
    gl_Position.y = _869;
    gl_Position.z = _876;
    gl_Position.w = _883;
    POSITION_1.x = _862;
    POSITION_1.y = _869;
    POSITION_1.z = _876;
    POSITION_1.w = _883;
    NORMAL_1.x = _308;
    NORMAL_1.y = _309;
    NORMAL_1.z = _310;
    NORMAL_1.w = float(_337);
    TANGENT_1.x = fma(_248, _524, fma(_247, _521, _518 * _245));
    TANGENT_1.y = fma(_248, _525, fma(_247, _522, _519 * _245));
    TANGENT_1.z = fma(_248, _526, fma(_247, _523, _520 * _245));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_2.x;
    TEXCOORD_4_1.w = TEXCOORD_2.y;
    TEXCOORD_6 = COLOR_1.x;
    TEXCOORD_11.x = _862;
    TEXCOORD_11.y = _869;
    TEXCOORD_11.z = _876;
    TEXCOORD_11.w = _883;
    TEXCOORD_12.x = fma(_766, cbSceneParam._m0[29u].z, fma(_759, cbSceneParam._m0[29u].y, _752 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_766, cbSceneParam._m0[30u].z, fma(_759, cbSceneParam._m0[30u].y, _752 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_766, cbSceneParam._m0[31u].z, fma(_759, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _752)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_766, cbSceneParam._m0[32u].z, fma(_759, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _752)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _308;
    TEXCOORD_13.y = _309;
    TEXCOORD_13.z = _310;
    gl_ClipDistance[0u] = dot(vec4(_862, _869, _876, _883), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_862, _869, _876, _883), vec4(cbInstanceData._m0[_348 + 3u]));
}


