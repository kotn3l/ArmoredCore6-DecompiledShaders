#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in ivec2 TEXCOORD_1;
layout(location = 6) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_6 = 0.0;
    float _204 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _213 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _446 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _221 = (isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0))) * _213;
    precise float _222 = TEXCOORD_2.x * 255.0;
    precise float _224 = TEXCOORD_2.y * 255.0;
    precise float _225 = _224 * 256.0;
    precise float _227 = _222 + _225;
    precise float _228 = _227 + 0.5;
    float _230 = floor(_221);
    uint _231 = uint(int(_228));
    uint _232 = uint(int(_230));
    vec4 _233 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_231, _232)), int(0u));
    float _235 = _233.x;
    float _236 = _233.y;
    float _237 = _233.z;
    precise float _245 = _230 + 1.0;
    uint _247 = uint(int(isnan(_213) ? _245 : (isnan(_245) ? _213 : min(_245, _213))));
    vec4 _248 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_3, ivec2(uvec2(_231, _247)), int(0u));
    float _253 = fract(_221);
    vec4 _266 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_231, _232)), int(0u));
    float _268 = _266.x;
    float _269 = _266.y;
    float _270 = _266.z;
    vec4 _271 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_231, _247)), int(0u));
    precise float _276 = _271.x - _268;
    precise float _277 = _271.y - _269;
    precise float _278 = _271.z - _270;
    precise float _279 = _253 * _276;
    precise float _280 = _253 * _277;
    precise float _281 = _253 * _278;
    precise float _282 = _268 + _279;
    precise float _283 = _269 + _280;
    precise float _284 = _270 + _281;
    uint _289 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _291 = texelFetch(g_InstanceIndexBuffer, int(_289));
    uint _292 = _291.x;
    uint _302 = (floatBitsToUint(cbInstanceData._m0[(_292 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _309 = _302 + 1u;
    uint _316 = _302 + 2u;
    precise float _323 = POSITION.x * cbObjMatrix._m0[_302].x;
    precise float _324 = POSITION.y * cbObjMatrix._m0[_302].y;
    precise float _325 = _324 + _323;
    precise float _326 = POSITION.z * cbObjMatrix._m0[_302].z;
    precise float _327 = _326 + _325;
    precise float _328 = 1.0 * cbObjMatrix._m0[_302].w;
    precise float _329 = _328 + _327;
    precise float _330 = POSITION.x * cbObjMatrix._m0[_309].x;
    precise float _331 = POSITION.y * cbObjMatrix._m0[_309].y;
    precise float _332 = _331 + _330;
    precise float _333 = POSITION.z * cbObjMatrix._m0[_309].z;
    precise float _334 = _333 + _332;
    precise float _335 = 1.0 * cbObjMatrix._m0[_309].w;
    precise float _336 = _335 + _334;
    precise float _337 = POSITION.x * cbObjMatrix._m0[_316].x;
    precise float _338 = POSITION.y * cbObjMatrix._m0[_316].y;
    precise float _339 = _338 + _337;
    precise float _340 = POSITION.z * cbObjMatrix._m0[_316].z;
    precise float _341 = _340 + _339;
    precise float _342 = 1.0 * cbObjMatrix._m0[_316].w;
    precise float _343 = _342 + _341;
    precise float _344 = _282 + _329;
    precise float _345 = _283 + _336;
    precise float _346 = _284 + _343;
    precise float _362 = _344 - cbSceneParam._m0[3u].x;
    precise float _363 = _345 - cbSceneParam._m0[3u].y;
    precise float _364 = _346 - cbSceneParam._m0[3u].z;
    precise float _392 = _362 * cbSceneParam._m0[24u].x;
    precise float _393 = _363 * cbSceneParam._m0[24u].y;
    precise float _394 = _393 + _392;
    precise float _395 = _364 * cbSceneParam._m0[24u].z;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _398 = _397 + _396;
    precise float _399 = _362 * cbSceneParam._m0[25u].x;
    precise float _400 = _363 * cbSceneParam._m0[25u].y;
    precise float _401 = _400 + _399;
    precise float _402 = _364 * cbSceneParam._m0[25u].z;
    precise float _403 = _402 + _401;
    precise float _404 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _405 = _404 + _403;
    precise float _406 = _362 * cbSceneParam._m0[26u].x;
    precise float _407 = _363 * cbSceneParam._m0[26u].y;
    precise float _408 = _407 + _406;
    precise float _409 = _364 * cbSceneParam._m0[26u].z;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _412 = _411 + _410;
    precise float _413 = _362 * cbSceneParam._m0[27u].x;
    precise float _414 = _363 * cbSceneParam._m0[27u].y;
    precise float _415 = _414 + _413;
    precise float _416 = _364 * cbSceneParam._m0[27u].z;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _419 = _418 + _417;
    gl_Position.x = _398;
    gl_Position.y = _405;
    gl_Position.z = _412;
    gl_Position.w = _419;
    POSITION_1.x = _398;
    POSITION_1.y = _405;
    POSITION_1.z = _412;
    POSITION_1.w = _419;
    NORMAL_1.x = (((_248.x - _235) * 2.0) * _253) + ((_235 * 2.0) + (-1.0));
    NORMAL_1.y = (((_248.y - _236) * 2.0) * _253) + ((_236 * 2.0) + (-1.0));
    NORMAL_1.z = (_253 * ((_248.z - _237) * 2.0)) + ((_237 * 2.0) + (-1.0));
    NORMAL_1.w = float(_292);
    TANGENT_1.x = fma(_207, cbObjMatrix._m0[_302].z, fma(_206, cbObjMatrix._m0[_302].y, cbObjMatrix._m0[_302].x * _204));
    TANGENT_1.y = fma(_207, cbObjMatrix._m0[_309].z, fma(_206, cbObjMatrix._m0[_309].y, cbObjMatrix._m0[_309].x * _204));
    TANGENT_1.z = fma(_207, cbObjMatrix._m0[_316].z, fma(_206, cbObjMatrix._m0[_316].y, cbObjMatrix._m0[_316].x * _204));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.z = TEXCOORD_2.x;
    TEXCOORD_4.w = TEXCOORD_2.y;
    TEXCOORD_6 = COLOR_1.x;
}


