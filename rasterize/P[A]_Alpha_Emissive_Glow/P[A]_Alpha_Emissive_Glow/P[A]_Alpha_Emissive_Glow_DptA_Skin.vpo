#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_5;
layout(location = 4, component = 2) out float TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_9 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _166 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _190 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _192 = texelFetch(g_InstanceIndexBuffer, int(_190));
    uint _193 = _192.x;
    precise float _194 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _199 = isnan(_194) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _194 : max(0.001000000047497451305389404296875, _194));
    precise float _201 = BLENDWEIGHT.x / _199;
    precise float _202 = BLENDWEIGHT.y / _199;
    precise float _203 = BLENDWEIGHT.z / _199;
    precise float _204 = BLENDWEIGHT.w / _199;
    uint _206 = _193 * 13u;
    uvec4 _211 = floatBitsToUint(cbInstanceData._m0[_206 + 4u]);
    uint _212 = _211.x;
    uint _214 = (_212 + uint(float(BLENDINDICES.x))) * 3u;
    uint _221 = _214 + 1u;
    uint _228 = _214 + 2u;
    precise float _235 = _201 * cbObjMatrix._m0[_214].x;
    precise float _236 = _201 * cbObjMatrix._m0[_221].x;
    precise float _237 = _201 * cbObjMatrix._m0[_228].x;
    precise float _238 = _201 * cbObjMatrix._m0[_214].y;
    precise float _239 = _201 * cbObjMatrix._m0[_221].y;
    precise float _240 = _201 * cbObjMatrix._m0[_228].y;
    precise float _241 = _201 * cbObjMatrix._m0[_214].z;
    precise float _242 = _201 * cbObjMatrix._m0[_221].z;
    precise float _243 = _201 * cbObjMatrix._m0[_228].z;
    precise float _244 = _201 * cbObjMatrix._m0[_214].w;
    precise float _245 = _201 * cbObjMatrix._m0[_221].w;
    precise float _246 = _201 * cbObjMatrix._m0[_228].w;
    uint _249 = (_212 + uint(float(BLENDINDICES.y))) * 3u;
    uint _256 = _249 + 1u;
    uint _263 = _249 + 2u;
    precise float _270 = _202 * cbObjMatrix._m0[_249].x;
    precise float _271 = _202 * cbObjMatrix._m0[_256].x;
    precise float _272 = _202 * cbObjMatrix._m0[_263].x;
    precise float _273 = _202 * cbObjMatrix._m0[_249].y;
    precise float _274 = _202 * cbObjMatrix._m0[_256].y;
    precise float _275 = _202 * cbObjMatrix._m0[_263].y;
    precise float _276 = _202 * cbObjMatrix._m0[_249].z;
    precise float _277 = _202 * cbObjMatrix._m0[_256].z;
    precise float _278 = _202 * cbObjMatrix._m0[_263].z;
    precise float _279 = _202 * cbObjMatrix._m0[_249].w;
    precise float _280 = _202 * cbObjMatrix._m0[_256].w;
    precise float _281 = _202 * cbObjMatrix._m0[_263].w;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    uint _296 = (_212 + uint(float(BLENDINDICES.z))) * 3u;
    uint _303 = _296 + 1u;
    uint _310 = _296 + 2u;
    precise float _317 = _203 * cbObjMatrix._m0[_296].x;
    precise float _318 = _203 * cbObjMatrix._m0[_303].x;
    precise float _319 = _203 * cbObjMatrix._m0[_310].x;
    precise float _320 = _203 * cbObjMatrix._m0[_296].y;
    precise float _321 = _203 * cbObjMatrix._m0[_303].y;
    precise float _322 = _203 * cbObjMatrix._m0[_310].y;
    precise float _323 = _203 * cbObjMatrix._m0[_296].z;
    precise float _324 = _203 * cbObjMatrix._m0[_303].z;
    precise float _325 = _203 * cbObjMatrix._m0[_310].z;
    precise float _326 = _203 * cbObjMatrix._m0[_296].w;
    precise float _327 = _203 * cbObjMatrix._m0[_303].w;
    precise float _328 = _203 * cbObjMatrix._m0[_310].w;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    uint _343 = (_212 + uint(float(BLENDINDICES.w))) * 3u;
    uint _350 = _343 + 1u;
    uint _357 = _343 + 2u;
    precise float _364 = _204 * cbObjMatrix._m0[_343].x;
    precise float _365 = _204 * cbObjMatrix._m0[_350].x;
    precise float _366 = _204 * cbObjMatrix._m0[_357].x;
    precise float _367 = _204 * cbObjMatrix._m0[_343].y;
    precise float _368 = _204 * cbObjMatrix._m0[_350].y;
    precise float _369 = _204 * cbObjMatrix._m0[_357].y;
    precise float _370 = _204 * cbObjMatrix._m0[_343].z;
    precise float _371 = _204 * cbObjMatrix._m0[_350].z;
    precise float _372 = _204 * cbObjMatrix._m0[_357].z;
    precise float _373 = _204 * cbObjMatrix._m0[_343].w;
    precise float _374 = _204 * cbObjMatrix._m0[_350].w;
    precise float _375 = _204 * cbObjMatrix._m0[_357].w;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = POSITION.x * _376;
    precise float _389 = POSITION.y * _379;
    precise float _390 = _389 + _388;
    precise float _391 = POSITION.z * _382;
    precise float _392 = _391 + _390;
    precise float _393 = 1.0 * _385;
    precise float _394 = _393 + _392;
    precise float _395 = POSITION.x * _377;
    precise float _396 = POSITION.y * _380;
    precise float _397 = _396 + _395;
    precise float _398 = POSITION.z * _383;
    precise float _399 = _398 + _397;
    precise float _400 = 1.0 * _386;
    precise float _401 = _400 + _399;
    precise float _402 = POSITION.x * _378;
    precise float _403 = POSITION.y * _381;
    precise float _404 = _403 + _402;
    precise float _405 = POSITION.z * _384;
    precise float _406 = _405 + _404;
    precise float _407 = 1.0 * _387;
    precise float _408 = _407 + _406;
    float _414 = cbSceneParam._m0[3u].x - _394;
    float _415 = cbSceneParam._m0[3u].y - _401;
    float _416 = cbSceneParam._m0[3u].z - _408;
    precise float _442 = _394 - cbSceneParam._m0[3u].x;
    precise float _443 = _401 - cbSceneParam._m0[3u].y;
    precise float _444 = _408 - cbSceneParam._m0[3u].z;
    precise float _472 = _442 * cbSceneParam._m0[24u].x;
    precise float _473 = _443 * cbSceneParam._m0[24u].y;
    precise float _474 = _473 + _472;
    precise float _475 = _444 * cbSceneParam._m0[24u].z;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _478 = _477 + _476;
    precise float _479 = _442 * cbSceneParam._m0[25u].x;
    precise float _480 = _443 * cbSceneParam._m0[25u].y;
    precise float _481 = _480 + _479;
    precise float _482 = _444 * cbSceneParam._m0[25u].z;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _485 = _484 + _483;
    precise float _486 = _442 * cbSceneParam._m0[26u].x;
    precise float _487 = _443 * cbSceneParam._m0[26u].y;
    precise float _488 = _487 + _486;
    precise float _489 = _444 * cbSceneParam._m0[26u].z;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _492 = _491 + _490;
    precise float _493 = _442 * cbSceneParam._m0[27u].x;
    precise float _494 = _443 * cbSceneParam._m0[27u].y;
    precise float _495 = _494 + _493;
    precise float _496 = _444 * cbSceneParam._m0[27u].z;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _499 = _498 + _497;
    gl_Position.x = _478;
    gl_Position.y = _485;
    gl_Position.z = _492;
    gl_Position.w = _499;
    NORMAL_1.x = fma(_169, _382, fma(_168, _379, _376 * _166));
    NORMAL_1.y = fma(_169, _383, fma(_168, _380, _377 * _166));
    NORMAL_1.z = fma(_169, _384, fma(_168, _381, _378 * _166));
    NORMAL_1.w = float(_193);
    TANGENT_1.x = fma(_180, _382, fma(_179, _379, _376 * _178));
    TANGENT_1.y = fma(_180, _383, fma(_179, _380, _377 * _178));
    TANGENT_1.z = fma(_180, _384, fma(_179, _381, _378 * _178));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_5.x = _492;
    TEXCOORD_5.y = _499;
    TEXCOORD_9 = sqrt(((_414 * _414) + (_415 * _415)) + (_416 * _416));
    gl_ClipDistance[0u] = dot(vec4(_478, _485, _492, _499), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_478, _485, _492, _499), vec4(cbInstanceData._m0[_206 + 3u]));
}


