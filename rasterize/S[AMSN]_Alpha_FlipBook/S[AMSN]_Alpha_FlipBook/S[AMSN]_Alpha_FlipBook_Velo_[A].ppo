#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Alpha_FlipBook_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    uint _120 = uint(int(floor(cbMtdParam._m0[10u].y)));
    uint _121 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _123 = float(int(_120 - _121 * (_120 / _121)));
    vec4 _148 = texture(sampler2D(S_AMSN_Alpha_FlipBook_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((fract(TEXCOORD_1.x) + (_123 - cbMtdParam._m0[10u].w * trunc(_123 / cbMtdParam._m0[10u].w))) * (1.0 / cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((fract(TEXCOORD_1.y) + floor(_123 / cbMtdParam._m0[10u].w)) * (1.0 / cbMtdParam._m0[11u].x)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _154 = gl_FragCoord.x * 0.125;
    float _156 = gl_FragCoord.y * 0.125;
    vec4 _158 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_154, _156));
    float _166 = float(((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * _148.w) >= ((_158.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _168 = uint(roundEven(NORMAL.w));
    float _182 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _223 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _233 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _223);
    float _234 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _223);
    float _235 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _223);
    vec4 _236 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_154, _156));
    float _238 = _236.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _274 = sqrt(((_233 * _233) + (_234 * _234)) + (_235 * _235));
        float _281 = (cbMatDynParam._m0[5u].x * _274) + cbMatDynParam._m0[5u].y;
        float _367 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
        float _282 = isnan(1.0) ? _367 : (isnan(_367) ? 1.0 : min(_367, 1.0));
        float _286 = (cbMatDynParam._m0[5u].z * _274) + cbMatDynParam._m0[5u].w;
        float _378 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _378 : (isnan(_378) ? 1.0 : min(_378, 1.0))) - _282)) + _282) < ((_238 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _317;
    float _249;
    float _250;
    vec4 _254;
    float _256;
    float _257;
    bool _268;
    for (;;)
    {
        _249 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _250 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _251 = _238 + (-0.5);
        _254 = cbMtdParam._m0[1u];
        _256 = _254.y * _251;
        _257 = _251 * 0.999000012874603271484375;
        _268 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_268)
        {
            if ((cbInstanceData._m0[(_168 * 13u) + 7u].x + _257) < 0.5)
            {
                _317 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _257) < 0.5))
        {
            _317 = true;
            break;
        }
        if ((_256 + _166) < _254.x)
        {
            _317 = true;
            break;
        }
        _317 = false;
        break;
    }
    if (_317)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _249) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _250) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _182 / (_182 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


