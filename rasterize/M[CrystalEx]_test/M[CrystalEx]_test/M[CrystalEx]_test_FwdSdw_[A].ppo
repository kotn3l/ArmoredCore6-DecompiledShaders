#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D M_CrystalEx_test_snp_0_Screen_0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _735;
uint _2492;
uint _2493;
uint _2494;
uint _2764;
uint _2765;
uint _2766;
float _3034;
float _3035;
float _3036;
float _3037;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _158 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = _158 * NORMAL.x;
    float _160 = _158 * NORMAL.y;
    float _161 = _158 * NORMAL.z;
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _159;
        _167 = (-0.0) - _160;
        _168 = (-0.0) - _161;
    }
    else
    {
        _166 = _159;
        _167 = _160;
        _168 = _161;
    }
    float _213 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _223 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _213);
    float _224 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _213);
    float _225 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _213);
    float _246 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _247 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    float _254 = isnan(cbInstanceData._m0[8u].x) ? _246 : (isnan(_246) ? cbInstanceData._m0[8u].x : max(_246, cbInstanceData._m0[8u].x));
    float _255 = isnan(cbInstanceData._m0[8u].y) ? _247 : (isnan(_247) ? cbInstanceData._m0[8u].y : max(_247, cbInstanceData._m0[8u].y));
    vec4 _260 = texture(sampler2D(M_CrystalEx_test_snp_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _254 : (isnan(_254) ? cbInstanceData._m0[8u].z : min(_254, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _255 : (isnan(_255) ? cbInstanceData._m0[8u].w : min(_255, cbInstanceData._m0[8u].w))));
    float _283 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _284 = _283 * _223;
    float _285 = _283 * _224;
    float _286 = _283 * _225;
    float _290 = abs(dot(vec4(_166, _167, _168, 0.0), vec4(_284, _285, _286, 0.0)));
    float _291 = log2(cbMtdParam._m0[10u].y);
    float _313 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _314 = _313 * _166;
    float _315 = _313 * _167;
    float _316 = _313 * _168;
    float _3066 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _318 = isnan(1.0) ? _3066 : (isnan(_3066) ? 1.0 : min(_3066, 1.0));
    float _3077 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _319 = isnan(1.0) ? _3077 : (isnan(_3077) ? 1.0 : min(_3077, 1.0));
    float _3088 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _320 = isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0));
    float _3099 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _321 = isnan(1.0) ? _3099 : (isnan(_3099) ? 1.0 : min(_3099, 1.0));
    float _337 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _342 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _344 = _342.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _549 = sqrt(((_223 * _223) + (_224 * _224)) + (_225 * _225));
        float _555 = (cbMatDynParam._m0[5u].x * _549) + cbMatDynParam._m0[5u].y;
        float _3110 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
        float _556 = isnan(1.0) ? _3110 : (isnan(_3110) ? 1.0 : min(_3110, 1.0));
        float _560 = (cbMatDynParam._m0[5u].z * _549) + cbMatDynParam._m0[5u].w;
        float _3121 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3121 : (isnan(_3121) ? 1.0 : min(_3121, 1.0))) - _556)) + _556) < ((_344 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _355 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _356 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _376 = fma(_316, cbSceneParam._m0[5u].z, fma(_315, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _314));
    float _379 = fma(_316, cbSceneParam._m0[6u].z, fma(_315, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _314));
    float _382 = fma(_316, cbSceneParam._m0[7u].z, fma(_315, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _314));
    float _383 = _318 * 3.3333332538604736328125;
    float _385 = _319 * 3.3333332538604736328125;
    float _386 = _320 * 3.3333332538604736328125;
    float _394 = ((isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _396 = ((isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _397 = ((isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _403 = (_318 + (-0.0599999986588954925537109375)) + (isnan(_394) ? 0.0 : (isnan(0.0) ? _394 : max(0.0, _394)));
    float _405 = (_319 + (-0.0599999986588954925537109375)) + (isnan(_396) ? 0.0 : (isnan(0.0) ? _396 : max(0.0, _396)));
    float _407 = (_320 + (-0.0599999986588954925537109375)) + (isnan(_397) ? 0.0 : (isnan(0.0) ? _397 : max(0.0, _397)));
    float _419 = (_403 * _403) - ((0.02999999932944774627685546875 - _318) * 0.119999997317790985107421875);
    float _420 = (_405 * _405) - ((0.02999999932944774627685546875 - _319) * 0.119999997317790985107421875);
    float _421 = (_407 * _407) - ((0.02999999932944774627685546875 - _320) * 0.119999997317790985107421875);
    float _431 = (sqrt(isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0))) - _403) * 16.666667938232421875;
    float _433 = (sqrt(isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0))) - _405) * 16.666667938232421875;
    float _434 = (sqrt(isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0))) - _407) * 16.666667938232421875;
    float _435 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _436 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _437 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _448 = (((isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0))) * 0.114000000059604644775390625);
    float _449 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    vec4 _458 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _355, cbSceneParam._m0[86u].y * _356));
    float _461 = _458.x * TEXCOORD.z;
    float _462 = dot(vec3(_314, _315, _316), vec3(_284, _285, _286));
    float _465 = _462 * 2.0;
    float _470 = (_465 * _314) - _284;
    float _471 = (_465 * _315) - _285;
    float _472 = (_465 * _316) - _286;
    float _476 = abs(dot(vec3(_284, _285, _286), vec3(_314, _315, _316)));
    float _3217 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _477 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
    float _483 = sqrt(_321);
    float _495 = exp2((_483 * 5.0) * log2(1.0 - (_477 * 0.999000012874603271484375))) / (4.0 - (_483 * 3.0));
    float _501 = (1.0 - _495) * ((_483 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _502 = _495 * _483;
    float _530 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _534 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _538 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _734;
    float _736;
    float _737;
    float _738;
    float _739;
    float _740;
    float _741;
    float _742;
    float _743;
    float _744;
    float _745;
    float _746;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _594 = fma(_538, cbModelParam._m0[26u].z, fma(_534, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _530));
        float _598 = fma(_538, cbModelParam._m0[27u].z, fma(_534, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _530));
        float _602 = fma(_538, cbModelParam._m0[28u].z, fma(_534, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _530));
        float _627 = _530 + _314;
        float _628 = _534 + _315;
        float _629 = _538 + _316;
        float _639 = fma(_629, cbModelParam._m0[26u].z, fma(_628, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _627)) - _594;
        float _640 = fma(_629, cbModelParam._m0[27u].z, fma(_628, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _627)) - _598;
        float _641 = fma(_629, cbModelParam._m0[28u].z, fma(_628, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _627)) - _602;
        float _645 = inversesqrt(dot(vec3(_639, _640, _641), vec3(_639, _640, _641)));
        float _658 = ((_645 * _639) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_594 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _659 = ((_645 * _640) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_598 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _660 = ((_645 * _641) / cbModelParam._m0[34u].z) + ((((((_602 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _663 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_658, _659, _660), 0.0);
        vec4 _670 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_658, _659, _660), 0.0);
        vec4 _677 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_658, _659, _660), 0.0);
        vec4 _684 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_658, _659, _660), 0.0);
        float _697 = exp2((_663.w + (-0.5)) * 20.0) * 2.0;
        float _707 = exp2((_670.w + (-0.5)) * 20.0) * 2.0;
        float _717 = exp2((_677.w + (-0.5)) * 20.0) * 2.0;
        float _727 = exp2((_684.w + (-0.5)) * 20.0) * 2.0;
        float _728 = _727 * (_684.x + (-0.5));
        float _729 = _727 * (_684.y + (-0.5));
        float _730 = _727 * (_684.z + (-0.5));
        _734 = _697 * (_663.z + (-0.5));
        _736 = _697 * (_663.y + (-0.5));
        _737 = _697 * (_663.x + (-0.5));
        _738 = _707 * (_670.z + (-0.5));
        _739 = _707 * (_670.y + (-0.5));
        _740 = _707 * (_670.x + (-0.5));
        _741 = _717 * (_677.z + (-0.5));
        _742 = _717 * (_677.y + (-0.5));
        _743 = _717 * (_677.x + (-0.5));
        _744 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
        _745 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
        _746 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    }
    else
    {
        _734 = _735;
        _736 = _735;
        _737 = _735;
        _738 = _735;
        _739 = _735;
        _740 = _735;
        _741 = _735;
        _742 = _735;
        _743 = _735;
        _744 = _735;
        _745 = _735;
        _746 = _735;
    }
    float _911;
    float _912;
    float _913;
    float _914;
    float _915;
    float _916;
    float _917;
    float _918;
    float _919;
    float _920;
    float _921;
    float _922;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _775 = fma(_538, cbModelParam._m0[30u].z, fma(_534, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _530));
        float _779 = fma(_538, cbModelParam._m0[31u].z, fma(_534, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _530));
        float _783 = fma(_538, cbModelParam._m0[32u].z, fma(_534, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _530));
        float _806 = _530 + _314;
        float _807 = _534 + _315;
        float _808 = _538 + _316;
        float _818 = fma(_808, cbModelParam._m0[30u].z, fma(_807, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _806)) - _775;
        float _819 = fma(_808, cbModelParam._m0[31u].z, fma(_807, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _806)) - _779;
        float _820 = fma(_808, cbModelParam._m0[32u].z, fma(_807, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _806)) - _783;
        float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
        float _837 = ((_824 * _818) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_775 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _838 = ((_824 * _819) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_779 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _839 = ((_824 * _820) / cbModelParam._m0[35u].z) + ((((((_783 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _841 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _848 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _855 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _862 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        float _874 = exp2((_841.w + (-0.5)) * 20.0) * 2.0;
        float _884 = exp2((_848.w + (-0.5)) * 20.0) * 2.0;
        float _894 = exp2((_855.w + (-0.5)) * 20.0) * 2.0;
        float _904 = exp2((_862.w + (-0.5)) * 20.0) * 2.0;
        float _905 = _904 * (_862.x + (-0.5));
        float _906 = _904 * (_862.y + (-0.5));
        float _907 = _904 * (_862.z + (-0.5));
        _911 = _874 * (_841.z + (-0.5));
        _912 = _874 * (_841.y + (-0.5));
        _913 = _874 * (_841.x + (-0.5));
        _914 = _884 * (_848.z + (-0.5));
        _915 = _884 * (_848.y + (-0.5));
        _916 = _884 * (_848.x + (-0.5));
        _917 = _894 * (_855.z + (-0.5));
        _918 = _894 * (_855.y + (-0.5));
        _919 = _894 * (_855.x + (-0.5));
        _920 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
        _921 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        _922 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    }
    else
    {
        _911 = _735;
        _912 = _735;
        _913 = _735;
        _914 = _735;
        _915 = _735;
        _916 = _735;
        _917 = _735;
        _918 = _735;
        _919 = _735;
        _920 = _735;
        _921 = _735;
        _922 = _735;
    }
    float _937 = _470 * 0.5;
    float _938 = _471 * 0.5;
    float _939 = _472 * 0.5;
    float _940 = dot(vec4(_937, _938, _939, 1.0), vec4(_913, _916, _919, _922));
    float _943 = dot(vec4(_937, _938, _939, 1.0), vec4(_912, _915, _918, _921));
    float _946 = dot(vec4(_937, _938, _939, 1.0), vec4(_911, _914, _917, _920));
    float _981;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _953 = dot(vec4(_937, _938, _939, 1.0), vec4(_734, _738, _741, _744));
        float _957 = dot(vec4(_937, _938, _939, 1.0), vec4(_736, _739, _742, _745));
        float _961 = dot(vec4(_937, _938, _939, 1.0), vec4(_737, _740, _743, _746));
        float _968 = dot(vec4(cbModelParam._m0[39u]), vec4(_937, _938, _939, 1.0));
        _981 = dot(vec3(isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0)), isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0)), isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_968) ? 0.0 : (isnan(0.0) ? _968 : max(0.0, _968))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _981 = 1.0;
    }
    float _992;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _983 = dot(vec4(cbModelParam._m0[40u]), vec4(_937, _938, _939, 1.0));
        _992 = dot(vec3(isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0)), isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0)), isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_983) ? 0.0 : (isnan(0.0) ? _983 : max(0.0, _983))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _992 = 1.0;
    }
    float _996 = (_992 * cbModelParam._m0[1u].x) + (_981 * (1.0 - cbModelParam._m0[1u].x));
    float _1004 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _321);
    float _1005 = isnan(_1004) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1004 : min(cbModelParam._m0[25u].z, _1004));
    float _1088;
    float _1090;
    float _1092;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1055 = fma(_538, cbModelParam._m0[13u].z, fma(_534, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _530)) + cbModelParam._m0[13u].w;
        float _1059 = fma(_538, cbModelParam._m0[14u].z, fma(_534, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _530)) + cbModelParam._m0[14u].w;
        float _1063 = fma(_538, cbModelParam._m0[15u].z, fma(_534, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _530)) + cbModelParam._m0[15u].w;
        float _1066 = fma(_472, cbModelParam._m0[13u].z, fma(_471, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _470));
        float _1069 = fma(_472, cbModelParam._m0[14u].z, fma(_471, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _470));
        float _1072 = fma(_472, cbModelParam._m0[15u].z, fma(_471, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _470));
        float _1100;
        if (_1066 > 0.0)
        {
            _1100 = abs((1.0 - _1055) / _1066);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1066 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1055 + 1.0) / _1066);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1100 = frontier_phi_19_17_ladder;
        }
        float _1293;
        if (_1069 > 0.0)
        {
            _1293 = abs((1.0 - _1059) / _1069);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1069 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1059 + 1.0) / _1069);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1293 = frontier_phi_28_24_ladder;
        }
        float _1712;
        if (_1072 > 0.0)
        {
            _1712 = abs((1.0 - _1063) / _1072);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1072 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1063 + 1.0) / _1072);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _1712 = frontier_phi_40_35_ladder;
        }
        float _1714 = isnan(_1293) ? _1100 : (isnan(_1100) ? _1293 : min(_1100, _1293));
        float _1715 = isnan(_1712) ? _1714 : (isnan(_1714) ? _1712 : min(_1714, _1712));
        float _1719 = (_1715 * _1066) + _1055;
        float _1720 = (_1715 * _1069) + _1059;
        float _1721 = (_1715 * _1072) + _1063;
        float _1722 = _1715 * 9.9999997473787516355514526367188e-05;
        float _1724 = (-1.0) - _1722;
        float _1726 = _1722 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_1721 > _1726) || ((_1721 < _1724) || ((_1720 > _1726) || ((_1720 < _1724) || ((_1719 < _1724) || (_1719 > _1726))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1923 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1721, cbModelParam._m0[9u].z, fma(_1720, cbModelParam._m0[9u].y, _1719 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1721, cbModelParam._m0[10u].z, fma(_1720, cbModelParam._m0[10u].y, _1719 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1721, cbModelParam._m0[11u].z, fma(_1720, cbModelParam._m0[11u].y, _1719 * cbModelParam._m0[11u].x))), _1005);
            frontier_phi_18_40_ladder = _1923.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _1923.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _1923.x * cbModelParam._m0[1u].y;
        }
        _1088 = frontier_phi_18_40_ladder_2;
        _1090 = frontier_phi_18_40_ladder_1;
        _1092 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1076 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_470, _471, _472), _1005);
        _1088 = _1076.x * cbModelParam._m0[1u].y;
        _1090 = _1076.y * cbModelParam._m0[1u].y;
        _1092 = _1076.z * cbModelParam._m0[1u].y;
    }
    float _1096 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _321);
    float _1097 = isnan(_1096) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1096 : min(cbModelParam._m0[25u].w, _1096));
    float _1190;
    float _1192;
    float _1194;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1154 = fma(_538, cbModelParam._m0[21u].z, fma(_534, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _530)) + cbModelParam._m0[21u].w;
        float _1158 = fma(_538, cbModelParam._m0[22u].z, fma(_534, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _530)) + cbModelParam._m0[22u].w;
        float _1162 = fma(_538, cbModelParam._m0[23u].z, fma(_534, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _530)) + cbModelParam._m0[23u].w;
        float _1165 = fma(_472, cbModelParam._m0[21u].z, fma(_471, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _470));
        float _1168 = fma(_472, cbModelParam._m0[22u].z, fma(_471, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _470));
        float _1171 = fma(_472, cbModelParam._m0[23u].z, fma(_471, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _470));
        float _1298;
        if (_1165 > 0.0)
        {
            _1298 = abs((1.0 - _1154) / _1165);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1165 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1154 + 1.0) / _1165);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1298 = frontier_phi_30_26_ladder;
        }
        float _1739;
        if (_1168 > 0.0)
        {
            _1739 = abs((1.0 - _1158) / _1168);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1168 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1158 + 1.0) / _1168);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _1739 = frontier_phi_42_37_ladder;
        }
        float _2026;
        if (_1171 > 0.0)
        {
            _2026 = abs((1.0 - _1162) / _1171);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1171 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1162 + 1.0) / _1171);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2026 = frontier_phi_52_49_ladder;
        }
        float _2028 = isnan(_1739) ? _1298 : (isnan(_1298) ? _1739 : min(_1298, _1739));
        float _2029 = isnan(_2026) ? _2028 : (isnan(_2028) ? _2026 : min(_2028, _2026));
        float _2033 = (_2029 * _1165) + _1154;
        float _2034 = (_2029 * _1168) + _1158;
        float _2035 = (_2029 * _1171) + _1162;
        float _2036 = _2029 * 9.9999997473787516355514526367188e-05;
        float _2037 = (-1.0) - _2036;
        float _2039 = _2036 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2035 > _2039) || ((_2035 < _2037) || ((_2034 > _2039) || ((_2034 < _2037) || ((_2033 < _2037) || (_2033 > _2039))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2184 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2035, cbModelParam._m0[17u].z, fma(_2034, cbModelParam._m0[17u].y, _2033 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2035, cbModelParam._m0[18u].z, fma(_2034, cbModelParam._m0[18u].y, _2033 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2035, cbModelParam._m0[19u].z, fma(_2034, cbModelParam._m0[19u].y, _2033 * cbModelParam._m0[19u].x))), _1097);
            frontier_phi_27_52_ladder = _2184.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2184.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2184.x * cbModelParam._m0[1u].z;
        }
        _1190 = frontier_phi_27_52_ladder_2;
        _1192 = frontier_phi_27_52_ladder_1;
        _1194 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1174 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_470, _471, _472), _1097);
        _1190 = _1174.x * cbModelParam._m0[1u].z;
        _1192 = _1174.y * cbModelParam._m0[1u].z;
        _1194 = _1174.z * cbModelParam._m0[1u].z;
    }
    float _1207 = (((_501 * _318) + _502) * _461) * ((cbModelParam._m0[1u].w * (_1190 - _1088)) + _1088);
    float _1209 = (((_501 * _319) + _502) * _461) * ((cbModelParam._m0[1u].w * (_1192 - _1090)) + _1090);
    float _1211 = (((_501 * _320) + _502) * _461) * ((cbModelParam._m0[1u].w * (_1194 - _1092)) + _1092);
    float _1232 = fma(_1211, cbSceneParam._m0[89u].z, fma(_1209, cbSceneParam._m0[89u].y, _1207 * cbSceneParam._m0[89u].x));
    float _1235 = fma(_1211, cbSceneParam._m0[90u].z, fma(_1209, cbSceneParam._m0[90u].y, _1207 * cbSceneParam._m0[90u].x));
    float _1238 = fma(_1211, cbSceneParam._m0[91u].z, fma(_1209, cbSceneParam._m0[91u].y, _1207 * cbSceneParam._m0[91u].x));
    float _1272 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1276 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1280 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1284 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1285 = _1272 / _1284;
    float _1286 = _1276 / _1284;
    float _1287 = _1280 / _1284;
    float _1434;
    float _1435;
    float _1436;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1314 = ((uint(_1287 > cbSceneParam._m0[59u].y) + uint(_1287 > cbSceneParam._m0[59u].x)) + uint(_1287 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1315 = _1314 + 43u;
        uint _1323 = _1314 + 44u;
        uint _1331 = _1314 + 45u;
        uint _1339 = _1314 + 46u;
        float _1350 = fma(_1284, cbSceneParam._m0[_1315].w, fma(_1280, cbSceneParam._m0[_1315].z, fma(_1276, cbSceneParam._m0[_1315].y, _1272 * cbSceneParam._m0[_1315].x)));
        float _1354 = fma(_1284, cbSceneParam._m0[_1323].w, fma(_1280, cbSceneParam._m0[_1323].z, fma(_1276, cbSceneParam._m0[_1323].y, _1272 * cbSceneParam._m0[_1323].x)));
        float _1362 = fma(_1284, cbSceneParam._m0[_1339].w, fma(_1280, cbSceneParam._m0[_1339].z, fma(_1276, cbSceneParam._m0[_1339].y, _1272 * cbSceneParam._m0[_1339].x)));
        float _1367 = cbSceneParam._m0[33u].z * _1362;
        float _1369 = cbSceneParam._m0[33u].w * _1362;
        float _1372 = fma(_1284, cbSceneParam._m0[_1331].w, fma(_1280, cbSceneParam._m0[_1331].z, fma(_1276, cbSceneParam._m0[_1331].y, _1272 * cbSceneParam._m0[_1331].x))) / _1362;
        float _1420 = (cbSceneParam._m0[33u].x - sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287))) * cbSceneParam._m0[33u].y;
        float _3343 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1427 = (isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1367 + _1350) / _1362, (_1369 + _1354) / _1362), _1372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1369 + _1350) / _1362, (_1354 - _1367) / _1362), _1372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1350 - _1367) / _1362, (_1354 - _1369) / _1362), _1372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1350 - _1369) / _1362, (_1367 + _1354) / _1362), _1372), 0.0)).x), vec4(0.25)));
        _1434 = 1.0 - (_1427 * cbSceneParam._m0[34u].x);
        _1435 = 1.0 - (_1427 * cbSceneParam._m0[34u].y);
        _1436 = 1.0 - (_1427 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1434 = 1.0;
        _1435 = 1.0;
        _1436 = 1.0;
    }
    float _1500;
    float _1502;
    float _1504;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1488 = fma(_1284, cbSceneParam._m0[63u].w, fma(_1280, cbSceneParam._m0[63u].z, fma(_1276, cbSceneParam._m0[63u].y, _1272 * cbSceneParam._m0[63u].x)));
        float _1489 = fma(_1284, cbSceneParam._m0[60u].w, fma(_1280, cbSceneParam._m0[60u].z, fma(_1276, cbSceneParam._m0[60u].y, _1272 * cbSceneParam._m0[60u].x))) / _1488;
        float _1490 = fma(_1284, cbSceneParam._m0[61u].w, fma(_1280, cbSceneParam._m0[61u].z, fma(_1276, cbSceneParam._m0[61u].y, _1272 * cbSceneParam._m0[61u].x))) / _1488;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_1489 >= cbSceneParam._m0[64u].x) && (_1490 >= cbSceneParam._m0[64u].y)) && (_1489 <= cbSceneParam._m0[64u].z)) && (_1490 <= cbSceneParam._m0[64u].w))
        {
            float _1752 = fma(_1284, cbSceneParam._m0[62u].w, fma(_1280, cbSceneParam._m0[62u].z, fma(_1276, cbSceneParam._m0[62u].y, _1272 * cbSceneParam._m0[62u].x))) / _1488;
            float _1756 = isnan(cbSceneParam._m0[41u].w) ? _1752 : (isnan(_1752) ? cbSceneParam._m0[41u].w : max(_1752, cbSceneParam._m0[41u].w));
            float _1799 = (cbSceneParam._m0[33u].x - sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287))) * cbSceneParam._m0[33u].y;
            float _3359 = isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0));
            float _1806 = (isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1489, cbSceneParam._m0[33u].w + _1490), _1756), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1489, _1490 - cbSceneParam._m0[33u].z), _1756), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1489 - cbSceneParam._m0[33u].z, _1490 - cbSceneParam._m0[33u].w), _1756), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1489 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1490), _1756), 0.0)).x), vec4(0.25)));
            float _1810 = 1.0 - (_1806 * cbSceneParam._m0[34u].x);
            float _1811 = 1.0 - (_1806 * cbSceneParam._m0[34u].y);
            float _1812 = 1.0 - (_1806 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_1810) ? _1434 : (isnan(_1434) ? _1810 : min(_1434, _1810));
            frontier_phi_39_38_ladder_1 = isnan(_1811) ? _1435 : (isnan(_1435) ? _1811 : min(_1435, _1811));
            frontier_phi_39_38_ladder_2 = isnan(_1812) ? _1436 : (isnan(_1436) ? _1812 : min(_1436, _1812));
        }
        else
        {
            frontier_phi_39_38_ladder = _1434;
            frontier_phi_39_38_ladder_1 = _1435;
            frontier_phi_39_38_ladder_2 = _1436;
        }
        _1500 = frontier_phi_39_38_ladder;
        _1502 = frontier_phi_39_38_ladder_1;
        _1504 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _1500 = _1434;
        _1502 = _1435;
        _1504 = _1436;
    }
    uint _1506 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1510 = floatBitsToUint(cbInstanceData._m0[_1506 + 5u]);
    uint _1512 = _1510.x * 14u;
    uint _1513 = _1512 + 13u;
    float _1519 = _461 + (-1.0);
    float _1524 = (cbLight._m0[_1513].x * _1519) + 1.0;
    float _1525 = (cbLight._m0[_1513].y * _1519) + 1.0;
    float _1526 = (cbLight._m0[_1513].w * _1519) + 1.0;
    uint _1530 = _1512 + 8u;
    float _1546 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1512].w)) * _321) * 0.949999988079071044921875);
    float _1547 = _1546 * _1546;
    float _1548 = cbLight._m0[_1512].x + _284;
    float _1549 = cbLight._m0[_1512].y + _285;
    float _1550 = cbLight._m0[_1512].z + _286;
    float _1554 = inversesqrt(dot(vec3(_1548, _1549, _1550), vec3(_1548, _1549, _1550)));
    float _1555 = _1554 * _1548;
    float _1556 = _1554 * _1549;
    float _1557 = _1554 * _1550;
    float _1558 = dot(vec3(_314, _315, _316), vec3(cbLight._m0[_1512].xyz));
    float _3385 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
    float _1561 = isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0));
    float _3396 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _1562 = isnan(1.0) ? _3396 : (isnan(_3396) ? 1.0 : min(_3396, 1.0));
    float _1563 = dot(vec3(_314, _315, _316), vec3(_1555, _1556, _1557));
    float _3407 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
    float _1566 = isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0));
    float _1567 = dot(vec3(cbLight._m0[_1512].xyz), vec3(_1555, _1556, _1557));
    float _3418 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
    float _1571 = _1547 * _1547;
    float _1575 = ((_1566 * _1566) * (_1571 + (-1.0))) + 1.0;
    float _1583 = exp2(log2(1.0 - (isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0)))) * 5.0);
    float _1584 = 1.0 - _318;
    float _1585 = 1.0 - _319;
    float _1586 = 1.0 - _320;
    float _1593 = 1.0 - _1547;
    float _1604 = (0.5 / (((_1562 * ((_1561 * _1593) + _1547)) + 9.9999999392252902907785028219223e-09) + (((_1562 * _1593) + _1547) * _1561))) * _1561;
    float _3429 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
    float _1606 = (isnan(1.0) ? _3429 : (isnan(_3429) ? 1.0 : min(_3429, 1.0))) * (_1571 / ((_1575 * _1575) * 3.141590118408203125));
    float _1607 = isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0));
    uint _1620 = _1512 | 1u;
    uint _1624 = _1512 + 9u;
    float _1638 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1620].w)) * _321) * 0.949999988079071044921875);
    float _1639 = _1638 * _1638;
    float _1640 = cbLight._m0[_1620].x + _284;
    float _1641 = cbLight._m0[_1620].y + _285;
    float _1642 = cbLight._m0[_1620].z + _286;
    float _1646 = inversesqrt(dot(vec3(_1640, _1641, _1642), vec3(_1640, _1641, _1642)));
    float _1647 = _1646 * _1640;
    float _1648 = _1646 * _1641;
    float _1649 = _1646 * _1642;
    float _1650 = dot(vec3(_314, _315, _316), vec3(cbLight._m0[_1620].xyz));
    float _3445 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
    float _1653 = isnan(1.0) ? _3445 : (isnan(_3445) ? 1.0 : min(_3445, 1.0));
    float _1654 = dot(vec3(_314, _315, _316), vec3(_1647, _1648, _1649));
    float _3456 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
    float _1657 = isnan(1.0) ? _3456 : (isnan(_3456) ? 1.0 : min(_3456, 1.0));
    float _1658 = dot(vec3(cbLight._m0[_1620].xyz), vec3(_1647, _1648, _1649));
    float _3467 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
    float _1662 = _1639 * _1639;
    float _1666 = ((_1657 * _1657) * (_1662 + (-1.0))) + 1.0;
    float _1673 = exp2(log2(1.0 - (isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0)))) * 5.0);
    float _1680 = 1.0 - _1639;
    float _1690 = (0.5 / (((_1562 * ((_1653 * _1680) + _1639)) + 9.9999999392252902907785028219223e-09) + (((_1562 * _1680) + _1639) * _1653))) * _1653;
    float _3478 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
    float _1692 = (isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0))) * (_1662 / ((_1666 * _1666) * 3.141590118408203125));
    float _1693 = isnan(1.0) ? _1525 : (isnan(_1525) ? 1.0 : min(_1525, 1.0));
    float _1703 = (((((_1673 * _1584) + _318) * cbLight._m0[_1624].x) * _1692) * _1693) + ((((cbLight._m0[_1530].x * _1500) * ((_1583 * _1584) + _318)) * _1606) * _1607);
    float _1704 = (((((_1673 * _1585) + _319) * cbLight._m0[_1624].y) * _1692) * _1693) + ((((cbLight._m0[_1530].y * _1502) * ((_1583 * _1585) + _319)) * _1606) * _1607);
    float _1705 = (((((_1673 * _1586) + _320) * cbLight._m0[_1624].z) * _1692) * _1693) + ((((cbLight._m0[_1530].z * _1504) * ((_1583 * _1586) + _320)) * _1606) * _1607);
    uvec4 _1709 = floatBitsToUint(cbLight._m0[_1512 + 12u]);
    float _1813;
    float _1815;
    float _1817;
    if (_1709.x == 0u)
    {
        _1813 = _1703;
        _1815 = _1704;
        _1817 = _1705;
    }
    else
    {
        float _1823 = (cbLight._m0[_1513].z * _1519) + 1.0;
        uint _1824 = _1512 + 2u;
        uint _1828 = _1512 + 10u;
        float _1842 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1824].w)) * _321) * 0.949999988079071044921875);
        float _1843 = _1842 * _1842;
        float _1844 = cbLight._m0[_1824].x + _284;
        float _1845 = cbLight._m0[_1824].y + _285;
        float _1846 = cbLight._m0[_1824].z + _286;
        float _1850 = inversesqrt(dot(vec3(_1844, _1845, _1846), vec3(_1844, _1845, _1846)));
        float _1851 = _1850 * _1844;
        float _1852 = _1850 * _1845;
        float _1853 = _1850 * _1846;
        float _1854 = dot(vec3(_314, _315, _316), vec3(cbLight._m0[_1824].xyz));
        float _3494 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
        float _1857 = isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0));
        float _1858 = dot(vec3(_314, _315, _316), vec3(_1851, _1852, _1853));
        float _3505 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _1861 = isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0));
        float _1862 = dot(vec3(cbLight._m0[_1824].xyz), vec3(_1851, _1852, _1853));
        float _3516 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
        float _1866 = _1843 * _1843;
        float _1870 = ((_1861 * _1861) * (_1866 + (-1.0))) + 1.0;
        float _1877 = exp2(log2(1.0 - (isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0)))) * 5.0);
        float _1884 = 1.0 - _1843;
        float _1894 = (0.5 / (((_1562 * ((_1857 * _1884) + _1843)) + 9.9999999392252902907785028219223e-09) + (((_1562 * _1884) + _1843) * _1857))) * _1857;
        float _3527 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
        float _1896 = (isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0))) * (_1866 / ((_1870 * _1870) * 3.141590118408203125));
        float _1897 = isnan(1.0) ? _1823 : (isnan(_1823) ? 1.0 : min(_1823, 1.0));
        _1813 = (((((_1877 * _1584) + _318) * cbLight._m0[_1828].x) * _1896) * _1897) + _1703;
        _1815 = (((((_1877 * _1585) + _319) * cbLight._m0[_1828].y) * _1896) * _1897) + _1704;
        _1817 = (((((_1877 * _1586) + _320) * cbLight._m0[_1828].z) * _1896) * _1897) + _1705;
    }
    float _1932;
    float _1934;
    float _1936;
    if (_1709.y == 0u)
    {
        _1932 = _1813;
        _1934 = _1815;
        _1936 = _1817;
    }
    else
    {
        uint _1943 = _1512 + 3u;
        uint _1947 = _1512 + 11u;
        float _1961 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1943].w)) * _321) * 0.949999988079071044921875);
        float _1962 = _1961 * _1961;
        float _1963 = cbLight._m0[_1943].x + _284;
        float _1964 = cbLight._m0[_1943].y + _285;
        float _1965 = cbLight._m0[_1943].z + _286;
        float _1969 = inversesqrt(dot(vec3(_1963, _1964, _1965), vec3(_1963, _1964, _1965)));
        float _1970 = _1969 * _1963;
        float _1971 = _1969 * _1964;
        float _1972 = _1969 * _1965;
        float _1973 = dot(vec3(_314, _315, _316), vec3(cbLight._m0[_1943].xyz));
        float _3543 = isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0));
        float _1976 = isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0));
        float _1977 = dot(vec3(_314, _315, _316), vec3(_1970, _1971, _1972));
        float _3554 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
        float _1980 = isnan(1.0) ? _3554 : (isnan(_3554) ? 1.0 : min(_3554, 1.0));
        float _1981 = dot(vec3(cbLight._m0[_1943].xyz), vec3(_1970, _1971, _1972));
        float _3565 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
        float _1985 = _1962 * _1962;
        float _1989 = ((_1980 * _1980) * (_1985 + (-1.0))) + 1.0;
        float _1996 = exp2(log2(1.0 - (isnan(1.0) ? _3565 : (isnan(_3565) ? 1.0 : min(_3565, 1.0)))) * 5.0);
        float _2003 = 1.0 - _1962;
        float _2013 = (0.5 / (((_1562 * ((_1976 * _2003) + _1962)) + 9.9999999392252902907785028219223e-09) + (((_1562 * _2003) + _1962) * _1976))) * _1976;
        float _3576 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
        float _2015 = (isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0))) * (_1985 / ((_1989 * _1989) * 3.141590118408203125));
        float _2016 = isnan(1.0) ? _1526 : (isnan(_1526) ? 1.0 : min(_1526, 1.0));
        _1932 = (((((_1996 * _1584) + _318) * cbLight._m0[_1947].x) * _2015) * _2016) + _1813;
        _1934 = (((((_1996 * _1585) + _319) * cbLight._m0[_1947].y) * _2015) * _2016) + _1815;
        _1936 = (((((_1996 * _1586) + _320) * cbLight._m0[_1947].z) * _2015) * _2016) + _1817;
    }
    float _2108;
    float _2110;
    float _2112;
    if (_1510.y == 0u)
    {
        uvec4 _2063 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2064 = _2063.x;
        uint _2075 = uint((float(_2063.y) * floor(float(uint(cbSceneParam._m0[85u].y * _356) / _2064))) + floor(float(uint(cbSceneParam._m0[85u].x * _355) / _2064)));
        float _2085 = (log2(_1287 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2086 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
        uint _2089 = uint(isnan(14.0) ? _2086 : (isnan(_2086) ? 14.0 : min(_2086, 14.0)));
        uvec4 _2094 = texelFetch(g_lightClusterGridBuffer, int(((_2089 << 2u) + (_2075 << 6u)) >> 2u));
        uint _2095 = _2094.x;
        uint _2096 = _2063.z;
        float _2189;
        float _2191;
        float _2193;
        if (((((1u << ((_2096 >> 4u) & 15u)) + 4294967295u) & _2095) == 0u) || ((_2096 & 240u) == 0u))
        {
            _2189 = 0.0;
            _2191 = 0.0;
            _2193 = 0.0;
        }
        else
        {
            float _2190;
            float _2192;
            float _2194;
            float _2325 = 0.0;
            float _2326 = 0.0;
            float _2327 = 0.0;
            uint _2328 = 0u;
            uint _2337;
            bool _2338;
            for (;;)
            {
                _2337 = texelFetch(g_lightClassification, int((((_2089 << 5u) + (_2075 << 9u)) + (_2328 << 2u)) >> 2u)).x;
                _2338 = _2337 == 0u;
                float frontier_phi_69_pred;
                float frontier_phi_69_pred_1;
                float frontier_phi_69_pred_2;
                if (_2338)
                {
                    frontier_phi_69_pred = _2327;
                    frontier_phi_69_pred_1 = _2326;
                    frontier_phi_69_pred_2 = _2325;
                }
                else
                {
                    float _2462;
                    float _2463;
                    float _2464;
                    uint _2465;
                    _2462 = _2325;
                    _2463 = _2326;
                    _2464 = _2327;
                    _2465 = _2337;
                    float _2395;
                    float _2396;
                    float _2397;
                    for (;;)
                    {
                        uint _2469 = uint(findLSB(_2465)) + (_2328 << 5u);
                        uint _2466 = (_2465 + 4294967295u) & _2465;
                        uint _2471 = _2469 * 48u;
                        vec4 _2485 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2471)).x, texelFetch(g_PointLightRenderingBuffer, int(_2471 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2471 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2471 + 3u)).x));
                        uint _2502 = (_2469 * 48u) + 8u;
                        vec3 _2513 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2502)).x, texelFetch(g_PointLightRenderingBuffer, int(_2502 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2502 + 2u)).x));
                        float _2517 = _2485.x - _1285;
                        float _2518 = _2485.y - _1286;
                        float _2519 = _2485.z - _1287;
                        float _2520 = dot(vec3(_2517, _2518, _2519), vec3(_2517, _2518, _2519));
                        float _2523 = inversesqrt(_2520);
                        float _2524 = _2523 * _2517;
                        float _2525 = _2523 * _2518;
                        float _2526 = _2523 * _2519;
                        float _2532 = 1.0 - (_2520 * _2485.w);
                        float _3602 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
                        float _2534 = sqrt(_2520) * uintBitsToFloat(uvec4(_2492, _2493, _2494, texelFetch(g_PointLightRenderingBuffer, int(((_2469 * 48u) + 4u) + 3u)).x)).w;
                        float _2538 = _2534 * _2534;
                        float _2539 = (-0.0) - _1285;
                        float _2540 = (-0.0) - _1286;
                        float _2541 = (-0.0) - _1287;
                        float _2545 = inversesqrt(dot(vec3(_2539, _2540, _2541), vec3(_2539, _2540, _2541)));
                        float _2546 = _2545 * _2539;
                        float _2547 = _2545 * _2540;
                        float _2548 = _2545 * _2541;
                        float _2555 = exp2(log2(1.0 / ((_2538 * 3.5) + 5.0)) * 0.25);
                        float _2556 = 1.0 - _483;
                        float _2563 = sqrt(1.0 - ((1.0 - (_2556 * _2556)) * (1.0 - (_2555 * _2555))));
                        float _2564 = _2563 * _2563;
                        float _2565 = _2564 * _2564;
                        float _2566 = _2546 + _2524;
                        float _2567 = _2547 + _2525;
                        float _2568 = _2548 + _2526;
                        float _2572 = inversesqrt(dot(vec3(_2566, _2567, _2568), vec3(_2566, _2567, _2568)));
                        float _2576 = dot(vec3(_376, _379, _382), vec3(_2546, _2547, _2548));
                        float _3613 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
                        float _2579 = isnan(1.0) ? _3613 : (isnan(_3613) ? 1.0 : min(_3613, 1.0));
                        float _2580 = dot(vec3(_376, _379, _382), vec3(_2572 * _2566, _2572 * _2567, _2572 * _2568));
                        float _3624 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
                        float _2583 = isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0));
                        float _2587 = ((_2583 * _2583) * (_2565 + (-1.0))) + 1.0;
                        float _2588 = (1.39999997615814208984375 / (_2534 + 1.39999997615814208984375)) * _2564;
                        float _2589 = _2588 * _2588;
                        float _2592 = ((1.0 - _2589) * dot(vec3(_376, _379, _382), vec3(_2524, _2525, _2526))) + _2589;
                        float _3635 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
                        float _2593 = isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0));
                        float _2594 = 1.0 - _2564;
                        float _2604 = (0.5 / (((_2593 * ((_2579 * _2594) + _2564)) + 9.9999999392252902907785028219223e-09) + (((_2593 * _2594) + _2564) * _2579))) * _2593;
                        float _3646 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
                        float _2615 = (((_2565 * 3.1415927410125732421875) * (isnan(1.0) ? _3646 : (isnan(_3646) ? 1.0 : min(_3646, 1.0)))) / ((_2587 * _2587) * ((_2538 * 2.1991131305694580078125) + 3.141590118408203125))) * (isnan(1.0) ? _3602 : (isnan(_3602) ? 1.0 : min(_3602, 1.0)));
                        _2395 = (_2615 * _2513.x) + _2462;
                        _2396 = (_2615 * _2513.y) + _2463;
                        _2397 = (_2615 * _2513.z) + _2464;
                        if (_2466 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2462 = _2395;
                            _2463 = _2396;
                            _2464 = _2397;
                            _2465 = _2466;
                        }
                    }
                    frontier_phi_69_pred = _2397;
                    frontier_phi_69_pred_1 = _2396;
                    frontier_phi_69_pred_2 = _2395;
                }
                _2194 = frontier_phi_69_pred;
                _2192 = frontier_phi_69_pred_1;
                _2190 = frontier_phi_69_pred_2;
                uint _2329 = _2328 + 1u;
                if (_2329 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2325 = _2190;
                    _2326 = _2192;
                    _2327 = _2194;
                    _2328 = _2329;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2189 = _2190;
            _2191 = _2192;
            _2193 = _2194;
        }
        uvec4 _2197 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2198 = _2197.z;
        uint _2200 = (_2198 >> 8u) & 15u;
        float _2302;
        float _2304;
        float _2306;
        if (((4294967295u << _2200) & _2095) == 0u)
        {
            _2302 = _2189;
            _2304 = _2191;
            _2306 = _2193;
        }
        else
        {
            float _2318 = inversesqrt(dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287)));
            float _2319 = _2318 * _1285;
            float _2320 = _2318 * _1286;
            float _2321 = _2318 * _1287;
            float frontier_phi_61_62_ladder;
            float frontier_phi_61_62_ladder_1;
            float frontier_phi_61_62_ladder_2;
            if (_2200 < ((_2198 >> 12u) & 15u))
            {
                float _2303;
                float _2305;
                float _2307;
                float _2448 = _2189;
                float _2449 = _2191;
                float _2450 = _2193;
                uint _2451 = _2200;
                uint _2460;
                bool _2461;
                for (;;)
                {
                    _2460 = texelFetch(g_lightClassification, int((((_2089 << 5u) + (_2075 << 9u)) + (_2451 << 2u)) >> 2u)).x;
                    _2461 = _2460 == 0u;
                    float frontier_phi_80_pred;
                    float frontier_phi_80_pred_1;
                    float frontier_phi_80_pred_2;
                    if (_2461)
                    {
                        frontier_phi_80_pred = _2450;
                        frontier_phi_80_pred_1 = _2449;
                        frontier_phi_80_pred_2 = _2448;
                    }
                    else
                    {
                        float _2629;
                        float _2630;
                        float _2631;
                        float _2895;
                        float _2896;
                        float _2897;
                        float _2639 = _2448;
                        float _2640 = _2449;
                        float _2641 = _2450;
                        uint _2642 = _2460;
                        uint _2643;
                        uint _2653;
                        vec4 _2668;
                        float _2669;
                        vec3 _2681;
                        vec4 _2697;
                        vec4 _2713;
                        float _2760;
                        bool _2761;
                        for (;;)
                        {
                            _2653 = ((_2451 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2642));
                            _2643 = (_2642 + 4294967295u) & _2642;
                            uint _2655 = _2653 * 40u;
                            _2668 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2655)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 3u)).x));
                            _2669 = _2668.w;
                            uint _2671 = (_2653 * 40u) + 8u;
                            _2681 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2671)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2671 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2671 + 2u)).x));
                            uint _2684 = (_2653 * 40u) + 16u;
                            _2697 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2684)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2684 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2684 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2684 + 3u)).x));
                            uint _2700 = (_2653 * 40u) + 20u;
                            _2713 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2700)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2700 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2700 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2700 + 3u)).x));
                            uint _2716 = (_2653 * 40u) + 24u;
                            vec4 _2729 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2716 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2716 + 3u)).x));
                            uint _2735 = (_2653 * 40u) + 28u;
                            vec4 _2748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 3u)).x));
                            _2760 = fma(_1287, _2748.z, fma(_1286, _2748.y, _2748.x * _1285)) + _2748.w;
                            _2761 = !((fma(_1287, _2729.z, fma(_1286, _2729.y, _2729.x * _1285)) + _2729.w) <= 0.0);
                            float frontier_phi_86_pred;
                            float frontier_phi_86_pred_1;
                            float frontier_phi_86_pred_2;
                            if (_2761)
                            {
                                float _2795 = _2668.x - _1285;
                                float _2796 = _2668.y - _1286;
                                float _2797 = _2668.z - _1287;
                                float _2798 = dot(vec3(_2795, _2796, _2797), vec3(_2795, _2796, _2797));
                                float _2801 = inversesqrt(_2798);
                                float _2802 = _2801 * _2795;
                                float _2803 = _2801 * _2796;
                                float _2804 = _2801 * _2797;
                                float _2808 = 1.0 - (_2798 / (_2669 * _2669));
                                float _3657 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
                                float _2810 = sqrt(_2798) * uintBitsToFloat(uvec4(_2764, _2765, _2766, texelFetch(g_SpotLightRenderingBuffer, int(((_2653 * 40u) + 4u) + 3u)).x)).w;
                                float _2813 = _2810 * _2810;
                                float _2814 = (fma(_1287, _2697.z, fma(_1286, _2697.y, _2697.x * _1285)) + _2697.w) / _2760;
                                float _2815 = (fma(_1287, _2713.z, fma(_1286, _2713.y, _2713.x * _1285)) + _2713.w) / _2760;
                                float _2819 = 1.0 - dot(vec2(_2814, _2815), vec2(_2814, _2815));
                                float _3668 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
                                float _2829 = exp2(log2(1.0 / ((_2813 * 3.5) + 5.0)) * 0.25);
                                float _2830 = 1.0 - _483;
                                float _2837 = sqrt(1.0 - ((1.0 - (_2830 * _2830)) * (1.0 - (_2829 * _2829))));
                                float _2838 = _2837 * _2837;
                                float _2839 = _2838 * _2838;
                                float _2840 = _2802 - _2319;
                                float _2841 = _2803 - _2320;
                                float _2842 = _2804 - _2321;
                                float _2846 = inversesqrt(dot(vec3(_2840, _2841, _2842), vec3(_2840, _2841, _2842)));
                                float _2850 = dot(vec3(_376, _379, _382), vec3((-0.0) - _2319, (-0.0) - _2320, (-0.0) - _2321));
                                float _3679 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
                                float _2853 = isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0));
                                float _2854 = dot(vec3(_376, _379, _382), vec3(_2846 * _2840, _2846 * _2841, _2846 * _2842));
                                float _3690 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
                                float _2857 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
                                float _2861 = ((_2857 * _2857) * (_2839 + (-1.0))) + 1.0;
                                float _2862 = (1.39999997615814208984375 / (_2810 + 1.39999997615814208984375)) * _2838;
                                float _2863 = _2862 * _2862;
                                float _2869 = ((1.0 - _2863) * dot(vec3(_376, _379, _382), vec3(_2802, _2803, _2804))) + _2863;
                                float _3701 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
                                float _2870 = isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0));
                                float _2871 = 1.0 - _2838;
                                float _2881 = (0.5 / (((_2870 * ((_2853 * _2871) + _2838)) + 9.9999999392252902907785028219223e-09) + (((_2870 * _2871) + _2838) * _2853))) * _2870;
                                float _3712 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
                                float _2891 = ((isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0))) * (isnan(1.0) ? _3657 : (isnan(_3657) ? 1.0 : min(_3657, 1.0)))) * (((_2839 * 3.1415927410125732421875) * (isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0)))) / ((_2861 * _2861) * ((_2813 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_86_pred = _2891 * _2681.z;
                                frontier_phi_86_pred_1 = _2891 * _2681.y;
                                frontier_phi_86_pred_2 = _2891 * _2681.x;
                            }
                            else
                            {
                                frontier_phi_86_pred = 0.0;
                                frontier_phi_86_pred_1 = 0.0;
                                frontier_phi_86_pred_2 = 0.0;
                            }
                            _2897 = frontier_phi_86_pred;
                            _2896 = frontier_phi_86_pred_1;
                            _2895 = frontier_phi_86_pred_2;
                            _2629 = _2895 + _2639;
                            _2630 = _2896 + _2640;
                            _2631 = _2897 + _2641;
                            if (_2643 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2639 = _2629;
                                _2640 = _2630;
                                _2641 = _2631;
                                _2642 = _2643;
                                continue;
                            }
                        }
                        frontier_phi_80_pred = _2631;
                        frontier_phi_80_pred_1 = _2630;
                        frontier_phi_80_pred_2 = _2629;
                    }
                    _2307 = frontier_phi_80_pred;
                    _2305 = frontier_phi_80_pred_1;
                    _2303 = frontier_phi_80_pred_2;
                    uint _2452 = _2451 + 1u;
                    if (_2452 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2448 = _2303;
                        _2449 = _2305;
                        _2450 = _2307;
                        _2451 = _2452;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_61_62_ladder = _2305;
                frontier_phi_61_62_ladder_1 = _2307;
                frontier_phi_61_62_ladder_2 = _2303;
            }
            else
            {
                frontier_phi_61_62_ladder = _2191;
                frontier_phi_61_62_ladder_1 = _2193;
                frontier_phi_61_62_ladder_2 = _2189;
            }
            _2302 = frontier_phi_61_62_ladder_2;
            _2304 = frontier_phi_61_62_ladder;
            _2306 = frontier_phi_61_62_ladder_1;
        }
        float _2311 = isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0));
        _2108 = ((_2302 * _318) * _2311) + _1932;
        _2110 = ((_2304 * _319) * _2311) + _1934;
        _2112 = ((_2306 * _320) * _2311) + _1936;
    }
    else
    {
        _2108 = _1932;
        _2110 = _1934;
        _2112 = _1936;
    }
    float _2116 = 0.959999978542327880859375 - ((isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0))) * 0.959999978542327880859375);
    float _2124 = _2116 - (exp2(log2(1.0 - _477) * 5.0) * _2116);
    float _2128 = ((_2108 + ((isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0))) * _996)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.x) * exp2((-0.0) - (((cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].x) * _290) * _291))) * _2124);
    float _2129 = ((_2110 + ((isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0))) * _996)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.y) * exp2((-0.0) - (((cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].x) * _290) * _291))) * _2124);
    float _2130 = ((_2112 + ((isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0))) * _996)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.z) * exp2((-0.0) - (((cbMtdParam._m0[11u].y * cbMtdParam._m0[10u].x) * _290) * _291))) * _2124);
    uint _2131 = _1506 + 6u;
    float _2139 = _355 / cbSceneParam._m0[86u].x;
    float _2140 = _356 / cbSceneParam._m0[86u].y;
    vec4 _2154 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2139, _2140, (log2((isnan(cbSceneParam._m0[77u].w) ? _337 : (isnan(_337) ? cbSceneParam._m0[77u].w : min(_337, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2156 = _2154.x;
    float _2157 = _2154.y;
    float _2158 = _2154.z;
    float _2159 = _2154.w;
    float _2245;
    float _2247;
    float _2249;
    float _2251;
    if (_337 > cbSceneParam._m0[78u].w)
    {
        float _2208 = isnan(_337) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _337 : min(cbSceneParam._m0[80u].w, _337));
        float _2209 = _2208 / _337;
        float _2220 = _2209 * _223;
        float _2221 = _224 * _2209;
        float _2222 = (-0.0) - _2221;
        float _2223 = _2209 * _225;
        float _2225 = (cbSceneParam._m0[77u].w * _2222) / _2208;
        float _2226 = _2225 + cbSceneParam._m0[79u].w;
        float _2227 = cbSceneParam._m0[79u].w - _2221;
        float _2233 = sqrt(((_2220 * _2220) + (_2221 * _2221)) + (_2223 * _2223));
        float _2236 = (1.0 - (cbSceneParam._m0[77u].w / _2208)) * _2233;
        float _2241 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2243 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2405;
        if (abs((_2222 - _2225) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2405 = ((((_2226 > 0.0) ? exp2(_2241 * _2226) : (2.0 - exp2(_2243 * _2226))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2236;
        }
        else
        {
            float _2351 = 1.0 / cbSceneParam._m0[80u].x;
            float _2352 = isnan(_2227) ? _2226 : (isnan(_2226) ? _2227 : max(_2226, _2227));
            float _2353 = isnan(_2227) ? _2226 : (isnan(_2226) ? _2227 : min(_2226, _2227));
            float _2362 = isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : min(_2352, 0.0));
            float _2363 = isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : min(_2353, 0.0));
            _2405 = ((abs(_2233 / _2222) * cbSceneParam._m0[80u].y) * ((((_2362 - _2363) * 2.0) - ((exp2(_2241 * (isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : max(_2352, 0.0)))) - exp2(_2241 * (isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0))))) * _2351)) - ((exp2(_2243 * _2362) - exp2(_2243 * _2363)) * _2351))) + (_2236 * cbSceneParam._m0[80u].z);
        }
        vec4 _2407 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2139, _2140, 1.0), 0.0);
        float _2416 = exp2((_2405 * (-1.44269502162933349609375)) * (1.0 - _2407.w));
        float _2417 = log2(_2416);
        float _2433 = log2(_2159);
        _2245 = (exp2(_2433 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2417 * cbSceneParam._m0[78u].x)) * _2407.x) / cbSceneParam._m0[78u].x)) + _2156;
        _2247 = (exp2(_2433 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2417 * cbSceneParam._m0[78u].y)) * _2407.y) / cbSceneParam._m0[78u].y)) + _2157;
        _2249 = (exp2(_2433 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2417 * cbSceneParam._m0[78u].z)) * _2407.z) / cbSceneParam._m0[78u].z)) + _2158;
        _2251 = _2416 * _2159;
    }
    else
    {
        _2245 = _2156;
        _2247 = _2157;
        _2249 = _2158;
        _2251 = _2159;
    }
    bool _2443;
    vec4 _2260;
    vec4 _2282;
    float _2284;
    float _2288;
    float _2289;
    float _2290;
    float _2291;
    bool _2301;
    for (;;)
    {
        _2260 = cbMatDynParam._m0[0u];
        float _2262 = roundEven(_2260.y);
        bool _2263 = _2262 == 3.0;
        float _2264 = log2(_2251);
        float _2271 = exp2(_2264 * cbSceneParam._m0[78u].x) * _2128;
        float _2272 = exp2(_2264 * cbSceneParam._m0[78u].y) * _2129;
        float _2273 = exp2(_2264 * cbSceneParam._m0[78u].z) * _2130;
        float _2280 = _344 + (-0.5);
        _2282 = cbMtdParam._m0[1u];
        _2284 = _2282.y * _2280;
        float _2287 = (_2262 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2288 = _2287 * (_2263 ? _2271 : (_2271 + (cbSceneParam._m0[72u].w * _2245)));
        _2289 = _2287 * (_2263 ? _2272 : (_2272 + (cbSceneParam._m0[72u].w * _2247)));
        _2290 = _2287 * (_2263 ? _2273 : (_2273 + (cbSceneParam._m0[72u].w * _2249)));
        _2291 = _2280 * 0.999000012874603271484375;
        _2301 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2301)
        {
            if ((cbInstanceData._m0[_1506 + 7u].x + _2291) < 0.5)
            {
                _2443 = true;
                break;
            }
        }
        uint _2387 = (_1506 + 9u) + uint(_2260.w);
        if ((cbInstanceData._m0[_2387].w < 1.0) && ((cbInstanceData._m0[_2387].w + _2291) < 0.5))
        {
            _2443 = true;
            break;
        }
        if ((_2284 + 1.0) < _2282.x)
        {
            _2443 = true;
            break;
        }
        _2443 = false;
        break;
    }
    float _2620;
    if (_2443)
    {
        discard_state = true;
        _2620 = 0.0;
    }
    else
    {
        _2620 = cbInstanceData._m0[_2131].w;
    }
    SV_Target.x = _2288;
    SV_Target.y = _2289;
    SV_Target.z = _2290;
    SV_Target.w = _2620;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2131].w;
    discard_exit();
}


