#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[29];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0;
layout(set = 0, binding = 14) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1228;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _203 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _204 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _205 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _211 = inversesqrt(dot(vec3(_203, _204, _205), vec3(_203, _204, _205)));
    float _218 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _246 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    float _260 = exp2(log2(_246.w * cbMtdParam._m0[25u].z) * cbMtdParam._m0[22u].x);
    float _261 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _262 = isnan(1.0) ? _261 : (isnan(_261) ? 1.0 : min(_261, 1.0));
    vec4 _276 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _280 = _276.z;
    float _289 = exp2(log2(_280 * cbMtdParam._m0[22u].y) * cbMtdParam._m0[21u].y);
    float _290 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _291 = isnan(1.0) ? _290 : (isnan(_290) ? 1.0 : min(_290, 1.0));
    float _312 = roundEven(5.0 - ((texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _313 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
    float _314 = isnan(4.0) ? _313 : (isnan(_313) ? 4.0 : min(_313, 4.0));
    float _327 = floor(_314);
    vec4 _330 = texture(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w, _327));
    vec4 _354 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _365 = cbMtdParam._m0[9u].x * _354.x;
    float _366 = cbMtdParam._m0[9u].y * _354.y;
    float _367 = cbMtdParam._m0[9u].z * _354.z;
    float _374 = (((cbMtdParam._m0[10u].x * _330.x) - _365) * _291) + _365;
    float _375 = (((cbMtdParam._m0[10u].y * _330.y) - _366) * _291) + _366;
    float _376 = (((cbMtdParam._m0[10u].z * _330.z) - _367) * _291) + _367;
    float _382 = exp2(log2(_276.w) * cbMtdParam._m0[22u].w);
    vec4 _395 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _415 = (((cbMtdParam._m0[16u].x * _395.x) - _374) * _382) + _374;
    float _416 = (((cbMtdParam._m0[16u].y * _395.y) - _375) * _382) + _375;
    float _417 = (((cbMtdParam._m0[16u].z * _395.z) - _376) * _382) + _376;
    vec4 _430 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _455 = (_246.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _430.x) - _415) * _262) + _415);
    float _457 = (_246.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _430.y) - _416) * _262) + _416);
    float _459 = (_246.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _430.z) - _417) * _262) + _417);
    float _182[5];
    float _183[5];
    _182[0u] = cbMtdParam._m0[25u].w;
    _183[0u] = cbMtdParam._m0[26u].x;
    _182[1u] = cbMtdParam._m0[27u].w;
    _183[1u] = cbMtdParam._m0[28u].x;
    _182[2u] = cbMtdParam._m0[27u].y;
    _183[2u] = cbMtdParam._m0[27u].z;
    _182[3u] = cbMtdParam._m0[26u].w;
    _183[3u] = cbMtdParam._m0[27u].x;
    _182[4u] = cbMtdParam._m0[26u].y;
    _183[4u] = cbMtdParam._m0[26u].z;
    float _499 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    uint _501 = uint(int(isnan(4.0) ? _499 : (isnan(_499) ? 4.0 : min(_499, 4.0))));
    float _508 = ((_183[_501] - cbMtdParam._m0[21u].z) * _291) + cbMtdParam._m0[21u].z;
    float _511 = ((cbMtdParam._m0[21u].w - _508) * _382) + _508;
    float _514 = ((cbMtdParam._m0[24u].y - _511) * _262) + _511;
    vec4 _530 = texture(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w, _327));
    vec4 _547 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _549 = _547.x;
    float _550 = _547.y;
    float _555 = cbMtdParam._m0[21u].x + _547.z;
    float _558 = (((_530.z + _182[_501]) - _555) * _291) + _555;
    vec4 _571 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _582 = (((_571.z - _558) + cbMtdParam._m0[25u].y) * _382) + _558;
    float _588 = ((((_280 * 2.0) * _582) - _582) * cbMtdParam._m0[23u].w) + _582;
    vec4 _601 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _612 = (((cbMtdParam._m0[22u].z + _601.z) - _588) * _262) + _588;
    vec4 _632 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _649 = ((_530.x - _549) * _291) + _549;
    float _650 = ((_530.y - _550) * _291) + _550;
    float _655 = ((_571.x - _649) * _382) + _649;
    float _656 = ((_571.y - _650) * _382) + _650;
    float _665 = ((((_601.x - _655) * _262) + _655) * 2.0) + (-1.0);
    float _666 = ((((_601.y - _656) * _262) + _656) * 2.0) + (-1.0);
    float _667 = dot(vec2(_665, _666), vec2(_665, _666));
    float _3923 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
    float _672 = sqrt(1.0 - (isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0))));
    float _675 = (cbMtdParam._m0[24u].z * ((_276.x * 2.0) + (-1.0))) + _665;
    float _676 = (cbMtdParam._m0[24u].z * ((_276.y * 2.0) + (-1.0))) + _666;
    float _679 = fma(_672, _218 * NORMAL.x, fma(_676, _225 * TANGENT.x, (_211 * _203) * _675));
    float _682 = fma(_672, _218 * NORMAL.y, fma(_676, _225 * TANGENT.y, (_211 * _204) * _675));
    float _685 = fma(_672, _218 * NORMAL.z, fma(_676, _225 * TANGENT.z, (_211 * _205) * _675));
    float _689 = inversesqrt(dot(vec3(_679, _682, _685), vec3(_679, _682, _685)));
    float _690 = _689 * _679;
    float _691 = _689 * _682;
    float _692 = _689 * _685;
    float _3934 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _693 = isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0));
    float _3945 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _3956 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _3967 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _3978 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _697 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    float _713 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _753 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _763 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _753);
    float _764 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _753);
    float _765 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _753);
    float _769 = inversesqrt(dot(vec3(_763, _764, _765), vec3(_763, _764, _765)));
    float _770 = _763 * _769;
    float _771 = _764 * _769;
    float _772 = _765 * _769;
    float _778 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _779 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _797 = fma(_692, cbSceneParam._m0[5u].z, fma(_691, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _690));
    float _800 = fma(_692, cbSceneParam._m0[6u].z, fma(_691, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _690));
    float _803 = fma(_692, cbSceneParam._m0[7u].z, fma(_691, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _690));
    uint _816 = uint(roundEven(NORMAL.w)) * 13u;
    uint _817 = _816 + 9u;
    uint _818 = _817 + uint(cbMatDynParam._m0[0u].w);
    float _824 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0)))) * cbInstanceData._m0[_818].x;
    float _825 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0)))) * cbInstanceData._m0[_818].y;
    float _826 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0)))) * cbInstanceData._m0[_818].z;
    float _3989 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
    float _4000 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _4011 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _829 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
    float _830 = 1.0 - _697;
    float _831 = _827 * _830;
    float _832 = _828 * _830;
    float _833 = _829 * _830;
    float _838 = (_827 + (-0.039999999105930328369140625)) * _697;
    float _839 = (_828 + (-0.039999999105930328369140625)) * _697;
    float _840 = (_829 + (-0.039999999105930328369140625)) * _697;
    float _841 = _838 + 0.039999999105930328369140625;
    float _843 = _839 + 0.039999999105930328369140625;
    float _844 = _840 + 0.039999999105930328369140625;
    vec4 _853 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _778, cbSceneParam._m0[86u].y * _779));
    float _856 = _853.x * TEXCOORD_3.w;
    float _857 = dot(vec3(_690, _691, _692), vec3(_770, _771, _772));
    float _860 = _857 * 2.0;
    float _864 = (_860 * _690) - _770;
    float _865 = (_860 * _691) - _771;
    float _866 = (_860 * _692) - _772;
    float _870 = abs(dot(vec3(_770, _771, _772), vec3(_690, _691, _692)));
    float _4022 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _872 = sqrt(_693);
    float _883 = exp2((_872 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_872 * 3.0));
    float _889 = (1.0 - _883) * ((_872 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _890 = _883 * _872;
    float _918 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _922 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _926 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1227;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _952 = fma(_926, cbModelParam._m0[26u].z, fma(_922, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _918));
        float _956 = fma(_926, cbModelParam._m0[27u].z, fma(_922, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _918));
        float _960 = fma(_926, cbModelParam._m0[28u].z, fma(_922, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _918));
        float _985 = _918 + _690;
        float _986 = _922 + _691;
        float _987 = _926 + _692;
        float _997 = fma(_987, cbModelParam._m0[26u].z, fma(_986, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _985)) - _952;
        float _998 = fma(_987, cbModelParam._m0[27u].z, fma(_986, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _985)) - _956;
        float _999 = fma(_987, cbModelParam._m0[28u].z, fma(_986, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _985)) - _960;
        float _1003 = inversesqrt(dot(vec3(_997, _998, _999), vec3(_997, _998, _999)));
        float _1016 = ((_1003 * _997) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_952 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1017 = ((_1003 * _998) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_956 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1018 = ((_1003 * _999) / cbModelParam._m0[34u].z) + ((((((_960 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1021 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1016, _1017, _1018), 0.0);
        vec4 _1028 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1016, _1017, _1018), 0.0);
        vec4 _1035 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1016, _1017, _1018), 0.0);
        vec4 _1042 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1016, _1017, _1018), 0.0);
        float _1055 = exp2((_1021.w + (-0.5)) * 20.0) * 2.0;
        float _1056 = _1055 * (_1021.x + (-0.5));
        float _1057 = _1055 * (_1021.y + (-0.5));
        float _1058 = _1055 * (_1021.z + (-0.5));
        float _1065 = exp2((_1028.w + (-0.5)) * 20.0) * 2.0;
        float _1066 = _1065 * (_1028.x + (-0.5));
        float _1067 = _1065 * (_1028.y + (-0.5));
        float _1068 = _1065 * (_1028.z + (-0.5));
        float _1075 = exp2((_1035.w + (-0.5)) * 20.0) * 2.0;
        float _1076 = _1075 * (_1035.x + (-0.5));
        float _1077 = _1075 * (_1035.y + (-0.5));
        float _1078 = _1075 * (_1035.z + (-0.5));
        float _1085 = exp2((_1042.w + (-0.5)) * 20.0) * 2.0;
        float _1086 = _1085 * (_1042.x + (-0.5));
        float _1087 = _1085 * (_1042.y + (-0.5));
        float _1088 = _1085 * (_1042.z + (-0.5));
        float _1089 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1092 = _1056 * 0.5;
        float _1093 = _1066 * 0.5;
        float _1094 = _1076 * 0.5;
        float _1095 = dot(vec3(_1092, _1093, _1094), vec3(_1092, _1093, _1094));
        float _1100 = (_1095 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1095);
        float _1109 = (dot(vec3(_690, _691, _692), vec3(_1100 * _1092, _1100 * _1093, _1100 * _1094)) + 1.0) * 0.5;
        float _4048 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1119 = sqrt(((_1093 * _1093) + (_1092 * _1092)) + (_1094 * _1094)) / (_1089 + 9.9999997473787516355514526367188e-06);
        float _4059 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1120 = isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0));
        float _1121 = _1120 * 2.0;
        float _1125 = (1.0 - _1120) / (_1120 + 1.0);
        float _4070 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1126 = isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0));
        float _1135 = ((((1.0 - _1126) * (_1121 + 2.0)) * exp2(log2(isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * (_1121 + 1.0))) + _1126) * _1089;
        float _1136 = _1057 * 0.5;
        float _1137 = _1067 * 0.5;
        float _1138 = _1077 * 0.5;
        float _1139 = dot(vec3(_1136, _1137, _1138), vec3(_1136, _1137, _1138));
        float _1144 = (_1139 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1139);
        float _1152 = (dot(vec3(_690, _691, _692), vec3(_1144 * _1136, _1144 * _1137, _1144 * _1138)) + 1.0) * 0.5;
        float _4081 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1161 = sqrt(((_1137 * _1137) + (_1136 * _1136)) + (_1138 * _1138)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _4092 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1162 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
        float _1163 = _1162 * 2.0;
        float _1167 = (1.0 - _1162) / (_1162 + 1.0);
        float _4103 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
        float _1168 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
        float _1177 = ((((1.0 - _1168) * (_1163 + 2.0)) * exp2(log2(isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0))) * (_1163 + 1.0))) + _1168) * _1090;
        float _1178 = _1058 * 0.5;
        float _1179 = _1068 * 0.5;
        float _1180 = _1078 * 0.5;
        float _1181 = dot(vec3(_1178, _1179, _1180), vec3(_1178, _1179, _1180));
        float _1186 = (_1181 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1181);
        float _1194 = (dot(vec3(_690, _691, _692), vec3(_1186 * _1178, _1186 * _1179, _1186 * _1180)) + 1.0) * 0.5;
        float _4114 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1203 = sqrt(((_1179 * _1179) + (_1178 * _1178)) + (_1180 * _1180)) / (_1091 + 9.9999997473787516355514526367188e-06);
        float _4125 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1205 = _1204 * 2.0;
        float _1209 = (1.0 - _1204) / (_1204 + 1.0);
        float _4136 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1210 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1219 = ((((1.0 - _1210) * (_1205 + 2.0)) * exp2(log2(isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_1205 + 1.0))) + _1210) * _1091;
        _1227 = _1058;
        _1229 = _1057;
        _1230 = _1056;
        _1231 = _1068;
        _1232 = _1067;
        _1233 = _1066;
        _1234 = _1078;
        _1235 = _1077;
        _1236 = _1076;
        _1237 = _1091;
        _1238 = _1090;
        _1239 = _1089;
        _1240 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0)));
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0)));
        _1242 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0)));
    }
    else
    {
        _1227 = _1228;
        _1229 = _1228;
        _1230 = _1228;
        _1231 = _1228;
        _1232 = _1228;
        _1233 = _1228;
        _1234 = _1228;
        _1235 = _1228;
        _1236 = _1228;
        _1237 = _1228;
        _1238 = _1228;
        _1239 = _1228;
        _1240 = 0.0;
        _1241 = 0.0;
        _1242 = 0.0;
    }
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1268 = fma(_926, cbModelParam._m0[30u].z, fma(_922, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _918));
        float _1272 = fma(_926, cbModelParam._m0[31u].z, fma(_922, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _918));
        float _1276 = fma(_926, cbModelParam._m0[32u].z, fma(_922, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _918));
        float _1299 = _918 + _690;
        float _1300 = _922 + _691;
        float _1301 = _926 + _692;
        float _1311 = fma(_1301, cbModelParam._m0[30u].z, fma(_1300, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1299)) - _1268;
        float _1312 = fma(_1301, cbModelParam._m0[31u].z, fma(_1300, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1299)) - _1272;
        float _1313 = fma(_1301, cbModelParam._m0[32u].z, fma(_1300, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1299)) - _1276;
        float _1317 = inversesqrt(dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313)));
        float _1330 = ((_1317 * _1311) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1268 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1317 * _1312) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1272 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1332 = ((_1317 * _1313) / cbModelParam._m0[35u].z) + ((((((_1276 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        float _1367 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1334.x + (-0.5));
        float _1369 = _1367 * (_1334.y + (-0.5));
        float _1370 = _1367 * (_1334.z + (-0.5));
        float _1377 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1378 = _1377 * (_1341.x + (-0.5));
        float _1379 = _1377 * (_1341.y + (-0.5));
        float _1380 = _1377 * (_1341.z + (-0.5));
        float _1387 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1388 = _1387 * (_1348.x + (-0.5));
        float _1389 = _1387 * (_1348.y + (-0.5));
        float _1390 = _1387 * (_1348.z + (-0.5));
        float _1397 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1355.x + (-0.5));
        float _1399 = _1397 * (_1355.y + (-0.5));
        float _1400 = _1397 * (_1355.z + (-0.5));
        float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = _1368 * 0.5;
        float _1405 = _1378 * 0.5;
        float _1406 = _1388 * 0.5;
        float _1407 = dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406));
        float _1412 = (_1407 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1407);
        float _1420 = (dot(vec3(_690, _691, _692), vec3(_1412 * _1404, _1412 * _1405, _1412 * _1406)) + 1.0) * 0.5;
        float _4177 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1429 = sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406)) / (_1401 + 9.9999997473787516355514526367188e-06);
        float _4188 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
        float _1431 = _1430 * 2.0;
        float _1435 = (1.0 - _1430) / (_1430 + 1.0);
        float _4199 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0));
        float _1445 = ((((1.0 - _1436) * (_1431 + 2.0)) * exp2(log2(isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0))) * (_1431 + 1.0))) + _1436) * _1401;
        float _1446 = _1369 * 0.5;
        float _1447 = _1379 * 0.5;
        float _1448 = _1389 * 0.5;
        float _1449 = dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448));
        float _1454 = (_1449 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1449);
        float _1462 = (dot(vec3(_690, _691, _692), vec3(_1454 * _1446, _1454 * _1447, _1454 * _1448)) + 1.0) * 0.5;
        float _4210 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1471 = sqrt(((_1447 * _1447) + (_1446 * _1446)) + (_1448 * _1448)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _4221 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0));
        float _1473 = _1472 * 2.0;
        float _1477 = (1.0 - _1472) / (_1472 + 1.0);
        float _4232 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0));
        float _1487 = ((((1.0 - _1478) * (_1473 + 2.0)) * exp2(log2(isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0))) * (_1473 + 1.0))) + _1478) * _1402;
        float _1488 = _1370 * 0.5;
        float _1489 = _1380 * 0.5;
        float _1490 = _1390 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_690, _691, _692), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _4243 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _4254 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _4265 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (_1515 + 1.0))) + _1520) * _1403;
        _1537 = _1370;
        _1538 = _1369;
        _1539 = _1368;
        _1540 = _1380;
        _1541 = _1379;
        _1542 = _1378;
        _1543 = _1390;
        _1544 = _1389;
        _1545 = _1388;
        _1546 = _1403;
        _1547 = _1402;
        _1548 = _1401;
        _1549 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0)));
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
        _1551 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
    }
    else
    {
        _1537 = _1228;
        _1538 = _1228;
        _1539 = _1228;
        _1540 = _1228;
        _1541 = _1228;
        _1542 = _1228;
        _1543 = _1228;
        _1544 = _1228;
        _1545 = _1228;
        _1546 = _1228;
        _1547 = _1228;
        _1548 = _1228;
        _1549 = 0.0;
        _1550 = 0.0;
        _1551 = 0.0;
    }
    float _1561 = (cbModelParam._m0[1u].x * (_1549 - _1240)) + _1240;
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1241)) + _1241;
    float _1563 = (cbModelParam._m0[1u].x * (_1551 - _1242)) + _1242;
    float _1584 = fma(_1563, cbSceneParam._m0[89u].z, fma(_1562, cbSceneParam._m0[89u].y, _1561 * cbSceneParam._m0[89u].x));
    float _1587 = fma(_1563, cbSceneParam._m0[90u].z, fma(_1562, cbSceneParam._m0[90u].y, _1561 * cbSceneParam._m0[90u].x));
    float _1590 = fma(_1563, cbSceneParam._m0[91u].z, fma(_1562, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1561));
    float _1605 = _864 * 0.5;
    float _1606 = _865 * 0.5;
    float _1607 = _866 * 0.5;
    float _1608 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1539, _1542, _1545, _1548));
    float _1611 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1614 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1537, _1540, _1543, _1546));
    float _1648;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1621 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1227, _1231, _1234, _1237));
        float _1625 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1229, _1232, _1235, _1238));
        float _1629 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1230, _1233, _1236, _1239));
        float _1636 = dot(vec4(cbModelParam._m0[39u]), vec4(_1605, _1606, _1607, 1.0));
        _1648 = dot(vec3(isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)), isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1636) ? 0.0 : (isnan(0.0) ? _1636 : max(0.0, _1636))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1648 = 1.0;
    }
    float _1659;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1650 = dot(vec4(cbModelParam._m0[40u]), vec4(_1605, _1606, _1607, 1.0));
        _1659 = dot(vec3(isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1650) ? 0.0 : (isnan(0.0) ? _1650 : max(0.0, _1650))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1659 = 1.0;
    }
    float _1663 = (_1659 * cbModelParam._m0[1u].x) + (_1648 * (1.0 - cbModelParam._m0[1u].x));
    float _1673 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _693);
    float _1674 = isnan(_1673) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1673 : min(cbModelParam._m0[25u].z, _1673));
    float _1755;
    float _1757;
    float _1759;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1722 = fma(_926, cbModelParam._m0[13u].z, fma(_922, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _918)) + cbModelParam._m0[13u].w;
        float _1726 = fma(_926, cbModelParam._m0[14u].z, fma(_922, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _918)) + cbModelParam._m0[14u].w;
        float _1730 = fma(_926, cbModelParam._m0[15u].z, fma(_922, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _918)) + cbModelParam._m0[15u].w;
        float _1733 = fma(_866, cbModelParam._m0[13u].z, fma(_865, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _864));
        float _1736 = fma(_866, cbModelParam._m0[14u].z, fma(_865, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _864));
        float _1739 = fma(_866, cbModelParam._m0[15u].z, fma(_865, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _864));
        float _1767;
        if (_1733 > 0.0)
        {
            _1767 = abs((1.0 - _1722) / _1733);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1733 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1722 + 1.0) / _1733);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1767 = frontier_phi_14_12_ladder;
        }
        float _1939;
        if (_1736 > 0.0)
        {
            _1939 = abs((1.0 - _1726) / _1736);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1736 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1726 + 1.0) / _1736);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1939 = frontier_phi_23_19_ladder;
        }
        float _2234;
        if (_1739 > 0.0)
        {
            _2234 = abs((1.0 - _1730) / _1739);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1739 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1730 + 1.0) / _1739);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2234 = frontier_phi_35_30_ladder;
        }
        float _2236 = isnan(_1939) ? _1767 : (isnan(_1767) ? _1939 : min(_1767, _1939));
        float _2237 = isnan(_2234) ? _2236 : (isnan(_2236) ? _2234 : min(_2236, _2234));
        float _2241 = (_2237 * _1733) + _1722;
        float _2242 = (_2237 * _1736) + _1726;
        float _2243 = (_2237 * _1739) + _1730;
        float _2244 = _2237 * 9.9999997473787516355514526367188e-05;
        float _2246 = (-1.0) - _2244;
        float _2248 = _2244 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2243 > _2248) || ((_2243 < _2246) || ((_2242 > _2248) || ((_2242 < _2246) || ((_2241 < _2246) || (_2241 > _2248))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2388 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2243, cbModelParam._m0[9u].z, fma(_2242, cbModelParam._m0[9u].y, _2241 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2243, cbModelParam._m0[10u].z, fma(_2242, cbModelParam._m0[10u].y, _2241 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2243, cbModelParam._m0[11u].z, fma(_2242, cbModelParam._m0[11u].y, _2241 * cbModelParam._m0[11u].x))), _1674);
            frontier_phi_13_35_ladder = _2388.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2388.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2388.x * cbModelParam._m0[1u].y;
        }
        _1755 = frontier_phi_13_35_ladder_2;
        _1757 = frontier_phi_13_35_ladder_1;
        _1759 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1743 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_864, _865, _866), _1674);
        _1755 = _1743.x * cbModelParam._m0[1u].y;
        _1757 = _1743.y * cbModelParam._m0[1u].y;
        _1759 = _1743.z * cbModelParam._m0[1u].y;
    }
    float _1763 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _693);
    float _1764 = isnan(_1763) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1763 : min(cbModelParam._m0[25u].w, _1763));
    float _1854;
    float _1856;
    float _1858;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1818 = fma(_926, cbModelParam._m0[21u].z, fma(_922, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _918)) + cbModelParam._m0[21u].w;
        float _1822 = fma(_926, cbModelParam._m0[22u].z, fma(_922, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _918)) + cbModelParam._m0[22u].w;
        float _1826 = fma(_926, cbModelParam._m0[23u].z, fma(_922, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _918)) + cbModelParam._m0[23u].w;
        float _1829 = fma(_866, cbModelParam._m0[21u].z, fma(_865, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _864));
        float _1832 = fma(_866, cbModelParam._m0[22u].z, fma(_865, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _864));
        float _1835 = fma(_866, cbModelParam._m0[23u].z, fma(_865, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _864));
        float _1944;
        if (_1829 > 0.0)
        {
            _1944 = abs((1.0 - _1818) / _1829);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1818 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1944 = frontier_phi_25_21_ladder;
        }
        float _2261;
        if (_1832 > 0.0)
        {
            _2261 = abs((1.0 - _1822) / _1832);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1822 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2261 = frontier_phi_37_32_ladder;
        }
        float _2599;
        if (_1835 > 0.0)
        {
            _2599 = abs((1.0 - _1826) / _1835);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1835 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1826 + 1.0) / _1835);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2599 = frontier_phi_47_44_ladder;
        }
        float _2601 = isnan(_2261) ? _1944 : (isnan(_1944) ? _2261 : min(_1944, _2261));
        float _2602 = isnan(_2599) ? _2601 : (isnan(_2601) ? _2599 : min(_2601, _2599));
        float _2606 = (_2602 * _1829) + _1818;
        float _2607 = (_2602 * _1832) + _1822;
        float _2608 = (_2602 * _1835) + _1826;
        float _2609 = _2602 * 9.9999997473787516355514526367188e-05;
        float _2610 = (-1.0) - _2609;
        float _2612 = _2609 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2608 > _2612) || ((_2608 < _2610) || ((_2607 > _2612) || ((_2607 < _2610) || ((_2606 < _2610) || (_2606 > _2612))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2730 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2608, cbModelParam._m0[17u].z, fma(_2607, cbModelParam._m0[17u].y, _2606 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2608, cbModelParam._m0[18u].z, fma(_2607, cbModelParam._m0[18u].y, _2606 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2608, cbModelParam._m0[19u].z, fma(_2607, cbModelParam._m0[19u].y, _2606 * cbModelParam._m0[19u].x))), _1764);
            frontier_phi_22_47_ladder = _2730.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2730.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2730.x * cbModelParam._m0[1u].z;
        }
        _1854 = frontier_phi_22_47_ladder_2;
        _1856 = frontier_phi_22_47_ladder_1;
        _1858 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1838 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_864, _865, _866), _1764);
        _1854 = _1838.x * cbModelParam._m0[1u].z;
        _1856 = _1838.y * cbModelParam._m0[1u].z;
        _1858 = _1838.z * cbModelParam._m0[1u].z;
    }
    float _1871 = (((_889 * _841) + _890) * _856) * ((cbModelParam._m0[1u].w * (_1854 - _1755)) + _1755);
    float _1873 = (((_889 * _843) + _890) * _856) * ((cbModelParam._m0[1u].w * (_1856 - _1757)) + _1757);
    float _1875 = (((_889 * _844) + _890) * _856) * ((cbModelParam._m0[1u].w * (_1858 - _1759)) + _1759);
    float _1878 = fma(_1875, cbSceneParam._m0[89u].z, fma(_1873, cbSceneParam._m0[89u].y, _1871 * cbSceneParam._m0[89u].x));
    float _1881 = fma(_1875, cbSceneParam._m0[90u].z, fma(_1873, cbSceneParam._m0[90u].y, _1871 * cbSceneParam._m0[90u].x));
    float _1884 = fma(_1875, cbSceneParam._m0[91u].z, fma(_1873, cbSceneParam._m0[91u].y, _1871 * cbSceneParam._m0[91u].x));
    float _1918 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1922 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1926 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1930 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1931 = _1918 / _1930;
    float _1932 = _1922 / _1930;
    float _1933 = _1926 / _1930;
    float _2080;
    float _2081;
    float _2082;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1960 = ((uint(_1933 > cbSceneParam._m0[59u].y) + uint(_1933 > cbSceneParam._m0[59u].x)) + uint(_1933 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1961 = _1960 + 43u;
        uint _1969 = _1960 + 44u;
        uint _1977 = _1960 + 45u;
        uint _1985 = _1960 + 46u;
        float _1996 = fma(_1930, cbSceneParam._m0[_1961].w, fma(_1926, cbSceneParam._m0[_1961].z, fma(_1922, cbSceneParam._m0[_1961].y, _1918 * cbSceneParam._m0[_1961].x)));
        float _2000 = fma(_1930, cbSceneParam._m0[_1969].w, fma(_1926, cbSceneParam._m0[_1969].z, fma(_1922, cbSceneParam._m0[_1969].y, _1918 * cbSceneParam._m0[_1969].x)));
        float _2008 = fma(_1930, cbSceneParam._m0[_1985].w, fma(_1926, cbSceneParam._m0[_1985].z, fma(_1922, cbSceneParam._m0[_1985].y, _1918 * cbSceneParam._m0[_1985].x)));
        float _2013 = cbSceneParam._m0[33u].z * _2008;
        float _2015 = cbSceneParam._m0[33u].w * _2008;
        float _2018 = fma(_1930, cbSceneParam._m0[_1977].w, fma(_1926, cbSceneParam._m0[_1977].z, fma(_1922, cbSceneParam._m0[_1977].y, _1918 * cbSceneParam._m0[_1977].x))) / _2008;
        float _2066 = (cbSceneParam._m0[33u].x - sqrt(((_1932 * _1932) + (_1931 * _1931)) + (_1933 * _1933))) * cbSceneParam._m0[33u].y;
        float _4391 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
        float _2073 = (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2013 + _1996) / _2008, (_2015 + _2000) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2015 + _1996) / _2008, (_2000 - _2013) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 - _2013) / _2008, (_2000 - _2015) / _2008), _2018), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 - _2015) / _2008, (_2013 + _2000) / _2008), _2018), 0.0)).x), vec4(0.25)));
        _2080 = 1.0 - (_2073 * cbSceneParam._m0[34u].x);
        _2081 = 1.0 - (_2073 * cbSceneParam._m0[34u].y);
        _2082 = 1.0 - (_2073 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2080 = 1.0;
        _2081 = 1.0;
        _2082 = 1.0;
    }
    float _2146;
    float _2148;
    float _2150;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2134 = fma(_1930, cbSceneParam._m0[63u].w, fma(_1926, cbSceneParam._m0[63u].z, fma(_1922, cbSceneParam._m0[63u].y, _1918 * cbSceneParam._m0[63u].x)));
        float _2135 = fma(_1930, cbSceneParam._m0[60u].w, fma(_1926, cbSceneParam._m0[60u].z, fma(_1922, cbSceneParam._m0[60u].y, _1918 * cbSceneParam._m0[60u].x))) / _2134;
        float _2136 = fma(_1930, cbSceneParam._m0[61u].w, fma(_1926, cbSceneParam._m0[61u].z, fma(_1922, cbSceneParam._m0[61u].y, _1918 * cbSceneParam._m0[61u].x))) / _2134;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2135 >= cbSceneParam._m0[64u].x) && (_2136 >= cbSceneParam._m0[64u].y)) && (_2135 <= cbSceneParam._m0[64u].z)) && (_2136 <= cbSceneParam._m0[64u].w))
        {
            float _2274 = fma(_1930, cbSceneParam._m0[62u].w, fma(_1926, cbSceneParam._m0[62u].z, fma(_1922, cbSceneParam._m0[62u].y, _1918 * cbSceneParam._m0[62u].x))) / _2134;
            float _2278 = isnan(cbSceneParam._m0[41u].w) ? _2274 : (isnan(_2274) ? cbSceneParam._m0[41u].w : max(_2274, cbSceneParam._m0[41u].w));
            float _2321 = (cbSceneParam._m0[33u].x - sqrt(((_1932 * _1932) + (_1931 * _1931)) + (_1933 * _1933))) * cbSceneParam._m0[33u].y;
            float _4407 = isnan(0.0) ? _2321 : (isnan(_2321) ? 0.0 : max(_2321, 0.0));
            float _2328 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2135, cbSceneParam._m0[33u].w + _2136), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2135, _2136 - cbSceneParam._m0[33u].z), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2135 - cbSceneParam._m0[33u].z, _2136 - cbSceneParam._m0[33u].w), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2135 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2136), _2278), 0.0)).x), vec4(0.25)));
            float _2332 = 1.0 - (_2328 * cbSceneParam._m0[34u].x);
            float _2333 = 1.0 - (_2328 * cbSceneParam._m0[34u].y);
            float _2334 = 1.0 - (_2328 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2334) ? _2082 : (isnan(_2082) ? _2334 : min(_2082, _2334));
            frontier_phi_34_33_ladder_1 = isnan(_2333) ? _2081 : (isnan(_2081) ? _2333 : min(_2081, _2333));
            frontier_phi_34_33_ladder_2 = isnan(_2332) ? _2080 : (isnan(_2080) ? _2332 : min(_2080, _2332));
        }
        else
        {
            frontier_phi_34_33_ladder = _2082;
            frontier_phi_34_33_ladder_1 = _2081;
            frontier_phi_34_33_ladder_2 = _2080;
        }
        _2146 = frontier_phi_34_33_ladder_2;
        _2148 = frontier_phi_34_33_ladder_1;
        _2150 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2146 = _2080;
        _2148 = _2081;
        _2150 = _2082;
    }
    uvec4 _2155 = floatBitsToUint(cbInstanceData._m0[_816 + 5u]);
    uint _2157 = _2155.x * 14u;
    uint _2158 = _2157 + 13u;
    float _2165 = _856 + (-1.0);
    float _2170 = (cbLight._m0[_2158].x * _2165) + 1.0;
    float _2171 = (cbLight._m0[_2158].y * _2165) + 1.0;
    float _2172 = (cbLight._m0[_2158].z * _2165) + 1.0;
    float _2173 = (cbLight._m0[_2158].w * _2165) + 1.0;
    uint _2174 = _2157 + 5u;
    float _2180 = isnan(1.0) ? _2171 : (isnan(_2171) ? 1.0 : min(_2171, 1.0));
    uint _2184 = _2157 + 4u;
    float _2193 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
    uint _2197 = _2157 | 1u;
    float _2208 = dot(vec3(cbLight._m0[_2157].xyz), vec3(_690, _691, _692));
    float _2211 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_690, _691, _692));
    float _4443 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
    float _4454 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
    float _2216 = (isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * 0.3183098733425140380859375;
    float _2218 = (isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * 0.3183098733425140380859375;
    float _2225 = ((cbLight._m0[_2174].x * _2180) * _2218) + (((cbLight._m0[_2184].x * _2146) * _2193) * _2216);
    float _2226 = ((_2180 * cbLight._m0[_2174].y) * _2218) + (((cbLight._m0[_2184].y * _2148) * _2193) * _2216);
    float _2227 = ((_2180 * cbLight._m0[_2174].z) * _2218) + (((cbLight._m0[_2184].z * _2150) * _2193) * _2216);
    uvec4 _2231 = floatBitsToUint(cbLight._m0[_2157 + 12u]);
    bool _2233 = _2231.x == 0u;
    float _2335;
    float _2337;
    float _2339;
    if (_2233)
    {
        _2335 = _2225;
        _2337 = _2226;
        _2339 = _2227;
    }
    else
    {
        uint _2343 = _2157 + 6u;
        float _2359 = (dot(vec3(cbLight._m0[_2157 + 2u].xyz), vec3(_690, _691, _692)) * 0.5) + 0.5;
        float _2360 = _2359 * _2359;
        float _4465 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
        float _2361 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _2362 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2335 = (((cbLight._m0[_2343].x * 0.3183098733425140380859375) * _2361) * _2362) + _2225;
        _2337 = (((cbLight._m0[_2343].y * 0.3183098733425140380859375) * _2361) * _2362) + _2226;
        _2339 = (((cbLight._m0[_2343].z * 0.3183098733425140380859375) * _2361) * _2362) + _2227;
    }
    bool _2342 = _2231.y == 0u;
    float _2397;
    float _2399;
    float _2401;
    if (_2342)
    {
        _2397 = _2335;
        _2399 = _2337;
        _2401 = _2339;
    }
    else
    {
        uint _2570 = _2157 + 7u;
        float _2586 = (dot(vec3(cbLight._m0[_2157 + 3u].xyz), vec3(_690, _691, _692)) * 0.5) + 0.5;
        float _2587 = _2586 * _2586;
        float _4481 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
        float _2588 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _2589 = isnan(1.0) ? _2173 : (isnan(_2173) ? 1.0 : min(_2173, 1.0));
        _2397 = (((cbLight._m0[_2570].x * 0.3183098733425140380859375) * _2588) * _2589) + _2335;
        _2399 = (((cbLight._m0[_2570].y * 0.3183098733425140380859375) * _2588) * _2589) + _2337;
        _2401 = (((cbLight._m0[_2570].z * 0.3183098733425140380859375) * _2588) * _2589) + _2339;
    }
    uint _2404 = _2157 + 8u;
    float _2417 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2157].w)) * _693) * 0.949999988079071044921875);
    float _2418 = _2417 * _2417;
    float _2419 = cbLight._m0[_2157].x + _770;
    float _2420 = cbLight._m0[_2157].y + _771;
    float _2421 = cbLight._m0[_2157].z + _772;
    float _2425 = inversesqrt(dot(vec3(_2419, _2420, _2421), vec3(_2419, _2420, _2421)));
    float _2426 = _2425 * _2419;
    float _2427 = _2425 * _2420;
    float _2428 = _2425 * _2421;
    float _2429 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2157].xyz));
    float _4497 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2432 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
    float _4508 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _2433 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
    float _2434 = dot(vec3(_690, _691, _692), vec3(_2426, _2427, _2428));
    float _4519 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
    float _2437 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
    float _2438 = dot(vec3(cbLight._m0[_2157].xyz), vec3(_2426, _2427, _2428));
    float _4530 = isnan(0.0) ? _2438 : (isnan(_2438) ? 0.0 : max(_2438, 0.0));
    float _2442 = _2418 * _2418;
    float _2446 = ((_2437 * _2437) * (_2442 + (-1.0))) + 1.0;
    float _2454 = exp2(log2(1.0 - (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0)))) * 5.0);
    float _2455 = 0.959999978542327880859375 - _838;
    float _2457 = 0.959999978542327880859375 - _839;
    float _2458 = 0.959999978542327880859375 - _840;
    float _2465 = 1.0 - _2418;
    float _2476 = (0.5 / (((_2433 * ((_2432 * _2465) + _2418)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2465) + _2418) * _2432))) * _2432;
    float _4541 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2478 = (isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0))) * (_2442 / ((_2446 * _2446) * 3.141590118408203125));
    uint _2492 = _2157 + 9u;
    float _2503 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2197].w)) * _693) * 0.949999988079071044921875);
    float _2504 = _2503 * _2503;
    float _2505 = cbLight._m0[_2197].x + _770;
    float _2506 = cbLight._m0[_2197].y + _771;
    float _2507 = cbLight._m0[_2197].z + _772;
    float _2511 = inversesqrt(dot(vec3(_2505, _2506, _2507), vec3(_2505, _2506, _2507)));
    float _2512 = _2511 * _2505;
    float _2513 = _2511 * _2506;
    float _2514 = _2511 * _2507;
    float _2515 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2197].xyz));
    float _4552 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
    float _2518 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
    float _2519 = dot(vec3(_690, _691, _692), vec3(_2512, _2513, _2514));
    float _4563 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
    float _2522 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
    float _2523 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_2512, _2513, _2514));
    float _4574 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2527 = _2504 * _2504;
    float _2531 = ((_2522 * _2522) * (_2527 + (-1.0))) + 1.0;
    float _2538 = exp2(log2(1.0 - (isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0)))) * 5.0);
    float _2545 = 1.0 - _2504;
    float _2555 = (0.5 / (((_2433 * ((_2518 * _2545) + _2504)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2545) + _2504) * _2518))) * _2518;
    float _4585 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
    float _2557 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * (_2527 / ((_2531 * _2531) * 3.141590118408203125));
    float _2567 = (((((_2538 * _2455) + _841) * cbLight._m0[_2492].x) * _2557) * _2180) + ((((cbLight._m0[_2404].x * _2146) * ((_2454 * _2455) + _841)) * _2478) * _2193);
    float _2568 = (((((_2538 * _2457) + _843) * cbLight._m0[_2492].y) * _2557) * _2180) + ((((cbLight._m0[_2404].y * _2148) * ((_2454 * _2457) + _843)) * _2478) * _2193);
    float _2569 = (((((_2538 * _2458) + _844) * cbLight._m0[_2492].z) * _2557) * _2180) + ((((cbLight._m0[_2404].z * _2150) * ((_2454 * _2458) + _844)) * _2478) * _2193);
    float _2625;
    float _2627;
    float _2629;
    if (_2233)
    {
        _2625 = _2567;
        _2627 = _2568;
        _2629 = _2569;
    }
    else
    {
        uint _2631 = _2157 + 2u;
        uint _2635 = _2157 + 10u;
        float _2649 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2631].w)) * _693) * 0.949999988079071044921875);
        float _2650 = _2649 * _2649;
        float _2651 = cbLight._m0[_2631].x + _770;
        float _2652 = cbLight._m0[_2631].y + _771;
        float _2653 = cbLight._m0[_2631].z + _772;
        float _2657 = inversesqrt(dot(vec3(_2651, _2652, _2653), vec3(_2651, _2652, _2653)));
        float _2658 = _2657 * _2651;
        float _2659 = _2657 * _2652;
        float _2660 = _2657 * _2653;
        float _2661 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2631].xyz));
        float _4596 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
        float _2664 = isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0));
        float _2665 = dot(vec3(_690, _691, _692), vec3(_2658, _2659, _2660));
        float _4607 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
        float _2668 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
        float _2669 = dot(vec3(cbLight._m0[_2631].xyz), vec3(_2658, _2659, _2660));
        float _4618 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
        float _2673 = _2650 * _2650;
        float _2677 = ((_2668 * _2668) * (_2673 + (-1.0))) + 1.0;
        float _2684 = exp2(log2(1.0 - (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0)))) * 5.0);
        float _2691 = 1.0 - _2650;
        float _2701 = (0.5 / (((_2433 * ((_2664 * _2691) + _2650)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2691) + _2650) * _2664))) * _2664;
        float _4629 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
        float _2703 = (isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0))) * (_2673 / ((_2677 * _2677) * 3.141590118408203125));
        float _2704 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2625 = (((((_2684 * _2455) + _841) * cbLight._m0[_2635].x) * _2703) * _2704) + _2567;
        _2627 = (((((_2684 * _2457) + _843) * cbLight._m0[_2635].y) * _2703) * _2704) + _2568;
        _2629 = (((((_2684 * _2458) + _844) * cbLight._m0[_2635].z) * _2703) * _2704) + _2569;
    }
    float _2735;
    float _2737;
    float _2739;
    if (_2342)
    {
        _2735 = _2625;
        _2737 = _2627;
        _2739 = _2629;
    }
    else
    {
        uint _2746 = _2157 + 3u;
        uint _2750 = _2157 + 11u;
        float _2764 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2746].w)) * _693) * 0.949999988079071044921875);
        float _2765 = _2764 * _2764;
        float _2766 = cbLight._m0[_2746].x + _770;
        float _2767 = cbLight._m0[_2746].y + _771;
        float _2768 = cbLight._m0[_2746].z + _772;
        float _2772 = inversesqrt(dot(vec3(_2766, _2767, _2768), vec3(_2766, _2767, _2768)));
        float _2773 = _2772 * _2766;
        float _2774 = _2772 * _2767;
        float _2775 = _2772 * _2768;
        float _2776 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2746].xyz));
        float _4645 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
        float _2779 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
        float _2780 = dot(vec3(_690, _691, _692), vec3(_2773, _2774, _2775));
        float _4656 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2783 = isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0));
        float _2784 = dot(vec3(cbLight._m0[_2746].xyz), vec3(_2773, _2774, _2775));
        float _4667 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
        float _2788 = _2765 * _2765;
        float _2792 = ((_2783 * _2783) * (_2788 + (-1.0))) + 1.0;
        float _2799 = exp2(log2(1.0 - (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0)))) * 5.0);
        float _2806 = 1.0 - _2765;
        float _2816 = (0.5 / (((_2433 * ((_2779 * _2806) + _2765)) + 9.9999999392252902907785028219223e-09) + (((_2433 * _2806) + _2765) * _2779))) * _2779;
        float _4678 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
        float _2818 = (isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0))) * (_2788 / ((_2792 * _2792) * 3.141590118408203125));
        float _2819 = isnan(1.0) ? _2173 : (isnan(_2173) ? 1.0 : min(_2173, 1.0));
        _2735 = (((((_2799 * _2455) + _841) * cbLight._m0[_2750].x) * _2818) * _2819) + _2625;
        _2737 = (((((_2799 * _2457) + _843) * cbLight._m0[_2750].y) * _2818) * _2819) + _2627;
        _2739 = (((((_2799 * _2458) + _844) * cbLight._m0[_2750].z) * _2818) * _2819) + _2629;
    }
    float _2885;
    float _2887;
    float _2889;
    float _2891;
    float _2893;
    float _2895;
    if (_2155.y == 0u)
    {
        uvec4 _2840 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2841 = _2840.x;
        uint _2852 = uint((float(_2840.y) * floor(float(uint(cbSceneParam._m0[85u].y * _779) / _2841))) + floor(float(uint(cbSceneParam._m0[85u].x * _778) / _2841)));
        float _2862 = (log2(_1933 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2863 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        uint _2866 = uint(isnan(14.0) ? _2863 : (isnan(_2863) ? 14.0 : min(_2863, 14.0)));
        uvec4 _2871 = texelFetch(g_lightClusterGridBuffer, int(((_2866 << 2u) + (_2852 << 6u)) >> 2u));
        uint _2872 = _2871.x;
        uint _2873 = _2840.z;
        float _2987;
        float _2989;
        float _2991;
        float _2993;
        float _2995;
        float _2997;
        if (((((1u << ((_2873 >> 4u) & 15u)) + 4294967295u) & _2872) == 0u) || ((_2873 & 240u) == 0u))
        {
            _2987 = 0.0;
            _2989 = 0.0;
            _2991 = 0.0;
            _2993 = 0.0;
            _2995 = 0.0;
            _2997 = 0.0;
        }
        else
        {
            float _2988;
            float _2990;
            float _2992;
            float _2994;
            float _2996;
            float _2998;
            float _3141 = 0.0;
            float _3142 = 0.0;
            float _3143 = 0.0;
            float _3144 = 0.0;
            float _3145 = 0.0;
            float _3146 = 0.0;
            uint _3147 = 0u;
            uint _3156;
            bool _3157;
            for (;;)
            {
                _3156 = texelFetch(g_lightClassification, int((((_2866 << 5u) + (_2852 << 9u)) + (_3147 << 2u)) >> 2u)).x;
                _3157 = _3156 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3157)
                {
                    frontier_phi_66_pred = _3146;
                    frontier_phi_66_pred_1 = _3145;
                    frontier_phi_66_pred_2 = _3144;
                    frontier_phi_66_pred_3 = _3143;
                    frontier_phi_66_pred_4 = _3142;
                    frontier_phi_66_pred_5 = _3141;
                }
                else
                {
                    float _3265;
                    float _3266;
                    float _3267;
                    float _3268;
                    float _3269;
                    float _3270;
                    uint _3271;
                    _3265 = _3141;
                    _3266 = _3142;
                    _3267 = _3143;
                    _3268 = _3144;
                    _3269 = _3145;
                    _3270 = _3146;
                    _3271 = _3156;
                    float _3197;
                    float _3198;
                    float _3199;
                    float _3200;
                    float _3201;
                    float _3202;
                    for (;;)
                    {
                        uint _3275 = uint(findLSB(_3271)) + (_3147 << 5u);
                        uint _3272 = (_3271 + 4294967295u) & _3271;
                        uint _3277 = _3275 * 48u;
                        vec4 _3291 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3277)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 3u)).x));
                        uint _3297 = (_3275 * 48u) + 4u;
                        vec4 _3310 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3297)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 3u)).x));
                        uint _3316 = (_3275 * 48u) + 8u;
                        vec3 _3327 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3316)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 2u)).x));
                        float _3331 = _3291.x - _1931;
                        float _3332 = _3291.y - _1932;
                        float _3333 = _3291.z - _1933;
                        float _3334 = dot(vec3(_3331, _3332, _3333), vec3(_3331, _3332, _3333));
                        float _3337 = inversesqrt(_3334);
                        float _3338 = _3337 * _3331;
                        float _3339 = _3337 * _3332;
                        float _3340 = _3337 * _3333;
                        float _3341 = dot(vec3(_797, _800, _803), vec3(_3338, _3339, _3340));
                        float _3346 = 1.0 - (_3334 * _3291.w);
                        float _4704 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3347 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
                        float _3348 = sqrt(_3334) * _3310.w;
                        float _3351 = 1.39999997615814208984375 / (_3348 + 1.39999997615814208984375);
                        float _3352 = _3351 * _3351;
                        float _3355 = ((1.0 - _3352) * _3341) + _3352;
                        float _3358 = _3348 * _3348;
                        float _3362 = ((isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0))) * _3347) / ((_3358 * 0.699999988079071044921875) + 1.0);
                        float _3366 = (-0.0) - _1931;
                        float _3367 = (-0.0) - _1932;
                        float _3368 = (-0.0) - _1933;
                        float _3372 = inversesqrt(dot(vec3(_3366, _3367, _3368), vec3(_3366, _3367, _3368)));
                        float _3373 = _3372 * _3366;
                        float _3374 = _3372 * _3367;
                        float _3375 = _3372 * _3368;
                        float _3382 = exp2(log2(1.0 / ((_3358 * 3.5) + 5.0)) * 0.25);
                        float _3383 = 1.0 - _872;
                        float _3390 = sqrt(1.0 - ((1.0 - (_3383 * _3383)) * (1.0 - (_3382 * _3382))));
                        float _3391 = _3390 * _3390;
                        float _3392 = _3391 * _3391;
                        float _3393 = _3373 + _3338;
                        float _3394 = _3374 + _3339;
                        float _3395 = _3375 + _3340;
                        float _3399 = inversesqrt(dot(vec3(_3393, _3394, _3395), vec3(_3393, _3394, _3395)));
                        float _3403 = dot(vec3(_797, _800, _803), vec3(_3373, _3374, _3375));
                        float _4720 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3406 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
                        float _3407 = dot(vec3(_797, _800, _803), vec3(_3399 * _3393, _3399 * _3394, _3399 * _3395));
                        float _4731 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3410 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
                        float _3414 = ((_3410 * _3410) * (_3392 + (-1.0))) + 1.0;
                        float _3415 = _3351 * _3391;
                        float _3416 = _3415 * _3415;
                        float _3419 = ((1.0 - _3416) * _3341) + _3416;
                        float _4742 = isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : max(_3419, 0.0));
                        float _3420 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
                        float _3421 = 1.0 - _3391;
                        float _3431 = (0.5 / (((_3420 * ((_3406 * _3421) + _3391)) + 9.9999999392252902907785028219223e-09) + (((_3420 * _3421) + _3391) * _3406))) * _3420;
                        float _4753 = isnan(0.0) ? _3431 : (isnan(_3431) ? 0.0 : max(_3431, 0.0));
                        float _3442 = (((_3392 * 3.1415927410125732421875) * (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) / ((_3414 * _3414) * ((_3358 * 2.1991131305694580078125) + 3.141590118408203125))) * _3347;
                        _3200 = (_3362 * _3310.x) + _3268;
                        _3201 = (_3362 * _3310.y) + _3269;
                        _3202 = (_3362 * _3310.z) + _3270;
                        _3197 = (_3442 * _3327.x) + _3265;
                        _3198 = (_3442 * _3327.y) + _3266;
                        _3199 = (_3442 * _3327.z) + _3267;
                        if (_3272 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3265 = _3197;
                            _3266 = _3198;
                            _3267 = _3199;
                            _3268 = _3200;
                            _3269 = _3201;
                            _3270 = _3202;
                            _3271 = _3272;
                        }
                    }
                    frontier_phi_66_pred = _3202;
                    frontier_phi_66_pred_1 = _3201;
                    frontier_phi_66_pred_2 = _3200;
                    frontier_phi_66_pred_3 = _3199;
                    frontier_phi_66_pred_4 = _3198;
                    frontier_phi_66_pred_5 = _3197;
                }
                _2998 = frontier_phi_66_pred;
                _2996 = frontier_phi_66_pred_1;
                _2994 = frontier_phi_66_pred_2;
                _2992 = frontier_phi_66_pred_3;
                _2990 = frontier_phi_66_pred_4;
                _2988 = frontier_phi_66_pred_5;
                uint _3148 = _3147 + 1u;
                if (_3148 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3141 = _2988;
                    _3142 = _2990;
                    _3143 = _2992;
                    _3144 = _2994;
                    _3145 = _2996;
                    _3146 = _2998;
                    _3147 = _3148;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2987 = _2988;
            _2989 = _2990;
            _2991 = _2992;
            _2993 = _2994;
            _2995 = _2996;
            _2997 = _2998;
        }
        uvec4 _3001 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3002 = _3001.z;
        uint _3004 = (_3002 >> 8u) & 15u;
        float _3109;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        if (((4294967295u << _3004) & _2872) == 0u)
        {
            _3109 = _2987;
            _3111 = _2989;
            _3113 = _2991;
            _3115 = _2993;
            _3117 = _2995;
            _3119 = _2997;
        }
        else
        {
            float _3134 = inversesqrt(dot(vec3(_1931, _1932, _1933), vec3(_1931, _1932, _1933)));
            float _3135 = _3134 * _1931;
            float _3136 = _3134 * _1932;
            float _3137 = _3134 * _1933;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3004 < ((_3002 >> 12u) & 15u))
            {
                float _3110;
                float _3112;
                float _3114;
                float _3116;
                float _3118;
                float _3120;
                float _3248 = _2987;
                float _3249 = _2989;
                float _3250 = _2991;
                float _3251 = _2993;
                float _3252 = _2995;
                float _3253 = _2997;
                uint _3254 = _3004;
                uint _3263;
                bool _3264;
                for (;;)
                {
                    _3263 = texelFetch(g_lightClassification, int((((_2866 << 5u) + (_2852 << 9u)) + (_3254 << 2u)) >> 2u)).x;
                    _3264 = _3263 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3264)
                    {
                        frontier_phi_72_pred = _3253;
                        frontier_phi_72_pred_1 = _3252;
                        frontier_phi_72_pred_2 = _3251;
                        frontier_phi_72_pred_3 = _3250;
                        frontier_phi_72_pred_4 = _3249;
                        frontier_phi_72_pred_5 = _3248;
                    }
                    else
                    {
                        float _3447;
                        float _3448;
                        float _3449;
                        float _3450;
                        float _3451;
                        float _3452;
                        float _3740;
                        float _3741;
                        float _3742;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3460 = _3248;
                        float _3461 = _3249;
                        float _3462 = _3250;
                        float _3463 = _3251;
                        float _3464 = _3252;
                        float _3465 = _3253;
                        uint _3466 = _3263;
                        uint _3467;
                        vec4 _3492;
                        float _3493;
                        vec4 _3508;
                        vec3 _3520;
                        vec4 _3535;
                        vec4 _3550;
                        float _3596;
                        bool _3597;
                        for (;;)
                        {
                            uint _3477 = ((_3254 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3466));
                            _3467 = (_3466 + 4294967295u) & _3466;
                            uint _3479 = _3477 * 40u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            _3493 = _3492.w;
                            uint _3495 = (_3477 * 40u) + 4u;
                            _3508 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 3u)).x));
                            uint _3510 = (_3477 * 40u) + 8u;
                            _3520 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x));
                            uint _3522 = (_3477 * 40u) + 16u;
                            _3535 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3522)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 3u)).x));
                            uint _3537 = (_3477 * 40u) + 20u;
                            _3550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 3u)).x));
                            uint _3552 = (_3477 * 40u) + 24u;
                            vec4 _3565 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3552)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 3u)).x));
                            uint _3571 = (_3477 * 40u) + 28u;
                            vec4 _3584 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3571)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 3u)).x));
                            _3596 = fma(_1933, _3584.z, fma(_1932, _3584.y, _3584.x * _1931)) + _3584.w;
                            _3597 = !((fma(_1933, _3565.z, fma(_1932, _3565.y, _3565.x * _1931)) + _3565.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3597)
                            {
                                float _3624 = _3492.x - _1931;
                                float _3625 = _3492.y - _1932;
                                float _3626 = _3492.z - _1933;
                                float _3627 = dot(vec3(_3624, _3625, _3626), vec3(_3624, _3625, _3626));
                                float _3630 = inversesqrt(_3627);
                                float _3631 = _3630 * _3624;
                                float _3632 = _3630 * _3625;
                                float _3633 = _3630 * _3626;
                                float _3637 = 1.0 - (_3627 / (_3493 * _3493));
                                float _4764 = isnan(0.0) ? _3637 : (isnan(_3637) ? 0.0 : max(_3637, 0.0));
                                float _3638 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
                                float _3642 = sqrt(_3627) * _3508.w;
                                float _3644 = 1.39999997615814208984375 / (_3642 + 1.39999997615814208984375);
                                float _3645 = _3644 * _3644;
                                float _3648 = ((1.0 - _3645) * dot(vec3(_3631, _3632, _3633), vec3(_797, _800, _803))) + _3645;
                                float _3651 = _3642 * _3642;
                                float _3655 = (fma(_1933, _3535.z, fma(_1932, _3535.y, _3535.x * _1931)) + _3535.w) / _3596;
                                float _3656 = (fma(_1933, _3550.z, fma(_1932, _3550.y, _3550.x * _1931)) + _3550.w) / _3596;
                                float _3660 = 1.0 - dot(vec2(_3655, _3656), vec2(_3655, _3656));
                                float _4780 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3661 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
                                float _3662 = _3661 * (((isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0))) * _3638) / ((_3651 * 0.699999988079071044921875) + 1.0));
                                float _3674 = exp2(log2(1.0 / ((_3651 * 3.5) + 5.0)) * 0.25);
                                float _3675 = 1.0 - _872;
                                float _3682 = sqrt(1.0 - ((1.0 - (_3675 * _3675)) * (1.0 - (_3674 * _3674))));
                                float _3683 = _3682 * _3682;
                                float _3684 = _3683 * _3683;
                                float _3685 = _3631 - _3135;
                                float _3686 = _3632 - _3136;
                                float _3687 = _3633 - _3137;
                                float _3691 = inversesqrt(dot(vec3(_3685, _3686, _3687), vec3(_3685, _3686, _3687)));
                                float _3695 = dot(vec3(_797, _800, _803), vec3((-0.0) - _3135, (-0.0) - _3136, (-0.0) - _3137));
                                float _4791 = isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0));
                                float _3698 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
                                float _3699 = dot(vec3(_797, _800, _803), vec3(_3691 * _3685, _3691 * _3686, _3691 * _3687));
                                float _4802 = isnan(0.0) ? _3699 : (isnan(_3699) ? 0.0 : max(_3699, 0.0));
                                float _3702 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
                                float _3706 = ((_3702 * _3702) * (_3684 + (-1.0))) + 1.0;
                                float _3707 = _3644 * _3683;
                                float _3708 = _3707 * _3707;
                                float _3714 = ((1.0 - _3708) * dot(vec3(_797, _800, _803), vec3(_3631, _3632, _3633))) + _3708;
                                float _4813 = isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0));
                                float _3715 = isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0));
                                float _3716 = 1.0 - _3683;
                                float _3726 = (0.5 / (((_3715 * ((_3698 * _3716) + _3683)) + 9.9999999392252902907785028219223e-09) + (((_3715 * _3716) + _3683) * _3698))) * _3715;
                                float _4824 = isnan(0.0) ? _3726 : (isnan(_3726) ? 0.0 : max(_3726, 0.0));
                                float _3736 = (_3661 * _3638) * (((_3684 * 3.1415927410125732421875) * (isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0)))) / ((_3706 * _3706) * ((_3651 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3662 * _3508.y;
                                frontier_phi_78_pred_1 = _3662 * _3508.x;
                                frontier_phi_78_pred_2 = _3736 * _3520.z;
                                frontier_phi_78_pred_3 = _3736 * _3520.y;
                                frontier_phi_78_pred_4 = _3736 * _3520.x;
                                frontier_phi_78_pred_5 = _3662 * _3508.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3744 = frontier_phi_78_pred;
                            _3743 = frontier_phi_78_pred_1;
                            _3742 = frontier_phi_78_pred_2;
                            _3741 = frontier_phi_78_pred_3;
                            _3740 = frontier_phi_78_pred_4;
                            _3745 = frontier_phi_78_pred_5;
                            _3450 = _3743 + _3463;
                            _3451 = _3744 + _3464;
                            _3452 = _3745 + _3465;
                            _3447 = _3740 + _3460;
                            _3448 = _3741 + _3461;
                            _3449 = _3742 + _3462;
                            if (_3467 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3460 = _3447;
                                _3461 = _3448;
                                _3462 = _3449;
                                _3463 = _3450;
                                _3464 = _3451;
                                _3465 = _3452;
                                _3466 = _3467;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3452;
                        frontier_phi_72_pred_1 = _3451;
                        frontier_phi_72_pred_2 = _3450;
                        frontier_phi_72_pred_3 = _3449;
                        frontier_phi_72_pred_4 = _3448;
                        frontier_phi_72_pred_5 = _3447;
                    }
                    _3120 = frontier_phi_72_pred;
                    _3118 = frontier_phi_72_pred_1;
                    _3116 = frontier_phi_72_pred_2;
                    _3114 = frontier_phi_72_pred_3;
                    _3112 = frontier_phi_72_pred_4;
                    _3110 = frontier_phi_72_pred_5;
                    uint _3255 = _3254 + 1u;
                    if (_3255 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3248 = _3110;
                        _3249 = _3112;
                        _3250 = _3114;
                        _3251 = _3116;
                        _3252 = _3118;
                        _3253 = _3120;
                        _3254 = _3255;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3120;
                frontier_phi_60_61_ladder_1 = _3118;
                frontier_phi_60_61_ladder_2 = _3114;
                frontier_phi_60_61_ladder_3 = _3112;
                frontier_phi_60_61_ladder_4 = _3110;
                frontier_phi_60_61_ladder_5 = _3116;
            }
            else
            {
                frontier_phi_60_61_ladder = _2997;
                frontier_phi_60_61_ladder_1 = _2995;
                frontier_phi_60_61_ladder_2 = _2991;
                frontier_phi_60_61_ladder_3 = _2989;
                frontier_phi_60_61_ladder_4 = _2987;
                frontier_phi_60_61_ladder_5 = _2993;
            }
            _3109 = frontier_phi_60_61_ladder_4;
            _3111 = frontier_phi_60_61_ladder_3;
            _3113 = frontier_phi_60_61_ladder_2;
            _3115 = frontier_phi_60_61_ladder_5;
            _3117 = frontier_phi_60_61_ladder_1;
            _3119 = frontier_phi_60_61_ladder;
        }
        float _3124 = isnan(1.0) ? _856 : (isnan(_856) ? 1.0 : min(_856, 1.0));
        _2885 = (_3124 * _3115) + _2397;
        _2887 = (_3124 * _3117) + _2399;
        _2889 = (_3124 * _3119) + _2401;
        _2891 = ((_3109 * _841) * _3124) + _2735;
        _2893 = ((_3111 * _843) * _3124) + _2737;
        _2895 = ((_3113 * _844) * _3124) + _2739;
    }
    else
    {
        _2885 = _2397;
        _2887 = _2399;
        _2889 = _2401;
        _2891 = _2735;
        _2893 = _2737;
        _2895 = _2739;
    }
    uint _2901 = _817 + uint(cbMatDynParam._m0[0u].w);
    float _2909 = ((cbMtdParam._m0[20u].x * cbMtdParam._m0[25u].x) * _632.x) * cbInstanceData._m0[_2901].x;
    float _2912 = ((cbMtdParam._m0[20u].y * cbMtdParam._m0[25u].x) * _632.y) * cbInstanceData._m0[_2901].y;
    float _2915 = ((cbMtdParam._m0[20u].z * cbMtdParam._m0[25u].x) * _632.z) * cbInstanceData._m0[_2901].z;
    float _4840 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _4851 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _4862 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _2932 = (((isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0))) * (_2885 + ((isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))) * _856))) + ((_2891 + ((isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + _2909;
    float _2934 = (_2912 + ((_2893 + ((isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0))) * (_2887 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _856)));
    float _2936 = (_2915 + ((_2895 + ((isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0))) * (_2889 + ((isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0))) * _856)));
    float _4888 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2949 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
    uint _2950 = _816 + 6u;
    float _2958 = _778 / cbSceneParam._m0[86u].x;
    float _2959 = _779 / cbSceneParam._m0[86u].y;
    vec4 _2973 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, (log2((isnan(cbSceneParam._m0[77u].w) ? _713 : (isnan(_713) ? cbSceneParam._m0[77u].w : min(_713, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2975 = _2973.x;
    float _2976 = _2973.y;
    float _2977 = _2973.z;
    float _2978 = _2973.w;
    float _3050;
    float _3052;
    float _3054;
    float _3056;
    if (_713 > cbSceneParam._m0[78u].w)
    {
        float _3012 = isnan(_713) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _713 : min(cbSceneParam._m0[80u].w, _713));
        float _3013 = _3012 / _713;
        float _3024 = _3013 * _763;
        float _3025 = _764 * _3013;
        float _3026 = (-0.0) - _3025;
        float _3028 = _3013 * _765;
        float _3030 = (cbSceneParam._m0[77u].w * _3026) / _3012;
        float _3031 = _3030 + cbSceneParam._m0[79u].w;
        float _3032 = cbSceneParam._m0[79u].w - _3025;
        float _3038 = sqrt(((_3024 * _3024) + (_3025 * _3025)) + (_3028 * _3028));
        float _3041 = (1.0 - (cbSceneParam._m0[77u].w / _3012)) * _3038;
        float _3046 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3048 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3210;
        if (abs((_3026 - _3030) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3210 = ((((_3031 > 0.0) ? exp2(_3046 * _3031) : (2.0 - exp2(_3048 * _3031))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3041;
        }
        else
        {
            float _3170 = 1.0 / cbSceneParam._m0[80u].x;
            float _3171 = isnan(_3032) ? _3031 : (isnan(_3031) ? _3032 : max(_3031, _3032));
            float _3172 = isnan(_3032) ? _3031 : (isnan(_3031) ? _3032 : min(_3031, _3032));
            float _3181 = isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : min(_3171, 0.0));
            float _3182 = isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : min(_3172, 0.0));
            _3210 = ((abs(_3038 / _3026) * cbSceneParam._m0[80u].y) * ((((_3181 - _3182) * 2.0) - ((exp2(_3046 * (isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0)))) - exp2(_3046 * (isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : max(_3172, 0.0))))) * _3170)) - ((exp2(_3048 * _3181) - exp2(_3048 * _3182)) * _3170))) + (_3041 * cbSceneParam._m0[80u].z);
        }
        vec4 _3212 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, 1.0), 0.0);
        float _3221 = exp2((_3210 * (-1.44269502162933349609375)) * (1.0 - _3212.w));
        float _3222 = log2(_3221);
        float _3238 = log2(_2978);
        _3050 = (exp2(_3238 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].x)) * _3212.x) / cbSceneParam._m0[78u].x)) + _2975;
        _3052 = (exp2(_3238 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].y)) * _3212.y) / cbSceneParam._m0[78u].y)) + _2976;
        _3054 = (exp2(_3238 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].z)) * _3212.z) / cbSceneParam._m0[78u].z)) + _2977;
        _3056 = _3221 * _2978;
    }
    else
    {
        _3050 = _2975;
        _3052 = _2976;
        _3054 = _2977;
        _3056 = _2978;
    }
    float _3068 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3069 = _3068 == 3.0;
    float _3070 = log2(_3056);
    float _3074 = exp2(_3070 * cbSceneParam._m0[78u].x);
    float _3075 = exp2(_3070 * cbSceneParam._m0[78u].y);
    float _3076 = exp2(_3070 * cbSceneParam._m0[78u].z);
    float _3077 = _3074 * (isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0)));
    float _3078 = _3075 * (isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0)));
    float _3079 = _3076 * (isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0)));
    float _3088 = (_3068 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3088 * (_3069 ? _3077 : (_3077 + (cbSceneParam._m0[72u].w * _3050)));
    SV_Target.y = _3088 * (_3069 ? _3078 : (_3078 + (cbSceneParam._m0[72u].w * _3052)));
    SV_Target.z = _3088 * (_3069 ? _3079 : (_3079 + (cbSceneParam._m0[72u].w * _3054)));
    SV_Target.w = cbInstanceData._m0[_2950].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2909) * _2949) * _3074) * _3088;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2912) * _2949) * _3075) * _3088;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2915) * _2949) * _3076) * _3088;
    SV_Target_1.w = cbInstanceData._m0[_2950].w;
}


