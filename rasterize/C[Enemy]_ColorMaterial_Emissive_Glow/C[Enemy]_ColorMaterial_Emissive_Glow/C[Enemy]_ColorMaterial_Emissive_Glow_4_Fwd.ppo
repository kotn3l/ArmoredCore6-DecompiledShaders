#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[29];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0;
layout(set = 0, binding = 14) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1299;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _205 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _206 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _207 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _213 = inversesqrt(dot(vec3(_205, _206, _207), vec3(_205, _206, _207)));
    float _220 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _248 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    float _262 = exp2(log2(_248.w * cbMtdParam._m0[25u].z) * cbMtdParam._m0[22u].x);
    float _263 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _264 = isnan(1.0) ? _263 : (isnan(_263) ? 1.0 : min(_263, 1.0));
    vec4 _278 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _282 = _278.z;
    float _291 = exp2(log2(_282 * cbMtdParam._m0[22u].y) * cbMtdParam._m0[21u].y);
    float _292 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _293 = isnan(1.0) ? _292 : (isnan(_292) ? 1.0 : min(_292, 1.0));
    vec4 _305 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _308 = _305.y;
    float _311 = (_305.x + (-0.02500000037252902984619140625)) * 8.0;
    float _315 = roundEven(5.0 - _311);
    float _316 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _317 = isnan(4.0) ? _316 : (isnan(_316) ? 4.0 : min(_316, 4.0));
    float _330 = floor(_317);
    vec4 _333 = texture(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w, _330));
    float _183[6];
    float _184[6];
    float _185[6];
    _183[0u] = cbMtdParam._m0[17u].x;
    _184[0u] = cbMtdParam._m0[17u].y;
    _185[0u] = cbMtdParam._m0[17u].z;
    _183[1u] = cbMtdParam._m0[15u].x;
    _184[1u] = cbMtdParam._m0[15u].y;
    _185[1u] = cbMtdParam._m0[15u].z;
    _183[2u] = cbMtdParam._m0[14u].x;
    _184[2u] = cbMtdParam._m0[14u].y;
    _185[2u] = cbMtdParam._m0[14u].z;
    _183[3u] = cbMtdParam._m0[13u].x;
    _184[3u] = cbMtdParam._m0[13u].y;
    _185[3u] = cbMtdParam._m0[13u].z;
    _183[4u] = cbMtdParam._m0[12u].x;
    _184[4u] = cbMtdParam._m0[12u].y;
    _185[4u] = cbMtdParam._m0[12u].z;
    _183[5u] = cbMtdParam._m0[18u].x;
    _184[5u] = cbMtdParam._m0[18u].y;
    _185[5u] = cbMtdParam._m0[18u].z;
    float _397 = roundEven(_311);
    float _398 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    uint _400 = uint(int(isnan(5.0) ? _398 : (isnan(_398) ? 5.0 : min(_398, 5.0))));
    vec4 _430 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _441 = cbMtdParam._m0[9u].x * _430.x;
    float _442 = cbMtdParam._m0[9u].y * _430.y;
    float _443 = cbMtdParam._m0[9u].z * _430.z;
    float _450 = ((((((_183[_400] - cbMtdParam._m0[10u].x) * _308) + cbMtdParam._m0[10u].x) * _333.x) - _441) * _293) + _441;
    float _451 = ((((((_184[_400] - cbMtdParam._m0[10u].y) * _308) + cbMtdParam._m0[10u].y) * _333.y) - _442) * _293) + _442;
    float _452 = ((((((_185[_400] - cbMtdParam._m0[10u].z) * _308) + cbMtdParam._m0[10u].z) * _333.z) - _443) * _293) + _443;
    float _458 = exp2(log2(_278.w) * cbMtdParam._m0[22u].w);
    vec4 _471 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _491 = (((cbMtdParam._m0[16u].x * _471.x) - _450) * _458) + _450;
    float _492 = (((cbMtdParam._m0[16u].y * _471.y) - _451) * _458) + _451;
    float _493 = (((cbMtdParam._m0[16u].z * _471.z) - _452) * _458) + _452;
    vec4 _506 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _531 = (_248.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _506.x) - _491) * _264) + _491);
    float _533 = (_248.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _506.y) - _492) * _264) + _492);
    float _535 = (_248.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _506.z) - _493) * _264) + _493);
    float _178[5];
    float _179[5];
    _178[0u] = cbMtdParam._m0[25u].w;
    _179[0u] = cbMtdParam._m0[26u].x;
    _178[1u] = cbMtdParam._m0[27u].w;
    _179[1u] = cbMtdParam._m0[28u].x;
    _178[2u] = cbMtdParam._m0[27u].y;
    _179[2u] = cbMtdParam._m0[27u].z;
    _178[3u] = cbMtdParam._m0[26u].w;
    _179[3u] = cbMtdParam._m0[27u].x;
    _178[4u] = cbMtdParam._m0[26u].y;
    _179[4u] = cbMtdParam._m0[26u].z;
    float _573 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    uint _575 = uint(int(isnan(4.0) ? _573 : (isnan(_573) ? 4.0 : min(_573, 4.0))));
    float _582 = ((_179[_575] - cbMtdParam._m0[21u].z) * _293) + cbMtdParam._m0[21u].z;
    float _585 = ((cbMtdParam._m0[21u].w - _582) * _458) + _582;
    float _588 = ((cbMtdParam._m0[24u].y - _585) * _264) + _585;
    vec4 _603 = texture(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w, _330));
    vec4 _620 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _622 = _620.x;
    float _623 = _620.y;
    float _628 = cbMtdParam._m0[21u].x + _620.z;
    float _631 = (((_603.z + _178[_575]) - _628) * _293) + _628;
    vec4 _644 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _655 = (((_644.z - _631) + cbMtdParam._m0[25u].y) * _458) + _631;
    float _661 = ((((_282 * 2.0) * _655) - _655) * cbMtdParam._m0[23u].w) + _655;
    vec4 _673 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _684 = (((cbMtdParam._m0[22u].z + _673.z) - _661) * _264) + _661;
    vec4 _703 = texture(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _720 = ((_603.x - _622) * _293) + _622;
    float _721 = ((_603.y - _623) * _293) + _623;
    float _726 = ((_644.x - _720) * _458) + _720;
    float _727 = ((_644.y - _721) * _458) + _721;
    float _736 = ((((_673.x - _726) * _264) + _726) * 2.0) + (-1.0);
    float _737 = ((((_673.y - _727) * _264) + _727) * 2.0) + (-1.0);
    float _738 = dot(vec2(_736, _737), vec2(_736, _737));
    float _3719 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _743 = sqrt(1.0 - (isnan(1.0) ? _3719 : (isnan(_3719) ? 1.0 : min(_3719, 1.0))));
    float _746 = (cbMtdParam._m0[24u].z * ((_278.x * 2.0) + (-1.0))) + _736;
    float _747 = (cbMtdParam._m0[24u].z * ((_278.y * 2.0) + (-1.0))) + _737;
    float _750 = fma(_743, _220 * NORMAL.x, fma(_747, _227 * TANGENT.x, (_213 * _205) * _746));
    float _753 = fma(_743, _220 * NORMAL.y, fma(_747, _227 * TANGENT.y, (_213 * _206) * _746));
    float _756 = fma(_743, _220 * NORMAL.z, fma(_747, _227 * TANGENT.z, (_213 * _207) * _746));
    float _760 = inversesqrt(dot(vec3(_750, _753, _756), vec3(_750, _753, _756)));
    float _761 = _760 * _750;
    float _762 = _760 * _753;
    float _763 = _760 * _756;
    float _3730 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _764 = isnan(1.0) ? _3730 : (isnan(_3730) ? 1.0 : min(_3730, 1.0));
    float _3741 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _3752 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _3763 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _3774 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _768 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
    float _784 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _824 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _834 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _824);
    float _835 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _824);
    float _836 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _824);
    float _840 = inversesqrt(dot(vec3(_834, _835, _836), vec3(_834, _835, _836)));
    float _841 = _834 * _840;
    float _842 = _835 * _840;
    float _843 = _836 * _840;
    float _849 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _850 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _868 = fma(_763, cbSceneParam._m0[5u].z, fma(_762, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _761));
    float _871 = fma(_763, cbSceneParam._m0[6u].z, fma(_762, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _761));
    float _874 = fma(_763, cbSceneParam._m0[7u].z, fma(_762, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _761));
    uint _887 = uint(roundEven(NORMAL.w)) * 13u;
    uint _888 = _887 + 9u;
    uint _889 = _888 + uint(cbMatDynParam._m0[0u].w);
    float _895 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0)))) * cbInstanceData._m0[_889].x;
    float _896 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0)))) * cbInstanceData._m0[_889].y;
    float _897 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0)))) * cbInstanceData._m0[_889].z;
    float _3785 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _898 = isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0));
    float _3796 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _899 = isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0));
    float _3807 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _900 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
    float _901 = 1.0 - _768;
    float _902 = _898 * _901;
    float _903 = _899 * _901;
    float _904 = _900 * _901;
    float _909 = (_898 + (-0.039999999105930328369140625)) * _768;
    float _910 = (_899 + (-0.039999999105930328369140625)) * _768;
    float _911 = (_900 + (-0.039999999105930328369140625)) * _768;
    float _912 = _909 + 0.039999999105930328369140625;
    float _914 = _910 + 0.039999999105930328369140625;
    float _915 = _911 + 0.039999999105930328369140625;
    vec4 _924 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _849, cbSceneParam._m0[86u].y * _850));
    float _927 = _924.x * TEXCOORD_3.w;
    float _928 = dot(vec3(_761, _762, _763), vec3(_841, _842, _843));
    float _931 = _928 * 2.0;
    float _935 = (_931 * _761) - _841;
    float _936 = (_931 * _762) - _842;
    float _937 = (_931 * _763) - _843;
    float _941 = abs(dot(vec3(_841, _842, _843), vec3(_761, _762, _763)));
    float _3818 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    float _943 = sqrt(_764);
    float _954 = exp2((_943 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3818 : (isnan(_3818) ? 1.0 : min(_3818, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_943 * 3.0));
    float _960 = (1.0 - _954) * ((_943 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _961 = _954 * _943;
    float _989 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _993 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _997 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1298;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1023 = fma(_997, cbModelParam._m0[26u].z, fma(_993, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _989));
        float _1027 = fma(_997, cbModelParam._m0[27u].z, fma(_993, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _989));
        float _1031 = fma(_997, cbModelParam._m0[28u].z, fma(_993, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _989));
        float _1056 = _989 + _761;
        float _1057 = _993 + _762;
        float _1058 = _997 + _763;
        float _1068 = fma(_1058, cbModelParam._m0[26u].z, fma(_1057, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1056)) - _1023;
        float _1069 = fma(_1058, cbModelParam._m0[27u].z, fma(_1057, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1056)) - _1027;
        float _1070 = fma(_1058, cbModelParam._m0[28u].z, fma(_1057, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1056)) - _1031;
        float _1074 = inversesqrt(dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070)));
        float _1087 = ((_1074 * _1068) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1023 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1088 = ((_1074 * _1069) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1027 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1089 = ((_1074 * _1070) / cbModelParam._m0[34u].z) + ((((((_1031 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1092 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        float _1126 = exp2((_1092.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1092.x + (-0.5));
        float _1128 = _1126 * (_1092.y + (-0.5));
        float _1129 = _1126 * (_1092.z + (-0.5));
        float _1136 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1099.x + (-0.5));
        float _1138 = _1136 * (_1099.y + (-0.5));
        float _1139 = _1136 * (_1099.z + (-0.5));
        float _1146 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1147 = _1146 * (_1106.x + (-0.5));
        float _1148 = _1146 * (_1106.y + (-0.5));
        float _1149 = _1146 * (_1106.z + (-0.5));
        float _1156 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1157 = _1156 * (_1113.x + (-0.5));
        float _1158 = _1156 * (_1113.y + (-0.5));
        float _1159 = _1156 * (_1113.z + (-0.5));
        float _1160 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1161 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1162 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1163 = _1127 * 0.5;
        float _1164 = _1137 * 0.5;
        float _1165 = _1147 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1180 = (dot(vec3(_761, _762, _763), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _3844 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1190 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1160 + 9.9999997473787516355514526367188e-06);
        float _3855 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0));
        float _1192 = _1191 * 2.0;
        float _1196 = (1.0 - _1191) / (_1191 + 1.0);
        float _3866 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
        float _1206 = ((((1.0 - _1197) * (_1192 + 2.0)) * exp2(log2(isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0))) * (_1192 + 1.0))) + _1197) * _1160;
        float _1207 = _1128 * 0.5;
        float _1208 = _1138 * 0.5;
        float _1209 = _1148 * 0.5;
        float _1210 = dot(vec3(_1207, _1208, _1209), vec3(_1207, _1208, _1209));
        float _1215 = (_1210 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1210);
        float _1223 = (dot(vec3(_761, _762, _763), vec3(_1215 * _1207, _1215 * _1208, _1215 * _1209)) + 1.0) * 0.5;
        float _3877 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1232 = sqrt(((_1208 * _1208) + (_1207 * _1207)) + (_1209 * _1209)) / (_1161 + 9.9999997473787516355514526367188e-06);
        float _3888 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
        float _1234 = _1233 * 2.0;
        float _1238 = (1.0 - _1233) / (_1233 + 1.0);
        float _3899 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0));
        float _1248 = ((((1.0 - _1239) * (_1234 + 2.0)) * exp2(log2(isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0))) * (_1234 + 1.0))) + _1239) * _1161;
        float _1249 = _1129 * 0.5;
        float _1250 = _1139 * 0.5;
        float _1251 = _1149 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1265 = (dot(vec3(_761, _762, _763), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _3910 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1274 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1162 + 9.9999997473787516355514526367188e-06);
        float _3921 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
        float _1276 = _1275 * 2.0;
        float _1280 = (1.0 - _1275) / (_1275 + 1.0);
        float _3932 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
        float _1290 = ((((1.0 - _1281) * (_1276 + 2.0)) * exp2(log2(isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0))) * (_1276 + 1.0))) + _1281) * _1162;
        _1298 = _1129;
        _1300 = _1128;
        _1301 = _1127;
        _1302 = _1139;
        _1303 = _1138;
        _1304 = _1137;
        _1305 = _1149;
        _1306 = _1148;
        _1307 = _1147;
        _1308 = _1162;
        _1309 = _1161;
        _1310 = _1160;
        _1311 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)));
        _1312 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0)));
        _1313 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)));
    }
    else
    {
        _1298 = _1299;
        _1300 = _1299;
        _1301 = _1299;
        _1302 = _1299;
        _1303 = _1299;
        _1304 = _1299;
        _1305 = _1299;
        _1306 = _1299;
        _1307 = _1299;
        _1308 = _1299;
        _1309 = _1299;
        _1310 = _1299;
        _1311 = 0.0;
        _1312 = 0.0;
        _1313 = 0.0;
    }
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1339 = fma(_997, cbModelParam._m0[30u].z, fma(_993, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _989));
        float _1343 = fma(_997, cbModelParam._m0[31u].z, fma(_993, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _989));
        float _1347 = fma(_997, cbModelParam._m0[32u].z, fma(_993, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _989));
        float _1370 = _989 + _761;
        float _1371 = _993 + _762;
        float _1372 = _997 + _763;
        float _1382 = fma(_1372, cbModelParam._m0[30u].z, fma(_1371, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1370)) - _1339;
        float _1383 = fma(_1372, cbModelParam._m0[31u].z, fma(_1371, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1370)) - _1343;
        float _1384 = fma(_1372, cbModelParam._m0[32u].z, fma(_1371, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1370)) - _1347;
        float _1388 = inversesqrt(dot(vec3(_1382, _1383, _1384), vec3(_1382, _1383, _1384)));
        float _1401 = ((_1388 * _1382) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1339 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1402 = ((_1388 * _1383) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1343 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1403 = ((_1388 * _1384) / cbModelParam._m0[35u].z) + ((((((_1347 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1405 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1401, _1402, _1403), 0.0);
        vec4 _1412 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1401, _1402, _1403), 0.0);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1401, _1402, _1403), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1401, _1402, _1403), 0.0);
        float _1438 = exp2((_1405.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1405.x + (-0.5));
        float _1440 = _1438 * (_1405.y + (-0.5));
        float _1441 = _1438 * (_1405.z + (-0.5));
        float _1448 = exp2((_1412.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1412.x + (-0.5));
        float _1450 = _1448 * (_1412.y + (-0.5));
        float _1451 = _1448 * (_1412.z + (-0.5));
        float _1458 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1459 = _1458 * (_1419.x + (-0.5));
        float _1460 = _1458 * (_1419.y + (-0.5));
        float _1461 = _1458 * (_1419.z + (-0.5));
        float _1468 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1469 = _1468 * (_1426.x + (-0.5));
        float _1470 = _1468 * (_1426.y + (-0.5));
        float _1471 = _1468 * (_1426.z + (-0.5));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1474 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1475 = _1439 * 0.5;
        float _1476 = _1449 * 0.5;
        float _1477 = _1459 * 0.5;
        float _1478 = dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477));
        float _1483 = (_1478 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1478);
        float _1491 = (dot(vec3(_761, _762, _763), vec3(_1483 * _1475, _1483 * _1476, _1483 * _1477)) + 1.0) * 0.5;
        float _3973 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1500 = sqrt(((_1476 * _1476) + (_1475 * _1475)) + (_1477 * _1477)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _3984 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _3995 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0))) * (_1502 + 1.0))) + _1507) * _1472;
        float _1517 = _1440 * 0.5;
        float _1518 = _1450 * 0.5;
        float _1519 = _1460 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_761, _762, _763), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4006 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1473 + 9.9999997473787516355514526367188e-06);
        float _4017 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4028 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * (_1544 + 1.0))) + _1549) * _1473;
        float _1559 = _1441 * 0.5;
        float _1560 = _1451 * 0.5;
        float _1561 = _1461 * 0.5;
        float _1562 = dot(vec3(_1559, _1560, _1561), vec3(_1559, _1560, _1561));
        float _1567 = (_1562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1562);
        float _1575 = (dot(vec3(_761, _762, _763), vec3(_1567 * _1559, _1567 * _1560, _1567 * _1561)) + 1.0) * 0.5;
        float _4039 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1584 = sqrt(((_1560 * _1560) + (_1559 * _1559)) + (_1561 * _1561)) / (_1474 + 9.9999997473787516355514526367188e-06);
        float _4050 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
        float _1586 = _1585 * 2.0;
        float _1590 = (1.0 - _1585) / (_1585 + 1.0);
        float _4061 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1591 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
        float _1600 = ((((1.0 - _1591) * (_1586 + 2.0)) * exp2(log2(isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) * (_1586 + 1.0))) + _1591) * _1474;
        _1608 = _1441;
        _1609 = _1440;
        _1610 = _1439;
        _1611 = _1451;
        _1612 = _1450;
        _1613 = _1449;
        _1614 = _1461;
        _1615 = _1460;
        _1616 = _1459;
        _1617 = _1474;
        _1618 = _1473;
        _1619 = _1472;
        _1620 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1621 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
        _1622 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0)));
    }
    else
    {
        _1608 = _1299;
        _1609 = _1299;
        _1610 = _1299;
        _1611 = _1299;
        _1612 = _1299;
        _1613 = _1299;
        _1614 = _1299;
        _1615 = _1299;
        _1616 = _1299;
        _1617 = _1299;
        _1618 = _1299;
        _1619 = _1299;
        _1620 = 0.0;
        _1621 = 0.0;
        _1622 = 0.0;
    }
    float _1632 = (cbModelParam._m0[1u].x * (_1620 - _1311)) + _1311;
    float _1633 = (cbModelParam._m0[1u].x * (_1621 - _1312)) + _1312;
    float _1634 = (cbModelParam._m0[1u].x * (_1622 - _1313)) + _1313;
    float _1655 = fma(_1634, cbSceneParam._m0[89u].z, fma(_1633, cbSceneParam._m0[89u].y, _1632 * cbSceneParam._m0[89u].x));
    float _1658 = fma(_1634, cbSceneParam._m0[90u].z, fma(_1633, cbSceneParam._m0[90u].y, _1632 * cbSceneParam._m0[90u].x));
    float _1661 = fma(_1634, cbSceneParam._m0[91u].z, fma(_1633, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1632));
    float _1676 = _935 * 0.5;
    float _1677 = _936 * 0.5;
    float _1678 = _937 * 0.5;
    float _1679 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1610, _1613, _1616, _1619));
    float _1682 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1609, _1612, _1615, _1618));
    float _1685 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1608, _1611, _1614, _1617));
    float _1719;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1692 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1298, _1302, _1305, _1308));
        float _1696 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1300, _1303, _1306, _1309));
        float _1700 = dot(vec4(_1676, _1677, _1678, 1.0), vec4(_1301, _1304, _1307, _1310));
        float _1707 = dot(vec4(cbModelParam._m0[39u]), vec4(_1676, _1677, _1678, 1.0));
        _1719 = dot(vec3(isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0)), isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)), isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1707) ? 0.0 : (isnan(0.0) ? _1707 : max(0.0, _1707))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1719 = 1.0;
    }
    float _1730;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1721 = dot(vec4(cbModelParam._m0[40u]), vec4(_1676, _1677, _1678, 1.0));
        _1730 = dot(vec3(isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0)), isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0)), isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1721) ? 0.0 : (isnan(0.0) ? _1721 : max(0.0, _1721))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1730 = 1.0;
    }
    float _1734 = (_1730 * cbModelParam._m0[1u].x) + (_1719 * (1.0 - cbModelParam._m0[1u].x));
    float _1744 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _764);
    float _1745 = isnan(_1744) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1744 : min(cbModelParam._m0[25u].z, _1744));
    float _1825;
    float _1827;
    float _1829;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1792 = fma(_997, cbModelParam._m0[13u].z, fma(_993, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _989)) + cbModelParam._m0[13u].w;
        float _1796 = fma(_997, cbModelParam._m0[14u].z, fma(_993, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _989)) + cbModelParam._m0[14u].w;
        float _1800 = fma(_997, cbModelParam._m0[15u].z, fma(_993, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _989)) + cbModelParam._m0[15u].w;
        float _1803 = fma(_937, cbModelParam._m0[13u].z, fma(_936, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _935));
        float _1806 = fma(_937, cbModelParam._m0[14u].z, fma(_936, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _935));
        float _1809 = fma(_937, cbModelParam._m0[15u].z, fma(_936, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _935));
        float _1837;
        if (_1803 > 0.0)
        {
            _1837 = abs((1.0 - _1792) / _1803);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1803 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1792 + 1.0) / _1803);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1837 = frontier_phi_14_12_ladder;
        }
        float _2039;
        if (_1806 > 0.0)
        {
            _2039 = abs((1.0 - _1796) / _1806);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1806 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1796 + 1.0) / _1806);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2039 = frontier_phi_23_19_ladder;
        }
        float _2293;
        if (_1809 > 0.0)
        {
            _2293 = abs((1.0 - _1800) / _1809);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1800 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2293 = frontier_phi_35_30_ladder;
        }
        float _2295 = isnan(_2039) ? _1837 : (isnan(_1837) ? _2039 : min(_1837, _2039));
        float _2296 = isnan(_2293) ? _2295 : (isnan(_2295) ? _2293 : min(_2295, _2293));
        float _2300 = (_2296 * _1803) + _1792;
        float _2301 = (_2296 * _1806) + _1796;
        float _2302 = (_2296 * _1809) + _1800;
        float _2303 = _2296 * 9.9999997473787516355514526367188e-05;
        float _2305 = (-1.0) - _2303;
        float _2307 = _2303 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2302 > _2307) || ((_2302 < _2305) || ((_2301 > _2307) || ((_2301 < _2305) || ((_2300 < _2305) || (_2300 > _2307))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2430 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2302, cbModelParam._m0[9u].z, fma(_2301, cbModelParam._m0[9u].y, _2300 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2302, cbModelParam._m0[10u].z, fma(_2301, cbModelParam._m0[10u].y, _2300 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2302, cbModelParam._m0[11u].z, fma(_2301, cbModelParam._m0[11u].y, _2300 * cbModelParam._m0[11u].x))), _1745);
            frontier_phi_13_35_ladder = _2430.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2430.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2430.x * cbModelParam._m0[1u].y;
        }
        _1825 = frontier_phi_13_35_ladder_2;
        _1827 = frontier_phi_13_35_ladder_1;
        _1829 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1813 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_935, _936, _937), _1745);
        _1825 = _1813.x * cbModelParam._m0[1u].y;
        _1827 = _1813.y * cbModelParam._m0[1u].y;
        _1829 = _1813.z * cbModelParam._m0[1u].y;
    }
    float _1833 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _764);
    float _1834 = isnan(_1833) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1833 : min(cbModelParam._m0[25u].w, _1833));
    float _1923;
    float _1925;
    float _1927;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1887 = fma(_997, cbModelParam._m0[21u].z, fma(_993, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _989)) + cbModelParam._m0[21u].w;
        float _1891 = fma(_997, cbModelParam._m0[22u].z, fma(_993, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _989)) + cbModelParam._m0[22u].w;
        float _1895 = fma(_997, cbModelParam._m0[23u].z, fma(_993, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _989)) + cbModelParam._m0[23u].w;
        float _1898 = fma(_937, cbModelParam._m0[21u].z, fma(_936, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _935));
        float _1901 = fma(_937, cbModelParam._m0[22u].z, fma(_936, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _935));
        float _1904 = fma(_937, cbModelParam._m0[23u].z, fma(_936, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _935));
        float _2044;
        if (_1898 > 0.0)
        {
            _2044 = abs((1.0 - _1887) / _1898);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1887 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2044 = frontier_phi_25_21_ladder;
        }
        float _2320;
        if (_1901 > 0.0)
        {
            _2320 = abs((1.0 - _1891) / _1901);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1901 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1891 + 1.0) / _1901);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2320 = frontier_phi_37_32_ladder;
        }
        float _2533;
        if (_1904 > 0.0)
        {
            _2533 = abs((1.0 - _1895) / _1904);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1904 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1895 + 1.0) / _1904);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2533 = frontier_phi_46_43_ladder;
        }
        float _2535 = isnan(_2320) ? _2044 : (isnan(_2044) ? _2320 : min(_2044, _2320));
        float _2536 = isnan(_2533) ? _2535 : (isnan(_2535) ? _2533 : min(_2535, _2533));
        float _2540 = (_2536 * _1898) + _1887;
        float _2541 = (_2536 * _1901) + _1891;
        float _2542 = (_2536 * _1904) + _1895;
        float _2543 = _2536 * 9.9999997473787516355514526367188e-05;
        float _2544 = (-1.0) - _2543;
        float _2546 = _2543 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2542 > _2546) || ((_2542 < _2544) || ((_2541 > _2546) || ((_2541 < _2544) || ((_2540 < _2544) || (_2540 > _2546))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2776 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2542, cbModelParam._m0[17u].z, fma(_2541, cbModelParam._m0[17u].y, _2540 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2542, cbModelParam._m0[18u].z, fma(_2541, cbModelParam._m0[18u].y, _2540 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2542, cbModelParam._m0[19u].z, fma(_2541, cbModelParam._m0[19u].y, _2540 * cbModelParam._m0[19u].x))), _1834);
            frontier_phi_22_46_ladder = _2776.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2776.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2776.x * cbModelParam._m0[1u].z;
        }
        _1923 = frontier_phi_22_46_ladder_2;
        _1925 = frontier_phi_22_46_ladder_1;
        _1927 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1907 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_935, _936, _937), _1834);
        _1923 = _1907.x * cbModelParam._m0[1u].z;
        _1925 = _1907.y * cbModelParam._m0[1u].z;
        _1927 = _1907.z * cbModelParam._m0[1u].z;
    }
    float _1940 = (((_960 * _912) + _961) * _927) * ((cbModelParam._m0[1u].w * (_1923 - _1825)) + _1825);
    float _1942 = (((_960 * _914) + _961) * _927) * ((cbModelParam._m0[1u].w * (_1925 - _1827)) + _1827);
    float _1944 = (((_960 * _915) + _961) * _927) * ((cbModelParam._m0[1u].w * (_1927 - _1829)) + _1829);
    float _1947 = fma(_1944, cbSceneParam._m0[89u].z, fma(_1942, cbSceneParam._m0[89u].y, _1940 * cbSceneParam._m0[89u].x));
    float _1950 = fma(_1944, cbSceneParam._m0[90u].z, fma(_1942, cbSceneParam._m0[90u].y, _1940 * cbSceneParam._m0[90u].x));
    float _1953 = fma(_1944, cbSceneParam._m0[91u].z, fma(_1942, cbSceneParam._m0[91u].y, _1940 * cbSceneParam._m0[91u].x));
    uvec4 _1963 = floatBitsToUint(cbInstanceData._m0[_887 + 5u]);
    uint _1965 = _1963.x * 14u;
    uint _1966 = _1965 + 13u;
    float _1973 = _927 + (-1.0);
    float _1978 = (cbLight._m0[_1966].x * _1973) + 1.0;
    float _1979 = (cbLight._m0[_1966].y * _1973) + 1.0;
    float _1980 = (cbLight._m0[_1966].z * _1973) + 1.0;
    float _1981 = (cbLight._m0[_1966].w * _1973) + 1.0;
    uint _1982 = _1965 + 5u;
    float _1988 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    uint _1992 = _1965 + 4u;
    float _1998 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    uint _2002 = _1965 | 1u;
    float _2013 = dot(vec3(cbLight._m0[_1965].xyz), vec3(_761, _762, _763));
    float _2016 = dot(vec3(cbLight._m0[_2002].xyz), vec3(_761, _762, _763));
    float _4197 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
    float _4208 = isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0));
    float _2021 = (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0))) * 0.3183098733425140380859375;
    float _2023 = (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0))) * 0.3183098733425140380859375;
    float _2030 = ((cbLight._m0[_1982].x * _1988) * _2023) + ((cbLight._m0[_1992].x * _1998) * _2021);
    float _2031 = ((_1988 * cbLight._m0[_1982].y) * _2023) + ((_1998 * cbLight._m0[_1992].y) * _2021);
    float _2032 = ((_1988 * cbLight._m0[_1982].z) * _2023) + ((_1998 * cbLight._m0[_1992].z) * _2021);
    uvec4 _2036 = floatBitsToUint(cbLight._m0[_1965 + 12u]);
    bool _2038 = _2036.x == 0u;
    float _2049;
    float _2051;
    float _2053;
    if (_2038)
    {
        _2049 = _2030;
        _2051 = _2031;
        _2053 = _2032;
    }
    else
    {
        uint _2057 = _1965 + 6u;
        float _2073 = (dot(vec3(cbLight._m0[_1965 + 2u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2074 = _2073 * _2073;
        float _4219 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
        float _2075 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _2076 = isnan(1.0) ? _1980 : (isnan(_1980) ? 1.0 : min(_1980, 1.0));
        _2049 = (((cbLight._m0[_2057].x * 0.3183098733425140380859375) * _2075) * _2076) + _2030;
        _2051 = (((cbLight._m0[_2057].y * 0.3183098733425140380859375) * _2075) * _2076) + _2031;
        _2053 = (((cbLight._m0[_2057].z * 0.3183098733425140380859375) * _2075) * _2076) + _2032;
    }
    bool _2056 = _2036.y == 0u;
    float _2094;
    float _2096;
    float _2098;
    if (_2056)
    {
        _2094 = _2049;
        _2096 = _2051;
        _2098 = _2053;
    }
    else
    {
        uint _2264 = _1965 + 7u;
        float _2280 = (dot(vec3(cbLight._m0[_1965 + 3u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2281 = _2280 * _2280;
        float _4235 = isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0));
        float _2282 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _2283 = isnan(1.0) ? _1981 : (isnan(_1981) ? 1.0 : min(_1981, 1.0));
        _2094 = (((cbLight._m0[_2264].x * 0.3183098733425140380859375) * _2282) * _2283) + _2049;
        _2096 = (((cbLight._m0[_2264].y * 0.3183098733425140380859375) * _2282) * _2283) + _2051;
        _2098 = (((cbLight._m0[_2264].z * 0.3183098733425140380859375) * _2282) * _2283) + _2053;
    }
    uint _2101 = _1965 + 8u;
    float _2114 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1965].w)) * _764) * 0.949999988079071044921875);
    float _2115 = _2114 * _2114;
    float _2116 = cbLight._m0[_1965].x + _841;
    float _2117 = cbLight._m0[_1965].y + _842;
    float _2118 = cbLight._m0[_1965].z + _843;
    float _2122 = inversesqrt(dot(vec3(_2116, _2117, _2118), vec3(_2116, _2117, _2118)));
    float _2123 = _2122 * _2116;
    float _2124 = _2122 * _2117;
    float _2125 = _2122 * _2118;
    float _2126 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_1965].xyz));
    float _4251 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
    float _2129 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _4262 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _2130 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    float _2131 = dot(vec3(_761, _762, _763), vec3(_2123, _2124, _2125));
    float _4273 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
    float _2134 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
    float _2135 = dot(vec3(cbLight._m0[_1965].xyz), vec3(_2123, _2124, _2125));
    float _4284 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
    float _2139 = _2115 * _2115;
    float _2143 = ((_2134 * _2134) * (_2139 + (-1.0))) + 1.0;
    float _2151 = exp2(log2(1.0 - (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) * 5.0);
    float _2152 = 0.959999978542327880859375 - _909;
    float _2154 = 0.959999978542327880859375 - _910;
    float _2155 = 0.959999978542327880859375 - _911;
    float _2162 = 1.0 - _2115;
    float _2173 = (0.5 / (((_2130 * ((_2129 * _2162) + _2115)) + 9.9999999392252902907785028219223e-09) + (((_2130 * _2162) + _2115) * _2129))) * _2129;
    float _4295 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
    float _2175 = (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * (_2139 / ((_2143 * _2143) * 3.141590118408203125));
    uint _2186 = _1965 + 9u;
    float _2197 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2002].w)) * _764) * 0.949999988079071044921875);
    float _2198 = _2197 * _2197;
    float _2199 = cbLight._m0[_2002].x + _841;
    float _2200 = cbLight._m0[_2002].y + _842;
    float _2201 = cbLight._m0[_2002].z + _843;
    float _2205 = inversesqrt(dot(vec3(_2199, _2200, _2201), vec3(_2199, _2200, _2201)));
    float _2206 = _2205 * _2199;
    float _2207 = _2205 * _2200;
    float _2208 = _2205 * _2201;
    float _2209 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2002].xyz));
    float _4306 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2212 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
    float _2213 = dot(vec3(_761, _762, _763), vec3(_2206, _2207, _2208));
    float _4317 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
    float _2216 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _2217 = dot(vec3(cbLight._m0[_2002].xyz), vec3(_2206, _2207, _2208));
    float _4328 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
    float _2221 = _2198 * _2198;
    float _2225 = ((_2216 * _2216) * (_2221 + (-1.0))) + 1.0;
    float _2232 = exp2(log2(1.0 - (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0)))) * 5.0);
    float _2239 = 1.0 - _2198;
    float _2249 = (0.5 / (((_2130 * ((_2212 * _2239) + _2198)) + 9.9999999392252902907785028219223e-09) + (((_2130 * _2239) + _2198) * _2212))) * _2212;
    float _4339 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
    float _2251 = (isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0))) * (_2221 / ((_2225 * _2225) * 3.141590118408203125));
    float _2261 = (((((_2232 * _2152) + _912) * cbLight._m0[_2186].x) * _2251) * _1988) + (((((_2151 * _2152) + _912) * cbLight._m0[_2101].x) * _2175) * _1998);
    float _2262 = (((((_2232 * _2154) + _914) * cbLight._m0[_2186].y) * _2251) * _1988) + (((((_2151 * _2154) + _914) * cbLight._m0[_2101].y) * _2175) * _1998);
    float _2263 = (((((_2232 * _2155) + _915) * cbLight._m0[_2186].z) * _2251) * _1988) + (((((_2151 * _2155) + _915) * cbLight._m0[_2101].z) * _2175) * _1998);
    float _2325;
    float _2327;
    float _2329;
    if (_2038)
    {
        _2325 = _2261;
        _2327 = _2262;
        _2329 = _2263;
    }
    else
    {
        uint _2331 = _1965 + 2u;
        uint _2335 = _1965 + 10u;
        float _2349 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2331].w)) * _764) * 0.949999988079071044921875);
        float _2350 = _2349 * _2349;
        float _2351 = cbLight._m0[_2331].x + _841;
        float _2352 = cbLight._m0[_2331].y + _842;
        float _2353 = cbLight._m0[_2331].z + _843;
        float _2357 = inversesqrt(dot(vec3(_2351, _2352, _2353), vec3(_2351, _2352, _2353)));
        float _2358 = _2357 * _2351;
        float _2359 = _2357 * _2352;
        float _2360 = _2357 * _2353;
        float _2361 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2331].xyz));
        float _4350 = isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0));
        float _2364 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _2365 = dot(vec3(_761, _762, _763), vec3(_2358, _2359, _2360));
        float _4361 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
        float _2368 = isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0));
        float _2369 = dot(vec3(cbLight._m0[_2331].xyz), vec3(_2358, _2359, _2360));
        float _4372 = isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0));
        float _2373 = _2350 * _2350;
        float _2377 = ((_2368 * _2368) * (_2373 + (-1.0))) + 1.0;
        float _2384 = exp2(log2(1.0 - (isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0)))) * 5.0);
        float _2391 = 1.0 - _2350;
        float _2401 = (0.5 / (((_2130 * ((_2364 * _2391) + _2350)) + 9.9999999392252902907785028219223e-09) + (((_2130 * _2391) + _2350) * _2364))) * _2364;
        float _4383 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
        float _2403 = (isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0))) * (_2373 / ((_2377 * _2377) * 3.141590118408203125));
        float _2404 = isnan(1.0) ? _1980 : (isnan(_1980) ? 1.0 : min(_1980, 1.0));
        _2325 = (((((_2384 * _2152) + _912) * cbLight._m0[_2335].x) * _2403) * _2404) + _2261;
        _2327 = (((((_2384 * _2154) + _914) * cbLight._m0[_2335].y) * _2403) * _2404) + _2262;
        _2329 = (((((_2384 * _2155) + _915) * cbLight._m0[_2335].z) * _2403) * _2404) + _2263;
    }
    float _2439;
    float _2441;
    float _2443;
    if (_2056)
    {
        _2439 = _2325;
        _2441 = _2327;
        _2443 = _2329;
    }
    else
    {
        uint _2450 = _1965 + 3u;
        uint _2454 = _1965 + 11u;
        float _2468 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2450].w)) * _764) * 0.949999988079071044921875);
        float _2469 = _2468 * _2468;
        float _2470 = cbLight._m0[_2450].x + _841;
        float _2471 = cbLight._m0[_2450].y + _842;
        float _2472 = cbLight._m0[_2450].z + _843;
        float _2476 = inversesqrt(dot(vec3(_2470, _2471, _2472), vec3(_2470, _2471, _2472)));
        float _2477 = _2476 * _2470;
        float _2478 = _2476 * _2471;
        float _2479 = _2476 * _2472;
        float _2480 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2450].xyz));
        float _4399 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
        float _2483 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
        float _2484 = dot(vec3(_761, _762, _763), vec3(_2477, _2478, _2479));
        float _4410 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
        float _2487 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _2488 = dot(vec3(cbLight._m0[_2450].xyz), vec3(_2477, _2478, _2479));
        float _4421 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
        float _2492 = _2469 * _2469;
        float _2496 = ((_2487 * _2487) * (_2492 + (-1.0))) + 1.0;
        float _2503 = exp2(log2(1.0 - (isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0)))) * 5.0);
        float _2510 = 1.0 - _2469;
        float _2520 = (0.5 / (((_2130 * ((_2483 * _2510) + _2469)) + 9.9999999392252902907785028219223e-09) + (((_2130 * _2510) + _2469) * _2483))) * _2483;
        float _4432 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
        float _2522 = (isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_2492 / ((_2496 * _2496) * 3.141590118408203125));
        float _2523 = isnan(1.0) ? _1981 : (isnan(_1981) ? 1.0 : min(_1981, 1.0));
        _2439 = (((((_2503 * _2152) + _912) * cbLight._m0[_2454].x) * _2522) * _2523) + _2325;
        _2441 = (((((_2503 * _2154) + _914) * cbLight._m0[_2454].y) * _2522) * _2523) + _2327;
        _2443 = (((((_2503 * _2155) + _915) * cbLight._m0[_2454].z) * _2522) * _2523) + _2329;
    }
    float _2658;
    float _2660;
    float _2662;
    float _2664;
    float _2666;
    float _2668;
    if (_1963.y == 0u)
    {
        float _2598 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2599 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2598;
        float _2600 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2598;
        float _2601 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2598;
        uvec4 _2613 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2614 = _2613.x;
        uint _2625 = uint((float(_2613.y) * floor(float(uint(cbSceneParam._m0[85u].y * _850) / _2614))) + floor(float(uint(cbSceneParam._m0[85u].x * _849) / _2614)));
        float _2635 = (log2(_2601 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2636 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        uint _2639 = uint(isnan(14.0) ? _2636 : (isnan(_2636) ? 14.0 : min(_2636, 14.0)));
        uvec4 _2644 = texelFetch(g_lightClusterGridBuffer, int(((_2639 << 2u) + (_2625 << 6u)) >> 2u));
        uint _2645 = _2644.x;
        uint _2646 = _2613.z;
        float _2781;
        float _2783;
        float _2785;
        float _2787;
        float _2789;
        float _2791;
        if (((((1u << ((_2646 >> 4u) & 15u)) + 4294967295u) & _2645) == 0u) || ((_2646 & 240u) == 0u))
        {
            _2781 = 0.0;
            _2783 = 0.0;
            _2785 = 0.0;
            _2787 = 0.0;
            _2789 = 0.0;
            _2791 = 0.0;
        }
        else
        {
            float _2782;
            float _2784;
            float _2786;
            float _2788;
            float _2790;
            float _2792;
            float _2935 = 0.0;
            float _2936 = 0.0;
            float _2937 = 0.0;
            float _2938 = 0.0;
            float _2939 = 0.0;
            float _2940 = 0.0;
            uint _2941 = 0u;
            uint _2950;
            bool _2951;
            for (;;)
            {
                _2950 = texelFetch(g_lightClassification, int((((_2639 << 5u) + (_2625 << 9u)) + (_2941 << 2u)) >> 2u)).x;
                _2951 = _2950 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2951)
                {
                    frontier_phi_61_pred = _2935;
                    frontier_phi_61_pred_1 = _2940;
                    frontier_phi_61_pred_2 = _2939;
                    frontier_phi_61_pred_3 = _2938;
                    frontier_phi_61_pred_4 = _2937;
                    frontier_phi_61_pred_5 = _2936;
                }
                else
                {
                    float _3059;
                    float _3060;
                    float _3061;
                    float _3062;
                    float _3063;
                    float _3064;
                    uint _3065;
                    _3059 = _2935;
                    _3060 = _2936;
                    _3061 = _2937;
                    _3062 = _2938;
                    _3063 = _2939;
                    _3064 = _2940;
                    _3065 = _2950;
                    float _2991;
                    float _2992;
                    float _2993;
                    float _2994;
                    float _2995;
                    float _2996;
                    for (;;)
                    {
                        uint _3069 = uint(findLSB(_3065)) + (_2941 << 5u);
                        uint _3066 = (_3065 + 4294967295u) & _3065;
                        uint _3071 = _3069 * 48u;
                        vec4 _3085 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3071)).x, texelFetch(g_PointLightRenderingBuffer, int(_3071 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3071 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3071 + 3u)).x));
                        uint _3091 = (_3069 * 48u) + 4u;
                        vec4 _3104 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3091)).x, texelFetch(g_PointLightRenderingBuffer, int(_3091 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3091 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3091 + 3u)).x));
                        uint _3110 = (_3069 * 48u) + 8u;
                        vec3 _3121 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3110)).x, texelFetch(g_PointLightRenderingBuffer, int(_3110 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3110 + 2u)).x));
                        float _3125 = _3085.x - _2599;
                        float _3126 = _3085.y - _2600;
                        float _3127 = _3085.z - _2601;
                        float _3128 = dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127));
                        float _3131 = inversesqrt(_3128);
                        float _3132 = _3131 * _3125;
                        float _3133 = _3131 * _3126;
                        float _3134 = _3131 * _3127;
                        float _3135 = dot(vec3(_868, _871, _874), vec3(_3132, _3133, _3134));
                        float _3140 = 1.0 - (_3128 * _3085.w);
                        float _4458 = isnan(0.0) ? _3140 : (isnan(_3140) ? 0.0 : max(_3140, 0.0));
                        float _3141 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
                        float _3142 = sqrt(_3128) * _3104.w;
                        float _3145 = 1.39999997615814208984375 / (_3142 + 1.39999997615814208984375);
                        float _3146 = _3145 * _3145;
                        float _3149 = ((1.0 - _3146) * _3135) + _3146;
                        float _3152 = _3142 * _3142;
                        float _3156 = ((isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : max(_3149, 0.0))) * _3141) / ((_3152 * 0.699999988079071044921875) + 1.0);
                        float _3160 = (-0.0) - _2599;
                        float _3161 = (-0.0) - _2600;
                        float _3162 = (-0.0) - _2601;
                        float _3166 = inversesqrt(dot(vec3(_3160, _3161, _3162), vec3(_3160, _3161, _3162)));
                        float _3167 = _3166 * _3160;
                        float _3168 = _3166 * _3161;
                        float _3169 = _3166 * _3162;
                        float _3177 = exp2(log2(1.0 / ((_3152 * 3.5) + 5.0)) * 0.25);
                        float _3178 = 1.0 - _943;
                        float _3185 = sqrt(1.0 - ((1.0 - (_3178 * _3178)) * (1.0 - (_3177 * _3177))));
                        float _3186 = _3185 * _3185;
                        float _3187 = _3186 * _3186;
                        float _3188 = _3167 + _3132;
                        float _3189 = _3168 + _3133;
                        float _3190 = _3169 + _3134;
                        float _3194 = inversesqrt(dot(vec3(_3188, _3189, _3190), vec3(_3188, _3189, _3190)));
                        float _3198 = dot(vec3(_868, _871, _874), vec3(_3167, _3168, _3169));
                        float _4474 = isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0));
                        float _3201 = isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0));
                        float _3202 = dot(vec3(_868, _871, _874), vec3(_3194 * _3188, _3194 * _3189, _3194 * _3190));
                        float _4485 = isnan(0.0) ? _3202 : (isnan(_3202) ? 0.0 : max(_3202, 0.0));
                        float _3205 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
                        float _3209 = ((_3205 * _3205) * (_3187 + (-1.0))) + 1.0;
                        float _3210 = _3145 * _3186;
                        float _3211 = _3210 * _3210;
                        float _3214 = ((1.0 - _3211) * _3135) + _3211;
                        float _4496 = isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : max(_3214, 0.0));
                        float _3215 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
                        float _3216 = 1.0 - _3186;
                        float _3226 = (0.5 / (((_3215 * ((_3201 * _3216) + _3186)) + 9.9999999392252902907785028219223e-09) + (((_3215 * _3216) + _3186) * _3201))) * _3215;
                        float _4507 = isnan(0.0) ? _3226 : (isnan(_3226) ? 0.0 : max(_3226, 0.0));
                        float _3237 = (((_3187 * 3.1415927410125732421875) * (isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0)))) / ((_3209 * _3209) * ((_3152 * 2.1991131305694580078125) + 3.141590118408203125))) * _3141;
                        _2994 = (_3156 * _3104.x) + _3062;
                        _2995 = (_3156 * _3104.y) + _3063;
                        _2996 = (_3156 * _3104.z) + _3064;
                        _2991 = (_3237 * _3121.x) + _3059;
                        _2992 = (_3237 * _3121.y) + _3060;
                        _2993 = (_3237 * _3121.z) + _3061;
                        if (_3066 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3059 = _2991;
                            _3060 = _2992;
                            _3061 = _2993;
                            _3062 = _2994;
                            _3063 = _2995;
                            _3064 = _2996;
                            _3065 = _3066;
                        }
                    }
                    frontier_phi_61_pred = _2991;
                    frontier_phi_61_pred_1 = _2996;
                    frontier_phi_61_pred_2 = _2995;
                    frontier_phi_61_pred_3 = _2994;
                    frontier_phi_61_pred_4 = _2993;
                    frontier_phi_61_pred_5 = _2992;
                }
                _2782 = frontier_phi_61_pred;
                _2792 = frontier_phi_61_pred_1;
                _2790 = frontier_phi_61_pred_2;
                _2788 = frontier_phi_61_pred_3;
                _2786 = frontier_phi_61_pred_4;
                _2784 = frontier_phi_61_pred_5;
                uint _2942 = _2941 + 1u;
                if (_2942 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2935 = _2782;
                    _2936 = _2784;
                    _2937 = _2786;
                    _2938 = _2788;
                    _2939 = _2790;
                    _2940 = _2792;
                    _2941 = _2942;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2781 = _2782;
            _2783 = _2784;
            _2785 = _2786;
            _2787 = _2788;
            _2789 = _2790;
            _2791 = _2792;
        }
        uvec4 _2795 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2796 = _2795.z;
        uint _2798 = (_2796 >> 8u) & 15u;
        float _2903;
        float _2905;
        float _2907;
        float _2909;
        float _2911;
        float _2913;
        if (((4294967295u << _2798) & _2645) == 0u)
        {
            _2903 = _2781;
            _2905 = _2783;
            _2907 = _2785;
            _2909 = _2787;
            _2911 = _2789;
            _2913 = _2791;
        }
        else
        {
            float _2928 = inversesqrt(dot(vec3(_2599, _2600, _2601), vec3(_2599, _2600, _2601)));
            float _2929 = _2928 * _2599;
            float _2930 = _2928 * _2600;
            float _2931 = _2928 * _2601;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2798 < ((_2796 >> 12u) & 15u))
            {
                float _2904;
                float _2906;
                float _2908;
                float _2910;
                float _2912;
                float _2914;
                float _3042 = _2781;
                float _3043 = _2783;
                float _3044 = _2785;
                float _3045 = _2787;
                float _3046 = _2789;
                float _3047 = _2791;
                uint _3048 = _2798;
                uint _3057;
                bool _3058;
                for (;;)
                {
                    _3057 = texelFetch(g_lightClassification, int((((_2639 << 5u) + (_2625 << 9u)) + (_3048 << 2u)) >> 2u)).x;
                    _3058 = _3057 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3058)
                    {
                        frontier_phi_67_pred = _3045;
                        frontier_phi_67_pred_1 = _3046;
                        frontier_phi_67_pred_2 = _3047;
                        frontier_phi_67_pred_3 = _3044;
                        frontier_phi_67_pred_4 = _3043;
                        frontier_phi_67_pred_5 = _3042;
                    }
                    else
                    {
                        float _3242;
                        float _3243;
                        float _3244;
                        float _3245;
                        float _3246;
                        float _3247;
                        float _3535;
                        float _3536;
                        float _3537;
                        float _3538;
                        float _3539;
                        float _3540;
                        float _3255 = _3042;
                        float _3256 = _3043;
                        float _3257 = _3044;
                        float _3258 = _3045;
                        float _3259 = _3046;
                        float _3260 = _3047;
                        uint _3261 = _3057;
                        uint _3262;
                        vec4 _3287;
                        float _3288;
                        vec4 _3303;
                        vec3 _3315;
                        vec4 _3330;
                        vec4 _3345;
                        float _3391;
                        bool _3392;
                        for (;;)
                        {
                            uint _3272 = ((_3048 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3261));
                            _3262 = (_3261 + 4294967295u) & _3261;
                            uint _3274 = _3272 * 40u;
                            _3287 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3274)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3274 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3274 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3274 + 3u)).x));
                            _3288 = _3287.w;
                            uint _3290 = (_3272 * 40u) + 4u;
                            _3303 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3290)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 3u)).x));
                            uint _3305 = (_3272 * 40u) + 8u;
                            _3315 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3305)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3305 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3305 + 2u)).x));
                            uint _3317 = (_3272 * 40u) + 16u;
                            _3330 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3317)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 3u)).x));
                            uint _3332 = (_3272 * 40u) + 20u;
                            _3345 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3332)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3332 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3332 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3332 + 3u)).x));
                            uint _3347 = (_3272 * 40u) + 24u;
                            vec4 _3360 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3347)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 3u)).x));
                            uint _3366 = (_3272 * 40u) + 28u;
                            vec4 _3379 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3366 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3366 + 3u)).x));
                            _3391 = fma(_2601, _3379.z, fma(_2600, _3379.y, _3379.x * _2599)) + _3379.w;
                            _3392 = !((fma(_2601, _3360.z, fma(_2600, _3360.y, _3360.x * _2599)) + _3360.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3392)
                            {
                                float _3419 = _3287.x - _2599;
                                float _3420 = _3287.y - _2600;
                                float _3421 = _3287.z - _2601;
                                float _3422 = dot(vec3(_3419, _3420, _3421), vec3(_3419, _3420, _3421));
                                float _3425 = inversesqrt(_3422);
                                float _3426 = _3425 * _3419;
                                float _3427 = _3425 * _3420;
                                float _3428 = _3425 * _3421;
                                float _3432 = 1.0 - (_3422 / (_3288 * _3288));
                                float _4518 = isnan(0.0) ? _3432 : (isnan(_3432) ? 0.0 : max(_3432, 0.0));
                                float _3433 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
                                float _3437 = sqrt(_3422) * _3303.w;
                                float _3439 = 1.39999997615814208984375 / (_3437 + 1.39999997615814208984375);
                                float _3440 = _3439 * _3439;
                                float _3443 = ((1.0 - _3440) * dot(vec3(_3426, _3427, _3428), vec3(_868, _871, _874))) + _3440;
                                float _3446 = _3437 * _3437;
                                float _3450 = (fma(_2601, _3330.z, fma(_2600, _3330.y, _3330.x * _2599)) + _3330.w) / _3391;
                                float _3451 = (fma(_2601, _3345.z, fma(_2600, _3345.y, _3345.x * _2599)) + _3345.w) / _3391;
                                float _3455 = 1.0 - dot(vec2(_3450, _3451), vec2(_3450, _3451));
                                float _4534 = isnan(0.0) ? _3455 : (isnan(_3455) ? 0.0 : max(_3455, 0.0));
                                float _3456 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
                                float _3457 = _3456 * (((isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : max(_3443, 0.0))) * _3433) / ((_3446 * 0.699999988079071044921875) + 1.0));
                                float _3469 = exp2(log2(1.0 / ((_3446 * 3.5) + 5.0)) * 0.25);
                                float _3470 = 1.0 - _943;
                                float _3477 = sqrt(1.0 - ((1.0 - (_3470 * _3470)) * (1.0 - (_3469 * _3469))));
                                float _3478 = _3477 * _3477;
                                float _3479 = _3478 * _3478;
                                float _3480 = _3426 - _2929;
                                float _3481 = _3427 - _2930;
                                float _3482 = _3428 - _2931;
                                float _3486 = inversesqrt(dot(vec3(_3480, _3481, _3482), vec3(_3480, _3481, _3482)));
                                float _3490 = dot(vec3(_868, _871, _874), vec3((-0.0) - _2929, (-0.0) - _2930, (-0.0) - _2931));
                                float _4545 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                                float _3493 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
                                float _3494 = dot(vec3(_868, _871, _874), vec3(_3486 * _3480, _3486 * _3481, _3486 * _3482));
                                float _4556 = isnan(0.0) ? _3494 : (isnan(_3494) ? 0.0 : max(_3494, 0.0));
                                float _3497 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
                                float _3501 = ((_3497 * _3497) * (_3479 + (-1.0))) + 1.0;
                                float _3502 = _3439 * _3478;
                                float _3503 = _3502 * _3502;
                                float _3509 = ((1.0 - _3503) * dot(vec3(_868, _871, _874), vec3(_3426, _3427, _3428))) + _3503;
                                float _4567 = isnan(0.0) ? _3509 : (isnan(_3509) ? 0.0 : max(_3509, 0.0));
                                float _3510 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
                                float _3511 = 1.0 - _3478;
                                float _3521 = (0.5 / (((_3510 * ((_3493 * _3511) + _3478)) + 9.9999999392252902907785028219223e-09) + (((_3510 * _3511) + _3478) * _3493))) * _3510;
                                float _4578 = isnan(0.0) ? _3521 : (isnan(_3521) ? 0.0 : max(_3521, 0.0));
                                float _3531 = (_3456 * _3433) * (((_3479 * 3.1415927410125732421875) * (isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0)))) / ((_3501 * _3501) * ((_3446 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3531 * _3315.x;
                                frontier_phi_73_pred_1 = _3531 * _3315.y;
                                frontier_phi_73_pred_2 = _3457 * _3303.z;
                                frontier_phi_73_pred_3 = _3457 * _3303.y;
                                frontier_phi_73_pred_4 = _3457 * _3303.x;
                                frontier_phi_73_pred_5 = _3531 * _3315.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3535 = frontier_phi_73_pred;
                            _3536 = frontier_phi_73_pred_1;
                            _3540 = frontier_phi_73_pred_2;
                            _3539 = frontier_phi_73_pred_3;
                            _3538 = frontier_phi_73_pred_4;
                            _3537 = frontier_phi_73_pred_5;
                            _3245 = _3538 + _3258;
                            _3246 = _3539 + _3259;
                            _3247 = _3540 + _3260;
                            _3242 = _3535 + _3255;
                            _3243 = _3536 + _3256;
                            _3244 = _3537 + _3257;
                            if (_3262 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3255 = _3242;
                                _3256 = _3243;
                                _3257 = _3244;
                                _3258 = _3245;
                                _3259 = _3246;
                                _3260 = _3247;
                                _3261 = _3262;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3245;
                        frontier_phi_67_pred_1 = _3246;
                        frontier_phi_67_pred_2 = _3247;
                        frontier_phi_67_pred_3 = _3244;
                        frontier_phi_67_pred_4 = _3243;
                        frontier_phi_67_pred_5 = _3242;
                    }
                    _2910 = frontier_phi_67_pred;
                    _2912 = frontier_phi_67_pred_1;
                    _2914 = frontier_phi_67_pred_2;
                    _2908 = frontier_phi_67_pred_3;
                    _2906 = frontier_phi_67_pred_4;
                    _2904 = frontier_phi_67_pred_5;
                    uint _3049 = _3048 + 1u;
                    if (_3049 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3042 = _2904;
                        _3043 = _2906;
                        _3044 = _2908;
                        _3045 = _2910;
                        _3046 = _2912;
                        _3047 = _2914;
                        _3048 = _3049;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2912;
                frontier_phi_55_56_ladder_1 = _2914;
                frontier_phi_55_56_ladder_2 = _2910;
                frontier_phi_55_56_ladder_3 = _2908;
                frontier_phi_55_56_ladder_4 = _2906;
                frontier_phi_55_56_ladder_5 = _2904;
            }
            else
            {
                frontier_phi_55_56_ladder = _2789;
                frontier_phi_55_56_ladder_1 = _2791;
                frontier_phi_55_56_ladder_2 = _2787;
                frontier_phi_55_56_ladder_3 = _2785;
                frontier_phi_55_56_ladder_4 = _2783;
                frontier_phi_55_56_ladder_5 = _2781;
            }
            _2903 = frontier_phi_55_56_ladder_5;
            _2905 = frontier_phi_55_56_ladder_4;
            _2907 = frontier_phi_55_56_ladder_3;
            _2909 = frontier_phi_55_56_ladder_2;
            _2911 = frontier_phi_55_56_ladder;
            _2913 = frontier_phi_55_56_ladder_1;
        }
        float _2918 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
        _2658 = (_2918 * _2909) + _2094;
        _2660 = (_2918 * _2911) + _2096;
        _2662 = (_2918 * _2913) + _2098;
        _2664 = ((_2903 * _912) * _2918) + _2439;
        _2666 = ((_2905 * _914) * _2918) + _2441;
        _2668 = ((_2907 * _915) * _2918) + _2443;
    }
    else
    {
        _2658 = _2094;
        _2660 = _2096;
        _2662 = _2098;
        _2664 = _2439;
        _2666 = _2441;
        _2668 = _2443;
    }
    uint _2674 = _888 + uint(cbMatDynParam._m0[0u].w);
    float _2682 = ((cbMtdParam._m0[20u].x * cbMtdParam._m0[25u].x) * _703.x) * cbInstanceData._m0[_2674].x;
    float _2685 = ((cbMtdParam._m0[20u].y * cbMtdParam._m0[25u].x) * _703.y) * cbInstanceData._m0[_2674].y;
    float _2688 = ((cbMtdParam._m0[20u].z * cbMtdParam._m0[25u].x) * _703.z) * cbInstanceData._m0[_2674].z;
    float _4594 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _4605 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _4616 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
    float _2705 = (((isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0))) * (_2658 + ((isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0))) * _927))) + ((_2664 + ((isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0))) * _1734)) * cbPerFrame._m0[3u].x)) + _2682;
    float _2707 = (_2685 + ((_2666 + ((isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) * _1734)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (_2660 + ((isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0))) * _927)));
    float _2709 = (_2688 + ((_2668 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1734)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0))) * (_2662 + ((isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0))) * _927)));
    float _4642 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2722 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
    uint _2723 = _887 + 6u;
    float _2731 = _849 / cbSceneParam._m0[86u].x;
    float _2732 = _850 / cbSceneParam._m0[86u].y;
    vec4 _2746 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2731, _2732, (log2((isnan(cbSceneParam._m0[77u].w) ? _784 : (isnan(_784) ? cbSceneParam._m0[77u].w : min(_784, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2748 = _2746.x;
    float _2749 = _2746.y;
    float _2750 = _2746.z;
    float _2751 = _2746.w;
    float _2844;
    float _2846;
    float _2848;
    float _2850;
    if (_784 > cbSceneParam._m0[78u].w)
    {
        float _2806 = isnan(_784) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _784 : min(cbSceneParam._m0[80u].w, _784));
        float _2807 = _2806 / _784;
        float _2818 = _2807 * _834;
        float _2819 = _835 * _2807;
        float _2820 = (-0.0) - _2819;
        float _2822 = _2807 * _836;
        float _2824 = (cbSceneParam._m0[77u].w * _2820) / _2806;
        float _2825 = _2824 + cbSceneParam._m0[79u].w;
        float _2826 = cbSceneParam._m0[79u].w - _2819;
        float _2832 = sqrt(((_2818 * _2818) + (_2819 * _2819)) + (_2822 * _2822));
        float _2835 = (1.0 - (cbSceneParam._m0[77u].w / _2806)) * _2832;
        float _2840 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2842 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3004;
        if (abs((_2820 - _2824) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3004 = ((((_2825 > 0.0) ? exp2(_2840 * _2825) : (2.0 - exp2(_2842 * _2825))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2835;
        }
        else
        {
            float _2964 = 1.0 / cbSceneParam._m0[80u].x;
            float _2965 = isnan(_2826) ? _2825 : (isnan(_2825) ? _2826 : max(_2825, _2826));
            float _2966 = isnan(_2826) ? _2825 : (isnan(_2825) ? _2826 : min(_2825, _2826));
            float _2975 = isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : min(_2965, 0.0));
            float _2976 = isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : min(_2966, 0.0));
            _3004 = ((abs(_2832 / _2820) * cbSceneParam._m0[80u].y) * ((((_2975 - _2976) * 2.0) - ((exp2(_2840 * (isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : max(_2965, 0.0)))) - exp2(_2840 * (isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0))))) * _2964)) - ((exp2(_2842 * _2975) - exp2(_2842 * _2976)) * _2964))) + (_2835 * cbSceneParam._m0[80u].z);
        }
        vec4 _3006 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2731, _2732, 1.0), 0.0);
        float _3015 = exp2((_3004 * (-1.44269502162933349609375)) * (1.0 - _3006.w));
        float _3016 = log2(_3015);
        float _3032 = log2(_2751);
        _2844 = (exp2(_3032 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].x)) * _3006.x) / cbSceneParam._m0[78u].x)) + _2748;
        _2846 = (exp2(_3032 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].y)) * _3006.y) / cbSceneParam._m0[78u].y)) + _2749;
        _2848 = (exp2(_3032 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].z)) * _3006.z) / cbSceneParam._m0[78u].z)) + _2750;
        _2850 = _3015 * _2751;
    }
    else
    {
        _2844 = _2748;
        _2846 = _2749;
        _2848 = _2750;
        _2850 = _2751;
    }
    float _2862 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2863 = _2862 == 3.0;
    float _2864 = log2(_2850);
    float _2868 = exp2(_2864 * cbSceneParam._m0[78u].x);
    float _2869 = exp2(_2864 * cbSceneParam._m0[78u].y);
    float _2870 = exp2(_2864 * cbSceneParam._m0[78u].z);
    float _2871 = _2868 * (isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0)));
    float _2872 = _2869 * (isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0)));
    float _2873 = _2870 * (isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0)));
    float _2882 = (_2862 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2882 * (_2863 ? _2871 : (_2871 + (cbSceneParam._m0[72u].w * _2844)));
    SV_Target.y = _2882 * (_2863 ? _2872 : (_2872 + (cbSceneParam._m0[72u].w * _2846)));
    SV_Target.z = _2882 * (_2863 ? _2873 : (_2873 + (cbSceneParam._m0[72u].w * _2848)));
    SV_Target.w = cbInstanceData._m0[_2723].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2682) * _2722) * _2868) * _2882;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2685) * _2722) * _2869) * _2882;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2688) * _2722) * _2870) * _2882;
    SV_Target_1.w = cbInstanceData._m0[_2723].w;
}


