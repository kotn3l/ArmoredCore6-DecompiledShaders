#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _134 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _148 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _183 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _191 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _195 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _205 = cbSceneParam._m0[71u].x - (_183 / _195);
    float _206 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _195);
    float _207 = cbSceneParam._m0[71u].z - (_191 / _195);
    float _222 = cbMtdParam._m0[22u].x - cbMtdParam._m0[21u].w;
    float _224 = (sqrt(((_205 * _205) + (_206 * _206)) + (_207 * _207)) - cbMtdParam._m0[21u].w) / (isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0)));
    float _239 = (cbMtdParam._m0[29u].y + cbPerFrame._m0[22u].x) * cbMtdParam._m0[20u].z;
    vec4 _263 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_2, SS_BumpMap), vec2((((_239 * cbMtdParam._m0[35u].x) + (cbMtdParam._m0[34u].z * TEXCOORD.x)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[34u].w * TEXCOORD.y) + (_239 * cbMtdParam._m0[35u].y)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _266 = _263.x;
    float _267 = _263.y;
    float _1060 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _270 = isnan(1.0) ? _1060 : (isnan(_1060) ? 1.0 : min(_1060, 1.0));
    float _271 = _263.z - _270;
    float _1071 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _272 = isnan(1.0) ? _1071 : (isnan(_1071) ? 1.0 : min(_1071, 1.0));
    float _284 = (_272 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _286 = (_272 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _299 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_284 + (cbMtdParam._m0[31u].x * _239)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_286 + (cbMtdParam._m0[31u].y * _239)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _316 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_284 + (cbMtdParam._m0[30u].z * _239)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_286 + (cbMtdParam._m0[30u].w * _239)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _340 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((_183 / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].z * _239))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((_191 / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].w * _239))) + cbTextureTilingScale._m0[1u].w));
    float _348 = ((cbMtdParam._m0[21u].y - cbMtdParam._m0[20u].x) * _270) + cbMtdParam._m0[20u].x;
    float _1082 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _349 = isnan(1.0) ? _1082 : (isnan(_1082) ? 1.0 : min(_1082, 1.0));
    float _360 = _224 / cbMtdParam._m0[23u].w;
    float _1093 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _1093 : (isnan(_1093) ? 1.0 : min(_1093, 1.0));
    float _362 = _272 * 0.23999999463558197021484375;
    float _364 = _272 * (-0.20000000298023223876953125);
    float _375 = cbMtdParam._m0[36u].z * TEXCOORD.x;
    float _376 = cbMtdParam._m0[36u].w * TEXCOORD.y;
    vec4 _385 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].x * _239) + _362) + _375) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].y * _239) + _364) + _376) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _404 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((((_375 + _362) + (cbMtdParam._m0[37u].x * _239)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_376 + _364) + (cbMtdParam._m0[37u].y * _239)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _425 = (((_316.x + (-0.5)) * 0.5) + _299.x) + (((_385.x + (-1.0)) + _404.x) * cbMtdParam._m0[25u].w);
    float _426 = (((_316.y + (-0.5)) * 0.5) + _299.y) + (((_385.y + (-1.0)) + _404.y) * cbMtdParam._m0[25u].w);
    float _431 = ((_340.x - _425) * _361) + _425;
    float _432 = ((_340.y - _426) * _361) + _426;
    float _434 = _224 / cbMtdParam._m0[23u].y;
    float _1104 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _1104 : (isnan(_1104) ? 1.0 : min(_1104, 1.0));
    float _452 = ((((_349 * (0.5 - _266)) + _266) + (((_431 + (-0.5)) + ((0.5 - _431) * _435)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _453 = ((((_349 * (0.5 - _267)) + _267) + (((_432 + (-0.5)) + ((0.5 - _432) * _435)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _454 = dot(vec2(_452, _453), vec2(_452, _453));
    float _1115 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _459 = sqrt(1.0 - (isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0))));
    float _462 = fma(_459, _141 * NORMAL.x, fma(_453, _148 * TANGENT.x, (_134 * _126) * _452));
    float _465 = fma(_459, _141 * NORMAL.y, fma(_453, _148 * TANGENT.y, (_134 * _127) * _452));
    float _468 = fma(_459, _141 * NORMAL.z, fma(_453, _148 * TANGENT.z, (_134 * _128) * _452));
    float _472 = inversesqrt(dot(vec3(_462, _465, _468), vec3(_462, _465, _468)));
    float _473 = _472 * _462;
    float _474 = _472 * _465;
    float _475 = _472 * _468;
    float _1126 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _476 = isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0));
    float _490 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _492 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _501 = (_492.x * 2.0) + (-1.0);
    float _502 = (_492.y * 2.0) + (-1.0);
    float _503 = (_492.z * 2.0) + (-1.0);
    float _507 = inversesqrt(dot(vec3(_501, _502, _503), vec3(_501, _502, _503)));
    float _518 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _492.w;
    float _525 = (((_501 * _507) - _473) * _518) + _473;
    float _526 = (((_502 * _507) - _474) * _518) + _474;
    float _527 = (((_503 * _507) - _475) * _518) + _475;
    float _528 = POSITION_1.x / POSITION_1.w;
    float _529 = POSITION_1.y / POSITION_1.w;
    float _532 = (_528 * 0.5) + 0.5;
    float _533 = 0.5 - (_529 * 0.5);
    float _538;
    float _540;
    float _542;
    float _544;
    if (_476 < cbPerScene._m0[22u].z)
    {
        _538 = 0.0;
        _540 = 0.0;
        _542 = 0.0;
        _544 = 0.0;
    }
    else
    {
        float _550 = 1.0 / _490;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        float frontier_phi_1_2_ladder_2;
        float frontier_phi_1_2_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _550))
        {
            float _572 = fma(_527, cbPerScene._m0[8u].z, fma(_526, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _525));
            float _575 = fma(_527, cbPerScene._m0[9u].z, fma(_526, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _525));
            float _578 = fma(_527, cbPerScene._m0[10u].z, fma(_526, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _525));
            float _585 = (_528 * _490) * cbPerScene._m0[28u].x;
            float _587 = (_529 * _490) * cbPerScene._m0[28u].y;
            float _591 = inversesqrt(dot(vec3(_585, _587, _490), vec3(_585, _587, _490)));
            float _592 = _585 * _591;
            float _593 = _587 * _591;
            float _594 = _591 * _490;
            float _598 = dot(vec3(_592, _593, _594), vec3(_572, _575, _578)) * 2.0;
            float _602 = _592 - (_598 * _572);
            float _603 = _593 - (_598 * _575);
            float _604 = _594 - (_598 * _578);
            float _608 = inversesqrt(dot(vec3(_602, _603, _604), vec3(_602, _603, _604)));
            float _611 = _604 * _608;
            float frontier_phi_1_2_ladder_3_ladder;
            float frontier_phi_1_2_ladder_3_ladder_1;
            float frontier_phi_1_2_ladder_3_ladder_2;
            float frontier_phi_1_2_ladder_3_ladder_3;
            if (_611 < cbPerScene._m0[16u].x)
            {
                frontier_phi_1_2_ladder_3_ladder = 0.0;
                frontier_phi_1_2_ladder_3_ladder_1 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_2 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_3 = 0.0;
            }
            else
            {
                float _624 = abs(dot(vec3((-0.0) - _592, (-0.0) - _593, (-0.0) - _594), vec3(_572, _575, _578)));
                float _1137 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
                float _635 = (((_476 * _476) * 0.959999978542327880859375) * exp2(log2(1.0 - (isnan(1.0) ? _1137 : (isnan(_1137) ? 1.0 : min(_1137, 1.0)))) * 5.0)) + 0.039999999105930328369140625;
                float _643 = (cbPerScene._m0[29u].x * (1.0 - _476)) + cbPerScene._m0[29u].y;
                float _1148 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
                float _651 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _1148 : (isnan(_1148) ? 1.0 : min(_1148, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
                if (_635 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = 0.0;
                }
                else
                {
                    float _654 = _611 - cbPerScene._m0[16u].x;
                    float _1159 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
                    float _655 = isnan(1.0) ? _1159 : (isnan(_1159) ? 1.0 : min(_1159, 1.0));
                    float _656 = _655 * _655;
                    float _658 = (_635 - cbPerScene._m0[22u].x) * 10.0;
                    float _1170 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
                    float _660 = isnan(1.0) ? _1170 : (isnan(_1170) ? 1.0 : min(_1170, 1.0));
                    float _661 = isnan(_660) ? _656 : (isnan(_656) ? _660 : min(_656, _660));
                    float _665 = (cbPerScene._m0[21u].x - _490) * cbPerScene._m0[21u].z;
                    float _1186 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
                    float _666 = isnan(1.0) ? _1186 : (isnan(_1186) ? 1.0 : min(_1186, 1.0));
                    float _667 = isnan(_666) ? _661 : (isnan(_661) ? _666 : min(_661, _666));
                    float _668 = (_602 * _608) + _585;
                    float _669 = (_603 * _608) + _587;
                    float _670 = _611 + _490;
                    float _703 = fma(_670, cbPerScene._m0[7u].z, fma(_669, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _668)) + cbPerScene._m0[7u].w;
                    float _707 = ((fma(_670, cbPerScene._m0[4u].z, fma(_669, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _668)) + cbPerScene._m0[4u].w) / _703) - _532;
                    float _708 = ((fma(_670, cbPerScene._m0[5u].z, fma(_669, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _668)) + cbPerScene._m0[5u].w) / _703) - _533;
                    float _715 = cbPerScene._m0[18u].x * _707;
                    float _716 = cbPerScene._m0[18u].y * _708;
                    float _721 = sqrt((_715 * _715) + (_716 * _716)) + 9.9999997473787516355514526367188e-06;
                    float _726 = (_707 / _721) * _651;
                    float _727 = (_708 / _721) * _651;
                    float _728 = (((1.0 / _670) - _550) / _721) * _651;
                    float _756 = abs(float(_726 > 0.0) - _532) / (abs(_726) + 1.0000000116860974230803549289703e-07);
                    float _757 = abs(float(_727 > 0.0) - _533) / (abs(_727) + 1.0000000116860974230803549289703e-07);
                    float _759 = (abs(((_728 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _550) / (abs(_728) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _760 = isnan(_757) ? _756 : (isnan(_756) ? _757 : min(_756, _757));
                    float _761 = isnan(_759) ? _760 : (isnan(_760) ? _759 : min(_760, _759));
                    uint _764 = uint(int(isnan(cbPerScene._m0[23u].y) ? _761 : (isnan(_761) ? cbPerScene._m0[23u].y : min(_761, cbPerScene._m0[23u].y))));
                    float _545;
                    float _769;
                    float _771;
                    float _773;
                    if (int(_764) > int(0u))
                    {
                        float _766 = _728 + _550;
                        float _767 = _727 + _533;
                        float _768 = _726 + _532;
                        float _770;
                        float _772;
                        float _774;
                        float _775;
                        uint _786;
                        float _788;
                        float _790;
                        float _792;
                        float _794;
                        float _796;
                        float _798;
                        float _800;
                        uint _802;
                        float _804;
                        float _806;
                        float _808;
                        float _781 = 0.0;
                        float _782 = 0.0;
                        float _783 = 0.0;
                        float _784 = 0.0;
                        uint _785 = 0u;
                        float _787 = _550;
                        float _789 = _768;
                        float _791 = _767;
                        float _793 = _766;
                        float _795 = _532;
                        float _797 = _533;
                        float _799 = _550;
                        uint _801 = 1u;
                        float _803 = 0.0;
                        float _805 = 0.0;
                        float _807 = 0.0;
                        float _819;
                        float _826;
                        float _827;
                        float _828;
                        float _829;
                        float _830;
                        float _831;
                        uint _832;
                        float _833;
                        bool _839;
                        for (;;)
                        {
                            _819 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _789, cbSceneParam._m0[86u].y * _791), 0.0).x;
                            bool _825 = _785 == (_764 + 4294967295u);
                            _826 = _825 ? _803 : _789;
                            _827 = _825 ? _805 : _791;
                            _828 = _825 ? _807 : _793;
                            _829 = _825 ? _803 : _795;
                            _830 = _825 ? _805 : _797;
                            _831 = _825 ? _807 : _799;
                            _832 = _825 ? 1u : _801;
                            _833 = _825 ? (-1.0) : (_793 - _819);
                            _839 = (_832 != 0u) && ((_833 <= 0.0) && ((_825 ? (-1.0) : (_819 - (_787 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_14_pred;
                            float frontier_phi_14_pred_1;
                            float frontier_phi_14_pred_2;
                            uint frontier_phi_14_pred_3;
                            float frontier_phi_14_pred_4;
                            float frontier_phi_14_pred_5;
                            float frontier_phi_14_pred_6;
                            float frontier_phi_14_pred_7;
                            float frontier_phi_14_pred_8;
                            float frontier_phi_14_pred_9;
                            float frontier_phi_14_pred_10;
                            float frontier_phi_14_pred_11;
                            float frontier_phi_14_pred_12;
                            float frontier_phi_14_pred_13;
                            float frontier_phi_14_pred_14;
                            uint frontier_phi_14_pred_15;
                            if (_839)
                            {
                                uint _849 = uint(int(log2(_651) + 0.999000012874603271484375));
                                float _860;
                                float _862;
                                float _864;
                                float _866;
                                float _868;
                                float _870;
                                float _872;
                                if (int(_849) > int(0u))
                                {
                                    uint _970;
                                    float _972;
                                    float _973;
                                    float _974;
                                    float _975;
                                    float _976;
                                    float _977;
                                    float _978;
                                    _970 = 0u;
                                    _972 = _826;
                                    _973 = _827;
                                    _974 = _828;
                                    _975 = _829;
                                    _976 = _830;
                                    _977 = _831;
                                    _978 = _819;
                                    float _861;
                                    float _863;
                                    float _865;
                                    float _867;
                                    float _869;
                                    float _871;
                                    float _873;
                                    for (;;)
                                    {
                                        float _982 = (_975 + _972) * 0.5;
                                        float _983 = (_976 + _973) * 0.5;
                                        float _984 = (_977 + _974) * 0.5;
                                        vec4 _992 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _982, cbSceneParam._m0[86u].y * _983), 0.0);
                                        float _994 = _992.x;
                                        bool _996 = (_984 - _994) < 0.0;
                                        _861 = _996 ? _982 : _972;
                                        _863 = _996 ? _983 : _973;
                                        _865 = _996 ? _984 : _974;
                                        _867 = _996 ? _975 : _982;
                                        _869 = _996 ? _976 : _983;
                                        _871 = _996 ? _977 : _984;
                                        _873 = _996 ? _994 : _978;
                                        uint _971 = _970 + 1u;
                                        if (_971 == _849)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _970 = _971;
                                            _972 = _861;
                                            _973 = _863;
                                            _974 = _865;
                                            _975 = _867;
                                            _976 = _869;
                                            _977 = _871;
                                            _978 = _873;
                                        }
                                    }
                                    _860 = _861;
                                    _862 = _863;
                                    _864 = _865;
                                    _866 = _867;
                                    _868 = _869;
                                    _870 = _871;
                                    _872 = _873;
                                }
                                else
                                {
                                    _860 = _826;
                                    _862 = _827;
                                    _864 = _828;
                                    _866 = _829;
                                    _868 = _830;
                                    _870 = _831;
                                    _872 = _819;
                                }
                                float _882 = cbPerScene._m0[28u].x * ((_860 * 2.0) + (-1.0));
                                float _883 = cbPerScene._m0[28u].y * (1.0 - (_862 * 2.0));
                                float _915 = fma(_872, cbPerScene._m0[27u].w, fma(_883, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _882) + cbPerScene._m0[27u].z);
                                float _916 = fma(_872, cbPerScene._m0[24u].w, fma(_883, cbPerScene._m0[24u].y, _882 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _915;
                                float _917 = fma(_872, cbPerScene._m0[25u].w, fma(_883, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _882) + cbPerScene._m0[25u].z) / _915;
                                vec4 _926 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _916, cbSceneParam._m0[87u].w * _917), 0.0);
                                float _931 = isnan(_667) ? 1.0 : (isnan(1.0) ? _667 : min(1.0, _667));
                                float _932 = 0.5 - _916;
                                float _933 = 0.5 - _917;
                                float _934 = _932 * 2.0;
                                float _935 = _933 * 2.0;
                                float _936 = _934 * _934;
                                float _937 = _935 * _935;
                                float _1222 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
                                float _1233 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
                                float _946 = inversesqrt(dot(vec2(_726, _727), vec2(_726, _727)));
                                float _952 = inversesqrt(dot(vec2(_934, _935), vec2(_934, _935)));
                                float _958 = dot(vec2((_932 * (-2.0)) * _952, (_933 * (-2.0)) * _952), vec2(_946 * _726, _946 * _727));
                                float _1244 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
                                float _965 = ((1.0 - (isnan(1.0) ? _1233 : (isnan(_1233) ? 1.0 : min(_1233, 1.0)))) * (1.0 - (isnan(1.0) ? _1222 : (isnan(_1222) ? 1.0 : min(_1222, 1.0))))) * (4.0 - ((isnan(1.0) ? _1244 : (isnan(_1244) ? 1.0 : min(_1244, 1.0))) * 2.0));
                                float _1255 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
                                float _966 = isnan(1.0) ? _1255 : (isnan(_1255) ? 1.0 : min(_1255, 1.0));
                                float _967 = _966 * _966;
                                frontier_phi_14_pred = _807;
                                frontier_phi_14_pred_1 = _805;
                                frontier_phi_14_pred_2 = _803;
                                frontier_phi_14_pred_3 = _832;
                                frontier_phi_14_pred_4 = _870;
                                frontier_phi_14_pred_5 = _868;
                                frontier_phi_14_pred_6 = _866;
                                frontier_phi_14_pred_7 = _864;
                                frontier_phi_14_pred_8 = _862;
                                frontier_phi_14_pred_9 = _860;
                                frontier_phi_14_pred_10 = _787;
                                frontier_phi_14_pred_11 = isnan(_967) ? _931 : (isnan(_931) ? _967 : min(_931, _967));
                                frontier_phi_14_pred_12 = _926.z;
                                frontier_phi_14_pred_13 = _926.y;
                                frontier_phi_14_pred_14 = _926.x;
                                frontier_phi_14_pred_15 = _764;
                            }
                            else
                            {
                                bool _851 = _833 > 0.0;
                                frontier_phi_14_pred = _851 ? _828 : _807;
                                frontier_phi_14_pred_1 = _851 ? _827 : _805;
                                frontier_phi_14_pred_2 = _851 ? _826 : _803;
                                frontier_phi_14_pred_3 = uint(_851);
                                frontier_phi_14_pred_4 = _828;
                                frontier_phi_14_pred_5 = _827;
                                frontier_phi_14_pred_6 = _826;
                                frontier_phi_14_pred_7 = _828 + _728;
                                frontier_phi_14_pred_8 = _827 + _727;
                                frontier_phi_14_pred_9 = _826 + _726;
                                frontier_phi_14_pred_10 = _819;
                                frontier_phi_14_pred_11 = _784;
                                frontier_phi_14_pred_12 = _783;
                                frontier_phi_14_pred_13 = _782;
                                frontier_phi_14_pred_14 = _781;
                                frontier_phi_14_pred_15 = _785 + 1u;
                            }
                            _808 = frontier_phi_14_pred;
                            _806 = frontier_phi_14_pred_1;
                            _804 = frontier_phi_14_pred_2;
                            _802 = frontier_phi_14_pred_3;
                            _800 = frontier_phi_14_pred_4;
                            _798 = frontier_phi_14_pred_5;
                            _796 = frontier_phi_14_pred_6;
                            _794 = frontier_phi_14_pred_7;
                            _792 = frontier_phi_14_pred_8;
                            _790 = frontier_phi_14_pred_9;
                            _788 = frontier_phi_14_pred_10;
                            _775 = frontier_phi_14_pred_11;
                            _774 = frontier_phi_14_pred_12;
                            _772 = frontier_phi_14_pred_13;
                            _770 = frontier_phi_14_pred_14;
                            _786 = frontier_phi_14_pred_15;
                            if (int(_786) < int(_764))
                            {
                                _781 = _770;
                                _782 = _772;
                                _783 = _774;
                                _784 = _775;
                                _785 = _786;
                                _787 = _788;
                                _789 = _790;
                                _791 = _792;
                                _793 = _794;
                                _795 = _796;
                                _797 = _798;
                                _799 = _800;
                                _801 = _802;
                                _803 = _804;
                                _805 = _806;
                                _807 = _808;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _769 = _770;
                        _771 = _772;
                        _773 = _774;
                        _545 = _775;
                    }
                    else
                    {
                        _769 = 0.0;
                        _771 = 0.0;
                        _773 = 0.0;
                        _545 = 0.0;
                    }
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                    if ((isnan(_769) || isnan(_771)) || isnan(_773))
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = (_545 * _769) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = _545;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = (_545 * _773) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = (_545 * _771) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                }
                frontier_phi_1_2_ladder_3_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder;
                frontier_phi_1_2_ladder_3_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                frontier_phi_1_2_ladder_3_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                frontier_phi_1_2_ladder_3_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
            }
            frontier_phi_1_2_ladder = frontier_phi_1_2_ladder_3_ladder;
            frontier_phi_1_2_ladder_1 = frontier_phi_1_2_ladder_3_ladder_1;
            frontier_phi_1_2_ladder_2 = frontier_phi_1_2_ladder_3_ladder_2;
            frontier_phi_1_2_ladder_3 = frontier_phi_1_2_ladder_3_ladder_3;
        }
        else
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = 0.0;
            frontier_phi_1_2_ladder_2 = 0.0;
            frontier_phi_1_2_ladder_3 = 0.0;
        }
        _538 = frontier_phi_1_2_ladder;
        _540 = frontier_phi_1_2_ladder_3;
        _542 = frontier_phi_1_2_ladder_2;
        _544 = frontier_phi_1_2_ladder_1;
    }
    SV_Target.x = _538;
    SV_Target.y = _540;
    SV_Target.z = _542;
    SV_Target.w = _544;
}


