#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1725;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _231 = _230 * _222;
    float _232 = _230 * _223;
    float _233 = _230 * _224;
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _238 = _237 * NORMAL.x;
    float _239 = _237 * NORMAL.y;
    float _240 = _237 * NORMAL.z;
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245 = _244 * TANGENT.x;
    float _246 = _244 * TANGENT.y;
    float _247 = _244 * TANGENT.z;
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    float _318 = cbMtdParam._m0[22u].x - cbMtdParam._m0[21u].w;
    float _320 = (sqrt(((_301 * _301) + (_302 * _302)) + (_303 * _303)) - cbMtdParam._m0[21u].w) / (isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0)));
    float _324 = _320 / cbMtdParam._m0[23u].z;
    float _325 = isnan(0.0) ? _324 : (isnan(_324) ? 0.0 : max(_324, 0.0));
    float _326 = isnan(8.0) ? _325 : (isnan(_325) ? 8.0 : min(_325, 8.0));
    float _333 = cbMtdParam._m0[10u].x * _326;
    float _334 = cbMtdParam._m0[10u].y * _326;
    float _335 = cbMtdParam._m0[10u].z * _326;
    float _336 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _337 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _338 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
    float _349 = cbMtdParam._m0[22u].y + _320;
    float _354 = _349 * cbMtdParam._m0[24u].z;
    float _4318 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    vec4 _372 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _375 = _372.x;
    float _399 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _375)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _375))) - POSITION_1.w) / cbMtdParam._m0[21u].x;
    float _4329 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _400 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
    float _405 = 1.0 - (isnan(cbMtdParam._m0[26u].y) ? _400 : (isnan(_400) ? cbMtdParam._m0[26u].y : max(_400, cbMtdParam._m0[26u].y)));
    float _407 = (cbMtdParam._m0[26u].x + TEXCOORD_3.x) - (_405 * cbMtdParam._m0[21u].z);
    float _423 = (cbMtdParam._m0[29u].y + cbPerFrame._m0[22u].x) * cbMtdParam._m0[20u].z;
    float _431 = cbMtdParam._m0[34u].z * TEXCOORD.x;
    float _432 = cbMtdParam._m0[34u].w * TEXCOORD.y;
    vec4 _446 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_2, SS_BumpMap), vec2((((_423 * cbMtdParam._m0[35u].x) + _431) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_432 + (_423 * cbMtdParam._m0[35u].y)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _448 = _446.x;
    float _449 = _446.y;
    float _4345 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _452 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
    float _453 = _446.z - _452;
    float _4356 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _454 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
    float _466 = (_454 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _468 = (_454 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _481 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_466 + (cbMtdParam._m0[31u].x * _423)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_468 + (cbMtdParam._m0[31u].y * _423)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _485 = _481.z;
    vec4 _499 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_466 + (cbMtdParam._m0[30u].z * _423)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_468 + (cbMtdParam._m0[30u].w * _423)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _503 = _499.z;
    float _506 = (_405 - _446.w) + (isnan(_503) ? _485 : (isnan(_485) ? _503 : max(_485, _503)));
    float _4372 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _508 = (_407 * (isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0)))) * (isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0)));
    float _510 = _508 - (_508 * TEXCOORD_7.w);
    float _523 = (_510 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[16u].x * _454);
    float _524 = (_510 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[16u].y * _454);
    float _525 = (_510 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[16u].z * _454);
    vec4 _568 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].z * _423))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].w * _423))) + cbTextureTilingScale._m0[1u].w));
    float _573 = _568.z * 0.099999986588954925537109375;
    float _4383 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _575 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
    float _579 = cbMtdParam._m0[24u].x * _320;
    float _4394 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _580 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
    float _594 = (_523 + (isnan(0.07999999821186065673828125) ? _336 : (isnan(_336) ? 0.07999999821186065673828125 : min(_336, 0.07999999821186065673828125)))) + (_580 * (((1.0 - _523) - _575) + _573));
    float _596 = (_524 + (isnan(0.07999999821186065673828125) ? _337 : (isnan(_337) ? 0.07999999821186065673828125 : min(_337, 0.07999999821186065673828125)))) + (_580 * (((1.0 - _524) - _575) + _573));
    float _598 = (_525 + (isnan(0.07999999821186065673828125) ? _338 : (isnan(_338) ? 0.07999999821186065673828125 : min(_338, 0.07999999821186065673828125)))) + (_580 * (((1.0 - _525) + _573) - _575));
    float _4405 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _599 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
    float _4416 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _600 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
    float _4427 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _601 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
    float _606 = _320 / cbMtdParam._m0[25u].z;
    float _4438 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _609 = (1.0 - (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0)))) * cbMtdParam._m0[25u].y;
    float _616 = ((cbMtdParam._m0[21u].y - cbMtdParam._m0[20u].x) * _452) + cbMtdParam._m0[20u].x;
    float _639 = (POSITION_1.w - cbMtdParam._m0[28u].w) * (1.0 / cbMtdParam._m0[28u].z);
    float _4449 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _640 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
    float _654 = (cbMtdParam._m0[33u].z * _423) + _431;
    float _655 = (cbMtdParam._m0[33u].w * _423) + _432;
    vec4 _678 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[33u].x * _423) + _431)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[33u].y * _423) + _432)) + cbTextureTilingScale._m0[3u].w));
    float _685 = (_678.x * 2.0) + (-1.0);
    float _687 = (_678.y * 2.0) + (-1.0);
    float _691 = 1.0 - dot(vec2(_685, _687), vec2(_685, _687));
    float _4460 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _693 = sqrt(isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0)));
    float _696 = fma(_693, _238, fma(_687, _245, _685 * _231));
    float _699 = fma(_693, _239, fma(_687, _246, _685 * _232));
    float _702 = fma(_693, _240, fma(_687, _247, _685 * _233));
    float _706 = inversesqrt(dot(vec3(_696, _699, _702), vec3(_696, _699, _702)));
    float _707 = cbPerFrame._m0[22u].x * 2.0;
    float _708 = _707 * cbMtdParam._m0[27u].y;
    float _712 = ((_696 * 0.5) * _706) + (-0.25);
    float _716 = ((_699 * 0.5) * _706) + (-0.25);
    float _717 = _716 * cbMtdParam._m0[27u].z;
    float _719 = (-0.0) - (cbMtdParam._m0[27u].z * _712);
    float _720 = fract(_708);
    float _722 = fract(_708 + 0.5);
    float _733 = abs((_720 * 2.0) + (-1.0));
    vec4 _750 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_720 * _719) + _654) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_717 * _720) + _655) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    vec4 _755 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_722 * _719) + _654) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_717 * _722) + _655) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _766 = ((_755.x - _750.x) * _733) + _750.x;
    float _767 = ((_755.y - _750.y) * _733) + _750.y;
    float _768 = ((_755.z - _750.z) * _733) + _750.z;
    float _785 = (cbMtdParam._m0[32u].z * _423) + _431;
    float _786 = (cbMtdParam._m0[32u].w * _423) + _432;
    float _789 = _707 * cbMtdParam._m0[27u].x;
    float _790 = _716 * cbMtdParam._m0[26u].w;
    float _792 = (-0.0) - (cbMtdParam._m0[26u].w * _712);
    float _793 = fract(_789);
    float _795 = fract(_789 + 0.5);
    float _806 = abs((_793 * 2.0) + (-1.0));
    vec4 _823 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_793 * _792) + _785) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_790 * _793) + _786) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _825 = _823.x;
    float _826 = _823.y;
    float _827 = _823.z;
    vec4 _828 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_795 * _792) + _785) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_790 * _795) + _786) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _859 = (((((cbMtdParam._m0[17u].x - cbMtdParam._m0[19u].x) * _766) * cbMtdParam._m0[29u].z) + cbMtdParam._m0[19u].x) * (((_828.x - _825) * _806) + _825)) + (_766 * cbMtdParam._m0[18u].x);
    float _862 = (((((cbMtdParam._m0[17u].y - cbMtdParam._m0[19u].y) * _767) * cbMtdParam._m0[29u].z) + cbMtdParam._m0[19u].y) * (((_828.y - _826) * _806) + _826)) + (_767 * cbMtdParam._m0[18u].y);
    float _865 = ((((cbMtdParam._m0[29u].z * _768) * (cbMtdParam._m0[17u].z - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z) * (((_828.z - _827) * _806) + _827)) + (_768 * cbMtdParam._m0[18u].z);
    float _869 = _859 - (_859 * _640);
    float _870 = _862 - (_862 * _640);
    float _871 = _865 - (_865 * _640);
    float _876 = (POSITION_1.w - cbMtdParam._m0[28u].y) * (1.0 / cbMtdParam._m0[28u].x);
    float _4471 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _877 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _887 = (cbMtdParam._m0[34u].x * _423) + _431;
    float _888 = (cbMtdParam._m0[34u].y * _423) + _432;
    vec4 _901 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_887 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_888 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _903 = _901.x;
    float _904 = _901.y;
    float _905 = _901.z;
    vec4 _927 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _887) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _888) + cbTextureTilingScale._m0[7u].w));
    float _970 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].x) * ((_869 + (cbMtdParam._m0[14u].x * _510)) + ((((_903 * cbMtdParam._m0[11u].x) - _869) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _903) * cbMtdParam._m0[29u].w) + cbMtdParam._m0[12u].x) * _927.x)) * _877));
    float _972 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].y) * ((_870 + (cbMtdParam._m0[14u].y * _510)) + ((((_904 * cbMtdParam._m0[11u].y) - _870) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _904) * cbMtdParam._m0[29u].w) + cbMtdParam._m0[12u].y) * _927.y)) * _877));
    float _974 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].z) * ((_871 + (cbMtdParam._m0[14u].z * _510)) + ((((_905 * cbMtdParam._m0[11u].z) - _871) + ((((cbMtdParam._m0[29u].w * _905) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _927.z)) * _877));
    float _4482 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _981 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _991 = _320 / cbMtdParam._m0[23u].w;
    float _4493 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _992 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _993 = _454 * 0.23999999463558197021484375;
    float _995 = _454 * (-0.20000000298023223876953125);
    float _1006 = cbMtdParam._m0[36u].z * TEXCOORD.x;
    float _1007 = cbMtdParam._m0[36u].w * TEXCOORD.y;
    vec4 _1016 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].x * _423) + _993) + _1006) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].y * _423) + _995) + _1007) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1041 = texture(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1006 + _993) + (cbMtdParam._m0[37u].x * _423)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1007 + _995) + (cbMtdParam._m0[37u].y * _423)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1059 = (((_499.x + (-0.5)) * 0.5) + _481.x) + (((_1016.x + (-1.0)) + _1041.x) * cbMtdParam._m0[25u].w);
    float _1060 = (((_499.y + (-0.5)) * 0.5) + _481.y) + (((_1016.y + (-1.0)) + _1041.y) * cbMtdParam._m0[25u].w);
    float _1065 = ((_568.x - _1059) * _992) + _1059;
    float _1066 = ((_568.y - _1060) * _992) + _1060;
    float _1068 = _320 / cbMtdParam._m0[23u].y;
    float _4504 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1069 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _1085 = ((((_981 * (0.5 - _448)) + _448) + (((_1065 + (-0.5)) + ((0.5 - _1065) * _1069)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1086 = ((((_981 * (0.5 - _449)) + _449) + (((_1066 + (-0.5)) + ((0.5 - _1066) * _1069)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1087 = dot(vec2(_1085, _1086), vec2(_1085, _1086));
    float _4515 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _1092 = sqrt(1.0 - (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))));
    float _1094 = cbMtdParam._m0[24u].w * _349;
    float _4526 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    float _1103 = cbMtdParam._m0[22u].w * _349;
    float _4537 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _1105 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * cbMtdParam._m0[27u].w;
    float _4548 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1106 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _1111 = ((cbMtdParam._m0[25u].x - cbMtdParam._m0[23u].x) * (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0)))) + cbMtdParam._m0[23u].x;
    float _1116 = _1085 - (_1111 * _1085);
    float _1117 = _1086 - (_1111 * _1086);
    float _1118 = (_1111 * (1.0 - _1092)) + _1092;
    float _1137 = fma(_1092, _238, fma(_1086, _245, _1085 * _231));
    float _1140 = fma(_1092, _239, fma(_1086, _246, _1085 * _232));
    float _1143 = fma(_1092, _240, fma(_1086, _247, _1085 * _233));
    float _1147 = inversesqrt(dot(vec3(_1137, _1140, _1143), vec3(_1137, _1140, _1143)));
    float _1148 = _1147 * _1137;
    float _1149 = _1147 * _1140;
    float _1150 = _1147 * _1143;
    float _1153 = fma(_1118, _238, fma(_1117, _245, _1116 * _231));
    float _1156 = fma(_1118, _239, fma(_1117, _246, _1116 * _232));
    float _1159 = fma(_1118, _240, fma(_1117, _247, _1116 * _233));
    float _1163 = inversesqrt(dot(vec3(_1153, _1156, _1159), vec3(_1153, _1156, _1159)));
    float _1164 = _1163 * _1153;
    float _1165 = _1163 * _1156;
    float _1166 = _1163 * _1159;
    float _4559 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _4570 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _1168 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _4581 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _4592 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _4603 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _1185 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1225 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1234 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1225);
    float _1235 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1225);
    float _1236 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1225);
    float _1240 = inversesqrt(dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236)));
    float _1241 = _1234 * _1240;
    float _1242 = _1235 * _1240;
    float _1243 = _1236 * _1240;
    float _1248 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1249 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1251 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1260 = (_1251.x * 2.0) + (-1.0);
    float _1261 = (_1251.y * 2.0) + (-1.0);
    float _1262 = (_1251.z * 2.0) + (-1.0);
    float _1266 = inversesqrt(dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262)));
    float _1277 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1251.w;
    float _1284 = (((_1260 * _1266) - _1148) * _1277) + _1148;
    float _1285 = (((_1261 * _1266) - _1149) * _1277) + _1149;
    float _1286 = (((_1262 * _1266) - _1150) * _1277) + _1150;
    float _1304 = fma(_1286, cbSceneParam._m0[5u].z, fma(_1285, cbSceneParam._m0[5u].y, _1284 * cbSceneParam._m0[5u].x));
    float _1307 = fma(_1286, cbSceneParam._m0[6u].z, fma(_1285, cbSceneParam._m0[6u].y, _1284 * cbSceneParam._m0[6u].x));
    float _1310 = fma(_1286, cbSceneParam._m0[7u].z, fma(_1285, cbSceneParam._m0[7u].y, _1284 * cbSceneParam._m0[7u].x));
    uint _1323 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1324 = _1323 + 9u;
    uint _1325 = _1324 + uint(cbMatDynParam._m0[0u].w);
    float _1331 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0)))) * cbInstanceData._m0[_1325].x;
    float _1332 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * cbInstanceData._m0[_1325].y;
    float _1333 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * cbInstanceData._m0[_1325].z;
    float _4614 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
    float _1334 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _4625 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
    float _1335 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
    float _4636 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
    float _1336 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
    vec4 _1345 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1248, cbSceneParam._m0[86u].y * _1249));
    float _1348 = _1345.x * TEXCOORD_3.w;
    float _1352 = abs(dot(vec3(_1241, _1242, _1243), vec3(_1284, _1285, _1286)));
    float _4647 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
    float _1365 = dot(vec3(_1164, _1165, _1166), vec3(_1241, _1242, _1243)) * 2.0;
    float _1369 = (_1365 * _1164) - _1241;
    float _1370 = (_1365 * _1165) - _1242;
    float _1371 = (_1365 * _1166) - _1243;
    float _1375 = abs(dot(vec3(_1241, _1242, _1243), vec3(_1164, _1165, _1166)));
    float _4658 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
    float _1377 = sqrt(_1168);
    float _1389 = exp2((_1377 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1377 * 3.0));
    float _1420 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1424 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1428 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1724;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1453 = fma(_1428, cbModelParam._m0[26u].z, fma(_1424, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1420));
        float _1457 = fma(_1428, cbModelParam._m0[27u].z, fma(_1424, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1420));
        float _1461 = fma(_1428, cbModelParam._m0[28u].z, fma(_1424, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1420));
        float _1483 = _1420 + _1164;
        float _1484 = _1424 + _1165;
        float _1485 = _1428 + _1166;
        float _1495 = fma(_1485, cbModelParam._m0[26u].z, fma(_1484, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1483)) - _1453;
        float _1496 = fma(_1485, cbModelParam._m0[27u].z, fma(_1484, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1483)) - _1457;
        float _1497 = fma(_1485, cbModelParam._m0[28u].z, fma(_1484, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1483)) - _1461;
        float _1501 = inversesqrt(dot(vec3(_1495, _1496, _1497), vec3(_1495, _1496, _1497)));
        float _1513 = ((_1501 * _1495) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1453 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1514 = ((_1501 * _1496) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1457 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1515 = ((_1501 * _1497) / cbModelParam._m0[34u].z) + ((((((_1461 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1518 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1513, _1514, _1515), 0.0);
        vec4 _1525 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1513, _1514, _1515), 0.0);
        vec4 _1532 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1513, _1514, _1515), 0.0);
        vec4 _1539 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1513, _1514, _1515), 0.0);
        float _1552 = exp2((_1518.w + (-0.5)) * 20.0) * 2.0;
        float _1553 = _1552 * (_1518.x + (-0.5));
        float _1554 = _1552 * (_1518.y + (-0.5));
        float _1555 = _1552 * (_1518.z + (-0.5));
        float _1562 = exp2((_1525.w + (-0.5)) * 20.0) * 2.0;
        float _1563 = _1562 * (_1525.x + (-0.5));
        float _1564 = _1562 * (_1525.y + (-0.5));
        float _1565 = _1562 * (_1525.z + (-0.5));
        float _1572 = exp2((_1532.w + (-0.5)) * 20.0) * 2.0;
        float _1573 = _1572 * (_1532.x + (-0.5));
        float _1574 = _1572 * (_1532.y + (-0.5));
        float _1575 = _1572 * (_1532.z + (-0.5));
        float _1582 = exp2((_1539.w + (-0.5)) * 20.0) * 2.0;
        float _1583 = _1582 * (_1539.x + (-0.5));
        float _1584 = _1582 * (_1539.y + (-0.5));
        float _1585 = _1582 * (_1539.z + (-0.5));
        float _1586 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1587 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1588 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1589 = _1553 * 0.5;
        float _1590 = _1563 * 0.5;
        float _1591 = _1573 * 0.5;
        float _1592 = dot(vec3(_1589, _1590, _1591), vec3(_1589, _1590, _1591));
        float _1597 = (_1592 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1592);
        float _1606 = (dot(vec3(_1164, _1165, _1166), vec3(_1597 * _1589, _1597 * _1590, _1597 * _1591)) + 1.0) * 0.5;
        float _4684 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1616 = sqrt(((_1590 * _1590) + (_1589 * _1589)) + (_1591 * _1591)) / (_1586 + 9.9999997473787516355514526367188e-06);
        float _4695 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1617 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _1618 = _1617 * 2.0;
        float _1622 = (1.0 - _1617) / (_1617 + 1.0);
        float _4706 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _1632 = ((((1.0 - _1623) * (_1618 + 2.0)) * exp2(log2(isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0))) * (_1618 + 1.0))) + _1623) * _1586;
        float _1633 = _1554 * 0.5;
        float _1634 = _1564 * 0.5;
        float _1635 = _1574 * 0.5;
        float _1636 = dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635));
        float _1641 = (_1636 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1636);
        float _1649 = (dot(vec3(_1164, _1165, _1166), vec3(_1641 * _1633, _1641 * _1634, _1641 * _1635)) + 1.0) * 0.5;
        float _4717 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1658 = sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635)) / (_1587 + 9.9999997473787516355514526367188e-06);
        float _4728 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _1660 = _1659 * 2.0;
        float _1664 = (1.0 - _1659) / (_1659 + 1.0);
        float _4739 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
        float _1674 = ((((1.0 - _1665) * (_1660 + 2.0)) * exp2(log2(isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0))) * (_1660 + 1.0))) + _1665) * _1587;
        float _1675 = _1555 * 0.5;
        float _1676 = _1565 * 0.5;
        float _1677 = _1575 * 0.5;
        float _1678 = dot(vec3(_1675, _1676, _1677), vec3(_1675, _1676, _1677));
        float _1683 = (_1678 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1678);
        float _1691 = (dot(vec3(_1164, _1165, _1166), vec3(_1683 * _1675, _1683 * _1676, _1683 * _1677)) + 1.0) * 0.5;
        float _4750 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1700 = sqrt(((_1676 * _1676) + (_1675 * _1675)) + (_1677 * _1677)) / (_1588 + 9.9999997473787516355514526367188e-06);
        float _4761 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
        float _1702 = _1701 * 2.0;
        float _1706 = (1.0 - _1701) / (_1701 + 1.0);
        float _4772 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0));
        float _1716 = ((((1.0 - _1707) * (_1702 + 2.0)) * exp2(log2(isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0))) * (_1702 + 1.0))) + _1707) * _1588;
        _1724 = _1555;
        _1726 = _1554;
        _1727 = _1553;
        _1728 = _1565;
        _1729 = _1564;
        _1730 = _1563;
        _1731 = _1575;
        _1732 = _1574;
        _1733 = _1573;
        _1734 = _1588;
        _1735 = _1587;
        _1736 = _1586;
        _1737 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)));
        _1738 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)));
        _1739 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)));
    }
    else
    {
        _1724 = _1725;
        _1726 = _1725;
        _1727 = _1725;
        _1728 = _1725;
        _1729 = _1725;
        _1730 = _1725;
        _1731 = _1725;
        _1732 = _1725;
        _1733 = _1725;
        _1734 = _1725;
        _1735 = _1725;
        _1736 = _1725;
        _1737 = 0.0;
        _1738 = 0.0;
        _1739 = 0.0;
    }
    float _2029;
    float _2030;
    float _2031;
    float _2032;
    float _2033;
    float _2034;
    float _2035;
    float _2036;
    float _2037;
    float _2038;
    float _2039;
    float _2040;
    float _2041;
    float _2042;
    float _2043;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1762 = fma(_1428, cbModelParam._m0[30u].z, fma(_1424, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1420));
        float _1766 = fma(_1428, cbModelParam._m0[31u].z, fma(_1424, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1420));
        float _1770 = fma(_1428, cbModelParam._m0[32u].z, fma(_1424, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1420));
        float _1792 = _1420 + _1164;
        float _1793 = _1424 + _1165;
        float _1794 = _1428 + _1166;
        float _1804 = fma(_1794, cbModelParam._m0[30u].z, fma(_1793, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1792)) - _1762;
        float _1805 = fma(_1794, cbModelParam._m0[31u].z, fma(_1793, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1792)) - _1766;
        float _1806 = fma(_1794, cbModelParam._m0[32u].z, fma(_1793, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1792)) - _1770;
        float _1810 = inversesqrt(dot(vec3(_1804, _1805, _1806), vec3(_1804, _1805, _1806)));
        float _1822 = ((_1810 * _1804) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1762 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1823 = ((_1810 * _1805) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1766 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1824 = ((_1810 * _1806) / cbModelParam._m0[35u].z) + ((((((_1770 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1826 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1822, _1823, _1824), 0.0);
        vec4 _1833 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1822, _1823, _1824), 0.0);
        vec4 _1840 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1822, _1823, _1824), 0.0);
        vec4 _1847 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1822, _1823, _1824), 0.0);
        float _1859 = exp2((_1826.w + (-0.5)) * 20.0) * 2.0;
        float _1860 = _1859 * (_1826.x + (-0.5));
        float _1861 = _1859 * (_1826.y + (-0.5));
        float _1862 = _1859 * (_1826.z + (-0.5));
        float _1869 = exp2((_1833.w + (-0.5)) * 20.0) * 2.0;
        float _1870 = _1869 * (_1833.x + (-0.5));
        float _1871 = _1869 * (_1833.y + (-0.5));
        float _1872 = _1869 * (_1833.z + (-0.5));
        float _1879 = exp2((_1840.w + (-0.5)) * 20.0) * 2.0;
        float _1880 = _1879 * (_1840.x + (-0.5));
        float _1881 = _1879 * (_1840.y + (-0.5));
        float _1882 = _1879 * (_1840.z + (-0.5));
        float _1889 = exp2((_1847.w + (-0.5)) * 20.0) * 2.0;
        float _1890 = _1889 * (_1847.x + (-0.5));
        float _1891 = _1889 * (_1847.y + (-0.5));
        float _1892 = _1889 * (_1847.z + (-0.5));
        float _1893 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1894 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1895 = isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0));
        float _1896 = _1860 * 0.5;
        float _1897 = _1870 * 0.5;
        float _1898 = _1880 * 0.5;
        float _1899 = dot(vec3(_1896, _1897, _1898), vec3(_1896, _1897, _1898));
        float _1904 = (_1899 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1899);
        float _1912 = (dot(vec3(_1164, _1165, _1166), vec3(_1904 * _1896, _1904 * _1897, _1904 * _1898)) + 1.0) * 0.5;
        float _4813 = isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0));
        float _1921 = sqrt(((_1897 * _1897) + (_1896 * _1896)) + (_1898 * _1898)) / (_1893 + 9.9999997473787516355514526367188e-06);
        float _4824 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
        float _1922 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
        float _1923 = _1922 * 2.0;
        float _1927 = (1.0 - _1922) / (_1922 + 1.0);
        float _4835 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
        float _1928 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _1937 = ((((1.0 - _1928) * (_1923 + 2.0)) * exp2(log2(isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0))) * (_1923 + 1.0))) + _1928) * _1893;
        float _1938 = _1861 * 0.5;
        float _1939 = _1871 * 0.5;
        float _1940 = _1881 * 0.5;
        float _1941 = dot(vec3(_1938, _1939, _1940), vec3(_1938, _1939, _1940));
        float _1946 = (_1941 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1941);
        float _1954 = (dot(vec3(_1164, _1165, _1166), vec3(_1946 * _1938, _1946 * _1939, _1946 * _1940)) + 1.0) * 0.5;
        float _4846 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1963 = sqrt(((_1939 * _1939) + (_1938 * _1938)) + (_1940 * _1940)) / (_1894 + 9.9999997473787516355514526367188e-06);
        float _4857 = isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0));
        float _1964 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
        float _1965 = _1964 * 2.0;
        float _1969 = (1.0 - _1964) / (_1964 + 1.0);
        float _4868 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
        float _1970 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
        float _1979 = ((((1.0 - _1970) * (_1965 + 2.0)) * exp2(log2(isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_1965 + 1.0))) + _1970) * _1894;
        float _1980 = _1862 * 0.5;
        float _1981 = _1872 * 0.5;
        float _1982 = _1882 * 0.5;
        float _1983 = dot(vec3(_1980, _1981, _1982), vec3(_1980, _1981, _1982));
        float _1988 = (_1983 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1983);
        float _1996 = (dot(vec3(_1164, _1165, _1166), vec3(_1988 * _1980, _1988 * _1981, _1988 * _1982)) + 1.0) * 0.5;
        float _4879 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _2005 = sqrt(((_1981 * _1981) + (_1980 * _1980)) + (_1982 * _1982)) / (_1895 + 9.9999997473787516355514526367188e-06);
        float _4890 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0));
        float _2006 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
        float _2007 = _2006 * 2.0;
        float _2011 = (1.0 - _2006) / (_2006 + 1.0);
        float _4901 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
        float _2012 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
        float _2021 = ((((1.0 - _2012) * (_2007 + 2.0)) * exp2(log2(isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0))) * (_2007 + 1.0))) + _2012) * _1895;
        _2029 = _1862;
        _2030 = _1861;
        _2031 = _1860;
        _2032 = _1872;
        _2033 = _1871;
        _2034 = _1870;
        _2035 = _1882;
        _2036 = _1881;
        _2037 = _1880;
        _2038 = _1895;
        _2039 = _1894;
        _2040 = _1893;
        _2041 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0)));
        _2042 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0)));
        _2043 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0)));
    }
    else
    {
        _2029 = _1725;
        _2030 = _1725;
        _2031 = _1725;
        _2032 = _1725;
        _2033 = _1725;
        _2034 = _1725;
        _2035 = _1725;
        _2036 = _1725;
        _2037 = _1725;
        _2038 = _1725;
        _2039 = _1725;
        _2040 = _1725;
        _2041 = 0.0;
        _2042 = 0.0;
        _2043 = 0.0;
    }
    float _2053 = (cbModelParam._m0[1u].x * (_2041 - _1737)) + _1737;
    float _2054 = (cbModelParam._m0[1u].x * (_2042 - _1738)) + _1738;
    float _2055 = (cbModelParam._m0[1u].x * (_2043 - _1739)) + _1739;
    float _2076 = fma(_2055, cbSceneParam._m0[89u].z, fma(_2054, cbSceneParam._m0[89u].y, _2053 * cbSceneParam._m0[89u].x));
    float _2079 = fma(_2055, cbSceneParam._m0[90u].z, fma(_2054, cbSceneParam._m0[90u].y, _2053 * cbSceneParam._m0[90u].x));
    float _2082 = fma(_2055, cbSceneParam._m0[91u].z, fma(_2054, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2053));
    float _2095 = _1369 * 0.5;
    float _2096 = _1370 * 0.5;
    float _2097 = _1371 * 0.5;
    float _2098 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_2031, _2034, _2037, _2040));
    float _2101 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_2030, _2033, _2036, _2039));
    float _2104 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_2029, _2032, _2035, _2038));
    float _2138;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2111 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_1724, _1728, _1731, _1734));
        float _2115 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_1726, _1729, _1732, _1735));
        float _2119 = dot(vec4(_2095, _2096, _2097, 1.0), vec4(_1727, _1730, _1733, _1736));
        float _2126 = dot(vec4(cbModelParam._m0[39u]), vec4(_2095, _2096, _2097, 1.0));
        _2138 = dot(vec3(isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0)), isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0)), isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2126) ? 0.0 : (isnan(0.0) ? _2126 : max(0.0, _2126))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2138 = 1.0;
    }
    float _2149;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2140 = dot(vec4(cbModelParam._m0[40u]), vec4(_2095, _2096, _2097, 1.0));
        _2149 = dot(vec3(isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0)), isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0)), isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2140) ? 0.0 : (isnan(0.0) ? _2140 : max(0.0, _2140))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2149 = 1.0;
    }
    float _2153 = (_2149 * cbModelParam._m0[1u].x) + (_2138 * (1.0 - cbModelParam._m0[1u].x));
    float _2163 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1168);
    float _2164 = isnan(_2163) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2163 : min(cbModelParam._m0[25u].z, _2163));
    float _2244;
    float _2246;
    float _2248;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2211 = fma(_1428, cbModelParam._m0[13u].z, fma(_1424, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1420)) + cbModelParam._m0[13u].w;
        float _2215 = fma(_1428, cbModelParam._m0[14u].z, fma(_1424, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1420)) + cbModelParam._m0[14u].w;
        float _2219 = fma(_1428, cbModelParam._m0[15u].z, fma(_1424, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1420)) + cbModelParam._m0[15u].w;
        float _2222 = fma(_1371, cbModelParam._m0[13u].z, fma(_1370, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1369));
        float _2225 = fma(_1371, cbModelParam._m0[14u].z, fma(_1370, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1369));
        float _2228 = fma(_1371, cbModelParam._m0[15u].z, fma(_1370, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1369));
        float _2256;
        if (_2222 > 0.0)
        {
            _2256 = abs((1.0 - _2211) / _2222);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2222 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2211 + 1.0) / _2222);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2256 = frontier_phi_14_12_ladder;
        }
        float _2464;
        if (_2225 > 0.0)
        {
            _2464 = abs((1.0 - _2215) / _2225);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2225 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2215 + 1.0) / _2225);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2464 = frontier_phi_23_19_ladder;
        }
        float _2910;
        if (_2228 > 0.0)
        {
            _2910 = abs((1.0 - _2219) / _2228);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2228 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2219 + 1.0) / _2228);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2910 = frontier_phi_35_30_ladder;
        }
        float _2912 = isnan(_2464) ? _2256 : (isnan(_2256) ? _2464 : min(_2256, _2464));
        float _2913 = isnan(_2910) ? _2912 : (isnan(_2912) ? _2910 : min(_2912, _2910));
        float _2917 = (_2913 * _2222) + _2211;
        float _2918 = (_2913 * _2225) + _2215;
        float _2919 = (_2913 * _2228) + _2219;
        float _2920 = _2913 * 9.9999997473787516355514526367188e-05;
        float _2922 = (-1.0) - _2920;
        float _2924 = _2920 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2919 > _2924) || ((_2919 < _2922) || ((_2918 > _2924) || ((_2918 < _2922) || ((_2917 < _2922) || (_2917 > _2924))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3296 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2919, cbModelParam._m0[9u].z, fma(_2918, cbModelParam._m0[9u].y, _2917 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2919, cbModelParam._m0[10u].z, fma(_2918, cbModelParam._m0[10u].y, _2917 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2919, cbModelParam._m0[11u].z, fma(_2918, cbModelParam._m0[11u].y, _2917 * cbModelParam._m0[11u].x))), _2164);
            frontier_phi_13_35_ladder = _3296.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _3296.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _3296.x * cbModelParam._m0[1u].y;
        }
        _2244 = frontier_phi_13_35_ladder_2;
        _2246 = frontier_phi_13_35_ladder_1;
        _2248 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2232 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1369, _1370, _1371), _2164);
        _2244 = _2232.x * cbModelParam._m0[1u].y;
        _2246 = _2232.y * cbModelParam._m0[1u].y;
        _2248 = _2232.z * cbModelParam._m0[1u].y;
    }
    float _2252 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1168);
    float _2253 = isnan(_2252) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2252 : min(cbModelParam._m0[25u].w, _2252));
    float _2342;
    float _2344;
    float _2346;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2306 = fma(_1428, cbModelParam._m0[21u].z, fma(_1424, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1420)) + cbModelParam._m0[21u].w;
        float _2310 = fma(_1428, cbModelParam._m0[22u].z, fma(_1424, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1420)) + cbModelParam._m0[22u].w;
        float _2314 = fma(_1428, cbModelParam._m0[23u].z, fma(_1424, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1420)) + cbModelParam._m0[23u].w;
        float _2317 = fma(_1371, cbModelParam._m0[21u].z, fma(_1370, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1369));
        float _2320 = fma(_1371, cbModelParam._m0[22u].z, fma(_1370, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1369));
        float _2323 = fma(_1371, cbModelParam._m0[23u].z, fma(_1370, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1369));
        float _2469;
        if (_2317 > 0.0)
        {
            _2469 = abs((1.0 - _2306) / _2317);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2317 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2306 + 1.0) / _2317);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2469 = frontier_phi_25_21_ladder;
        }
        float _2937;
        if (_2320 > 0.0)
        {
            _2937 = abs((1.0 - _2310) / _2320);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2320 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2310 + 1.0) / _2320);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2937 = frontier_phi_37_32_ladder;
        }
        float _3460;
        if (_2323 > 0.0)
        {
            _3460 = abs((1.0 - _2314) / _2323);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_2323 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_2314 + 1.0) / _2323);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _3460 = frontier_phi_49_44_ladder;
        }
        float _3462 = isnan(_2937) ? _2469 : (isnan(_2469) ? _2937 : min(_2469, _2937));
        float _3463 = isnan(_3460) ? _3462 : (isnan(_3462) ? _3460 : min(_3462, _3460));
        float _3467 = (_3463 * _2317) + _2306;
        float _3468 = (_3463 * _2320) + _2310;
        float _3469 = (_3463 * _2323) + _2314;
        float _3470 = _3463 * 9.9999997473787516355514526367188e-05;
        float _3471 = (-1.0) - _3470;
        float _3473 = _3470 + 1.0;
        float frontier_phi_22_49_ladder;
        float frontier_phi_22_49_ladder_1;
        float frontier_phi_22_49_ladder_2;
        if ((_3469 > _3473) || ((_3469 < _3471) || ((_3468 > _3473) || ((_3468 < _3471) || ((_3467 < _3471) || (_3467 > _3473))))))
        {
            frontier_phi_22_49_ladder = 0.0;
            frontier_phi_22_49_ladder_1 = 0.0;
            frontier_phi_22_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3590 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3469, cbModelParam._m0[17u].z, fma(_3468, cbModelParam._m0[17u].y, _3467 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3469, cbModelParam._m0[18u].z, fma(_3468, cbModelParam._m0[18u].y, _3467 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3469, cbModelParam._m0[19u].z, fma(_3468, cbModelParam._m0[19u].y, _3467 * cbModelParam._m0[19u].x))), _2253);
            frontier_phi_22_49_ladder = _3590.z * cbModelParam._m0[1u].z;
            frontier_phi_22_49_ladder_1 = _3590.y * cbModelParam._m0[1u].z;
            frontier_phi_22_49_ladder_2 = _3590.x * cbModelParam._m0[1u].z;
        }
        _2342 = frontier_phi_22_49_ladder_2;
        _2344 = frontier_phi_22_49_ladder_1;
        _2346 = frontier_phi_22_49_ladder;
    }
    else
    {
        vec4 _2326 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1369, _1370, _1371), _2253);
        _2342 = _2326.x * cbModelParam._m0[1u].z;
        _2344 = _2326.y * cbModelParam._m0[1u].z;
        _2346 = _2326.z * cbModelParam._m0[1u].z;
    }
    float _2358 = ((((1.0 - _1389) * ((_1377 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1389 * _1377)) * _1348;
    float _2359 = _2358 * ((cbModelParam._m0[1u].w * (_2342 - _2244)) + _2244);
    float _2360 = _2358 * ((cbModelParam._m0[1u].w * (_2344 - _2246)) + _2246);
    float _2361 = _2358 * ((cbModelParam._m0[1u].w * (_2346 - _2248)) + _2248);
    float _2364 = fma(_2361, cbSceneParam._m0[89u].z, fma(_2360, cbSceneParam._m0[89u].y, _2359 * cbSceneParam._m0[89u].x));
    float _2367 = fma(_2361, cbSceneParam._m0[90u].z, fma(_2360, cbSceneParam._m0[90u].y, _2359 * cbSceneParam._m0[90u].x));
    float _2370 = fma(_2361, cbSceneParam._m0[91u].z, fma(_2360, cbSceneParam._m0[91u].y, _2359 * cbSceneParam._m0[91u].x));
    float _2389 = (cbSceneParam._m0[88u].y * (1.0 - _1168)) + cbSceneParam._m0[88u].z;
    float _5027 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
    vec4 _2393 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1248, _1249), (isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0))) * 5.0);
    float _2409 = 1.0 - _2393.w;
    float _2443 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2447 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2451 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2455 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2456 = _2443 / _2455;
    float _2457 = _2447 / _2455;
    float _2458 = _2451 / _2455;
    float _2604;
    float _2605;
    float _2606;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2485 = ((uint(_2458 > cbSceneParam._m0[59u].y) + uint(_2458 > cbSceneParam._m0[59u].x)) + uint(_2458 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2486 = _2485 + 43u;
        uint _2494 = _2485 + 44u;
        uint _2502 = _2485 + 45u;
        uint _2510 = _2485 + 46u;
        float _2521 = fma(_2455, cbSceneParam._m0[_2486].w, fma(_2451, cbSceneParam._m0[_2486].z, fma(_2447, cbSceneParam._m0[_2486].y, _2443 * cbSceneParam._m0[_2486].x)));
        float _2525 = fma(_2455, cbSceneParam._m0[_2494].w, fma(_2451, cbSceneParam._m0[_2494].z, fma(_2447, cbSceneParam._m0[_2494].y, _2443 * cbSceneParam._m0[_2494].x)));
        float _2533 = fma(_2455, cbSceneParam._m0[_2510].w, fma(_2451, cbSceneParam._m0[_2510].z, fma(_2447, cbSceneParam._m0[_2510].y, _2443 * cbSceneParam._m0[_2510].x)));
        float _2537 = cbSceneParam._m0[33u].z * _2533;
        float _2539 = cbSceneParam._m0[33u].w * _2533;
        float _2542 = fma(_2455, cbSceneParam._m0[_2502].w, fma(_2451, cbSceneParam._m0[_2502].z, fma(_2447, cbSceneParam._m0[_2502].y, _2443 * cbSceneParam._m0[_2502].x))) / _2533;
        float _2590 = (cbSceneParam._m0[33u].x - sqrt(((_2457 * _2457) + (_2456 * _2456)) + (_2458 * _2458))) * cbSceneParam._m0[33u].y;
        float _5038 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
        float _2597 = (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2537 + _2521) / _2533, (_2539 + _2525) / _2533), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2539 + _2521) / _2533, (_2525 - _2537) / _2533), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2521 - _2537) / _2533, (_2525 - _2539) / _2533), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2521 - _2539) / _2533, (_2537 + _2525) / _2533), _2542), 0.0)).x), vec4(0.25)));
        _2604 = 1.0 - (_2597 * cbSceneParam._m0[34u].x);
        _2605 = 1.0 - (_2597 * cbSceneParam._m0[34u].y);
        _2606 = 1.0 - (_2597 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2604 = 1.0;
        _2605 = 1.0;
        _2606 = 1.0;
    }
    float _2670;
    float _2672;
    float _2674;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2658 = fma(_2455, cbSceneParam._m0[63u].w, fma(_2451, cbSceneParam._m0[63u].z, fma(_2447, cbSceneParam._m0[63u].y, _2443 * cbSceneParam._m0[63u].x)));
        float _2659 = fma(_2455, cbSceneParam._m0[60u].w, fma(_2451, cbSceneParam._m0[60u].z, fma(_2447, cbSceneParam._m0[60u].y, _2443 * cbSceneParam._m0[60u].x))) / _2658;
        float _2660 = fma(_2455, cbSceneParam._m0[61u].w, fma(_2451, cbSceneParam._m0[61u].z, fma(_2447, cbSceneParam._m0[61u].y, _2443 * cbSceneParam._m0[61u].x))) / _2658;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2659 >= cbSceneParam._m0[64u].x) && (_2660 >= cbSceneParam._m0[64u].y)) && (_2659 <= cbSceneParam._m0[64u].z)) && (_2660 <= cbSceneParam._m0[64u].w))
        {
            float _2950 = fma(_2455, cbSceneParam._m0[62u].w, fma(_2451, cbSceneParam._m0[62u].z, fma(_2447, cbSceneParam._m0[62u].y, _2443 * cbSceneParam._m0[62u].x))) / _2658;
            float _2954 = isnan(cbSceneParam._m0[41u].w) ? _2950 : (isnan(_2950) ? cbSceneParam._m0[41u].w : max(_2950, cbSceneParam._m0[41u].w));
            float _2997 = (cbSceneParam._m0[33u].x - sqrt(((_2457 * _2457) + (_2456 * _2456)) + (_2458 * _2458))) * cbSceneParam._m0[33u].y;
            float _5054 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
            float _3004 = (isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2659, cbSceneParam._m0[33u].w + _2660), _2954), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2659, _2660 - cbSceneParam._m0[33u].z), _2954), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2659 - cbSceneParam._m0[33u].z, _2660 - cbSceneParam._m0[33u].w), _2954), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2659 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2660), _2954), 0.0)).x), vec4(0.25)));
            float _3008 = 1.0 - (_3004 * cbSceneParam._m0[34u].x);
            float _3009 = 1.0 - (_3004 * cbSceneParam._m0[34u].y);
            float _3010 = 1.0 - (_3004 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_3010) ? _2606 : (isnan(_2606) ? _3010 : min(_2606, _3010));
            frontier_phi_34_33_ladder_1 = isnan(_3009) ? _2605 : (isnan(_2605) ? _3009 : min(_2605, _3009));
            frontier_phi_34_33_ladder_2 = isnan(_3008) ? _2604 : (isnan(_2604) ? _3008 : min(_2604, _3008));
        }
        else
        {
            frontier_phi_34_33_ladder = _2606;
            frontier_phi_34_33_ladder_1 = _2605;
            frontier_phi_34_33_ladder_2 = _2604;
        }
        _2670 = frontier_phi_34_33_ladder_2;
        _2672 = frontier_phi_34_33_ladder_1;
        _2674 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2670 = _2604;
        _2672 = _2605;
        _2674 = _2606;
    }
    uvec4 _2679 = floatBitsToUint(cbInstanceData._m0[_1323 + 5u]);
    uint _2681 = _2679.x * 14u;
    uint _2682 = _2681 + 13u;
    float _2687 = _1348 + (-1.0);
    float _2690 = (cbLight._m0[_2682].x * _2687) + 1.0;
    float _2691 = (cbLight._m0[_2682].y * _2687) + 1.0;
    uint _2692 = _2681 + 5u;
    float _2698 = isnan(1.0) ? _2691 : (isnan(_2691) ? 1.0 : min(_2691, 1.0));
    uint _2702 = _2681 + 4u;
    float _2711 = isnan(1.0) ? _2690 : (isnan(_2690) ? 1.0 : min(_2690, 1.0));
    uint _2715 = _2681 | 1u;
    float _2726 = dot(vec3(cbLight._m0[_2681].xyz), vec3(_1284, _1285, _1286));
    float _2729 = dot(vec3(cbLight._m0[_2715].xyz), vec3(_1284, _1285, _1286));
    float _5090 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
    float _5101 = isnan(0.0) ? _2729 : (isnan(_2729) ? 0.0 : max(_2729, 0.0));
    float _2734 = (isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0))) * 0.3183098733425140380859375;
    float _2736 = (isnan(1.0) ? _5101 : (isnan(_5101) ? 1.0 : min(_5101, 1.0))) * 0.3183098733425140380859375;
    float _2743 = ((cbLight._m0[_2692].x * _2698) * _2736) + (((cbLight._m0[_2702].x * _2670) * _2711) * _2734);
    float _2744 = ((_2698 * cbLight._m0[_2692].y) * _2736) + (((cbLight._m0[_2702].y * _2672) * _2711) * _2734);
    float _2745 = ((_2698 * cbLight._m0[_2692].z) * _2736) + (((cbLight._m0[_2702].z * _2674) * _2711) * _2734);
    uint _2747 = _2681 + 8u;
    float _2760 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2681].w)) * _1168) * 0.949999988079071044921875);
    float _2761 = _2760 * _2760;
    float _2762 = cbLight._m0[_2681].x + _1241;
    float _2763 = cbLight._m0[_2681].y + _1242;
    float _2764 = cbLight._m0[_2681].z + _1243;
    float _2768 = inversesqrt(dot(vec3(_2762, _2763, _2764), vec3(_2762, _2763, _2764)));
    float _2769 = _2768 * _2762;
    float _2770 = _2768 * _2763;
    float _2771 = _2768 * _2764;
    float _2772 = dot(vec3(_1284, _1285, _1286), vec3(cbLight._m0[_2681].xyz));
    float _5112 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
    float _2775 = isnan(1.0) ? _5112 : (isnan(_5112) ? 1.0 : min(_5112, 1.0));
    float _2776 = dot(vec3(_1284, _1285, _1286), vec3(_1241, _1242, _1243));
    float _5123 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
    float _2779 = isnan(1.0) ? _5123 : (isnan(_5123) ? 1.0 : min(_5123, 1.0));
    float _2780 = dot(vec3(_1284, _1285, _1286), vec3(_2769, _2770, _2771));
    float _5134 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
    float _2783 = isnan(1.0) ? _5134 : (isnan(_5134) ? 1.0 : min(_5134, 1.0));
    float _2784 = dot(vec3(cbLight._m0[_2681].xyz), vec3(_2769, _2770, _2771));
    float _5145 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
    float _2788 = _2761 * _2761;
    float _2792 = ((_2783 * _2783) * (_2788 + (-1.0))) + 1.0;
    float _2803 = (exp2(log2(1.0 - (isnan(1.0) ? _5145 : (isnan(_5145) ? 1.0 : min(_5145, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2804 = 1.0 - _2761;
    float _2815 = (0.5 / (((_2779 * ((_2775 * _2804) + _2761)) + 9.9999999392252902907785028219223e-09) + (((_2779 * _2804) + _2761) * _2775))) * _2775;
    float _5156 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
    float _2817 = (isnan(1.0) ? _5156 : (isnan(_5156) ? 1.0 : min(_5156, 1.0))) * (_2788 / ((_2792 * _2792) * 3.141590118408203125));
    uint _2831 = _2681 + 9u;
    float _2842 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2715].w)) * _1168) * 0.949999988079071044921875);
    float _2843 = _2842 * _2842;
    float _2844 = cbLight._m0[_2715].x + _1241;
    float _2845 = cbLight._m0[_2715].y + _1242;
    float _2846 = cbLight._m0[_2715].z + _1243;
    float _2850 = inversesqrt(dot(vec3(_2844, _2845, _2846), vec3(_2844, _2845, _2846)));
    float _2851 = _2850 * _2844;
    float _2852 = _2850 * _2845;
    float _2853 = _2850 * _2846;
    float _2854 = dot(vec3(_1284, _1285, _1286), vec3(cbLight._m0[_2715].xyz));
    float _5167 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
    float _2857 = isnan(1.0) ? _5167 : (isnan(_5167) ? 1.0 : min(_5167, 1.0));
    float _2858 = dot(vec3(_1284, _1285, _1286), vec3(_2851, _2852, _2853));
    float _5178 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
    float _2861 = isnan(1.0) ? _5178 : (isnan(_5178) ? 1.0 : min(_5178, 1.0));
    float _2862 = dot(vec3(cbLight._m0[_2715].xyz), vec3(_2851, _2852, _2853));
    float _5189 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
    float _2866 = _2843 * _2843;
    float _2870 = ((_2861 * _2861) * (_2866 + (-1.0))) + 1.0;
    float _2879 = (exp2(log2(1.0 - (isnan(1.0) ? _5189 : (isnan(_5189) ? 1.0 : min(_5189, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2880 = 1.0 - _2843;
    float _2890 = (0.5 / (((_2779 * ((_2857 * _2880) + _2843)) + 9.9999999392252902907785028219223e-09) + (((_2779 * _2880) + _2843) * _2857))) * _2857;
    float _5200 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
    float _2892 = (isnan(1.0) ? _5200 : (isnan(_5200) ? 1.0 : min(_5200, 1.0))) * (_2866 / ((_2870 * _2870) * 3.141590118408203125));
    float _2902 = (((_2879 * cbLight._m0[_2831].x) * _2892) * _2698) + ((((cbLight._m0[_2747].x * _2670) * _2803) * _2817) * _2711);
    float _2903 = (((_2879 * cbLight._m0[_2831].y) * _2892) * _2698) + ((((cbLight._m0[_2747].y * _2672) * _2803) * _2817) * _2711);
    float _2904 = (((_2879 * cbLight._m0[_2831].z) * _2892) * _2698) + ((((cbLight._m0[_2747].z * _2674) * _2803) * _2817) * _2711);
    float _3067;
    float _3069;
    float _3071;
    float _3073;
    float _3075;
    float _3077;
    if (_2679.y == 0u)
    {
        uvec4 _3022 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3023 = _3022.x;
        uint _3034 = uint((float(_3022.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1249) / _3023))) + floor(float(uint(cbSceneParam._m0[85u].x * _1248) / _3023)));
        float _3044 = (log2(_2458 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3045 = isnan(0.0) ? _3044 : (isnan(_3044) ? 0.0 : max(_3044, 0.0));
        uint _3048 = uint(isnan(14.0) ? _3045 : (isnan(_3045) ? 14.0 : min(_3045, 14.0)));
        uvec4 _3053 = texelFetch(g_lightClusterGridBuffer, int(((_3048 << 2u) + (_3034 << 6u)) >> 2u));
        uint _3054 = _3053.x;
        uint _3055 = _3022.z;
        float _3305;
        float _3307;
        float _3309;
        float _3311;
        float _3313;
        float _3315;
        if (((((1u << ((_3055 >> 4u) & 15u)) + 4294967295u) & _3054) == 0u) || ((_3055 & 240u) == 0u))
        {
            _3305 = 0.0;
            _3307 = 0.0;
            _3309 = 0.0;
            _3311 = 0.0;
            _3313 = 0.0;
            _3315 = 0.0;
        }
        else
        {
            float _3306;
            float _3308;
            float _3310;
            float _3312;
            float _3314;
            float _3316;
            float _3518 = 0.0;
            float _3519 = 0.0;
            float _3520 = 0.0;
            float _3521 = 0.0;
            float _3522 = 0.0;
            float _3523 = 0.0;
            uint _3524 = 0u;
            uint _3533;
            bool _3534;
            for (;;)
            {
                _3533 = texelFetch(g_lightClassification, int((((_3048 << 5u) + (_3034 << 9u)) + (_3524 << 2u)) >> 2u)).x;
                _3534 = _3533 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_3534)
                {
                    frontier_phi_58_pred = _3521;
                    frontier_phi_58_pred_1 = _3520;
                    frontier_phi_58_pred_2 = _3519;
                    frontier_phi_58_pred_3 = _3518;
                    frontier_phi_58_pred_4 = _3522;
                    frontier_phi_58_pred_5 = _3523;
                }
                else
                {
                    float _3663;
                    float _3664;
                    float _3665;
                    float _3666;
                    float _3667;
                    float _3668;
                    uint _3669;
                    _3663 = _3518;
                    _3664 = _3519;
                    _3665 = _3520;
                    _3666 = _3521;
                    _3667 = _3522;
                    _3668 = _3523;
                    _3669 = _3533;
                    float _3595;
                    float _3596;
                    float _3597;
                    float _3598;
                    float _3599;
                    float _3600;
                    for (;;)
                    {
                        uint _3673 = uint(findLSB(_3669)) + (_3524 << 5u);
                        uint _3670 = (_3669 + 4294967295u) & _3669;
                        uint _3675 = _3673 * 48u;
                        vec4 _3689 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3675)).x, texelFetch(g_PointLightRenderingBuffer, int(_3675 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3675 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3675 + 3u)).x));
                        uint _3695 = (_3673 * 48u) + 4u;
                        vec4 _3708 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3695)).x, texelFetch(g_PointLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3695 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3695 + 3u)).x));
                        uint _3714 = (_3673 * 48u) + 8u;
                        vec3 _3725 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3714)).x, texelFetch(g_PointLightRenderingBuffer, int(_3714 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3714 + 2u)).x));
                        float _3729 = _3689.x - _2456;
                        float _3730 = _3689.y - _2457;
                        float _3731 = _3689.z - _2458;
                        float _3732 = dot(vec3(_3729, _3730, _3731), vec3(_3729, _3730, _3731));
                        float _3735 = inversesqrt(_3732);
                        float _3736 = _3735 * _3729;
                        float _3737 = _3735 * _3730;
                        float _3738 = _3735 * _3731;
                        float _3739 = dot(vec3(_1304, _1307, _1310), vec3(_3736, _3737, _3738));
                        float _3744 = 1.0 - (_3732 * _3689.w);
                        float _5221 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                        float _3745 = isnan(1.0) ? _5221 : (isnan(_5221) ? 1.0 : min(_5221, 1.0));
                        float _3746 = sqrt(_3732) * _3708.w;
                        float _3749 = 1.39999997615814208984375 / (_3746 + 1.39999997615814208984375);
                        float _3750 = _3749 * _3749;
                        float _3753 = ((1.0 - _3750) * _3739) + _3750;
                        float _3756 = _3746 * _3746;
                        float _3760 = ((isnan(0.0) ? _3753 : (isnan(_3753) ? 0.0 : max(_3753, 0.0))) * _3745) / ((_3756 * 0.699999988079071044921875) + 1.0);
                        float _3764 = (-0.0) - _2456;
                        float _3765 = (-0.0) - _2457;
                        float _3766 = (-0.0) - _2458;
                        float _3770 = inversesqrt(dot(vec3(_3764, _3765, _3766), vec3(_3764, _3765, _3766)));
                        float _3771 = _3770 * _3764;
                        float _3772 = _3770 * _3765;
                        float _3773 = _3770 * _3766;
                        float _3780 = exp2(log2(1.0 / ((_3756 * 3.5) + 5.0)) * 0.25);
                        float _3781 = 1.0 - _1377;
                        float _3788 = sqrt(1.0 - ((1.0 - (_3781 * _3781)) * (1.0 - (_3780 * _3780))));
                        float _3789 = _3788 * _3788;
                        float _3790 = _3789 * _3789;
                        float _3791 = _3771 + _3736;
                        float _3792 = _3772 + _3737;
                        float _3793 = _3773 + _3738;
                        float _3797 = inversesqrt(dot(vec3(_3791, _3792, _3793), vec3(_3791, _3792, _3793)));
                        float _3801 = dot(vec3(_1304, _1307, _1310), vec3(_3771, _3772, _3773));
                        float _5237 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                        float _3804 = isnan(1.0) ? _5237 : (isnan(_5237) ? 1.0 : min(_5237, 1.0));
                        float _3805 = dot(vec3(_1304, _1307, _1310), vec3(_3797 * _3791, _3797 * _3792, _3797 * _3793));
                        float _5248 = isnan(0.0) ? _3805 : (isnan(_3805) ? 0.0 : max(_3805, 0.0));
                        float _3808 = isnan(1.0) ? _5248 : (isnan(_5248) ? 1.0 : min(_5248, 1.0));
                        float _3812 = ((_3808 * _3808) * (_3790 + (-1.0))) + 1.0;
                        float _3813 = _3749 * _3789;
                        float _3814 = _3813 * _3813;
                        float _3817 = ((1.0 - _3814) * _3739) + _3814;
                        float _5259 = isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0));
                        float _3818 = isnan(1.0) ? _5259 : (isnan(_5259) ? 1.0 : min(_5259, 1.0));
                        float _3819 = 1.0 - _3789;
                        float _3829 = (0.5 / (((_3818 * ((_3804 * _3819) + _3789)) + 9.9999999392252902907785028219223e-09) + (((_3818 * _3819) + _3789) * _3804))) * _3818;
                        float _5270 = isnan(0.0) ? _3829 : (isnan(_3829) ? 0.0 : max(_3829, 0.0));
                        float _3840 = (((_3790 * 3.1415927410125732421875) * (isnan(1.0) ? _5270 : (isnan(_5270) ? 1.0 : min(_5270, 1.0)))) / ((_3812 * _3812) * ((_3756 * 2.1991131305694580078125) + 3.141590118408203125))) * _3745;
                        _3598 = (_3760 * _3708.x) + _3666;
                        _3599 = (_3760 * _3708.y) + _3667;
                        _3600 = (_3760 * _3708.z) + _3668;
                        _3595 = (_3840 * _3725.x) + _3663;
                        _3596 = (_3840 * _3725.y) + _3664;
                        _3597 = (_3840 * _3725.z) + _3665;
                        if (_3670 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3663 = _3595;
                            _3664 = _3596;
                            _3665 = _3597;
                            _3666 = _3598;
                            _3667 = _3599;
                            _3668 = _3600;
                            _3669 = _3670;
                        }
                    }
                    frontier_phi_58_pred = _3598;
                    frontier_phi_58_pred_1 = _3597;
                    frontier_phi_58_pred_2 = _3596;
                    frontier_phi_58_pred_3 = _3595;
                    frontier_phi_58_pred_4 = _3599;
                    frontier_phi_58_pred_5 = _3600;
                }
                _3312 = frontier_phi_58_pred;
                _3310 = frontier_phi_58_pred_1;
                _3308 = frontier_phi_58_pred_2;
                _3306 = frontier_phi_58_pred_3;
                _3314 = frontier_phi_58_pred_4;
                _3316 = frontier_phi_58_pred_5;
                uint _3525 = _3524 + 1u;
                if (_3525 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3518 = _3306;
                    _3519 = _3308;
                    _3520 = _3310;
                    _3521 = _3312;
                    _3522 = _3314;
                    _3523 = _3316;
                    _3524 = _3525;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3305 = _3306;
            _3307 = _3308;
            _3309 = _3310;
            _3311 = _3312;
            _3313 = _3314;
            _3315 = _3316;
        }
        uvec4 _3319 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3320 = _3319.z;
        uint _3322 = (_3320 >> 8u) & 15u;
        float _3486;
        float _3488;
        float _3490;
        float _3492;
        float _3494;
        float _3496;
        if (((4294967295u << _3322) & _3054) == 0u)
        {
            _3486 = _3305;
            _3488 = _3307;
            _3490 = _3309;
            _3492 = _3311;
            _3494 = _3313;
            _3496 = _3315;
        }
        else
        {
            float _3511 = inversesqrt(dot(vec3(_2456, _2457, _2458), vec3(_2456, _2457, _2458)));
            float _3512 = _3511 * _2456;
            float _3513 = _3511 * _2457;
            float _3514 = _3511 * _2458;
            float frontier_phi_51_52_ladder;
            float frontier_phi_51_52_ladder_1;
            float frontier_phi_51_52_ladder_2;
            float frontier_phi_51_52_ladder_3;
            float frontier_phi_51_52_ladder_4;
            float frontier_phi_51_52_ladder_5;
            if (_3322 < ((_3320 >> 12u) & 15u))
            {
                float _3487;
                float _3489;
                float _3491;
                float _3493;
                float _3495;
                float _3497;
                float _3646 = _3305;
                float _3647 = _3307;
                float _3648 = _3309;
                float _3649 = _3311;
                float _3650 = _3313;
                float _3651 = _3315;
                uint _3652 = _3322;
                uint _3661;
                bool _3662;
                for (;;)
                {
                    _3661 = texelFetch(g_lightClassification, int((((_3048 << 5u) + (_3034 << 9u)) + (_3652 << 2u)) >> 2u)).x;
                    _3662 = _3661 == 0u;
                    float frontier_phi_64_pred;
                    float frontier_phi_64_pred_1;
                    float frontier_phi_64_pred_2;
                    float frontier_phi_64_pred_3;
                    float frontier_phi_64_pred_4;
                    float frontier_phi_64_pred_5;
                    if (_3662)
                    {
                        frontier_phi_64_pred = _3649;
                        frontier_phi_64_pred_1 = _3648;
                        frontier_phi_64_pred_2 = _3647;
                        frontier_phi_64_pred_3 = _3646;
                        frontier_phi_64_pred_4 = _3651;
                        frontier_phi_64_pred_5 = _3650;
                    }
                    else
                    {
                        float _3845;
                        float _3846;
                        float _3847;
                        float _3848;
                        float _3849;
                        float _3850;
                        float _4138;
                        float _4139;
                        float _4140;
                        float _4141;
                        float _4142;
                        float _4143;
                        float _3858 = _3646;
                        float _3859 = _3647;
                        float _3860 = _3648;
                        float _3861 = _3649;
                        float _3862 = _3650;
                        float _3863 = _3651;
                        uint _3864 = _3661;
                        uint _3865;
                        vec4 _3890;
                        float _3891;
                        vec4 _3906;
                        vec3 _3918;
                        vec4 _3933;
                        vec4 _3948;
                        float _3994;
                        bool _3995;
                        for (;;)
                        {
                            uint _3875 = ((_3652 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3864));
                            _3865 = (_3864 + 4294967295u) & _3864;
                            uint _3877 = _3875 * 40u;
                            _3890 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3877)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 3u)).x));
                            _3891 = _3890.w;
                            uint _3893 = (_3875 * 40u) + 4u;
                            _3906 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3893)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 3u)).x));
                            uint _3908 = (_3875 * 40u) + 8u;
                            _3918 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3908)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3908 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3908 + 2u)).x));
                            uint _3920 = (_3875 * 40u) + 16u;
                            _3933 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3920)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3920 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3920 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3920 + 3u)).x));
                            uint _3935 = (_3875 * 40u) + 20u;
                            _3948 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3935)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3935 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3935 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3935 + 3u)).x));
                            uint _3950 = (_3875 * 40u) + 24u;
                            vec4 _3963 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3950)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 3u)).x));
                            uint _3969 = (_3875 * 40u) + 28u;
                            vec4 _3982 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3969)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3969 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3969 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3969 + 3u)).x));
                            _3994 = fma(_2458, _3982.z, fma(_2457, _3982.y, _3982.x * _2456)) + _3982.w;
                            _3995 = !((fma(_2458, _3963.z, fma(_2457, _3963.y, _3963.x * _2456)) + _3963.w) <= 0.0);
                            float frontier_phi_70_pred;
                            float frontier_phi_70_pred_1;
                            float frontier_phi_70_pred_2;
                            float frontier_phi_70_pred_3;
                            float frontier_phi_70_pred_4;
                            float frontier_phi_70_pred_5;
                            if (_3995)
                            {
                                float _4022 = _3890.x - _2456;
                                float _4023 = _3890.y - _2457;
                                float _4024 = _3890.z - _2458;
                                float _4025 = dot(vec3(_4022, _4023, _4024), vec3(_4022, _4023, _4024));
                                float _4028 = inversesqrt(_4025);
                                float _4029 = _4028 * _4022;
                                float _4030 = _4028 * _4023;
                                float _4031 = _4028 * _4024;
                                float _4035 = 1.0 - (_4025 / (_3891 * _3891));
                                float _5281 = isnan(0.0) ? _4035 : (isnan(_4035) ? 0.0 : max(_4035, 0.0));
                                float _4036 = isnan(1.0) ? _5281 : (isnan(_5281) ? 1.0 : min(_5281, 1.0));
                                float _4040 = sqrt(_4025) * _3906.w;
                                float _4042 = 1.39999997615814208984375 / (_4040 + 1.39999997615814208984375);
                                float _4043 = _4042 * _4042;
                                float _4046 = ((1.0 - _4043) * dot(vec3(_4029, _4030, _4031), vec3(_1304, _1307, _1310))) + _4043;
                                float _4049 = _4040 * _4040;
                                float _4053 = (fma(_2458, _3933.z, fma(_2457, _3933.y, _3933.x * _2456)) + _3933.w) / _3994;
                                float _4054 = (fma(_2458, _3948.z, fma(_2457, _3948.y, _3948.x * _2456)) + _3948.w) / _3994;
                                float _4058 = 1.0 - dot(vec2(_4053, _4054), vec2(_4053, _4054));
                                float _5297 = isnan(0.0) ? _4058 : (isnan(_4058) ? 0.0 : max(_4058, 0.0));
                                float _4059 = isnan(1.0) ? _5297 : (isnan(_5297) ? 1.0 : min(_5297, 1.0));
                                float _4060 = _4059 * (((isnan(0.0) ? _4046 : (isnan(_4046) ? 0.0 : max(_4046, 0.0))) * _4036) / ((_4049 * 0.699999988079071044921875) + 1.0));
                                float _4072 = exp2(log2(1.0 / ((_4049 * 3.5) + 5.0)) * 0.25);
                                float _4073 = 1.0 - _1377;
                                float _4080 = sqrt(1.0 - ((1.0 - (_4073 * _4073)) * (1.0 - (_4072 * _4072))));
                                float _4081 = _4080 * _4080;
                                float _4082 = _4081 * _4081;
                                float _4083 = _4029 - _3512;
                                float _4084 = _4030 - _3513;
                                float _4085 = _4031 - _3514;
                                float _4089 = inversesqrt(dot(vec3(_4083, _4084, _4085), vec3(_4083, _4084, _4085)));
                                float _4093 = dot(vec3(_1304, _1307, _1310), vec3((-0.0) - _3512, (-0.0) - _3513, (-0.0) - _3514));
                                float _5308 = isnan(0.0) ? _4093 : (isnan(_4093) ? 0.0 : max(_4093, 0.0));
                                float _4096 = isnan(1.0) ? _5308 : (isnan(_5308) ? 1.0 : min(_5308, 1.0));
                                float _4097 = dot(vec3(_1304, _1307, _1310), vec3(_4089 * _4083, _4089 * _4084, _4089 * _4085));
                                float _5319 = isnan(0.0) ? _4097 : (isnan(_4097) ? 0.0 : max(_4097, 0.0));
                                float _4100 = isnan(1.0) ? _5319 : (isnan(_5319) ? 1.0 : min(_5319, 1.0));
                                float _4104 = ((_4100 * _4100) * (_4082 + (-1.0))) + 1.0;
                                float _4105 = _4042 * _4081;
                                float _4106 = _4105 * _4105;
                                float _4112 = ((1.0 - _4106) * dot(vec3(_1304, _1307, _1310), vec3(_4029, _4030, _4031))) + _4106;
                                float _5330 = isnan(0.0) ? _4112 : (isnan(_4112) ? 0.0 : max(_4112, 0.0));
                                float _4113 = isnan(1.0) ? _5330 : (isnan(_5330) ? 1.0 : min(_5330, 1.0));
                                float _4114 = 1.0 - _4081;
                                float _4124 = (0.5 / (((_4113 * ((_4096 * _4114) + _4081)) + 9.9999999392252902907785028219223e-09) + (((_4113 * _4114) + _4081) * _4096))) * _4113;
                                float _5341 = isnan(0.0) ? _4124 : (isnan(_4124) ? 0.0 : max(_4124, 0.0));
                                float _4134 = (_4059 * _4036) * (((_4082 * 3.1415927410125732421875) * (isnan(1.0) ? _5341 : (isnan(_5341) ? 1.0 : min(_5341, 1.0)))) / ((_4104 * _4104) * ((_4049 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_70_pred = _4060 * _3906.x;
                                frontier_phi_70_pred_1 = _4134 * _3918.z;
                                frontier_phi_70_pred_2 = _4134 * _3918.y;
                                frontier_phi_70_pred_3 = _4134 * _3918.x;
                                frontier_phi_70_pred_4 = _4060 * _3906.z;
                                frontier_phi_70_pred_5 = _4060 * _3906.y;
                            }
                            else
                            {
                                frontier_phi_70_pred = 0.0;
                                frontier_phi_70_pred_1 = 0.0;
                                frontier_phi_70_pred_2 = 0.0;
                                frontier_phi_70_pred_3 = 0.0;
                                frontier_phi_70_pred_4 = 0.0;
                                frontier_phi_70_pred_5 = 0.0;
                            }
                            _4141 = frontier_phi_70_pred;
                            _4140 = frontier_phi_70_pred_1;
                            _4139 = frontier_phi_70_pred_2;
                            _4138 = frontier_phi_70_pred_3;
                            _4143 = frontier_phi_70_pred_4;
                            _4142 = frontier_phi_70_pred_5;
                            _3848 = _4141 + _3861;
                            _3849 = _4142 + _3862;
                            _3850 = _4143 + _3863;
                            _3845 = _4138 + _3858;
                            _3846 = _4139 + _3859;
                            _3847 = _4140 + _3860;
                            if (_3865 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3858 = _3845;
                                _3859 = _3846;
                                _3860 = _3847;
                                _3861 = _3848;
                                _3862 = _3849;
                                _3863 = _3850;
                                _3864 = _3865;
                                continue;
                            }
                        }
                        frontier_phi_64_pred = _3848;
                        frontier_phi_64_pred_1 = _3847;
                        frontier_phi_64_pred_2 = _3846;
                        frontier_phi_64_pred_3 = _3845;
                        frontier_phi_64_pred_4 = _3850;
                        frontier_phi_64_pred_5 = _3849;
                    }
                    _3493 = frontier_phi_64_pred;
                    _3491 = frontier_phi_64_pred_1;
                    _3489 = frontier_phi_64_pred_2;
                    _3487 = frontier_phi_64_pred_3;
                    _3497 = frontier_phi_64_pred_4;
                    _3495 = frontier_phi_64_pred_5;
                    uint _3653 = _3652 + 1u;
                    if (_3653 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3646 = _3487;
                        _3647 = _3489;
                        _3648 = _3491;
                        _3649 = _3493;
                        _3650 = _3495;
                        _3651 = _3497;
                        _3652 = _3653;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_51_52_ladder = _3497;
                frontier_phi_51_52_ladder_1 = _3495;
                frontier_phi_51_52_ladder_2 = _3491;
                frontier_phi_51_52_ladder_3 = _3489;
                frontier_phi_51_52_ladder_4 = _3493;
                frontier_phi_51_52_ladder_5 = _3487;
            }
            else
            {
                frontier_phi_51_52_ladder = _3315;
                frontier_phi_51_52_ladder_1 = _3313;
                frontier_phi_51_52_ladder_2 = _3309;
                frontier_phi_51_52_ladder_3 = _3307;
                frontier_phi_51_52_ladder_4 = _3311;
                frontier_phi_51_52_ladder_5 = _3305;
            }
            _3486 = frontier_phi_51_52_ladder_5;
            _3488 = frontier_phi_51_52_ladder_3;
            _3490 = frontier_phi_51_52_ladder_2;
            _3492 = frontier_phi_51_52_ladder_4;
            _3494 = frontier_phi_51_52_ladder_1;
            _3496 = frontier_phi_51_52_ladder;
        }
        float _3501 = isnan(1.0) ? _1348 : (isnan(_1348) ? 1.0 : min(_1348, 1.0));
        _3067 = (_3501 * _3492) + _2743;
        _3069 = (_3501 * _3494) + _2744;
        _3071 = (_3501 * _3496) + _2745;
        _3073 = ((_3486 * 0.039999999105930328369140625) * _3501) + _2902;
        _3075 = ((_3488 * 0.039999999105930328369140625) * _3501) + _2903;
        _3077 = ((_3490 * 0.039999999105930328369140625) * _3501) + _2904;
    }
    else
    {
        _3067 = _2743;
        _3069 = _2744;
        _3071 = _2745;
        _3073 = _2902;
        _3075 = _2903;
        _3077 = _2904;
    }
    uint _3083 = _1324 + uint(cbMatDynParam._m0[0u].w);
    float _3089 = cbInstanceData._m0[_3083].x * (_970 - (_970 * TEXCOORD_7.x));
    float _3090 = cbInstanceData._m0[_3083].y * (_972 - (_972 * TEXCOORD_7.y));
    float _3091 = cbInstanceData._m0[_3083].z * (_974 - (_974 * TEXCOORD_7.z));
    float _3104 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3105 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3106 = cbSceneParam._m0[86u].x * ((_1248 / cbSceneParam._m0[86u].x) + (((10.0 / (_1185 + 10.0)) * cbMtdParam._m0[20u].y) * dot(vec3(_1284, _1285, _1286), vec3(_231, _232, _233))));
    float _3107 = isnan(_3104) ? _3106 : (isnan(_3106) ? _3104 : min(_3106, _3104));
    float _3108 = isnan(_3105) ? _1249 : (isnan(_1249) ? _3105 : min(_1249, _3105));
    vec4 _3110 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3107, _3108), 0.0);
    float _3112 = _3110.x;
    bool _3132 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3112)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3112))) > _1185;
    float _3133 = _3132 ? _3107 : _1248;
    float _3134 = _3132 ? _3108 : _1249;
    vec4 _3136 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3133, _3134));
    vec4 _3141 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3133, _3134));
    float _3143 = _3141.x;
    float _3163 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3143)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3143))) - _1185;
    bool _3173 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3177 = (isnan(_3163) ? 0.0 : (isnan(0.0) ? _3163 : max(0.0, _3163))) * (-1.44269502162933349609375);
    float _5372 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
    float _5383 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
    float _5394 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
    float _3204 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _3207 = ((_3136.x * _3204) * exp2(_3177 * (_3173 ? 0.0 : (cbMtdParam._m0[39u].z + cbMtdParam._m0[38u].x)))) * cbSceneParam._m0[72u].w;
    float _3210 = ((_3136.y * _3204) * exp2(_3177 * (_3173 ? 0.0 : (cbMtdParam._m0[39u].w + cbMtdParam._m0[38u].y)))) * cbSceneParam._m0[72u].w;
    float _3213 = ((_3136.z * _3204) * exp2(_3177 * (_3173 ? 0.0 : (cbMtdParam._m0[40u].x + cbMtdParam._m0[38u].z)))) * cbSceneParam._m0[72u].w;
    float _3222 = ((_3089 + (((((_2358 * _2393.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0))) * _2153) * _2409)) + _3073) * cbPerFrame._m0[3u].x)) + _3207) + ((((isnan(1.0) ? _5372 : (isnan(_5372) ? 1.0 : min(_5372, 1.0))) * (_3067 + ((isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0))) * _1348))) - _3207) * _1106);
    float _3225 = ((_3090 + (((((_2358 * _2393.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0))) * _2153) * _2409)) + _3075) * cbPerFrame._m0[3u].x)) + _3210) + ((((isnan(1.0) ? _5383 : (isnan(_5383) ? 1.0 : min(_5383, 1.0))) * (_3069 + ((isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0))) * _1348))) - _3210) * _1106);
    float _3228 = ((_3091 + (((((_2358 * _2393.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0))) * _2153) * _2409)) + _3077) * cbPerFrame._m0[3u].x)) + _3213) + ((((isnan(1.0) ? _5394 : (isnan(_5394) ? 1.0 : min(_5394, 1.0))) * (_3071 + ((isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0))) * _1348))) - _3213) * _1106);
    float _5420 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3241 = isnan(1.0) ? _5420 : (isnan(_5420) ? 1.0 : min(_5420, 1.0));
    float _3251 = _1248 / cbSceneParam._m0[86u].x;
    float _3252 = _1249 / cbSceneParam._m0[86u].y;
    vec4 _3266 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3251, _3252, (log2((isnan(cbSceneParam._m0[77u].w) ? _1185 : (isnan(_1185) ? cbSceneParam._m0[77u].w : min(_1185, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3268 = _3266.x;
    float _3269 = _3266.y;
    float _3270 = _3266.z;
    float _3271 = _3266.w;
    float _3366;
    float _3368;
    float _3370;
    float _3372;
    if (_1185 > cbSceneParam._m0[78u].w)
    {
        float _3330 = isnan(_1185) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1185 : min(cbSceneParam._m0[80u].w, _1185));
        float _3331 = _3330 / _1185;
        float _3342 = _3331 * _1234;
        float _3343 = _1235 * _3331;
        float _3344 = (-0.0) - _3343;
        float _3345 = _3331 * _1236;
        float _3347 = (cbSceneParam._m0[77u].w * _3344) / _3330;
        float _3348 = _3347 + cbSceneParam._m0[79u].w;
        float _3349 = cbSceneParam._m0[79u].w - _3343;
        float _3355 = sqrt(((_3342 * _3342) + (_3343 * _3343)) + (_3345 * _3345));
        float _3358 = (1.0 - (cbSceneParam._m0[77u].w / _3330)) * _3355;
        float _3363 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3364 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3608;
        if (abs((_3344 - _3347) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3608 = ((((_3348 > 0.0) ? exp2(_3363 * _3348) : (2.0 - exp2(_3364 * _3348))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3358;
        }
        else
        {
            float _3547 = 1.0 / cbSceneParam._m0[80u].x;
            float _3548 = isnan(_3349) ? _3348 : (isnan(_3348) ? _3349 : max(_3348, _3349));
            float _3549 = isnan(_3349) ? _3348 : (isnan(_3348) ? _3349 : min(_3348, _3349));
            float _3558 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : min(_3548, 0.0));
            float _3559 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : min(_3549, 0.0));
            _3608 = ((abs(_3355 / _3344) * cbSceneParam._m0[80u].y) * ((((_3558 - _3559) * 2.0) - ((exp2(_3363 * (isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0)))) - exp2(_3363 * (isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0))))) * _3547)) - ((exp2(_3364 * _3558) - exp2(_3364 * _3559)) * _3547))) + (_3358 * cbSceneParam._m0[80u].z);
        }
        vec4 _3610 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3251, _3252, 1.0), 0.0);
        float _3619 = exp2((_3608 * (-1.44269502162933349609375)) * (1.0 - _3610.w));
        float _3620 = log2(_3619);
        float _3636 = log2(_3271);
        _3366 = (exp2(_3636 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3620 * cbSceneParam._m0[78u].x)) * _3610.x) / cbSceneParam._m0[78u].x)) + _3268;
        _3368 = (exp2(_3636 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3620 * cbSceneParam._m0[78u].y)) * _3610.y) / cbSceneParam._m0[78u].y)) + _3269;
        _3370 = (exp2(_3636 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3620 * cbSceneParam._m0[78u].z)) * _3610.z) / cbSceneParam._m0[78u].z)) + _3270;
        _3372 = _3619 * _3271;
    }
    else
    {
        _3366 = _3268;
        _3368 = _3269;
        _3370 = _3270;
        _3372 = _3271;
    }
    bool _3384 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3385 = log2(_3372);
    float _3389 = exp2(_3385 * cbSceneParam._m0[78u].x);
    float _3390 = exp2(_3385 * cbSceneParam._m0[78u].y);
    float _3391 = exp2(_3385 * cbSceneParam._m0[78u].z);
    float _3392 = _3389 * (isnan(0.0) ? _3222 : (isnan(_3222) ? 0.0 : max(_3222, 0.0)));
    float _3393 = _3390 * (isnan(0.0) ? _3225 : (isnan(_3225) ? 0.0 : max(_3225, 0.0)));
    float _3394 = _3391 * (isnan(0.0) ? _3228 : (isnan(_3228) ? 0.0 : max(_3228, 0.0)));
    vec4 _3402 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1248, _1249));
    float _3404 = _3402.x;
    float _3425 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3404)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3404))) - _1185) * cbMtdParam._m0[24u].y;
    float _5471 = isnan(0.0) ? _3425 : (isnan(_3425) ? 0.0 : max(_3425, 0.0));
    float _3426 = isnan(1.0) ? _5471 : (isnan(_5471) ? 1.0 : min(_5471, 1.0));
    float _3427 = (cbInstanceData._m0[_1323 + 6u].w * (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0)))) * _3426;
    float _3436 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3436 * (_3384 ? _3392 : (_3392 + (cbSceneParam._m0[72u].w * _3366)));
    SV_Target.y = _3436 * (_3384 ? _3393 : (_3393 + (cbSceneParam._m0[72u].w * _3368)));
    SV_Target.z = _3436 * (_3384 ? _3394 : (_3394 + (cbSceneParam._m0[72u].w * _3370)));
    SV_Target.w = _3427;
    SV_Target_1.x = ((((cbMtdParam._m0[2u].x * _3089) * _3241) * _3389) * _3426) * _3436;
    SV_Target_1.y = ((((cbMtdParam._m0[2u].y * _3090) * _3241) * _3390) * _3426) * _3436;
    SV_Target_1.z = ((((cbMtdParam._m0[2u].z * _3091) * _3241) * _3391) * _3426) * _3436;
    SV_Target_1.w = _3427;
}


