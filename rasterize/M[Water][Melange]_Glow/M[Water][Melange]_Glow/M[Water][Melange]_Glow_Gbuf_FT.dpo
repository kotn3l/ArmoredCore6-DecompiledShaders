#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in float TEXCOORD[];
layout(location = 3, component = 1) in float TEXCOORD_1[];
layout(location = 4) in vec4 TEXCOORD_5[];
layout(location = 5) in vec4 TEXCOORD_9[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out float TEXCOORD_12;

void main()
{
    precise float _105 = gl_TessCoord.z * POSITION[0u].x;
    precise float _106 = gl_TessCoord.z * POSITION[0u].y;
    precise float _107 = gl_TessCoord.z * POSITION[0u].z;
    precise float _114 = gl_TessCoord.x * POSITION[1u].x;
    precise float _115 = gl_TessCoord.x * POSITION[1u].y;
    precise float _116 = gl_TessCoord.x * POSITION[1u].z;
    precise float _117 = _105 + _114;
    precise float _118 = _106 + _115;
    precise float _119 = _107 + _116;
    precise float _126 = gl_TessCoord.y * POSITION[2u].x;
    precise float _127 = gl_TessCoord.y * POSITION[2u].y;
    precise float _128 = gl_TessCoord.y * POSITION[2u].z;
    precise float _129 = _117 + _126;
    precise float _130 = _118 + _127;
    precise float _131 = _119 + _128;
    precise float _222 = gl_TessCoord.z * TEXCOORD[0u];
    precise float _225 = gl_TessCoord.x * TEXCOORD[1u];
    precise float _226 = _222 + _225;
    precise float _229 = gl_TessCoord.y * TEXCOORD[2u];
    precise float _230 = _226 + _229;
    precise float _233 = gl_TessCoord.z * TEXCOORD_1[0u];
    precise float _236 = gl_TessCoord.x * TEXCOORD_1[1u];
    precise float _237 = _233 + _236;
    precise float _240 = gl_TessCoord.y * TEXCOORD_1[2u];
    precise float _241 = _237 + _240;
    precise float _250 = gl_TessCoord.z * TEXCOORD_5[0u].x;
    precise float _251 = gl_TessCoord.z * TEXCOORD_5[0u].y;
    precise float _252 = gl_TessCoord.z * TEXCOORD_5[0u].z;
    precise float _253 = gl_TessCoord.z * TEXCOORD_5[0u].w;
    precise float _262 = gl_TessCoord.x * TEXCOORD_5[1u].x;
    precise float _263 = gl_TessCoord.x * TEXCOORD_5[1u].y;
    precise float _264 = gl_TessCoord.x * TEXCOORD_5[1u].z;
    precise float _265 = gl_TessCoord.x * TEXCOORD_5[1u].w;
    precise float _266 = _250 + _262;
    precise float _267 = _251 + _263;
    precise float _268 = _252 + _264;
    precise float _269 = _253 + _265;
    precise float _278 = gl_TessCoord.y * TEXCOORD_5[2u].x;
    precise float _279 = gl_TessCoord.y * TEXCOORD_5[2u].y;
    precise float _280 = gl_TessCoord.y * TEXCOORD_5[2u].z;
    precise float _281 = gl_TessCoord.y * TEXCOORD_5[2u].w;
    precise float _282 = _266 + _278;
    precise float _283 = _267 + _279;
    precise float _284 = _268 + _280;
    precise float _285 = _269 + _281;
    precise float _343 = cbMtdParam._m0[40u].y - cbMtdParam._m0[38u].w;
    precise float _344 = cbMtdParam._m0[40u].w - cbMtdParam._m0[39u].y;
    precise float _345 = _283 * _343;
    precise float _346 = _283 * _344;
    precise float _347 = cbMtdParam._m0[38u].w + _345;
    precise float _348 = cbMtdParam._m0[39u].y + _346;
    precise float _362 = cbPerFrame._m0[22u].x + cbMtdParam._m0[29u].y;
    precise float _363 = cbMtdParam._m0[20u].z * _362;
    precise float _364 = cbMtdParam._m0[35u].x * _363;
    precise float _365 = cbMtdParam._m0[35u].y * _363;
    precise float _371 = _230 * cbMtdParam._m0[34u].z;
    precise float _372 = _241 * cbMtdParam._m0[34u].w;
    precise float _373 = _371 + _364;
    precise float _374 = _372 + _365;
    precise float _381 = cbTextureTilingScale._m0[2u].x * _373;
    precise float _382 = cbTextureTilingScale._m0[2u].y * _374;
    precise float _383 = cbTextureTilingScale._m0[2u].z + _381;
    precise float _384 = cbTextureTilingScale._m0[2u].w + _382;
    vec4 _388 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_2, SS_BumpMap), vec2(_383, _384), 0.0);
    float _391 = _388.z;
    precise float _392 = _347 * _391;
    precise float _393 = _348 * _391;
    precise float _403 = cbMtdParam._m0[41u].x * cbMtdParam._m0[26u].z;
    precise float _404 = cbMtdParam._m0[41u].z * cbMtdParam._m0[26u].z;
    precise float _405 = _403 - cbMtdParam._m0[41u].x;
    precise float _406 = _404 - cbMtdParam._m0[41u].z;
    precise float _407 = _283 * _405;
    precise float _408 = _283 * _406;
    precise float _409 = cbMtdParam._m0[41u].x + _407;
    precise float _410 = cbMtdParam._m0[41u].z + _408;
    precise float _416 = _363 * cbMtdParam._m0[31u].z;
    precise float _417 = _363 * cbMtdParam._m0[31u].w;
    precise float _423 = _230 * cbMtdParam._m0[37u].z;
    precise float _424 = _241 * cbMtdParam._m0[37u].w;
    precise float _425 = _416 + _423;
    precise float _426 = _417 + _424;
    precise float _433 = _425 * cbTextureTilingScale._m0[0u].x;
    precise float _434 = cbTextureTilingScale._m0[0u].y * _426;
    precise float _435 = cbTextureTilingScale._m0[0u].z + _433;
    precise float _436 = cbTextureTilingScale._m0[0u].w + _434;
    precise float _446 = _363 * cbMtdParam._m0[32u].x;
    precise float _447 = _363 * cbMtdParam._m0[32u].y;
    precise float _448 = _423 + _446;
    precise float _449 = _424 + _447;
    precise float _450 = _448 * cbTextureTilingScale._m0[0u].x;
    precise float _451 = cbTextureTilingScale._m0[0u].y * _449;
    precise float _452 = cbTextureTilingScale._m0[0u].z + _450;
    precise float _453 = cbTextureTilingScale._m0[0u].w + _451;
    precise float _457 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(_435, _436), 0.0).w * textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(_452, _453), 0.0).w;
    precise float _458 = _409 * _457;
    precise float _459 = _410 * _457;
    precise float _460 = _392 + _458;
    precise float _461 = _393 + _459;
    precise float _476 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _517 = _129 + _460;
    precise float _518 = _131 + _461;
    precise float _524 = _517 - cbvModelParam._m0[8u].x;
    precise float _525 = _518 - cbvModelParam._m0[8u].y;
    precise float _541 = dot(vec2(_524, _525), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _542 = dot(vec2(_524, _525), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _545 = cbMtdParam._m0[40u].z - cbMtdParam._m0[39u].x;
    precise float _546 = _283 * _545;
    precise float _547 = cbMtdParam._m0[39u].x + _546;
    precise float _548 = _547 * _391;
    precise float _550 = cbMtdParam._m0[41u].y * cbMtdParam._m0[26u].z;
    precise float _551 = _550 - cbMtdParam._m0[41u].y;
    precise float _552 = _283 * _551;
    precise float _553 = cbMtdParam._m0[41u].y + _552;
    precise float _554 = _553 * _457;
    precise float _555 = _548 + _554;
    precise float _556 = _130 + _555;
    vec4 _558 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_541, _542), 0.0);
    float _560 = _558.x;
    precise float _561 = _560 * 0.0;
    precise float _562 = _517 + _561;
    precise float _563 = _556 + _560;
    precise float _564 = _518 + _561;
    float _602;
    float _603;
    float _604;
    if (((((dot(vec4(_562, _563, _564, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_562, _563, _564, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_562, _563, _564, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_562, _563, _564, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[73u])) > _476) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[74u])) > _476)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[75u])) > _476)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[76u])) > _476))))
    {
        precise float _585 = _562 - _129;
        precise float _586 = _563 - _130;
        precise float _587 = _564 - _131;
        float _592 = inversesqrt(dot(vec3(_585, _586, _587), vec3(_585, _586, _587)));
        precise float _593 = _585 * _592;
        precise float _594 = _586 * _592;
        precise float _595 = _587 * _592;
        precise float _596 = _593 * cbMtdParam._m0[4u].y;
        precise float _597 = _594 * cbMtdParam._m0[4u].y;
        precise float _598 = _595 * cbMtdParam._m0[4u].y;
        precise float _599 = _129 + _596;
        precise float _600 = _130 + _597;
        precise float _601 = _131 + _598;
        _602 = _599;
        _603 = _600;
        _604 = _601;
    }
    else
    {
        _602 = _562;
        _603 = _563;
        _604 = _564;
    }
    precise float _610 = _602 - cbSceneParam._m0[3u].x;
    precise float _611 = _603 - cbSceneParam._m0[3u].y;
    precise float _612 = _604 - cbSceneParam._m0[3u].z;
    precise float _639 = _610 * cbSceneParam._m0[24u].x;
    precise float _640 = _611 * cbSceneParam._m0[24u].y;
    precise float _641 = _640 + _639;
    precise float _642 = _612 * cbSceneParam._m0[24u].z;
    precise float _643 = _642 + _641;
    precise float _644 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _645 = _644 + _643;
    precise float _646 = _610 * cbSceneParam._m0[25u].x;
    precise float _647 = _611 * cbSceneParam._m0[25u].y;
    precise float _648 = _647 + _646;
    precise float _649 = _612 * cbSceneParam._m0[25u].z;
    precise float _650 = _649 + _648;
    precise float _651 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _652 = _651 + _650;
    precise float _653 = _610 * cbSceneParam._m0[26u].x;
    precise float _654 = _611 * cbSceneParam._m0[26u].y;
    precise float _655 = _654 + _653;
    precise float _656 = _612 * cbSceneParam._m0[26u].z;
    precise float _657 = _656 + _655;
    precise float _658 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _659 = _658 + _657;
    precise float _660 = _610 * cbSceneParam._m0[27u].x;
    precise float _661 = _611 * cbSceneParam._m0[27u].y;
    precise float _662 = _661 + _660;
    precise float _663 = _612 * cbSceneParam._m0[27u].z;
    precise float _664 = _663 + _662;
    precise float _665 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _666 = _665 + _664;
    gl_Position.x = _645;
    gl_Position.y = _652;
    gl_Position.z = _659;
    gl_Position.w = _666;
    POSITION_1.x = _645;
    POSITION_1.y = _652;
    POSITION_1.z = _659;
    POSITION_1.w = _666;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_2.x = _230;
    TEXCOORD_2.y = _241;
    TEXCOORD_2.z = _541;
    TEXCOORD_2.w = _542;
    TEXCOORD_3.x = _282;
    TEXCOORD_3.y = _283;
    TEXCOORD_3.z = _284;
    TEXCOORD_3.w = _285;
    TEXCOORD_7.x = ((TEXCOORD_9[1u].x * gl_TessCoord.x) + (TEXCOORD_9[0u].x * gl_TessCoord.z)) + (TEXCOORD_9[2u].x * gl_TessCoord.y);
    TEXCOORD_7.y = ((TEXCOORD_9[1u].y * gl_TessCoord.x) + (TEXCOORD_9[0u].y * gl_TessCoord.z)) + (TEXCOORD_9[2u].y * gl_TessCoord.y);
    TEXCOORD_7.z = ((TEXCOORD_9[1u].z * gl_TessCoord.x) + (TEXCOORD_9[0u].z * gl_TessCoord.z)) + (TEXCOORD_9[2u].z * gl_TessCoord.y);
    TEXCOORD_7.w = ((TEXCOORD_9[1u].w * gl_TessCoord.x) + (TEXCOORD_9[0u].w * gl_TessCoord.z)) + (TEXCOORD_9[2u].w * gl_TessCoord.y);
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = dot(vec4(_645, _652, _659, _666), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_645, _652, _659, _666), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


