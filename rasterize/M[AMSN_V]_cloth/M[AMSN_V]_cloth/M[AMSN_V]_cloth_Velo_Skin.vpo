#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_6;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec3 TEXCOORD_8;

void main()
{
    uint _86 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _194 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = float(BLENDINDICES.x);
    float _209 = float(BLENDINDICES.y);
    float _210 = float(BLENDINDICES.z);
    float _211 = float(BLENDINDICES.w);
    bool _217 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _438;
    float _439;
    float _440;
    float _441;
    float _442;
    float _443;
    float _444;
    float _445;
    float _446;
    float _447;
    float _448;
    float _449;
    if (_217)
    {
        uint _222 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        precise float _226 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _231 = isnan(_226) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _226 : max(0.001000000047497451305389404296875, _226));
        precise float _233 = BLENDWEIGHT.x / _231;
        precise float _234 = BLENDWEIGHT.y / _231;
        precise float _235 = BLENDWEIGHT.z / _231;
        precise float _236 = BLENDWEIGHT.w / _231;
        uvec4 _243 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_222)).x * 13u) + 4u]);
        uint _244 = _243.x;
        uint _246 = (_244 + uint(_208)) * 3u;
        uint _253 = _246 + 1u;
        uint _260 = _246 + 2u;
        precise float _267 = _233 * cbObjMatrix._m0[_246].x;
        precise float _268 = _233 * cbObjMatrix._m0[_253].x;
        precise float _269 = _233 * cbObjMatrix._m0[_260].x;
        precise float _270 = _233 * cbObjMatrix._m0[_246].y;
        precise float _271 = _233 * cbObjMatrix._m0[_253].y;
        precise float _272 = _233 * cbObjMatrix._m0[_260].y;
        precise float _273 = _233 * cbObjMatrix._m0[_246].z;
        precise float _274 = _233 * cbObjMatrix._m0[_253].z;
        precise float _275 = _233 * cbObjMatrix._m0[_260].z;
        precise float _276 = _233 * cbObjMatrix._m0[_246].w;
        precise float _277 = _233 * cbObjMatrix._m0[_253].w;
        precise float _278 = _233 * cbObjMatrix._m0[_260].w;
        uint _281 = (_244 + uint(_209)) * 3u;
        uint _288 = _281 + 1u;
        uint _295 = _281 + 2u;
        precise float _302 = _234 * cbObjMatrix._m0[_281].x;
        precise float _303 = _234 * cbObjMatrix._m0[_288].x;
        precise float _304 = _234 * cbObjMatrix._m0[_295].x;
        precise float _305 = _234 * cbObjMatrix._m0[_281].y;
        precise float _306 = _234 * cbObjMatrix._m0[_288].y;
        precise float _307 = _234 * cbObjMatrix._m0[_295].y;
        precise float _308 = _234 * cbObjMatrix._m0[_281].z;
        precise float _309 = _234 * cbObjMatrix._m0[_288].z;
        precise float _310 = _234 * cbObjMatrix._m0[_295].z;
        precise float _311 = _234 * cbObjMatrix._m0[_281].w;
        precise float _312 = _234 * cbObjMatrix._m0[_288].w;
        precise float _313 = _234 * cbObjMatrix._m0[_295].w;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        uint _328 = (_244 + uint(_210)) * 3u;
        uint _335 = _328 + 1u;
        uint _342 = _328 + 2u;
        precise float _349 = _235 * cbObjMatrix._m0[_328].x;
        precise float _350 = _235 * cbObjMatrix._m0[_335].x;
        precise float _351 = _235 * cbObjMatrix._m0[_342].x;
        precise float _352 = _235 * cbObjMatrix._m0[_328].y;
        precise float _353 = _235 * cbObjMatrix._m0[_335].y;
        precise float _354 = _235 * cbObjMatrix._m0[_342].y;
        precise float _355 = _235 * cbObjMatrix._m0[_328].z;
        precise float _356 = _235 * cbObjMatrix._m0[_335].z;
        precise float _357 = _235 * cbObjMatrix._m0[_342].z;
        precise float _358 = _235 * cbObjMatrix._m0[_328].w;
        precise float _359 = _235 * cbObjMatrix._m0[_335].w;
        precise float _360 = _235 * cbObjMatrix._m0[_342].w;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        uint _375 = (_244 + uint(_211)) * 3u;
        uint _382 = _375 + 1u;
        uint _389 = _375 + 2u;
        precise float _396 = _236 * cbObjMatrix._m0[_375].x;
        precise float _397 = _236 * cbObjMatrix._m0[_382].x;
        precise float _398 = _236 * cbObjMatrix._m0[_389].x;
        precise float _399 = _236 * cbObjMatrix._m0[_375].y;
        precise float _400 = _236 * cbObjMatrix._m0[_382].y;
        precise float _401 = _236 * cbObjMatrix._m0[_389].y;
        precise float _402 = _236 * cbObjMatrix._m0[_375].z;
        precise float _403 = _236 * cbObjMatrix._m0[_382].z;
        precise float _404 = _236 * cbObjMatrix._m0[_389].z;
        precise float _405 = _236 * cbObjMatrix._m0[_375].w;
        precise float _406 = _236 * cbObjMatrix._m0[_382].w;
        precise float _407 = _236 * cbObjMatrix._m0[_389].w;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        _438 = _408;
        _439 = _411;
        _440 = _414;
        _441 = _417;
        _442 = _409;
        _443 = _412;
        _444 = _415;
        _445 = _418;
        _446 = _410;
        _447 = _413;
        _448 = _416;
        _449 = _419;
    }
    else
    {
        _438 = cbvModelParam._m0[0u].x;
        _439 = cbvModelParam._m0[0u].y;
        _440 = cbvModelParam._m0[0u].z;
        _441 = cbvModelParam._m0[0u].w;
        _442 = cbvModelParam._m0[1u].x;
        _443 = cbvModelParam._m0[1u].y;
        _444 = cbvModelParam._m0[1u].z;
        _445 = cbvModelParam._m0[1u].w;
        _446 = cbvModelParam._m0[2u].x;
        _447 = cbvModelParam._m0[2u].y;
        _448 = cbvModelParam._m0[2u].z;
        _449 = cbvModelParam._m0[2u].w;
    }
    precise float _450 = POSITION.x * _438;
    precise float _451 = POSITION.y * _439;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.z * _440;
    precise float _454 = _453 + _452;
    precise float _455 = 1.0 * _441;
    precise float _456 = _455 + _454;
    precise float _457 = POSITION.x * _442;
    precise float _458 = POSITION.y * _443;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.z * _444;
    precise float _461 = _460 + _459;
    precise float _462 = 1.0 * _445;
    precise float _463 = _462 + _461;
    precise float _464 = POSITION.x * _446;
    precise float _465 = POSITION.y * _447;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.z * _448;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * _449;
    precise float _470 = _469 + _468;
    float _688;
    float _689;
    float _690;
    float _691;
    float _692;
    float _693;
    float _694;
    float _695;
    float _696;
    float _697;
    float _698;
    float _699;
    if (_217)
    {
        float _471 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _474 = isnan(_471) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _471 : max(0.001000000047497451305389404296875, _471));
        float _475 = BLENDWEIGHT.x / _474;
        float _476 = BLENDWEIGHT.y / _474;
        float _477 = BLENDWEIGHT.z / _474;
        float _478 = BLENDWEIGHT.w / _474;
        uint _484 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        uvec4 _492 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_484)).x * 13u) + 4u]);
        uint _493 = _492.x;
        uint _495 = (_493 + uint(_208)) * 3u;
        uint _502 = _495 + 1u;
        uint _509 = _495 + 2u;
        uint _530 = (_493 + uint(_209)) * 3u;
        uint _537 = _530 + 1u;
        uint _544 = _530 + 2u;
        uint _577 = (_493 + uint(_210)) * 3u;
        uint _584 = _577 + 1u;
        uint _591 = _577 + 2u;
        uint _624 = (_493 + uint(_211)) * 3u;
        uint _631 = _624 + 1u;
        uint _638 = _624 + 2u;
        _688 = (((cbPrevObjMatrix._m0[_530].x * _476) + (cbPrevObjMatrix._m0[_495].x * _475)) + (cbPrevObjMatrix._m0[_577].x * _477)) + (cbPrevObjMatrix._m0[_624].x * _478);
        _689 = (((cbPrevObjMatrix._m0[_530].y * _476) + (cbPrevObjMatrix._m0[_495].y * _475)) + (cbPrevObjMatrix._m0[_577].y * _477)) + (cbPrevObjMatrix._m0[_624].y * _478);
        _690 = (((cbPrevObjMatrix._m0[_530].z * _476) + (cbPrevObjMatrix._m0[_495].z * _475)) + (cbPrevObjMatrix._m0[_577].z * _477)) + (cbPrevObjMatrix._m0[_624].z * _478);
        _691 = (((cbPrevObjMatrix._m0[_530].w * _476) + (cbPrevObjMatrix._m0[_495].w * _475)) + (cbPrevObjMatrix._m0[_577].w * _477)) + (cbPrevObjMatrix._m0[_624].w * _478);
        _692 = (((cbPrevObjMatrix._m0[_537].x * _476) + (cbPrevObjMatrix._m0[_502].x * _475)) + (cbPrevObjMatrix._m0[_584].x * _477)) + (cbPrevObjMatrix._m0[_631].x * _478);
        _693 = (((cbPrevObjMatrix._m0[_537].y * _476) + (cbPrevObjMatrix._m0[_502].y * _475)) + (cbPrevObjMatrix._m0[_584].y * _477)) + (cbPrevObjMatrix._m0[_631].y * _478);
        _694 = (((cbPrevObjMatrix._m0[_537].z * _476) + (cbPrevObjMatrix._m0[_502].z * _475)) + (cbPrevObjMatrix._m0[_584].z * _477)) + (cbPrevObjMatrix._m0[_631].z * _478);
        _695 = (((cbPrevObjMatrix._m0[_537].w * _476) + (cbPrevObjMatrix._m0[_502].w * _475)) + (cbPrevObjMatrix._m0[_584].w * _477)) + (cbPrevObjMatrix._m0[_631].w * _478);
        _696 = (((cbPrevObjMatrix._m0[_544].x * _476) + (cbPrevObjMatrix._m0[_509].x * _475)) + (cbPrevObjMatrix._m0[_591].x * _477)) + (cbPrevObjMatrix._m0[_638].x * _478);
        _697 = (((cbPrevObjMatrix._m0[_544].y * _476) + (cbPrevObjMatrix._m0[_509].y * _475)) + (cbPrevObjMatrix._m0[_591].y * _477)) + (cbPrevObjMatrix._m0[_638].y * _478);
        _698 = (((cbPrevObjMatrix._m0[_544].z * _476) + (cbPrevObjMatrix._m0[_509].z * _475)) + (cbPrevObjMatrix._m0[_591].z * _477)) + (cbPrevObjMatrix._m0[_638].z * _478);
        _699 = (((cbPrevObjMatrix._m0[_544].w * _476) + (cbPrevObjMatrix._m0[_509].w * _475)) + (cbPrevObjMatrix._m0[_591].w * _477)) + (cbPrevObjMatrix._m0[_638].w * _478);
    }
    else
    {
        _688 = cbvModelParam._m0[3u].x;
        _689 = cbvModelParam._m0[3u].y;
        _690 = cbvModelParam._m0[3u].z;
        _691 = cbvModelParam._m0[3u].w;
        _692 = cbvModelParam._m0[4u].x;
        _693 = cbvModelParam._m0[4u].y;
        _694 = cbvModelParam._m0[4u].z;
        _695 = cbvModelParam._m0[4u].w;
        _696 = cbvModelParam._m0[5u].x;
        _697 = cbvModelParam._m0[5u].y;
        _698 = cbvModelParam._m0[5u].z;
        _699 = cbvModelParam._m0[5u].w;
    }
    float _718 = (fma(POSITION.z, _690, fma(POSITION.y, _689, _688 * POSITION.x)) + _691) - cbSceneParam._m0[28u].x;
    float _719 = (fma(POSITION.z, _694, fma(POSITION.y, _693, _692 * POSITION.x)) + _695) - cbSceneParam._m0[28u].y;
    float _720 = (fma(POSITION.z, _698, fma(POSITION.y, _697, _696 * POSITION.x)) + _699) - cbSceneParam._m0[28u].z;
    float _767 = fma(_197, _440, fma(_196, _439, _438 * _194));
    float _770 = fma(_197, _444, fma(_196, _443, _442 * _194));
    float _773 = fma(_197, _448, fma(_196, _447, _446 * _194));
    uint _778 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
    uvec4 _780 = texelFetch(g_InstanceIndexBuffer, int(_778));
    uint _781 = _780.x;
    precise float _797 = _456 - cbSceneParam._m0[3u].x;
    precise float _798 = _463 - cbSceneParam._m0[3u].y;
    precise float _799 = _470 - cbSceneParam._m0[3u].z;
    precise float _827 = _797 * cbSceneParam._m0[24u].x;
    precise float _828 = _798 * cbSceneParam._m0[24u].y;
    precise float _829 = _828 + _827;
    precise float _830 = _799 * cbSceneParam._m0[24u].z;
    precise float _831 = _830 + _829;
    precise float _832 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _833 = _832 + _831;
    precise float _834 = _797 * cbSceneParam._m0[25u].x;
    precise float _835 = _798 * cbSceneParam._m0[25u].y;
    precise float _836 = _835 + _834;
    precise float _837 = _799 * cbSceneParam._m0[25u].z;
    precise float _838 = _837 + _836;
    precise float _839 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _840 = _839 + _838;
    precise float _841 = _797 * cbSceneParam._m0[26u].x;
    precise float _842 = _798 * cbSceneParam._m0[26u].y;
    precise float _843 = _842 + _841;
    precise float _844 = _799 * cbSceneParam._m0[26u].z;
    precise float _845 = _844 + _843;
    precise float _846 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _847 = _846 + _845;
    precise float _848 = _797 * cbSceneParam._m0[27u].x;
    precise float _849 = _798 * cbSceneParam._m0[27u].y;
    precise float _850 = _849 + _848;
    precise float _851 = _799 * cbSceneParam._m0[27u].z;
    precise float _852 = _851 + _850;
    precise float _853 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _854 = _853 + _852;
    gl_Position.x = _833;
    gl_Position.y = _840;
    gl_Position.z = _847;
    gl_Position.w = _854;
    POSITION_1.x = _833;
    POSITION_1.y = _840;
    POSITION_1.z = _847;
    POSITION_1.w = _854;
    NORMAL_1.x = _767;
    NORMAL_1.y = _770;
    NORMAL_1.z = _773;
    NORMAL_1.w = float(_781);
    TANGENT_1.x = fma(_206, _440, fma(_205, _439, _438 * _204));
    TANGENT_1.y = fma(_206, _444, fma(_205, _443, _442 * _204));
    TANGENT_1.z = fma(_206, _448, fma(_205, _447, _446 * _204));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_6.x = _833;
    TEXCOORD_6.y = _840;
    TEXCOORD_6.z = _847;
    TEXCOORD_6.w = _854;
    TEXCOORD_7.x = fma(_720, cbSceneParam._m0[29u].z, fma(_719, cbSceneParam._m0[29u].y, _718 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_7.y = fma(_720, cbSceneParam._m0[30u].z, fma(_719, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _718)) + cbSceneParam._m0[30u].w;
    TEXCOORD_7.z = fma(_720, cbSceneParam._m0[31u].z, fma(_719, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _718)) + cbSceneParam._m0[31u].w;
    TEXCOORD_7.w = fma(_720, cbSceneParam._m0[32u].z, fma(_719, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _718)) + cbSceneParam._m0[32u].w;
    TEXCOORD_8.x = _767;
    TEXCOORD_8.y = _770;
    TEXCOORD_8.z = _773;
    gl_ClipDistance[0u] = dot(vec4(_833, _840, _847, _854), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_833, _840, _847, _854), vec4(cbInstanceData._m0[(_781 * 13u) + 3u]));
}


