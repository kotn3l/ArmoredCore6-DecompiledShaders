#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _147 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _148 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _149 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _154 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _155 = _154 * _147;
    float _156 = _154 * _148;
    float _157 = _154 * _149;
    float _161 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = _161 * NORMAL.x;
    float _163 = _161 * NORMAL.y;
    float _164 = _161 * NORMAL.z;
    float _168 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _169 = _168 * TANGENT.x;
    float _170 = _168 * TANGENT.y;
    float _171 = _168 * TANGENT.z;
    float _216 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _226 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _216);
    float _227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _216);
    float _228 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _216);
    vec4 _247 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _253 = _247.w;
    float _266 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _253) + cbMtdParam._m0[11u].x) * _247.x;
    float _268 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _253) + cbMtdParam._m0[11u].y) * _247.y;
    float _270 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _253) + cbMtdParam._m0[11u].z) * _247.z;
    vec4 _288 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _292 = _288.z;
    float _315 = (_288.x * 2.0) + (-1.0);
    float _317 = (_288.y * 2.0) + (-1.0);
    float _320 = _315 - (_315 * _253);
    float _321 = _317 - (_317 * _253);
    float _330 = cbMtdParam._m0[22u].y + _226;
    float _331 = cbMtdParam._m0[22u].z + _227;
    float _332 = cbMtdParam._m0[22u].w + _228;
    float _346 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_155, _156, _157));
    float _347 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_169, _170, _171));
    float _348 = (-0.0) - dot(vec3(_330, _331, _332), vec3((-0.0) - _162, (-0.0) - _163, (-0.0) - _164));
    float _352 = inversesqrt(dot(vec3(_346, _347, _348), vec3(_346, _347, _348)));
    float _355 = _352 * _348;
    float _356 = (_352 * _346) + (_320 * cbMtdParam._m0[20u].y);
    float _357 = (_352 * _347) + (_321 * cbMtdParam._m0[20u].z);
    float _358 = _356 * cbMtdParam._m0[19u].x;
    float _359 = _357 * cbMtdParam._m0[18u].w;
    float _360 = fract(TEXCOORD.x);
    float _361 = fract(TEXCOORD.y);
    float _367;
    if (_358 > 0.0)
    {
        _367 = (1.0 - _360) / _358;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_358 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _360) / _358;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _367 = frontier_phi_3_2_ladder;
    }
    float _375;
    if (_359 > 0.0)
    {
        _375 = (1.0 - _361) / _359;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_359 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _361) / _359;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _375 = frontier_phi_7_6_ladder;
    }
    bool _377 = _355 > 0.0;
    float _379 = _377 ? (cbMtdParam._m0[15u].x / _355) : 5000.0;
    float _380 = isnan(_375) ? _367 : (isnan(_367) ? _375 : min(_367, _375));
    float _381 = isnan(_379) ? _380 : (isnan(_380) ? _379 : min(_380, _379));
    float _385 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _386 = _360 + (-0.5);
    float _389 = _361 + (-0.5);
    float _392 = ((_381 * _355) + _385) / _385;
    vec4 _417 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_386 + (_381 * _358)) / _392) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_389 + (_381 * _359)) / _392) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _419 = _417.x;
    float _420 = _417.y;
    float _421 = _417.z;
    float _433 = (_419 - (_419 * _253)) * cbMtdParam._m0[9u].x;
    float _434 = (_420 - (_420 * _253)) * cbMtdParam._m0[9u].y;
    float _435 = cbMtdParam._m0[9u].z * (_421 - (_421 * _253));
    float _453 = _356 * cbMtdParam._m0[21u].x;
    float _454 = _357 * cbMtdParam._m0[20u].w;
    bool _455 = _453 > 0.0;
    float _460;
    if (_455)
    {
        _460 = (1.0 - _360) / _453;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _360) / _453;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _460 = frontier_phi_11_10_ladder;
    }
    bool _462 = _454 > 0.0;
    float _467;
    if (_462)
    {
        _467 = (1.0 - _361) / _454;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _361) / _454;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _467 = frontier_phi_15_14_ladder;
    }
    float _470 = _377 ? (cbMtdParam._m0[16u].z / _355) : 5000.0;
    float _471 = isnan(_467) ? _460 : (isnan(_460) ? _467 : min(_460, _467));
    float _472 = isnan(_470) ? _471 : (isnan(_471) ? _470 : min(_471, _470));
    float _476 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _480 = ((_472 * _355) + _476) / _476;
    float _485 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _487 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _503 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_386 + (_472 * _453)) / _480) + 0.5) + _485) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_389 + (_472 * _454)) / _480) + 0.5) + _487) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _508 = _503.x * cbMtdParam._m0[10u].x;
    float _509 = _503.y * cbMtdParam._m0[10u].y;
    float _510 = _503.z * cbMtdParam._m0[10u].z;
    float _518;
    if (_455)
    {
        _518 = (1.0 - _360) / _453;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _360) / _453;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _518 = frontier_phi_19_18_ladder;
    }
    float _524;
    if (_462)
    {
        _524 = (1.0 - _361) / _454;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _361) / _454;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _524 = frontier_phi_23_22_ladder;
    }
    float _526 = isnan(_524) ? _518 : (isnan(_518) ? _524 : min(_518, _524));
    float _527 = isnan(_470) ? _526 : (isnan(_526) ? _470 : min(_526, _470));
    float _534 = ((_527 * _355) + _476) / _476;
    vec4 _548 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_386 + (_527 * _453)) / _534) + 0.5) + _485) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_389 + (_527 * _454)) / _534) + 0.5) + _487) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _550 = _548.w;
    float _552 = _550 - (_550 * _253);
    float _563 = 0.5 - (_253 * 0.5);
    float _573 = (((_433 - _266) + (_552 * ((_508 - _433) - (_508 * _253)))) * _563) + _266;
    float _574 = (((_434 - _268) + (_552 * ((_509 - _434) - (_509 * _253)))) * _563) + _268;
    float _575 = (((_435 - _270) + (_552 * ((_510 - _435) - (_510 * _253)))) * _563) + _270;
    vec4 _587 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _591 = _587.z;
    float _594 = (_587.x * 2.0) + (-1.0);
    float _595 = (_587.y * 2.0) + (-1.0);
    float _596 = dot(vec2(_594, _595), vec2(_594, _595));
    float _880 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _601 = sqrt(1.0 - (isnan(1.0) ? _880 : (isnan(_880) ? 1.0 : min(_880, 1.0))));
    float _602 = _591 * _253;
    float _609 = (cbMtdParam._m0[15u].w * ((_292 - _602) + ((_591 - _292) * _253))) + _602;
    float _613 = (cbMtdParam._m0[16u].x * _320) + _594;
    float _614 = (cbMtdParam._m0[16u].x * _321) + _595;
    float _617 = fma(_601, _162, fma(_614, _169, _613 * _155));
    float _620 = fma(_601, _163, fma(_614, _170, _613 * _156));
    float _623 = fma(_601, _164, fma(_614, _171, _613 * _157));
    float _627 = inversesqrt(dot(vec3(_617, _620, _623), vec3(_617, _620, _623)));
    float _891 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _902 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _629 = isnan(1.0) ? _902 : (isnan(_902) ? 1.0 : min(_902, 1.0));
    float _913 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _630 = isnan(1.0) ? _913 : (isnan(_913) ? 1.0 : min(_913, 1.0));
    float _924 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _631 = isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0));
    uint _633 = uint(roundEven(NORMAL.w));
    vec4 _638 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _640 = _638.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _702 = sqrt(((_226 * _226) + (_227 * _227)) + (_228 * _228));
        float _708 = (cbMatDynParam._m0[5u].x * _702) + cbMatDynParam._m0[5u].y;
        float _935 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _709 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
        float _713 = (cbMatDynParam._m0[5u].z * _702) + cbMatDynParam._m0[5u].w;
        float _946 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0))) - _709)) + _709) < ((_640 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _741;
    uint _661;
    vec4 _666;
    float _673;
    float _674;
    float _675;
    float _679;
    vec4 _682;
    float _684;
    float _685;
    bool _696;
    for (;;)
    {
        _661 = _633 * 13u;
        _666 = cbInstanceData._m0[(_661 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _670 = (cbMtdParam._m0[0u].x * _629) * _666.x;
        float _671 = (cbMtdParam._m0[0u].y * _630) * _666.y;
        float _672 = (cbMtdParam._m0[0u].z * _631) * _666.z;
        float _957 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
        _673 = isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0));
        float _968 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
        _674 = isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0));
        float _979 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
        _675 = isnan(1.0) ? _979 : (isnan(_979) ? 1.0 : min(_979, 1.0));
        _679 = cbInstanceData._m0[_661 + 6u].w;
        float _680 = _640 + (-0.5);
        _682 = cbMtdParam._m0[1u];
        _684 = _682.y * _680;
        _685 = _680 * 0.999000012874603271484375;
        _696 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_696)
        {
            if ((cbInstanceData._m0[_661 + 7u].x + _685) < 0.5)
            {
                _741 = true;
                break;
            }
        }
        if ((_666.w < 1.0) && ((_666.w + _685) < 0.5))
        {
            _741 = true;
            break;
        }
        if ((_684 + 1.0) < _682.x)
        {
            _741 = true;
            break;
        }
        _741 = false;
        break;
    }
    if (_741)
    {
        discard_state = true;
    }
    bool _767 = cbMtdParam._m0[1u].z != 0.0;
    float _768 = _767 ? _679 : 0.0;
    SV_Target.x = ((_617 * 0.5) * _627) + 0.500488758087158203125;
    SV_Target.y = ((_620 * 0.5) * _627) + 0.500488758087158203125;
    SV_Target.z = ((_623 * 0.5) * _627) + 0.500488758087158203125;
    SV_Target.w = _768;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _767 ? _679 : TEXCOORD.z;
    SV_Target_2.x = _673;
    SV_Target_2.y = _674;
    SV_Target_2.z = _675;
    SV_Target_2.w = _767 ? _679 : (float(floatBitsToUint(cbInstanceData._m0[_661 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _768;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _768;
    discard_exit();
}


