#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1040;
float _3451;
float _3452;
float _3453;
float _3454;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _186 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _187 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _188 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _193 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _194 = _193 * _186;
    float _195 = _193 * _187;
    float _196 = _193 * _188;
    float _200 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _201 = _200 * NORMAL.x;
    float _202 = _200 * NORMAL.y;
    float _203 = _200 * NORMAL.z;
    float _207 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _208 = _207 * TANGENT.x;
    float _209 = _207 * TANGENT.y;
    float _210 = _207 * TANGENT.z;
    float _255 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _265 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _255);
    float _266 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _255);
    float _267 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _255);
    vec4 _286 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _292 = _286.w;
    float _305 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _292) + cbMtdParam._m0[11u].x) * _286.x;
    float _307 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _292) + cbMtdParam._m0[11u].y) * _286.y;
    float _309 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _292) + cbMtdParam._m0[11u].z) * _286.z;
    vec4 _327 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _331 = _327.z;
    float _354 = (_327.x * 2.0) + (-1.0);
    float _356 = (_327.y * 2.0) + (-1.0);
    float _359 = _354 - (_354 * _292);
    float _360 = _356 - (_356 * _292);
    float _369 = cbMtdParam._m0[22u].y + _265;
    float _370 = cbMtdParam._m0[22u].z + _266;
    float _371 = cbMtdParam._m0[22u].w + _267;
    float _385 = (-0.0) - dot(vec3(_369, _370, _371), vec3(_194, _195, _196));
    float _386 = (-0.0) - dot(vec3(_369, _370, _371), vec3(_208, _209, _210));
    float _387 = (-0.0) - dot(vec3(_369, _370, _371), vec3((-0.0) - _201, (-0.0) - _202, (-0.0) - _203));
    float _391 = inversesqrt(dot(vec3(_385, _386, _387), vec3(_385, _386, _387)));
    float _394 = _391 * _387;
    float _397 = ((_391 * _385) + (_359 * cbMtdParam._m0[20u].y)) * cbMtdParam._m0[19u].x;
    float _398 = ((_391 * _386) + (_360 * cbMtdParam._m0[20u].z)) * cbMtdParam._m0[18u].w;
    float _399 = fract(TEXCOORD.x);
    float _400 = fract(TEXCOORD.y);
    float _406;
    if (_397 > 0.0)
    {
        _406 = (1.0 - _399) / _397;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_397 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _399) / _397;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _406 = frontier_phi_3_2_ladder;
    }
    float _414;
    if (_398 > 0.0)
    {
        _414 = (1.0 - _400) / _398;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_398 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _400) / _398;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _414 = frontier_phi_7_6_ladder;
    }
    float _418 = (_394 > 0.0) ? (cbMtdParam._m0[15u].x / _394) : 5000.0;
    float _419 = isnan(_414) ? _406 : (isnan(_406) ? _414 : min(_406, _414));
    float _420 = isnan(_418) ? _419 : (isnan(_419) ? _418 : min(_419, _418));
    float _424 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _431 = ((_420 * _394) + _424) / _424;
    vec4 _456 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_399 + (-0.5)) + (_420 * _397)) / _431) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_400 + (-0.5)) + (_420 * _398)) / _431) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _458 = _456.x;
    float _459 = _456.y;
    float _460 = _456.z;
    vec4 _486 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _490 = _486.z;
    float _493 = (_486.x * 2.0) + (-1.0);
    float _494 = (_486.y * 2.0) + (-1.0);
    float _495 = dot(vec2(_493, _494), vec2(_493, _494));
    float _3473 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _500 = sqrt(1.0 - (isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0))));
    float _501 = _490 * _292;
    float _508 = (cbMtdParam._m0[15u].w * ((_331 - _501) + ((_490 - _331) * _292))) + _501;
    float _512 = (cbMtdParam._m0[16u].x * _359) + _493;
    float _513 = (cbMtdParam._m0[16u].x * _360) + _494;
    float _516 = fma(_500, _201, fma(_513, _208, _512 * _194));
    float _519 = fma(_500, _202, fma(_513, _209, _512 * _195));
    float _522 = fma(_500, _203, fma(_513, _210, _512 * _196));
    float _526 = inversesqrt(dot(vec3(_516, _519, _522), vec3(_516, _519, _522)));
    float _527 = _526 * _516;
    float _528 = _526 * _519;
    float _529 = _526 * _522;
    float _3484 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _530 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
    float _3495 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _3506 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _3517 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _549 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _553 = inversesqrt(dot(vec3(_265, _266, _267), vec3(_265, _266, _267)));
    float _554 = _265 * _553;
    float _555 = _266 * _553;
    float _556 = _267 * _553;
    vec4 _561 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _563 = _561.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _721 = sqrt(((_265 * _265) + (_266 * _266)) + (_267 * _267));
        float _727 = (cbMatDynParam._m0[5u].x * _721) + cbMatDynParam._m0[5u].y;
        float _3528 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
        float _728 = isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0));
        float _732 = (cbMatDynParam._m0[5u].z * _721) + cbMatDynParam._m0[5u].w;
        float _3539 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0))) - _728)) + _728) < ((_563 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _576 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _577 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _596 = fma(_529, cbSceneParam._m0[5u].z, fma(_528, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _527));
    float _599 = fma(_529, cbSceneParam._m0[6u].z, fma(_528, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _527));
    float _602 = fma(_529, cbSceneParam._m0[7u].z, fma(_528, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _527));
    uint _615 = uint(roundEven(NORMAL.w)) * 13u;
    uint _617 = _615 + 9u;
    uint _618 = _617 + uint(cbMatDynParam._m0[0u].w);
    float _624 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0)))) * cbInstanceData._m0[_618].x;
    float _625 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3506 : (isnan(_3506) ? 1.0 : min(_3506, 1.0)))) * cbInstanceData._m0[_618].y;
    float _626 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0)))) * cbInstanceData._m0[_618].z;
    float _3550 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _627 = isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0));
    float _3561 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _628 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
    float _3572 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _629 = isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0));
    vec4 _638 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _576, cbSceneParam._m0[86u].y * _577));
    float _641 = _638.x * TEXCOORD.z;
    float _642 = dot(vec3(_527, _528, _529), vec3(_554, _555, _556));
    float _645 = _642 * 2.0;
    float _649 = (_645 * _527) - _554;
    float _650 = (_645 * _528) - _555;
    float _651 = (_645 * _529) - _556;
    float _655 = abs(dot(vec3(_554, _555, _556), vec3(_527, _528, _529)));
    float _3583 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _657 = sqrt(_530);
    float _670 = exp2((_657 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_657 * 3.0));
    float _702 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _706 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _710 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1039;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _766 = fma(_710, cbModelParam._m0[26u].z, fma(_706, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _702));
        float _770 = fma(_710, cbModelParam._m0[27u].z, fma(_706, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _702));
        float _774 = fma(_710, cbModelParam._m0[28u].z, fma(_706, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _702));
        float _797 = _702 + _527;
        float _798 = _706 + _528;
        float _799 = _710 + _529;
        float _809 = fma(_799, cbModelParam._m0[26u].z, fma(_798, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _797)) - _766;
        float _810 = fma(_799, cbModelParam._m0[27u].z, fma(_798, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _797)) - _770;
        float _811 = fma(_799, cbModelParam._m0[28u].z, fma(_798, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _797)) - _774;
        float _815 = inversesqrt(dot(vec3(_809, _810, _811), vec3(_809, _810, _811)));
        float _828 = ((_815 * _809) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_766 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _829 = ((_815 * _810) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_770 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _830 = ((_815 * _811) / cbModelParam._m0[34u].z) + ((((((_774 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _833 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_828, _829, _830), 0.0);
        vec4 _840 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_828, _829, _830), 0.0);
        vec4 _847 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_828, _829, _830), 0.0);
        vec4 _854 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_828, _829, _830), 0.0);
        float _867 = exp2((_833.w + (-0.5)) * 20.0) * 2.0;
        float _868 = _867 * (_833.x + (-0.5));
        float _869 = _867 * (_833.y + (-0.5));
        float _870 = _867 * (_833.z + (-0.5));
        float _877 = exp2((_840.w + (-0.5)) * 20.0) * 2.0;
        float _878 = _877 * (_840.x + (-0.5));
        float _879 = _877 * (_840.y + (-0.5));
        float _880 = _877 * (_840.z + (-0.5));
        float _887 = exp2((_847.w + (-0.5)) * 20.0) * 2.0;
        float _888 = _887 * (_847.x + (-0.5));
        float _889 = _887 * (_847.y + (-0.5));
        float _890 = _887 * (_847.z + (-0.5));
        float _897 = exp2((_854.w + (-0.5)) * 20.0) * 2.0;
        float _898 = _897 * (_854.x + (-0.5));
        float _899 = _897 * (_854.y + (-0.5));
        float _900 = _897 * (_854.z + (-0.5));
        float _901 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _902 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
        float _903 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        float _904 = _868 * 0.5;
        float _905 = _878 * 0.5;
        float _906 = _888 * 0.5;
        float _907 = dot(vec3(_904, _905, _906), vec3(_904, _905, _906));
        float _912 = (_907 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_907);
        float _921 = (dot(vec3(_527, _528, _529), vec3(_912 * _904, _912 * _905, _912 * _906)) + 1.0) * 0.5;
        float _3609 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _931 = sqrt(((_905 * _905) + (_904 * _904)) + (_906 * _906)) / (_901 + 9.9999997473787516355514526367188e-06);
        float _3620 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _932 = isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0));
        float _933 = _932 * 2.0;
        float _937 = (1.0 - _932) / (_932 + 1.0);
        float _3631 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
        float _938 = isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0));
        float _947 = ((((1.0 - _938) * (_933 + 2.0)) * exp2(log2(isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0))) * (_933 + 1.0))) + _938) * _901;
        float _948 = _869 * 0.5;
        float _949 = _879 * 0.5;
        float _950 = _889 * 0.5;
        float _951 = dot(vec3(_948, _949, _950), vec3(_948, _949, _950));
        float _956 = (_951 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_951);
        float _964 = (dot(vec3(_527, _528, _529), vec3(_956 * _948, _956 * _949, _956 * _950)) + 1.0) * 0.5;
        float _3642 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
        float _973 = sqrt(((_949 * _949) + (_948 * _948)) + (_950 * _950)) / (_902 + 9.9999997473787516355514526367188e-06);
        float _3653 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _974 = isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0));
        float _975 = _974 * 2.0;
        float _979 = (1.0 - _974) / (_974 + 1.0);
        float _3664 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _980 = isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0));
        float _989 = ((((1.0 - _980) * (_975 + 2.0)) * exp2(log2(isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0))) * (_975 + 1.0))) + _980) * _902;
        float _990 = _870 * 0.5;
        float _991 = _880 * 0.5;
        float _992 = _890 * 0.5;
        float _993 = dot(vec3(_990, _991, _992), vec3(_990, _991, _992));
        float _998 = (_993 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_993);
        float _1006 = (dot(vec3(_527, _528, _529), vec3(_998 * _990, _998 * _991, _998 * _992)) + 1.0) * 0.5;
        float _3675 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1015 = sqrt(((_991 * _991) + (_990 * _990)) + (_992 * _992)) / (_903 + 9.9999997473787516355514526367188e-06);
        float _3686 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1016 = isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0));
        float _1017 = _1016 * 2.0;
        float _1021 = (1.0 - _1016) / (_1016 + 1.0);
        float _3697 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1022 = isnan(1.0) ? _3697 : (isnan(_3697) ? 1.0 : min(_3697, 1.0));
        float _1031 = ((((1.0 - _1022) * (_1017 + 2.0)) * exp2(log2(isnan(1.0) ? _3675 : (isnan(_3675) ? 1.0 : min(_3675, 1.0))) * (_1017 + 1.0))) + _1022) * _903;
        _1039 = _870;
        _1041 = _869;
        _1042 = _868;
        _1043 = _880;
        _1044 = _879;
        _1045 = _878;
        _1046 = _890;
        _1047 = _889;
        _1048 = _888;
        _1049 = _903;
        _1050 = _902;
        _1051 = _901;
        _1052 = cbModelParam._m0[36u].z * (isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0)));
        _1053 = cbModelParam._m0[36u].z * (isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0)));
        _1054 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0)));
    }
    else
    {
        _1039 = _1040;
        _1041 = _1040;
        _1042 = _1040;
        _1043 = _1040;
        _1044 = _1040;
        _1045 = _1040;
        _1046 = _1040;
        _1047 = _1040;
        _1048 = _1040;
        _1049 = _1040;
        _1050 = _1040;
        _1051 = _1040;
        _1052 = 0.0;
        _1053 = 0.0;
        _1054 = 0.0;
    }
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    float _1358;
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1083 = fma(_710, cbModelParam._m0[30u].z, fma(_706, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _702));
        float _1087 = fma(_710, cbModelParam._m0[31u].z, fma(_706, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _702));
        float _1091 = fma(_710, cbModelParam._m0[32u].z, fma(_706, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _702));
        float _1114 = _702 + _527;
        float _1115 = _706 + _528;
        float _1116 = _710 + _529;
        float _1126 = fma(_1116, cbModelParam._m0[30u].z, fma(_1115, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1114)) - _1083;
        float _1127 = fma(_1116, cbModelParam._m0[31u].z, fma(_1115, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1114)) - _1087;
        float _1128 = fma(_1116, cbModelParam._m0[32u].z, fma(_1115, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1114)) - _1091;
        float _1132 = inversesqrt(dot(vec3(_1126, _1127, _1128), vec3(_1126, _1127, _1128)));
        float _1145 = ((_1132 * _1126) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1083 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1146 = ((_1132 * _1127) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1087 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1147 = ((_1132 * _1128) / cbModelParam._m0[35u].z) + ((((((_1091 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1149 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1145, _1146, _1147), 0.0);
        vec4 _1156 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1145, _1146, _1147), 0.0);
        vec4 _1163 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1145, _1146, _1147), 0.0);
        vec4 _1170 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1145, _1146, _1147), 0.0);
        float _1182 = exp2((_1149.w + (-0.5)) * 20.0) * 2.0;
        float _1183 = _1182 * (_1149.x + (-0.5));
        float _1184 = _1182 * (_1149.y + (-0.5));
        float _1185 = _1182 * (_1149.z + (-0.5));
        float _1192 = exp2((_1156.w + (-0.5)) * 20.0) * 2.0;
        float _1193 = _1192 * (_1156.x + (-0.5));
        float _1194 = _1192 * (_1156.y + (-0.5));
        float _1195 = _1192 * (_1156.z + (-0.5));
        float _1202 = exp2((_1163.w + (-0.5)) * 20.0) * 2.0;
        float _1203 = _1202 * (_1163.x + (-0.5));
        float _1204 = _1202 * (_1163.y + (-0.5));
        float _1205 = _1202 * (_1163.z + (-0.5));
        float _1212 = exp2((_1170.w + (-0.5)) * 20.0) * 2.0;
        float _1213 = _1212 * (_1170.x + (-0.5));
        float _1214 = _1212 * (_1170.y + (-0.5));
        float _1215 = _1212 * (_1170.z + (-0.5));
        float _1216 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1217 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1218 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1219 = _1183 * 0.5;
        float _1220 = _1193 * 0.5;
        float _1221 = _1203 * 0.5;
        float _1222 = dot(vec3(_1219, _1220, _1221), vec3(_1219, _1220, _1221));
        float _1227 = (_1222 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1222);
        float _1235 = (dot(vec3(_527, _528, _529), vec3(_1227 * _1219, _1227 * _1220, _1227 * _1221)) + 1.0) * 0.5;
        float _3738 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1244 = sqrt(((_1220 * _1220) + (_1219 * _1219)) + (_1221 * _1221)) / (_1216 + 9.9999997473787516355514526367188e-06);
        float _3749 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
        float _1246 = _1245 * 2.0;
        float _1250 = (1.0 - _1245) / (_1245 + 1.0);
        float _3760 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
        float _1260 = ((((1.0 - _1251) * (_1246 + 2.0)) * exp2(log2(isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0))) * (_1246 + 1.0))) + _1251) * _1216;
        float _1261 = _1184 * 0.5;
        float _1262 = _1194 * 0.5;
        float _1263 = _1204 * 0.5;
        float _1264 = dot(vec3(_1261, _1262, _1263), vec3(_1261, _1262, _1263));
        float _1269 = (_1264 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1264);
        float _1277 = (dot(vec3(_527, _528, _529), vec3(_1269 * _1261, _1269 * _1262, _1269 * _1263)) + 1.0) * 0.5;
        float _3771 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1286 = sqrt(((_1262 * _1262) + (_1261 * _1261)) + (_1263 * _1263)) / (_1217 + 9.9999997473787516355514526367188e-06);
        float _3782 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1287 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
        float _1288 = _1287 * 2.0;
        float _1292 = (1.0 - _1287) / (_1287 + 1.0);
        float _3793 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1293 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
        float _1302 = ((((1.0 - _1293) * (_1288 + 2.0)) * exp2(log2(isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0))) * (_1288 + 1.0))) + _1293) * _1217;
        float _1303 = _1185 * 0.5;
        float _1304 = _1195 * 0.5;
        float _1305 = _1205 * 0.5;
        float _1306 = dot(vec3(_1303, _1304, _1305), vec3(_1303, _1304, _1305));
        float _1311 = (_1306 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1306);
        float _1319 = (dot(vec3(_527, _528, _529), vec3(_1311 * _1303, _1311 * _1304, _1311 * _1305)) + 1.0) * 0.5;
        float _3804 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
        float _1328 = sqrt(((_1304 * _1304) + (_1303 * _1303)) + (_1305 * _1305)) / (_1218 + 9.9999997473787516355514526367188e-06);
        float _3815 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1329 = isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0));
        float _1330 = _1329 * 2.0;
        float _1334 = (1.0 - _1329) / (_1329 + 1.0);
        float _3826 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1335 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
        float _1344 = ((((1.0 - _1335) * (_1330 + 2.0)) * exp2(log2(isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0))) * (_1330 + 1.0))) + _1335) * _1218;
        _1352 = _1185;
        _1353 = _1184;
        _1354 = _1183;
        _1355 = _1195;
        _1356 = _1194;
        _1357 = _1193;
        _1358 = _1205;
        _1359 = _1204;
        _1360 = _1203;
        _1361 = _1218;
        _1362 = _1217;
        _1363 = _1216;
        _1364 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0)));
        _1365 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0)));
        _1366 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0)));
    }
    else
    {
        _1352 = _1040;
        _1353 = _1040;
        _1354 = _1040;
        _1355 = _1040;
        _1356 = _1040;
        _1357 = _1040;
        _1358 = _1040;
        _1359 = _1040;
        _1360 = _1040;
        _1361 = _1040;
        _1362 = _1040;
        _1363 = _1040;
        _1364 = 0.0;
        _1365 = 0.0;
        _1366 = 0.0;
    }
    float _1376 = (cbModelParam._m0[1u].x * (_1364 - _1052)) + _1052;
    float _1377 = (cbModelParam._m0[1u].x * (_1365 - _1053)) + _1053;
    float _1378 = (cbModelParam._m0[1u].x * (_1366 - _1054)) + _1054;
    float _1399 = fma(_1378, cbSceneParam._m0[89u].z, fma(_1377, cbSceneParam._m0[89u].y, _1376 * cbSceneParam._m0[89u].x));
    float _1402 = fma(_1378, cbSceneParam._m0[90u].z, fma(_1377, cbSceneParam._m0[90u].y, _1376 * cbSceneParam._m0[90u].x));
    float _1405 = fma(_1378, cbSceneParam._m0[91u].z, fma(_1377, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1376));
    float _1420 = _649 * 0.5;
    float _1421 = _650 * 0.5;
    float _1422 = _651 * 0.5;
    float _1423 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1354, _1357, _1360, _1363));
    float _1426 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1353, _1356, _1359, _1362));
    float _1429 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1352, _1355, _1358, _1361));
    float _1463;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1436 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1039, _1043, _1046, _1049));
        float _1440 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1041, _1044, _1047, _1050));
        float _1444 = dot(vec4(_1420, _1421, _1422, 1.0), vec4(_1042, _1045, _1048, _1051));
        float _1451 = dot(vec4(cbModelParam._m0[39u]), vec4(_1420, _1421, _1422, 1.0));
        _1463 = dot(vec3(isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0)), isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)), isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1451) ? 0.0 : (isnan(0.0) ? _1451 : max(0.0, _1451))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1463 = 1.0;
    }
    float _1474;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1465 = dot(vec4(cbModelParam._m0[40u]), vec4(_1420, _1421, _1422, 1.0));
        _1474 = dot(vec3(isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0)), isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)), isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1465) ? 0.0 : (isnan(0.0) ? _1465 : max(0.0, _1465))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1474 = 1.0;
    }
    float _1478 = (_1474 * cbModelParam._m0[1u].x) + (_1463 * (1.0 - cbModelParam._m0[1u].x));
    float _1488 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _530);
    float _1489 = isnan(_1488) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1488 : min(cbModelParam._m0[25u].z, _1488));
    float _1570;
    float _1572;
    float _1574;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1537 = fma(_710, cbModelParam._m0[13u].z, fma(_706, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _702)) + cbModelParam._m0[13u].w;
        float _1541 = fma(_710, cbModelParam._m0[14u].z, fma(_706, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _702)) + cbModelParam._m0[14u].w;
        float _1545 = fma(_710, cbModelParam._m0[15u].z, fma(_706, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _702)) + cbModelParam._m0[15u].w;
        float _1548 = fma(_651, cbModelParam._m0[13u].z, fma(_650, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _649));
        float _1551 = fma(_651, cbModelParam._m0[14u].z, fma(_650, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _649));
        float _1554 = fma(_651, cbModelParam._m0[15u].z, fma(_650, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _649));
        float _1582;
        if (_1548 > 0.0)
        {
            _1582 = abs((1.0 - _1537) / _1548);
        }
        else
        {
            float frontier_phi_25_23_ladder;
            if (_1548 < 0.0)
            {
                frontier_phi_25_23_ladder = abs((_1537 + 1.0) / _1548);
            }
            else
            {
                frontier_phi_25_23_ladder = 5000.0;
            }
            _1582 = frontier_phi_25_23_ladder;
        }
        float _1751;
        if (_1551 > 0.0)
        {
            _1751 = abs((1.0 - _1541) / _1551);
        }
        else
        {
            float frontier_phi_34_30_ladder;
            if (_1551 < 0.0)
            {
                frontier_phi_34_30_ladder = abs((_1541 + 1.0) / _1551);
            }
            else
            {
                frontier_phi_34_30_ladder = 5000.0;
            }
            _1751 = frontier_phi_34_30_ladder;
        }
        float _2195;
        if (_1554 > 0.0)
        {
            _2195 = abs((1.0 - _1545) / _1554);
        }
        else
        {
            float frontier_phi_46_41_ladder;
            if (_1554 < 0.0)
            {
                frontier_phi_46_41_ladder = abs((_1545 + 1.0) / _1554);
            }
            else
            {
                frontier_phi_46_41_ladder = 5000.0;
            }
            _2195 = frontier_phi_46_41_ladder;
        }
        float _2197 = isnan(_1751) ? _1582 : (isnan(_1582) ? _1751 : min(_1582, _1751));
        float _2198 = isnan(_2195) ? _2197 : (isnan(_2197) ? _2195 : min(_2197, _2195));
        float _2202 = (_2198 * _1548) + _1537;
        float _2203 = (_2198 * _1551) + _1541;
        float _2204 = (_2198 * _1554) + _1545;
        float _2205 = _2198 * 9.9999997473787516355514526367188e-05;
        float _2207 = (-1.0) - _2205;
        float _2209 = _2205 + 1.0;
        float frontier_phi_24_46_ladder;
        float frontier_phi_24_46_ladder_1;
        float frontier_phi_24_46_ladder_2;
        if ((_2204 > _2209) || ((_2204 < _2207) || ((_2203 > _2209) || ((_2203 < _2207) || ((_2202 < _2207) || (_2202 > _2209))))))
        {
            frontier_phi_24_46_ladder = 0.0;
            frontier_phi_24_46_ladder_1 = 0.0;
            frontier_phi_24_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2454 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2204, cbModelParam._m0[9u].z, fma(_2203, cbModelParam._m0[9u].y, _2202 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2204, cbModelParam._m0[10u].z, fma(_2203, cbModelParam._m0[10u].y, _2202 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2204, cbModelParam._m0[11u].z, fma(_2203, cbModelParam._m0[11u].y, _2202 * cbModelParam._m0[11u].x))), _1489);
            frontier_phi_24_46_ladder = _2454.z * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_1 = _2454.y * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_2 = _2454.x * cbModelParam._m0[1u].y;
        }
        _1570 = frontier_phi_24_46_ladder_2;
        _1572 = frontier_phi_24_46_ladder_1;
        _1574 = frontier_phi_24_46_ladder;
    }
    else
    {
        vec4 _1558 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_649, _650, _651), _1489);
        _1570 = _1558.x * cbModelParam._m0[1u].y;
        _1572 = _1558.y * cbModelParam._m0[1u].y;
        _1574 = _1558.z * cbModelParam._m0[1u].y;
    }
    float _1578 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _530);
    float _1579 = isnan(_1578) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1578 : min(cbModelParam._m0[25u].w, _1578));
    float _1668;
    float _1670;
    float _1672;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1632 = fma(_710, cbModelParam._m0[21u].z, fma(_706, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _702)) + cbModelParam._m0[21u].w;
        float _1636 = fma(_710, cbModelParam._m0[22u].z, fma(_706, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _702)) + cbModelParam._m0[22u].w;
        float _1640 = fma(_710, cbModelParam._m0[23u].z, fma(_706, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _702)) + cbModelParam._m0[23u].w;
        float _1643 = fma(_651, cbModelParam._m0[21u].z, fma(_650, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _649));
        float _1646 = fma(_651, cbModelParam._m0[22u].z, fma(_650, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _649));
        float _1649 = fma(_651, cbModelParam._m0[23u].z, fma(_650, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _649));
        float _1756;
        if (_1643 > 0.0)
        {
            _1756 = abs((1.0 - _1632) / _1643);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1643 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1632 + 1.0) / _1643);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _1756 = frontier_phi_36_32_ladder;
        }
        float _2222;
        if (_1646 > 0.0)
        {
            _2222 = abs((1.0 - _1636) / _1646);
        }
        else
        {
            float frontier_phi_48_43_ladder;
            if (_1646 < 0.0)
            {
                frontier_phi_48_43_ladder = abs((_1636 + 1.0) / _1646);
            }
            else
            {
                frontier_phi_48_43_ladder = 5000.0;
            }
            _2222 = frontier_phi_48_43_ladder;
        }
        float _2583;
        if (_1649 > 0.0)
        {
            _2583 = abs((1.0 - _1640) / _1649);
        }
        else
        {
            float frontier_phi_60_55_ladder;
            if (_1649 < 0.0)
            {
                frontier_phi_60_55_ladder = abs((_1640 + 1.0) / _1649);
            }
            else
            {
                frontier_phi_60_55_ladder = 5000.0;
            }
            _2583 = frontier_phi_60_55_ladder;
        }
        float _2585 = isnan(_2222) ? _1756 : (isnan(_1756) ? _2222 : min(_1756, _2222));
        float _2586 = isnan(_2583) ? _2585 : (isnan(_2585) ? _2583 : min(_2585, _2583));
        float _2590 = (_2586 * _1643) + _1632;
        float _2591 = (_2586 * _1646) + _1636;
        float _2592 = (_2586 * _1649) + _1640;
        float _2593 = _2586 * 9.9999997473787516355514526367188e-05;
        float _2594 = (-1.0) - _2593;
        float _2596 = _2593 + 1.0;
        float frontier_phi_33_60_ladder;
        float frontier_phi_33_60_ladder_1;
        float frontier_phi_33_60_ladder_2;
        if ((_2592 > _2596) || ((_2592 < _2594) || ((_2591 > _2596) || ((_2591 < _2594) || ((_2590 < _2594) || (_2590 > _2596))))))
        {
            frontier_phi_33_60_ladder = 0.0;
            frontier_phi_33_60_ladder_1 = 0.0;
            frontier_phi_33_60_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2729 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2592, cbModelParam._m0[17u].z, fma(_2591, cbModelParam._m0[17u].y, _2590 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2592, cbModelParam._m0[18u].z, fma(_2591, cbModelParam._m0[18u].y, _2590 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2592, cbModelParam._m0[19u].z, fma(_2591, cbModelParam._m0[19u].y, _2590 * cbModelParam._m0[19u].x))), _1579);
            frontier_phi_33_60_ladder = _2729.z * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_1 = _2729.y * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_2 = _2729.x * cbModelParam._m0[1u].z;
        }
        _1668 = frontier_phi_33_60_ladder_2;
        _1670 = frontier_phi_33_60_ladder_1;
        _1672 = frontier_phi_33_60_ladder;
    }
    else
    {
        vec4 _1652 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_649, _650, _651), _1579);
        _1668 = _1652.x * cbModelParam._m0[1u].z;
        _1670 = _1652.y * cbModelParam._m0[1u].z;
        _1672 = _1652.z * cbModelParam._m0[1u].z;
    }
    float _1684 = ((((1.0 - _670) * ((_657 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_670 * _657)) * _641;
    float _1685 = _1684 * ((cbModelParam._m0[1u].w * (_1668 - _1570)) + _1570);
    float _1686 = _1684 * ((cbModelParam._m0[1u].w * (_1670 - _1572)) + _1572);
    float _1687 = _1684 * ((cbModelParam._m0[1u].w * (_1672 - _1574)) + _1574);
    float _1690 = fma(_1687, cbSceneParam._m0[89u].z, fma(_1686, cbSceneParam._m0[89u].y, _1685 * cbSceneParam._m0[89u].x));
    float _1693 = fma(_1687, cbSceneParam._m0[90u].z, fma(_1686, cbSceneParam._m0[90u].y, _1685 * cbSceneParam._m0[90u].x));
    float _1696 = fma(_1687, cbSceneParam._m0[91u].z, fma(_1686, cbSceneParam._m0[91u].y, _1685 * cbSceneParam._m0[91u].x));
    float _1730 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1734 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1738 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1742 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1743 = _1730 / _1742;
    float _1744 = _1734 / _1742;
    float _1745 = _1738 / _1742;
    float _1892;
    float _1893;
    float _1894;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1772 = ((uint(_1745 > cbSceneParam._m0[59u].y) + uint(_1745 > cbSceneParam._m0[59u].x)) + uint(_1745 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1773 = _1772 + 43u;
        uint _1781 = _1772 + 44u;
        uint _1789 = _1772 + 45u;
        uint _1797 = _1772 + 46u;
        float _1808 = fma(_1742, cbSceneParam._m0[_1773].w, fma(_1738, cbSceneParam._m0[_1773].z, fma(_1734, cbSceneParam._m0[_1773].y, _1730 * cbSceneParam._m0[_1773].x)));
        float _1812 = fma(_1742, cbSceneParam._m0[_1781].w, fma(_1738, cbSceneParam._m0[_1781].z, fma(_1734, cbSceneParam._m0[_1781].y, _1730 * cbSceneParam._m0[_1781].x)));
        float _1820 = fma(_1742, cbSceneParam._m0[_1797].w, fma(_1738, cbSceneParam._m0[_1797].z, fma(_1734, cbSceneParam._m0[_1797].y, _1730 * cbSceneParam._m0[_1797].x)));
        float _1825 = cbSceneParam._m0[33u].z * _1820;
        float _1827 = cbSceneParam._m0[33u].w * _1820;
        float _1830 = fma(_1742, cbSceneParam._m0[_1789].w, fma(_1738, cbSceneParam._m0[_1789].z, fma(_1734, cbSceneParam._m0[_1789].y, _1730 * cbSceneParam._m0[_1789].x))) / _1820;
        float _1878 = (cbSceneParam._m0[33u].x - sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745))) * cbSceneParam._m0[33u].y;
        float _3952 = isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0));
        float _1885 = (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1825 + _1808) / _1820, (_1827 + _1812) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1827 + _1808) / _1820, (_1812 - _1825) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1808 - _1825) / _1820, (_1812 - _1827) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1808 - _1827) / _1820, (_1825 + _1812) / _1820), _1830), 0.0)).x), vec4(0.25)));
        _1892 = 1.0 - (_1885 * cbSceneParam._m0[34u].x);
        _1893 = 1.0 - (_1885 * cbSceneParam._m0[34u].y);
        _1894 = 1.0 - (_1885 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1892 = 1.0;
        _1893 = 1.0;
        _1894 = 1.0;
    }
    float _1958;
    float _1960;
    float _1962;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1946 = fma(_1742, cbSceneParam._m0[63u].w, fma(_1738, cbSceneParam._m0[63u].z, fma(_1734, cbSceneParam._m0[63u].y, _1730 * cbSceneParam._m0[63u].x)));
        float _1947 = fma(_1742, cbSceneParam._m0[60u].w, fma(_1738, cbSceneParam._m0[60u].z, fma(_1734, cbSceneParam._m0[60u].y, _1730 * cbSceneParam._m0[60u].x))) / _1946;
        float _1948 = fma(_1742, cbSceneParam._m0[61u].w, fma(_1738, cbSceneParam._m0[61u].z, fma(_1734, cbSceneParam._m0[61u].y, _1730 * cbSceneParam._m0[61u].x))) / _1946;
        float frontier_phi_45_44_ladder;
        float frontier_phi_45_44_ladder_1;
        float frontier_phi_45_44_ladder_2;
        if ((((_1947 >= cbSceneParam._m0[64u].x) && (_1948 >= cbSceneParam._m0[64u].y)) && (_1947 <= cbSceneParam._m0[64u].z)) && (_1948 <= cbSceneParam._m0[64u].w))
        {
            float _2235 = fma(_1742, cbSceneParam._m0[62u].w, fma(_1738, cbSceneParam._m0[62u].z, fma(_1734, cbSceneParam._m0[62u].y, _1730 * cbSceneParam._m0[62u].x))) / _1946;
            float _2239 = isnan(cbSceneParam._m0[41u].w) ? _2235 : (isnan(_2235) ? cbSceneParam._m0[41u].w : max(_2235, cbSceneParam._m0[41u].w));
            float _2282 = (cbSceneParam._m0[33u].x - sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745))) * cbSceneParam._m0[33u].y;
            float _3968 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
            float _2289 = (isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1947, cbSceneParam._m0[33u].w + _1948), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1947, _1948 - cbSceneParam._m0[33u].z), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1947 - cbSceneParam._m0[33u].z, _1948 - cbSceneParam._m0[33u].w), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1947 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1948), _2239), 0.0)).x), vec4(0.25)));
            float _2293 = 1.0 - (_2289 * cbSceneParam._m0[34u].x);
            float _2294 = 1.0 - (_2289 * cbSceneParam._m0[34u].y);
            float _2295 = 1.0 - (_2289 * cbSceneParam._m0[34u].z);
            frontier_phi_45_44_ladder = isnan(_2295) ? _1894 : (isnan(_1894) ? _2295 : min(_1894, _2295));
            frontier_phi_45_44_ladder_1 = isnan(_2294) ? _1893 : (isnan(_1893) ? _2294 : min(_1893, _2294));
            frontier_phi_45_44_ladder_2 = isnan(_2293) ? _1892 : (isnan(_1892) ? _2293 : min(_1892, _2293));
        }
        else
        {
            frontier_phi_45_44_ladder = _1894;
            frontier_phi_45_44_ladder_1 = _1893;
            frontier_phi_45_44_ladder_2 = _1892;
        }
        _1958 = frontier_phi_45_44_ladder_2;
        _1960 = frontier_phi_45_44_ladder_1;
        _1962 = frontier_phi_45_44_ladder;
    }
    else
    {
        _1958 = _1892;
        _1960 = _1893;
        _1962 = _1894;
    }
    uvec4 _1967 = floatBitsToUint(cbInstanceData._m0[_615 + 5u]);
    uint _1969 = _1967.x * 14u;
    uint _1970 = _1969 + 13u;
    float _1975 = _641 + (-1.0);
    float _1978 = (cbLight._m0[_1970].x * _1975) + 1.0;
    float _1979 = (cbLight._m0[_1970].y * _1975) + 1.0;
    uint _1980 = _1969 + 5u;
    float _1986 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    uint _1990 = _1969 + 4u;
    float _1999 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    uint _2003 = _1969 | 1u;
    float _2014 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_527, _528, _529));
    float _2017 = dot(vec3(cbLight._m0[_2003].xyz), vec3(_527, _528, _529));
    float _4004 = isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0));
    float _4015 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2022 = (isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0))) * 0.3183098733425140380859375;
    float _2024 = (isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0))) * 0.3183098733425140380859375;
    float _2031 = ((cbLight._m0[_1980].x * _1986) * _2024) + (((cbLight._m0[_1990].x * _1958) * _1999) * _2022);
    float _2032 = ((_1986 * cbLight._m0[_1980].y) * _2024) + (((cbLight._m0[_1990].y * _1960) * _1999) * _2022);
    float _2033 = ((_1986 * cbLight._m0[_1980].z) * _2024) + (((cbLight._m0[_1990].z * _1962) * _1999) * _2022);
    uint _2035 = _1969 + 8u;
    float _2048 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1969].w)) * _530) * 0.949999988079071044921875);
    float _2049 = _2048 * _2048;
    float _2050 = cbLight._m0[_1969].x + _554;
    float _2051 = cbLight._m0[_1969].y + _555;
    float _2052 = cbLight._m0[_1969].z + _556;
    float _2056 = inversesqrt(dot(vec3(_2050, _2051, _2052), vec3(_2050, _2051, _2052)));
    float _2057 = _2056 * _2050;
    float _2058 = _2056 * _2051;
    float _2059 = _2056 * _2052;
    float _2060 = dot(vec3(_527, _528, _529), vec3(cbLight._m0[_1969].xyz));
    float _4026 = isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0));
    float _2063 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _2064 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    float _2065 = dot(vec3(_527, _528, _529), vec3(_2057, _2058, _2059));
    float _4048 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
    float _2068 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    float _2069 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_2057, _2058, _2059));
    float _4059 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
    float _2073 = _2049 * _2049;
    float _2077 = ((_2068 * _2068) * (_2073 + (-1.0))) + 1.0;
    float _2088 = (exp2(log2(1.0 - (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2089 = 1.0 - _2049;
    float _2100 = (0.5 / (((_2064 * ((_2063 * _2089) + _2049)) + 9.9999999392252902907785028219223e-09) + (((_2064 * _2089) + _2049) * _2063))) * _2063;
    float _4070 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
    float _2102 = (isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0))) * (_2073 / ((_2077 * _2077) * 3.141590118408203125));
    uint _2116 = _1969 + 9u;
    float _2127 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2003].w)) * _530) * 0.949999988079071044921875);
    float _2128 = _2127 * _2127;
    float _2129 = cbLight._m0[_2003].x + _554;
    float _2130 = cbLight._m0[_2003].y + _555;
    float _2131 = cbLight._m0[_2003].z + _556;
    float _2135 = inversesqrt(dot(vec3(_2129, _2130, _2131), vec3(_2129, _2130, _2131)));
    float _2136 = _2135 * _2129;
    float _2137 = _2135 * _2130;
    float _2138 = _2135 * _2131;
    float _2139 = dot(vec3(_527, _528, _529), vec3(cbLight._m0[_2003].xyz));
    float _4081 = isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0));
    float _2142 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _2143 = dot(vec3(_527, _528, _529), vec3(_2136, _2137, _2138));
    float _4092 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
    float _2146 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
    float _2147 = dot(vec3(cbLight._m0[_2003].xyz), vec3(_2136, _2137, _2138));
    float _4103 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2151 = _2128 * _2128;
    float _2155 = ((_2146 * _2146) * (_2151 + (-1.0))) + 1.0;
    float _2164 = (exp2(log2(1.0 - (isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2165 = 1.0 - _2128;
    float _2175 = (0.5 / (((_2064 * ((_2142 * _2165) + _2128)) + 9.9999999392252902907785028219223e-09) + (((_2064 * _2165) + _2128) * _2142))) * _2142;
    float _4114 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
    float _2177 = (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_2151 / ((_2155 * _2155) * 3.141590118408203125));
    float _2187 = (((_2164 * cbLight._m0[_2116].x) * _2177) * _1986) + ((((cbLight._m0[_2035].x * _1958) * _2088) * _2102) * _1999);
    float _2188 = (((_2164 * cbLight._m0[_2116].y) * _2177) * _1986) + ((((cbLight._m0[_2035].y * _1960) * _2088) * _2102) * _1999);
    float _2189 = (((_2164 * cbLight._m0[_2116].z) * _2177) * _1986) + ((((cbLight._m0[_2035].z * _1962) * _2088) * _2102) * _1999);
    float _2352;
    float _2354;
    float _2356;
    float _2358;
    float _2360;
    float _2362;
    if (_1967.y == 0u)
    {
        uvec4 _2307 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2308 = _2307.x;
        uint _2319 = uint((float(_2307.y) * floor(float(uint(cbSceneParam._m0[85u].y * _577) / _2308))) + floor(float(uint(cbSceneParam._m0[85u].x * _576) / _2308)));
        float _2329 = (log2(_1745 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2330 = isnan(0.0) ? _2329 : (isnan(_2329) ? 0.0 : max(_2329, 0.0));
        uint _2333 = uint(isnan(14.0) ? _2330 : (isnan(_2330) ? 14.0 : min(_2330, 14.0)));
        uvec4 _2338 = texelFetch(g_lightClusterGridBuffer, int(((_2333 << 2u) + (_2319 << 6u)) >> 2u));
        uint _2339 = _2338.x;
        uint _2340 = _2307.z;
        float _2463;
        float _2465;
        float _2467;
        float _2469;
        float _2471;
        float _2473;
        if (((((1u << ((_2340 >> 4u) & 15u)) + 4294967295u) & _2339) == 0u) || ((_2340 & 240u) == 0u))
        {
            _2463 = 0.0;
            _2465 = 0.0;
            _2467 = 0.0;
            _2469 = 0.0;
            _2471 = 0.0;
            _2473 = 0.0;
        }
        else
        {
            float _2464;
            float _2466;
            float _2468;
            float _2470;
            float _2472;
            float _2474;
            float _2641 = 0.0;
            float _2642 = 0.0;
            float _2643 = 0.0;
            float _2644 = 0.0;
            float _2645 = 0.0;
            float _2646 = 0.0;
            uint _2647 = 0u;
            uint _2656;
            bool _2657;
            for (;;)
            {
                _2656 = texelFetch(g_lightClassification, int((((_2333 << 5u) + (_2319 << 9u)) + (_2647 << 2u)) >> 2u)).x;
                _2657 = _2656 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_2657)
                {
                    frontier_phi_71_pred = _2644;
                    frontier_phi_71_pred_1 = _2643;
                    frontier_phi_71_pred_2 = _2642;
                    frontier_phi_71_pred_3 = _2641;
                    frontier_phi_71_pred_4 = _2645;
                    frontier_phi_71_pred_5 = _2646;
                }
                else
                {
                    float _2807;
                    float _2808;
                    float _2809;
                    float _2810;
                    float _2811;
                    float _2812;
                    uint _2813;
                    _2807 = _2641;
                    _2808 = _2642;
                    _2809 = _2643;
                    _2810 = _2644;
                    _2811 = _2645;
                    _2812 = _2646;
                    _2813 = _2656;
                    float _2734;
                    float _2735;
                    float _2736;
                    float _2737;
                    float _2738;
                    float _2739;
                    for (;;)
                    {
                        uint _2817 = uint(findLSB(_2813)) + (_2647 << 5u);
                        uint _2814 = (_2813 + 4294967295u) & _2813;
                        uint _2819 = _2817 * 48u;
                        vec4 _2833 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2819)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 3u)).x));
                        uint _2839 = (_2817 * 48u) + 4u;
                        vec4 _2852 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2839)).x, texelFetch(g_PointLightRenderingBuffer, int(_2839 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2839 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2839 + 3u)).x));
                        uint _2858 = (_2817 * 48u) + 8u;
                        vec3 _2869 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2858)).x, texelFetch(g_PointLightRenderingBuffer, int(_2858 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2858 + 2u)).x));
                        float _2873 = _2833.x - _1743;
                        float _2874 = _2833.y - _1744;
                        float _2875 = _2833.z - _1745;
                        float _2876 = dot(vec3(_2873, _2874, _2875), vec3(_2873, _2874, _2875));
                        float _2879 = inversesqrt(_2876);
                        float _2880 = _2879 * _2873;
                        float _2881 = _2879 * _2874;
                        float _2882 = _2879 * _2875;
                        float _2883 = dot(vec3(_596, _599, _602), vec3(_2880, _2881, _2882));
                        float _2888 = 1.0 - (_2876 * _2833.w);
                        float _4135 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
                        float _2889 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
                        float _2890 = sqrt(_2876) * _2852.w;
                        float _2893 = 1.39999997615814208984375 / (_2890 + 1.39999997615814208984375);
                        float _2894 = _2893 * _2893;
                        float _2897 = ((1.0 - _2894) * _2883) + _2894;
                        float _2900 = _2890 * _2890;
                        float _2904 = ((isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0))) * _2889) / ((_2900 * 0.699999988079071044921875) + 1.0);
                        float _2908 = (-0.0) - _1743;
                        float _2909 = (-0.0) - _1744;
                        float _2910 = (-0.0) - _1745;
                        float _2914 = inversesqrt(dot(vec3(_2908, _2909, _2910), vec3(_2908, _2909, _2910)));
                        float _2915 = _2914 * _2908;
                        float _2916 = _2914 * _2909;
                        float _2917 = _2914 * _2910;
                        float _2924 = exp2(log2(1.0 / ((_2900 * 3.5) + 5.0)) * 0.25);
                        float _2925 = 1.0 - _657;
                        float _2932 = sqrt(1.0 - ((1.0 - (_2925 * _2925)) * (1.0 - (_2924 * _2924))));
                        float _2933 = _2932 * _2932;
                        float _2934 = _2933 * _2933;
                        float _2935 = _2915 + _2880;
                        float _2936 = _2916 + _2881;
                        float _2937 = _2917 + _2882;
                        float _2941 = inversesqrt(dot(vec3(_2935, _2936, _2937), vec3(_2935, _2936, _2937)));
                        float _2945 = dot(vec3(_596, _599, _602), vec3(_2915, _2916, _2917));
                        float _4151 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
                        float _2948 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
                        float _2949 = dot(vec3(_596, _599, _602), vec3(_2941 * _2935, _2941 * _2936, _2941 * _2937));
                        float _4162 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
                        float _2952 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
                        float _2956 = ((_2952 * _2952) * (_2934 + (-1.0))) + 1.0;
                        float _2957 = _2893 * _2933;
                        float _2958 = _2957 * _2957;
                        float _2961 = ((1.0 - _2958) * _2883) + _2958;
                        float _4173 = isnan(0.0) ? _2961 : (isnan(_2961) ? 0.0 : max(_2961, 0.0));
                        float _2962 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
                        float _2963 = 1.0 - _2933;
                        float _2973 = (0.5 / (((_2962 * ((_2948 * _2963) + _2933)) + 9.9999999392252902907785028219223e-09) + (((_2962 * _2963) + _2933) * _2948))) * _2962;
                        float _4184 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
                        float _2984 = (((_2934 * 3.1415927410125732421875) * (isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0)))) / ((_2956 * _2956) * ((_2900 * 2.1991131305694580078125) + 3.141590118408203125))) * _2889;
                        _2737 = (_2904 * _2852.x) + _2810;
                        _2738 = (_2904 * _2852.y) + _2811;
                        _2739 = (_2904 * _2852.z) + _2812;
                        _2734 = (_2984 * _2869.x) + _2807;
                        _2735 = (_2984 * _2869.y) + _2808;
                        _2736 = (_2984 * _2869.z) + _2809;
                        if (_2814 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2807 = _2734;
                            _2808 = _2735;
                            _2809 = _2736;
                            _2810 = _2737;
                            _2811 = _2738;
                            _2812 = _2739;
                            _2813 = _2814;
                        }
                    }
                    frontier_phi_71_pred = _2737;
                    frontier_phi_71_pred_1 = _2736;
                    frontier_phi_71_pred_2 = _2735;
                    frontier_phi_71_pred_3 = _2734;
                    frontier_phi_71_pred_4 = _2738;
                    frontier_phi_71_pred_5 = _2739;
                }
                _2470 = frontier_phi_71_pred;
                _2468 = frontier_phi_71_pred_1;
                _2466 = frontier_phi_71_pred_2;
                _2464 = frontier_phi_71_pred_3;
                _2472 = frontier_phi_71_pred_4;
                _2474 = frontier_phi_71_pred_5;
                uint _2648 = _2647 + 1u;
                if (_2648 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2641 = _2464;
                    _2642 = _2466;
                    _2643 = _2468;
                    _2644 = _2470;
                    _2645 = _2472;
                    _2646 = _2474;
                    _2647 = _2648;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2463 = _2464;
            _2465 = _2466;
            _2467 = _2468;
            _2469 = _2470;
            _2471 = _2472;
            _2473 = _2474;
        }
        uvec4 _2477 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2478 = _2477.z;
        uint _2480 = (_2478 >> 8u) & 15u;
        float _2609;
        float _2611;
        float _2613;
        float _2615;
        float _2617;
        float _2619;
        if (((4294967295u << _2480) & _2339) == 0u)
        {
            _2609 = _2463;
            _2611 = _2465;
            _2613 = _2467;
            _2615 = _2469;
            _2617 = _2471;
            _2619 = _2473;
        }
        else
        {
            float _2634 = inversesqrt(dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745)));
            float _2635 = _2634 * _1743;
            float _2636 = _2634 * _1744;
            float _2637 = _2634 * _1745;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2480 < ((_2478 >> 12u) & 15u))
            {
                float _2610;
                float _2612;
                float _2614;
                float _2616;
                float _2618;
                float _2620;
                float _2790 = _2463;
                float _2791 = _2465;
                float _2792 = _2467;
                float _2793 = _2469;
                float _2794 = _2471;
                float _2795 = _2473;
                uint _2796 = _2480;
                uint _2805;
                bool _2806;
                for (;;)
                {
                    _2805 = texelFetch(g_lightClassification, int((((_2333 << 5u) + (_2319 << 9u)) + (_2796 << 2u)) >> 2u)).x;
                    _2806 = _2805 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_2806)
                    {
                        frontier_phi_82_pred = _2793;
                        frontier_phi_82_pred_1 = _2792;
                        frontier_phi_82_pred_2 = _2791;
                        frontier_phi_82_pred_3 = _2790;
                        frontier_phi_82_pred_4 = _2795;
                        frontier_phi_82_pred_5 = _2794;
                    }
                    else
                    {
                        float _2998;
                        float _2999;
                        float _3000;
                        float _3001;
                        float _3002;
                        float _3003;
                        float _3291;
                        float _3292;
                        float _3293;
                        float _3294;
                        float _3295;
                        float _3296;
                        float _3011 = _2790;
                        float _3012 = _2791;
                        float _3013 = _2792;
                        float _3014 = _2793;
                        float _3015 = _2794;
                        float _3016 = _2795;
                        uint _3017 = _2805;
                        uint _3018;
                        vec4 _3043;
                        float _3044;
                        vec4 _3059;
                        vec3 _3071;
                        vec4 _3086;
                        vec4 _3101;
                        float _3147;
                        bool _3148;
                        for (;;)
                        {
                            uint _3028 = ((_2796 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3017));
                            _3018 = (_3017 + 4294967295u) & _3017;
                            uint _3030 = _3028 * 40u;
                            _3043 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3030)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3030 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3030 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3030 + 3u)).x));
                            _3044 = _3043.w;
                            uint _3046 = (_3028 * 40u) + 4u;
                            _3059 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3046)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3046 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3046 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3046 + 3u)).x));
                            uint _3061 = (_3028 * 40u) + 8u;
                            _3071 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3061)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3061 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3061 + 2u)).x));
                            uint _3073 = (_3028 * 40u) + 16u;
                            _3086 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3073)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3073 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3073 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3073 + 3u)).x));
                            uint _3088 = (_3028 * 40u) + 20u;
                            _3101 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3088)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3088 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3088 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3088 + 3u)).x));
                            uint _3103 = (_3028 * 40u) + 24u;
                            vec4 _3116 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3103)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3103 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3103 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3103 + 3u)).x));
                            uint _3122 = (_3028 * 40u) + 28u;
                            vec4 _3135 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3122)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 3u)).x));
                            _3147 = fma(_1745, _3135.z, fma(_1744, _3135.y, _3135.x * _1743)) + _3135.w;
                            _3148 = !((fma(_1745, _3116.z, fma(_1744, _3116.y, _3116.x * _1743)) + _3116.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3148)
                            {
                                float _3175 = _3043.x - _1743;
                                float _3176 = _3043.y - _1744;
                                float _3177 = _3043.z - _1745;
                                float _3178 = dot(vec3(_3175, _3176, _3177), vec3(_3175, _3176, _3177));
                                float _3181 = inversesqrt(_3178);
                                float _3182 = _3181 * _3175;
                                float _3183 = _3181 * _3176;
                                float _3184 = _3181 * _3177;
                                float _3188 = 1.0 - (_3178 / (_3044 * _3044));
                                float _4195 = isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : max(_3188, 0.0));
                                float _3189 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
                                float _3193 = sqrt(_3178) * _3059.w;
                                float _3195 = 1.39999997615814208984375 / (_3193 + 1.39999997615814208984375);
                                float _3196 = _3195 * _3195;
                                float _3199 = ((1.0 - _3196) * dot(vec3(_3182, _3183, _3184), vec3(_596, _599, _602))) + _3196;
                                float _3202 = _3193 * _3193;
                                float _3206 = (fma(_1745, _3086.z, fma(_1744, _3086.y, _3086.x * _1743)) + _3086.w) / _3147;
                                float _3207 = (fma(_1745, _3101.z, fma(_1744, _3101.y, _3101.x * _1743)) + _3101.w) / _3147;
                                float _3211 = 1.0 - dot(vec2(_3206, _3207), vec2(_3206, _3207));
                                float _4211 = isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0));
                                float _3212 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
                                float _3213 = _3212 * (((isnan(0.0) ? _3199 : (isnan(_3199) ? 0.0 : max(_3199, 0.0))) * _3189) / ((_3202 * 0.699999988079071044921875) + 1.0));
                                float _3225 = exp2(log2(1.0 / ((_3202 * 3.5) + 5.0)) * 0.25);
                                float _3226 = 1.0 - _657;
                                float _3233 = sqrt(1.0 - ((1.0 - (_3226 * _3226)) * (1.0 - (_3225 * _3225))));
                                float _3234 = _3233 * _3233;
                                float _3235 = _3234 * _3234;
                                float _3236 = _3182 - _2635;
                                float _3237 = _3183 - _2636;
                                float _3238 = _3184 - _2637;
                                float _3242 = inversesqrt(dot(vec3(_3236, _3237, _3238), vec3(_3236, _3237, _3238)));
                                float _3246 = dot(vec3(_596, _599, _602), vec3((-0.0) - _2635, (-0.0) - _2636, (-0.0) - _2637));
                                float _4222 = isnan(0.0) ? _3246 : (isnan(_3246) ? 0.0 : max(_3246, 0.0));
                                float _3249 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
                                float _3250 = dot(vec3(_596, _599, _602), vec3(_3242 * _3236, _3242 * _3237, _3242 * _3238));
                                float _4233 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
                                float _3253 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
                                float _3257 = ((_3253 * _3253) * (_3235 + (-1.0))) + 1.0;
                                float _3258 = _3195 * _3234;
                                float _3259 = _3258 * _3258;
                                float _3265 = ((1.0 - _3259) * dot(vec3(_596, _599, _602), vec3(_3182, _3183, _3184))) + _3259;
                                float _4244 = isnan(0.0) ? _3265 : (isnan(_3265) ? 0.0 : max(_3265, 0.0));
                                float _3266 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
                                float _3267 = 1.0 - _3234;
                                float _3277 = (0.5 / (((_3266 * ((_3249 * _3267) + _3234)) + 9.9999999392252902907785028219223e-09) + (((_3266 * _3267) + _3234) * _3249))) * _3266;
                                float _4255 = isnan(0.0) ? _3277 : (isnan(_3277) ? 0.0 : max(_3277, 0.0));
                                float _3287 = (_3212 * _3189) * (((_3235 * 3.1415927410125732421875) * (isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0)))) / ((_3257 * _3257) * ((_3202 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3213 * _3059.x;
                                frontier_phi_88_pred_1 = _3287 * _3071.z;
                                frontier_phi_88_pred_2 = _3287 * _3071.y;
                                frontier_phi_88_pred_3 = _3287 * _3071.x;
                                frontier_phi_88_pred_4 = _3213 * _3059.z;
                                frontier_phi_88_pred_5 = _3213 * _3059.y;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3294 = frontier_phi_88_pred;
                            _3293 = frontier_phi_88_pred_1;
                            _3292 = frontier_phi_88_pred_2;
                            _3291 = frontier_phi_88_pred_3;
                            _3296 = frontier_phi_88_pred_4;
                            _3295 = frontier_phi_88_pred_5;
                            _3001 = _3294 + _3014;
                            _3002 = _3295 + _3015;
                            _3003 = _3296 + _3016;
                            _2998 = _3291 + _3011;
                            _2999 = _3292 + _3012;
                            _3000 = _3293 + _3013;
                            if (_3018 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3011 = _2998;
                                _3012 = _2999;
                                _3013 = _3000;
                                _3014 = _3001;
                                _3015 = _3002;
                                _3016 = _3003;
                                _3017 = _3018;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3001;
                        frontier_phi_82_pred_1 = _3000;
                        frontier_phi_82_pred_2 = _2999;
                        frontier_phi_82_pred_3 = _2998;
                        frontier_phi_82_pred_4 = _3003;
                        frontier_phi_82_pred_5 = _3002;
                    }
                    _2616 = frontier_phi_82_pred;
                    _2614 = frontier_phi_82_pred_1;
                    _2612 = frontier_phi_82_pred_2;
                    _2610 = frontier_phi_82_pred_3;
                    _2620 = frontier_phi_82_pred_4;
                    _2618 = frontier_phi_82_pred_5;
                    uint _2797 = _2796 + 1u;
                    if (_2797 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2790 = _2610;
                        _2791 = _2612;
                        _2792 = _2614;
                        _2793 = _2616;
                        _2794 = _2618;
                        _2795 = _2620;
                        _2796 = _2797;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2620;
                frontier_phi_62_63_ladder_1 = _2618;
                frontier_phi_62_63_ladder_2 = _2616;
                frontier_phi_62_63_ladder_3 = _2612;
                frontier_phi_62_63_ladder_4 = _2610;
                frontier_phi_62_63_ladder_5 = _2614;
            }
            else
            {
                frontier_phi_62_63_ladder = _2473;
                frontier_phi_62_63_ladder_1 = _2471;
                frontier_phi_62_63_ladder_2 = _2469;
                frontier_phi_62_63_ladder_3 = _2465;
                frontier_phi_62_63_ladder_4 = _2463;
                frontier_phi_62_63_ladder_5 = _2467;
            }
            _2609 = frontier_phi_62_63_ladder_4;
            _2611 = frontier_phi_62_63_ladder_3;
            _2613 = frontier_phi_62_63_ladder_5;
            _2615 = frontier_phi_62_63_ladder_2;
            _2617 = frontier_phi_62_63_ladder_1;
            _2619 = frontier_phi_62_63_ladder;
        }
        float _2624 = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
        _2352 = (_2624 * _2615) + _2031;
        _2354 = (_2624 * _2617) + _2032;
        _2356 = (_2624 * _2619) + _2033;
        _2358 = ((_2609 * 0.039999999105930328369140625) * _2624) + _2187;
        _2360 = ((_2611 * 0.039999999105930328369140625) * _2624) + _2188;
        _2362 = ((_2613 * 0.039999999105930328369140625) * _2624) + _2189;
    }
    else
    {
        _2352 = _2031;
        _2354 = _2032;
        _2356 = _2033;
        _2358 = _2187;
        _2360 = _2188;
        _2362 = _2189;
    }
    uint _2368 = _617 + uint(cbMatDynParam._m0[0u].w);
    float _4271 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _4282 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _4293 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _2393 = (((isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * (_2352 + ((isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0))) * _641))) + ((_2358 + ((isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))) * _1478)) * cbPerFrame._m0[3u].x)) + (((_458 - (_458 * _292)) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2368].x);
    float _2395 = ((((_459 - (_459 * _292)) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_2368].y) + ((_2360 + ((isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0))) * _1478)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * (_2354 + ((isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0))) * _641)));
    float _2397 = (((cbMtdParam._m0[9u].z * (_460 - (_460 * _292))) * cbInstanceData._m0[_2368].z) + ((_2362 + ((isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))) * _1478)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0))) * (_2356 + ((isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0))) * _641)));
    float _2398 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2399 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
    float _2400 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    uint _2401 = _615 + 6u;
    float _2409 = _576 / cbSceneParam._m0[86u].x;
    float _2410 = _577 / cbSceneParam._m0[86u].y;
    vec4 _2424 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2409, _2410, (log2((isnan(cbSceneParam._m0[77u].w) ? _549 : (isnan(_549) ? cbSceneParam._m0[77u].w : min(_549, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2426 = _2424.x;
    float _2427 = _2424.y;
    float _2428 = _2424.z;
    float _2429 = _2424.w;
    float _2525;
    float _2527;
    float _2529;
    float _2531;
    if (_549 > cbSceneParam._m0[78u].w)
    {
        float _2488 = isnan(_549) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _549 : min(cbSceneParam._m0[80u].w, _549));
        float _2489 = _2488 / _549;
        float _2500 = _2489 * _265;
        float _2501 = _266 * _2489;
        float _2502 = (-0.0) - _2501;
        float _2503 = _2489 * _267;
        float _2505 = (cbSceneParam._m0[77u].w * _2502) / _2488;
        float _2506 = _2505 + cbSceneParam._m0[79u].w;
        float _2507 = cbSceneParam._m0[79u].w - _2501;
        float _2513 = sqrt(((_2500 * _2500) + (_2501 * _2501)) + (_2503 * _2503));
        float _2516 = (1.0 - (cbSceneParam._m0[77u].w / _2488)) * _2513;
        float _2521 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2523 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2747;
        if (abs((_2502 - _2505) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2747 = ((((_2506 > 0.0) ? exp2(_2521 * _2506) : (2.0 - exp2(_2523 * _2506))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2516;
        }
        else
        {
            float _2670 = 1.0 / cbSceneParam._m0[80u].x;
            float _2671 = isnan(_2507) ? _2506 : (isnan(_2506) ? _2507 : max(_2506, _2507));
            float _2672 = isnan(_2507) ? _2506 : (isnan(_2506) ? _2507 : min(_2506, _2507));
            float _2681 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : min(_2671, 0.0));
            float _2682 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : min(_2672, 0.0));
            _2747 = ((abs(_2513 / _2502) * cbSceneParam._m0[80u].y) * ((((_2681 - _2682) * 2.0) - ((exp2(_2521 * (isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0)))) - exp2(_2521 * (isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0))))) * _2670)) - ((exp2(_2523 * _2681) - exp2(_2523 * _2682)) * _2670))) + (_2516 * cbSceneParam._m0[80u].z);
        }
        vec4 _2749 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2409, _2410, 1.0), 0.0);
        float _2758 = exp2((_2747 * (-1.44269502162933349609375)) * (1.0 - _2749.w));
        float _2759 = log2(_2758);
        float _2775 = log2(_2429);
        _2525 = (exp2(_2775 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2759 * cbSceneParam._m0[78u].x)) * _2749.x) / cbSceneParam._m0[78u].x)) + _2426;
        _2527 = (exp2(_2775 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2759 * cbSceneParam._m0[78u].y)) * _2749.y) / cbSceneParam._m0[78u].y)) + _2427;
        _2529 = (exp2(_2775 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2759 * cbSceneParam._m0[78u].z)) * _2749.z) / cbSceneParam._m0[78u].z)) + _2428;
        _2531 = _2758 * _2429;
    }
    else
    {
        _2525 = _2426;
        _2527 = _2427;
        _2529 = _2428;
        _2531 = _2429;
    }
    bool _2785;
    vec4 _2541;
    vec4 _2563;
    float _2565;
    float _2569;
    float _2570;
    float _2571;
    float _2572;
    bool _2582;
    for (;;)
    {
        _2541 = cbMatDynParam._m0[0u];
        float _2543 = roundEven(_2541.y);
        bool _2544 = _2543 == 3.0;
        float _2545 = log2(_2531);
        float _2552 = exp2(_2545 * cbSceneParam._m0[78u].x) * _2398;
        float _2553 = exp2(_2545 * cbSceneParam._m0[78u].y) * _2399;
        float _2554 = exp2(_2545 * cbSceneParam._m0[78u].z) * _2400;
        float _2561 = _563 + (-0.5);
        _2563 = cbMtdParam._m0[1u];
        _2565 = _2563.y * _2561;
        float _2568 = (_2543 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2569 = _2568 * (_2544 ? _2552 : (_2552 + (cbSceneParam._m0[72u].w * _2525)));
        _2570 = _2568 * (_2544 ? _2553 : (_2553 + (cbSceneParam._m0[72u].w * _2527)));
        _2571 = _2568 * (_2544 ? _2554 : (_2554 + (cbSceneParam._m0[72u].w * _2529)));
        _2572 = _2561 * 0.999000012874603271484375;
        _2582 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2582)
        {
            if ((cbInstanceData._m0[_615 + 7u].x + _2572) < 0.5)
            {
                _2785 = true;
                break;
            }
        }
        uint _2705 = _617 + uint(_2541.w);
        if ((cbInstanceData._m0[_2705].w < 1.0) && ((cbInstanceData._m0[_2705].w + _2572) < 0.5))
        {
            _2785 = true;
            break;
        }
        if ((_2565 + 1.0) < _2563.x)
        {
            _2785 = true;
            break;
        }
        _2785 = false;
        break;
    }
    float _2989;
    if (_2785)
    {
        discard_state = true;
        _2989 = 0.0;
    }
    else
    {
        _2989 = cbInstanceData._m0[_2401].w;
    }
    SV_Target.x = _2569;
    SV_Target.y = _2570;
    SV_Target.z = _2571;
    SV_Target.w = _2989;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2401].w;
    discard_exit();
}


