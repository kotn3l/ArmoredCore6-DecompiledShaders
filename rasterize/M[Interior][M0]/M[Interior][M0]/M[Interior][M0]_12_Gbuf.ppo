#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _195 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _233 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _195));
    float _234 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _195));
    float _235 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _195));
    float _249 = (-0.0) - dot(vec3(_233, _234, _235), vec3(_133 * _126, _133 * _127, _133 * _128));
    float _250 = (-0.0) - dot(vec3(_233, _234, _235), vec3(_147 * TANGENT.x, _147 * TANGENT.y, _147 * TANGENT.z));
    float _251 = (-0.0) - dot(vec3(_233, _234, _235), vec3((-0.0) - (_140 * NORMAL.x), (-0.0) - (_140 * NORMAL.y), (-0.0) - (_140 * NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(_249, _250, _251), vec3(_249, _250, _251)));
    float _256 = _255 * _251;
    float _258 = (cbMtdParam._m0[19u].x * _249) * _255;
    float _260 = (cbMtdParam._m0[18u].w * _250) * _255;
    float _261 = fract(TEXCOORD.x);
    float _262 = fract(TEXCOORD.y);
    float _268;
    if (_258 > 0.0)
    {
        _268 = (1.0 - _261) / _258;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_258 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _261) / _258;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _268 = frontier_phi_3_2_ladder;
    }
    float _276;
    if (_260 > 0.0)
    {
        _276 = (1.0 - _262) / _260;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_260 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _262) / _260;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _276 = frontier_phi_7_6_ladder;
    }
    bool _278 = _256 > 0.0;
    float _280 = _278 ? (cbMtdParam._m0[15u].x / _256) : 5000.0;
    float _281 = isnan(_276) ? _268 : (isnan(_268) ? _276 : min(_268, _276));
    float _282 = isnan(_280) ? _281 : (isnan(_281) ? _280 : min(_281, _280));
    float _286 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _287 = _261 + (-0.5);
    float _290 = _262 + (-0.5);
    float _293 = ((_282 * _256) + _286) / _286;
    vec4 _319 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_287 + (_282 * _258)) / _293) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_290 + (_282 * _260)) / _293) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _330 = cbMtdParam._m0[9u].x * _319.x;
    float _331 = cbMtdParam._m0[9u].y * _319.y;
    float _332 = cbMtdParam._m0[9u].z * _319.z;
    float _354 = (cbMtdParam._m0[21u].x * _249) * _255;
    float _356 = (cbMtdParam._m0[20u].w * _250) * _255;
    bool _357 = _354 > 0.0;
    float _362;
    if (_357)
    {
        _362 = (1.0 - _261) / _354;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_354 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _261) / _354;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _362 = frontier_phi_11_10_ladder;
    }
    bool _364 = _356 > 0.0;
    float _369;
    if (_364)
    {
        _369 = (1.0 - _262) / _356;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _262) / _356;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _369 = frontier_phi_15_14_ladder;
    }
    float _372 = _278 ? (cbMtdParam._m0[16u].z / _256) : 5000.0;
    float _373 = isnan(_369) ? _362 : (isnan(_362) ? _369 : min(_362, _369));
    float _374 = isnan(_372) ? _373 : (isnan(_373) ? _372 : min(_373, _372));
    float _378 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _382 = ((_374 * _256) + _378) / _378;
    float _387 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _389 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _405 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_287 + (_374 * _354)) / _382) + 0.5) + _387) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_290 + (_374 * _356)) / _382) + 0.5) + _389) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _417;
    if (_357)
    {
        _417 = (1.0 - _261) / _354;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_354 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _261) / _354;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _417 = frontier_phi_19_18_ladder;
    }
    float _423;
    if (_364)
    {
        _423 = (1.0 - _262) / _356;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _262) / _356;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _423 = frontier_phi_23_22_ladder;
    }
    float _425 = isnan(_423) ? _417 : (isnan(_417) ? _423 : min(_417, _423));
    float _426 = isnan(_372) ? _425 : (isnan(_425) ? _372 : min(_425, _372));
    float _433 = ((_426 * _256) + _378) / _378;
    vec4 _447 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_287 + (_426 * _354)) / _433) + 0.5) + _387) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_290 + (_426 * _356)) / _433) + 0.5) + _389) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _449 = _447.w;
    float _456 = (_449 * ((_405.x * cbMtdParam._m0[10u].x) - _330)) + _330;
    float _457 = (_449 * ((_405.y * cbMtdParam._m0[10u].y) - _331)) + _331;
    float _458 = (_449 * ((_405.z * cbMtdParam._m0[10u].z) - _332)) + _332;
    float _603 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _614 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _625 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    uint _476 = uint(roundEven(NORMAL.w)) * 13u;
    uint _479 = (_476 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _485 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0)))) * cbInstanceData._m0[_479].x;
    float _486 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0)))) * cbInstanceData._m0[_479].y;
    float _487 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0)))) * cbInstanceData._m0[_479].z;
    float _636 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _647 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0));
    float _658 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    uint _491 = _476 + 6u;
    bool _509 = cbMtdParam._m0[1u].z != 0.0;
    float _510 = _509 ? cbInstanceData._m0[_491].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _510;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _509 ? cbInstanceData._m0[_491].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0));
    SV_Target_2.y = isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0));
    SV_Target_2.z = isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0));
    SV_Target_2.w = _509 ? cbInstanceData._m0[_491].w : (float(floatBitsToUint(cbInstanceData._m0[_476 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _510;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _510;
}


