#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _140 = _139 * _132;
    float _141 = _139 * _133;
    float _142 = _139 * _134;
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _154 = _153 * TANGENT.x;
    float _155 = _153 * TANGENT.y;
    float _156 = _153 * TANGENT.z;
    float _201 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _232 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _238 = _232.w;
    float _251 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _238) + cbMtdParam._m0[11u].x) * _232.x;
    float _253 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _238) + cbMtdParam._m0[11u].y) * _232.y;
    float _255 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _238) + cbMtdParam._m0[11u].z) * _232.z;
    vec4 _273 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _277 = _273.z;
    float _300 = (_273.x * 2.0) + (-1.0);
    float _302 = (_273.y * 2.0) + (-1.0);
    float _305 = _300 - (_300 * _238);
    float _306 = _302 - (_302 * _238);
    float _315 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _201));
    float _316 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _201));
    float _317 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _201));
    float _331 = (-0.0) - dot(vec3(_315, _316, _317), vec3(_140, _141, _142));
    float _332 = (-0.0) - dot(vec3(_315, _316, _317), vec3(_154, _155, _156));
    float _333 = (-0.0) - dot(vec3(_315, _316, _317), vec3((-0.0) - _147, (-0.0) - _148, (-0.0) - _149));
    float _337 = inversesqrt(dot(vec3(_331, _332, _333), vec3(_331, _332, _333)));
    float _340 = _337 * _333;
    float _343 = ((_337 * _331) + (_305 * cbMtdParam._m0[20u].y)) * cbMtdParam._m0[19u].x;
    float _344 = ((_337 * _332) + (_306 * cbMtdParam._m0[20u].z)) * cbMtdParam._m0[18u].w;
    float _345 = fract(TEXCOORD.x);
    float _346 = fract(TEXCOORD.y);
    float _352;
    if (_343 > 0.0)
    {
        _352 = (1.0 - _345) / _343;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_343 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _345) / _343;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _352 = frontier_phi_3_2_ladder;
    }
    float _360;
    if (_344 > 0.0)
    {
        _360 = (1.0 - _346) / _344;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_344 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _346) / _344;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _360 = frontier_phi_7_6_ladder;
    }
    float _364 = (_340 > 0.0) ? (cbMtdParam._m0[15u].x / _340) : 5000.0;
    float _365 = isnan(_360) ? _352 : (isnan(_352) ? _360 : min(_352, _360));
    float _366 = isnan(_364) ? _365 : (isnan(_365) ? _364 : min(_365, _364));
    float _370 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _377 = ((_366 * _340) + _370) / _370;
    vec4 _402 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_345 + (-0.5)) + (_366 * _343)) / _377) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_346 + (-0.5)) + (_366 * _344)) / _377) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _404 = _402.x;
    float _405 = _402.y;
    float _406 = _402.z;
    vec4 _432 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _436 = _432.z;
    float _439 = (_432.x * 2.0) + (-1.0);
    float _440 = (_432.y * 2.0) + (-1.0);
    float _441 = dot(vec2(_439, _440), vec2(_439, _440));
    float _592 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _446 = sqrt(1.0 - (isnan(1.0) ? _592 : (isnan(_592) ? 1.0 : min(_592, 1.0))));
    float _447 = _436 * _238;
    float _454 = (cbMtdParam._m0[15u].w * ((_277 - _447) + ((_436 - _277) * _238))) + _447;
    float _458 = (cbMtdParam._m0[16u].x * _305) + _439;
    float _459 = (cbMtdParam._m0[16u].x * _306) + _440;
    float _462 = fma(_446, _147, fma(_459, _154, _458 * _140));
    float _465 = fma(_446, _148, fma(_459, _155, _458 * _141));
    float _468 = fma(_446, _149, fma(_459, _156, _458 * _142));
    float _472 = inversesqrt(dot(vec3(_462, _465, _468), vec3(_462, _465, _468)));
    float _603 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _614 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _625 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _636 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    uint _491 = uint(roundEven(NORMAL.w)) * 13u;
    uint _494 = (_491 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _500 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0)))) * cbInstanceData._m0[_494].x;
    float _501 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0)))) * cbInstanceData._m0[_494].y;
    float _502 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0)))) * cbInstanceData._m0[_494].z;
    float _647 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _658 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _669 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    uint _509 = _491 + 6u;
    bool _543 = cbMtdParam._m0[1u].z != 0.0;
    float _544 = _543 ? cbInstanceData._m0[_509].w : 0.0;
    SV_Target.x = ((_462 * 0.5) * _472) + 0.500488758087158203125;
    SV_Target.y = ((_465 * 0.5) * _472) + 0.500488758087158203125;
    SV_Target.z = ((_468 * 0.5) * _472) + 0.500488758087158203125;
    SV_Target.w = _544;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _543 ? cbInstanceData._m0[_509].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0));
    SV_Target_2.y = isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0));
    SV_Target_2.z = isnan(1.0) ? _669 : (isnan(_669) ? 1.0 : min(_669, 1.0));
    SV_Target_2.w = _543 ? cbInstanceData._m0[_509].w : (float(floatBitsToUint(cbInstanceData._m0[_491 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _544;
    SV_Target_4.x = (((_404 - (_404 * _238)) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_494].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((_405 - (_405 * _238)) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_494].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((cbMtdParam._m0[9u].z * (_406 - (_406 * _238))) * cbInstanceData._m0[_494].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _544;
}


