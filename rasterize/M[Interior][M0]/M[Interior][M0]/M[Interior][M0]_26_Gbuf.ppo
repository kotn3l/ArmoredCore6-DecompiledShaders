#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M0_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _137 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _138 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _143 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _144 = _143 * _136;
    float _145 = _143 * _137;
    float _146 = _143 * _138;
    float _150 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _151 = _150 * NORMAL.x;
    float _152 = _150 * NORMAL.y;
    float _153 = _150 * NORMAL.z;
    float _157 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _158 = _157 * TANGENT.x;
    float _159 = _157 * TANGENT.y;
    float _160 = _157 * TANGENT.z;
    float _205 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _236 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _242 = _236.w;
    float _255 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _242) + cbMtdParam._m0[11u].x) * _236.x;
    float _257 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _242) + cbMtdParam._m0[11u].y) * _236.y;
    float _259 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _242) + cbMtdParam._m0[11u].z) * _236.z;
    vec4 _277 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _281 = _277.z;
    float _304 = (_277.x * 2.0) + (-1.0);
    float _306 = (_277.y * 2.0) + (-1.0);
    float _309 = _304 - (_304 * _242);
    float _310 = _306 - (_306 * _242);
    float _319 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _205));
    float _320 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _205));
    float _321 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _205));
    float _335 = (-0.0) - dot(vec3(_319, _320, _321), vec3(_144, _145, _146));
    float _336 = (-0.0) - dot(vec3(_319, _320, _321), vec3(_158, _159, _160));
    float _337 = (-0.0) - dot(vec3(_319, _320, _321), vec3((-0.0) - _151, (-0.0) - _152, (-0.0) - _153));
    float _341 = inversesqrt(dot(vec3(_335, _336, _337), vec3(_335, _336, _337)));
    float _344 = _341 * _337;
    float _345 = (_341 * _335) + (_309 * cbMtdParam._m0[20u].y);
    float _346 = (_341 * _336) + (_310 * cbMtdParam._m0[20u].z);
    float _347 = _345 * cbMtdParam._m0[19u].x;
    float _348 = _346 * cbMtdParam._m0[18u].w;
    float _349 = fract(TEXCOORD.x);
    float _350 = fract(TEXCOORD.y);
    float _356;
    if (_347 > 0.0)
    {
        _356 = (1.0 - _349) / _347;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_347 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _349) / _347;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _356 = frontier_phi_3_2_ladder;
    }
    float _364;
    if (_348 > 0.0)
    {
        _364 = (1.0 - _350) / _348;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_348 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _350) / _348;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _364 = frontier_phi_7_6_ladder;
    }
    bool _366 = _344 > 0.0;
    float _368 = _366 ? (cbMtdParam._m0[15u].x / _344) : 5000.0;
    float _369 = isnan(_364) ? _356 : (isnan(_356) ? _364 : min(_356, _364));
    float _370 = isnan(_368) ? _369 : (isnan(_369) ? _368 : min(_369, _368));
    float _374 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _375 = _349 + (-0.5);
    float _378 = _350 + (-0.5);
    float _381 = ((_370 * _344) + _374) / _374;
    vec4 _406 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_375 + (_370 * _347)) / _381) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_378 + (_370 * _348)) / _381) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _408 = _406.x;
    float _409 = _406.y;
    float _410 = _406.z;
    float _422 = (_408 - (_408 * _242)) * cbMtdParam._m0[9u].x;
    float _423 = (_409 - (_409 * _242)) * cbMtdParam._m0[9u].y;
    float _424 = cbMtdParam._m0[9u].z * (_410 - (_410 * _242));
    float _442 = _345 * cbMtdParam._m0[21u].x;
    float _443 = _346 * cbMtdParam._m0[20u].w;
    bool _444 = _442 > 0.0;
    float _449;
    if (_444)
    {
        _449 = (1.0 - _349) / _442;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _349) / _442;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _449 = frontier_phi_11_10_ladder;
    }
    bool _451 = _443 > 0.0;
    float _456;
    if (_451)
    {
        _456 = (1.0 - _350) / _443;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_443 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _350) / _443;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _456 = frontier_phi_15_14_ladder;
    }
    float _459 = _366 ? (cbMtdParam._m0[16u].z / _344) : 5000.0;
    float _460 = isnan(_456) ? _449 : (isnan(_449) ? _456 : min(_449, _456));
    float _461 = isnan(_459) ? _460 : (isnan(_460) ? _459 : min(_460, _459));
    float _465 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _469 = ((_461 * _344) + _465) / _465;
    float _474 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _476 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _492 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_375 + (_461 * _442)) / _469) + 0.5) + _474) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_378 + (_461 * _443)) / _469) + 0.5) + _476) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _497 = _492.x * cbMtdParam._m0[10u].x;
    float _498 = _492.y * cbMtdParam._m0[10u].y;
    float _499 = _492.z * cbMtdParam._m0[10u].z;
    float _507;
    if (_444)
    {
        _507 = (1.0 - _349) / _442;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _349) / _442;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _507 = frontier_phi_19_18_ladder;
    }
    float _513;
    if (_451)
    {
        _513 = (1.0 - _350) / _443;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_443 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _350) / _443;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _513 = frontier_phi_23_22_ladder;
    }
    float _515 = isnan(_513) ? _507 : (isnan(_507) ? _513 : min(_507, _513));
    float _516 = isnan(_459) ? _515 : (isnan(_515) ? _459 : min(_515, _459));
    float _523 = ((_516 * _344) + _465) / _465;
    vec4 _537 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_375 + (_516 * _442)) / _523) + 0.5) + _474) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_378 + (_516 * _443)) / _523) + 0.5) + _476) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _539 = _537.w;
    float _541 = _539 - (_539 * _242);
    float _551 = (_541 * ((_497 - _422) - (_497 * _242))) + _422;
    float _552 = (_541 * ((_498 - _423) - (_498 * _242))) + _423;
    float _553 = (_541 * ((_499 - _424) - (_499 * _242))) + _424;
    float _567 = _345 * cbMtdParam._m0[21u].z;
    float _568 = _346 * cbMtdParam._m0[21u].y;
    bool _569 = _567 > 0.0;
    float _574;
    if (_569)
    {
        _574 = (1.0 - _349) / _567;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_567 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _349) / _567;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _574 = frontier_phi_27_26_ladder;
    }
    bool _576 = _568 > 0.0;
    float _581;
    if (_576)
    {
        _581 = (1.0 - _350) / _568;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_568 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _350) / _568;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _581 = frontier_phi_31_30_ladder;
    }
    float _584 = _366 ? (cbMtdParam._m0[18u].x / _344) : 5000.0;
    float _585 = isnan(_581) ? _574 : (isnan(_574) ? _581 : min(_574, _581));
    float _586 = isnan(_584) ? _585 : (isnan(_585) ? _584 : min(_585, _584));
    float _590 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _594 = ((_586 * _344) + _590) / _590;
    float _599 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _601 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _618 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_375 + (_586 * _567)) / _594) + 0.5) + _599) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_378 + (_586 * _568)) / _594) + 0.5) + _601) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _623 = _618.x * cbMtdParam._m0[14u].x;
    float _624 = _618.y * cbMtdParam._m0[14u].y;
    float _625 = _618.z * cbMtdParam._m0[14u].z;
    float _633;
    if (_569)
    {
        _633 = (1.0 - _349) / _567;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_567 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _349) / _567;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _633 = frontier_phi_35_34_ladder;
    }
    float _639;
    if (_576)
    {
        _639 = (1.0 - _350) / _568;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_568 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _350) / _568;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _639 = frontier_phi_39_38_ladder;
    }
    float _641 = isnan(_639) ? _633 : (isnan(_633) ? _639 : min(_633, _639));
    float _642 = isnan(_584) ? _641 : (isnan(_641) ? _584 : min(_641, _584));
    float _649 = ((_642 * _344) + _590) / _590;
    vec4 _663 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_375 + (_642 * _567)) / _649) + 0.5) + _599) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_378 + (_642 * _568)) / _649) + 0.5) + _601) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _665 = _663.w;
    float _667 = _665 - (_665 * _242);
    float _678 = 0.5 - (_242 * 0.5);
    float _688 = (((_551 - _255) + (_667 * ((_623 - _551) - (_623 * _242)))) * _678) + _255;
    float _689 = (((_552 - _257) + (_667 * ((_624 - _552) - (_624 * _242)))) * _678) + _257;
    float _690 = (((_553 - _259) + (_667 * ((_625 - _553) - (_625 * _242)))) * _678) + _259;
    vec4 _702 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _706 = _702.z;
    float _709 = (_702.x * 2.0) + (-1.0);
    float _710 = (_702.y * 2.0) + (-1.0);
    float _711 = dot(vec2(_709, _710), vec2(_709, _710));
    float _940 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _716 = sqrt(1.0 - (isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0))));
    float _717 = _706 * _242;
    float _724 = (cbMtdParam._m0[15u].w * ((_281 - _717) + ((_706 - _281) * _242))) + _717;
    float _728 = (cbMtdParam._m0[16u].x * _309) + _709;
    float _729 = (cbMtdParam._m0[16u].x * _310) + _710;
    float _732 = fma(_716, _151, fma(_729, _158, _728 * _144));
    float _735 = fma(_716, _152, fma(_729, _159, _728 * _145));
    float _738 = fma(_716, _153, fma(_729, _160, _728 * _146));
    float _742 = inversesqrt(dot(vec3(_732, _735, _738), vec3(_732, _735, _738)));
    float _951 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _962 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _973 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _984 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    uint _761 = uint(roundEven(NORMAL.w)) * 13u;
    uint _764 = (_761 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _770 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _962 : (isnan(_962) ? 1.0 : min(_962, 1.0)))) * cbInstanceData._m0[_764].x;
    float _771 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _973 : (isnan(_973) ? 1.0 : min(_973, 1.0)))) * cbInstanceData._m0[_764].y;
    float _772 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _984 : (isnan(_984) ? 1.0 : min(_984, 1.0)))) * cbInstanceData._m0[_764].z;
    float _995 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _1006 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _1017 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    uint _776 = _761 + 6u;
    bool _803 = cbMtdParam._m0[1u].z != 0.0;
    float _804 = _803 ? cbInstanceData._m0[_776].w : 0.0;
    SV_Target.x = ((_732 * 0.5) * _742) + 0.500488758087158203125;
    SV_Target.y = ((_735 * 0.5) * _742) + 0.500488758087158203125;
    SV_Target.z = ((_738 * 0.5) * _742) + 0.500488758087158203125;
    SV_Target.w = _804;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _951 : (isnan(_951) ? 1.0 : min(_951, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _803 ? cbInstanceData._m0[_776].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _995 : (isnan(_995) ? 1.0 : min(_995, 1.0));
    SV_Target_2.y = isnan(1.0) ? _1006 : (isnan(_1006) ? 1.0 : min(_1006, 1.0));
    SV_Target_2.z = isnan(1.0) ? _1017 : (isnan(_1017) ? 1.0 : min(_1017, 1.0));
    SV_Target_2.w = _803 ? cbInstanceData._m0[_776].w : (float(floatBitsToUint(cbInstanceData._m0[_761 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _804;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _804;
}


