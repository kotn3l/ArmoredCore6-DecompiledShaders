#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M0_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _134 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _135 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _136 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_134, _135, _136), vec3(_134, _135, _136)));
    float _142 = _141 * _134;
    float _143 = _141 * _135;
    float _144 = _141 * _136;
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = _148 * NORMAL.x;
    float _150 = _148 * NORMAL.y;
    float _151 = _148 * NORMAL.z;
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _156 = _155 * TANGENT.x;
    float _157 = _155 * TANGENT.y;
    float _158 = _155 * TANGENT.z;
    float _203 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _234 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _240 = _234.w;
    float _253 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _240) + cbMtdParam._m0[11u].x) * _234.x;
    float _255 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _240) + cbMtdParam._m0[11u].y) * _234.y;
    float _257 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _240) + cbMtdParam._m0[11u].z) * _234.z;
    float _283 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _203));
    float _284 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _203));
    float _285 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _203));
    float _299 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_142, _143, _144));
    float _300 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_156, _157, _158));
    float _301 = (-0.0) - dot(vec3(_283, _284, _285), vec3((-0.0) - _149, (-0.0) - _150, (-0.0) - _151));
    float _305 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _306 = _305 * _301;
    float _308 = (cbMtdParam._m0[19u].x * _299) * _305;
    float _310 = (cbMtdParam._m0[18u].w * _300) * _305;
    float _311 = fract(TEXCOORD.x);
    float _312 = fract(TEXCOORD.y);
    float _318;
    if (_308 > 0.0)
    {
        _318 = (1.0 - _311) / _308;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_308 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _311) / _308;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _318 = frontier_phi_3_2_ladder;
    }
    float _326;
    if (_310 > 0.0)
    {
        _326 = (1.0 - _312) / _310;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_310 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _312) / _310;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _326 = frontier_phi_7_6_ladder;
    }
    bool _328 = _306 > 0.0;
    float _330 = _328 ? (cbMtdParam._m0[15u].x / _306) : 5000.0;
    float _331 = isnan(_326) ? _318 : (isnan(_318) ? _326 : min(_318, _326));
    float _332 = isnan(_330) ? _331 : (isnan(_331) ? _330 : min(_331, _330));
    float _336 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _337 = _311 + (-0.5);
    float _340 = _312 + (-0.5);
    float _343 = ((_332 * _306) + _336) / _336;
    vec4 _368 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_337 + (_332 * _308)) / _343) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_340 + (_332 * _310)) / _343) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _370 = _368.x;
    float _371 = _368.y;
    float _372 = _368.z;
    float _384 = (_370 - (_370 * _240)) * cbMtdParam._m0[9u].x;
    float _385 = (_371 - (_371 * _240)) * cbMtdParam._m0[9u].y;
    float _386 = cbMtdParam._m0[9u].z * (_372 - (_372 * _240));
    float _408 = (cbMtdParam._m0[21u].x * _299) * _305;
    float _410 = (cbMtdParam._m0[20u].w * _300) * _305;
    bool _411 = _408 > 0.0;
    float _416;
    if (_411)
    {
        _416 = (1.0 - _311) / _408;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _311) / _408;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _416 = frontier_phi_11_10_ladder;
    }
    bool _418 = _410 > 0.0;
    float _423;
    if (_418)
    {
        _423 = (1.0 - _312) / _410;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_410 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _312) / _410;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _423 = frontier_phi_15_14_ladder;
    }
    float _426 = _328 ? (cbMtdParam._m0[16u].z / _306) : 5000.0;
    float _427 = isnan(_423) ? _416 : (isnan(_416) ? _423 : min(_416, _423));
    float _428 = isnan(_426) ? _427 : (isnan(_427) ? _426 : min(_427, _426));
    float _432 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _436 = ((_428 * _306) + _432) / _432;
    float _441 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _443 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _459 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_428 * _408)) / _436) + 0.5) + _441) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_428 * _410)) / _436) + 0.5) + _443) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _464 = _459.x * cbMtdParam._m0[10u].x;
    float _465 = _459.y * cbMtdParam._m0[10u].y;
    float _466 = _459.z * cbMtdParam._m0[10u].z;
    float _474;
    if (_411)
    {
        _474 = (1.0 - _311) / _408;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _311) / _408;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _474 = frontier_phi_19_18_ladder;
    }
    float _480;
    if (_418)
    {
        _480 = (1.0 - _312) / _410;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_410 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _312) / _410;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _480 = frontier_phi_23_22_ladder;
    }
    float _482 = isnan(_480) ? _474 : (isnan(_474) ? _480 : min(_474, _480));
    float _483 = isnan(_426) ? _482 : (isnan(_482) ? _426 : min(_482, _426));
    float _490 = ((_483 * _306) + _432) / _432;
    vec4 _504 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_483 * _408)) / _490) + 0.5) + _441) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_483 * _410)) / _490) + 0.5) + _443) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _506 = _504.w;
    float _508 = _506 - (_506 * _240);
    float _518 = (_508 * ((_464 - _384) - (_464 * _240))) + _384;
    float _519 = (_508 * ((_465 - _385) - (_465 * _240))) + _385;
    float _520 = (_508 * ((_466 - _386) - (_466 * _240))) + _386;
    float _535 = (cbMtdParam._m0[21u].z * _299) * _305;
    float _537 = (cbMtdParam._m0[21u].y * _300) * _305;
    bool _538 = _535 > 0.0;
    float _543;
    if (_538)
    {
        _543 = (1.0 - _311) / _535;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_535 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _311) / _535;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _543 = frontier_phi_27_26_ladder;
    }
    bool _545 = _537 > 0.0;
    float _550;
    if (_545)
    {
        _550 = (1.0 - _312) / _537;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_537 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _312) / _537;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _550 = frontier_phi_31_30_ladder;
    }
    float _553 = _328 ? (cbMtdParam._m0[18u].x / _306) : 5000.0;
    float _554 = isnan(_550) ? _543 : (isnan(_543) ? _550 : min(_543, _550));
    float _555 = isnan(_553) ? _554 : (isnan(_554) ? _553 : min(_554, _553));
    float _559 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _563 = ((_555 * _306) + _559) / _559;
    float _568 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _570 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _587 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_337 + (_555 * _535)) / _563) + 0.5) + _568) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_340 + (_555 * _537)) / _563) + 0.5) + _570) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _592 = _587.x * cbMtdParam._m0[14u].x;
    float _593 = _587.y * cbMtdParam._m0[14u].y;
    float _594 = _587.z * cbMtdParam._m0[14u].z;
    float _602;
    if (_538)
    {
        _602 = (1.0 - _311) / _535;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_535 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _311) / _535;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _602 = frontier_phi_35_34_ladder;
    }
    float _608;
    if (_545)
    {
        _608 = (1.0 - _312) / _537;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_537 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _312) / _537;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _608 = frontier_phi_39_38_ladder;
    }
    float _610 = isnan(_608) ? _602 : (isnan(_602) ? _608 : min(_602, _608));
    float _611 = isnan(_553) ? _610 : (isnan(_610) ? _553 : min(_610, _553));
    float _618 = ((_611 * _306) + _559) / _559;
    vec4 _632 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_337 + (_611 * _535)) / _618) + 0.5) + _568) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_340 + (_611 * _537)) / _618) + 0.5) + _570) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _634 = _632.w;
    float _636 = _634 - (_634 * _240);
    float _647 = 0.5 - (_240 * 0.5);
    float _657 = (((_518 - _253) + (_636 * ((_592 - _518) - (_592 * _240)))) * _647) + _253;
    float _658 = (((_519 - _255) + (_636 * ((_593 - _519) - (_593 * _240)))) * _647) + _255;
    float _659 = (((_520 - _257) + (_636 * ((_594 - _520) - (_594 * _240)))) * _647) + _257;
    vec4 _671 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _679 = (_671.x * 2.0) + (-1.0);
    float _681 = (_671.y * 2.0) + (-1.0);
    float _682 = dot(vec2(_679, _681), vec2(_679, _681));
    float _900 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _687 = sqrt(1.0 - (isnan(1.0) ? _900 : (isnan(_900) ? 1.0 : min(_900, 1.0))));
    float _688 = _671.z * _240;
    float _691 = fma(_687, _149, fma(_681, _156, _679 * _142));
    float _694 = fma(_687, _150, fma(_681, _157, _679 * _143));
    float _697 = fma(_687, _151, fma(_681, _158, _679 * _144));
    float _701 = inversesqrt(dot(vec3(_691, _694, _697), vec3(_691, _694, _697)));
    float _911 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _922 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _933 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _944 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
    uint _720 = uint(roundEven(NORMAL.w)) * 13u;
    uint _723 = (_720 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _729 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _922 : (isnan(_922) ? 1.0 : min(_922, 1.0)))) * cbInstanceData._m0[_723].x;
    float _730 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _933 : (isnan(_933) ? 1.0 : min(_933, 1.0)))) * cbInstanceData._m0[_723].y;
    float _731 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _944 : (isnan(_944) ? 1.0 : min(_944, 1.0)))) * cbInstanceData._m0[_723].z;
    float _955 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _966 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _977 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    uint _735 = _720 + 6u;
    bool _763 = cbMtdParam._m0[1u].z != 0.0;
    float _764 = _763 ? cbInstanceData._m0[_735].w : 0.0;
    SV_Target.x = ((_691 * 0.5) * _701) + 0.500488758087158203125;
    SV_Target.y = ((_694 * 0.5) * _701) + 0.500488758087158203125;
    SV_Target.z = ((_697 * 0.5) * _701) + 0.500488758087158203125;
    SV_Target.w = _764;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _763 ? cbInstanceData._m0[_735].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _955 : (isnan(_955) ? 1.0 : min(_955, 1.0));
    SV_Target_2.y = isnan(1.0) ? _966 : (isnan(_966) ? 1.0 : min(_966, 1.0));
    SV_Target_2.z = isnan(1.0) ? _977 : (isnan(_977) ? 1.0 : min(_977, 1.0));
    SV_Target_2.w = _763 ? cbInstanceData._m0[_735].w : (float(floatBitsToUint(cbInstanceData._m0[_720 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _764;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _764;
}


