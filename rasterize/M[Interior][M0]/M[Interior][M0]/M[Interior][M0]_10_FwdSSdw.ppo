#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _340;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _167 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _168 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _169 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _174 = inversesqrt(dot(vec3(_167, _168, _169), vec3(_167, _168, _169)));
    float _175 = _174 * _167;
    float _176 = _174 * _168;
    float _177 = _174 * _169;
    float _181 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _185 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _186 = _185 * TANGENT.x;
    float _187 = _185 * TANGENT.y;
    float _188 = _185 * TANGENT.z;
    float _233 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _243 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _233);
    float _244 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _233);
    float _245 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _233);
    float _270 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _277 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _286 = cbMtdParam._m0[23u].x + _243;
    float _287 = cbMtdParam._m0[23u].y + _244;
    float _288 = cbMtdParam._m0[23u].z + _245;
    float _305 = (-0.0) - dot(vec3(_286, _287, _288), vec3(_270 * _175, _270 * _176, _270 * _177));
    float _306 = (-0.0) - dot(vec3(_286, _287, _288), vec3(_277 * _186, _277 * _187, _277 * _188));
    float _307 = (-0.0) - dot(vec3(_286, _287, _288), vec3((-0.0) - (NORMAL.x * _181), (-0.0) - (NORMAL.y * _181), (-0.0) - (NORMAL.z * _181)));
    float _311 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _312 = _311 * _307;
    float _314 = (cbMtdParam._m0[19u].w * _305) * _311;
    float _316 = (cbMtdParam._m0[20u].x * _306) * _311;
    float _319 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _320 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _338;
    float _341;
    float _343;
    if (_314 > 0.0)
    {
        float _324 = (1.0 - _319) / _314;
        _338 = _324;
        _341 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_324 * _312)) * 0.16666667163372039794921875;
        _343 = (fract((_324 * _316) + _320) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_314 < 0.0)
        {
            float _339 = ((-0.0) - _319) / _314;
            frontier_phi_3_2_ladder = (fract((_339 * _316) + _320) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _339;
            frontier_phi_3_2_ladder_2 = (fract(_339 * _312) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _340;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _338 = frontier_phi_3_2_ladder_1;
        _341 = frontier_phi_3_2_ladder_2;
        _343 = frontier_phi_3_2_ladder;
    }
    float _369;
    float _371;
    float _373;
    if (_316 > 0.0)
    {
        float _356 = (1.0 - _320) / _316;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_356 < _338)
        {
            frontier_phi_8_5_ladder = (fract((_356 * _314) + _319) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _356;
            frontier_phi_8_5_ladder_2 = (fract(_356 * _312) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _341;
            frontier_phi_8_5_ladder_1 = _338;
            frontier_phi_8_5_ladder_2 = _343;
        }
        _369 = frontier_phi_8_5_ladder_1;
        _371 = frontier_phi_8_5_ladder;
        _373 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_316 < 0.0)
        {
            float _370 = ((-0.0) - _320) / _316;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_370 < _338)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_370 * _314) + _319) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _370;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_370 * _312) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _341;
                frontier_phi_8_6_ladder_9_ladder_1 = _338;
                frontier_phi_8_6_ladder_9_ladder_2 = _343;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _341;
            frontier_phi_8_6_ladder_1 = _338;
            frontier_phi_8_6_ladder_2 = _343;
        }
        _369 = frontier_phi_8_6_ladder_1;
        _371 = frontier_phi_8_6_ladder;
        _373 = frontier_phi_8_6_ladder_2;
    }
    float _377 = (_312 > 0.0) ? (cbMtdParam._m0[16u].w / _312) : 5000.0;
    float _390;
    float _391;
    if (_377 < _369)
    {
        _390 = ((_319 + cbMtdParam._m0[17u].x) + (_377 * _314)) * 0.16666667163372039794921875;
        _391 = (((_377 * _316) + _320) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _390 = _371;
        _391 = _373;
    }
    vec4 _394 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_390, _391));
    float _400 = _394.x * cbMtdParam._m0[13u].x;
    float _401 = _394.y * cbMtdParam._m0[13u].y;
    float _402 = _394.z * cbMtdParam._m0[13u].z;
    float _2706 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _2717 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    float _2728 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _421 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _425 = inversesqrt(dot(vec3(_243, _244, _245), vec3(_243, _244, _245)));
    float _426 = _243 * _425;
    float _427 = _244 * _425;
    float _428 = _245 * _425;
    float _434 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _435 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _448 = uint(roundEven(NORMAL.w)) * 13u;
    uint _450 = (_448 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _456 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2706 : (isnan(_2706) ? 1.0 : min(_2706, 1.0)))) * cbInstanceData._m0[_450].x;
    float _457 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2717 : (isnan(_2717) ? 1.0 : min(_2717, 1.0)))) * cbInstanceData._m0[_450].y;
    float _458 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2728 : (isnan(_2728) ? 1.0 : min(_2728, 1.0)))) * cbInstanceData._m0[_450].z;
    float _2739 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _459 = isnan(1.0) ? _2739 : (isnan(_2739) ? 1.0 : min(_2739, 1.0));
    float _2750 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _460 = isnan(1.0) ? _2750 : (isnan(_2750) ? 1.0 : min(_2750, 1.0));
    float _2761 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _461 = isnan(1.0) ? _2761 : (isnan(_2761) ? 1.0 : min(_2761, 1.0));
    vec4 _470 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _434, cbSceneParam._m0[86u].y * _435));
    float _473 = _470.x * TEXCOORD.z;
    float _474 = (-0.0) - _426;
    float _475 = (-0.0) - _427;
    float _476 = (-0.0) - _428;
    float _498 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _502 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _506 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _568 = (cbModelParam._m0[37u].x * ((((fma(_506, cbModelParam._m0[26u].z, fma(_502, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _498)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _570 = (cbModelParam._m0[37u].y * ((((fma(_506, cbModelParam._m0[27u].z, fma(_502, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _498)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _571 = (((((fma(_506, cbModelParam._m0[28u].z, fma(_502, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _498)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _574 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_568, _570, _571), 0.0);
        vec4 _581 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_568, _570, _571), 0.0);
        vec4 _588 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_568, _570, _571), 0.0);
        vec4 _595 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_568, _570, _571), 0.0);
        float _608 = exp2((_574.w + (-0.5)) * 20.0) * 2.0;
        float _610 = _608 * (_574.x + (-0.5));
        float _611 = _608 * (_574.y + (-0.5));
        float _612 = _608 * (_574.z + (-0.5));
        float _619 = exp2((_581.w + (-0.5)) * 20.0) * 2.0;
        float _620 = _619 * (_581.x + (-0.5));
        float _621 = _619 * (_581.y + (-0.5));
        float _622 = _619 * (_581.z + (-0.5));
        float _629 = exp2((_588.w + (-0.5)) * 20.0) * 2.0;
        float _630 = _629 * (_588.x + (-0.5));
        float _631 = _629 * (_588.y + (-0.5));
        float _632 = _629 * (_588.z + (-0.5));
        float _639 = exp2((_595.w + (-0.5)) * 20.0) * 2.0;
        float _640 = _639 * (_595.x + (-0.5));
        float _641 = _639 * (_595.y + (-0.5));
        float _642 = _639 * (_595.z + (-0.5));
        float _643 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        float _644 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
        float _645 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _646 = _610 * 0.5;
        float _647 = _620 * 0.5;
        float _648 = _630 * 0.5;
        float _649 = dot(vec3(_646, _647, _648), vec3(_646, _647, _648));
        float _654 = (_649 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_649);
        float _663 = (dot(vec3(0.0), vec3(_654 * _646, _654 * _647, _654 * _648)) + 1.0) * 0.5;
        float _2787 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        float _673 = sqrt(((_647 * _647) + (_646 * _646)) + (_648 * _648)) / (_643 + 9.9999997473787516355514526367188e-06);
        float _2798 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
        float _674 = isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0));
        float _675 = _674 * 2.0;
        float _679 = (1.0 - _674) / (_674 + 1.0);
        float _2809 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
        float _680 = isnan(1.0) ? _2809 : (isnan(_2809) ? 1.0 : min(_2809, 1.0));
        float _689 = ((((1.0 - _680) * (_675 + 2.0)) * exp2(log2(isnan(1.0) ? _2787 : (isnan(_2787) ? 1.0 : min(_2787, 1.0))) * (_675 + 1.0))) + _680) * _643;
        float _690 = _611 * 0.5;
        float _691 = _621 * 0.5;
        float _692 = _631 * 0.5;
        float _693 = dot(vec3(_690, _691, _692), vec3(_690, _691, _692));
        float _698 = (_693 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_693);
        float _706 = (dot(vec3(0.0), vec3(_698 * _690, _698 * _691, _698 * _692)) + 1.0) * 0.5;
        float _2820 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
        float _715 = sqrt(((_691 * _691) + (_690 * _690)) + (_692 * _692)) / (_644 + 9.9999997473787516355514526367188e-06);
        float _2831 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
        float _716 = isnan(1.0) ? _2831 : (isnan(_2831) ? 1.0 : min(_2831, 1.0));
        float _717 = _716 * 2.0;
        float _721 = (1.0 - _716) / (_716 + 1.0);
        float _2842 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
        float _722 = isnan(1.0) ? _2842 : (isnan(_2842) ? 1.0 : min(_2842, 1.0));
        float _731 = ((((1.0 - _722) * (_717 + 2.0)) * exp2(log2(isnan(1.0) ? _2820 : (isnan(_2820) ? 1.0 : min(_2820, 1.0))) * (_717 + 1.0))) + _722) * _644;
        float _732 = _612 * 0.5;
        float _733 = _622 * 0.5;
        float _734 = _632 * 0.5;
        float _735 = dot(vec3(_732, _733, _734), vec3(_732, _733, _734));
        float _740 = (_735 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_735);
        float _748 = (dot(vec3(0.0), vec3(_740 * _732, _740 * _733, _740 * _734)) + 1.0) * 0.5;
        float _2853 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        float _757 = sqrt(((_733 * _733) + (_732 * _732)) + (_734 * _734)) / (_645 + 9.9999997473787516355514526367188e-06);
        float _2864 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
        float _758 = isnan(1.0) ? _2864 : (isnan(_2864) ? 1.0 : min(_2864, 1.0));
        float _759 = _758 * 2.0;
        float _763 = (1.0 - _758) / (_758 + 1.0);
        float _2875 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
        float _764 = isnan(1.0) ? _2875 : (isnan(_2875) ? 1.0 : min(_2875, 1.0));
        float _773 = ((((1.0 - _764) * (_759 + 2.0)) * exp2(log2(isnan(1.0) ? _2853 : (isnan(_2853) ? 1.0 : min(_2853, 1.0))) * (_759 + 1.0))) + _764) * _645;
        _781 = _612;
        _782 = _611;
        _783 = _610;
        _784 = _622;
        _785 = _621;
        _786 = _620;
        _787 = _632;
        _788 = _631;
        _789 = _630;
        _790 = _645;
        _791 = _644;
        _792 = _643;
        _793 = cbModelParam._m0[36u].z * (isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0)));
        _794 = cbModelParam._m0[36u].z * (isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0)));
        _795 = cbModelParam._m0[36u].z * (isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0)));
    }
    else
    {
        _781 = _340;
        _782 = _340;
        _783 = _340;
        _784 = _340;
        _785 = _340;
        _786 = _340;
        _787 = _340;
        _788 = _340;
        _789 = _340;
        _790 = _340;
        _791 = _340;
        _792 = _340;
        _793 = 0.0;
        _794 = 0.0;
        _795 = 0.0;
    }
    float _1056;
    float _1057;
    float _1058;
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _849 = (cbModelParam._m0[38u].x * ((((fma(_506, cbModelParam._m0[30u].z, fma(_502, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _498)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _850 = (cbModelParam._m0[38u].y * ((((fma(_506, cbModelParam._m0[31u].z, fma(_502, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _498)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _851 = (((((fma(_506, cbModelParam._m0[32u].z, fma(_502, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _498)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _853 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_849, _850, _851), 0.0);
        vec4 _860 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_849, _850, _851), 0.0);
        vec4 _867 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_849, _850, _851), 0.0);
        vec4 _874 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_849, _850, _851), 0.0);
        float _886 = exp2((_853.w + (-0.5)) * 20.0) * 2.0;
        float _887 = _886 * (_853.x + (-0.5));
        float _888 = _886 * (_853.y + (-0.5));
        float _889 = _886 * (_853.z + (-0.5));
        float _896 = exp2((_860.w + (-0.5)) * 20.0) * 2.0;
        float _897 = _896 * (_860.x + (-0.5));
        float _898 = _896 * (_860.y + (-0.5));
        float _899 = _896 * (_860.z + (-0.5));
        float _906 = exp2((_867.w + (-0.5)) * 20.0) * 2.0;
        float _907 = _906 * (_867.x + (-0.5));
        float _908 = _906 * (_867.y + (-0.5));
        float _909 = _906 * (_867.z + (-0.5));
        float _916 = exp2((_874.w + (-0.5)) * 20.0) * 2.0;
        float _917 = _916 * (_874.x + (-0.5));
        float _918 = _916 * (_874.y + (-0.5));
        float _919 = _916 * (_874.z + (-0.5));
        float _920 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
        float _921 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
        float _922 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        float _923 = _887 * 0.5;
        float _924 = _897 * 0.5;
        float _925 = _907 * 0.5;
        float _926 = dot(vec3(_923, _924, _925), vec3(_923, _924, _925));
        float _931 = (_926 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_926);
        float _939 = (dot(vec3(0.0), vec3(_931 * _923, _931 * _924, _931 * _925)) + 1.0) * 0.5;
        float _2916 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
        float _948 = sqrt(((_924 * _924) + (_923 * _923)) + (_925 * _925)) / (_920 + 9.9999997473787516355514526367188e-06);
        float _2927 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
        float _949 = isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0));
        float _950 = _949 * 2.0;
        float _954 = (1.0 - _949) / (_949 + 1.0);
        float _2938 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _955 = isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0));
        float _964 = ((((1.0 - _955) * (_950 + 2.0)) * exp2(log2(isnan(1.0) ? _2916 : (isnan(_2916) ? 1.0 : min(_2916, 1.0))) * (_950 + 1.0))) + _955) * _920;
        float _965 = _888 * 0.5;
        float _966 = _898 * 0.5;
        float _967 = _908 * 0.5;
        float _968 = dot(vec3(_965, _966, _967), vec3(_965, _966, _967));
        float _973 = (_968 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_968);
        float _981 = (dot(vec3(0.0), vec3(_973 * _965, _973 * _966, _973 * _967)) + 1.0) * 0.5;
        float _2949 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
        float _990 = sqrt(((_966 * _966) + (_965 * _965)) + (_967 * _967)) / (_921 + 9.9999997473787516355514526367188e-06);
        float _2960 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
        float _991 = isnan(1.0) ? _2960 : (isnan(_2960) ? 1.0 : min(_2960, 1.0));
        float _992 = _991 * 2.0;
        float _996 = (1.0 - _991) / (_991 + 1.0);
        float _2971 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
        float _997 = isnan(1.0) ? _2971 : (isnan(_2971) ? 1.0 : min(_2971, 1.0));
        float _1006 = ((((1.0 - _997) * (_992 + 2.0)) * exp2(log2(isnan(1.0) ? _2949 : (isnan(_2949) ? 1.0 : min(_2949, 1.0))) * (_992 + 1.0))) + _997) * _921;
        float _1007 = _889 * 0.5;
        float _1008 = _899 * 0.5;
        float _1009 = _909 * 0.5;
        float _1010 = dot(vec3(_1007, _1008, _1009), vec3(_1007, _1008, _1009));
        float _1015 = (_1010 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1010);
        float _1023 = (dot(vec3(0.0), vec3(_1015 * _1007, _1015 * _1008, _1015 * _1009)) + 1.0) * 0.5;
        float _2982 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
        float _1032 = sqrt(((_1008 * _1008) + (_1007 * _1007)) + (_1009 * _1009)) / (_922 + 9.9999997473787516355514526367188e-06);
        float _2993 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
        float _1033 = isnan(1.0) ? _2993 : (isnan(_2993) ? 1.0 : min(_2993, 1.0));
        float _1034 = _1033 * 2.0;
        float _1038 = (1.0 - _1033) / (_1033 + 1.0);
        float _3004 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1039 = isnan(1.0) ? _3004 : (isnan(_3004) ? 1.0 : min(_3004, 1.0));
        float _1048 = ((((1.0 - _1039) * (_1034 + 2.0)) * exp2(log2(isnan(1.0) ? _2982 : (isnan(_2982) ? 1.0 : min(_2982, 1.0))) * (_1034 + 1.0))) + _1039) * _922;
        _1056 = _889;
        _1057 = _888;
        _1058 = _887;
        _1059 = _899;
        _1060 = _898;
        _1061 = _897;
        _1062 = _909;
        _1063 = _908;
        _1064 = _907;
        _1065 = _922;
        _1066 = _921;
        _1067 = _920;
        _1068 = cbModelParam._m0[36u].w * (isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0)));
        _1069 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0)));
        _1070 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0)));
    }
    else
    {
        _1056 = _340;
        _1057 = _340;
        _1058 = _340;
        _1059 = _340;
        _1060 = _340;
        _1061 = _340;
        _1062 = _340;
        _1063 = _340;
        _1064 = _340;
        _1065 = _340;
        _1066 = _340;
        _1067 = _340;
        _1068 = 0.0;
        _1069 = 0.0;
        _1070 = 0.0;
    }
    float _1080 = (cbModelParam._m0[1u].x * (_1068 - _793)) + _793;
    float _1081 = (cbModelParam._m0[1u].x * (_1069 - _794)) + _794;
    float _1082 = (cbModelParam._m0[1u].x * (_1070 - _795)) + _795;
    float _1103 = fma(_1082, cbSceneParam._m0[89u].z, fma(_1081, cbSceneParam._m0[89u].y, _1080 * cbSceneParam._m0[89u].x));
    float _1106 = fma(_1082, cbSceneParam._m0[90u].z, fma(_1081, cbSceneParam._m0[90u].y, _1080 * cbSceneParam._m0[90u].x));
    float _1109 = fma(_1082, cbSceneParam._m0[91u].z, fma(_1081, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1080));
    float _1124 = _426 * (-0.5);
    float _1125 = _427 * (-0.5);
    float _1126 = _428 * (-0.5);
    float _1127 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_1058, _1061, _1064, _1067));
    float _1130 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_1057, _1060, _1063, _1066));
    float _1133 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_1056, _1059, _1062, _1065));
    float _1167;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1140 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_781, _784, _787, _790));
        float _1144 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_782, _785, _788, _791));
        float _1148 = dot(vec4(_1124, _1125, _1126, 1.0), vec4(_783, _786, _789, _792));
        float _1155 = dot(vec4(cbModelParam._m0[39u]), vec4(_1124, _1125, _1126, 1.0));
        _1167 = dot(vec3(isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0)), isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0)), isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1155) ? 0.0 : (isnan(0.0) ? _1155 : max(0.0, _1155))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1167 = 1.0;
    }
    float _1178;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1169 = dot(vec4(cbModelParam._m0[40u]), vec4(_1124, _1125, _1126, 1.0));
        _1178 = dot(vec3(isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0)), isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0)), isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1169) ? 0.0 : (isnan(0.0) ? _1169 : max(0.0, _1169))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1178 = 1.0;
    }
    float _1182 = (_1178 * cbModelParam._m0[1u].x) + (_1167 * (1.0 - cbModelParam._m0[1u].x));
    float _1192 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1275;
    float _1277;
    float _1279;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1242 = fma(_506, cbModelParam._m0[13u].z, fma(_502, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _498)) + cbModelParam._m0[13u].w;
        float _1246 = fma(_506, cbModelParam._m0[14u].z, fma(_502, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _498)) + cbModelParam._m0[14u].w;
        float _1250 = fma(_506, cbModelParam._m0[15u].z, fma(_502, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _498)) + cbModelParam._m0[15u].w;
        float _1253 = fma(_476, cbModelParam._m0[13u].z, fma(_475, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _474));
        float _1256 = fma(_476, cbModelParam._m0[14u].z, fma(_475, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _474));
        float _1259 = fma(_476, cbModelParam._m0[15u].z, fma(_475, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _474));
        float _1285;
        if (_1253 > 0.0)
        {
            _1285 = abs((1.0 - _1242) / _1253);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1253 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1242 + 1.0) / _1253);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1285 = frontier_phi_26_24_ladder;
        }
        float _1611;
        if (_1256 > 0.0)
        {
            _1611 = abs((1.0 - _1246) / _1256);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1256 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1246 + 1.0) / _1256);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1611 = frontier_phi_35_31_ladder;
        }
        float _1914;
        if (_1259 > 0.0)
        {
            _1914 = abs((1.0 - _1250) / _1259);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1259 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1250 + 1.0) / _1259);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _1914 = frontier_phi_49_42_ladder;
        }
        float _1916 = isnan(_1611) ? _1285 : (isnan(_1285) ? _1611 : min(_1285, _1611));
        float _1917 = isnan(_1914) ? _1916 : (isnan(_1916) ? _1914 : min(_1916, _1914));
        float _1921 = (_1917 * _1253) + _1242;
        float _1922 = (_1917 * _1256) + _1246;
        float _1923 = (_1917 * _1259) + _1250;
        float _1924 = _1917 * 9.9999997473787516355514526367188e-05;
        float _1925 = (-1.0) - _1924;
        float _1927 = _1924 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1923 > _1927) || ((_1923 < _1925) || ((_1922 > _1927) || ((_1922 < _1925) || ((_1921 < _1925) || (_1921 > _1927))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2046 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1923, cbModelParam._m0[9u].z, fma(_1922, cbModelParam._m0[9u].y, _1921 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1923, cbModelParam._m0[10u].z, fma(_1922, cbModelParam._m0[10u].y, _1921 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1923, cbModelParam._m0[11u].z, fma(_1922, cbModelParam._m0[11u].y, _1921 * cbModelParam._m0[11u].x))), _1192);
            frontier_phi_25_49_ladder = _2046.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2046.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2046.x * cbModelParam._m0[1u].y;
        }
        _1275 = frontier_phi_25_49_ladder_2;
        _1277 = frontier_phi_25_49_ladder_1;
        _1279 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1263 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_474, _475, _476), _1192);
        _1275 = _1263.x * cbModelParam._m0[1u].y;
        _1277 = _1263.y * cbModelParam._m0[1u].y;
        _1279 = _1263.z * cbModelParam._m0[1u].y;
    }
    float _1282 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1373;
    float _1375;
    float _1377;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1337 = fma(_506, cbModelParam._m0[21u].z, fma(_502, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _498)) + cbModelParam._m0[21u].w;
        float _1341 = fma(_506, cbModelParam._m0[22u].z, fma(_502, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _498)) + cbModelParam._m0[22u].w;
        float _1345 = fma(_506, cbModelParam._m0[23u].z, fma(_502, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _498)) + cbModelParam._m0[23u].w;
        float _1348 = fma(_476, cbModelParam._m0[21u].z, fma(_475, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _474));
        float _1351 = fma(_476, cbModelParam._m0[22u].z, fma(_475, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _474));
        float _1354 = fma(_476, cbModelParam._m0[23u].z, fma(_475, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _474));
        float _1616;
        if (_1348 > 0.0)
        {
            _1616 = abs((1.0 - _1337) / _1348);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1348 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1337 + 1.0) / _1348);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1616 = frontier_phi_37_33_ladder;
        }
        float _1940;
        if (_1351 > 0.0)
        {
            _1940 = abs((1.0 - _1341) / _1351);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1351 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1341 + 1.0) / _1351);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _1940 = frontier_phi_51_44_ladder;
        }
        float _2106;
        if (_1354 > 0.0)
        {
            _2106 = abs((1.0 - _1345) / _1354);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1354 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1345 + 1.0) / _1354);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2106 = frontier_phi_65_60_ladder;
        }
        float _2108 = isnan(_1940) ? _1616 : (isnan(_1616) ? _1940 : min(_1616, _1940));
        float _2109 = isnan(_2106) ? _2108 : (isnan(_2108) ? _2106 : min(_2108, _2106));
        float _2113 = (_2109 * _1348) + _1337;
        float _2114 = (_2109 * _1351) + _1341;
        float _2115 = (_2109 * _1354) + _1345;
        float _2116 = _2109 * 9.9999997473787516355514526367188e-05;
        float _2117 = (-1.0) - _2116;
        float _2119 = _2116 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2115 > _2119) || ((_2115 < _2117) || ((_2114 > _2119) || ((_2114 < _2117) || ((_2113 < _2117) || (_2113 > _2119))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2298 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2115, cbModelParam._m0[17u].z, fma(_2114, cbModelParam._m0[17u].y, _2113 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2115, cbModelParam._m0[18u].z, fma(_2114, cbModelParam._m0[18u].y, _2113 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2115, cbModelParam._m0[19u].z, fma(_2114, cbModelParam._m0[19u].y, _2113 * cbModelParam._m0[19u].x))), _1282);
            frontier_phi_34_65_ladder = _2298.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2298.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2298.z * cbModelParam._m0[1u].z;
        }
        _1373 = frontier_phi_34_65_ladder_1;
        _1375 = frontier_phi_34_65_ladder;
        _1377 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1357 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_474, _475, _476), _1282);
        _1373 = _1357.x * cbModelParam._m0[1u].z;
        _1375 = _1357.y * cbModelParam._m0[1u].z;
        _1377 = _1357.z * cbModelParam._m0[1u].z;
    }
    float _1389 = _473 * 0.01200000010430812835693359375;
    float _1391 = _1389 * ((cbModelParam._m0[1u].w * (_1373 - _1275)) + _1275);
    float _1392 = _1389 * ((cbModelParam._m0[1u].w * (_1375 - _1277)) + _1277);
    float _1393 = _1389 * ((cbModelParam._m0[1u].w * (_1377 - _1279)) + _1279);
    float _1396 = fma(_1393, cbSceneParam._m0[89u].z, fma(_1392, cbSceneParam._m0[89u].y, _1391 * cbSceneParam._m0[89u].x));
    float _1399 = fma(_1393, cbSceneParam._m0[90u].z, fma(_1392, cbSceneParam._m0[90u].y, _1391 * cbSceneParam._m0[90u].x));
    float _1402 = fma(_1393, cbSceneParam._m0[91u].z, fma(_1392, cbSceneParam._m0[91u].y, _1391 * cbSceneParam._m0[91u].x));
    vec4 _1410 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_434, _435));
    float _1412 = _1410.w;
    float _1425 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1412);
    float _1426 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1412);
    float _1427 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1412);
    uvec4 _1432 = floatBitsToUint(cbInstanceData._m0[_448 + 5u]);
    uint _1434 = _1432.x * 14u;
    uint _1435 = _1434 + 13u;
    float _1440 = _473 + (-1.0);
    float _1444 = (cbLight._m0[_1435].x * _1440) + 1.0;
    float _1445 = (cbLight._m0[_1435].y * _1440) + 1.0;
    uint _1446 = _1434 + 5u;
    float _1452 = isnan(1.0) ? _1445 : (isnan(_1445) ? 1.0 : min(_1445, 1.0));
    uint _1456 = _1434 + 4u;
    float _1466 = isnan(1.0) ? _1444 : (isnan(_1444) ? 1.0 : min(_1444, 1.0));
    uint _1470 = _1434 | 1u;
    float _1481 = dot(vec3(cbLight._m0[_1434].xyz), vec3(0.0));
    float _1484 = dot(vec3(cbLight._m0[_1470].xyz), vec3(0.0));
    float _3140 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
    float _3151 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
    float _1489 = (isnan(1.0) ? _3140 : (isnan(_3140) ? 1.0 : min(_3140, 1.0))) * 0.3183098733425140380859375;
    float _1491 = (isnan(1.0) ? _3151 : (isnan(_3151) ? 1.0 : min(_3151, 1.0))) * 0.3183098733425140380859375;
    float _1498 = ((cbLight._m0[_1446].x * _1452) * _1491) + (((cbLight._m0[_1456].x * _1425) * _1466) * _1489);
    float _1499 = ((_1452 * cbLight._m0[_1446].y) * _1491) + (((cbLight._m0[_1456].y * _1426) * _1466) * _1489);
    float _1500 = ((_1452 * cbLight._m0[_1446].z) * _1491) + (((cbLight._m0[_1456].z * _1427) * _1466) * _1489);
    uint _1501 = _1434 + 8u;
    float _1507 = cbLight._m0[_1434].x + _426;
    float _1508 = cbLight._m0[_1434].y + _427;
    float _1509 = cbLight._m0[_1434].z + _428;
    float _1513 = inversesqrt(dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509)));
    float _1517 = dot(vec3(0.0), vec3(cbLight._m0[_1434].xyz));
    float _3162 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _1520 = isnan(1.0) ? _3162 : (isnan(_3162) ? 1.0 : min(_3162, 1.0));
    float _1521 = dot(vec3(0.0), vec3(_426, _427, _428));
    float _3173 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
    float _1524 = isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0));
    float _1525 = dot(vec3(cbLight._m0[_1434].xyz), vec3(_1507 * _1513, _1508 * _1513, _1509 * _1513));
    float _3184 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
    float _1536 = (exp2(log2(1.0 - (isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1542 = (0.5 / ((_1520 + 9.9999999392252902907785028219223e-09) + _1524)) * _1520;
    float _3195 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
    float _1544 = (isnan(1.0) ? _3195 : (isnan(_3195) ? 1.0 : min(_3195, 1.0))) * 0.31831014156341552734375;
    uint _1558 = _1434 + 9u;
    float _1564 = cbLight._m0[_1470].x + _426;
    float _1565 = cbLight._m0[_1470].y + _427;
    float _1566 = cbLight._m0[_1470].z + _428;
    float _1570 = inversesqrt(dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566)));
    float _1574 = dot(vec3(0.0), vec3(cbLight._m0[_1470].xyz));
    float _3206 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
    float _1577 = isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0));
    float _1578 = dot(vec3(cbLight._m0[_1470].xyz), vec3(_1564 * _1570, _1565 * _1570, _1566 * _1570));
    float _3217 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
    float _1587 = (exp2(log2(1.0 - (isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1591 = (0.5 / ((_1577 + 9.9999999392252902907785028219223e-09) + _1524)) * _1577;
    float _3228 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
    float _1593 = (isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0))) * 0.31831014156341552734375;
    float _1603 = (((_1587 * cbLight._m0[_1558].x) * _1593) * _1452) + ((((cbLight._m0[_1501].x * _1425) * _1536) * _1544) * _1466);
    float _1604 = (((_1587 * cbLight._m0[_1558].y) * _1593) * _1452) + ((((cbLight._m0[_1501].y * _1426) * _1536) * _1544) * _1466);
    float _1605 = (((_1587 * cbLight._m0[_1558].z) * _1593) * _1452) + ((((cbLight._m0[_1501].z * _1427) * _1536) * _1544) * _1466);
    float _1722;
    float _1724;
    float _1726;
    float _1728;
    float _1730;
    float _1732;
    if (_1432.y == 0u)
    {
        float _1661 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1662 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1661;
        float _1663 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1661;
        float _1664 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1661;
        uvec4 _1676 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1677 = _1676.x;
        uint _1688 = uint((float(_1676.y) * floor(float(uint(cbSceneParam._m0[85u].y * _435) / _1677))) + floor(float(uint(cbSceneParam._m0[85u].x * _434) / _1677)));
        float _1698 = (log2(_1664 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1699 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        uint _1702 = uint(isnan(14.0) ? _1699 : (isnan(_1699) ? 14.0 : min(_1699, 14.0)));
        uvec4 _1708 = texelFetch(g_lightClusterGridBuffer, int(((_1702 << 2u) + (_1688 << 6u)) >> 2u));
        uint _1709 = _1708.x;
        uint _1710 = _1676.z;
        float _1800;
        float _1802;
        float _1804;
        float _1806;
        float _1808;
        float _1810;
        if (((((1u << ((_1710 >> 4u) & 15u)) + 4294967295u) & _1709) == 0u) || ((_1710 & 240u) == 0u))
        {
            _1800 = 0.0;
            _1802 = 0.0;
            _1804 = 0.0;
            _1806 = 0.0;
            _1808 = 0.0;
            _1810 = 0.0;
        }
        else
        {
            float _1801;
            float _1803;
            float _1805;
            float _1807;
            float _1809;
            float _1811;
            float _1974 = 0.0;
            float _1975 = 0.0;
            float _1976 = 0.0;
            float _1977 = 0.0;
            float _1978 = 0.0;
            float _1979 = 0.0;
            uint _1980 = 0u;
            uint _1989;
            bool _1990;
            for (;;)
            {
                _1989 = texelFetch(g_lightClassification, int((((_1702 << 5u) + (_1688 << 9u)) + (_1980 << 2u)) >> 2u)).x;
                _1990 = _1989 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_1990)
                {
                    frontier_phi_62_pred = _1975;
                    frontier_phi_62_pred_1 = _1974;
                    frontier_phi_62_pred_2 = _1976;
                    frontier_phi_62_pred_3 = _1979;
                    frontier_phi_62_pred_4 = _1978;
                    frontier_phi_62_pred_5 = _1977;
                }
                else
                {
                    float _2149;
                    float _2150;
                    float _2151;
                    float _2152;
                    float _2153;
                    float _2154;
                    uint _2155;
                    _2149 = _1974;
                    _2150 = _1975;
                    _2151 = _1976;
                    _2152 = _1977;
                    _2153 = _1978;
                    _2154 = _1979;
                    _2155 = _1989;
                    float _2055;
                    float _2056;
                    float _2057;
                    float _2058;
                    float _2059;
                    float _2060;
                    for (;;)
                    {
                        uint _2159 = uint(findLSB(_2155)) + (_1980 << 5u);
                        uint _2156 = (_2155 + 4294967295u) & _2155;
                        uint _2161 = _2159 * 48u;
                        vec4 _2175 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2161)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 3u)).x));
                        uint _2181 = (_2159 * 48u) + 4u;
                        vec4 _2194 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2181)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 3u)).x));
                        uint _2200 = (_2159 * 48u) + 8u;
                        vec3 _2211 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2200)).x, texelFetch(g_PointLightRenderingBuffer, int(_2200 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2200 + 2u)).x));
                        float _2215 = _2175.x - _1662;
                        float _2216 = _2175.y - _1663;
                        float _2217 = _2175.z - _1664;
                        float _2218 = dot(vec3(_2215, _2216, _2217), vec3(_2215, _2216, _2217));
                        float _2221 = inversesqrt(_2218);
                        float _2230 = 1.0 - (_2218 * _2175.w);
                        float _3249 = isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0));
                        float _2231 = isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0));
                        float _2232 = sqrt(_2218) * _2194.w;
                        float _2235 = 1.39999997615814208984375 / (_2232 + 1.39999997615814208984375);
                        float _2236 = _2235 * _2235;
                        float _2239 = ((1.0 - _2236) * dot(vec3(0.0), vec3(_2221 * _2215, _2221 * _2216, _2221 * _2217))) + _2236;
                        float _2242 = _2232 * _2232;
                        float _2246 = ((isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0))) * _2231) / ((_2242 * 0.699999988079071044921875) + 1.0);
                        float _2250 = (-0.0) - _1662;
                        float _2251 = (-0.0) - _1663;
                        float _2252 = (-0.0) - _1664;
                        float _2256 = inversesqrt(dot(vec3(_2250, _2251, _2252), vec3(_2250, _2251, _2252)));
                        float _2260 = dot(vec3(0.0), vec3(_2256 * _2250, _2256 * _2251, _2256 * _2252));
                        float _3265 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
                        float _3276 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
                        float _2264 = isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0));
                        float _2268 = (0.5 / (((isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0))) + 9.9999999392252902907785028219223e-09) + _2264)) * _2264;
                        float _3287 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
                        float _2277 = (((isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0))) * 3.1415927410125732421875) / ((_2242 * 2.1991131305694580078125) + 3.141590118408203125)) * _2231;
                        _2058 = (_2246 * _2194.x) + _2152;
                        _2059 = (_2246 * _2194.y) + _2153;
                        _2060 = (_2246 * _2194.z) + _2154;
                        _2055 = (_2277 * _2211.x) + _2149;
                        _2056 = (_2277 * _2211.y) + _2150;
                        _2057 = (_2277 * _2211.z) + _2151;
                        if (_2156 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2149 = _2055;
                            _2150 = _2056;
                            _2151 = _2057;
                            _2152 = _2058;
                            _2153 = _2059;
                            _2154 = _2060;
                            _2155 = _2156;
                        }
                    }
                    frontier_phi_62_pred = _2056;
                    frontier_phi_62_pred_1 = _2055;
                    frontier_phi_62_pred_2 = _2057;
                    frontier_phi_62_pred_3 = _2060;
                    frontier_phi_62_pred_4 = _2059;
                    frontier_phi_62_pred_5 = _2058;
                }
                _1803 = frontier_phi_62_pred;
                _1801 = frontier_phi_62_pred_1;
                _1805 = frontier_phi_62_pred_2;
                _1811 = frontier_phi_62_pred_3;
                _1809 = frontier_phi_62_pred_4;
                _1807 = frontier_phi_62_pred_5;
                uint _1981 = _1980 + 1u;
                if (_1981 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1974 = _1801;
                    _1975 = _1803;
                    _1976 = _1805;
                    _1977 = _1807;
                    _1978 = _1809;
                    _1979 = _1811;
                    _1980 = _1981;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1800 = _1801;
            _1802 = _1803;
            _1804 = _1805;
            _1806 = _1807;
            _1808 = _1809;
            _1810 = _1811;
        }
        uvec4 _1814 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1815 = _1814.z;
        uint _1817 = (_1815 >> 8u) & 15u;
        float _1945;
        float _1947;
        float _1949;
        float _1951;
        float _1953;
        float _1955;
        if (((4294967295u << _1817) & _1709) == 0u)
        {
            _1945 = _1800;
            _1947 = _1802;
            _1949 = _1804;
            _1951 = _1806;
            _1953 = _1808;
            _1955 = _1810;
        }
        else
        {
            float _1970 = inversesqrt(dot(vec3(_1662, _1663, _1664), vec3(_1662, _1663, _1664)));
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_1817 < ((_1815 >> 12u) & 15u))
            {
                float _1946;
                float _1948;
                float _1950;
                float _1952;
                float _1954;
                float _1956;
                float _2132 = _1800;
                float _2133 = _1802;
                float _2134 = _1804;
                float _2135 = _1806;
                float _2136 = _1808;
                float _2137 = _1810;
                uint _2138 = _1817;
                uint _2147;
                bool _2148;
                for (;;)
                {
                    _2147 = texelFetch(g_lightClassification, int((((_1702 << 5u) + (_1688 << 9u)) + (_2138 << 2u)) >> 2u)).x;
                    _2148 = _2147 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2148)
                    {
                        frontier_phi_71_pred = _2133;
                        frontier_phi_71_pred_1 = _2132;
                        frontier_phi_71_pred_2 = _2137;
                        frontier_phi_71_pred_3 = _2136;
                        frontier_phi_71_pred_4 = _2135;
                        frontier_phi_71_pred_5 = _2134;
                    }
                    else
                    {
                        float _2303;
                        float _2304;
                        float _2305;
                        float _2306;
                        float _2307;
                        float _2308;
                        float _2552;
                        float _2553;
                        float _2554;
                        float _2555;
                        float _2556;
                        float _2557;
                        float _2316 = _2132;
                        float _2317 = _2133;
                        float _2318 = _2134;
                        float _2319 = _2135;
                        float _2320 = _2136;
                        float _2321 = _2137;
                        uint _2322 = _2147;
                        uint _2323;
                        vec4 _2348;
                        float _2349;
                        vec4 _2364;
                        vec3 _2376;
                        vec4 _2391;
                        vec4 _2406;
                        float _2452;
                        bool _2453;
                        for (;;)
                        {
                            uint _2333 = ((_2138 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2322));
                            _2323 = (_2322 + 4294967295u) & _2322;
                            uint _2335 = _2333 * 40u;
                            _2348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 3u)).x));
                            _2349 = _2348.w;
                            uint _2351 = (_2333 * 40u) + 4u;
                            _2364 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2351)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 3u)).x));
                            uint _2366 = (_2333 * 40u) + 8u;
                            _2376 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 2u)).x));
                            uint _2378 = (_2333 * 40u) + 16u;
                            _2391 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2378)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 3u)).x));
                            uint _2393 = (_2333 * 40u) + 20u;
                            _2406 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2393)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 3u)).x));
                            uint _2408 = (_2333 * 40u) + 24u;
                            vec4 _2421 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2408)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 3u)).x));
                            uint _2427 = (_2333 * 40u) + 28u;
                            vec4 _2440 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2427)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 3u)).x));
                            _2452 = fma(_1664, _2440.z, fma(_1663, _2440.y, _2440.x * _1662)) + _2440.w;
                            _2453 = !((fma(_1664, _2421.z, fma(_1663, _2421.y, _2421.x * _1662)) + _2421.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_2453)
                            {
                                float _2480 = _2348.x - _1662;
                                float _2481 = _2348.y - _1663;
                                float _2482 = _2348.z - _1664;
                                float _2483 = dot(vec3(_2480, _2481, _2482), vec3(_2480, _2481, _2482));
                                float _2486 = inversesqrt(_2483);
                                float _2487 = _2486 * _2480;
                                float _2488 = _2486 * _2481;
                                float _2489 = _2486 * _2482;
                                float _2493 = 1.0 - (_2483 / (_2349 * _2349));
                                float _3298 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
                                float _2494 = isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0));
                                float _2498 = sqrt(_2483) * _2364.w;
                                float _2500 = 1.39999997615814208984375 / (_2498 + 1.39999997615814208984375);
                                float _2501 = _2500 * _2500;
                                float _2502 = 1.0 - _2501;
                                float _2504 = (_2502 * dot(vec3(_2487, _2488, _2489), vec3(0.0))) + _2501;
                                float _2507 = _2498 * _2498;
                                float _2511 = (fma(_1664, _2391.z, fma(_1663, _2391.y, _2391.x * _1662)) + _2391.w) / _2452;
                                float _2512 = (fma(_1664, _2406.z, fma(_1663, _2406.y, _2406.x * _1662)) + _2406.w) / _2452;
                                float _2516 = 1.0 - dot(vec2(_2511, _2512), vec2(_2511, _2512));
                                float _3314 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
                                float _2517 = isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0));
                                float _2518 = _2517 * (((isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0))) * _2494) / ((_2507 * 0.699999988079071044921875) + 1.0));
                                float _2528 = dot(vec3(0.0), vec3((-0.0) - (_1662 * _1970), (-0.0) - (_1663 * _1970), (-0.0) - (_1664 * _1970)));
                                float _3325 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
                                float _2536 = (_2502 * dot(vec3(0.0), vec3(_2487, _2488, _2489))) + _2501;
                                float _3336 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
                                float _2537 = isnan(1.0) ? _3336 : (isnan(_3336) ? 1.0 : min(_3336, 1.0));
                                float _2541 = (0.5 / (((isnan(1.0) ? _3325 : (isnan(_3325) ? 1.0 : min(_3325, 1.0))) + 9.9999999392252902907785028219223e-09) + _2537)) * _2537;
                                float _3347 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
                                float _2548 = (_2517 * _2494) * (((isnan(1.0) ? _3347 : (isnan(_3347) ? 1.0 : min(_3347, 1.0))) * 3.1415927410125732421875) / ((_2507 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_77_pred = _2548 * _2376.y;
                                frontier_phi_77_pred_1 = _2548 * _2376.x;
                                frontier_phi_77_pred_2 = _2518 * _2364.z;
                                frontier_phi_77_pred_3 = _2518 * _2364.y;
                                frontier_phi_77_pred_4 = _2518 * _2364.x;
                                frontier_phi_77_pred_5 = _2548 * _2376.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _2553 = frontier_phi_77_pred;
                            _2552 = frontier_phi_77_pred_1;
                            _2557 = frontier_phi_77_pred_2;
                            _2556 = frontier_phi_77_pred_3;
                            _2555 = frontier_phi_77_pred_4;
                            _2554 = frontier_phi_77_pred_5;
                            _2306 = _2555 + _2319;
                            _2307 = _2556 + _2320;
                            _2308 = _2557 + _2321;
                            _2303 = _2552 + _2316;
                            _2304 = _2553 + _2317;
                            _2305 = _2554 + _2318;
                            if (_2323 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2316 = _2303;
                                _2317 = _2304;
                                _2318 = _2305;
                                _2319 = _2306;
                                _2320 = _2307;
                                _2321 = _2308;
                                _2322 = _2323;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2304;
                        frontier_phi_71_pred_1 = _2303;
                        frontier_phi_71_pred_2 = _2308;
                        frontier_phi_71_pred_3 = _2307;
                        frontier_phi_71_pred_4 = _2306;
                        frontier_phi_71_pred_5 = _2305;
                    }
                    _1948 = frontier_phi_71_pred;
                    _1946 = frontier_phi_71_pred_1;
                    _1956 = frontier_phi_71_pred_2;
                    _1954 = frontier_phi_71_pred_3;
                    _1952 = frontier_phi_71_pred_4;
                    _1950 = frontier_phi_71_pred_5;
                    uint _2139 = _2138 + 1u;
                    if (_2139 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2132 = _1946;
                        _2133 = _1948;
                        _2134 = _1950;
                        _2135 = _1952;
                        _2136 = _1954;
                        _2137 = _1956;
                        _2138 = _2139;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _1956;
                frontier_phi_53_54_ladder_1 = _1952;
                frontier_phi_53_54_ladder_2 = _1950;
                frontier_phi_53_54_ladder_3 = _1948;
                frontier_phi_53_54_ladder_4 = _1946;
                frontier_phi_53_54_ladder_5 = _1954;
            }
            else
            {
                frontier_phi_53_54_ladder = _1810;
                frontier_phi_53_54_ladder_1 = _1806;
                frontier_phi_53_54_ladder_2 = _1804;
                frontier_phi_53_54_ladder_3 = _1802;
                frontier_phi_53_54_ladder_4 = _1800;
                frontier_phi_53_54_ladder_5 = _1808;
            }
            _1945 = frontier_phi_53_54_ladder_4;
            _1947 = frontier_phi_53_54_ladder_3;
            _1949 = frontier_phi_53_54_ladder_2;
            _1951 = frontier_phi_53_54_ladder_1;
            _1953 = frontier_phi_53_54_ladder_5;
            _1955 = frontier_phi_53_54_ladder;
        }
        float _1960 = isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0));
        _1722 = (_1960 * _1951) + _1498;
        _1724 = (_1960 * _1953) + _1499;
        _1726 = (_1960 * _1955) + _1500;
        _1728 = ((_1945 * 0.039999999105930328369140625) * _1960) + _1603;
        _1730 = ((_1947 * 0.039999999105930328369140625) * _1960) + _1604;
        _1732 = ((_1949 * 0.039999999105930328369140625) * _1960) + _1605;
    }
    else
    {
        _1722 = _1498;
        _1724 = _1499;
        _1726 = _1500;
        _1728 = _1603;
        _1730 = _1604;
        _1732 = _1605;
    }
    float _3363 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _3374 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
    float _3385 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _1749 = ((isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0))) * (_1722 + ((isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0))) * _473))) + ((_1728 + ((isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0))) * _1182)) * cbPerFrame._m0[3u].x);
    float _1750 = ((isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0))) * (_1724 + ((isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0))) * _473))) + ((_1730 + ((isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0))) * _1182)) * cbPerFrame._m0[3u].x);
    float _1751 = ((isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0))) * (_1726 + ((isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0))) * _473))) + ((_1732 + ((isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0))) * _1182)) * cbPerFrame._m0[3u].x);
    uint _1755 = _448 + 6u;
    float _1763 = _434 / cbSceneParam._m0[86u].x;
    float _1764 = _435 / cbSceneParam._m0[86u].y;
    vec4 _1778 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1763, _1764, (log2((isnan(cbSceneParam._m0[77u].w) ? _421 : (isnan(_421) ? cbSceneParam._m0[77u].w : min(_421, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1780 = _1778.x;
    float _1781 = _1778.y;
    float _1782 = _1778.z;
    float _1783 = _1778.w;
    float _1863;
    float _1865;
    float _1867;
    float _1869;
    if (_421 > cbSceneParam._m0[78u].w)
    {
        float _1825 = isnan(_421) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _421 : min(cbSceneParam._m0[80u].w, _421));
        float _1826 = _1825 / _421;
        float _1837 = _1826 * _243;
        float _1838 = _244 * _1826;
        float _1839 = (-0.0) - _1838;
        float _1840 = _1826 * _245;
        float _1842 = (cbSceneParam._m0[77u].w * _1839) / _1825;
        float _1843 = _1842 + cbSceneParam._m0[79u].w;
        float _1844 = cbSceneParam._m0[79u].w - _1838;
        float _1850 = sqrt(((_1837 * _1837) + (_1838 * _1838)) + (_1840 * _1840));
        float _1853 = (1.0 - (cbSceneParam._m0[77u].w / _1825)) * _1850;
        float _1859 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1861 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2068;
        if (abs((_1839 - _1842) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2068 = ((((_1843 > 0.0) ? exp2(_1859 * _1843) : (2.0 - exp2(_1861 * _1843))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1853;
        }
        else
        {
            float _2003 = 1.0 / cbSceneParam._m0[80u].x;
            float _2004 = isnan(_1844) ? _1843 : (isnan(_1843) ? _1844 : max(_1843, _1844));
            float _2005 = isnan(_1844) ? _1843 : (isnan(_1843) ? _1844 : min(_1843, _1844));
            float _2014 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : min(_2004, 0.0));
            float _2015 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : min(_2005, 0.0));
            _2068 = ((abs(_1850 / _1839) * cbSceneParam._m0[80u].y) * ((((_2014 - _2015) * 2.0) - ((exp2(_1859 * (isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0)))) - exp2(_1859 * (isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0))))) * _2003)) - ((exp2(_1861 * _2014) - exp2(_1861 * _2015)) * _2003))) + (_1853 * cbSceneParam._m0[80u].z);
        }
        vec4 _2070 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1763, _1764, 1.0), 0.0);
        float _2079 = exp2((_2068 * (-1.44269502162933349609375)) * (1.0 - _2070.w));
        float _2080 = log2(_2079);
        float _2096 = log2(_1783);
        _1863 = (exp2(_2096 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].x)) * _2070.x) / cbSceneParam._m0[78u].x)) + _1780;
        _1865 = (exp2(_2096 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].y)) * _2070.y) / cbSceneParam._m0[78u].y)) + _1781;
        _1867 = (exp2(_2096 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].z)) * _2070.z) / cbSceneParam._m0[78u].z)) + _1782;
        _1869 = _2079 * _1783;
    }
    else
    {
        _1863 = _1780;
        _1865 = _1781;
        _1867 = _1782;
        _1869 = _1783;
    }
    float _1881 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1882 = _1881 == 3.0;
    float _1884 = log2(_1869);
    float _1891 = exp2(_1884 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
    float _1892 = exp2(_1884 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0)));
    float _1893 = exp2(_1884 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0)));
    float _1902 = (_1881 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1902 * (_1882 ? _1891 : (_1891 + (cbSceneParam._m0[72u].w * _1863)));
    SV_Target.y = _1902 * (_1882 ? _1892 : (_1892 + (cbSceneParam._m0[72u].w * _1865)));
    SV_Target.z = _1902 * (_1882 ? _1893 : (_1893 + (cbSceneParam._m0[72u].w * _1867)));
    SV_Target.w = cbInstanceData._m0[_1755].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1755].w;
}


