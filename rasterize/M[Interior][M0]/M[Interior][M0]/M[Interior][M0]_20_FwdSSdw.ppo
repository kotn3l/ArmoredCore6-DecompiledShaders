#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _993;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _188 = _187 * _180;
    float _189 = _187 * _181;
    float _190 = _187 * _182;
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _195 = _194 * NORMAL.x;
    float _196 = _194 * NORMAL.y;
    float _197 = _194 * NORMAL.z;
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _202 = _201 * TANGENT.x;
    float _203 = _201 * TANGENT.y;
    float _204 = _201 * TANGENT.z;
    float _249 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _259 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _249);
    float _260 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _249);
    float _261 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _249);
    vec4 _280 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _286 = _280.w;
    float _299 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _286) + cbMtdParam._m0[11u].x) * _280.x;
    float _301 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _286) + cbMtdParam._m0[11u].y) * _280.y;
    float _303 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _286) + cbMtdParam._m0[11u].z) * _280.z;
    vec4 _321 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _325 = _321.z;
    float _348 = (_321.x * 2.0) + (-1.0);
    float _350 = (_321.y * 2.0) + (-1.0);
    float _353 = _348 - (_348 * _286);
    float _354 = _350 - (_350 * _286);
    float _363 = cbMtdParam._m0[22u].y + _259;
    float _364 = cbMtdParam._m0[22u].z + _260;
    float _365 = cbMtdParam._m0[22u].w + _261;
    float _379 = (-0.0) - dot(vec3(_363, _364, _365), vec3(_188, _189, _190));
    float _380 = (-0.0) - dot(vec3(_363, _364, _365), vec3(_202, _203, _204));
    float _381 = (-0.0) - dot(vec3(_363, _364, _365), vec3((-0.0) - _195, (-0.0) - _196, (-0.0) - _197));
    float _385 = inversesqrt(dot(vec3(_379, _380, _381), vec3(_379, _380, _381)));
    float _388 = _385 * _381;
    float _391 = ((_385 * _379) + (_353 * cbMtdParam._m0[20u].y)) * cbMtdParam._m0[19u].x;
    float _392 = ((_385 * _380) + (_354 * cbMtdParam._m0[20u].z)) * cbMtdParam._m0[18u].w;
    float _393 = fract(TEXCOORD.x);
    float _394 = fract(TEXCOORD.y);
    float _400;
    if (_391 > 0.0)
    {
        _400 = (1.0 - _393) / _391;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_391 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _393) / _391;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _400 = frontier_phi_3_2_ladder;
    }
    float _408;
    if (_392 > 0.0)
    {
        _408 = (1.0 - _394) / _392;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_392 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _394) / _392;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _408 = frontier_phi_7_6_ladder;
    }
    float _412 = (_388 > 0.0) ? (cbMtdParam._m0[15u].x / _388) : 5000.0;
    float _413 = isnan(_408) ? _400 : (isnan(_400) ? _408 : min(_400, _408));
    float _414 = isnan(_412) ? _413 : (isnan(_413) ? _412 : min(_413, _412));
    float _418 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _425 = ((_414 * _388) + _418) / _418;
    vec4 _450 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_393 + (-0.5)) + (_414 * _391)) / _425) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_394 + (-0.5)) + (_414 * _392)) / _425) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _452 = _450.x;
    float _453 = _450.y;
    float _454 = _450.z;
    vec4 _480 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _484 = _480.z;
    float _487 = (_480.x * 2.0) + (-1.0);
    float _488 = (_480.y * 2.0) + (-1.0);
    float _489 = dot(vec2(_487, _488), vec2(_487, _488));
    float _3101 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _494 = sqrt(1.0 - (isnan(1.0) ? _3101 : (isnan(_3101) ? 1.0 : min(_3101, 1.0))));
    float _495 = _484 * _286;
    float _502 = (cbMtdParam._m0[15u].w * ((_325 - _495) + ((_484 - _325) * _286))) + _495;
    float _506 = (cbMtdParam._m0[16u].x * _353) + _487;
    float _507 = (cbMtdParam._m0[16u].x * _354) + _488;
    float _510 = fma(_494, _195, fma(_507, _202, _506 * _188));
    float _513 = fma(_494, _196, fma(_507, _203, _506 * _189));
    float _516 = fma(_494, _197, fma(_507, _204, _506 * _190));
    float _520 = inversesqrt(dot(vec3(_510, _513, _516), vec3(_510, _513, _516)));
    float _521 = _520 * _510;
    float _522 = _520 * _513;
    float _523 = _520 * _516;
    float _3112 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _524 = isnan(1.0) ? _3112 : (isnan(_3112) ? 1.0 : min(_3112, 1.0));
    float _3123 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _3134 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _3145 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _543 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _547 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _548 = _259 * _547;
    float _549 = _260 * _547;
    float _550 = _261 * _547;
    float _556 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _557 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _577 = fma(_523, cbSceneParam._m0[5u].z, fma(_522, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _521));
    float _580 = fma(_523, cbSceneParam._m0[6u].z, fma(_522, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _521));
    float _583 = fma(_523, cbSceneParam._m0[7u].z, fma(_522, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _521));
    uint _596 = uint(roundEven(NORMAL.w)) * 13u;
    uint _598 = _596 + 9u;
    uint _599 = _598 + uint(cbMatDynParam._m0[0u].w);
    float _605 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0)))) * cbInstanceData._m0[_599].x;
    float _606 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0)))) * cbInstanceData._m0[_599].y;
    float _607 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3145 : (isnan(_3145) ? 1.0 : min(_3145, 1.0)))) * cbInstanceData._m0[_599].z;
    float _3156 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _608 = isnan(1.0) ? _3156 : (isnan(_3156) ? 1.0 : min(_3156, 1.0));
    float _3167 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _609 = isnan(1.0) ? _3167 : (isnan(_3167) ? 1.0 : min(_3167, 1.0));
    float _3178 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _610 = isnan(1.0) ? _3178 : (isnan(_3178) ? 1.0 : min(_3178, 1.0));
    vec4 _619 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _556, cbSceneParam._m0[86u].y * _557));
    float _622 = _619.x * TEXCOORD.z;
    float _623 = dot(vec3(_521, _522, _523), vec3(_548, _549, _550));
    float _626 = _623 * 2.0;
    float _630 = (_626 * _521) - _548;
    float _631 = (_626 * _522) - _549;
    float _632 = (_626 * _523) - _550;
    float _636 = abs(dot(vec3(_548, _549, _550), vec3(_521, _522, _523)));
    float _3189 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _638 = sqrt(_524);
    float _651 = exp2((_638 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_638 * 3.0));
    float _683 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _687 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _691 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _992;
    float _994;
    float _995;
    float _996;
    float _997;
    float _998;
    float _999;
    float _1000;
    float _1001;
    float _1002;
    float _1003;
    float _1004;
    float _1005;
    float _1006;
    float _1007;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _719 = fma(_691, cbModelParam._m0[26u].z, fma(_687, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _683));
        float _723 = fma(_691, cbModelParam._m0[27u].z, fma(_687, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _683));
        float _727 = fma(_691, cbModelParam._m0[28u].z, fma(_687, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _683));
        float _750 = _683 + _521;
        float _751 = _687 + _522;
        float _752 = _691 + _523;
        float _762 = fma(_752, cbModelParam._m0[26u].z, fma(_751, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _750)) - _719;
        float _763 = fma(_752, cbModelParam._m0[27u].z, fma(_751, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _750)) - _723;
        float _764 = fma(_752, cbModelParam._m0[28u].z, fma(_751, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _750)) - _727;
        float _768 = inversesqrt(dot(vec3(_762, _763, _764), vec3(_762, _763, _764)));
        float _781 = ((_768 * _762) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_719 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _782 = ((_768 * _763) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_723 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _783 = ((_768 * _764) / cbModelParam._m0[34u].z) + ((((((_727 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _786 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_781, _782, _783), 0.0);
        vec4 _793 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_781, _782, _783), 0.0);
        vec4 _800 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_781, _782, _783), 0.0);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_781, _782, _783), 0.0);
        float _820 = exp2((_786.w + (-0.5)) * 20.0) * 2.0;
        float _821 = _820 * (_786.x + (-0.5));
        float _822 = _820 * (_786.y + (-0.5));
        float _823 = _820 * (_786.z + (-0.5));
        float _830 = exp2((_793.w + (-0.5)) * 20.0) * 2.0;
        float _831 = _830 * (_793.x + (-0.5));
        float _832 = _830 * (_793.y + (-0.5));
        float _833 = _830 * (_793.z + (-0.5));
        float _840 = exp2((_800.w + (-0.5)) * 20.0) * 2.0;
        float _841 = _840 * (_800.x + (-0.5));
        float _842 = _840 * (_800.y + (-0.5));
        float _843 = _840 * (_800.z + (-0.5));
        float _850 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _851 = _850 * (_807.x + (-0.5));
        float _852 = _850 * (_807.y + (-0.5));
        float _853 = _850 * (_807.z + (-0.5));
        float _854 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        float _855 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
        float _856 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        float _857 = _821 * 0.5;
        float _858 = _831 * 0.5;
        float _859 = _841 * 0.5;
        float _860 = dot(vec3(_857, _858, _859), vec3(_857, _858, _859));
        float _865 = (_860 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_860);
        float _874 = (dot(vec3(_521, _522, _523), vec3(_865 * _857, _865 * _858, _865 * _859)) + 1.0) * 0.5;
        float _3215 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
        float _884 = sqrt(((_858 * _858) + (_857 * _857)) + (_859 * _859)) / (_854 + 9.9999997473787516355514526367188e-06);
        float _3226 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _885 = isnan(1.0) ? _3226 : (isnan(_3226) ? 1.0 : min(_3226, 1.0));
        float _886 = _885 * 2.0;
        float _890 = (1.0 - _885) / (_885 + 1.0);
        float _3237 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
        float _891 = isnan(1.0) ? _3237 : (isnan(_3237) ? 1.0 : min(_3237, 1.0));
        float _900 = ((((1.0 - _891) * (_886 + 2.0)) * exp2(log2(isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0))) * (_886 + 1.0))) + _891) * _854;
        float _901 = _822 * 0.5;
        float _902 = _832 * 0.5;
        float _903 = _842 * 0.5;
        float _904 = dot(vec3(_901, _902, _903), vec3(_901, _902, _903));
        float _909 = (_904 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_904);
        float _917 = (dot(vec3(_521, _522, _523), vec3(_909 * _901, _909 * _902, _909 * _903)) + 1.0) * 0.5;
        float _3248 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
        float _926 = sqrt(((_902 * _902) + (_901 * _901)) + (_903 * _903)) / (_855 + 9.9999997473787516355514526367188e-06);
        float _3259 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
        float _927 = isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0));
        float _928 = _927 * 2.0;
        float _932 = (1.0 - _927) / (_927 + 1.0);
        float _3270 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _933 = isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0));
        float _942 = ((((1.0 - _933) * (_928 + 2.0)) * exp2(log2(isnan(1.0) ? _3248 : (isnan(_3248) ? 1.0 : min(_3248, 1.0))) * (_928 + 1.0))) + _933) * _855;
        float _943 = _823 * 0.5;
        float _944 = _833 * 0.5;
        float _945 = _843 * 0.5;
        float _946 = dot(vec3(_943, _944, _945), vec3(_943, _944, _945));
        float _951 = (_946 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_946);
        float _959 = (dot(vec3(_521, _522, _523), vec3(_951 * _943, _951 * _944, _951 * _945)) + 1.0) * 0.5;
        float _3281 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _968 = sqrt(((_944 * _944) + (_943 * _943)) + (_945 * _945)) / (_856 + 9.9999997473787516355514526367188e-06);
        float _3292 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
        float _969 = isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0));
        float _970 = _969 * 2.0;
        float _974 = (1.0 - _969) / (_969 + 1.0);
        float _3303 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
        float _975 = isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0));
        float _984 = ((((1.0 - _975) * (_970 + 2.0)) * exp2(log2(isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0))) * (_970 + 1.0))) + _975) * _856;
        _992 = _823;
        _994 = _822;
        _995 = _821;
        _996 = _833;
        _997 = _832;
        _998 = _831;
        _999 = _843;
        _1000 = _842;
        _1001 = _841;
        _1002 = _856;
        _1003 = _855;
        _1004 = _854;
        _1005 = cbModelParam._m0[36u].z * (isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0)));
        _1006 = cbModelParam._m0[36u].z * (isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0)));
        _1007 = cbModelParam._m0[36u].z * (isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0)));
    }
    else
    {
        _992 = _993;
        _994 = _993;
        _995 = _993;
        _996 = _993;
        _997 = _993;
        _998 = _993;
        _999 = _993;
        _1000 = _993;
        _1001 = _993;
        _1002 = _993;
        _1003 = _993;
        _1004 = _993;
        _1005 = 0.0;
        _1006 = 0.0;
        _1007 = 0.0;
    }
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1033 = fma(_691, cbModelParam._m0[30u].z, fma(_687, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _683));
        float _1037 = fma(_691, cbModelParam._m0[31u].z, fma(_687, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _683));
        float _1041 = fma(_691, cbModelParam._m0[32u].z, fma(_687, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _683));
        float _1064 = _683 + _521;
        float _1065 = _687 + _522;
        float _1066 = _691 + _523;
        float _1076 = fma(_1066, cbModelParam._m0[30u].z, fma(_1065, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1064)) - _1033;
        float _1077 = fma(_1066, cbModelParam._m0[31u].z, fma(_1065, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1064)) - _1037;
        float _1078 = fma(_1066, cbModelParam._m0[32u].z, fma(_1065, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1064)) - _1041;
        float _1082 = inversesqrt(dot(vec3(_1076, _1077, _1078), vec3(_1076, _1077, _1078)));
        float _1095 = ((_1082 * _1076) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1033 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1096 = ((_1082 * _1077) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1037 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1097 = ((_1082 * _1078) / cbModelParam._m0[35u].z) + ((((((_1041 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1095, _1096, _1097), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1095, _1096, _1097), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1095, _1096, _1097), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1095, _1096, _1097), 0.0);
        float _1132 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1099.x + (-0.5));
        float _1134 = _1132 * (_1099.y + (-0.5));
        float _1135 = _1132 * (_1099.z + (-0.5));
        float _1142 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1106.x + (-0.5));
        float _1144 = _1142 * (_1106.y + (-0.5));
        float _1145 = _1142 * (_1106.z + (-0.5));
        float _1152 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = _1152 * (_1113.x + (-0.5));
        float _1154 = _1152 * (_1113.y + (-0.5));
        float _1155 = _1152 * (_1113.z + (-0.5));
        float _1162 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1163 = _1162 * (_1120.x + (-0.5));
        float _1164 = _1162 * (_1120.y + (-0.5));
        float _1165 = _1162 * (_1120.z + (-0.5));
        float _1166 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = _1133 * 0.5;
        float _1170 = _1143 * 0.5;
        float _1171 = _1153 * 0.5;
        float _1172 = dot(vec3(_1169, _1170, _1171), vec3(_1169, _1170, _1171));
        float _1177 = (_1172 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1172);
        float _1185 = (dot(vec3(_521, _522, _523), vec3(_1177 * _1169, _1177 * _1170, _1177 * _1171)) + 1.0) * 0.5;
        float _3344 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1194 = sqrt(((_1170 * _1170) + (_1169 * _1169)) + (_1171 * _1171)) / (_1166 + 9.9999997473787516355514526367188e-06);
        float _3355 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _3355 : (isnan(_3355) ? 1.0 : min(_3355, 1.0));
        float _1196 = _1195 * 2.0;
        float _1200 = (1.0 - _1195) / (_1195 + 1.0);
        float _3366 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1201 = isnan(1.0) ? _3366 : (isnan(_3366) ? 1.0 : min(_3366, 1.0));
        float _1210 = ((((1.0 - _1201) * (_1196 + 2.0)) * exp2(log2(isnan(1.0) ? _3344 : (isnan(_3344) ? 1.0 : min(_3344, 1.0))) * (_1196 + 1.0))) + _1201) * _1166;
        float _1211 = _1134 * 0.5;
        float _1212 = _1144 * 0.5;
        float _1213 = _1154 * 0.5;
        float _1214 = dot(vec3(_1211, _1212, _1213), vec3(_1211, _1212, _1213));
        float _1219 = (_1214 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1214);
        float _1227 = (dot(vec3(_521, _522, _523), vec3(_1219 * _1211, _1219 * _1212, _1219 * _1213)) + 1.0) * 0.5;
        float _3377 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1236 = sqrt(((_1212 * _1212) + (_1211 * _1211)) + (_1213 * _1213)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _3388 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1237 = isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0));
        float _1238 = _1237 * 2.0;
        float _1242 = (1.0 - _1237) / (_1237 + 1.0);
        float _3399 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
        float _1243 = isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0));
        float _1252 = ((((1.0 - _1243) * (_1238 + 2.0)) * exp2(log2(isnan(1.0) ? _3377 : (isnan(_3377) ? 1.0 : min(_3377, 1.0))) * (_1238 + 1.0))) + _1243) * _1167;
        float _1253 = _1135 * 0.5;
        float _1254 = _1145 * 0.5;
        float _1255 = _1155 * 0.5;
        float _1256 = dot(vec3(_1253, _1254, _1255), vec3(_1253, _1254, _1255));
        float _1261 = (_1256 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1256);
        float _1269 = (dot(vec3(_521, _522, _523), vec3(_1261 * _1253, _1261 * _1254, _1261 * _1255)) + 1.0) * 0.5;
        float _3410 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1278 = sqrt(((_1254 * _1254) + (_1253 * _1253)) + (_1255 * _1255)) / (_1168 + 9.9999997473787516355514526367188e-06);
        float _3421 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1279 = isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0));
        float _1280 = _1279 * 2.0;
        float _1284 = (1.0 - _1279) / (_1279 + 1.0);
        float _3432 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1285 = isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0));
        float _1294 = ((((1.0 - _1285) * (_1280 + 2.0)) * exp2(log2(isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0))) * (_1280 + 1.0))) + _1285) * _1168;
        _1302 = _1135;
        _1303 = _1134;
        _1304 = _1133;
        _1305 = _1145;
        _1306 = _1144;
        _1307 = _1143;
        _1308 = _1155;
        _1309 = _1154;
        _1310 = _1153;
        _1311 = _1168;
        _1312 = _1167;
        _1313 = _1166;
        _1314 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0)));
        _1315 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0)));
        _1316 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0)));
    }
    else
    {
        _1302 = _993;
        _1303 = _993;
        _1304 = _993;
        _1305 = _993;
        _1306 = _993;
        _1307 = _993;
        _1308 = _993;
        _1309 = _993;
        _1310 = _993;
        _1311 = _993;
        _1312 = _993;
        _1313 = _993;
        _1314 = 0.0;
        _1315 = 0.0;
        _1316 = 0.0;
    }
    float _1326 = (cbModelParam._m0[1u].x * (_1314 - _1005)) + _1005;
    float _1327 = (cbModelParam._m0[1u].x * (_1315 - _1006)) + _1006;
    float _1328 = (cbModelParam._m0[1u].x * (_1316 - _1007)) + _1007;
    float _1349 = fma(_1328, cbSceneParam._m0[89u].z, fma(_1327, cbSceneParam._m0[89u].y, _1326 * cbSceneParam._m0[89u].x));
    float _1352 = fma(_1328, cbSceneParam._m0[90u].z, fma(_1327, cbSceneParam._m0[90u].y, _1326 * cbSceneParam._m0[90u].x));
    float _1355 = fma(_1328, cbSceneParam._m0[91u].z, fma(_1327, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1326));
    float _1370 = _630 * 0.5;
    float _1371 = _631 * 0.5;
    float _1372 = _632 * 0.5;
    float _1373 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_1304, _1307, _1310, _1313));
    float _1376 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_1303, _1306, _1309, _1312));
    float _1379 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_1302, _1305, _1308, _1311));
    float _1413;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1386 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_992, _996, _999, _1002));
        float _1390 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_994, _997, _1000, _1003));
        float _1394 = dot(vec4(_1370, _1371, _1372, 1.0), vec4(_995, _998, _1001, _1004));
        float _1401 = dot(vec4(cbModelParam._m0[39u]), vec4(_1370, _1371, _1372, 1.0));
        _1413 = dot(vec3(isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0)), isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0)), isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1401) ? 0.0 : (isnan(0.0) ? _1401 : max(0.0, _1401))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1413 = 1.0;
    }
    float _1424;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1415 = dot(vec4(cbModelParam._m0[40u]), vec4(_1370, _1371, _1372, 1.0));
        _1424 = dot(vec3(isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0)), isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)), isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1415) ? 0.0 : (isnan(0.0) ? _1415 : max(0.0, _1415))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1424 = 1.0;
    }
    float _1428 = (_1424 * cbModelParam._m0[1u].x) + (_1413 * (1.0 - cbModelParam._m0[1u].x));
    float _1438 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _524);
    float _1439 = isnan(_1438) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1438 : min(cbModelParam._m0[25u].z, _1438));
    float _1520;
    float _1522;
    float _1524;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1487 = fma(_691, cbModelParam._m0[13u].z, fma(_687, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _683)) + cbModelParam._m0[13u].w;
        float _1491 = fma(_691, cbModelParam._m0[14u].z, fma(_687, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _683)) + cbModelParam._m0[14u].w;
        float _1495 = fma(_691, cbModelParam._m0[15u].z, fma(_687, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _683)) + cbModelParam._m0[15u].w;
        float _1498 = fma(_632, cbModelParam._m0[13u].z, fma(_631, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _630));
        float _1501 = fma(_632, cbModelParam._m0[14u].z, fma(_631, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _630));
        float _1504 = fma(_632, cbModelParam._m0[15u].z, fma(_631, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _630));
        float _1532;
        if (_1498 > 0.0)
        {
            _1532 = abs((1.0 - _1487) / _1498);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1498 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1487 + 1.0) / _1498);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1532 = frontier_phi_22_20_ladder;
        }
        float _1902;
        if (_1501 > 0.0)
        {
            _1902 = abs((1.0 - _1491) / _1501);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1501 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1491 + 1.0) / _1501);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1902 = frontier_phi_31_27_ladder;
        }
        float _2218;
        if (_1504 > 0.0)
        {
            _2218 = abs((1.0 - _1495) / _1504);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1504 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1495 + 1.0) / _1504);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _2218 = frontier_phi_45_38_ladder;
        }
        float _2220 = isnan(_1902) ? _1532 : (isnan(_1532) ? _1902 : min(_1532, _1902));
        float _2221 = isnan(_2218) ? _2220 : (isnan(_2220) ? _2218 : min(_2220, _2218));
        float _2225 = (_2221 * _1498) + _1487;
        float _2226 = (_2221 * _1501) + _1491;
        float _2227 = (_2221 * _1504) + _1495;
        float _2228 = _2221 * 9.9999997473787516355514526367188e-05;
        float _2229 = (-1.0) - _2228;
        float _2231 = _2228 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_2227 > _2231) || ((_2227 < _2229) || ((_2226 > _2231) || ((_2226 < _2229) || ((_2225 < _2229) || (_2225 > _2231))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2353 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2227, cbModelParam._m0[9u].z, fma(_2226, cbModelParam._m0[9u].y, _2225 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2227, cbModelParam._m0[10u].z, fma(_2226, cbModelParam._m0[10u].y, _2225 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2227, cbModelParam._m0[11u].z, fma(_2226, cbModelParam._m0[11u].y, _2225 * cbModelParam._m0[11u].x))), _1439);
            frontier_phi_21_45_ladder = _2353.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2353.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2353.x * cbModelParam._m0[1u].y;
        }
        _1520 = frontier_phi_21_45_ladder_2;
        _1522 = frontier_phi_21_45_ladder_1;
        _1524 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1508 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_630, _631, _632), _1439);
        _1520 = _1508.x * cbModelParam._m0[1u].y;
        _1522 = _1508.y * cbModelParam._m0[1u].y;
        _1524 = _1508.z * cbModelParam._m0[1u].y;
    }
    float _1528 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _524);
    float _1529 = isnan(_1528) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1528 : min(cbModelParam._m0[25u].w, _1528));
    float _1618;
    float _1620;
    float _1622;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1582 = fma(_691, cbModelParam._m0[21u].z, fma(_687, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _683)) + cbModelParam._m0[21u].w;
        float _1586 = fma(_691, cbModelParam._m0[22u].z, fma(_687, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _683)) + cbModelParam._m0[22u].w;
        float _1590 = fma(_691, cbModelParam._m0[23u].z, fma(_687, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _683)) + cbModelParam._m0[23u].w;
        float _1593 = fma(_632, cbModelParam._m0[21u].z, fma(_631, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _630));
        float _1596 = fma(_632, cbModelParam._m0[22u].z, fma(_631, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _630));
        float _1599 = fma(_632, cbModelParam._m0[23u].z, fma(_631, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _630));
        float _1907;
        if (_1593 > 0.0)
        {
            _1907 = abs((1.0 - _1582) / _1593);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1593 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1582 + 1.0) / _1593);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1907 = frontier_phi_33_29_ladder;
        }
        float _2244;
        if (_1596 > 0.0)
        {
            _2244 = abs((1.0 - _1586) / _1596);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1596 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1586 + 1.0) / _1596);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _2244 = frontier_phi_47_40_ladder;
        }
        float _2413;
        if (_1599 > 0.0)
        {
            _2413 = abs((1.0 - _1590) / _1599);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1599 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1590 + 1.0) / _1599);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2413 = frontier_phi_61_56_ladder;
        }
        float _2415 = isnan(_2244) ? _1907 : (isnan(_1907) ? _2244 : min(_1907, _2244));
        float _2416 = isnan(_2413) ? _2415 : (isnan(_2415) ? _2413 : min(_2415, _2413));
        float _2420 = (_2416 * _1593) + _1582;
        float _2421 = (_2416 * _1596) + _1586;
        float _2422 = (_2416 * _1599) + _1590;
        float _2423 = _2416 * 9.9999997473787516355514526367188e-05;
        float _2424 = (-1.0) - _2423;
        float _2426 = _2423 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2422 > _2426) || ((_2422 < _2424) || ((_2421 > _2426) || ((_2421 < _2424) || ((_2420 < _2424) || (_2420 > _2426))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2655 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2422, cbModelParam._m0[17u].z, fma(_2421, cbModelParam._m0[17u].y, _2420 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2422, cbModelParam._m0[18u].z, fma(_2421, cbModelParam._m0[18u].y, _2420 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2422, cbModelParam._m0[19u].z, fma(_2421, cbModelParam._m0[19u].y, _2420 * cbModelParam._m0[19u].x))), _1529);
            frontier_phi_30_61_ladder = _2655.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2655.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2655.x * cbModelParam._m0[1u].z;
        }
        _1618 = frontier_phi_30_61_ladder_2;
        _1620 = frontier_phi_30_61_ladder_1;
        _1622 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1602 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_630, _631, _632), _1529);
        _1618 = _1602.x * cbModelParam._m0[1u].z;
        _1620 = _1602.y * cbModelParam._m0[1u].z;
        _1622 = _1602.z * cbModelParam._m0[1u].z;
    }
    float _1634 = ((((1.0 - _651) * ((_638 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_651 * _638)) * _622;
    float _1635 = _1634 * ((cbModelParam._m0[1u].w * (_1618 - _1520)) + _1520);
    float _1636 = _1634 * ((cbModelParam._m0[1u].w * (_1620 - _1522)) + _1522);
    float _1637 = _1634 * ((cbModelParam._m0[1u].w * (_1622 - _1524)) + _1524);
    float _1640 = fma(_1637, cbSceneParam._m0[89u].z, fma(_1636, cbSceneParam._m0[89u].y, _1635 * cbSceneParam._m0[89u].x));
    float _1643 = fma(_1637, cbSceneParam._m0[90u].z, fma(_1636, cbSceneParam._m0[90u].y, _1635 * cbSceneParam._m0[90u].x));
    float _1646 = fma(_1637, cbSceneParam._m0[91u].z, fma(_1636, cbSceneParam._m0[91u].y, _1635 * cbSceneParam._m0[91u].x));
    vec4 _1654 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_556, _557));
    float _1656 = _1654.w;
    float _1668 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1656);
    float _1669 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1656);
    float _1670 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1656);
    uvec4 _1674 = floatBitsToUint(cbInstanceData._m0[_596 + 5u]);
    uint _1676 = _1674.x * 14u;
    uint _1677 = _1676 + 13u;
    float _1682 = _622 + (-1.0);
    float _1685 = (cbLight._m0[_1677].x * _1682) + 1.0;
    float _1686 = (cbLight._m0[_1677].y * _1682) + 1.0;
    uint _1687 = _1676 + 5u;
    float _1693 = isnan(1.0) ? _1686 : (isnan(_1686) ? 1.0 : min(_1686, 1.0));
    uint _1697 = _1676 + 4u;
    float _1706 = isnan(1.0) ? _1685 : (isnan(_1685) ? 1.0 : min(_1685, 1.0));
    uint _1710 = _1676 | 1u;
    float _1721 = dot(vec3(cbLight._m0[_1676].xyz), vec3(_521, _522, _523));
    float _1724 = dot(vec3(cbLight._m0[_1710].xyz), vec3(_521, _522, _523));
    float _3568 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
    float _3579 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
    float _1729 = (isnan(1.0) ? _3568 : (isnan(_3568) ? 1.0 : min(_3568, 1.0))) * 0.3183098733425140380859375;
    float _1731 = (isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0))) * 0.3183098733425140380859375;
    float _1738 = ((cbLight._m0[_1687].x * _1693) * _1731) + (((cbLight._m0[_1697].x * _1668) * _1706) * _1729);
    float _1739 = ((_1693 * cbLight._m0[_1687].y) * _1731) + (((cbLight._m0[_1697].y * _1669) * _1706) * _1729);
    float _1740 = ((_1693 * cbLight._m0[_1687].z) * _1731) + (((cbLight._m0[_1697].z * _1670) * _1706) * _1729);
    uint _1742 = _1676 + 8u;
    float _1755 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1676].w)) * _524) * 0.949999988079071044921875);
    float _1756 = _1755 * _1755;
    float _1757 = cbLight._m0[_1676].x + _548;
    float _1758 = cbLight._m0[_1676].y + _549;
    float _1759 = cbLight._m0[_1676].z + _550;
    float _1763 = inversesqrt(dot(vec3(_1757, _1758, _1759), vec3(_1757, _1758, _1759)));
    float _1764 = _1763 * _1757;
    float _1765 = _1763 * _1758;
    float _1766 = _1763 * _1759;
    float _1767 = dot(vec3(_521, _522, _523), vec3(cbLight._m0[_1676].xyz));
    float _3590 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
    float _1770 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
    float _3601 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _1771 = isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0));
    float _1772 = dot(vec3(_521, _522, _523), vec3(_1764, _1765, _1766));
    float _3612 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
    float _1775 = isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0));
    float _1776 = dot(vec3(cbLight._m0[_1676].xyz), vec3(_1764, _1765, _1766));
    float _3623 = isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0));
    float _1780 = _1756 * _1756;
    float _1784 = ((_1775 * _1775) * (_1780 + (-1.0))) + 1.0;
    float _1795 = (exp2(log2(1.0 - (isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1796 = 1.0 - _1756;
    float _1807 = (0.5 / (((_1771 * ((_1770 * _1796) + _1756)) + 9.9999999392252902907785028219223e-09) + (((_1771 * _1796) + _1756) * _1770))) * _1770;
    float _3634 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
    float _1809 = (isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0))) * (_1780 / ((_1784 * _1784) * 3.141590118408203125));
    uint _1823 = _1676 + 9u;
    float _1834 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1710].w)) * _524) * 0.949999988079071044921875);
    float _1835 = _1834 * _1834;
    float _1836 = cbLight._m0[_1710].x + _548;
    float _1837 = cbLight._m0[_1710].y + _549;
    float _1838 = cbLight._m0[_1710].z + _550;
    float _1842 = inversesqrt(dot(vec3(_1836, _1837, _1838), vec3(_1836, _1837, _1838)));
    float _1843 = _1842 * _1836;
    float _1844 = _1842 * _1837;
    float _1845 = _1842 * _1838;
    float _1846 = dot(vec3(_521, _522, _523), vec3(cbLight._m0[_1710].xyz));
    float _3645 = isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0));
    float _1849 = isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0));
    float _1850 = dot(vec3(_521, _522, _523), vec3(_1843, _1844, _1845));
    float _3656 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0));
    float _1853 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
    float _1854 = dot(vec3(cbLight._m0[_1710].xyz), vec3(_1843, _1844, _1845));
    float _3667 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
    float _1858 = _1835 * _1835;
    float _1862 = ((_1853 * _1853) * (_1858 + (-1.0))) + 1.0;
    float _1871 = (exp2(log2(1.0 - (isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1872 = 1.0 - _1835;
    float _1882 = (0.5 / (((_1771 * ((_1849 * _1872) + _1835)) + 9.9999999392252902907785028219223e-09) + (((_1771 * _1872) + _1835) * _1849))) * _1849;
    float _3678 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
    float _1884 = (isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0))) * (_1858 / ((_1862 * _1862) * 3.141590118408203125));
    float _1894 = (((_1871 * cbLight._m0[_1823].x) * _1884) * _1693) + ((((cbLight._m0[_1742].x * _1668) * _1795) * _1809) * _1706);
    float _1895 = (((_1871 * cbLight._m0[_1823].y) * _1884) * _1693) + ((((cbLight._m0[_1742].y * _1669) * _1795) * _1809) * _1706);
    float _1896 = (((_1871 * cbLight._m0[_1823].z) * _1884) * _1693) + ((((cbLight._m0[_1742].z * _1670) * _1795) * _1809) * _1706);
    float _2011;
    float _2013;
    float _2015;
    float _2017;
    float _2019;
    float _2021;
    if (_1674.y == 0u)
    {
        float _1951 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1952 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1951;
        float _1953 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1951;
        float _1954 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1951;
        uvec4 _1966 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1967 = _1966.x;
        uint _1978 = uint((float(_1966.y) * floor(float(uint(cbSceneParam._m0[85u].y * _557) / _1967))) + floor(float(uint(cbSceneParam._m0[85u].x * _556) / _1967)));
        float _1988 = (log2(_1954 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1989 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        uint _1992 = uint(isnan(14.0) ? _1989 : (isnan(_1989) ? 14.0 : min(_1989, 14.0)));
        uvec4 _1997 = texelFetch(g_lightClusterGridBuffer, int(((_1992 << 2u) + (_1978 << 6u)) >> 2u));
        uint _1998 = _1997.x;
        uint _1999 = _1966.z;
        float _2105;
        float _2107;
        float _2109;
        float _2111;
        float _2113;
        float _2115;
        if (((((1u << ((_1999 >> 4u) & 15u)) + 4294967295u) & _1998) == 0u) || ((_1999 & 240u) == 0u))
        {
            _2105 = 0.0;
            _2107 = 0.0;
            _2109 = 0.0;
            _2111 = 0.0;
            _2113 = 0.0;
            _2115 = 0.0;
        }
        else
        {
            float _2106;
            float _2108;
            float _2110;
            float _2112;
            float _2114;
            float _2116;
            float _2281 = 0.0;
            float _2282 = 0.0;
            float _2283 = 0.0;
            float _2284 = 0.0;
            float _2285 = 0.0;
            float _2286 = 0.0;
            uint _2287 = 0u;
            uint _2296;
            bool _2297;
            for (;;)
            {
                _2296 = texelFetch(g_lightClassification, int((((_1992 << 5u) + (_1978 << 9u)) + (_2287 << 2u)) >> 2u)).x;
                _2297 = _2296 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2297)
                {
                    frontier_phi_58_pred = _2282;
                    frontier_phi_58_pred_1 = _2286;
                    frontier_phi_58_pred_2 = _2285;
                    frontier_phi_58_pred_3 = _2284;
                    frontier_phi_58_pred_4 = _2283;
                    frontier_phi_58_pred_5 = _2281;
                }
                else
                {
                    float _2456;
                    float _2457;
                    float _2458;
                    float _2459;
                    float _2460;
                    float _2461;
                    uint _2462;
                    _2456 = _2281;
                    _2457 = _2282;
                    _2458 = _2283;
                    _2459 = _2284;
                    _2460 = _2285;
                    _2461 = _2286;
                    _2462 = _2296;
                    float _2362;
                    float _2363;
                    float _2364;
                    float _2365;
                    float _2366;
                    float _2367;
                    for (;;)
                    {
                        uint _2466 = uint(findLSB(_2462)) + (_2287 << 5u);
                        uint _2463 = (_2462 + 4294967295u) & _2462;
                        uint _2468 = _2466 * 48u;
                        vec4 _2482 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2468)).x, texelFetch(g_PointLightRenderingBuffer, int(_2468 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2468 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2468 + 3u)).x));
                        uint _2488 = (_2466 * 48u) + 4u;
                        vec4 _2501 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2488)).x, texelFetch(g_PointLightRenderingBuffer, int(_2488 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2488 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2488 + 3u)).x));
                        uint _2507 = (_2466 * 48u) + 8u;
                        vec3 _2518 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2507)).x, texelFetch(g_PointLightRenderingBuffer, int(_2507 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2507 + 2u)).x));
                        float _2522 = _2482.x - _1952;
                        float _2523 = _2482.y - _1953;
                        float _2524 = _2482.z - _1954;
                        float _2525 = dot(vec3(_2522, _2523, _2524), vec3(_2522, _2523, _2524));
                        float _2528 = inversesqrt(_2525);
                        float _2529 = _2528 * _2522;
                        float _2530 = _2528 * _2523;
                        float _2531 = _2528 * _2524;
                        float _2532 = dot(vec3(_577, _580, _583), vec3(_2529, _2530, _2531));
                        float _2537 = 1.0 - (_2525 * _2482.w);
                        float _3699 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
                        float _2538 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
                        float _2539 = sqrt(_2525) * _2501.w;
                        float _2542 = 1.39999997615814208984375 / (_2539 + 1.39999997615814208984375);
                        float _2543 = _2542 * _2542;
                        float _2546 = ((1.0 - _2543) * _2532) + _2543;
                        float _2549 = _2539 * _2539;
                        float _2553 = ((isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0))) * _2538) / ((_2549 * 0.699999988079071044921875) + 1.0);
                        float _2557 = (-0.0) - _1952;
                        float _2558 = (-0.0) - _1953;
                        float _2559 = (-0.0) - _1954;
                        float _2563 = inversesqrt(dot(vec3(_2557, _2558, _2559), vec3(_2557, _2558, _2559)));
                        float _2564 = _2563 * _2557;
                        float _2565 = _2563 * _2558;
                        float _2566 = _2563 * _2559;
                        float _2574 = exp2(log2(1.0 / ((_2549 * 3.5) + 5.0)) * 0.25);
                        float _2575 = 1.0 - _638;
                        float _2582 = sqrt(1.0 - ((1.0 - (_2575 * _2575)) * (1.0 - (_2574 * _2574))));
                        float _2583 = _2582 * _2582;
                        float _2584 = _2583 * _2583;
                        float _2585 = _2564 + _2529;
                        float _2586 = _2565 + _2530;
                        float _2587 = _2566 + _2531;
                        float _2591 = inversesqrt(dot(vec3(_2585, _2586, _2587), vec3(_2585, _2586, _2587)));
                        float _2595 = dot(vec3(_577, _580, _583), vec3(_2564, _2565, _2566));
                        float _3715 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
                        float _2598 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
                        float _2599 = dot(vec3(_577, _580, _583), vec3(_2591 * _2585, _2591 * _2586, _2591 * _2587));
                        float _3726 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
                        float _2602 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
                        float _2606 = ((_2602 * _2602) * (_2584 + (-1.0))) + 1.0;
                        float _2607 = _2542 * _2583;
                        float _2608 = _2607 * _2607;
                        float _2611 = ((1.0 - _2608) * _2532) + _2608;
                        float _3737 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
                        float _2612 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
                        float _2613 = 1.0 - _2583;
                        float _2623 = (0.5 / (((_2612 * ((_2598 * _2613) + _2583)) + 9.9999999392252902907785028219223e-09) + (((_2612 * _2613) + _2583) * _2598))) * _2612;
                        float _3748 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
                        float _2634 = (((_2584 * 3.1415927410125732421875) * (isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0)))) / ((_2606 * _2606) * ((_2549 * 2.1991131305694580078125) + 3.141590118408203125))) * _2538;
                        _2365 = (_2553 * _2501.x) + _2459;
                        _2366 = (_2553 * _2501.y) + _2460;
                        _2367 = (_2553 * _2501.z) + _2461;
                        _2362 = (_2634 * _2518.x) + _2456;
                        _2363 = (_2634 * _2518.y) + _2457;
                        _2364 = (_2634 * _2518.z) + _2458;
                        if (_2463 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2456 = _2362;
                            _2457 = _2363;
                            _2458 = _2364;
                            _2459 = _2365;
                            _2460 = _2366;
                            _2461 = _2367;
                            _2462 = _2463;
                        }
                    }
                    frontier_phi_58_pred = _2363;
                    frontier_phi_58_pred_1 = _2367;
                    frontier_phi_58_pred_2 = _2366;
                    frontier_phi_58_pred_3 = _2365;
                    frontier_phi_58_pred_4 = _2364;
                    frontier_phi_58_pred_5 = _2362;
                }
                _2108 = frontier_phi_58_pred;
                _2116 = frontier_phi_58_pred_1;
                _2114 = frontier_phi_58_pred_2;
                _2112 = frontier_phi_58_pred_3;
                _2110 = frontier_phi_58_pred_4;
                _2106 = frontier_phi_58_pred_5;
                uint _2288 = _2287 + 1u;
                if (_2288 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2281 = _2106;
                    _2282 = _2108;
                    _2283 = _2110;
                    _2284 = _2112;
                    _2285 = _2114;
                    _2286 = _2116;
                    _2287 = _2288;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2105 = _2106;
            _2107 = _2108;
            _2109 = _2110;
            _2111 = _2112;
            _2113 = _2114;
            _2115 = _2116;
        }
        uvec4 _2119 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2120 = _2119.z;
        uint _2122 = (_2120 >> 8u) & 15u;
        float _2249;
        float _2251;
        float _2253;
        float _2255;
        float _2257;
        float _2259;
        if (((4294967295u << _2122) & _1998) == 0u)
        {
            _2249 = _2105;
            _2251 = _2107;
            _2253 = _2109;
            _2255 = _2111;
            _2257 = _2113;
            _2259 = _2115;
        }
        else
        {
            float _2274 = inversesqrt(dot(vec3(_1952, _1953, _1954), vec3(_1952, _1953, _1954)));
            float _2275 = _2274 * _1952;
            float _2276 = _2274 * _1953;
            float _2277 = _2274 * _1954;
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_2122 < ((_2120 >> 12u) & 15u))
            {
                float _2250;
                float _2252;
                float _2254;
                float _2256;
                float _2258;
                float _2260;
                float _2439 = _2105;
                float _2440 = _2107;
                float _2441 = _2109;
                float _2442 = _2111;
                float _2443 = _2113;
                float _2444 = _2115;
                uint _2445 = _2122;
                uint _2454;
                bool _2455;
                for (;;)
                {
                    _2454 = texelFetch(g_lightClassification, int((((_1992 << 5u) + (_1978 << 9u)) + (_2445 << 2u)) >> 2u)).x;
                    _2455 = _2454 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2455)
                    {
                        frontier_phi_67_pred = _2444;
                        frontier_phi_67_pred_1 = _2443;
                        frontier_phi_67_pred_2 = _2442;
                        frontier_phi_67_pred_3 = _2441;
                        frontier_phi_67_pred_4 = _2440;
                        frontier_phi_67_pred_5 = _2439;
                    }
                    else
                    {
                        float _2660;
                        float _2661;
                        float _2662;
                        float _2663;
                        float _2664;
                        float _2665;
                        float _2953;
                        float _2954;
                        float _2955;
                        float _2956;
                        float _2957;
                        float _2958;
                        float _2673 = _2439;
                        float _2674 = _2440;
                        float _2675 = _2441;
                        float _2676 = _2442;
                        float _2677 = _2443;
                        float _2678 = _2444;
                        uint _2679 = _2454;
                        uint _2680;
                        vec4 _2705;
                        float _2706;
                        vec4 _2721;
                        vec3 _2733;
                        vec4 _2748;
                        vec4 _2763;
                        float _2809;
                        bool _2810;
                        for (;;)
                        {
                            uint _2690 = ((_2445 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2679));
                            _2680 = (_2679 + 4294967295u) & _2679;
                            uint _2692 = _2690 * 40u;
                            _2705 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 3u)).x));
                            _2706 = _2705.w;
                            uint _2708 = (_2690 * 40u) + 4u;
                            _2721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 3u)).x));
                            uint _2723 = (_2690 * 40u) + 8u;
                            _2733 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2723)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2723 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2723 + 2u)).x));
                            uint _2735 = (_2690 * 40u) + 16u;
                            _2748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2735 + 3u)).x));
                            uint _2750 = (_2690 * 40u) + 20u;
                            _2763 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2750)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 3u)).x));
                            uint _2765 = (_2690 * 40u) + 24u;
                            vec4 _2778 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2765)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2765 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2765 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2765 + 3u)).x));
                            uint _2784 = (_2690 * 40u) + 28u;
                            vec4 _2797 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2784)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2784 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2784 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2784 + 3u)).x));
                            _2809 = fma(_1954, _2797.z, fma(_1953, _2797.y, _2797.x * _1952)) + _2797.w;
                            _2810 = !((fma(_1954, _2778.z, fma(_1953, _2778.y, _2778.x * _1952)) + _2778.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2810)
                            {
                                float _2837 = _2705.x - _1952;
                                float _2838 = _2705.y - _1953;
                                float _2839 = _2705.z - _1954;
                                float _2840 = dot(vec3(_2837, _2838, _2839), vec3(_2837, _2838, _2839));
                                float _2843 = inversesqrt(_2840);
                                float _2844 = _2843 * _2837;
                                float _2845 = _2843 * _2838;
                                float _2846 = _2843 * _2839;
                                float _2850 = 1.0 - (_2840 / (_2706 * _2706));
                                float _3759 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
                                float _2851 = isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0));
                                float _2855 = sqrt(_2840) * _2721.w;
                                float _2857 = 1.39999997615814208984375 / (_2855 + 1.39999997615814208984375);
                                float _2858 = _2857 * _2857;
                                float _2861 = ((1.0 - _2858) * dot(vec3(_2844, _2845, _2846), vec3(_577, _580, _583))) + _2858;
                                float _2864 = _2855 * _2855;
                                float _2868 = (fma(_1954, _2748.z, fma(_1953, _2748.y, _2748.x * _1952)) + _2748.w) / _2809;
                                float _2869 = (fma(_1954, _2763.z, fma(_1953, _2763.y, _2763.x * _1952)) + _2763.w) / _2809;
                                float _2873 = 1.0 - dot(vec2(_2868, _2869), vec2(_2868, _2869));
                                float _3775 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
                                float _2874 = isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0));
                                float _2875 = _2874 * (((isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0))) * _2851) / ((_2864 * 0.699999988079071044921875) + 1.0));
                                float _2887 = exp2(log2(1.0 / ((_2864 * 3.5) + 5.0)) * 0.25);
                                float _2888 = 1.0 - _638;
                                float _2895 = sqrt(1.0 - ((1.0 - (_2888 * _2888)) * (1.0 - (_2887 * _2887))));
                                float _2896 = _2895 * _2895;
                                float _2897 = _2896 * _2896;
                                float _2898 = _2844 - _2275;
                                float _2899 = _2845 - _2276;
                                float _2900 = _2846 - _2277;
                                float _2904 = inversesqrt(dot(vec3(_2898, _2899, _2900), vec3(_2898, _2899, _2900)));
                                float _2908 = dot(vec3(_577, _580, _583), vec3((-0.0) - _2275, (-0.0) - _2276, (-0.0) - _2277));
                                float _3786 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
                                float _2911 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
                                float _2912 = dot(vec3(_577, _580, _583), vec3(_2904 * _2898, _2904 * _2899, _2904 * _2900));
                                float _3797 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
                                float _2915 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
                                float _2919 = ((_2915 * _2915) * (_2897 + (-1.0))) + 1.0;
                                float _2920 = _2857 * _2896;
                                float _2921 = _2920 * _2920;
                                float _2927 = ((1.0 - _2921) * dot(vec3(_577, _580, _583), vec3(_2844, _2845, _2846))) + _2921;
                                float _3808 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
                                float _2928 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
                                float _2929 = 1.0 - _2896;
                                float _2939 = (0.5 / (((_2928 * ((_2911 * _2929) + _2896)) + 9.9999999392252902907785028219223e-09) + (((_2928 * _2929) + _2896) * _2911))) * _2928;
                                float _3819 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
                                float _2949 = (_2874 * _2851) * (((_2897 * 3.1415927410125732421875) * (isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0)))) / ((_2919 * _2919) * ((_2864 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _2875 * _2721.z;
                                frontier_phi_73_pred_1 = _2875 * _2721.y;
                                frontier_phi_73_pred_2 = _2875 * _2721.x;
                                frontier_phi_73_pred_3 = _2949 * _2733.z;
                                frontier_phi_73_pred_4 = _2949 * _2733.y;
                                frontier_phi_73_pred_5 = _2949 * _2733.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2958 = frontier_phi_73_pred;
                            _2957 = frontier_phi_73_pred_1;
                            _2956 = frontier_phi_73_pred_2;
                            _2955 = frontier_phi_73_pred_3;
                            _2954 = frontier_phi_73_pred_4;
                            _2953 = frontier_phi_73_pred_5;
                            _2663 = _2956 + _2676;
                            _2664 = _2957 + _2677;
                            _2665 = _2958 + _2678;
                            _2660 = _2953 + _2673;
                            _2661 = _2954 + _2674;
                            _2662 = _2955 + _2675;
                            if (_2680 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2673 = _2660;
                                _2674 = _2661;
                                _2675 = _2662;
                                _2676 = _2663;
                                _2677 = _2664;
                                _2678 = _2665;
                                _2679 = _2680;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2665;
                        frontier_phi_67_pred_1 = _2664;
                        frontier_phi_67_pred_2 = _2663;
                        frontier_phi_67_pred_3 = _2662;
                        frontier_phi_67_pred_4 = _2661;
                        frontier_phi_67_pred_5 = _2660;
                    }
                    _2260 = frontier_phi_67_pred;
                    _2258 = frontier_phi_67_pred_1;
                    _2256 = frontier_phi_67_pred_2;
                    _2254 = frontier_phi_67_pred_3;
                    _2252 = frontier_phi_67_pred_4;
                    _2250 = frontier_phi_67_pred_5;
                    uint _2446 = _2445 + 1u;
                    if (_2446 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2439 = _2250;
                        _2440 = _2252;
                        _2441 = _2254;
                        _2442 = _2256;
                        _2443 = _2258;
                        _2444 = _2260;
                        _2445 = _2446;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _2256;
                frontier_phi_49_50_ladder_1 = _2260;
                frontier_phi_49_50_ladder_2 = _2258;
                frontier_phi_49_50_ladder_3 = _2254;
                frontier_phi_49_50_ladder_4 = _2252;
                frontier_phi_49_50_ladder_5 = _2250;
            }
            else
            {
                frontier_phi_49_50_ladder = _2111;
                frontier_phi_49_50_ladder_1 = _2115;
                frontier_phi_49_50_ladder_2 = _2113;
                frontier_phi_49_50_ladder_3 = _2109;
                frontier_phi_49_50_ladder_4 = _2107;
                frontier_phi_49_50_ladder_5 = _2105;
            }
            _2249 = frontier_phi_49_50_ladder_5;
            _2251 = frontier_phi_49_50_ladder_4;
            _2253 = frontier_phi_49_50_ladder_3;
            _2255 = frontier_phi_49_50_ladder;
            _2257 = frontier_phi_49_50_ladder_2;
            _2259 = frontier_phi_49_50_ladder_1;
        }
        float _2264 = isnan(1.0) ? _622 : (isnan(_622) ? 1.0 : min(_622, 1.0));
        _2011 = (_2264 * _2255) + _1738;
        _2013 = (_2264 * _2257) + _1739;
        _2015 = (_2264 * _2259) + _1740;
        _2017 = ((_2249 * 0.039999999105930328369140625) * _2264) + _1894;
        _2019 = ((_2251 * 0.039999999105930328369140625) * _2264) + _1895;
        _2021 = ((_2253 * 0.039999999105930328369140625) * _2264) + _1896;
    }
    else
    {
        _2011 = _1738;
        _2013 = _1739;
        _2015 = _1740;
        _2017 = _1894;
        _2019 = _1895;
        _2021 = _1896;
    }
    uint _2027 = _598 + uint(cbMatDynParam._m0[0u].w);
    float _3835 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _3846 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _3857 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _2052 = (((isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0))) * (_2011 + ((isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0))) * _622))) + ((_2017 + ((isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))) * _1428)) * cbPerFrame._m0[3u].x)) + (((_452 - (_452 * _286)) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2027].x);
    float _2054 = ((((_453 - (_453 * _286)) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_2027].y) + ((_2019 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _1428)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0))) * (_2013 + ((isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0))) * _622)));
    float _2056 = (((cbMtdParam._m0[9u].z * (_454 - (_454 * _286))) * cbInstanceData._m0[_2027].z) + ((_2021 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _1428)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0))) * (_2015 + ((isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0))) * _622)));
    uint _2060 = _596 + 6u;
    float _2068 = _556 / cbSceneParam._m0[86u].x;
    float _2069 = _557 / cbSceneParam._m0[86u].y;
    vec4 _2083 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2068, _2069, (log2((isnan(cbSceneParam._m0[77u].w) ? _543 : (isnan(_543) ? cbSceneParam._m0[77u].w : min(_543, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2085 = _2083.x;
    float _2086 = _2083.y;
    float _2087 = _2083.z;
    float _2088 = _2083.w;
    float _2168;
    float _2170;
    float _2172;
    float _2174;
    if (_543 > cbSceneParam._m0[78u].w)
    {
        float _2130 = isnan(_543) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _543 : min(cbSceneParam._m0[80u].w, _543));
        float _2131 = _2130 / _543;
        float _2142 = _2131 * _259;
        float _2143 = _260 * _2131;
        float _2144 = (-0.0) - _2143;
        float _2145 = _2131 * _261;
        float _2147 = (cbSceneParam._m0[77u].w * _2144) / _2130;
        float _2148 = _2147 + cbSceneParam._m0[79u].w;
        float _2149 = cbSceneParam._m0[79u].w - _2143;
        float _2155 = sqrt(((_2142 * _2142) + (_2143 * _2143)) + (_2145 * _2145));
        float _2158 = (1.0 - (cbSceneParam._m0[77u].w / _2130)) * _2155;
        float _2164 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2166 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2375;
        if (abs((_2144 - _2147) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2375 = ((((_2148 > 0.0) ? exp2(_2164 * _2148) : (2.0 - exp2(_2166 * _2148))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2158;
        }
        else
        {
            float _2310 = 1.0 / cbSceneParam._m0[80u].x;
            float _2311 = isnan(_2149) ? _2148 : (isnan(_2148) ? _2149 : max(_2148, _2149));
            float _2312 = isnan(_2149) ? _2148 : (isnan(_2148) ? _2149 : min(_2148, _2149));
            float _2321 = isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : min(_2311, 0.0));
            float _2322 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : min(_2312, 0.0));
            _2375 = ((abs(_2155 / _2144) * cbSceneParam._m0[80u].y) * ((((_2321 - _2322) * 2.0) - ((exp2(_2164 * (isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0)))) - exp2(_2164 * (isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0))))) * _2310)) - ((exp2(_2166 * _2321) - exp2(_2166 * _2322)) * _2310))) + (_2158 * cbSceneParam._m0[80u].z);
        }
        vec4 _2377 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2068, _2069, 1.0), 0.0);
        float _2386 = exp2((_2375 * (-1.44269502162933349609375)) * (1.0 - _2377.w));
        float _2387 = log2(_2386);
        float _2403 = log2(_2088);
        _2168 = (exp2(_2403 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2387 * cbSceneParam._m0[78u].x)) * _2377.x) / cbSceneParam._m0[78u].x)) + _2085;
        _2170 = (exp2(_2403 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2387 * cbSceneParam._m0[78u].y)) * _2377.y) / cbSceneParam._m0[78u].y)) + _2086;
        _2172 = (exp2(_2403 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2387 * cbSceneParam._m0[78u].z)) * _2377.z) / cbSceneParam._m0[78u].z)) + _2087;
        _2174 = _2386 * _2088;
    }
    else
    {
        _2168 = _2085;
        _2170 = _2086;
        _2172 = _2087;
        _2174 = _2088;
    }
    float _2186 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2187 = _2186 == 3.0;
    float _2188 = log2(_2174);
    float _2195 = exp2(_2188 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0)));
    float _2196 = exp2(_2188 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0)));
    float _2197 = exp2(_2188 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0)));
    float _2206 = (_2186 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2206 * (_2187 ? _2195 : (_2195 + (cbSceneParam._m0[72u].w * _2168)));
    SV_Target.y = _2206 * (_2187 ? _2196 : (_2196 + (cbSceneParam._m0[72u].w * _2170)));
    SV_Target.z = _2206 * (_2187 ? _2197 : (_2197 + (cbSceneParam._m0[72u].w * _2172)));
    SV_Target.w = cbInstanceData._m0[_2060].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2060].w;
}


