#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _139 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _140 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _141 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _146 = inversesqrt(dot(vec3(_139, _140, _141), vec3(_139, _140, _141)));
    float _153 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _160 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _208 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _218 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _208);
    float _219 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _208);
    float _220 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _208);
    float _246 = cbMtdParam._m0[22u].y + _218;
    float _247 = cbMtdParam._m0[22u].z + _219;
    float _248 = cbMtdParam._m0[22u].w + _220;
    float _262 = (-0.0) - dot(vec3(_246, _247, _248), vec3(_146 * _139, _146 * _140, _146 * _141));
    float _263 = (-0.0) - dot(vec3(_246, _247, _248), vec3(_160 * TANGENT.x, _160 * TANGENT.y, _160 * TANGENT.z));
    float _264 = (-0.0) - dot(vec3(_246, _247, _248), vec3((-0.0) - (_153 * NORMAL.x), (-0.0) - (_153 * NORMAL.y), (-0.0) - (_153 * NORMAL.z)));
    float _268 = inversesqrt(dot(vec3(_262, _263, _264), vec3(_262, _263, _264)));
    float _269 = _268 * _264;
    float _271 = (cbMtdParam._m0[19u].x * _262) * _268;
    float _273 = (cbMtdParam._m0[18u].w * _263) * _268;
    float _274 = fract(TEXCOORD.x);
    float _275 = fract(TEXCOORD.y);
    float _281;
    if (_271 > 0.0)
    {
        _281 = (1.0 - _274) / _271;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_271 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _274) / _271;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _281 = frontier_phi_3_2_ladder;
    }
    float _289;
    if (_273 > 0.0)
    {
        _289 = (1.0 - _275) / _273;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_273 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _275) / _273;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _289 = frontier_phi_7_6_ladder;
    }
    bool _291 = _269 > 0.0;
    float _293 = _291 ? (cbMtdParam._m0[15u].x / _269) : 5000.0;
    float _294 = isnan(_289) ? _281 : (isnan(_281) ? _289 : min(_281, _289));
    float _295 = isnan(_293) ? _294 : (isnan(_294) ? _293 : min(_294, _293));
    float _299 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _300 = _274 + (-0.5);
    float _303 = _275 + (-0.5);
    float _306 = ((_295 * _269) + _299) / _299;
    vec4 _332 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_300 + (_295 * _271)) / _306) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_303 + (_295 * _273)) / _306) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _343 = cbMtdParam._m0[9u].x * _332.x;
    float _344 = cbMtdParam._m0[9u].y * _332.y;
    float _345 = cbMtdParam._m0[9u].z * _332.z;
    float _367 = (cbMtdParam._m0[21u].x * _262) * _268;
    float _369 = (cbMtdParam._m0[20u].w * _263) * _268;
    bool _370 = _367 > 0.0;
    float _375;
    if (_370)
    {
        _375 = (1.0 - _274) / _367;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_367 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _274) / _367;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _375 = frontier_phi_11_10_ladder;
    }
    bool _377 = _369 > 0.0;
    float _382;
    if (_377)
    {
        _382 = (1.0 - _275) / _369;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_369 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _275) / _369;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _382 = frontier_phi_15_14_ladder;
    }
    float _385 = _291 ? (cbMtdParam._m0[16u].z / _269) : 5000.0;
    float _386 = isnan(_382) ? _375 : (isnan(_375) ? _382 : min(_375, _382));
    float _387 = isnan(_385) ? _386 : (isnan(_386) ? _385 : min(_386, _385));
    float _391 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _395 = ((_387 * _269) + _391) / _391;
    float _400 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _402 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _418 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_300 + (_387 * _367)) / _395) + 0.5) + _400) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_303 + (_387 * _369)) / _395) + 0.5) + _402) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _430;
    if (_370)
    {
        _430 = (1.0 - _274) / _367;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_367 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _274) / _367;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _430 = frontier_phi_19_18_ladder;
    }
    float _436;
    if (_377)
    {
        _436 = (1.0 - _275) / _369;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_369 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _275) / _369;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _436 = frontier_phi_23_22_ladder;
    }
    float _438 = isnan(_436) ? _430 : (isnan(_430) ? _436 : min(_430, _436));
    float _439 = isnan(_385) ? _438 : (isnan(_438) ? _385 : min(_438, _385));
    float _446 = ((_439 * _269) + _391) / _391;
    vec4 _460 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_300 + (_439 * _367)) / _446) + 0.5) + _400) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_303 + (_439 * _369)) / _446) + 0.5) + _402) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _462 = _460.w;
    float _469 = (_462 * ((_418.x * cbMtdParam._m0[10u].x) - _343)) + _343;
    float _470 = (_462 * ((_418.y * cbMtdParam._m0[10u].y) - _344)) + _344;
    float _471 = (_462 * ((_418.z * cbMtdParam._m0[10u].z) - _345)) + _345;
    uint _473 = uint(roundEven(NORMAL.w));
    vec4 _478 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _480 = _478.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _531 = sqrt(((_218 * _218) + (_219 * _219)) + (_220 * _220));
        float _538 = (cbMatDynParam._m0[5u].x * _531) + cbMatDynParam._m0[5u].y;
        float _708 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
        float _539 = isnan(1.0) ? _708 : (isnan(_708) ? 1.0 : min(_708, 1.0));
        float _543 = (cbMatDynParam._m0[5u].z * _531) + cbMatDynParam._m0[5u].w;
        float _719 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _719 : (isnan(_719) ? 1.0 : min(_719, 1.0))) - _539)) + _539) < ((_480 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _571;
    uint _493;
    vec4 _498;
    float _502;
    float _503;
    float _504;
    float _508;
    vec4 _511;
    float _513;
    float _514;
    bool _525;
    for (;;)
    {
        _493 = _473 * 13u;
        _498 = cbInstanceData._m0[(_493 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _502 = _498.x * _469;
        _503 = _498.y * _470;
        _504 = _498.z * _471;
        _508 = cbInstanceData._m0[_493 + 6u].w;
        float _509 = _480 + (-0.5);
        _511 = cbMtdParam._m0[1u];
        _513 = _511.y * _509;
        _514 = _509 * 0.999000012874603271484375;
        _525 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_525)
        {
            if ((cbInstanceData._m0[_493 + 7u].x + _514) < 0.5)
            {
                _571 = true;
                break;
            }
        }
        if ((_498.w < 1.0) && ((_498.w + _514) < 0.5))
        {
            _571 = true;
            break;
        }
        if ((_513 + 1.0) < _511.x)
        {
            _571 = true;
            break;
        }
        _571 = false;
        break;
    }
    if (_571)
    {
        discard_state = true;
    }
    bool _594 = cbMtdParam._m0[1u].z != 0.0;
    float _595 = _594 ? _508 : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _595;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _594 ? _508 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _594 ? _508 : (float(floatBitsToUint(cbInstanceData._m0[_493 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _595;
    SV_Target_4.x = _502 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _503 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _504 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _595;
    discard_exit();
}


