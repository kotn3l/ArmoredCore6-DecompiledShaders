#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M0_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1005;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _199 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _257 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _247);
    float _258 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _247);
    float _259 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _247);
    float _285 = cbMtdParam._m0[22u].y + _257;
    float _286 = cbMtdParam._m0[22u].z + _258;
    float _287 = cbMtdParam._m0[22u].w + _259;
    float _301 = (-0.0) - dot(vec3(_285, _286, _287), vec3(_185 * _178, _185 * _179, _185 * _180));
    float _302 = (-0.0) - dot(vec3(_285, _286, _287), vec3(_199 * TANGENT.x, _199 * TANGENT.y, _199 * TANGENT.z));
    float _303 = (-0.0) - dot(vec3(_285, _286, _287), vec3((-0.0) - (_192 * NORMAL.x), (-0.0) - (_192 * NORMAL.y), (-0.0) - (_192 * NORMAL.z)));
    float _307 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _308 = _307 * _303;
    float _310 = (cbMtdParam._m0[19u].x * _301) * _307;
    float _312 = (cbMtdParam._m0[18u].w * _302) * _307;
    float _313 = fract(TEXCOORD.x);
    float _314 = fract(TEXCOORD.y);
    float _320;
    if (_310 > 0.0)
    {
        _320 = (1.0 - _313) / _310;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_310 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _313) / _310;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _320 = frontier_phi_3_2_ladder;
    }
    float _328;
    if (_312 > 0.0)
    {
        _328 = (1.0 - _314) / _312;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_312 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _314) / _312;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _328 = frontier_phi_7_6_ladder;
    }
    bool _330 = _308 > 0.0;
    float _332 = _330 ? (cbMtdParam._m0[15u].x / _308) : 5000.0;
    float _333 = isnan(_328) ? _320 : (isnan(_320) ? _328 : min(_320, _328));
    float _334 = isnan(_332) ? _333 : (isnan(_333) ? _332 : min(_333, _332));
    float _338 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _339 = _313 + (-0.5);
    float _342 = _314 + (-0.5);
    float _345 = ((_334 * _308) + _338) / _338;
    vec4 _371 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_339 + (_334 * _310)) / _345) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_342 + (_334 * _312)) / _345) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _382 = cbMtdParam._m0[9u].x * _371.x;
    float _383 = cbMtdParam._m0[9u].y * _371.y;
    float _384 = cbMtdParam._m0[9u].z * _371.z;
    float _406 = (cbMtdParam._m0[21u].x * _301) * _307;
    float _408 = (cbMtdParam._m0[20u].w * _302) * _307;
    bool _409 = _406 > 0.0;
    float _414;
    if (_409)
    {
        _414 = (1.0 - _313) / _406;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _313) / _406;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _414 = frontier_phi_11_10_ladder;
    }
    bool _416 = _408 > 0.0;
    float _421;
    if (_416)
    {
        _421 = (1.0 - _314) / _408;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _314) / _408;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _421 = frontier_phi_15_14_ladder;
    }
    float _424 = _330 ? (cbMtdParam._m0[16u].z / _308) : 5000.0;
    float _425 = isnan(_421) ? _414 : (isnan(_414) ? _421 : min(_414, _421));
    float _426 = isnan(_424) ? _425 : (isnan(_425) ? _424 : min(_425, _424));
    float _430 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _434 = ((_426 * _308) + _430) / _430;
    float _439 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _441 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _457 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_339 + (_426 * _406)) / _434) + 0.5) + _439) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_342 + (_426 * _408)) / _434) + 0.5) + _441) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _469;
    if (_409)
    {
        _469 = (1.0 - _313) / _406;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _313) / _406;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _469 = frontier_phi_19_18_ladder;
    }
    float _475;
    if (_416)
    {
        _475 = (1.0 - _314) / _408;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _314) / _408;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _475 = frontier_phi_23_22_ladder;
    }
    float _477 = isnan(_475) ? _469 : (isnan(_469) ? _475 : min(_469, _475));
    float _478 = isnan(_424) ? _477 : (isnan(_477) ? _424 : min(_477, _424));
    float _485 = ((_478 * _308) + _430) / _430;
    vec4 _499 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_339 + (_478 * _406)) / _485) + 0.5) + _439) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_342 + (_478 * _408)) / _485) + 0.5) + _441) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _501 = _499.w;
    float _508 = (_501 * ((_457.x * cbMtdParam._m0[10u].x) - _382)) + _382;
    float _509 = (_501 * ((_457.y * cbMtdParam._m0[10u].y) - _383)) + _383;
    float _510 = (_501 * ((_457.z * cbMtdParam._m0[10u].z) - _384)) + _384;
    float _525 = (cbMtdParam._m0[21u].z * _301) * _307;
    float _527 = (cbMtdParam._m0[21u].y * _302) * _307;
    bool _528 = _525 > 0.0;
    float _533;
    if (_528)
    {
        _533 = (1.0 - _313) / _525;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_525 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _313) / _525;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _533 = frontier_phi_27_26_ladder;
    }
    bool _535 = _527 > 0.0;
    float _540;
    if (_535)
    {
        _540 = (1.0 - _314) / _527;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_527 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _314) / _527;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _540 = frontier_phi_31_30_ladder;
    }
    float _543 = _330 ? (cbMtdParam._m0[18u].x / _308) : 5000.0;
    float _544 = isnan(_540) ? _533 : (isnan(_533) ? _540 : min(_533, _540));
    float _545 = isnan(_543) ? _544 : (isnan(_544) ? _543 : min(_544, _543));
    float _549 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _553 = ((_545 * _308) + _549) / _549;
    float _558 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _560 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _577 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_339 + (_545 * _525)) / _553) + 0.5) + _558) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_342 + (_545 * _527)) / _553) + 0.5) + _560) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _589;
    if (_528)
    {
        _589 = (1.0 - _313) / _525;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_525 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _313) / _525;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _589 = frontier_phi_35_34_ladder;
    }
    float _595;
    if (_535)
    {
        _595 = (1.0 - _314) / _527;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_527 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _314) / _527;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _595 = frontier_phi_39_38_ladder;
    }
    float _597 = isnan(_595) ? _589 : (isnan(_589) ? _595 : min(_589, _595));
    float _598 = isnan(_543) ? _597 : (isnan(_597) ? _543 : min(_597, _543));
    float _605 = ((_598 * _308) + _549) / _549;
    vec4 _619 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_339 + (_598 * _525)) / _605) + 0.5) + _558) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_342 + (_598 * _527)) / _605) + 0.5) + _560) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _621 = _619.w;
    float _628 = (_621 * ((_577.x * cbMtdParam._m0[14u].x) - _508)) + _508;
    float _629 = (_621 * ((_577.y * cbMtdParam._m0[14u].y) - _509)) + _509;
    float _630 = (_621 * ((_577.z * cbMtdParam._m0[14u].z) - _510)) + _510;
    float _3264 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _3275 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _3286 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _649 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _653 = inversesqrt(dot(vec3(_257, _258, _259), vec3(_257, _258, _259)));
    float _654 = _257 * _653;
    float _655 = _258 * _653;
    float _656 = _259 * _653;
    float _662 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _663 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _676 = uint(roundEven(NORMAL.w)) * 13u;
    uint _679 = (_676 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _685 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3264 : (isnan(_3264) ? 1.0 : min(_3264, 1.0)))) * cbInstanceData._m0[_679].x;
    float _686 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3275 : (isnan(_3275) ? 1.0 : min(_3275, 1.0)))) * cbInstanceData._m0[_679].y;
    float _687 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3286 : (isnan(_3286) ? 1.0 : min(_3286, 1.0)))) * cbInstanceData._m0[_679].z;
    float _3297 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _688 = isnan(1.0) ? _3297 : (isnan(_3297) ? 1.0 : min(_3297, 1.0));
    float _3308 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _689 = isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0));
    float _3319 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _690 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
    vec4 _699 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _662, cbSceneParam._m0[86u].y * _663));
    float _702 = _699.x * TEXCOORD.z;
    float _703 = (-0.0) - _654;
    float _704 = (-0.0) - _655;
    float _705 = (-0.0) - _656;
    float _727 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _731 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _735 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1004;
    float _1006;
    float _1007;
    float _1008;
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _791 = (cbModelParam._m0[37u].x * ((((fma(_735, cbModelParam._m0[26u].z, fma(_731, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _727)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _793 = (cbModelParam._m0[37u].y * ((((fma(_735, cbModelParam._m0[27u].z, fma(_731, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _727)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _794 = (((((fma(_735, cbModelParam._m0[28u].z, fma(_731, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _727)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _797 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_791, _793, _794), 0.0);
        vec4 _804 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_791, _793, _794), 0.0);
        vec4 _811 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_791, _793, _794), 0.0);
        vec4 _818 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_791, _793, _794), 0.0);
        float _831 = exp2((_797.w + (-0.5)) * 20.0) * 2.0;
        float _833 = _831 * (_797.x + (-0.5));
        float _834 = _831 * (_797.y + (-0.5));
        float _835 = _831 * (_797.z + (-0.5));
        float _842 = exp2((_804.w + (-0.5)) * 20.0) * 2.0;
        float _843 = _842 * (_804.x + (-0.5));
        float _844 = _842 * (_804.y + (-0.5));
        float _845 = _842 * (_804.z + (-0.5));
        float _852 = exp2((_811.w + (-0.5)) * 20.0) * 2.0;
        float _853 = _852 * (_811.x + (-0.5));
        float _854 = _852 * (_811.y + (-0.5));
        float _855 = _852 * (_811.z + (-0.5));
        float _862 = exp2((_818.w + (-0.5)) * 20.0) * 2.0;
        float _863 = _862 * (_818.x + (-0.5));
        float _864 = _862 * (_818.y + (-0.5));
        float _865 = _862 * (_818.z + (-0.5));
        float _866 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
        float _867 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
        float _868 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
        float _869 = _833 * 0.5;
        float _870 = _843 * 0.5;
        float _871 = _853 * 0.5;
        float _872 = dot(vec3(_869, _870, _871), vec3(_869, _870, _871));
        float _877 = (_872 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_872);
        float _886 = (dot(vec3(0.0), vec3(_877 * _869, _877 * _870, _877 * _871)) + 1.0) * 0.5;
        float _3345 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _896 = sqrt(((_870 * _870) + (_869 * _869)) + (_871 * _871)) / (_866 + 9.9999997473787516355514526367188e-06);
        float _3356 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        float _897 = isnan(1.0) ? _3356 : (isnan(_3356) ? 1.0 : min(_3356, 1.0));
        float _898 = _897 * 2.0;
        float _902 = (1.0 - _897) / (_897 + 1.0);
        float _3367 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
        float _903 = isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0));
        float _912 = ((((1.0 - _903) * (_898 + 2.0)) * exp2(log2(isnan(1.0) ? _3345 : (isnan(_3345) ? 1.0 : min(_3345, 1.0))) * (_898 + 1.0))) + _903) * _866;
        float _913 = _834 * 0.5;
        float _914 = _844 * 0.5;
        float _915 = _854 * 0.5;
        float _916 = dot(vec3(_913, _914, _915), vec3(_913, _914, _915));
        float _921 = (_916 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_916);
        float _929 = (dot(vec3(0.0), vec3(_921 * _913, _921 * _914, _921 * _915)) + 1.0) * 0.5;
        float _3378 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _938 = sqrt(((_914 * _914) + (_913 * _913)) + (_915 * _915)) / (_867 + 9.9999997473787516355514526367188e-06);
        float _3389 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        float _939 = isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0));
        float _940 = _939 * 2.0;
        float _944 = (1.0 - _939) / (_939 + 1.0);
        float _3400 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        float _945 = isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0));
        float _954 = ((((1.0 - _945) * (_940 + 2.0)) * exp2(log2(isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0))) * (_940 + 1.0))) + _945) * _867;
        float _955 = _835 * 0.5;
        float _956 = _845 * 0.5;
        float _957 = _855 * 0.5;
        float _958 = dot(vec3(_955, _956, _957), vec3(_955, _956, _957));
        float _963 = (_958 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_958);
        float _971 = (dot(vec3(0.0), vec3(_963 * _955, _963 * _956, _963 * _957)) + 1.0) * 0.5;
        float _3411 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _980 = sqrt(((_956 * _956) + (_955 * _955)) + (_957 * _957)) / (_868 + 9.9999997473787516355514526367188e-06);
        float _3422 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _981 = isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0));
        float _982 = _981 * 2.0;
        float _986 = (1.0 - _981) / (_981 + 1.0);
        float _3433 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _987 = isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0));
        float _996 = ((((1.0 - _987) * (_982 + 2.0)) * exp2(log2(isnan(1.0) ? _3411 : (isnan(_3411) ? 1.0 : min(_3411, 1.0))) * (_982 + 1.0))) + _987) * _868;
        _1004 = _835;
        _1006 = _834;
        _1007 = _833;
        _1008 = _845;
        _1009 = _844;
        _1010 = _843;
        _1011 = _855;
        _1012 = _854;
        _1013 = _853;
        _1014 = _868;
        _1015 = _867;
        _1016 = _866;
        _1017 = cbModelParam._m0[36u].z * (isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0)));
        _1018 = cbModelParam._m0[36u].z * (isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0)));
        _1019 = cbModelParam._m0[36u].z * (isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0)));
    }
    else
    {
        _1004 = _1005;
        _1006 = _1005;
        _1007 = _1005;
        _1008 = _1005;
        _1009 = _1005;
        _1010 = _1005;
        _1011 = _1005;
        _1012 = _1005;
        _1013 = _1005;
        _1014 = _1005;
        _1015 = _1005;
        _1016 = _1005;
        _1017 = 0.0;
        _1018 = 0.0;
        _1019 = 0.0;
    }
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1073 = (cbModelParam._m0[38u].x * ((((fma(_735, cbModelParam._m0[30u].z, fma(_731, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _727)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1074 = (cbModelParam._m0[38u].y * ((((fma(_735, cbModelParam._m0[31u].z, fma(_731, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _727)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1075 = (((((fma(_735, cbModelParam._m0[32u].z, fma(_731, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _727)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1077 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1084 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1091 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1098 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        float _1110 = exp2((_1077.w + (-0.5)) * 20.0) * 2.0;
        float _1111 = _1110 * (_1077.x + (-0.5));
        float _1112 = _1110 * (_1077.y + (-0.5));
        float _1113 = _1110 * (_1077.z + (-0.5));
        float _1120 = exp2((_1084.w + (-0.5)) * 20.0) * 2.0;
        float _1121 = _1120 * (_1084.x + (-0.5));
        float _1122 = _1120 * (_1084.y + (-0.5));
        float _1123 = _1120 * (_1084.z + (-0.5));
        float _1130 = exp2((_1091.w + (-0.5)) * 20.0) * 2.0;
        float _1131 = _1130 * (_1091.x + (-0.5));
        float _1132 = _1130 * (_1091.y + (-0.5));
        float _1133 = _1130 * (_1091.z + (-0.5));
        float _1140 = exp2((_1098.w + (-0.5)) * 20.0) * 2.0;
        float _1141 = _1140 * (_1098.x + (-0.5));
        float _1142 = _1140 * (_1098.y + (-0.5));
        float _1143 = _1140 * (_1098.z + (-0.5));
        float _1144 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1145 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1146 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1147 = _1111 * 0.5;
        float _1148 = _1121 * 0.5;
        float _1149 = _1131 * 0.5;
        float _1150 = dot(vec3(_1147, _1148, _1149), vec3(_1147, _1148, _1149));
        float _1155 = (_1150 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1150);
        float _1163 = (dot(vec3(0.0), vec3(_1155 * _1147, _1155 * _1148, _1155 * _1149)) + 1.0) * 0.5;
        float _3474 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1172 = sqrt(((_1148 * _1148) + (_1147 * _1147)) + (_1149 * _1149)) / (_1144 + 9.9999997473787516355514526367188e-06);
        float _3485 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3485 : (isnan(_3485) ? 1.0 : min(_3485, 1.0));
        float _1174 = _1173 * 2.0;
        float _1178 = (1.0 - _1173) / (_1173 + 1.0);
        float _3496 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1179 = isnan(1.0) ? _3496 : (isnan(_3496) ? 1.0 : min(_3496, 1.0));
        float _1188 = ((((1.0 - _1179) * (_1174 + 2.0)) * exp2(log2(isnan(1.0) ? _3474 : (isnan(_3474) ? 1.0 : min(_3474, 1.0))) * (_1174 + 1.0))) + _1179) * _1144;
        float _1189 = _1112 * 0.5;
        float _1190 = _1122 * 0.5;
        float _1191 = _1132 * 0.5;
        float _1192 = dot(vec3(_1189, _1190, _1191), vec3(_1189, _1190, _1191));
        float _1197 = (_1192 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1192);
        float _1205 = (dot(vec3(0.0), vec3(_1197 * _1189, _1197 * _1190, _1197 * _1191)) + 1.0) * 0.5;
        float _3507 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1214 = sqrt(((_1190 * _1190) + (_1189 * _1189)) + (_1191 * _1191)) / (_1145 + 9.9999997473787516355514526367188e-06);
        float _3518 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0));
        float _1216 = _1215 * 2.0;
        float _1220 = (1.0 - _1215) / (_1215 + 1.0);
        float _3529 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _3529 : (isnan(_3529) ? 1.0 : min(_3529, 1.0));
        float _1230 = ((((1.0 - _1221) * (_1216 + 2.0)) * exp2(log2(isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0))) * (_1216 + 1.0))) + _1221) * _1145;
        float _1231 = _1113 * 0.5;
        float _1232 = _1123 * 0.5;
        float _1233 = _1133 * 0.5;
        float _1234 = dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233));
        float _1239 = (_1234 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1234);
        float _1247 = (dot(vec3(0.0), vec3(_1239 * _1231, _1239 * _1232, _1239 * _1233)) + 1.0) * 0.5;
        float _3540 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1256 = sqrt(((_1232 * _1232) + (_1231 * _1231)) + (_1233 * _1233)) / (_1146 + 9.9999997473787516355514526367188e-06);
        float _3551 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _3551 : (isnan(_3551) ? 1.0 : min(_3551, 1.0));
        float _1258 = _1257 * 2.0;
        float _1262 = (1.0 - _1257) / (_1257 + 1.0);
        float _3562 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1263 = isnan(1.0) ? _3562 : (isnan(_3562) ? 1.0 : min(_3562, 1.0));
        float _1272 = ((((1.0 - _1263) * (_1258 + 2.0)) * exp2(log2(isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0))) * (_1258 + 1.0))) + _1263) * _1146;
        _1280 = _1113;
        _1281 = _1112;
        _1282 = _1111;
        _1283 = _1123;
        _1284 = _1122;
        _1285 = _1121;
        _1286 = _1133;
        _1287 = _1132;
        _1288 = _1131;
        _1289 = _1146;
        _1290 = _1145;
        _1291 = _1144;
        _1292 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0)));
        _1293 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0)));
        _1294 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0)));
    }
    else
    {
        _1280 = _1005;
        _1281 = _1005;
        _1282 = _1005;
        _1283 = _1005;
        _1284 = _1005;
        _1285 = _1005;
        _1286 = _1005;
        _1287 = _1005;
        _1288 = _1005;
        _1289 = _1005;
        _1290 = _1005;
        _1291 = _1005;
        _1292 = 0.0;
        _1293 = 0.0;
        _1294 = 0.0;
    }
    float _1304 = (cbModelParam._m0[1u].x * (_1292 - _1017)) + _1017;
    float _1305 = (cbModelParam._m0[1u].x * (_1293 - _1018)) + _1018;
    float _1306 = (cbModelParam._m0[1u].x * (_1294 - _1019)) + _1019;
    float _1327 = fma(_1306, cbSceneParam._m0[89u].z, fma(_1305, cbSceneParam._m0[89u].y, _1304 * cbSceneParam._m0[89u].x));
    float _1330 = fma(_1306, cbSceneParam._m0[90u].z, fma(_1305, cbSceneParam._m0[90u].y, _1304 * cbSceneParam._m0[90u].x));
    float _1333 = fma(_1306, cbSceneParam._m0[91u].z, fma(_1305, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1304));
    float _1348 = _654 * (-0.5);
    float _1349 = _655 * (-0.5);
    float _1350 = _656 * (-0.5);
    float _1351 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1282, _1285, _1288, _1291));
    float _1354 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1281, _1284, _1287, _1290));
    float _1357 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1280, _1283, _1286, _1289));
    float _1391;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1364 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1004, _1008, _1011, _1014));
        float _1368 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1006, _1009, _1012, _1015));
        float _1372 = dot(vec4(_1348, _1349, _1350, 1.0), vec4(_1007, _1010, _1013, _1016));
        float _1379 = dot(vec4(cbModelParam._m0[39u]), vec4(_1348, _1349, _1350, 1.0));
        _1391 = dot(vec3(isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)), isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0)), isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1379) ? 0.0 : (isnan(0.0) ? _1379 : max(0.0, _1379))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1391 = 1.0;
    }
    float _1402;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1393 = dot(vec4(cbModelParam._m0[40u]), vec4(_1348, _1349, _1350, 1.0));
        _1402 = dot(vec3(isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0)), isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0)), isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1393) ? 0.0 : (isnan(0.0) ? _1393 : max(0.0, _1393))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1402 = 1.0;
    }
    float _1406 = (_1402 * cbModelParam._m0[1u].x) + (_1391 * (1.0 - cbModelParam._m0[1u].x));
    float _1415 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1495;
    float _1497;
    float _1499;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1462 = fma(_735, cbModelParam._m0[13u].z, fma(_731, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _727)) + cbModelParam._m0[13u].w;
        float _1466 = fma(_735, cbModelParam._m0[14u].z, fma(_731, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _727)) + cbModelParam._m0[14u].w;
        float _1470 = fma(_735, cbModelParam._m0[15u].z, fma(_731, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _727)) + cbModelParam._m0[15u].w;
        float _1473 = fma(_705, cbModelParam._m0[13u].z, fma(_704, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _703));
        float _1476 = fma(_705, cbModelParam._m0[14u].z, fma(_704, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _703));
        float _1479 = fma(_705, cbModelParam._m0[15u].z, fma(_704, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _703));
        float _1505;
        if (_1473 > 0.0)
        {
            _1505 = abs((1.0 - _1462) / _1473);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1473 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1462 + 1.0) / _1473);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _1505 = frontier_phi_54_52_ladder;
        }
        float _1675;
        if (_1476 > 0.0)
        {
            _1675 = abs((1.0 - _1466) / _1476);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1476 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1466 + 1.0) / _1476);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _1675 = frontier_phi_63_59_ladder;
        }
        float _2071;
        if (_1479 > 0.0)
        {
            _2071 = abs((1.0 - _1470) / _1479);
        }
        else
        {
            float frontier_phi_75_70_ladder;
            if (_1479 < 0.0)
            {
                frontier_phi_75_70_ladder = abs((_1470 + 1.0) / _1479);
            }
            else
            {
                frontier_phi_75_70_ladder = 5000.0;
            }
            _2071 = frontier_phi_75_70_ladder;
        }
        float _2073 = isnan(_1675) ? _1505 : (isnan(_1505) ? _1675 : min(_1505, _1675));
        float _2074 = isnan(_2071) ? _2073 : (isnan(_2073) ? _2071 : min(_2073, _2071));
        float _2078 = (_2074 * _1473) + _1462;
        float _2079 = (_2074 * _1476) + _1466;
        float _2080 = (_2074 * _1479) + _1470;
        float _2081 = _2074 * 9.9999997473787516355514526367188e-05;
        float _2083 = (-1.0) - _2081;
        float _2085 = _2081 + 1.0;
        float frontier_phi_53_75_ladder;
        float frontier_phi_53_75_ladder_1;
        float frontier_phi_53_75_ladder_2;
        if ((_2080 > _2085) || ((_2080 < _2083) || ((_2079 > _2085) || ((_2079 < _2083) || ((_2078 < _2083) || (_2078 > _2085))))))
        {
            frontier_phi_53_75_ladder = 0.0;
            frontier_phi_53_75_ladder_1 = 0.0;
            frontier_phi_53_75_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2315 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2080, cbModelParam._m0[9u].z, fma(_2079, cbModelParam._m0[9u].y, _2078 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2080, cbModelParam._m0[10u].z, fma(_2079, cbModelParam._m0[10u].y, _2078 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2080, cbModelParam._m0[11u].z, fma(_2079, cbModelParam._m0[11u].y, _2078 * cbModelParam._m0[11u].x))), _1415);
            frontier_phi_53_75_ladder = _2315.z * cbModelParam._m0[1u].y;
            frontier_phi_53_75_ladder_1 = _2315.y * cbModelParam._m0[1u].y;
            frontier_phi_53_75_ladder_2 = _2315.x * cbModelParam._m0[1u].y;
        }
        _1495 = frontier_phi_53_75_ladder_2;
        _1497 = frontier_phi_53_75_ladder_1;
        _1499 = frontier_phi_53_75_ladder;
    }
    else
    {
        vec4 _1483 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_703, _704, _705), _1415);
        _1495 = _1483.x * cbModelParam._m0[1u].y;
        _1497 = _1483.y * cbModelParam._m0[1u].y;
        _1499 = _1483.z * cbModelParam._m0[1u].y;
    }
    float _1502 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1590;
    float _1592;
    float _1594;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1554 = fma(_735, cbModelParam._m0[21u].z, fma(_731, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _727)) + cbModelParam._m0[21u].w;
        float _1558 = fma(_735, cbModelParam._m0[22u].z, fma(_731, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _727)) + cbModelParam._m0[22u].w;
        float _1562 = fma(_735, cbModelParam._m0[23u].z, fma(_731, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _727)) + cbModelParam._m0[23u].w;
        float _1565 = fma(_705, cbModelParam._m0[21u].z, fma(_704, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _703));
        float _1568 = fma(_705, cbModelParam._m0[22u].z, fma(_704, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _703));
        float _1571 = fma(_705, cbModelParam._m0[23u].z, fma(_704, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _703));
        float _1680;
        if (_1565 > 0.0)
        {
            _1680 = abs((1.0 - _1554) / _1565);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_1565 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_1554 + 1.0) / _1565);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _1680 = frontier_phi_65_61_ladder;
        }
        float _2098;
        if (_1568 > 0.0)
        {
            _2098 = abs((1.0 - _1558) / _1568);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_1568 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_1558 + 1.0) / _1568);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _2098 = frontier_phi_77_72_ladder;
        }
        float _2437;
        if (_1571 > 0.0)
        {
            _2437 = abs((1.0 - _1562) / _1571);
        }
        else
        {
            float frontier_phi_89_84_ladder;
            if (_1571 < 0.0)
            {
                frontier_phi_89_84_ladder = abs((_1562 + 1.0) / _1571);
            }
            else
            {
                frontier_phi_89_84_ladder = 5000.0;
            }
            _2437 = frontier_phi_89_84_ladder;
        }
        float _2439 = isnan(_2098) ? _1680 : (isnan(_1680) ? _2098 : min(_1680, _2098));
        float _2440 = isnan(_2437) ? _2439 : (isnan(_2439) ? _2437 : min(_2439, _2437));
        float _2444 = (_2440 * _1565) + _1554;
        float _2445 = (_2440 * _1568) + _1558;
        float _2446 = (_2440 * _1571) + _1562;
        float _2447 = _2440 * 9.9999997473787516355514526367188e-05;
        float _2448 = (-1.0) - _2447;
        float _2450 = _2447 + 1.0;
        float frontier_phi_62_89_ladder;
        float frontier_phi_62_89_ladder_1;
        float frontier_phi_62_89_ladder_2;
        if ((_2446 > _2450) || ((_2446 < _2448) || ((_2445 > _2450) || ((_2445 < _2448) || ((_2444 < _2448) || (_2444 > _2450))))))
        {
            frontier_phi_62_89_ladder = 0.0;
            frontier_phi_62_89_ladder_1 = 0.0;
            frontier_phi_62_89_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2564 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2446, cbModelParam._m0[17u].z, fma(_2445, cbModelParam._m0[17u].y, _2444 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2446, cbModelParam._m0[18u].z, fma(_2445, cbModelParam._m0[18u].y, _2444 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2446, cbModelParam._m0[19u].z, fma(_2445, cbModelParam._m0[19u].y, _2444 * cbModelParam._m0[19u].x))), _1502);
            frontier_phi_62_89_ladder = _2564.z * cbModelParam._m0[1u].z;
            frontier_phi_62_89_ladder_1 = _2564.y * cbModelParam._m0[1u].z;
            frontier_phi_62_89_ladder_2 = _2564.x * cbModelParam._m0[1u].z;
        }
        _1590 = frontier_phi_62_89_ladder_2;
        _1592 = frontier_phi_62_89_ladder_1;
        _1594 = frontier_phi_62_89_ladder;
    }
    else
    {
        vec4 _1574 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_703, _704, _705), _1502);
        _1590 = _1574.x * cbModelParam._m0[1u].z;
        _1592 = _1574.y * cbModelParam._m0[1u].z;
        _1594 = _1574.z * cbModelParam._m0[1u].z;
    }
    float _1606 = _702 * 0.01200000010430812835693359375;
    float _1608 = _1606 * ((cbModelParam._m0[1u].w * (_1590 - _1495)) + _1495);
    float _1609 = _1606 * ((cbModelParam._m0[1u].w * (_1592 - _1497)) + _1497);
    float _1610 = _1606 * ((cbModelParam._m0[1u].w * (_1594 - _1499)) + _1499);
    float _1613 = fma(_1610, cbSceneParam._m0[89u].z, fma(_1609, cbSceneParam._m0[89u].y, _1608 * cbSceneParam._m0[89u].x));
    float _1616 = fma(_1610, cbSceneParam._m0[90u].z, fma(_1609, cbSceneParam._m0[90u].y, _1608 * cbSceneParam._m0[90u].x));
    float _1619 = fma(_1610, cbSceneParam._m0[91u].z, fma(_1609, cbSceneParam._m0[91u].y, _1608 * cbSceneParam._m0[91u].x));
    float _1654 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1658 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1662 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1666 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1667 = _1654 / _1666;
    float _1668 = _1658 / _1666;
    float _1669 = _1662 / _1666;
    float _1817;
    float _1818;
    float _1819;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1696 = ((uint(_1669 > cbSceneParam._m0[59u].y) + uint(_1669 > cbSceneParam._m0[59u].x)) + uint(_1669 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1697 = _1696 + 43u;
        uint _1705 = _1696 + 44u;
        uint _1713 = _1696 + 45u;
        uint _1721 = _1696 + 46u;
        float _1732 = fma(_1666, cbSceneParam._m0[_1697].w, fma(_1662, cbSceneParam._m0[_1697].z, fma(_1658, cbSceneParam._m0[_1697].y, _1654 * cbSceneParam._m0[_1697].x)));
        float _1736 = fma(_1666, cbSceneParam._m0[_1705].w, fma(_1662, cbSceneParam._m0[_1705].z, fma(_1658, cbSceneParam._m0[_1705].y, _1654 * cbSceneParam._m0[_1705].x)));
        float _1744 = fma(_1666, cbSceneParam._m0[_1721].w, fma(_1662, cbSceneParam._m0[_1721].z, fma(_1658, cbSceneParam._m0[_1721].y, _1654 * cbSceneParam._m0[_1721].x)));
        float _1749 = cbSceneParam._m0[33u].z * _1744;
        float _1751 = cbSceneParam._m0[33u].w * _1744;
        float _1754 = fma(_1666, cbSceneParam._m0[_1713].w, fma(_1662, cbSceneParam._m0[_1713].z, fma(_1658, cbSceneParam._m0[_1713].y, _1654 * cbSceneParam._m0[_1713].x))) / _1744;
        float _1802 = (cbSceneParam._m0[33u].x - sqrt(((_1668 * _1668) + (_1667 * _1667)) + (_1669 * _1669))) * cbSceneParam._m0[33u].y;
        float _3688 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1810 = (isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1749 + _1732) / _1744, (_1751 + _1736) / _1744), _1754), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1751 + _1732) / _1744, (_1736 - _1749) / _1744), _1754), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1732 - _1749) / _1744, (_1736 - _1751) / _1744), _1754), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1732 - _1751) / _1744, (_1749 + _1736) / _1744), _1754), 0.0)).x), vec4(0.25)));
        _1817 = 1.0 - (_1810 * cbSceneParam._m0[34u].x);
        _1818 = 1.0 - (_1810 * cbSceneParam._m0[34u].y);
        _1819 = 1.0 - (_1810 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1817 = 1.0;
        _1818 = 1.0;
        _1819 = 1.0;
    }
    float _1883;
    float _1885;
    float _1887;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1871 = fma(_1666, cbSceneParam._m0[63u].w, fma(_1662, cbSceneParam._m0[63u].z, fma(_1658, cbSceneParam._m0[63u].y, _1654 * cbSceneParam._m0[63u].x)));
        float _1872 = fma(_1666, cbSceneParam._m0[60u].w, fma(_1662, cbSceneParam._m0[60u].z, fma(_1658, cbSceneParam._m0[60u].y, _1654 * cbSceneParam._m0[60u].x))) / _1871;
        float _1873 = fma(_1666, cbSceneParam._m0[61u].w, fma(_1662, cbSceneParam._m0[61u].z, fma(_1658, cbSceneParam._m0[61u].y, _1654 * cbSceneParam._m0[61u].x))) / _1871;
        float frontier_phi_74_73_ladder;
        float frontier_phi_74_73_ladder_1;
        float frontier_phi_74_73_ladder_2;
        if ((((_1872 >= cbSceneParam._m0[64u].x) && (_1873 >= cbSceneParam._m0[64u].y)) && (_1872 <= cbSceneParam._m0[64u].z)) && (_1873 <= cbSceneParam._m0[64u].w))
        {
            float _2111 = fma(_1666, cbSceneParam._m0[62u].w, fma(_1662, cbSceneParam._m0[62u].z, fma(_1658, cbSceneParam._m0[62u].y, _1654 * cbSceneParam._m0[62u].x))) / _1871;
            float _2115 = isnan(cbSceneParam._m0[41u].w) ? _2111 : (isnan(_2111) ? cbSceneParam._m0[41u].w : max(_2111, cbSceneParam._m0[41u].w));
            float _2158 = (cbSceneParam._m0[33u].x - sqrt(((_1668 * _1668) + (_1667 * _1667)) + (_1669 * _1669))) * cbSceneParam._m0[33u].y;
            float _3704 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
            float _2165 = (isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1872, cbSceneParam._m0[33u].w + _1873), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1872, _1873 - cbSceneParam._m0[33u].z), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1872 - cbSceneParam._m0[33u].z, _1873 - cbSceneParam._m0[33u].w), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1872 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1873), _2115), 0.0)).x), vec4(0.25)));
            float _2169 = 1.0 - (_2165 * cbSceneParam._m0[34u].x);
            float _2170 = 1.0 - (_2165 * cbSceneParam._m0[34u].y);
            float _2171 = 1.0 - (_2165 * cbSceneParam._m0[34u].z);
            frontier_phi_74_73_ladder = isnan(_2169) ? _1817 : (isnan(_1817) ? _2169 : min(_1817, _2169));
            frontier_phi_74_73_ladder_1 = isnan(_2170) ? _1818 : (isnan(_1818) ? _2170 : min(_1818, _2170));
            frontier_phi_74_73_ladder_2 = isnan(_2171) ? _1819 : (isnan(_1819) ? _2171 : min(_1819, _2171));
        }
        else
        {
            frontier_phi_74_73_ladder = _1817;
            frontier_phi_74_73_ladder_1 = _1818;
            frontier_phi_74_73_ladder_2 = _1819;
        }
        _1883 = frontier_phi_74_73_ladder;
        _1885 = frontier_phi_74_73_ladder_1;
        _1887 = frontier_phi_74_73_ladder_2;
    }
    else
    {
        _1883 = _1817;
        _1885 = _1818;
        _1887 = _1819;
    }
    uvec4 _1893 = floatBitsToUint(cbInstanceData._m0[_676 + 5u]);
    uint _1895 = _1893.x * 14u;
    uint _1896 = _1895 + 13u;
    float _1901 = _702 + (-1.0);
    float _1905 = (cbLight._m0[_1896].x * _1901) + 1.0;
    float _1906 = (cbLight._m0[_1896].y * _1901) + 1.0;
    uint _1907 = _1895 + 5u;
    float _1913 = isnan(1.0) ? _1906 : (isnan(_1906) ? 1.0 : min(_1906, 1.0));
    uint _1917 = _1895 + 4u;
    float _1926 = isnan(1.0) ? _1905 : (isnan(_1905) ? 1.0 : min(_1905, 1.0));
    uint _1930 = _1895 | 1u;
    float _1941 = dot(vec3(cbLight._m0[_1895].xyz), vec3(0.0));
    float _1944 = dot(vec3(cbLight._m0[_1930].xyz), vec3(0.0));
    float _3740 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
    float _3751 = isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0));
    float _1949 = (isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0))) * 0.3183098733425140380859375;
    float _1951 = (isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0))) * 0.3183098733425140380859375;
    float _1958 = ((cbLight._m0[_1907].x * _1913) * _1951) + (((cbLight._m0[_1917].x * _1883) * _1926) * _1949);
    float _1959 = ((_1913 * cbLight._m0[_1907].y) * _1951) + (((cbLight._m0[_1917].y * _1885) * _1926) * _1949);
    float _1960 = ((_1913 * cbLight._m0[_1907].z) * _1951) + (((cbLight._m0[_1917].z * _1887) * _1926) * _1949);
    uint _1961 = _1895 + 8u;
    float _1967 = cbLight._m0[_1895].x + _654;
    float _1968 = cbLight._m0[_1895].y + _655;
    float _1969 = cbLight._m0[_1895].z + _656;
    float _1973 = inversesqrt(dot(vec3(_1967, _1968, _1969), vec3(_1967, _1968, _1969)));
    float _1977 = dot(vec3(0.0), vec3(cbLight._m0[_1895].xyz));
    float _3762 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
    float _1980 = isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0));
    float _1981 = dot(vec3(0.0), vec3(_654, _655, _656));
    float _3773 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
    float _1984 = isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0));
    float _1985 = dot(vec3(cbLight._m0[_1895].xyz), vec3(_1967 * _1973, _1968 * _1973, _1969 * _1973));
    float _3784 = isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0));
    float _1996 = (exp2(log2(1.0 - (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2002 = (0.5 / ((_1980 + 9.9999999392252902907785028219223e-09) + _1984)) * _1980;
    float _3795 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
    float _2004 = (isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0))) * 0.31831014156341552734375;
    uint _2018 = _1895 + 9u;
    float _2024 = cbLight._m0[_1930].x + _654;
    float _2025 = cbLight._m0[_1930].y + _655;
    float _2026 = cbLight._m0[_1930].z + _656;
    float _2030 = inversesqrt(dot(vec3(_2024, _2025, _2026), vec3(_2024, _2025, _2026)));
    float _2034 = dot(vec3(0.0), vec3(cbLight._m0[_1930].xyz));
    float _3806 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
    float _2037 = isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0));
    float _2038 = dot(vec3(cbLight._m0[_1930].xyz), vec3(_2024 * _2030, _2025 * _2030, _2026 * _2030));
    float _3817 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
    float _2047 = (exp2(log2(1.0 - (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2051 = (0.5 / ((_2037 + 9.9999999392252902907785028219223e-09) + _1984)) * _2037;
    float _3828 = isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0));
    float _2053 = (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))) * 0.31831014156341552734375;
    float _2063 = (((_2047 * cbLight._m0[_2018].x) * _2053) * _1913) + ((((cbLight._m0[_1961].x * _1883) * _1996) * _2004) * _1926);
    float _2064 = (((_2047 * cbLight._m0[_2018].y) * _2053) * _1913) + ((((cbLight._m0[_1961].y * _1885) * _1996) * _2004) * _1926);
    float _2065 = (((_2047 * cbLight._m0[_2018].z) * _2053) * _1913) + ((((cbLight._m0[_1961].z * _1887) * _1996) * _2004) * _1926);
    float _2229;
    float _2231;
    float _2233;
    float _2235;
    float _2237;
    float _2239;
    if (_1893.y == 0u)
    {
        uvec4 _2183 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2184 = _2183.x;
        uint _2195 = uint((float(_2183.y) * floor(float(uint(cbSceneParam._m0[85u].y * _663) / _2184))) + floor(float(uint(cbSceneParam._m0[85u].x * _662) / _2184)));
        float _2205 = (log2(_1669 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2206 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
        uint _2209 = uint(isnan(14.0) ? _2206 : (isnan(_2206) ? 14.0 : min(_2206, 14.0)));
        uvec4 _2215 = texelFetch(g_lightClusterGridBuffer, int(((_2209 << 2u) + (_2195 << 6u)) >> 2u));
        uint _2216 = _2215.x;
        uint _2217 = _2183.z;
        float _2324;
        float _2326;
        float _2328;
        float _2330;
        float _2332;
        float _2334;
        if (((((1u << ((_2217 >> 4u) & 15u)) + 4294967295u) & _2216) == 0u) || ((_2217 & 240u) == 0u))
        {
            _2324 = 0.0;
            _2326 = 0.0;
            _2328 = 0.0;
            _2330 = 0.0;
            _2332 = 0.0;
            _2334 = 0.0;
        }
        else
        {
            float _2325;
            float _2327;
            float _2329;
            float _2331;
            float _2333;
            float _2335;
            float _2492 = 0.0;
            float _2493 = 0.0;
            float _2494 = 0.0;
            float _2495 = 0.0;
            float _2496 = 0.0;
            float _2497 = 0.0;
            uint _2498 = 0u;
            uint _2507;
            bool _2508;
            for (;;)
            {
                _2507 = texelFetch(g_lightClassification, int((((_2209 << 5u) + (_2195 << 9u)) + (_2498 << 2u)) >> 2u)).x;
                _2508 = _2507 == 0u;
                float frontier_phi_98_pred;
                float frontier_phi_98_pred_1;
                float frontier_phi_98_pred_2;
                float frontier_phi_98_pred_3;
                float frontier_phi_98_pred_4;
                float frontier_phi_98_pred_5;
                if (_2508)
                {
                    frontier_phi_98_pred = _2492;
                    frontier_phi_98_pred_1 = _2493;
                    frontier_phi_98_pred_2 = _2497;
                    frontier_phi_98_pred_3 = _2496;
                    frontier_phi_98_pred_4 = _2495;
                    frontier_phi_98_pred_5 = _2494;
                }
                else
                {
                    float _2637;
                    float _2638;
                    float _2639;
                    float _2640;
                    float _2641;
                    float _2642;
                    uint _2643;
                    _2637 = _2492;
                    _2638 = _2493;
                    _2639 = _2494;
                    _2640 = _2495;
                    _2641 = _2496;
                    _2642 = _2497;
                    _2643 = _2507;
                    float _2569;
                    float _2570;
                    float _2571;
                    float _2572;
                    float _2573;
                    float _2574;
                    for (;;)
                    {
                        uint _2647 = uint(findLSB(_2643)) + (_2498 << 5u);
                        uint _2644 = (_2643 + 4294967295u) & _2643;
                        uint _2649 = _2647 * 48u;
                        vec4 _2663 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2649)).x, texelFetch(g_PointLightRenderingBuffer, int(_2649 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2649 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2649 + 3u)).x));
                        uint _2669 = (_2647 * 48u) + 4u;
                        vec4 _2682 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2669)).x, texelFetch(g_PointLightRenderingBuffer, int(_2669 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2669 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2669 + 3u)).x));
                        uint _2688 = (_2647 * 48u) + 8u;
                        vec3 _2699 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2688)).x, texelFetch(g_PointLightRenderingBuffer, int(_2688 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2688 + 2u)).x));
                        float _2703 = _2663.x - _1667;
                        float _2704 = _2663.y - _1668;
                        float _2705 = _2663.z - _1669;
                        float _2706 = dot(vec3(_2703, _2704, _2705), vec3(_2703, _2704, _2705));
                        float _2709 = inversesqrt(_2706);
                        float _2718 = 1.0 - (_2706 * _2663.w);
                        float _3849 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
                        float _2719 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
                        float _2720 = sqrt(_2706) * _2682.w;
                        float _2723 = 1.39999997615814208984375 / (_2720 + 1.39999997615814208984375);
                        float _2724 = _2723 * _2723;
                        float _2727 = ((1.0 - _2724) * dot(vec3(0.0), vec3(_2709 * _2703, _2709 * _2704, _2709 * _2705))) + _2724;
                        float _2730 = _2720 * _2720;
                        float _2734 = ((isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0))) * _2719) / ((_2730 * 0.699999988079071044921875) + 1.0);
                        float _2738 = (-0.0) - _1667;
                        float _2739 = (-0.0) - _1668;
                        float _2740 = (-0.0) - _1669;
                        float _2744 = inversesqrt(dot(vec3(_2738, _2739, _2740), vec3(_2738, _2739, _2740)));
                        float _2748 = dot(vec3(0.0), vec3(_2744 * _2738, _2744 * _2739, _2744 * _2740));
                        float _3865 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
                        float _3876 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
                        float _2752 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
                        float _2756 = (0.5 / (((isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0))) + 9.9999999392252902907785028219223e-09) + _2752)) * _2752;
                        float _3887 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
                        float _2765 = (((isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0))) * 3.1415927410125732421875) / ((_2730 * 2.1991131305694580078125) + 3.141590118408203125)) * _2719;
                        _2572 = (_2734 * _2682.x) + _2640;
                        _2573 = (_2734 * _2682.y) + _2641;
                        _2574 = (_2734 * _2682.z) + _2642;
                        _2569 = (_2765 * _2699.x) + _2637;
                        _2570 = (_2765 * _2699.y) + _2638;
                        _2571 = (_2765 * _2699.z) + _2639;
                        if (_2644 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2637 = _2569;
                            _2638 = _2570;
                            _2639 = _2571;
                            _2640 = _2572;
                            _2641 = _2573;
                            _2642 = _2574;
                            _2643 = _2644;
                        }
                    }
                    frontier_phi_98_pred = _2569;
                    frontier_phi_98_pred_1 = _2570;
                    frontier_phi_98_pred_2 = _2574;
                    frontier_phi_98_pred_3 = _2573;
                    frontier_phi_98_pred_4 = _2572;
                    frontier_phi_98_pred_5 = _2571;
                }
                _2325 = frontier_phi_98_pred;
                _2327 = frontier_phi_98_pred_1;
                _2335 = frontier_phi_98_pred_2;
                _2333 = frontier_phi_98_pred_3;
                _2331 = frontier_phi_98_pred_4;
                _2329 = frontier_phi_98_pred_5;
                uint _2499 = _2498 + 1u;
                if (_2499 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2492 = _2325;
                    _2493 = _2327;
                    _2494 = _2329;
                    _2495 = _2331;
                    _2496 = _2333;
                    _2497 = _2335;
                    _2498 = _2499;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2324 = _2325;
            _2326 = _2327;
            _2328 = _2329;
            _2330 = _2331;
            _2332 = _2333;
            _2334 = _2335;
        }
        uvec4 _2338 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2339 = _2338.z;
        uint _2341 = (_2339 >> 8u) & 15u;
        float _2463;
        float _2465;
        float _2467;
        float _2469;
        float _2471;
        float _2473;
        if (((4294967295u << _2341) & _2216) == 0u)
        {
            _2463 = _2324;
            _2465 = _2326;
            _2467 = _2328;
            _2469 = _2330;
            _2471 = _2332;
            _2473 = _2334;
        }
        else
        {
            float _2488 = inversesqrt(dot(vec3(_1667, _1668, _1669), vec3(_1667, _1668, _1669)));
            float frontier_phi_91_92_ladder;
            float frontier_phi_91_92_ladder_1;
            float frontier_phi_91_92_ladder_2;
            float frontier_phi_91_92_ladder_3;
            float frontier_phi_91_92_ladder_4;
            float frontier_phi_91_92_ladder_5;
            if (_2341 < ((_2339 >> 12u) & 15u))
            {
                float _2464;
                float _2466;
                float _2468;
                float _2470;
                float _2472;
                float _2474;
                float _2620 = _2324;
                float _2621 = _2326;
                float _2622 = _2328;
                float _2623 = _2330;
                float _2624 = _2332;
                float _2625 = _2334;
                uint _2626 = _2341;
                uint _2635;
                bool _2636;
                for (;;)
                {
                    _2635 = texelFetch(g_lightClassification, int((((_2209 << 5u) + (_2195 << 9u)) + (_2626 << 2u)) >> 2u)).x;
                    _2636 = _2635 == 0u;
                    float frontier_phi_104_pred;
                    float frontier_phi_104_pred_1;
                    float frontier_phi_104_pred_2;
                    float frontier_phi_104_pred_3;
                    float frontier_phi_104_pred_4;
                    float frontier_phi_104_pred_5;
                    if (_2636)
                    {
                        frontier_phi_104_pred = _2625;
                        frontier_phi_104_pred_1 = _2624;
                        frontier_phi_104_pred_2 = _2623;
                        frontier_phi_104_pred_3 = _2622;
                        frontier_phi_104_pred_4 = _2621;
                        frontier_phi_104_pred_5 = _2620;
                    }
                    else
                    {
                        float _2770;
                        float _2771;
                        float _2772;
                        float _2773;
                        float _2774;
                        float _2775;
                        float _3019;
                        float _3020;
                        float _3021;
                        float _3022;
                        float _3023;
                        float _3024;
                        float _2783 = _2620;
                        float _2784 = _2621;
                        float _2785 = _2622;
                        float _2786 = _2623;
                        float _2787 = _2624;
                        float _2788 = _2625;
                        uint _2789 = _2635;
                        uint _2790;
                        vec4 _2815;
                        float _2816;
                        vec4 _2831;
                        vec3 _2843;
                        vec4 _2858;
                        vec4 _2873;
                        float _2919;
                        bool _2920;
                        for (;;)
                        {
                            uint _2800 = ((_2626 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2789));
                            _2790 = (_2789 + 4294967295u) & _2789;
                            uint _2802 = _2800 * 40u;
                            _2815 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2802)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2802 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2802 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2802 + 3u)).x));
                            _2816 = _2815.w;
                            uint _2818 = (_2800 * 40u) + 4u;
                            _2831 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2818)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2818 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2818 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2818 + 3u)).x));
                            uint _2833 = (_2800 * 40u) + 8u;
                            _2843 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2833)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2833 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2833 + 2u)).x));
                            uint _2845 = (_2800 * 40u) + 16u;
                            _2858 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 3u)).x));
                            uint _2860 = (_2800 * 40u) + 20u;
                            _2873 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2860)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2860 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2860 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2860 + 3u)).x));
                            uint _2875 = (_2800 * 40u) + 24u;
                            vec4 _2888 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2875)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2875 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2875 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2875 + 3u)).x));
                            uint _2894 = (_2800 * 40u) + 28u;
                            vec4 _2907 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2894)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2894 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2894 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2894 + 3u)).x));
                            _2919 = fma(_1669, _2907.z, fma(_1668, _2907.y, _2907.x * _1667)) + _2907.w;
                            _2920 = !((fma(_1669, _2888.z, fma(_1668, _2888.y, _2888.x * _1667)) + _2888.w) <= 0.0);
                            float frontier_phi_110_pred;
                            float frontier_phi_110_pred_1;
                            float frontier_phi_110_pred_2;
                            float frontier_phi_110_pred_3;
                            float frontier_phi_110_pred_4;
                            float frontier_phi_110_pred_5;
                            if (_2920)
                            {
                                float _2947 = _2815.x - _1667;
                                float _2948 = _2815.y - _1668;
                                float _2949 = _2815.z - _1669;
                                float _2950 = dot(vec3(_2947, _2948, _2949), vec3(_2947, _2948, _2949));
                                float _2953 = inversesqrt(_2950);
                                float _2954 = _2953 * _2947;
                                float _2955 = _2953 * _2948;
                                float _2956 = _2953 * _2949;
                                float _2960 = 1.0 - (_2950 / (_2816 * _2816));
                                float _3898 = isnan(0.0) ? _2960 : (isnan(_2960) ? 0.0 : max(_2960, 0.0));
                                float _2961 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
                                float _2965 = sqrt(_2950) * _2831.w;
                                float _2967 = 1.39999997615814208984375 / (_2965 + 1.39999997615814208984375);
                                float _2968 = _2967 * _2967;
                                float _2969 = 1.0 - _2968;
                                float _2971 = (_2969 * dot(vec3(_2954, _2955, _2956), vec3(0.0))) + _2968;
                                float _2974 = _2965 * _2965;
                                float _2978 = (fma(_1669, _2858.z, fma(_1668, _2858.y, _2858.x * _1667)) + _2858.w) / _2919;
                                float _2979 = (fma(_1669, _2873.z, fma(_1668, _2873.y, _2873.x * _1667)) + _2873.w) / _2919;
                                float _2983 = 1.0 - dot(vec2(_2978, _2979), vec2(_2978, _2979));
                                float _3914 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
                                float _2984 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
                                float _2985 = _2984 * (((isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0))) * _2961) / ((_2974 * 0.699999988079071044921875) + 1.0));
                                float _2995 = dot(vec3(0.0), vec3((-0.0) - (_1667 * _2488), (-0.0) - (_1668 * _2488), (-0.0) - (_1669 * _2488)));
                                float _3925 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
                                float _3003 = (_2969 * dot(vec3(0.0), vec3(_2954, _2955, _2956))) + _2968;
                                float _3936 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
                                float _3004 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
                                float _3008 = (0.5 / (((isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0))) + 9.9999999392252902907785028219223e-09) + _3004)) * _3004;
                                float _3947 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
                                float _3015 = (_2984 * _2961) * (((isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0))) * 3.1415927410125732421875) / ((_2974 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_110_pred = _3015 * _2843.z;
                                frontier_phi_110_pred_1 = _2985 * _2831.z;
                                frontier_phi_110_pred_2 = _2985 * _2831.y;
                                frontier_phi_110_pred_3 = _2985 * _2831.x;
                                frontier_phi_110_pred_4 = _3015 * _2843.y;
                                frontier_phi_110_pred_5 = _3015 * _2843.x;
                            }
                            else
                            {
                                frontier_phi_110_pred = 0.0;
                                frontier_phi_110_pred_1 = 0.0;
                                frontier_phi_110_pred_2 = 0.0;
                                frontier_phi_110_pred_3 = 0.0;
                                frontier_phi_110_pred_4 = 0.0;
                                frontier_phi_110_pred_5 = 0.0;
                            }
                            _3021 = frontier_phi_110_pred;
                            _3024 = frontier_phi_110_pred_1;
                            _3023 = frontier_phi_110_pred_2;
                            _3022 = frontier_phi_110_pred_3;
                            _3020 = frontier_phi_110_pred_4;
                            _3019 = frontier_phi_110_pred_5;
                            _2773 = _3022 + _2786;
                            _2774 = _3023 + _2787;
                            _2775 = _3024 + _2788;
                            _2770 = _3019 + _2783;
                            _2771 = _3020 + _2784;
                            _2772 = _3021 + _2785;
                            if (_2790 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2783 = _2770;
                                _2784 = _2771;
                                _2785 = _2772;
                                _2786 = _2773;
                                _2787 = _2774;
                                _2788 = _2775;
                                _2789 = _2790;
                                continue;
                            }
                        }
                        frontier_phi_104_pred = _2775;
                        frontier_phi_104_pred_1 = _2774;
                        frontier_phi_104_pred_2 = _2773;
                        frontier_phi_104_pred_3 = _2772;
                        frontier_phi_104_pred_4 = _2771;
                        frontier_phi_104_pred_5 = _2770;
                    }
                    _2474 = frontier_phi_104_pred;
                    _2472 = frontier_phi_104_pred_1;
                    _2470 = frontier_phi_104_pred_2;
                    _2468 = frontier_phi_104_pred_3;
                    _2466 = frontier_phi_104_pred_4;
                    _2464 = frontier_phi_104_pred_5;
                    uint _2627 = _2626 + 1u;
                    if (_2627 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2620 = _2464;
                        _2621 = _2466;
                        _2622 = _2468;
                        _2623 = _2470;
                        _2624 = _2472;
                        _2625 = _2474;
                        _2626 = _2627;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_91_92_ladder = _2474;
                frontier_phi_91_92_ladder_1 = _2472;
                frontier_phi_91_92_ladder_2 = _2470;
                frontier_phi_91_92_ladder_3 = _2468;
                frontier_phi_91_92_ladder_4 = _2466;
                frontier_phi_91_92_ladder_5 = _2464;
            }
            else
            {
                frontier_phi_91_92_ladder = _2334;
                frontier_phi_91_92_ladder_1 = _2332;
                frontier_phi_91_92_ladder_2 = _2330;
                frontier_phi_91_92_ladder_3 = _2328;
                frontier_phi_91_92_ladder_4 = _2326;
                frontier_phi_91_92_ladder_5 = _2324;
            }
            _2463 = frontier_phi_91_92_ladder_5;
            _2465 = frontier_phi_91_92_ladder_4;
            _2467 = frontier_phi_91_92_ladder_3;
            _2469 = frontier_phi_91_92_ladder_2;
            _2471 = frontier_phi_91_92_ladder_1;
            _2473 = frontier_phi_91_92_ladder;
        }
        float _2478 = isnan(1.0) ? _702 : (isnan(_702) ? 1.0 : min(_702, 1.0));
        _2229 = (_2478 * _2469) + _1958;
        _2231 = (_2478 * _2471) + _1959;
        _2233 = (_2478 * _2473) + _1960;
        _2235 = ((_2463 * 0.039999999105930328369140625) * _2478) + _2063;
        _2237 = ((_2465 * 0.039999999105930328369140625) * _2478) + _2064;
        _2239 = ((_2467 * 0.039999999105930328369140625) * _2478) + _2065;
    }
    else
    {
        _2229 = _1958;
        _2231 = _1959;
        _2233 = _1960;
        _2235 = _2063;
        _2237 = _2064;
        _2239 = _2065;
    }
    float _3963 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _3974 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _3985 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    float _2256 = ((isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0))) * (_2229 + ((isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0))) * _702))) + ((_2235 + ((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _1406)) * cbPerFrame._m0[3u].x);
    float _2257 = ((isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * (_2231 + ((isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0))) * _702))) + ((_2237 + ((isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))) * _1406)) * cbPerFrame._m0[3u].x);
    float _2258 = ((isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * (_2233 + ((isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0))) * _702))) + ((_2239 + ((isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0))) * _1406)) * cbPerFrame._m0[3u].x);
    uint _2262 = _676 + 6u;
    float _2270 = _662 / cbSceneParam._m0[86u].x;
    float _2271 = _663 / cbSceneParam._m0[86u].y;
    vec4 _2285 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2270, _2271, (log2((isnan(cbSceneParam._m0[77u].w) ? _649 : (isnan(_649) ? cbSceneParam._m0[77u].w : min(_649, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2287 = _2285.x;
    float _2288 = _2285.y;
    float _2289 = _2285.z;
    float _2290 = _2285.w;
    float _2386;
    float _2388;
    float _2390;
    float _2392;
    if (_649 > cbSceneParam._m0[78u].w)
    {
        float _2349 = isnan(_649) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _649 : min(cbSceneParam._m0[80u].w, _649));
        float _2350 = _2349 / _649;
        float _2361 = _2350 * _257;
        float _2362 = _258 * _2350;
        float _2363 = (-0.0) - _2362;
        float _2364 = _2350 * _259;
        float _2366 = (cbSceneParam._m0[77u].w * _2363) / _2349;
        float _2367 = _2366 + cbSceneParam._m0[79u].w;
        float _2368 = cbSceneParam._m0[79u].w - _2362;
        float _2374 = sqrt(((_2361 * _2361) + (_2362 * _2362)) + (_2364 * _2364));
        float _2377 = (1.0 - (cbSceneParam._m0[77u].w / _2349)) * _2374;
        float _2382 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2384 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2582;
        if (abs((_2363 - _2366) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2582 = ((((_2367 > 0.0) ? exp2(_2382 * _2367) : (2.0 - exp2(_2384 * _2367))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2377;
        }
        else
        {
            float _2521 = 1.0 / cbSceneParam._m0[80u].x;
            float _2522 = isnan(_2368) ? _2367 : (isnan(_2367) ? _2368 : max(_2367, _2368));
            float _2523 = isnan(_2368) ? _2367 : (isnan(_2367) ? _2368 : min(_2367, _2368));
            float _2532 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : min(_2522, 0.0));
            float _2533 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : min(_2523, 0.0));
            _2582 = ((abs(_2374 / _2363) * cbSceneParam._m0[80u].y) * ((((_2532 - _2533) * 2.0) - ((exp2(_2382 * (isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0)))) - exp2(_2382 * (isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0))))) * _2521)) - ((exp2(_2384 * _2532) - exp2(_2384 * _2533)) * _2521))) + (_2377 * cbSceneParam._m0[80u].z);
        }
        vec4 _2584 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2270, _2271, 1.0), 0.0);
        float _2593 = exp2((_2582 * (-1.44269502162933349609375)) * (1.0 - _2584.w));
        float _2594 = log2(_2593);
        float _2610 = log2(_2290);
        _2386 = (exp2(_2610 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2594 * cbSceneParam._m0[78u].x)) * _2584.x) / cbSceneParam._m0[78u].x)) + _2287;
        _2388 = (exp2(_2610 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2594 * cbSceneParam._m0[78u].y)) * _2584.y) / cbSceneParam._m0[78u].y)) + _2288;
        _2390 = (exp2(_2610 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2594 * cbSceneParam._m0[78u].z)) * _2584.z) / cbSceneParam._m0[78u].z)) + _2289;
        _2392 = _2593 * _2290;
    }
    else
    {
        _2386 = _2287;
        _2388 = _2288;
        _2390 = _2289;
        _2392 = _2290;
    }
    float _2404 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2405 = _2404 == 3.0;
    float _2407 = log2(_2392);
    float _2414 = exp2(_2407 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0)));
    float _2415 = exp2(_2407 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0)));
    float _2416 = exp2(_2407 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0)));
    float _2425 = (_2404 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2425 * (_2405 ? _2414 : (_2414 + (cbSceneParam._m0[72u].w * _2386)));
    SV_Target.y = _2425 * (_2405 ? _2415 : (_2415 + (cbSceneParam._m0[72u].w * _2388)));
    SV_Target.z = _2425 * (_2405 ? _2416 : (_2416 + (cbSceneParam._m0[72u].w * _2390)));
    SV_Target.w = cbInstanceData._m0[_2262].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2262].w;
}


