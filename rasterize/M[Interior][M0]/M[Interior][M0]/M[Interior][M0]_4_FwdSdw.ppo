#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _948;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _188 = _187 * _180;
    float _189 = _187 * _181;
    float _190 = _187 * _182;
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _195 = _194 * NORMAL.x;
    float _196 = _194 * NORMAL.y;
    float _197 = _194 * NORMAL.z;
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _202 = _201 * TANGENT.x;
    float _203 = _201 * TANGENT.y;
    float _204 = _201 * TANGENT.z;
    float _249 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _259 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _249);
    float _260 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _249);
    float _261 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _249);
    vec4 _280 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _286 = _280.w;
    float _299 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _286) + cbMtdParam._m0[11u].x) * _280.x;
    float _301 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _286) + cbMtdParam._m0[11u].y) * _280.y;
    float _303 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _286) + cbMtdParam._m0[11u].z) * _280.z;
    float _329 = cbMtdParam._m0[22u].y + _259;
    float _330 = cbMtdParam._m0[22u].z + _260;
    float _331 = cbMtdParam._m0[22u].w + _261;
    float _345 = (-0.0) - dot(vec3(_329, _330, _331), vec3(_188, _189, _190));
    float _346 = (-0.0) - dot(vec3(_329, _330, _331), vec3(_202, _203, _204));
    float _347 = (-0.0) - dot(vec3(_329, _330, _331), vec3((-0.0) - _195, (-0.0) - _196, (-0.0) - _197));
    float _351 = inversesqrt(dot(vec3(_345, _346, _347), vec3(_345, _346, _347)));
    float _352 = _351 * _347;
    float _354 = (cbMtdParam._m0[19u].x * _345) * _351;
    float _356 = (cbMtdParam._m0[18u].w * _346) * _351;
    float _357 = fract(TEXCOORD.x);
    float _358 = fract(TEXCOORD.y);
    float _364;
    if (_354 > 0.0)
    {
        _364 = (1.0 - _357) / _354;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_354 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _357) / _354;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _364 = frontier_phi_3_2_ladder;
    }
    float _372;
    if (_356 > 0.0)
    {
        _372 = (1.0 - _358) / _356;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _358) / _356;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _372 = frontier_phi_7_6_ladder;
    }
    float _376 = (_352 > 0.0) ? (cbMtdParam._m0[15u].x / _352) : 5000.0;
    float _377 = isnan(_372) ? _364 : (isnan(_364) ? _372 : min(_364, _372));
    float _378 = isnan(_376) ? _377 : (isnan(_377) ? _376 : min(_377, _376));
    float _382 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _389 = ((_378 * _352) + _382) / _382;
    vec4 _414 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_357 + (-0.5)) + (_378 * _354)) / _389) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_358 + (-0.5)) + (_378 * _356)) / _389) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _416 = _414.x;
    float _417 = _414.y;
    float _418 = _414.z;
    vec4 _444 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _452 = (_444.x * 2.0) + (-1.0);
    float _454 = (_444.y * 2.0) + (-1.0);
    float _455 = dot(vec2(_452, _454), vec2(_452, _454));
    float _3316 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _460 = sqrt(1.0 - (isnan(1.0) ? _3316 : (isnan(_3316) ? 1.0 : min(_3316, 1.0))));
    float _461 = _444.z * _286;
    float _464 = fma(_460, _195, fma(_454, _202, _452 * _188));
    float _467 = fma(_460, _196, fma(_454, _203, _452 * _189));
    float _470 = fma(_460, _197, fma(_454, _204, _452 * _190));
    float _474 = inversesqrt(dot(vec3(_464, _467, _470), vec3(_464, _467, _470)));
    float _475 = _474 * _464;
    float _476 = _474 * _467;
    float _477 = _474 * _470;
    float _3327 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _478 = isnan(1.0) ? _3327 : (isnan(_3327) ? 1.0 : min(_3327, 1.0));
    float _3338 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _3349 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _3360 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _497 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _501 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _502 = _259 * _501;
    float _503 = _260 * _501;
    float _504 = _261 * _501;
    float _510 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _511 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _532 = fma(_477, cbSceneParam._m0[5u].z, fma(_476, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _475));
    float _535 = fma(_477, cbSceneParam._m0[6u].z, fma(_476, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _475));
    float _538 = fma(_477, cbSceneParam._m0[7u].z, fma(_476, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _475));
    uint _551 = uint(roundEven(NORMAL.w)) * 13u;
    uint _553 = _551 + 9u;
    uint _554 = _553 + uint(cbMatDynParam._m0[0u].w);
    float _560 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3338 : (isnan(_3338) ? 1.0 : min(_3338, 1.0)))) * cbInstanceData._m0[_554].x;
    float _561 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3349 : (isnan(_3349) ? 1.0 : min(_3349, 1.0)))) * cbInstanceData._m0[_554].y;
    float _562 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3360 : (isnan(_3360) ? 1.0 : min(_3360, 1.0)))) * cbInstanceData._m0[_554].z;
    float _3371 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _563 = isnan(1.0) ? _3371 : (isnan(_3371) ? 1.0 : min(_3371, 1.0));
    float _3382 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _564 = isnan(1.0) ? _3382 : (isnan(_3382) ? 1.0 : min(_3382, 1.0));
    float _3393 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _565 = isnan(1.0) ? _3393 : (isnan(_3393) ? 1.0 : min(_3393, 1.0));
    vec4 _574 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _510, cbSceneParam._m0[86u].y * _511));
    float _577 = _574.x * TEXCOORD.z;
    float _578 = dot(vec3(_475, _476, _477), vec3(_502, _503, _504));
    float _581 = _578 * 2.0;
    float _585 = (_581 * _475) - _502;
    float _586 = (_581 * _476) - _503;
    float _587 = (_581 * _477) - _504;
    float _591 = abs(dot(vec3(_502, _503, _504), vec3(_475, _476, _477)));
    float _3404 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _593 = sqrt(_478);
    float _606 = exp2((_593 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3404 : (isnan(_3404) ? 1.0 : min(_3404, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_593 * 3.0));
    float _638 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _642 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _646 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _947;
    float _949;
    float _950;
    float _951;
    float _952;
    float _953;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _674 = fma(_646, cbModelParam._m0[26u].z, fma(_642, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _638));
        float _678 = fma(_646, cbModelParam._m0[27u].z, fma(_642, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _638));
        float _682 = fma(_646, cbModelParam._m0[28u].z, fma(_642, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _638));
        float _705 = _638 + _475;
        float _706 = _642 + _476;
        float _707 = _646 + _477;
        float _717 = fma(_707, cbModelParam._m0[26u].z, fma(_706, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _705)) - _674;
        float _718 = fma(_707, cbModelParam._m0[27u].z, fma(_706, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _705)) - _678;
        float _719 = fma(_707, cbModelParam._m0[28u].z, fma(_706, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _705)) - _682;
        float _723 = inversesqrt(dot(vec3(_717, _718, _719), vec3(_717, _718, _719)));
        float _736 = ((_723 * _717) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_674 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _737 = ((_723 * _718) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_678 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _738 = ((_723 * _719) / cbModelParam._m0[34u].z) + ((((((_682 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _741 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _748 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _755 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _762 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        float _775 = exp2((_741.w + (-0.5)) * 20.0) * 2.0;
        float _776 = _775 * (_741.x + (-0.5));
        float _777 = _775 * (_741.y + (-0.5));
        float _778 = _775 * (_741.z + (-0.5));
        float _785 = exp2((_748.w + (-0.5)) * 20.0) * 2.0;
        float _786 = _785 * (_748.x + (-0.5));
        float _787 = _785 * (_748.y + (-0.5));
        float _788 = _785 * (_748.z + (-0.5));
        float _795 = exp2((_755.w + (-0.5)) * 20.0) * 2.0;
        float _796 = _795 * (_755.x + (-0.5));
        float _797 = _795 * (_755.y + (-0.5));
        float _798 = _795 * (_755.z + (-0.5));
        float _805 = exp2((_762.w + (-0.5)) * 20.0) * 2.0;
        float _806 = _805 * (_762.x + (-0.5));
        float _807 = _805 * (_762.y + (-0.5));
        float _808 = _805 * (_762.z + (-0.5));
        float _809 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
        float _810 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _811 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
        float _812 = _776 * 0.5;
        float _813 = _786 * 0.5;
        float _814 = _796 * 0.5;
        float _815 = dot(vec3(_812, _813, _814), vec3(_812, _813, _814));
        float _820 = (_815 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_815);
        float _829 = (dot(vec3(_475, _476, _477), vec3(_820 * _812, _820 * _813, _820 * _814)) + 1.0) * 0.5;
        float _3430 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
        float _839 = sqrt(((_813 * _813) + (_812 * _812)) + (_814 * _814)) / (_809 + 9.9999997473787516355514526367188e-06);
        float _3441 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
        float _840 = isnan(1.0) ? _3441 : (isnan(_3441) ? 1.0 : min(_3441, 1.0));
        float _841 = _840 * 2.0;
        float _845 = (1.0 - _840) / (_840 + 1.0);
        float _3452 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
        float _846 = isnan(1.0) ? _3452 : (isnan(_3452) ? 1.0 : min(_3452, 1.0));
        float _855 = ((((1.0 - _846) * (_841 + 2.0)) * exp2(log2(isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0))) * (_841 + 1.0))) + _846) * _809;
        float _856 = _777 * 0.5;
        float _857 = _787 * 0.5;
        float _858 = _797 * 0.5;
        float _859 = dot(vec3(_856, _857, _858), vec3(_856, _857, _858));
        float _864 = (_859 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_859);
        float _872 = (dot(vec3(_475, _476, _477), vec3(_864 * _856, _864 * _857, _864 * _858)) + 1.0) * 0.5;
        float _3463 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
        float _881 = sqrt(((_857 * _857) + (_856 * _856)) + (_858 * _858)) / (_810 + 9.9999997473787516355514526367188e-06);
        float _3474 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
        float _882 = isnan(1.0) ? _3474 : (isnan(_3474) ? 1.0 : min(_3474, 1.0));
        float _883 = _882 * 2.0;
        float _887 = (1.0 - _882) / (_882 + 1.0);
        float _3485 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        float _888 = isnan(1.0) ? _3485 : (isnan(_3485) ? 1.0 : min(_3485, 1.0));
        float _897 = ((((1.0 - _888) * (_883 + 2.0)) * exp2(log2(isnan(1.0) ? _3463 : (isnan(_3463) ? 1.0 : min(_3463, 1.0))) * (_883 + 1.0))) + _888) * _810;
        float _898 = _778 * 0.5;
        float _899 = _788 * 0.5;
        float _900 = _798 * 0.5;
        float _901 = dot(vec3(_898, _899, _900), vec3(_898, _899, _900));
        float _906 = (_901 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_901);
        float _914 = (dot(vec3(_475, _476, _477), vec3(_906 * _898, _906 * _899, _906 * _900)) + 1.0) * 0.5;
        float _3496 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _923 = sqrt(((_899 * _899) + (_898 * _898)) + (_900 * _900)) / (_811 + 9.9999997473787516355514526367188e-06);
        float _3507 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
        float _924 = isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0));
        float _925 = _924 * 2.0;
        float _929 = (1.0 - _924) / (_924 + 1.0);
        float _3518 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _930 = isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0));
        float _939 = ((((1.0 - _930) * (_925 + 2.0)) * exp2(log2(isnan(1.0) ? _3496 : (isnan(_3496) ? 1.0 : min(_3496, 1.0))) * (_925 + 1.0))) + _930) * _811;
        _947 = _778;
        _949 = _777;
        _950 = _776;
        _951 = _788;
        _952 = _787;
        _953 = _786;
        _954 = _798;
        _955 = _797;
        _956 = _796;
        _957 = _811;
        _958 = _810;
        _959 = _809;
        _960 = cbModelParam._m0[36u].z * (isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0)));
        _961 = cbModelParam._m0[36u].z * (isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0)));
        _962 = cbModelParam._m0[36u].z * (isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0)));
    }
    else
    {
        _947 = _948;
        _949 = _948;
        _950 = _948;
        _951 = _948;
        _952 = _948;
        _953 = _948;
        _954 = _948;
        _955 = _948;
        _956 = _948;
        _957 = _948;
        _958 = _948;
        _959 = _948;
        _960 = 0.0;
        _961 = 0.0;
        _962 = 0.0;
    }
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _988 = fma(_646, cbModelParam._m0[30u].z, fma(_642, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _638));
        float _992 = fma(_646, cbModelParam._m0[31u].z, fma(_642, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _638));
        float _996 = fma(_646, cbModelParam._m0[32u].z, fma(_642, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _638));
        float _1019 = _638 + _475;
        float _1020 = _642 + _476;
        float _1021 = _646 + _477;
        float _1031 = fma(_1021, cbModelParam._m0[30u].z, fma(_1020, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1019)) - _988;
        float _1032 = fma(_1021, cbModelParam._m0[31u].z, fma(_1020, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1019)) - _992;
        float _1033 = fma(_1021, cbModelParam._m0[32u].z, fma(_1020, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1019)) - _996;
        float _1037 = inversesqrt(dot(vec3(_1031, _1032, _1033), vec3(_1031, _1032, _1033)));
        float _1050 = ((_1037 * _1031) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_988 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1051 = ((_1037 * _1032) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_992 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1052 = ((_1037 * _1033) / cbModelParam._m0[35u].z) + ((((((_996 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1054 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1061 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1068 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1075 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        float _1087 = exp2((_1054.w + (-0.5)) * 20.0) * 2.0;
        float _1088 = _1087 * (_1054.x + (-0.5));
        float _1089 = _1087 * (_1054.y + (-0.5));
        float _1090 = _1087 * (_1054.z + (-0.5));
        float _1097 = exp2((_1061.w + (-0.5)) * 20.0) * 2.0;
        float _1098 = _1097 * (_1061.x + (-0.5));
        float _1099 = _1097 * (_1061.y + (-0.5));
        float _1100 = _1097 * (_1061.z + (-0.5));
        float _1107 = exp2((_1068.w + (-0.5)) * 20.0) * 2.0;
        float _1108 = _1107 * (_1068.x + (-0.5));
        float _1109 = _1107 * (_1068.y + (-0.5));
        float _1110 = _1107 * (_1068.z + (-0.5));
        float _1117 = exp2((_1075.w + (-0.5)) * 20.0) * 2.0;
        float _1118 = _1117 * (_1075.x + (-0.5));
        float _1119 = _1117 * (_1075.y + (-0.5));
        float _1120 = _1117 * (_1075.z + (-0.5));
        float _1121 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1122 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1123 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1124 = _1088 * 0.5;
        float _1125 = _1098 * 0.5;
        float _1126 = _1108 * 0.5;
        float _1127 = dot(vec3(_1124, _1125, _1126), vec3(_1124, _1125, _1126));
        float _1132 = (_1127 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1127);
        float _1140 = (dot(vec3(_475, _476, _477), vec3(_1132 * _1124, _1132 * _1125, _1132 * _1126)) + 1.0) * 0.5;
        float _3559 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1149 = sqrt(((_1125 * _1125) + (_1124 * _1124)) + (_1126 * _1126)) / (_1121 + 9.9999997473787516355514526367188e-06);
        float _3570 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1150 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
        float _1151 = _1150 * 2.0;
        float _1155 = (1.0 - _1150) / (_1150 + 1.0);
        float _3581 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1156 = isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0));
        float _1165 = ((((1.0 - _1156) * (_1151 + 2.0)) * exp2(log2(isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0))) * (_1151 + 1.0))) + _1156) * _1121;
        float _1166 = _1089 * 0.5;
        float _1167 = _1099 * 0.5;
        float _1168 = _1109 * 0.5;
        float _1169 = dot(vec3(_1166, _1167, _1168), vec3(_1166, _1167, _1168));
        float _1174 = (_1169 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1169);
        float _1182 = (dot(vec3(_475, _476, _477), vec3(_1174 * _1166, _1174 * _1167, _1174 * _1168)) + 1.0) * 0.5;
        float _3592 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1191 = sqrt(((_1167 * _1167) + (_1166 * _1166)) + (_1168 * _1168)) / (_1122 + 9.9999997473787516355514526367188e-06);
        float _3603 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1192 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
        float _1193 = _1192 * 2.0;
        float _1197 = (1.0 - _1192) / (_1192 + 1.0);
        float _3614 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
        float _1207 = ((((1.0 - _1198) * (_1193 + 2.0)) * exp2(log2(isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0))) * (_1193 + 1.0))) + _1198) * _1122;
        float _1208 = _1090 * 0.5;
        float _1209 = _1100 * 0.5;
        float _1210 = _1110 * 0.5;
        float _1211 = dot(vec3(_1208, _1209, _1210), vec3(_1208, _1209, _1210));
        float _1216 = (_1211 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1211);
        float _1224 = (dot(vec3(_475, _476, _477), vec3(_1216 * _1208, _1216 * _1209, _1216 * _1210)) + 1.0) * 0.5;
        float _3625 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1233 = sqrt(((_1209 * _1209) + (_1208 * _1208)) + (_1210 * _1210)) / (_1123 + 9.9999997473787516355514526367188e-06);
        float _3636 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1234 = isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0));
        float _1235 = _1234 * 2.0;
        float _1239 = (1.0 - _1234) / (_1234 + 1.0);
        float _3647 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1240 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
        float _1249 = ((((1.0 - _1240) * (_1235 + 2.0)) * exp2(log2(isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0))) * (_1235 + 1.0))) + _1240) * _1123;
        _1257 = _1090;
        _1258 = _1089;
        _1259 = _1088;
        _1260 = _1100;
        _1261 = _1099;
        _1262 = _1098;
        _1263 = _1110;
        _1264 = _1109;
        _1265 = _1108;
        _1266 = _1123;
        _1267 = _1122;
        _1268 = _1121;
        _1269 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0)));
        _1270 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0)));
        _1271 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0)));
    }
    else
    {
        _1257 = _948;
        _1258 = _948;
        _1259 = _948;
        _1260 = _948;
        _1261 = _948;
        _1262 = _948;
        _1263 = _948;
        _1264 = _948;
        _1265 = _948;
        _1266 = _948;
        _1267 = _948;
        _1268 = _948;
        _1269 = 0.0;
        _1270 = 0.0;
        _1271 = 0.0;
    }
    float _1281 = (cbModelParam._m0[1u].x * (_1269 - _960)) + _960;
    float _1282 = (cbModelParam._m0[1u].x * (_1270 - _961)) + _961;
    float _1283 = (cbModelParam._m0[1u].x * (_1271 - _962)) + _962;
    float _1304 = fma(_1283, cbSceneParam._m0[89u].z, fma(_1282, cbSceneParam._m0[89u].y, _1281 * cbSceneParam._m0[89u].x));
    float _1307 = fma(_1283, cbSceneParam._m0[90u].z, fma(_1282, cbSceneParam._m0[90u].y, _1281 * cbSceneParam._m0[90u].x));
    float _1310 = fma(_1283, cbSceneParam._m0[91u].z, fma(_1282, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1281));
    float _1325 = _585 * 0.5;
    float _1326 = _586 * 0.5;
    float _1327 = _587 * 0.5;
    float _1328 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_1259, _1262, _1265, _1268));
    float _1331 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_1258, _1261, _1264, _1267));
    float _1334 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_1257, _1260, _1263, _1266));
    float _1368;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1341 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_947, _951, _954, _957));
        float _1345 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_949, _952, _955, _958));
        float _1349 = dot(vec4(_1325, _1326, _1327, 1.0), vec4(_950, _953, _956, _959));
        float _1356 = dot(vec4(cbModelParam._m0[39u]), vec4(_1325, _1326, _1327, 1.0));
        _1368 = dot(vec3(isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0)), isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0)), isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1356) ? 0.0 : (isnan(0.0) ? _1356 : max(0.0, _1356))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1368 = 1.0;
    }
    float _1379;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1370 = dot(vec4(cbModelParam._m0[40u]), vec4(_1325, _1326, _1327, 1.0));
        _1379 = dot(vec3(isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)), isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0)), isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1370) ? 0.0 : (isnan(0.0) ? _1370 : max(0.0, _1370))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1379 = 1.0;
    }
    float _1383 = (_1379 * cbModelParam._m0[1u].x) + (_1368 * (1.0 - cbModelParam._m0[1u].x));
    float _1393 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _478);
    float _1394 = isnan(_1393) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1393 : min(cbModelParam._m0[25u].z, _1393));
    float _1475;
    float _1477;
    float _1479;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1442 = fma(_646, cbModelParam._m0[13u].z, fma(_642, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _638)) + cbModelParam._m0[13u].w;
        float _1446 = fma(_646, cbModelParam._m0[14u].z, fma(_642, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _638)) + cbModelParam._m0[14u].w;
        float _1450 = fma(_646, cbModelParam._m0[15u].z, fma(_642, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _638)) + cbModelParam._m0[15u].w;
        float _1453 = fma(_587, cbModelParam._m0[13u].z, fma(_586, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _585));
        float _1456 = fma(_587, cbModelParam._m0[14u].z, fma(_586, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _585));
        float _1459 = fma(_587, cbModelParam._m0[15u].z, fma(_586, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _585));
        float _1487;
        if (_1453 > 0.0)
        {
            _1487 = abs((1.0 - _1442) / _1453);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1453 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1442 + 1.0) / _1453);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1487 = frontier_phi_22_20_ladder;
        }
        float _1656;
        if (_1456 > 0.0)
        {
            _1656 = abs((1.0 - _1446) / _1456);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1456 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1446 + 1.0) / _1456);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1656 = frontier_phi_31_27_ladder;
        }
        float _2100;
        if (_1459 > 0.0)
        {
            _2100 = abs((1.0 - _1450) / _1459);
        }
        else
        {
            float frontier_phi_43_38_ladder;
            if (_1459 < 0.0)
            {
                frontier_phi_43_38_ladder = abs((_1450 + 1.0) / _1459);
            }
            else
            {
                frontier_phi_43_38_ladder = 5000.0;
            }
            _2100 = frontier_phi_43_38_ladder;
        }
        float _2102 = isnan(_1656) ? _1487 : (isnan(_1487) ? _1656 : min(_1487, _1656));
        float _2103 = isnan(_2100) ? _2102 : (isnan(_2102) ? _2100 : min(_2102, _2100));
        float _2107 = (_2103 * _1453) + _1442;
        float _2108 = (_2103 * _1456) + _1446;
        float _2109 = (_2103 * _1459) + _1450;
        float _2110 = _2103 * 9.9999997473787516355514526367188e-05;
        float _2112 = (-1.0) - _2110;
        float _2114 = _2110 + 1.0;
        float frontier_phi_21_43_ladder;
        float frontier_phi_21_43_ladder_1;
        float frontier_phi_21_43_ladder_2;
        if ((_2109 > _2114) || ((_2109 < _2112) || ((_2108 > _2114) || ((_2108 < _2112) || ((_2107 < _2112) || (_2107 > _2114))))))
        {
            frontier_phi_21_43_ladder = 0.0;
            frontier_phi_21_43_ladder_1 = 0.0;
            frontier_phi_21_43_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2359 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2109, cbModelParam._m0[9u].z, fma(_2108, cbModelParam._m0[9u].y, _2107 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2109, cbModelParam._m0[10u].z, fma(_2108, cbModelParam._m0[10u].y, _2107 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2109, cbModelParam._m0[11u].z, fma(_2108, cbModelParam._m0[11u].y, _2107 * cbModelParam._m0[11u].x))), _1394);
            frontier_phi_21_43_ladder = _2359.y * cbModelParam._m0[1u].y;
            frontier_phi_21_43_ladder_1 = _2359.x * cbModelParam._m0[1u].y;
            frontier_phi_21_43_ladder_2 = _2359.z * cbModelParam._m0[1u].y;
        }
        _1475 = frontier_phi_21_43_ladder_1;
        _1477 = frontier_phi_21_43_ladder;
        _1479 = frontier_phi_21_43_ladder_2;
    }
    else
    {
        vec4 _1463 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_585, _586, _587), _1394);
        _1475 = _1463.x * cbModelParam._m0[1u].y;
        _1477 = _1463.y * cbModelParam._m0[1u].y;
        _1479 = _1463.z * cbModelParam._m0[1u].y;
    }
    float _1483 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _478);
    float _1484 = isnan(_1483) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1483 : min(cbModelParam._m0[25u].w, _1483));
    float _1573;
    float _1575;
    float _1577;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1537 = fma(_646, cbModelParam._m0[21u].z, fma(_642, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _638)) + cbModelParam._m0[21u].w;
        float _1541 = fma(_646, cbModelParam._m0[22u].z, fma(_642, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _638)) + cbModelParam._m0[22u].w;
        float _1545 = fma(_646, cbModelParam._m0[23u].z, fma(_642, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _638)) + cbModelParam._m0[23u].w;
        float _1548 = fma(_587, cbModelParam._m0[21u].z, fma(_586, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _585));
        float _1551 = fma(_587, cbModelParam._m0[22u].z, fma(_586, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _585));
        float _1554 = fma(_587, cbModelParam._m0[23u].z, fma(_586, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _585));
        float _1661;
        if (_1548 > 0.0)
        {
            _1661 = abs((1.0 - _1537) / _1548);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1548 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1537 + 1.0) / _1548);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1661 = frontier_phi_33_29_ladder;
        }
        float _2127;
        if (_1551 > 0.0)
        {
            _2127 = abs((1.0 - _1541) / _1551);
        }
        else
        {
            float frontier_phi_45_40_ladder;
            if (_1551 < 0.0)
            {
                frontier_phi_45_40_ladder = abs((_1541 + 1.0) / _1551);
            }
            else
            {
                frontier_phi_45_40_ladder = 5000.0;
            }
            _2127 = frontier_phi_45_40_ladder;
        }
        float _2480;
        if (_1554 > 0.0)
        {
            _2480 = abs((1.0 - _1545) / _1554);
        }
        else
        {
            float frontier_phi_57_52_ladder;
            if (_1554 < 0.0)
            {
                frontier_phi_57_52_ladder = abs((_1545 + 1.0) / _1554);
            }
            else
            {
                frontier_phi_57_52_ladder = 5000.0;
            }
            _2480 = frontier_phi_57_52_ladder;
        }
        float _2482 = isnan(_2127) ? _1661 : (isnan(_1661) ? _2127 : min(_1661, _2127));
        float _2483 = isnan(_2480) ? _2482 : (isnan(_2482) ? _2480 : min(_2482, _2480));
        float _2487 = (_2483 * _1548) + _1537;
        float _2488 = (_2483 * _1551) + _1541;
        float _2489 = (_2483 * _1554) + _1545;
        float _2490 = _2483 * 9.9999997473787516355514526367188e-05;
        float _2491 = (-1.0) - _2490;
        float _2493 = _2490 + 1.0;
        float frontier_phi_30_57_ladder;
        float frontier_phi_30_57_ladder_1;
        float frontier_phi_30_57_ladder_2;
        if ((_2489 > _2493) || ((_2489 < _2491) || ((_2488 > _2493) || ((_2488 < _2491) || ((_2487 < _2491) || (_2487 > _2493))))))
        {
            frontier_phi_30_57_ladder = 0.0;
            frontier_phi_30_57_ladder_1 = 0.0;
            frontier_phi_30_57_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2610 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2489, cbModelParam._m0[17u].z, fma(_2488, cbModelParam._m0[17u].y, _2487 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2489, cbModelParam._m0[18u].z, fma(_2488, cbModelParam._m0[18u].y, _2487 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2489, cbModelParam._m0[19u].z, fma(_2488, cbModelParam._m0[19u].y, _2487 * cbModelParam._m0[19u].x))), _1484);
            frontier_phi_30_57_ladder = _2610.z * cbModelParam._m0[1u].z;
            frontier_phi_30_57_ladder_1 = _2610.y * cbModelParam._m0[1u].z;
            frontier_phi_30_57_ladder_2 = _2610.x * cbModelParam._m0[1u].z;
        }
        _1573 = frontier_phi_30_57_ladder_2;
        _1575 = frontier_phi_30_57_ladder_1;
        _1577 = frontier_phi_30_57_ladder;
    }
    else
    {
        vec4 _1557 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_585, _586, _587), _1484);
        _1573 = _1557.x * cbModelParam._m0[1u].z;
        _1575 = _1557.y * cbModelParam._m0[1u].z;
        _1577 = _1557.z * cbModelParam._m0[1u].z;
    }
    float _1589 = ((((1.0 - _606) * ((_593 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_606 * _593)) * _577;
    float _1590 = _1589 * ((cbModelParam._m0[1u].w * (_1573 - _1475)) + _1475);
    float _1591 = _1589 * ((cbModelParam._m0[1u].w * (_1575 - _1477)) + _1477);
    float _1592 = _1589 * ((cbModelParam._m0[1u].w * (_1577 - _1479)) + _1479);
    float _1595 = fma(_1592, cbSceneParam._m0[89u].z, fma(_1591, cbSceneParam._m0[89u].y, _1590 * cbSceneParam._m0[89u].x));
    float _1598 = fma(_1592, cbSceneParam._m0[90u].z, fma(_1591, cbSceneParam._m0[90u].y, _1590 * cbSceneParam._m0[90u].x));
    float _1601 = fma(_1592, cbSceneParam._m0[91u].z, fma(_1591, cbSceneParam._m0[91u].y, _1590 * cbSceneParam._m0[91u].x));
    float _1635 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1639 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1643 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1647 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1648 = _1635 / _1647;
    float _1649 = _1639 / _1647;
    float _1650 = _1643 / _1647;
    float _1797;
    float _1798;
    float _1799;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1677 = ((uint(_1650 > cbSceneParam._m0[59u].y) + uint(_1650 > cbSceneParam._m0[59u].x)) + uint(_1650 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1678 = _1677 + 43u;
        uint _1686 = _1677 + 44u;
        uint _1694 = _1677 + 45u;
        uint _1702 = _1677 + 46u;
        float _1713 = fma(_1647, cbSceneParam._m0[_1678].w, fma(_1643, cbSceneParam._m0[_1678].z, fma(_1639, cbSceneParam._m0[_1678].y, _1635 * cbSceneParam._m0[_1678].x)));
        float _1717 = fma(_1647, cbSceneParam._m0[_1686].w, fma(_1643, cbSceneParam._m0[_1686].z, fma(_1639, cbSceneParam._m0[_1686].y, _1635 * cbSceneParam._m0[_1686].x)));
        float _1725 = fma(_1647, cbSceneParam._m0[_1702].w, fma(_1643, cbSceneParam._m0[_1702].z, fma(_1639, cbSceneParam._m0[_1702].y, _1635 * cbSceneParam._m0[_1702].x)));
        float _1730 = cbSceneParam._m0[33u].z * _1725;
        float _1732 = cbSceneParam._m0[33u].w * _1725;
        float _1735 = fma(_1647, cbSceneParam._m0[_1694].w, fma(_1643, cbSceneParam._m0[_1694].z, fma(_1639, cbSceneParam._m0[_1694].y, _1635 * cbSceneParam._m0[_1694].x))) / _1725;
        float _1783 = (cbSceneParam._m0[33u].x - sqrt(((_1649 * _1649) + (_1648 * _1648)) + (_1650 * _1650))) * cbSceneParam._m0[33u].y;
        float _3773 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1790 = (isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1730 + _1713) / _1725, (_1732 + _1717) / _1725), _1735), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1732 + _1713) / _1725, (_1717 - _1730) / _1725), _1735), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1713 - _1730) / _1725, (_1717 - _1732) / _1725), _1735), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1713 - _1732) / _1725, (_1730 + _1717) / _1725), _1735), 0.0)).x), vec4(0.25)));
        _1797 = 1.0 - (_1790 * cbSceneParam._m0[34u].x);
        _1798 = 1.0 - (_1790 * cbSceneParam._m0[34u].y);
        _1799 = 1.0 - (_1790 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1797 = 1.0;
        _1798 = 1.0;
        _1799 = 1.0;
    }
    float _1863;
    float _1865;
    float _1867;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1851 = fma(_1647, cbSceneParam._m0[63u].w, fma(_1643, cbSceneParam._m0[63u].z, fma(_1639, cbSceneParam._m0[63u].y, _1635 * cbSceneParam._m0[63u].x)));
        float _1852 = fma(_1647, cbSceneParam._m0[60u].w, fma(_1643, cbSceneParam._m0[60u].z, fma(_1639, cbSceneParam._m0[60u].y, _1635 * cbSceneParam._m0[60u].x))) / _1851;
        float _1853 = fma(_1647, cbSceneParam._m0[61u].w, fma(_1643, cbSceneParam._m0[61u].z, fma(_1639, cbSceneParam._m0[61u].y, _1635 * cbSceneParam._m0[61u].x))) / _1851;
        float frontier_phi_42_41_ladder;
        float frontier_phi_42_41_ladder_1;
        float frontier_phi_42_41_ladder_2;
        if ((((_1852 >= cbSceneParam._m0[64u].x) && (_1853 >= cbSceneParam._m0[64u].y)) && (_1852 <= cbSceneParam._m0[64u].z)) && (_1853 <= cbSceneParam._m0[64u].w))
        {
            float _2140 = fma(_1647, cbSceneParam._m0[62u].w, fma(_1643, cbSceneParam._m0[62u].z, fma(_1639, cbSceneParam._m0[62u].y, _1635 * cbSceneParam._m0[62u].x))) / _1851;
            float _2144 = isnan(cbSceneParam._m0[41u].w) ? _2140 : (isnan(_2140) ? cbSceneParam._m0[41u].w : max(_2140, cbSceneParam._m0[41u].w));
            float _2187 = (cbSceneParam._m0[33u].x - sqrt(((_1649 * _1649) + (_1648 * _1648)) + (_1650 * _1650))) * cbSceneParam._m0[33u].y;
            float _3789 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
            float _2194 = (isnan(1.0) ? _3789 : (isnan(_3789) ? 1.0 : min(_3789, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1852, cbSceneParam._m0[33u].w + _1853), _2144), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1852, _1853 - cbSceneParam._m0[33u].z), _2144), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1852 - cbSceneParam._m0[33u].z, _1853 - cbSceneParam._m0[33u].w), _2144), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1852 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1853), _2144), 0.0)).x), vec4(0.25)));
            float _2198 = 1.0 - (_2194 * cbSceneParam._m0[34u].x);
            float _2199 = 1.0 - (_2194 * cbSceneParam._m0[34u].y);
            float _2200 = 1.0 - (_2194 * cbSceneParam._m0[34u].z);
            frontier_phi_42_41_ladder = isnan(_2199) ? _1798 : (isnan(_1798) ? _2199 : min(_1798, _2199));
            frontier_phi_42_41_ladder_1 = isnan(_2198) ? _1797 : (isnan(_1797) ? _2198 : min(_1797, _2198));
            frontier_phi_42_41_ladder_2 = isnan(_2200) ? _1799 : (isnan(_1799) ? _2200 : min(_1799, _2200));
        }
        else
        {
            frontier_phi_42_41_ladder = _1798;
            frontier_phi_42_41_ladder_1 = _1797;
            frontier_phi_42_41_ladder_2 = _1799;
        }
        _1863 = frontier_phi_42_41_ladder_1;
        _1865 = frontier_phi_42_41_ladder;
        _1867 = frontier_phi_42_41_ladder_2;
    }
    else
    {
        _1863 = _1797;
        _1865 = _1798;
        _1867 = _1799;
    }
    uvec4 _1872 = floatBitsToUint(cbInstanceData._m0[_551 + 5u]);
    uint _1874 = _1872.x * 14u;
    uint _1875 = _1874 + 13u;
    float _1880 = _577 + (-1.0);
    float _1883 = (cbLight._m0[_1875].x * _1880) + 1.0;
    float _1884 = (cbLight._m0[_1875].y * _1880) + 1.0;
    uint _1885 = _1874 + 5u;
    float _1891 = isnan(1.0) ? _1884 : (isnan(_1884) ? 1.0 : min(_1884, 1.0));
    uint _1895 = _1874 + 4u;
    float _1904 = isnan(1.0) ? _1883 : (isnan(_1883) ? 1.0 : min(_1883, 1.0));
    uint _1908 = _1874 | 1u;
    float _1919 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_475, _476, _477));
    float _1922 = dot(vec3(cbLight._m0[_1908].xyz), vec3(_475, _476, _477));
    float _3825 = isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0));
    float _3836 = isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0));
    float _1927 = (isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0))) * 0.3183098733425140380859375;
    float _1929 = (isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0))) * 0.3183098733425140380859375;
    float _1936 = ((cbLight._m0[_1885].x * _1891) * _1929) + (((cbLight._m0[_1895].x * _1863) * _1904) * _1927);
    float _1937 = ((_1891 * cbLight._m0[_1885].y) * _1929) + (((cbLight._m0[_1895].y * _1865) * _1904) * _1927);
    float _1938 = ((_1891 * cbLight._m0[_1885].z) * _1929) + (((cbLight._m0[_1895].z * _1867) * _1904) * _1927);
    uint _1940 = _1874 + 8u;
    float _1953 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1874].w)) * _478) * 0.949999988079071044921875);
    float _1954 = _1953 * _1953;
    float _1955 = cbLight._m0[_1874].x + _502;
    float _1956 = cbLight._m0[_1874].y + _503;
    float _1957 = cbLight._m0[_1874].z + _504;
    float _1961 = inversesqrt(dot(vec3(_1955, _1956, _1957), vec3(_1955, _1956, _1957)));
    float _1962 = _1961 * _1955;
    float _1963 = _1961 * _1956;
    float _1964 = _1961 * _1957;
    float _1965 = dot(vec3(_475, _476, _477), vec3(cbLight._m0[_1874].xyz));
    float _3847 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
    float _1968 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
    float _3858 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _1969 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
    float _1970 = dot(vec3(_475, _476, _477), vec3(_1962, _1963, _1964));
    float _3869 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
    float _1973 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
    float _1974 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_1962, _1963, _1964));
    float _3880 = isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0));
    float _1978 = _1954 * _1954;
    float _1982 = ((_1973 * _1973) * (_1978 + (-1.0))) + 1.0;
    float _1993 = (exp2(log2(1.0 - (isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1994 = 1.0 - _1954;
    float _2005 = (0.5 / (((_1969 * ((_1968 * _1994) + _1954)) + 9.9999999392252902907785028219223e-09) + (((_1969 * _1994) + _1954) * _1968))) * _1968;
    float _3891 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0));
    float _2007 = (isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0))) * (_1978 / ((_1982 * _1982) * 3.141590118408203125));
    uint _2021 = _1874 + 9u;
    float _2032 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1908].w)) * _478) * 0.949999988079071044921875);
    float _2033 = _2032 * _2032;
    float _2034 = cbLight._m0[_1908].x + _502;
    float _2035 = cbLight._m0[_1908].y + _503;
    float _2036 = cbLight._m0[_1908].z + _504;
    float _2040 = inversesqrt(dot(vec3(_2034, _2035, _2036), vec3(_2034, _2035, _2036)));
    float _2041 = _2040 * _2034;
    float _2042 = _2040 * _2035;
    float _2043 = _2040 * _2036;
    float _2044 = dot(vec3(_475, _476, _477), vec3(cbLight._m0[_1908].xyz));
    float _3902 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2047 = isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0));
    float _2048 = dot(vec3(_475, _476, _477), vec3(_2041, _2042, _2043));
    float _3913 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _2051 = isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0));
    float _2052 = dot(vec3(cbLight._m0[_1908].xyz), vec3(_2041, _2042, _2043));
    float _3924 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2056 = _2033 * _2033;
    float _2060 = ((_2051 * _2051) * (_2056 + (-1.0))) + 1.0;
    float _2069 = (exp2(log2(1.0 - (isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2070 = 1.0 - _2033;
    float _2080 = (0.5 / (((_1969 * ((_2047 * _2070) + _2033)) + 9.9999999392252902907785028219223e-09) + (((_1969 * _2070) + _2033) * _2047))) * _2047;
    float _3935 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    float _2082 = (isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0))) * (_2056 / ((_2060 * _2060) * 3.141590118408203125));
    float _2092 = (((_2069 * cbLight._m0[_2021].x) * _2082) * _1891) + ((((cbLight._m0[_1940].x * _1863) * _1993) * _2007) * _1904);
    float _2093 = (((_2069 * cbLight._m0[_2021].y) * _2082) * _1891) + ((((cbLight._m0[_1940].y * _1865) * _1993) * _2007) * _1904);
    float _2094 = (((_2069 * cbLight._m0[_2021].z) * _2082) * _1891) + ((((cbLight._m0[_1940].z * _1867) * _1993) * _2007) * _1904);
    float _2257;
    float _2259;
    float _2261;
    float _2263;
    float _2265;
    float _2267;
    if (_1872.y == 0u)
    {
        uvec4 _2212 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2213 = _2212.x;
        uint _2224 = uint((float(_2212.y) * floor(float(uint(cbSceneParam._m0[85u].y * _511) / _2213))) + floor(float(uint(cbSceneParam._m0[85u].x * _510) / _2213)));
        float _2234 = (log2(_1650 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2235 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
        uint _2238 = uint(isnan(14.0) ? _2235 : (isnan(_2235) ? 14.0 : min(_2235, 14.0)));
        uvec4 _2243 = texelFetch(g_lightClusterGridBuffer, int(((_2238 << 2u) + (_2224 << 6u)) >> 2u));
        uint _2244 = _2243.x;
        uint _2245 = _2212.z;
        float _2368;
        float _2370;
        float _2372;
        float _2374;
        float _2376;
        float _2378;
        if (((((1u << ((_2245 >> 4u) & 15u)) + 4294967295u) & _2244) == 0u) || ((_2245 & 240u) == 0u))
        {
            _2368 = 0.0;
            _2370 = 0.0;
            _2372 = 0.0;
            _2374 = 0.0;
            _2376 = 0.0;
            _2378 = 0.0;
        }
        else
        {
            float _2369;
            float _2371;
            float _2373;
            float _2375;
            float _2377;
            float _2379;
            float _2538 = 0.0;
            float _2539 = 0.0;
            float _2540 = 0.0;
            float _2541 = 0.0;
            float _2542 = 0.0;
            float _2543 = 0.0;
            uint _2544 = 0u;
            uint _2553;
            bool _2554;
            for (;;)
            {
                _2553 = texelFetch(g_lightClassification, int((((_2238 << 5u) + (_2224 << 9u)) + (_2544 << 2u)) >> 2u)).x;
                _2554 = _2553 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2554)
                {
                    frontier_phi_66_pred = _2539;
                    frontier_phi_66_pred_1 = _2538;
                    frontier_phi_66_pred_2 = _2540;
                    frontier_phi_66_pred_3 = _2543;
                    frontier_phi_66_pred_4 = _2542;
                    frontier_phi_66_pred_5 = _2541;
                }
                else
                {
                    float _2683;
                    float _2684;
                    float _2685;
                    float _2686;
                    float _2687;
                    float _2688;
                    uint _2689;
                    _2683 = _2538;
                    _2684 = _2539;
                    _2685 = _2540;
                    _2686 = _2541;
                    _2687 = _2542;
                    _2688 = _2543;
                    _2689 = _2553;
                    float _2615;
                    float _2616;
                    float _2617;
                    float _2618;
                    float _2619;
                    float _2620;
                    for (;;)
                    {
                        uint _2693 = uint(findLSB(_2689)) + (_2544 << 5u);
                        uint _2690 = (_2689 + 4294967295u) & _2689;
                        uint _2695 = _2693 * 48u;
                        vec4 _2709 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2695)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 3u)).x));
                        uint _2715 = (_2693 * 48u) + 4u;
                        vec4 _2728 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2715)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 3u)).x));
                        uint _2734 = (_2693 * 48u) + 8u;
                        vec3 _2745 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2734)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 2u)).x));
                        float _2749 = _2709.x - _1648;
                        float _2750 = _2709.y - _1649;
                        float _2751 = _2709.z - _1650;
                        float _2752 = dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751));
                        float _2755 = inversesqrt(_2752);
                        float _2756 = _2755 * _2749;
                        float _2757 = _2755 * _2750;
                        float _2758 = _2755 * _2751;
                        float _2759 = dot(vec3(_532, _535, _538), vec3(_2756, _2757, _2758));
                        float _2764 = 1.0 - (_2752 * _2709.w);
                        float _3956 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
                        float _2765 = isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0));
                        float _2766 = sqrt(_2752) * _2728.w;
                        float _2769 = 1.39999997615814208984375 / (_2766 + 1.39999997615814208984375);
                        float _2770 = _2769 * _2769;
                        float _2773 = ((1.0 - _2770) * _2759) + _2770;
                        float _2776 = _2766 * _2766;
                        float _2780 = ((isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0))) * _2765) / ((_2776 * 0.699999988079071044921875) + 1.0);
                        float _2784 = (-0.0) - _1648;
                        float _2785 = (-0.0) - _1649;
                        float _2786 = (-0.0) - _1650;
                        float _2790 = inversesqrt(dot(vec3(_2784, _2785, _2786), vec3(_2784, _2785, _2786)));
                        float _2791 = _2790 * _2784;
                        float _2792 = _2790 * _2785;
                        float _2793 = _2790 * _2786;
                        float _2800 = exp2(log2(1.0 / ((_2776 * 3.5) + 5.0)) * 0.25);
                        float _2801 = 1.0 - _593;
                        float _2808 = sqrt(1.0 - ((1.0 - (_2801 * _2801)) * (1.0 - (_2800 * _2800))));
                        float _2809 = _2808 * _2808;
                        float _2810 = _2809 * _2809;
                        float _2811 = _2791 + _2756;
                        float _2812 = _2792 + _2757;
                        float _2813 = _2793 + _2758;
                        float _2817 = inversesqrt(dot(vec3(_2811, _2812, _2813), vec3(_2811, _2812, _2813)));
                        float _2821 = dot(vec3(_532, _535, _538), vec3(_2791, _2792, _2793));
                        float _3972 = isnan(0.0) ? _2821 : (isnan(_2821) ? 0.0 : max(_2821, 0.0));
                        float _2824 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
                        float _2825 = dot(vec3(_532, _535, _538), vec3(_2817 * _2811, _2817 * _2812, _2817 * _2813));
                        float _3983 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
                        float _2828 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
                        float _2832 = ((_2828 * _2828) * (_2810 + (-1.0))) + 1.0;
                        float _2833 = _2769 * _2809;
                        float _2834 = _2833 * _2833;
                        float _2837 = ((1.0 - _2834) * _2759) + _2834;
                        float _3994 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
                        float _2838 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
                        float _2839 = 1.0 - _2809;
                        float _2849 = (0.5 / (((_2838 * ((_2824 * _2839) + _2809)) + 9.9999999392252902907785028219223e-09) + (((_2838 * _2839) + _2809) * _2824))) * _2838;
                        float _4005 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
                        float _2860 = (((_2810 * 3.1415927410125732421875) * (isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0)))) / ((_2832 * _2832) * ((_2776 * 2.1991131305694580078125) + 3.141590118408203125))) * _2765;
                        _2618 = (_2780 * _2728.x) + _2686;
                        _2619 = (_2780 * _2728.y) + _2687;
                        _2620 = (_2780 * _2728.z) + _2688;
                        _2615 = (_2860 * _2745.x) + _2683;
                        _2616 = (_2860 * _2745.y) + _2684;
                        _2617 = (_2860 * _2745.z) + _2685;
                        if (_2690 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2683 = _2615;
                            _2684 = _2616;
                            _2685 = _2617;
                            _2686 = _2618;
                            _2687 = _2619;
                            _2688 = _2620;
                            _2689 = _2690;
                        }
                    }
                    frontier_phi_66_pred = _2616;
                    frontier_phi_66_pred_1 = _2615;
                    frontier_phi_66_pred_2 = _2617;
                    frontier_phi_66_pred_3 = _2620;
                    frontier_phi_66_pred_4 = _2619;
                    frontier_phi_66_pred_5 = _2618;
                }
                _2371 = frontier_phi_66_pred;
                _2369 = frontier_phi_66_pred_1;
                _2373 = frontier_phi_66_pred_2;
                _2379 = frontier_phi_66_pred_3;
                _2377 = frontier_phi_66_pred_4;
                _2375 = frontier_phi_66_pred_5;
                uint _2545 = _2544 + 1u;
                if (_2545 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2538 = _2369;
                    _2539 = _2371;
                    _2540 = _2373;
                    _2541 = _2375;
                    _2542 = _2377;
                    _2543 = _2379;
                    _2544 = _2545;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2368 = _2369;
            _2370 = _2371;
            _2372 = _2373;
            _2374 = _2375;
            _2376 = _2377;
            _2378 = _2379;
        }
        uvec4 _2382 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2383 = _2382.z;
        uint _2385 = (_2383 >> 8u) & 15u;
        float _2506;
        float _2508;
        float _2510;
        float _2512;
        float _2514;
        float _2516;
        if (((4294967295u << _2385) & _2244) == 0u)
        {
            _2506 = _2368;
            _2508 = _2370;
            _2510 = _2372;
            _2512 = _2374;
            _2514 = _2376;
            _2516 = _2378;
        }
        else
        {
            float _2531 = inversesqrt(dot(vec3(_1648, _1649, _1650), vec3(_1648, _1649, _1650)));
            float _2532 = _2531 * _1648;
            float _2533 = _2531 * _1649;
            float _2534 = _2531 * _1650;
            float frontier_phi_59_60_ladder;
            float frontier_phi_59_60_ladder_1;
            float frontier_phi_59_60_ladder_2;
            float frontier_phi_59_60_ladder_3;
            float frontier_phi_59_60_ladder_4;
            float frontier_phi_59_60_ladder_5;
            if (_2385 < ((_2383 >> 12u) & 15u))
            {
                float _2507;
                float _2509;
                float _2511;
                float _2513;
                float _2515;
                float _2517;
                float _2666 = _2368;
                float _2667 = _2370;
                float _2668 = _2372;
                float _2669 = _2374;
                float _2670 = _2376;
                float _2671 = _2378;
                uint _2672 = _2385;
                uint _2681;
                bool _2682;
                for (;;)
                {
                    _2681 = texelFetch(g_lightClassification, int((((_2238 << 5u) + (_2224 << 9u)) + (_2672 << 2u)) >> 2u)).x;
                    _2682 = _2681 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2682)
                    {
                        frontier_phi_72_pred = _2667;
                        frontier_phi_72_pred_1 = _2666;
                        frontier_phi_72_pred_2 = _2671;
                        frontier_phi_72_pred_3 = _2670;
                        frontier_phi_72_pred_4 = _2669;
                        frontier_phi_72_pred_5 = _2668;
                    }
                    else
                    {
                        float _2865;
                        float _2866;
                        float _2867;
                        float _2868;
                        float _2869;
                        float _2870;
                        float _3159;
                        float _3160;
                        float _3161;
                        float _3162;
                        float _3163;
                        float _3164;
                        float _2878 = _2666;
                        float _2879 = _2667;
                        float _2880 = _2668;
                        float _2881 = _2669;
                        float _2882 = _2670;
                        float _2883 = _2671;
                        uint _2884 = _2681;
                        uint _2885;
                        vec4 _2910;
                        float _2911;
                        vec4 _2926;
                        vec3 _2938;
                        vec4 _2953;
                        vec4 _2969;
                        float _3015;
                        bool _3016;
                        for (;;)
                        {
                            uint _2895 = ((_2672 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2884));
                            _2885 = (_2884 + 4294967295u) & _2884;
                            uint _2897 = _2895 * 40u;
                            _2910 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2897)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 3u)).x));
                            _2911 = _2910.w;
                            uint _2913 = (_2895 * 40u) + 4u;
                            _2926 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2913)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2913 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2913 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2913 + 3u)).x));
                            uint _2928 = (_2895 * 40u) + 8u;
                            _2938 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2928)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2928 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2928 + 2u)).x));
                            uint _2940 = (_2895 * 40u) + 16u;
                            _2953 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2940)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 3u)).x));
                            uint _2956 = (_2895 * 40u) + 20u;
                            _2969 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2956)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2956 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2956 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2956 + 3u)).x));
                            uint _2971 = (_2895 * 40u) + 24u;
                            vec4 _2984 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2971)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2971 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2971 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2971 + 3u)).x));
                            uint _2990 = (_2895 * 40u) + 28u;
                            vec4 _3003 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2990)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2990 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2990 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2990 + 3u)).x));
                            _3015 = fma(_1650, _3003.z, fma(_1649, _3003.y, _3003.x * _1648)) + _3003.w;
                            _3016 = !((fma(_1650, _2984.z, fma(_1649, _2984.y, _2984.x * _1648)) + _2984.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3016)
                            {
                                float _3043 = _2910.x - _1648;
                                float _3044 = _2910.y - _1649;
                                float _3045 = _2910.z - _1650;
                                float _3046 = dot(vec3(_3043, _3044, _3045), vec3(_3043, _3044, _3045));
                                float _3049 = inversesqrt(_3046);
                                float _3050 = _3049 * _3043;
                                float _3051 = _3049 * _3044;
                                float _3052 = _3049 * _3045;
                                float _3056 = 1.0 - (_3046 / (_2911 * _2911));
                                float _4016 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
                                float _3057 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
                                float _3061 = sqrt(_3046) * _2926.w;
                                float _3063 = 1.39999997615814208984375 / (_3061 + 1.39999997615814208984375);
                                float _3064 = _3063 * _3063;
                                float _3067 = ((1.0 - _3064) * dot(vec3(_3050, _3051, _3052), vec3(_532, _535, _538))) + _3064;
                                float _3070 = _3061 * _3061;
                                float _3074 = (fma(_1650, _2953.z, fma(_1649, _2953.y, _2953.x * _1648)) + _2953.w) / _3015;
                                float _3075 = (fma(_1650, _2969.z, fma(_1649, _2969.y, _2969.x * _1648)) + _2969.w) / _3015;
                                float _3079 = 1.0 - dot(vec2(_3074, _3075), vec2(_3074, _3075));
                                float _4032 = isnan(0.0) ? _3079 : (isnan(_3079) ? 0.0 : max(_3079, 0.0));
                                float _3080 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
                                float _3081 = _3080 * (((isnan(0.0) ? _3067 : (isnan(_3067) ? 0.0 : max(_3067, 0.0))) * _3057) / ((_3070 * 0.699999988079071044921875) + 1.0));
                                float _3093 = exp2(log2(1.0 / ((_3070 * 3.5) + 5.0)) * 0.25);
                                float _3094 = 1.0 - _593;
                                float _3101 = sqrt(1.0 - ((1.0 - (_3094 * _3094)) * (1.0 - (_3093 * _3093))));
                                float _3102 = _3101 * _3101;
                                float _3103 = _3102 * _3102;
                                float _3104 = _3050 - _2532;
                                float _3105 = _3051 - _2533;
                                float _3106 = _3052 - _2534;
                                float _3110 = inversesqrt(dot(vec3(_3104, _3105, _3106), vec3(_3104, _3105, _3106)));
                                float _3114 = dot(vec3(_532, _535, _538), vec3((-0.0) - _2532, (-0.0) - _2533, (-0.0) - _2534));
                                float _4043 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0));
                                float _3117 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
                                float _3118 = dot(vec3(_532, _535, _538), vec3(_3110 * _3104, _3110 * _3105, _3110 * _3106));
                                float _4054 = isnan(0.0) ? _3118 : (isnan(_3118) ? 0.0 : max(_3118, 0.0));
                                float _3121 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
                                float _3125 = ((_3121 * _3121) * (_3103 + (-1.0))) + 1.0;
                                float _3126 = _3063 * _3102;
                                float _3127 = _3126 * _3126;
                                float _3133 = ((1.0 - _3127) * dot(vec3(_532, _535, _538), vec3(_3050, _3051, _3052))) + _3127;
                                float _4065 = isnan(0.0) ? _3133 : (isnan(_3133) ? 0.0 : max(_3133, 0.0));
                                float _3134 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
                                float _3135 = 1.0 - _3102;
                                float _3145 = (0.5 / (((_3134 * ((_3117 * _3135) + _3102)) + 9.9999999392252902907785028219223e-09) + (((_3134 * _3135) + _3102) * _3117))) * _3134;
                                float _4076 = isnan(0.0) ? _3145 : (isnan(_3145) ? 0.0 : max(_3145, 0.0));
                                float _3155 = (_3080 * _3057) * (((_3103 * 3.1415927410125732421875) * (isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0)))) / ((_3125 * _3125) * ((_3070 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3155 * _2938.y;
                                frontier_phi_78_pred_1 = _3155 * _2938.x;
                                frontier_phi_78_pred_2 = _3081 * _2926.z;
                                frontier_phi_78_pred_3 = _3081 * _2926.y;
                                frontier_phi_78_pred_4 = _3081 * _2926.x;
                                frontier_phi_78_pred_5 = _3155 * _2938.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3160 = frontier_phi_78_pred;
                            _3159 = frontier_phi_78_pred_1;
                            _3164 = frontier_phi_78_pred_2;
                            _3163 = frontier_phi_78_pred_3;
                            _3162 = frontier_phi_78_pred_4;
                            _3161 = frontier_phi_78_pred_5;
                            _2868 = _3162 + _2881;
                            _2869 = _3163 + _2882;
                            _2870 = _3164 + _2883;
                            _2865 = _3159 + _2878;
                            _2866 = _3160 + _2879;
                            _2867 = _3161 + _2880;
                            if (_2885 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2878 = _2865;
                                _2879 = _2866;
                                _2880 = _2867;
                                _2881 = _2868;
                                _2882 = _2869;
                                _2883 = _2870;
                                _2884 = _2885;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2866;
                        frontier_phi_72_pred_1 = _2865;
                        frontier_phi_72_pred_2 = _2870;
                        frontier_phi_72_pred_3 = _2869;
                        frontier_phi_72_pred_4 = _2868;
                        frontier_phi_72_pred_5 = _2867;
                    }
                    _2509 = frontier_phi_72_pred;
                    _2507 = frontier_phi_72_pred_1;
                    _2517 = frontier_phi_72_pred_2;
                    _2515 = frontier_phi_72_pred_3;
                    _2513 = frontier_phi_72_pred_4;
                    _2511 = frontier_phi_72_pred_5;
                    uint _2673 = _2672 + 1u;
                    if (_2673 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2666 = _2507;
                        _2667 = _2509;
                        _2668 = _2511;
                        _2669 = _2513;
                        _2670 = _2515;
                        _2671 = _2517;
                        _2672 = _2673;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_59_60_ladder = _2517;
                frontier_phi_59_60_ladder_1 = _2513;
                frontier_phi_59_60_ladder_2 = _2511;
                frontier_phi_59_60_ladder_3 = _2509;
                frontier_phi_59_60_ladder_4 = _2507;
                frontier_phi_59_60_ladder_5 = _2515;
            }
            else
            {
                frontier_phi_59_60_ladder = _2378;
                frontier_phi_59_60_ladder_1 = _2374;
                frontier_phi_59_60_ladder_2 = _2372;
                frontier_phi_59_60_ladder_3 = _2370;
                frontier_phi_59_60_ladder_4 = _2368;
                frontier_phi_59_60_ladder_5 = _2376;
            }
            _2506 = frontier_phi_59_60_ladder_4;
            _2508 = frontier_phi_59_60_ladder_3;
            _2510 = frontier_phi_59_60_ladder_2;
            _2512 = frontier_phi_59_60_ladder_1;
            _2514 = frontier_phi_59_60_ladder_5;
            _2516 = frontier_phi_59_60_ladder;
        }
        float _2521 = isnan(1.0) ? _577 : (isnan(_577) ? 1.0 : min(_577, 1.0));
        _2257 = (_2521 * _2512) + _1936;
        _2259 = (_2521 * _2514) + _1937;
        _2261 = (_2521 * _2516) + _1938;
        _2263 = ((_2506 * 0.039999999105930328369140625) * _2521) + _2092;
        _2265 = ((_2508 * 0.039999999105930328369140625) * _2521) + _2093;
        _2267 = ((_2510 * 0.039999999105930328369140625) * _2521) + _2094;
    }
    else
    {
        _2257 = _1936;
        _2259 = _1937;
        _2261 = _1938;
        _2263 = _2092;
        _2265 = _2093;
        _2267 = _2094;
    }
    uint _2273 = _553 + uint(cbMatDynParam._m0[0u].w);
    float _4092 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _4103 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _4114 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _2298 = (((isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))) * (_2257 + ((isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0))) * _577))) + ((_2263 + ((isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0))) * _1383)) * cbPerFrame._m0[3u].x)) + (((_416 - (_416 * _286)) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2273].x);
    float _2300 = ((((_417 - (_417 * _286)) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_2273].y) + ((_2265 + ((isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0))) * _1383)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0))) * (_2259 + ((isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0))) * _577)));
    float _2302 = (((cbMtdParam._m0[9u].z * (_418 - (_418 * _286))) * cbInstanceData._m0[_2273].z) + ((_2267 + ((isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0))) * _1383)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_2261 + ((isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0))) * _577)));
    uint _2306 = _551 + 6u;
    float _2314 = _510 / cbSceneParam._m0[86u].x;
    float _2315 = _511 / cbSceneParam._m0[86u].y;
    vec4 _2329 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2314, _2315, (log2((isnan(cbSceneParam._m0[77u].w) ? _497 : (isnan(_497) ? cbSceneParam._m0[77u].w : min(_497, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2331 = _2329.x;
    float _2332 = _2329.y;
    float _2333 = _2329.z;
    float _2334 = _2329.w;
    float _2430;
    float _2432;
    float _2434;
    float _2436;
    if (_497 > cbSceneParam._m0[78u].w)
    {
        float _2393 = isnan(_497) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _497 : min(cbSceneParam._m0[80u].w, _497));
        float _2394 = _2393 / _497;
        float _2405 = _2394 * _259;
        float _2406 = _260 * _2394;
        float _2407 = (-0.0) - _2406;
        float _2408 = _2394 * _261;
        float _2410 = (cbSceneParam._m0[77u].w * _2407) / _2393;
        float _2411 = _2410 + cbSceneParam._m0[79u].w;
        float _2412 = cbSceneParam._m0[79u].w - _2406;
        float _2418 = sqrt(((_2405 * _2405) + (_2406 * _2406)) + (_2408 * _2408));
        float _2421 = (1.0 - (cbSceneParam._m0[77u].w / _2393)) * _2418;
        float _2426 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2428 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2628;
        if (abs((_2407 - _2410) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2628 = ((((_2411 > 0.0) ? exp2(_2426 * _2411) : (2.0 - exp2(_2428 * _2411))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2421;
        }
        else
        {
            float _2567 = 1.0 / cbSceneParam._m0[80u].x;
            float _2568 = isnan(_2412) ? _2411 : (isnan(_2411) ? _2412 : max(_2411, _2412));
            float _2569 = isnan(_2412) ? _2411 : (isnan(_2411) ? _2412 : min(_2411, _2412));
            float _2578 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : min(_2568, 0.0));
            float _2579 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : min(_2569, 0.0));
            _2628 = ((abs(_2418 / _2407) * cbSceneParam._m0[80u].y) * ((((_2578 - _2579) * 2.0) - ((exp2(_2426 * (isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0)))) - exp2(_2426 * (isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0))))) * _2567)) - ((exp2(_2428 * _2578) - exp2(_2428 * _2579)) * _2567))) + (_2421 * cbSceneParam._m0[80u].z);
        }
        vec4 _2630 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2314, _2315, 1.0), 0.0);
        float _2639 = exp2((_2628 * (-1.44269502162933349609375)) * (1.0 - _2630.w));
        float _2640 = log2(_2639);
        float _2656 = log2(_2334);
        _2430 = (exp2(_2656 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2640 * cbSceneParam._m0[78u].x)) * _2630.x) / cbSceneParam._m0[78u].x)) + _2331;
        _2432 = (exp2(_2656 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2640 * cbSceneParam._m0[78u].y)) * _2630.y) / cbSceneParam._m0[78u].y)) + _2332;
        _2434 = (exp2(_2656 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2640 * cbSceneParam._m0[78u].z)) * _2630.z) / cbSceneParam._m0[78u].z)) + _2333;
        _2436 = _2639 * _2334;
    }
    else
    {
        _2430 = _2331;
        _2432 = _2332;
        _2434 = _2333;
        _2436 = _2334;
    }
    float _2448 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2449 = _2448 == 3.0;
    float _2450 = log2(_2436);
    float _2457 = exp2(_2450 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0)));
    float _2458 = exp2(_2450 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0)));
    float _2459 = exp2(_2450 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0)));
    float _2468 = (_2448 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2468 * (_2449 ? _2457 : (_2457 + (cbSceneParam._m0[72u].w * _2430)));
    SV_Target.y = _2468 * (_2449 ? _2458 : (_2458 + (cbSceneParam._m0[72u].w * _2432)));
    SV_Target.z = _2468 * (_2449 ? _2459 : (_2459 + (cbSceneParam._m0[72u].w * _2434)));
    SV_Target.w = cbInstanceData._m0[_2306].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2306].w;
}


