#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1095;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _190 = _189 * _182;
    float _191 = _189 * _183;
    float _192 = _189 * _184;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _282 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _288 = _282.w;
    float _301 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _288) + cbMtdParam._m0[11u].x) * _282.x;
    float _303 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _288) + cbMtdParam._m0[11u].y) * _282.y;
    float _305 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _288) + cbMtdParam._m0[11u].z) * _282.z;
    float _331 = cbMtdParam._m0[22u].y + _261;
    float _332 = cbMtdParam._m0[22u].z + _262;
    float _333 = cbMtdParam._m0[22u].w + _263;
    float _347 = (-0.0) - dot(vec3(_331, _332, _333), vec3(_190, _191, _192));
    float _348 = (-0.0) - dot(vec3(_331, _332, _333), vec3(_204, _205, _206));
    float _349 = (-0.0) - dot(vec3(_331, _332, _333), vec3((-0.0) - _197, (-0.0) - _198, (-0.0) - _199));
    float _353 = inversesqrt(dot(vec3(_347, _348, _349), vec3(_347, _348, _349)));
    float _354 = _353 * _349;
    float _356 = (cbMtdParam._m0[19u].x * _347) * _353;
    float _358 = (cbMtdParam._m0[18u].w * _348) * _353;
    float _359 = fract(TEXCOORD.x);
    float _360 = fract(TEXCOORD.y);
    float _366;
    if (_356 > 0.0)
    {
        _366 = (1.0 - _359) / _356;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _359) / _356;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _366 = frontier_phi_3_2_ladder;
    }
    float _374;
    if (_358 > 0.0)
    {
        _374 = (1.0 - _360) / _358;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_358 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _360) / _358;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _374 = frontier_phi_7_6_ladder;
    }
    bool _376 = _354 > 0.0;
    float _378 = _376 ? (cbMtdParam._m0[15u].x / _354) : 5000.0;
    float _379 = isnan(_374) ? _366 : (isnan(_366) ? _374 : min(_366, _374));
    float _380 = isnan(_378) ? _379 : (isnan(_379) ? _378 : min(_379, _378));
    float _384 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _385 = _359 + (-0.5);
    float _388 = _360 + (-0.5);
    float _391 = ((_380 * _354) + _384) / _384;
    vec4 _416 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_385 + (_380 * _356)) / _391) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_388 + (_380 * _358)) / _391) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _418 = _416.x;
    float _419 = _416.y;
    float _420 = _416.z;
    float _432 = (_418 - (_418 * _288)) * cbMtdParam._m0[9u].x;
    float _433 = (_419 - (_419 * _288)) * cbMtdParam._m0[9u].y;
    float _434 = cbMtdParam._m0[9u].z * (_420 - (_420 * _288));
    float _456 = (cbMtdParam._m0[21u].x * _347) * _353;
    float _458 = (cbMtdParam._m0[20u].w * _348) * _353;
    bool _459 = _456 > 0.0;
    float _464;
    if (_459)
    {
        _464 = (1.0 - _359) / _456;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _359) / _456;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _464 = frontier_phi_11_10_ladder;
    }
    bool _466 = _458 > 0.0;
    float _471;
    if (_466)
    {
        _471 = (1.0 - _360) / _458;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_458 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _360) / _458;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _471 = frontier_phi_15_14_ladder;
    }
    float _474 = _376 ? (cbMtdParam._m0[16u].z / _354) : 5000.0;
    float _475 = isnan(_471) ? _464 : (isnan(_464) ? _471 : min(_464, _471));
    float _476 = isnan(_474) ? _475 : (isnan(_475) ? _474 : min(_475, _474));
    float _480 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _484 = ((_476 * _354) + _480) / _480;
    float _489 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _491 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _507 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_385 + (_476 * _456)) / _484) + 0.5) + _489) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_388 + (_476 * _458)) / _484) + 0.5) + _491) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _512 = _507.x * cbMtdParam._m0[10u].x;
    float _513 = _507.y * cbMtdParam._m0[10u].y;
    float _514 = _507.z * cbMtdParam._m0[10u].z;
    float _522;
    if (_459)
    {
        _522 = (1.0 - _359) / _456;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _359) / _456;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _522 = frontier_phi_19_18_ladder;
    }
    float _528;
    if (_466)
    {
        _528 = (1.0 - _360) / _458;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_458 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _360) / _458;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _528 = frontier_phi_23_22_ladder;
    }
    float _530 = isnan(_528) ? _522 : (isnan(_522) ? _528 : min(_522, _528));
    float _531 = isnan(_474) ? _530 : (isnan(_530) ? _474 : min(_530, _474));
    float _538 = ((_531 * _354) + _480) / _480;
    vec4 _552 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_385 + (_531 * _456)) / _538) + 0.5) + _489) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_388 + (_531 * _458)) / _538) + 0.5) + _491) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _554 = _552.w;
    float _556 = _554 - (_554 * _288);
    float _567 = 0.5 - (_288 * 0.5);
    float _577 = (((_432 - _301) + (_556 * ((_512 - _432) - (_512 * _288)))) * _567) + _301;
    float _578 = (((_433 - _303) + (_556 * ((_513 - _433) - (_513 * _288)))) * _567) + _303;
    float _579 = (((_434 - _305) + (_556 * ((_514 - _434) - (_514 * _288)))) * _567) + _305;
    vec4 _591 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _599 = (_591.x * 2.0) + (-1.0);
    float _601 = (_591.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_599, _601), vec2(_599, _601));
    float _3489 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _607 = sqrt(1.0 - (isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0))));
    float _608 = _591.z * _288;
    float _611 = fma(_607, _197, fma(_601, _204, _599 * _190));
    float _614 = fma(_607, _198, fma(_601, _205, _599 * _191));
    float _617 = fma(_607, _199, fma(_601, _206, _599 * _192));
    float _621 = inversesqrt(dot(vec3(_611, _614, _617), vec3(_611, _614, _617)));
    float _622 = _621 * _611;
    float _623 = _621 * _614;
    float _624 = _621 * _617;
    float _3500 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _625 = isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0));
    float _3511 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _3522 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _3533 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _644 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _648 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _649 = _261 * _648;
    float _650 = _262 * _648;
    float _651 = _263 * _648;
    float _657 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _658 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _679 = fma(_624, cbSceneParam._m0[5u].z, fma(_623, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _622));
    float _682 = fma(_624, cbSceneParam._m0[6u].z, fma(_623, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _622));
    float _685 = fma(_624, cbSceneParam._m0[7u].z, fma(_623, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _622));
    uint _698 = uint(roundEven(NORMAL.w)) * 13u;
    uint _701 = (_698 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _707 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0)))) * cbInstanceData._m0[_701].x;
    float _708 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0)))) * cbInstanceData._m0[_701].y;
    float _709 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3533 : (isnan(_3533) ? 1.0 : min(_3533, 1.0)))) * cbInstanceData._m0[_701].z;
    float _3544 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _710 = isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0));
    float _3555 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _711 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
    float _3566 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _712 = isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0));
    vec4 _721 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _657, cbSceneParam._m0[86u].y * _658));
    float _724 = _721.x * TEXCOORD.z;
    float _725 = dot(vec3(_622, _623, _624), vec3(_649, _650, _651));
    float _728 = _725 * 2.0;
    float _732 = (_728 * _622) - _649;
    float _733 = (_728 * _623) - _650;
    float _734 = (_728 * _624) - _651;
    float _738 = abs(dot(vec3(_649, _650, _651), vec3(_622, _623, _624)));
    float _3577 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _740 = sqrt(_625);
    float _753 = exp2((_740 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_740 * 3.0));
    float _785 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _789 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _793 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1094;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    float _1107;
    float _1108;
    float _1109;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _821 = fma(_793, cbModelParam._m0[26u].z, fma(_789, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _785));
        float _825 = fma(_793, cbModelParam._m0[27u].z, fma(_789, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _785));
        float _829 = fma(_793, cbModelParam._m0[28u].z, fma(_789, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _785));
        float _852 = _785 + _622;
        float _853 = _789 + _623;
        float _854 = _793 + _624;
        float _864 = fma(_854, cbModelParam._m0[26u].z, fma(_853, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _852)) - _821;
        float _865 = fma(_854, cbModelParam._m0[27u].z, fma(_853, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _852)) - _825;
        float _866 = fma(_854, cbModelParam._m0[28u].z, fma(_853, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _852)) - _829;
        float _870 = inversesqrt(dot(vec3(_864, _865, _866), vec3(_864, _865, _866)));
        float _883 = ((_870 * _864) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_821 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _884 = ((_870 * _865) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_825 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _885 = ((_870 * _866) / cbModelParam._m0[34u].z) + ((((((_829 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _888 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _895 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _902 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _909 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        float _922 = exp2((_888.w + (-0.5)) * 20.0) * 2.0;
        float _923 = _922 * (_888.x + (-0.5));
        float _924 = _922 * (_888.y + (-0.5));
        float _925 = _922 * (_888.z + (-0.5));
        float _932 = exp2((_895.w + (-0.5)) * 20.0) * 2.0;
        float _933 = _932 * (_895.x + (-0.5));
        float _934 = _932 * (_895.y + (-0.5));
        float _935 = _932 * (_895.z + (-0.5));
        float _942 = exp2((_902.w + (-0.5)) * 20.0) * 2.0;
        float _943 = _942 * (_902.x + (-0.5));
        float _944 = _942 * (_902.y + (-0.5));
        float _945 = _942 * (_902.z + (-0.5));
        float _952 = exp2((_909.w + (-0.5)) * 20.0) * 2.0;
        float _953 = _952 * (_909.x + (-0.5));
        float _954 = _952 * (_909.y + (-0.5));
        float _955 = _952 * (_909.z + (-0.5));
        float _956 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        float _957 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _958 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _959 = _923 * 0.5;
        float _960 = _933 * 0.5;
        float _961 = _943 * 0.5;
        float _962 = dot(vec3(_959, _960, _961), vec3(_959, _960, _961));
        float _967 = (_962 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_962);
        float _976 = (dot(vec3(_622, _623, _624), vec3(_967 * _959, _967 * _960, _967 * _961)) + 1.0) * 0.5;
        float _3603 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _986 = sqrt(((_960 * _960) + (_959 * _959)) + (_961 * _961)) / (_956 + 9.9999997473787516355514526367188e-06);
        float _3614 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _987 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
        float _988 = _987 * 2.0;
        float _992 = (1.0 - _987) / (_987 + 1.0);
        float _3625 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
        float _993 = isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0));
        float _1002 = ((((1.0 - _993) * (_988 + 2.0)) * exp2(log2(isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0))) * (_988 + 1.0))) + _993) * _956;
        float _1003 = _924 * 0.5;
        float _1004 = _934 * 0.5;
        float _1005 = _944 * 0.5;
        float _1006 = dot(vec3(_1003, _1004, _1005), vec3(_1003, _1004, _1005));
        float _1011 = (_1006 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1006);
        float _1019 = (dot(vec3(_622, _623, _624), vec3(_1011 * _1003, _1011 * _1004, _1011 * _1005)) + 1.0) * 0.5;
        float _3636 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1028 = sqrt(((_1004 * _1004) + (_1003 * _1003)) + (_1005 * _1005)) / (_957 + 9.9999997473787516355514526367188e-06);
        float _3647 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1029 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
        float _1030 = _1029 * 2.0;
        float _1034 = (1.0 - _1029) / (_1029 + 1.0);
        float _3658 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
        float _1035 = isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0));
        float _1044 = ((((1.0 - _1035) * (_1030 + 2.0)) * exp2(log2(isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0))) * (_1030 + 1.0))) + _1035) * _957;
        float _1045 = _925 * 0.5;
        float _1046 = _935 * 0.5;
        float _1047 = _945 * 0.5;
        float _1048 = dot(vec3(_1045, _1046, _1047), vec3(_1045, _1046, _1047));
        float _1053 = (_1048 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1048);
        float _1061 = (dot(vec3(_622, _623, _624), vec3(_1053 * _1045, _1053 * _1046, _1053 * _1047)) + 1.0) * 0.5;
        float _3669 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1070 = sqrt(((_1046 * _1046) + (_1045 * _1045)) + (_1047 * _1047)) / (_958 + 9.9999997473787516355514526367188e-06);
        float _3680 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1071 = isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0));
        float _1072 = _1071 * 2.0;
        float _1076 = (1.0 - _1071) / (_1071 + 1.0);
        float _3691 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1077 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
        float _1086 = ((((1.0 - _1077) * (_1072 + 2.0)) * exp2(log2(isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0))) * (_1072 + 1.0))) + _1077) * _958;
        _1094 = _925;
        _1096 = _924;
        _1097 = _923;
        _1098 = _935;
        _1099 = _934;
        _1100 = _933;
        _1101 = _945;
        _1102 = _944;
        _1103 = _943;
        _1104 = _958;
        _1105 = _957;
        _1106 = _956;
        _1107 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0)));
        _1108 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0)));
        _1109 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0)));
    }
    else
    {
        _1094 = _1095;
        _1096 = _1095;
        _1097 = _1095;
        _1098 = _1095;
        _1099 = _1095;
        _1100 = _1095;
        _1101 = _1095;
        _1102 = _1095;
        _1103 = _1095;
        _1104 = _1095;
        _1105 = _1095;
        _1106 = _1095;
        _1107 = 0.0;
        _1108 = 0.0;
        _1109 = 0.0;
    }
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1135 = fma(_793, cbModelParam._m0[30u].z, fma(_789, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _785));
        float _1139 = fma(_793, cbModelParam._m0[31u].z, fma(_789, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _785));
        float _1143 = fma(_793, cbModelParam._m0[32u].z, fma(_789, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _785));
        float _1166 = _785 + _622;
        float _1167 = _789 + _623;
        float _1168 = _793 + _624;
        float _1178 = fma(_1168, cbModelParam._m0[30u].z, fma(_1167, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1166)) - _1135;
        float _1179 = fma(_1168, cbModelParam._m0[31u].z, fma(_1167, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1166)) - _1139;
        float _1180 = fma(_1168, cbModelParam._m0[32u].z, fma(_1167, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1166)) - _1143;
        float _1184 = inversesqrt(dot(vec3(_1178, _1179, _1180), vec3(_1178, _1179, _1180)));
        float _1197 = ((_1184 * _1178) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1135 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1198 = ((_1184 * _1179) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1139 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1199 = ((_1184 * _1180) / cbModelParam._m0[35u].z) + ((((((_1143 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1201 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1197, _1198, _1199), 0.0);
        vec4 _1208 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1197, _1198, _1199), 0.0);
        vec4 _1215 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1197, _1198, _1199), 0.0);
        vec4 _1222 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1197, _1198, _1199), 0.0);
        float _1234 = exp2((_1201.w + (-0.5)) * 20.0) * 2.0;
        float _1235 = _1234 * (_1201.x + (-0.5));
        float _1236 = _1234 * (_1201.y + (-0.5));
        float _1237 = _1234 * (_1201.z + (-0.5));
        float _1244 = exp2((_1208.w + (-0.5)) * 20.0) * 2.0;
        float _1245 = _1244 * (_1208.x + (-0.5));
        float _1246 = _1244 * (_1208.y + (-0.5));
        float _1247 = _1244 * (_1208.z + (-0.5));
        float _1254 = exp2((_1215.w + (-0.5)) * 20.0) * 2.0;
        float _1255 = _1254 * (_1215.x + (-0.5));
        float _1256 = _1254 * (_1215.y + (-0.5));
        float _1257 = _1254 * (_1215.z + (-0.5));
        float _1264 = exp2((_1222.w + (-0.5)) * 20.0) * 2.0;
        float _1265 = _1264 * (_1222.x + (-0.5));
        float _1266 = _1264 * (_1222.y + (-0.5));
        float _1267 = _1264 * (_1222.z + (-0.5));
        float _1268 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1269 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1270 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1271 = _1235 * 0.5;
        float _1272 = _1245 * 0.5;
        float _1273 = _1255 * 0.5;
        float _1274 = dot(vec3(_1271, _1272, _1273), vec3(_1271, _1272, _1273));
        float _1279 = (_1274 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1274);
        float _1287 = (dot(vec3(_622, _623, _624), vec3(_1279 * _1271, _1279 * _1272, _1279 * _1273)) + 1.0) * 0.5;
        float _3732 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1296 = sqrt(((_1272 * _1272) + (_1271 * _1271)) + (_1273 * _1273)) / (_1268 + 9.9999997473787516355514526367188e-06);
        float _3743 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1297 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
        float _1298 = _1297 * 2.0;
        float _1302 = (1.0 - _1297) / (_1297 + 1.0);
        float _3754 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1303 = isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0));
        float _1312 = ((((1.0 - _1303) * (_1298 + 2.0)) * exp2(log2(isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0))) * (_1298 + 1.0))) + _1303) * _1268;
        float _1313 = _1236 * 0.5;
        float _1314 = _1246 * 0.5;
        float _1315 = _1256 * 0.5;
        float _1316 = dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315));
        float _1321 = (_1316 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1316);
        float _1329 = (dot(vec3(_622, _623, _624), vec3(_1321 * _1313, _1321 * _1314, _1321 * _1315)) + 1.0) * 0.5;
        float _3765 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1338 = sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315)) / (_1269 + 9.9999997473787516355514526367188e-06);
        float _3776 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1339 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
        float _1340 = _1339 * 2.0;
        float _1344 = (1.0 - _1339) / (_1339 + 1.0);
        float _3787 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1345 = isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0));
        float _1354 = ((((1.0 - _1345) * (_1340 + 2.0)) * exp2(log2(isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0))) * (_1340 + 1.0))) + _1345) * _1269;
        float _1355 = _1237 * 0.5;
        float _1356 = _1247 * 0.5;
        float _1357 = _1257 * 0.5;
        float _1358 = dot(vec3(_1355, _1356, _1357), vec3(_1355, _1356, _1357));
        float _1363 = (_1358 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1358);
        float _1371 = (dot(vec3(_622, _623, _624), vec3(_1363 * _1355, _1363 * _1356, _1363 * _1357)) + 1.0) * 0.5;
        float _3798 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1380 = sqrt(((_1356 * _1356) + (_1355 * _1355)) + (_1357 * _1357)) / (_1270 + 9.9999997473787516355514526367188e-06);
        float _3809 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1381 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
        float _1382 = _1381 * 2.0;
        float _1386 = (1.0 - _1381) / (_1381 + 1.0);
        float _3820 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1387 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
        float _1396 = ((((1.0 - _1387) * (_1382 + 2.0)) * exp2(log2(isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0))) * (_1382 + 1.0))) + _1387) * _1270;
        _1404 = _1237;
        _1405 = _1236;
        _1406 = _1235;
        _1407 = _1247;
        _1408 = _1246;
        _1409 = _1245;
        _1410 = _1257;
        _1411 = _1256;
        _1412 = _1255;
        _1413 = _1270;
        _1414 = _1269;
        _1415 = _1268;
        _1416 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0)));
        _1417 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0)));
        _1418 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0)));
    }
    else
    {
        _1404 = _1095;
        _1405 = _1095;
        _1406 = _1095;
        _1407 = _1095;
        _1408 = _1095;
        _1409 = _1095;
        _1410 = _1095;
        _1411 = _1095;
        _1412 = _1095;
        _1413 = _1095;
        _1414 = _1095;
        _1415 = _1095;
        _1416 = 0.0;
        _1417 = 0.0;
        _1418 = 0.0;
    }
    float _1428 = (cbModelParam._m0[1u].x * (_1416 - _1107)) + _1107;
    float _1429 = (cbModelParam._m0[1u].x * (_1417 - _1108)) + _1108;
    float _1430 = (cbModelParam._m0[1u].x * (_1418 - _1109)) + _1109;
    float _1451 = fma(_1430, cbSceneParam._m0[89u].z, fma(_1429, cbSceneParam._m0[89u].y, _1428 * cbSceneParam._m0[89u].x));
    float _1454 = fma(_1430, cbSceneParam._m0[90u].z, fma(_1429, cbSceneParam._m0[90u].y, _1428 * cbSceneParam._m0[90u].x));
    float _1457 = fma(_1430, cbSceneParam._m0[91u].z, fma(_1429, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1428));
    float _1472 = _732 * 0.5;
    float _1473 = _733 * 0.5;
    float _1474 = _734 * 0.5;
    float _1475 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1406, _1409, _1412, _1415));
    float _1478 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1405, _1408, _1411, _1414));
    float _1481 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1404, _1407, _1410, _1413));
    float _1515;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1488 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1094, _1098, _1101, _1104));
        float _1492 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1096, _1099, _1102, _1105));
        float _1496 = dot(vec4(_1472, _1473, _1474, 1.0), vec4(_1097, _1100, _1103, _1106));
        float _1503 = dot(vec4(cbModelParam._m0[39u]), vec4(_1472, _1473, _1474, 1.0));
        _1515 = dot(vec3(isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0)), isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0)), isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1503) ? 0.0 : (isnan(0.0) ? _1503 : max(0.0, _1503))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1515 = 1.0;
    }
    float _1526;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1517 = dot(vec4(cbModelParam._m0[40u]), vec4(_1472, _1473, _1474, 1.0));
        _1526 = dot(vec3(isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)), isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0)), isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1517) ? 0.0 : (isnan(0.0) ? _1517 : max(0.0, _1517))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1526 = 1.0;
    }
    float _1530 = (_1526 * cbModelParam._m0[1u].x) + (_1515 * (1.0 - cbModelParam._m0[1u].x));
    float _1540 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _625);
    float _1541 = isnan(_1540) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1540 : min(cbModelParam._m0[25u].z, _1540));
    float _1622;
    float _1624;
    float _1626;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1589 = fma(_793, cbModelParam._m0[13u].z, fma(_789, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _785)) + cbModelParam._m0[13u].w;
        float _1593 = fma(_793, cbModelParam._m0[14u].z, fma(_789, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _785)) + cbModelParam._m0[14u].w;
        float _1597 = fma(_793, cbModelParam._m0[15u].z, fma(_789, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _785)) + cbModelParam._m0[15u].w;
        float _1600 = fma(_734, cbModelParam._m0[13u].z, fma(_733, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _732));
        float _1603 = fma(_734, cbModelParam._m0[14u].z, fma(_733, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _732));
        float _1606 = fma(_734, cbModelParam._m0[15u].z, fma(_733, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _732));
        float _1634;
        if (_1600 > 0.0)
        {
            _1634 = abs((1.0 - _1589) / _1600);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1600 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1589 + 1.0) / _1600);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1634 = frontier_phi_38_36_ladder;
        }
        float _1802;
        if (_1603 > 0.0)
        {
            _1802 = abs((1.0 - _1593) / _1603);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1603 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1593 + 1.0) / _1603);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1802 = frontier_phi_47_43_ladder;
        }
        float _2246;
        if (_1606 > 0.0)
        {
            _2246 = abs((1.0 - _1597) / _1606);
        }
        else
        {
            float frontier_phi_59_54_ladder;
            if (_1606 < 0.0)
            {
                frontier_phi_59_54_ladder = abs((_1597 + 1.0) / _1606);
            }
            else
            {
                frontier_phi_59_54_ladder = 5000.0;
            }
            _2246 = frontier_phi_59_54_ladder;
        }
        float _2248 = isnan(_1802) ? _1634 : (isnan(_1634) ? _1802 : min(_1634, _1802));
        float _2249 = isnan(_2246) ? _2248 : (isnan(_2248) ? _2246 : min(_2248, _2246));
        float _2253 = (_2249 * _1600) + _1589;
        float _2254 = (_2249 * _1603) + _1593;
        float _2255 = (_2249 * _1606) + _1597;
        float _2256 = _2249 * 9.9999997473787516355514526367188e-05;
        float _2258 = (-1.0) - _2256;
        float _2260 = _2256 + 1.0;
        float frontier_phi_37_59_ladder;
        float frontier_phi_37_59_ladder_1;
        float frontier_phi_37_59_ladder_2;
        if ((_2255 > _2260) || ((_2255 < _2258) || ((_2254 > _2260) || ((_2254 < _2258) || ((_2253 < _2258) || (_2253 > _2260))))))
        {
            frontier_phi_37_59_ladder = 0.0;
            frontier_phi_37_59_ladder_1 = 0.0;
            frontier_phi_37_59_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2489 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2255, cbModelParam._m0[9u].z, fma(_2254, cbModelParam._m0[9u].y, _2253 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2255, cbModelParam._m0[10u].z, fma(_2254, cbModelParam._m0[10u].y, _2253 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2255, cbModelParam._m0[11u].z, fma(_2254, cbModelParam._m0[11u].y, _2253 * cbModelParam._m0[11u].x))), _1541);
            frontier_phi_37_59_ladder = _2489.z * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_1 = _2489.y * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_2 = _2489.x * cbModelParam._m0[1u].y;
        }
        _1622 = frontier_phi_37_59_ladder_2;
        _1624 = frontier_phi_37_59_ladder_1;
        _1626 = frontier_phi_37_59_ladder;
    }
    else
    {
        vec4 _1610 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_732, _733, _734), _1541);
        _1622 = _1610.x * cbModelParam._m0[1u].y;
        _1624 = _1610.y * cbModelParam._m0[1u].y;
        _1626 = _1610.z * cbModelParam._m0[1u].y;
    }
    float _1630 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _625);
    float _1631 = isnan(_1630) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1630 : min(cbModelParam._m0[25u].w, _1630));
    float _1719;
    float _1721;
    float _1723;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1683 = fma(_793, cbModelParam._m0[21u].z, fma(_789, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _785)) + cbModelParam._m0[21u].w;
        float _1687 = fma(_793, cbModelParam._m0[22u].z, fma(_789, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _785)) + cbModelParam._m0[22u].w;
        float _1691 = fma(_793, cbModelParam._m0[23u].z, fma(_789, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _785)) + cbModelParam._m0[23u].w;
        float _1694 = fma(_734, cbModelParam._m0[21u].z, fma(_733, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _732));
        float _1697 = fma(_734, cbModelParam._m0[22u].z, fma(_733, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _732));
        float _1700 = fma(_734, cbModelParam._m0[23u].z, fma(_733, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _732));
        float _1807;
        if (_1694 > 0.0)
        {
            _1807 = abs((1.0 - _1683) / _1694);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1694 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1683 + 1.0) / _1694);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1807 = frontier_phi_49_45_ladder;
        }
        float _2273;
        if (_1697 > 0.0)
        {
            _2273 = abs((1.0 - _1687) / _1697);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1697 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1687 + 1.0) / _1697);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2273 = frontier_phi_61_56_ladder;
        }
        float _2610;
        if (_1700 > 0.0)
        {
            _2610 = abs((1.0 - _1691) / _1700);
        }
        else
        {
            float frontier_phi_73_68_ladder;
            if (_1700 < 0.0)
            {
                frontier_phi_73_68_ladder = abs((_1691 + 1.0) / _1700);
            }
            else
            {
                frontier_phi_73_68_ladder = 5000.0;
            }
            _2610 = frontier_phi_73_68_ladder;
        }
        float _2612 = isnan(_2273) ? _1807 : (isnan(_1807) ? _2273 : min(_1807, _2273));
        float _2613 = isnan(_2610) ? _2612 : (isnan(_2612) ? _2610 : min(_2612, _2610));
        float _2617 = (_2613 * _1694) + _1683;
        float _2618 = (_2613 * _1697) + _1687;
        float _2619 = (_2613 * _1700) + _1691;
        float _2620 = _2613 * 9.9999997473787516355514526367188e-05;
        float _2621 = (-1.0) - _2620;
        float _2623 = _2620 + 1.0;
        float frontier_phi_46_73_ladder;
        float frontier_phi_46_73_ladder_1;
        float frontier_phi_46_73_ladder_2;
        if ((_2619 > _2623) || ((_2619 < _2621) || ((_2618 > _2623) || ((_2618 < _2621) || ((_2617 < _2621) || (_2617 > _2623))))))
        {
            frontier_phi_46_73_ladder = 0.0;
            frontier_phi_46_73_ladder_1 = 0.0;
            frontier_phi_46_73_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2740 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2619, cbModelParam._m0[17u].z, fma(_2618, cbModelParam._m0[17u].y, _2617 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2619, cbModelParam._m0[18u].z, fma(_2618, cbModelParam._m0[18u].y, _2617 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2619, cbModelParam._m0[19u].z, fma(_2618, cbModelParam._m0[19u].y, _2617 * cbModelParam._m0[19u].x))), _1631);
            frontier_phi_46_73_ladder = _2740.z * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_1 = _2740.y * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_2 = _2740.x * cbModelParam._m0[1u].z;
        }
        _1719 = frontier_phi_46_73_ladder_2;
        _1721 = frontier_phi_46_73_ladder_1;
        _1723 = frontier_phi_46_73_ladder;
    }
    else
    {
        vec4 _1703 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_732, _733, _734), _1631);
        _1719 = _1703.x * cbModelParam._m0[1u].z;
        _1721 = _1703.y * cbModelParam._m0[1u].z;
        _1723 = _1703.z * cbModelParam._m0[1u].z;
    }
    float _1735 = ((((1.0 - _753) * ((_740 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_753 * _740)) * _724;
    float _1736 = _1735 * ((cbModelParam._m0[1u].w * (_1719 - _1622)) + _1622);
    float _1737 = _1735 * ((cbModelParam._m0[1u].w * (_1721 - _1624)) + _1624);
    float _1738 = _1735 * ((cbModelParam._m0[1u].w * (_1723 - _1626)) + _1626);
    float _1741 = fma(_1738, cbSceneParam._m0[89u].z, fma(_1737, cbSceneParam._m0[89u].y, _1736 * cbSceneParam._m0[89u].x));
    float _1744 = fma(_1738, cbSceneParam._m0[90u].z, fma(_1737, cbSceneParam._m0[90u].y, _1736 * cbSceneParam._m0[90u].x));
    float _1747 = fma(_1738, cbSceneParam._m0[91u].z, fma(_1737, cbSceneParam._m0[91u].y, _1736 * cbSceneParam._m0[91u].x));
    float _1781 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1785 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1789 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1793 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1794 = _1781 / _1793;
    float _1795 = _1785 / _1793;
    float _1796 = _1789 / _1793;
    float _1943;
    float _1944;
    float _1945;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1823 = ((uint(_1796 > cbSceneParam._m0[59u].y) + uint(_1796 > cbSceneParam._m0[59u].x)) + uint(_1796 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1824 = _1823 + 43u;
        uint _1832 = _1823 + 44u;
        uint _1840 = _1823 + 45u;
        uint _1848 = _1823 + 46u;
        float _1859 = fma(_1793, cbSceneParam._m0[_1824].w, fma(_1789, cbSceneParam._m0[_1824].z, fma(_1785, cbSceneParam._m0[_1824].y, _1781 * cbSceneParam._m0[_1824].x)));
        float _1863 = fma(_1793, cbSceneParam._m0[_1832].w, fma(_1789, cbSceneParam._m0[_1832].z, fma(_1785, cbSceneParam._m0[_1832].y, _1781 * cbSceneParam._m0[_1832].x)));
        float _1871 = fma(_1793, cbSceneParam._m0[_1848].w, fma(_1789, cbSceneParam._m0[_1848].z, fma(_1785, cbSceneParam._m0[_1848].y, _1781 * cbSceneParam._m0[_1848].x)));
        float _1876 = cbSceneParam._m0[33u].z * _1871;
        float _1878 = cbSceneParam._m0[33u].w * _1871;
        float _1881 = fma(_1793, cbSceneParam._m0[_1840].w, fma(_1789, cbSceneParam._m0[_1840].z, fma(_1785, cbSceneParam._m0[_1840].y, _1781 * cbSceneParam._m0[_1840].x))) / _1871;
        float _1929 = (cbSceneParam._m0[33u].x - sqrt(((_1795 * _1795) + (_1794 * _1794)) + (_1796 * _1796))) * cbSceneParam._m0[33u].y;
        float _3946 = isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0));
        float _1936 = (isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1876 + _1859) / _1871, (_1878 + _1863) / _1871), _1881), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1878 + _1859) / _1871, (_1863 - _1876) / _1871), _1881), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1859 - _1876) / _1871, (_1863 - _1878) / _1871), _1881), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1859 - _1878) / _1871, (_1876 + _1863) / _1871), _1881), 0.0)).x), vec4(0.25)));
        _1943 = 1.0 - (_1936 * cbSceneParam._m0[34u].x);
        _1944 = 1.0 - (_1936 * cbSceneParam._m0[34u].y);
        _1945 = 1.0 - (_1936 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1943 = 1.0;
        _1944 = 1.0;
        _1945 = 1.0;
    }
    float _2009;
    float _2011;
    float _2013;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1997 = fma(_1793, cbSceneParam._m0[63u].w, fma(_1789, cbSceneParam._m0[63u].z, fma(_1785, cbSceneParam._m0[63u].y, _1781 * cbSceneParam._m0[63u].x)));
        float _1998 = fma(_1793, cbSceneParam._m0[60u].w, fma(_1789, cbSceneParam._m0[60u].z, fma(_1785, cbSceneParam._m0[60u].y, _1781 * cbSceneParam._m0[60u].x))) / _1997;
        float _1999 = fma(_1793, cbSceneParam._m0[61u].w, fma(_1789, cbSceneParam._m0[61u].z, fma(_1785, cbSceneParam._m0[61u].y, _1781 * cbSceneParam._m0[61u].x))) / _1997;
        float frontier_phi_58_57_ladder;
        float frontier_phi_58_57_ladder_1;
        float frontier_phi_58_57_ladder_2;
        if ((((_1998 >= cbSceneParam._m0[64u].x) && (_1999 >= cbSceneParam._m0[64u].y)) && (_1998 <= cbSceneParam._m0[64u].z)) && (_1999 <= cbSceneParam._m0[64u].w))
        {
            float _2286 = fma(_1793, cbSceneParam._m0[62u].w, fma(_1789, cbSceneParam._m0[62u].z, fma(_1785, cbSceneParam._m0[62u].y, _1781 * cbSceneParam._m0[62u].x))) / _1997;
            float _2290 = isnan(cbSceneParam._m0[41u].w) ? _2286 : (isnan(_2286) ? cbSceneParam._m0[41u].w : max(_2286, cbSceneParam._m0[41u].w));
            float _2333 = (cbSceneParam._m0[33u].x - sqrt(((_1795 * _1795) + (_1794 * _1794)) + (_1796 * _1796))) * cbSceneParam._m0[33u].y;
            float _3962 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
            float _2340 = (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1998, cbSceneParam._m0[33u].w + _1999), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1998, _1999 - cbSceneParam._m0[33u].z), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1998 - cbSceneParam._m0[33u].z, _1999 - cbSceneParam._m0[33u].w), _2290), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1998 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1999), _2290), 0.0)).x), vec4(0.25)));
            float _2344 = 1.0 - (_2340 * cbSceneParam._m0[34u].x);
            float _2345 = 1.0 - (_2340 * cbSceneParam._m0[34u].y);
            float _2346 = 1.0 - (_2340 * cbSceneParam._m0[34u].z);
            frontier_phi_58_57_ladder = isnan(_2346) ? _1945 : (isnan(_1945) ? _2346 : min(_1945, _2346));
            frontier_phi_58_57_ladder_1 = isnan(_2345) ? _1944 : (isnan(_1944) ? _2345 : min(_1944, _2345));
            frontier_phi_58_57_ladder_2 = isnan(_2344) ? _1943 : (isnan(_1943) ? _2344 : min(_1943, _2344));
        }
        else
        {
            frontier_phi_58_57_ladder = _1945;
            frontier_phi_58_57_ladder_1 = _1944;
            frontier_phi_58_57_ladder_2 = _1943;
        }
        _2009 = frontier_phi_58_57_ladder_2;
        _2011 = frontier_phi_58_57_ladder_1;
        _2013 = frontier_phi_58_57_ladder;
    }
    else
    {
        _2009 = _1943;
        _2011 = _1944;
        _2013 = _1945;
    }
    uvec4 _2018 = floatBitsToUint(cbInstanceData._m0[_698 + 5u]);
    uint _2020 = _2018.x * 14u;
    uint _2021 = _2020 + 13u;
    float _2026 = _724 + (-1.0);
    float _2029 = (cbLight._m0[_2021].x * _2026) + 1.0;
    float _2030 = (cbLight._m0[_2021].y * _2026) + 1.0;
    uint _2031 = _2020 + 5u;
    float _2037 = isnan(1.0) ? _2030 : (isnan(_2030) ? 1.0 : min(_2030, 1.0));
    uint _2041 = _2020 + 4u;
    float _2050 = isnan(1.0) ? _2029 : (isnan(_2029) ? 1.0 : min(_2029, 1.0));
    uint _2054 = _2020 | 1u;
    float _2065 = dot(vec3(cbLight._m0[_2020].xyz), vec3(_622, _623, _624));
    float _2068 = dot(vec3(cbLight._m0[_2054].xyz), vec3(_622, _623, _624));
    float _3998 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
    float _4009 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
    float _2073 = (isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0))) * 0.3183098733425140380859375;
    float _2075 = (isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0))) * 0.3183098733425140380859375;
    float _2082 = ((cbLight._m0[_2031].x * _2037) * _2075) + (((cbLight._m0[_2041].x * _2009) * _2050) * _2073);
    float _2083 = ((_2037 * cbLight._m0[_2031].y) * _2075) + (((cbLight._m0[_2041].y * _2011) * _2050) * _2073);
    float _2084 = ((_2037 * cbLight._m0[_2031].z) * _2075) + (((cbLight._m0[_2041].z * _2013) * _2050) * _2073);
    uint _2086 = _2020 + 8u;
    float _2099 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2020].w)) * _625) * 0.949999988079071044921875);
    float _2100 = _2099 * _2099;
    float _2101 = cbLight._m0[_2020].x + _649;
    float _2102 = cbLight._m0[_2020].y + _650;
    float _2103 = cbLight._m0[_2020].z + _651;
    float _2107 = inversesqrt(dot(vec3(_2101, _2102, _2103), vec3(_2101, _2102, _2103)));
    float _2108 = _2107 * _2101;
    float _2109 = _2107 * _2102;
    float _2110 = _2107 * _2103;
    float _2111 = dot(vec3(_622, _623, _624), vec3(cbLight._m0[_2020].xyz));
    float _4020 = isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0));
    float _2114 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
    float _4031 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _2115 = isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0));
    float _2116 = dot(vec3(_622, _623, _624), vec3(_2108, _2109, _2110));
    float _4042 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _2119 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
    float _2120 = dot(vec3(cbLight._m0[_2020].xyz), vec3(_2108, _2109, _2110));
    float _4053 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
    float _2124 = _2100 * _2100;
    float _2128 = ((_2119 * _2119) * (_2124 + (-1.0))) + 1.0;
    float _2139 = (exp2(log2(1.0 - (isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2140 = 1.0 - _2100;
    float _2151 = (0.5 / (((_2115 * ((_2114 * _2140) + _2100)) + 9.9999999392252902907785028219223e-09) + (((_2115 * _2140) + _2100) * _2114))) * _2114;
    float _4064 = isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0));
    float _2153 = (isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0))) * (_2124 / ((_2128 * _2128) * 3.141590118408203125));
    uint _2167 = _2020 + 9u;
    float _2178 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2054].w)) * _625) * 0.949999988079071044921875);
    float _2179 = _2178 * _2178;
    float _2180 = cbLight._m0[_2054].x + _649;
    float _2181 = cbLight._m0[_2054].y + _650;
    float _2182 = cbLight._m0[_2054].z + _651;
    float _2186 = inversesqrt(dot(vec3(_2180, _2181, _2182), vec3(_2180, _2181, _2182)));
    float _2187 = _2186 * _2180;
    float _2188 = _2186 * _2181;
    float _2189 = _2186 * _2182;
    float _2190 = dot(vec3(_622, _623, _624), vec3(cbLight._m0[_2054].xyz));
    float _4075 = isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0));
    float _2193 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
    float _2194 = dot(vec3(_622, _623, _624), vec3(_2187, _2188, _2189));
    float _4086 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2197 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
    float _2198 = dot(vec3(cbLight._m0[_2054].xyz), vec3(_2187, _2188, _2189));
    float _4097 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    float _2202 = _2179 * _2179;
    float _2206 = ((_2197 * _2197) * (_2202 + (-1.0))) + 1.0;
    float _2215 = (exp2(log2(1.0 - (isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2216 = 1.0 - _2179;
    float _2226 = (0.5 / (((_2115 * ((_2193 * _2216) + _2179)) + 9.9999999392252902907785028219223e-09) + (((_2115 * _2216) + _2179) * _2193))) * _2193;
    float _4108 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2228 = (isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) * (_2202 / ((_2206 * _2206) * 3.141590118408203125));
    float _2238 = (((_2215 * cbLight._m0[_2167].x) * _2228) * _2037) + ((((cbLight._m0[_2086].x * _2009) * _2139) * _2153) * _2050);
    float _2239 = (((_2215 * cbLight._m0[_2167].y) * _2228) * _2037) + ((((cbLight._m0[_2086].y * _2011) * _2139) * _2153) * _2050);
    float _2240 = (((_2215 * cbLight._m0[_2167].z) * _2228) * _2037) + ((((cbLight._m0[_2086].z * _2013) * _2139) * _2153) * _2050);
    float _2403;
    float _2405;
    float _2407;
    float _2409;
    float _2411;
    float _2413;
    if (_2018.y == 0u)
    {
        uvec4 _2358 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2359 = _2358.x;
        uint _2370 = uint((float(_2358.y) * floor(float(uint(cbSceneParam._m0[85u].y * _658) / _2359))) + floor(float(uint(cbSceneParam._m0[85u].x * _657) / _2359)));
        float _2380 = (log2(_1796 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2381 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
        uint _2384 = uint(isnan(14.0) ? _2381 : (isnan(_2381) ? 14.0 : min(_2381, 14.0)));
        uvec4 _2389 = texelFetch(g_lightClusterGridBuffer, int(((_2384 << 2u) + (_2370 << 6u)) >> 2u));
        uint _2390 = _2389.x;
        uint _2391 = _2358.z;
        float _2498;
        float _2500;
        float _2502;
        float _2504;
        float _2506;
        float _2508;
        if (((((1u << ((_2391 >> 4u) & 15u)) + 4294967295u) & _2390) == 0u) || ((_2391 & 240u) == 0u))
        {
            _2498 = 0.0;
            _2500 = 0.0;
            _2502 = 0.0;
            _2504 = 0.0;
            _2506 = 0.0;
            _2508 = 0.0;
        }
        else
        {
            float _2499;
            float _2501;
            float _2503;
            float _2505;
            float _2507;
            float _2509;
            float _2668 = 0.0;
            float _2669 = 0.0;
            float _2670 = 0.0;
            float _2671 = 0.0;
            float _2672 = 0.0;
            float _2673 = 0.0;
            uint _2674 = 0u;
            uint _2683;
            bool _2684;
            for (;;)
            {
                _2683 = texelFetch(g_lightClassification, int((((_2384 << 5u) + (_2370 << 9u)) + (_2674 << 2u)) >> 2u)).x;
                _2684 = _2683 == 0u;
                float frontier_phi_82_pred;
                float frontier_phi_82_pred_1;
                float frontier_phi_82_pred_2;
                float frontier_phi_82_pred_3;
                float frontier_phi_82_pred_4;
                float frontier_phi_82_pred_5;
                if (_2684)
                {
                    frontier_phi_82_pred = _2668;
                    frontier_phi_82_pred_1 = _2673;
                    frontier_phi_82_pred_2 = _2672;
                    frontier_phi_82_pred_3 = _2671;
                    frontier_phi_82_pred_4 = _2670;
                    frontier_phi_82_pred_5 = _2669;
                }
                else
                {
                    float _2813;
                    float _2814;
                    float _2815;
                    float _2816;
                    float _2817;
                    float _2818;
                    uint _2819;
                    _2813 = _2668;
                    _2814 = _2669;
                    _2815 = _2670;
                    _2816 = _2671;
                    _2817 = _2672;
                    _2818 = _2673;
                    _2819 = _2683;
                    float _2745;
                    float _2746;
                    float _2747;
                    float _2748;
                    float _2749;
                    float _2750;
                    for (;;)
                    {
                        uint _2823 = uint(findLSB(_2819)) + (_2674 << 5u);
                        uint _2820 = (_2819 + 4294967295u) & _2819;
                        uint _2825 = _2823 * 48u;
                        vec4 _2839 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2825)).x, texelFetch(g_PointLightRenderingBuffer, int(_2825 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2825 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2825 + 3u)).x));
                        uint _2845 = (_2823 * 48u) + 4u;
                        vec4 _2858 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2845)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 3u)).x));
                        uint _2864 = (_2823 * 48u) + 8u;
                        vec3 _2875 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2864)).x, texelFetch(g_PointLightRenderingBuffer, int(_2864 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2864 + 2u)).x));
                        float _2879 = _2839.x - _1794;
                        float _2880 = _2839.y - _1795;
                        float _2881 = _2839.z - _1796;
                        float _2882 = dot(vec3(_2879, _2880, _2881), vec3(_2879, _2880, _2881));
                        float _2885 = inversesqrt(_2882);
                        float _2886 = _2885 * _2879;
                        float _2887 = _2885 * _2880;
                        float _2888 = _2885 * _2881;
                        float _2889 = dot(vec3(_679, _682, _685), vec3(_2886, _2887, _2888));
                        float _2894 = 1.0 - (_2882 * _2839.w);
                        float _4129 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
                        float _2895 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
                        float _2896 = sqrt(_2882) * _2858.w;
                        float _2899 = 1.39999997615814208984375 / (_2896 + 1.39999997615814208984375);
                        float _2900 = _2899 * _2899;
                        float _2903 = ((1.0 - _2900) * _2889) + _2900;
                        float _2906 = _2896 * _2896;
                        float _2910 = ((isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0))) * _2895) / ((_2906 * 0.699999988079071044921875) + 1.0);
                        float _2914 = (-0.0) - _1794;
                        float _2915 = (-0.0) - _1795;
                        float _2916 = (-0.0) - _1796;
                        float _2920 = inversesqrt(dot(vec3(_2914, _2915, _2916), vec3(_2914, _2915, _2916)));
                        float _2921 = _2920 * _2914;
                        float _2922 = _2920 * _2915;
                        float _2923 = _2920 * _2916;
                        float _2930 = exp2(log2(1.0 / ((_2906 * 3.5) + 5.0)) * 0.25);
                        float _2931 = 1.0 - _740;
                        float _2938 = sqrt(1.0 - ((1.0 - (_2931 * _2931)) * (1.0 - (_2930 * _2930))));
                        float _2939 = _2938 * _2938;
                        float _2940 = _2939 * _2939;
                        float _2941 = _2921 + _2886;
                        float _2942 = _2922 + _2887;
                        float _2943 = _2923 + _2888;
                        float _2947 = inversesqrt(dot(vec3(_2941, _2942, _2943), vec3(_2941, _2942, _2943)));
                        float _2951 = dot(vec3(_679, _682, _685), vec3(_2921, _2922, _2923));
                        float _4145 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
                        float _2954 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
                        float _2955 = dot(vec3(_679, _682, _685), vec3(_2947 * _2941, _2947 * _2942, _2947 * _2943));
                        float _4156 = isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0));
                        float _2958 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
                        float _2962 = ((_2958 * _2958) * (_2940 + (-1.0))) + 1.0;
                        float _2963 = _2899 * _2939;
                        float _2964 = _2963 * _2963;
                        float _2967 = ((1.0 - _2964) * _2889) + _2964;
                        float _4167 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
                        float _2968 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
                        float _2969 = 1.0 - _2939;
                        float _2979 = (0.5 / (((_2968 * ((_2954 * _2969) + _2939)) + 9.9999999392252902907785028219223e-09) + (((_2968 * _2969) + _2939) * _2954))) * _2968;
                        float _4178 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
                        float _2990 = (((_2940 * 3.1415927410125732421875) * (isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0)))) / ((_2962 * _2962) * ((_2906 * 2.1991131305694580078125) + 3.141590118408203125))) * _2895;
                        _2748 = (_2910 * _2858.x) + _2816;
                        _2749 = (_2910 * _2858.y) + _2817;
                        _2750 = (_2910 * _2858.z) + _2818;
                        _2745 = (_2990 * _2875.x) + _2813;
                        _2746 = (_2990 * _2875.y) + _2814;
                        _2747 = (_2990 * _2875.z) + _2815;
                        if (_2820 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2813 = _2745;
                            _2814 = _2746;
                            _2815 = _2747;
                            _2816 = _2748;
                            _2817 = _2749;
                            _2818 = _2750;
                            _2819 = _2820;
                        }
                    }
                    frontier_phi_82_pred = _2745;
                    frontier_phi_82_pred_1 = _2750;
                    frontier_phi_82_pred_2 = _2749;
                    frontier_phi_82_pred_3 = _2748;
                    frontier_phi_82_pred_4 = _2747;
                    frontier_phi_82_pred_5 = _2746;
                }
                _2499 = frontier_phi_82_pred;
                _2509 = frontier_phi_82_pred_1;
                _2507 = frontier_phi_82_pred_2;
                _2505 = frontier_phi_82_pred_3;
                _2503 = frontier_phi_82_pred_4;
                _2501 = frontier_phi_82_pred_5;
                uint _2675 = _2674 + 1u;
                if (_2675 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2668 = _2499;
                    _2669 = _2501;
                    _2670 = _2503;
                    _2671 = _2505;
                    _2672 = _2507;
                    _2673 = _2509;
                    _2674 = _2675;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2498 = _2499;
            _2500 = _2501;
            _2502 = _2503;
            _2504 = _2505;
            _2506 = _2507;
            _2508 = _2509;
        }
        uvec4 _2512 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2513 = _2512.z;
        uint _2515 = (_2513 >> 8u) & 15u;
        float _2636;
        float _2638;
        float _2640;
        float _2642;
        float _2644;
        float _2646;
        if (((4294967295u << _2515) & _2390) == 0u)
        {
            _2636 = _2498;
            _2638 = _2500;
            _2640 = _2502;
            _2642 = _2504;
            _2644 = _2506;
            _2646 = _2508;
        }
        else
        {
            float _2661 = inversesqrt(dot(vec3(_1794, _1795, _1796), vec3(_1794, _1795, _1796)));
            float _2662 = _2661 * _1794;
            float _2663 = _2661 * _1795;
            float _2664 = _2661 * _1796;
            float frontier_phi_75_76_ladder;
            float frontier_phi_75_76_ladder_1;
            float frontier_phi_75_76_ladder_2;
            float frontier_phi_75_76_ladder_3;
            float frontier_phi_75_76_ladder_4;
            float frontier_phi_75_76_ladder_5;
            if (_2515 < ((_2513 >> 12u) & 15u))
            {
                float _2637;
                float _2639;
                float _2641;
                float _2643;
                float _2645;
                float _2647;
                float _2796 = _2498;
                float _2797 = _2500;
                float _2798 = _2502;
                float _2799 = _2504;
                float _2800 = _2506;
                float _2801 = _2508;
                uint _2802 = _2515;
                uint _2811;
                bool _2812;
                for (;;)
                {
                    _2811 = texelFetch(g_lightClassification, int((((_2384 << 5u) + (_2370 << 9u)) + (_2802 << 2u)) >> 2u)).x;
                    _2812 = _2811 == 0u;
                    float frontier_phi_88_pred;
                    float frontier_phi_88_pred_1;
                    float frontier_phi_88_pred_2;
                    float frontier_phi_88_pred_3;
                    float frontier_phi_88_pred_4;
                    float frontier_phi_88_pred_5;
                    if (_2812)
                    {
                        frontier_phi_88_pred = _2799;
                        frontier_phi_88_pred_1 = _2800;
                        frontier_phi_88_pred_2 = _2801;
                        frontier_phi_88_pred_3 = _2798;
                        frontier_phi_88_pred_4 = _2797;
                        frontier_phi_88_pred_5 = _2796;
                    }
                    else
                    {
                        float _2995;
                        float _2996;
                        float _2997;
                        float _2998;
                        float _2999;
                        float _3000;
                        float _3288;
                        float _3289;
                        float _3290;
                        float _3291;
                        float _3292;
                        float _3293;
                        float _3008 = _2796;
                        float _3009 = _2797;
                        float _3010 = _2798;
                        float _3011 = _2799;
                        float _3012 = _2800;
                        float _3013 = _2801;
                        uint _3014 = _2811;
                        uint _3015;
                        vec4 _3040;
                        float _3041;
                        vec4 _3056;
                        vec3 _3068;
                        vec4 _3083;
                        vec4 _3098;
                        float _3144;
                        bool _3145;
                        for (;;)
                        {
                            uint _3025 = ((_2802 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3014));
                            _3015 = (_3014 + 4294967295u) & _3014;
                            uint _3027 = _3025 * 40u;
                            _3040 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3027)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3027 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3027 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3027 + 3u)).x));
                            _3041 = _3040.w;
                            uint _3043 = (_3025 * 40u) + 4u;
                            _3056 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3043)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 3u)).x));
                            uint _3058 = (_3025 * 40u) + 8u;
                            _3068 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3058)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3058 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3058 + 2u)).x));
                            uint _3070 = (_3025 * 40u) + 16u;
                            _3083 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3070)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3070 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3070 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3070 + 3u)).x));
                            uint _3085 = (_3025 * 40u) + 20u;
                            _3098 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3085)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3085 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3085 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3085 + 3u)).x));
                            uint _3100 = (_3025 * 40u) + 24u;
                            vec4 _3113 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3100)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3100 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3100 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3100 + 3u)).x));
                            uint _3119 = (_3025 * 40u) + 28u;
                            vec4 _3132 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3119)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3119 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3119 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3119 + 3u)).x));
                            _3144 = fma(_1796, _3132.z, fma(_1795, _3132.y, _3132.x * _1794)) + _3132.w;
                            _3145 = !((fma(_1796, _3113.z, fma(_1795, _3113.y, _3113.x * _1794)) + _3113.w) <= 0.0);
                            float frontier_phi_94_pred;
                            float frontier_phi_94_pred_1;
                            float frontier_phi_94_pred_2;
                            float frontier_phi_94_pred_3;
                            float frontier_phi_94_pred_4;
                            float frontier_phi_94_pred_5;
                            if (_3145)
                            {
                                float _3172 = _3040.x - _1794;
                                float _3173 = _3040.y - _1795;
                                float _3174 = _3040.z - _1796;
                                float _3175 = dot(vec3(_3172, _3173, _3174), vec3(_3172, _3173, _3174));
                                float _3178 = inversesqrt(_3175);
                                float _3179 = _3178 * _3172;
                                float _3180 = _3178 * _3173;
                                float _3181 = _3178 * _3174;
                                float _3185 = 1.0 - (_3175 / (_3041 * _3041));
                                float _4189 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                                float _3186 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
                                float _3190 = sqrt(_3175) * _3056.w;
                                float _3192 = 1.39999997615814208984375 / (_3190 + 1.39999997615814208984375);
                                float _3193 = _3192 * _3192;
                                float _3196 = ((1.0 - _3193) * dot(vec3(_3179, _3180, _3181), vec3(_679, _682, _685))) + _3193;
                                float _3199 = _3190 * _3190;
                                float _3203 = (fma(_1796, _3083.z, fma(_1795, _3083.y, _3083.x * _1794)) + _3083.w) / _3144;
                                float _3204 = (fma(_1796, _3098.z, fma(_1795, _3098.y, _3098.x * _1794)) + _3098.w) / _3144;
                                float _3208 = 1.0 - dot(vec2(_3203, _3204), vec2(_3203, _3204));
                                float _4205 = isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0));
                                float _3209 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
                                float _3210 = _3209 * (((isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0))) * _3186) / ((_3199 * 0.699999988079071044921875) + 1.0));
                                float _3222 = exp2(log2(1.0 / ((_3199 * 3.5) + 5.0)) * 0.25);
                                float _3223 = 1.0 - _740;
                                float _3230 = sqrt(1.0 - ((1.0 - (_3223 * _3223)) * (1.0 - (_3222 * _3222))));
                                float _3231 = _3230 * _3230;
                                float _3232 = _3231 * _3231;
                                float _3233 = _3179 - _2662;
                                float _3234 = _3180 - _2663;
                                float _3235 = _3181 - _2664;
                                float _3239 = inversesqrt(dot(vec3(_3233, _3234, _3235), vec3(_3233, _3234, _3235)));
                                float _3243 = dot(vec3(_679, _682, _685), vec3((-0.0) - _2662, (-0.0) - _2663, (-0.0) - _2664));
                                float _4216 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0));
                                float _3246 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
                                float _3247 = dot(vec3(_679, _682, _685), vec3(_3239 * _3233, _3239 * _3234, _3239 * _3235));
                                float _4227 = isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : max(_3247, 0.0));
                                float _3250 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
                                float _3254 = ((_3250 * _3250) * (_3232 + (-1.0))) + 1.0;
                                float _3255 = _3192 * _3231;
                                float _3256 = _3255 * _3255;
                                float _3262 = ((1.0 - _3256) * dot(vec3(_679, _682, _685), vec3(_3179, _3180, _3181))) + _3256;
                                float _4238 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                                float _3263 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
                                float _3264 = 1.0 - _3231;
                                float _3274 = (0.5 / (((_3263 * ((_3246 * _3264) + _3231)) + 9.9999999392252902907785028219223e-09) + (((_3263 * _3264) + _3231) * _3246))) * _3263;
                                float _4249 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
                                float _3284 = (_3209 * _3186) * (((_3232 * 3.1415927410125732421875) * (isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0)))) / ((_3254 * _3254) * ((_3199 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_94_pred = _3284 * _3068.x;
                                frontier_phi_94_pred_1 = _3284 * _3068.y;
                                frontier_phi_94_pred_2 = _3210 * _3056.z;
                                frontier_phi_94_pred_3 = _3210 * _3056.y;
                                frontier_phi_94_pred_4 = _3210 * _3056.x;
                                frontier_phi_94_pred_5 = _3284 * _3068.z;
                            }
                            else
                            {
                                frontier_phi_94_pred = 0.0;
                                frontier_phi_94_pred_1 = 0.0;
                                frontier_phi_94_pred_2 = 0.0;
                                frontier_phi_94_pred_3 = 0.0;
                                frontier_phi_94_pred_4 = 0.0;
                                frontier_phi_94_pred_5 = 0.0;
                            }
                            _3288 = frontier_phi_94_pred;
                            _3289 = frontier_phi_94_pred_1;
                            _3293 = frontier_phi_94_pred_2;
                            _3292 = frontier_phi_94_pred_3;
                            _3291 = frontier_phi_94_pred_4;
                            _3290 = frontier_phi_94_pred_5;
                            _2998 = _3291 + _3011;
                            _2999 = _3292 + _3012;
                            _3000 = _3293 + _3013;
                            _2995 = _3288 + _3008;
                            _2996 = _3289 + _3009;
                            _2997 = _3290 + _3010;
                            if (_3015 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3008 = _2995;
                                _3009 = _2996;
                                _3010 = _2997;
                                _3011 = _2998;
                                _3012 = _2999;
                                _3013 = _3000;
                                _3014 = _3015;
                                continue;
                            }
                        }
                        frontier_phi_88_pred = _2998;
                        frontier_phi_88_pred_1 = _2999;
                        frontier_phi_88_pred_2 = _3000;
                        frontier_phi_88_pred_3 = _2997;
                        frontier_phi_88_pred_4 = _2996;
                        frontier_phi_88_pred_5 = _2995;
                    }
                    _2643 = frontier_phi_88_pred;
                    _2645 = frontier_phi_88_pred_1;
                    _2647 = frontier_phi_88_pred_2;
                    _2641 = frontier_phi_88_pred_3;
                    _2639 = frontier_phi_88_pred_4;
                    _2637 = frontier_phi_88_pred_5;
                    uint _2803 = _2802 + 1u;
                    if (_2803 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2796 = _2637;
                        _2797 = _2639;
                        _2798 = _2641;
                        _2799 = _2643;
                        _2800 = _2645;
                        _2801 = _2647;
                        _2802 = _2803;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_75_76_ladder = _2645;
                frontier_phi_75_76_ladder_1 = _2647;
                frontier_phi_75_76_ladder_2 = _2643;
                frontier_phi_75_76_ladder_3 = _2641;
                frontier_phi_75_76_ladder_4 = _2639;
                frontier_phi_75_76_ladder_5 = _2637;
            }
            else
            {
                frontier_phi_75_76_ladder = _2506;
                frontier_phi_75_76_ladder_1 = _2508;
                frontier_phi_75_76_ladder_2 = _2504;
                frontier_phi_75_76_ladder_3 = _2502;
                frontier_phi_75_76_ladder_4 = _2500;
                frontier_phi_75_76_ladder_5 = _2498;
            }
            _2636 = frontier_phi_75_76_ladder_5;
            _2638 = frontier_phi_75_76_ladder_4;
            _2640 = frontier_phi_75_76_ladder_3;
            _2642 = frontier_phi_75_76_ladder_2;
            _2644 = frontier_phi_75_76_ladder;
            _2646 = frontier_phi_75_76_ladder_1;
        }
        float _2651 = isnan(1.0) ? _724 : (isnan(_724) ? 1.0 : min(_724, 1.0));
        _2403 = (_2651 * _2642) + _2082;
        _2405 = (_2651 * _2644) + _2083;
        _2407 = (_2651 * _2646) + _2084;
        _2409 = ((_2636 * 0.039999999105930328369140625) * _2651) + _2238;
        _2411 = ((_2638 * 0.039999999105930328369140625) * _2651) + _2239;
        _2413 = ((_2640 * 0.039999999105930328369140625) * _2651) + _2240;
    }
    else
    {
        _2403 = _2082;
        _2405 = _2083;
        _2407 = _2084;
        _2409 = _2238;
        _2411 = _2239;
        _2413 = _2240;
    }
    float _4265 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _4276 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _4287 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _2430 = ((isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) * (_2403 + ((isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0))) * _724))) + ((_2409 + ((isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0))) * _1530)) * cbPerFrame._m0[3u].x);
    float _2431 = ((isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0))) * (_2405 + ((isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0))) * _724))) + ((_2411 + ((isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0))) * _1530)) * cbPerFrame._m0[3u].x);
    float _2432 = ((isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0))) * (_2407 + ((isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0))) * _724))) + ((_2413 + ((isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0))) * _1530)) * cbPerFrame._m0[3u].x);
    uint _2436 = _698 + 6u;
    float _2444 = _657 / cbSceneParam._m0[86u].x;
    float _2445 = _658 / cbSceneParam._m0[86u].y;
    vec4 _2459 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2444, _2445, (log2((isnan(cbSceneParam._m0[77u].w) ? _644 : (isnan(_644) ? cbSceneParam._m0[77u].w : min(_644, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2461 = _2459.x;
    float _2462 = _2459.y;
    float _2463 = _2459.z;
    float _2464 = _2459.w;
    float _2560;
    float _2562;
    float _2564;
    float _2566;
    if (_644 > cbSceneParam._m0[78u].w)
    {
        float _2523 = isnan(_644) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _644 : min(cbSceneParam._m0[80u].w, _644));
        float _2524 = _2523 / _644;
        float _2535 = _2524 * _261;
        float _2536 = _262 * _2524;
        float _2537 = (-0.0) - _2536;
        float _2538 = _2524 * _263;
        float _2540 = (cbSceneParam._m0[77u].w * _2537) / _2523;
        float _2541 = _2540 + cbSceneParam._m0[79u].w;
        float _2542 = cbSceneParam._m0[79u].w - _2536;
        float _2548 = sqrt(((_2535 * _2535) + (_2536 * _2536)) + (_2538 * _2538));
        float _2551 = (1.0 - (cbSceneParam._m0[77u].w / _2523)) * _2548;
        float _2556 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2558 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2758;
        if (abs((_2537 - _2540) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2758 = ((((_2541 > 0.0) ? exp2(_2556 * _2541) : (2.0 - exp2(_2558 * _2541))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2551;
        }
        else
        {
            float _2697 = 1.0 / cbSceneParam._m0[80u].x;
            float _2698 = isnan(_2542) ? _2541 : (isnan(_2541) ? _2542 : max(_2541, _2542));
            float _2699 = isnan(_2542) ? _2541 : (isnan(_2541) ? _2542 : min(_2541, _2542));
            float _2708 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : min(_2698, 0.0));
            float _2709 = isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : min(_2699, 0.0));
            _2758 = ((abs(_2548 / _2537) * cbSceneParam._m0[80u].y) * ((((_2708 - _2709) * 2.0) - ((exp2(_2556 * (isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0)))) - exp2(_2556 * (isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : max(_2699, 0.0))))) * _2697)) - ((exp2(_2558 * _2708) - exp2(_2558 * _2709)) * _2697))) + (_2551 * cbSceneParam._m0[80u].z);
        }
        vec4 _2760 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2444, _2445, 1.0), 0.0);
        float _2769 = exp2((_2758 * (-1.44269502162933349609375)) * (1.0 - _2760.w));
        float _2770 = log2(_2769);
        float _2786 = log2(_2464);
        _2560 = (exp2(_2786 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2770 * cbSceneParam._m0[78u].x)) * _2760.x) / cbSceneParam._m0[78u].x)) + _2461;
        _2562 = (exp2(_2786 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2770 * cbSceneParam._m0[78u].y)) * _2760.y) / cbSceneParam._m0[78u].y)) + _2462;
        _2564 = (exp2(_2786 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2770 * cbSceneParam._m0[78u].z)) * _2760.z) / cbSceneParam._m0[78u].z)) + _2463;
        _2566 = _2769 * _2464;
    }
    else
    {
        _2560 = _2461;
        _2562 = _2462;
        _2564 = _2463;
        _2566 = _2464;
    }
    float _2578 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2579 = _2578 == 3.0;
    float _2580 = log2(_2566);
    float _2587 = exp2(_2580 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0)));
    float _2588 = exp2(_2580 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0)));
    float _2589 = exp2(_2580 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0)));
    float _2598 = (_2578 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2598 * (_2579 ? _2587 : (_2587 + (cbSceneParam._m0[72u].w * _2560)));
    SV_Target.y = _2598 * (_2579 ? _2588 : (_2588 + (cbSceneParam._m0[72u].w * _2562)));
    SV_Target.z = _2598 * (_2579 ? _2589 : (_2589 + (cbSceneParam._m0[72u].w * _2564)));
    SV_Target.w = cbInstanceData._m0[_2436].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2436].w;
}


