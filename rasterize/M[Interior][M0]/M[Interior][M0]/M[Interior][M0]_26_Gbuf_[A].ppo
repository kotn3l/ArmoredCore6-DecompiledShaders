#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M0_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _156 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _157 = _156 * _149;
    float _158 = _156 * _150;
    float _159 = _156 * _151;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    float _170 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _171 = _170 * TANGENT.x;
    float _172 = _170 * TANGENT.y;
    float _173 = _170 * TANGENT.z;
    float _218 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _228 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _218);
    float _229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _218);
    float _230 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _218);
    vec4 _249 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _255 = _249.w;
    float _268 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _255) + cbMtdParam._m0[11u].x) * _249.x;
    float _270 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _255) + cbMtdParam._m0[11u].y) * _249.y;
    float _272 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _255) + cbMtdParam._m0[11u].z) * _249.z;
    vec4 _290 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _294 = _290.z;
    float _317 = (_290.x * 2.0) + (-1.0);
    float _319 = (_290.y * 2.0) + (-1.0);
    float _322 = _317 - (_317 * _255);
    float _323 = _319 - (_319 * _255);
    float _332 = cbMtdParam._m0[22u].y + _228;
    float _333 = cbMtdParam._m0[22u].z + _229;
    float _334 = cbMtdParam._m0[22u].w + _230;
    float _348 = (-0.0) - dot(vec3(_332, _333, _334), vec3(_157, _158, _159));
    float _349 = (-0.0) - dot(vec3(_332, _333, _334), vec3(_171, _172, _173));
    float _350 = (-0.0) - dot(vec3(_332, _333, _334), vec3((-0.0) - _164, (-0.0) - _165, (-0.0) - _166));
    float _354 = inversesqrt(dot(vec3(_348, _349, _350), vec3(_348, _349, _350)));
    float _357 = _354 * _350;
    float _358 = (_354 * _348) + (_322 * cbMtdParam._m0[20u].y);
    float _359 = (_354 * _349) + (_323 * cbMtdParam._m0[20u].z);
    float _360 = _358 * cbMtdParam._m0[19u].x;
    float _361 = _359 * cbMtdParam._m0[18u].w;
    float _362 = fract(TEXCOORD.x);
    float _363 = fract(TEXCOORD.y);
    float _369;
    if (_360 > 0.0)
    {
        _369 = (1.0 - _362) / _360;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_360 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _362) / _360;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _369 = frontier_phi_3_2_ladder;
    }
    float _377;
    if (_361 > 0.0)
    {
        _377 = (1.0 - _363) / _361;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_361 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _363) / _361;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _377 = frontier_phi_7_6_ladder;
    }
    bool _379 = _357 > 0.0;
    float _381 = _379 ? (cbMtdParam._m0[15u].x / _357) : 5000.0;
    float _382 = isnan(_377) ? _369 : (isnan(_369) ? _377 : min(_369, _377));
    float _383 = isnan(_381) ? _382 : (isnan(_382) ? _381 : min(_382, _381));
    float _387 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _388 = _362 + (-0.5);
    float _391 = _363 + (-0.5);
    float _394 = ((_383 * _357) + _387) / _387;
    vec4 _419 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_388 + (_383 * _360)) / _394) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_391 + (_383 * _361)) / _394) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _421 = _419.x;
    float _422 = _419.y;
    float _423 = _419.z;
    float _435 = (_421 - (_421 * _255)) * cbMtdParam._m0[9u].x;
    float _436 = (_422 - (_422 * _255)) * cbMtdParam._m0[9u].y;
    float _437 = cbMtdParam._m0[9u].z * (_423 - (_423 * _255));
    float _455 = _358 * cbMtdParam._m0[21u].x;
    float _456 = _359 * cbMtdParam._m0[20u].w;
    bool _457 = _455 > 0.0;
    float _462;
    if (_457)
    {
        _462 = (1.0 - _362) / _455;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_455 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _362) / _455;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _462 = frontier_phi_11_10_ladder;
    }
    bool _464 = _456 > 0.0;
    float _469;
    if (_464)
    {
        _469 = (1.0 - _363) / _456;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _363) / _456;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _469 = frontier_phi_15_14_ladder;
    }
    float _472 = _379 ? (cbMtdParam._m0[16u].z / _357) : 5000.0;
    float _473 = isnan(_469) ? _462 : (isnan(_462) ? _469 : min(_462, _469));
    float _474 = isnan(_472) ? _473 : (isnan(_473) ? _472 : min(_473, _472));
    float _478 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _482 = ((_474 * _357) + _478) / _478;
    float _487 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _489 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _505 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_388 + (_474 * _455)) / _482) + 0.5) + _487) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_391 + (_474 * _456)) / _482) + 0.5) + _489) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _510 = _505.x * cbMtdParam._m0[10u].x;
    float _511 = _505.y * cbMtdParam._m0[10u].y;
    float _512 = _505.z * cbMtdParam._m0[10u].z;
    float _520;
    if (_457)
    {
        _520 = (1.0 - _362) / _455;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_455 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _362) / _455;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _520 = frontier_phi_19_18_ladder;
    }
    float _526;
    if (_464)
    {
        _526 = (1.0 - _363) / _456;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _363) / _456;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _526 = frontier_phi_23_22_ladder;
    }
    float _528 = isnan(_526) ? _520 : (isnan(_520) ? _526 : min(_520, _526));
    float _529 = isnan(_472) ? _528 : (isnan(_528) ? _472 : min(_528, _472));
    float _536 = ((_529 * _357) + _478) / _478;
    vec4 _550 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_388 + (_529 * _455)) / _536) + 0.5) + _487) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_391 + (_529 * _456)) / _536) + 0.5) + _489) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _552 = _550.w;
    float _554 = _552 - (_552 * _255);
    float _564 = (_554 * ((_510 - _435) - (_510 * _255))) + _435;
    float _565 = (_554 * ((_511 - _436) - (_511 * _255))) + _436;
    float _566 = (_554 * ((_512 - _437) - (_512 * _255))) + _437;
    float _580 = _358 * cbMtdParam._m0[21u].z;
    float _581 = _359 * cbMtdParam._m0[21u].y;
    bool _582 = _580 > 0.0;
    float _587;
    if (_582)
    {
        _587 = (1.0 - _362) / _580;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_580 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _362) / _580;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _587 = frontier_phi_27_26_ladder;
    }
    bool _589 = _581 > 0.0;
    float _594;
    if (_589)
    {
        _594 = (1.0 - _363) / _581;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_581 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _363) / _581;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _594 = frontier_phi_31_30_ladder;
    }
    float _597 = _379 ? (cbMtdParam._m0[18u].x / _357) : 5000.0;
    float _598 = isnan(_594) ? _587 : (isnan(_587) ? _594 : min(_587, _594));
    float _599 = isnan(_597) ? _598 : (isnan(_598) ? _597 : min(_598, _597));
    float _603 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _607 = ((_599 * _357) + _603) / _603;
    float _612 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _614 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _631 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_388 + (_599 * _580)) / _607) + 0.5) + _612) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_391 + (_599 * _581)) / _607) + 0.5) + _614) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _636 = _631.x * cbMtdParam._m0[14u].x;
    float _637 = _631.y * cbMtdParam._m0[14u].y;
    float _638 = _631.z * cbMtdParam._m0[14u].z;
    float _646;
    if (_582)
    {
        _646 = (1.0 - _362) / _580;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_580 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _362) / _580;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _646 = frontier_phi_35_34_ladder;
    }
    float _652;
    if (_589)
    {
        _652 = (1.0 - _363) / _581;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_581 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _363) / _581;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _652 = frontier_phi_39_38_ladder;
    }
    float _654 = isnan(_652) ? _646 : (isnan(_646) ? _652 : min(_646, _652));
    float _655 = isnan(_597) ? _654 : (isnan(_654) ? _597 : min(_654, _597));
    float _662 = ((_655 * _357) + _603) / _603;
    vec4 _676 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_388 + (_655 * _580)) / _662) + 0.5) + _612) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_391 + (_655 * _581)) / _662) + 0.5) + _614) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _678 = _676.w;
    float _680 = _678 - (_678 * _255);
    float _691 = 0.5 - (_255 * 0.5);
    float _701 = (((_564 - _268) + (_680 * ((_636 - _564) - (_636 * _255)))) * _691) + _268;
    float _702 = (((_565 - _270) + (_680 * ((_637 - _565) - (_637 * _255)))) * _691) + _270;
    float _703 = (((_566 - _272) + (_680 * ((_638 - _566) - (_638 * _255)))) * _691) + _272;
    vec4 _715 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _719 = _715.z;
    float _722 = (_715.x * 2.0) + (-1.0);
    float _723 = (_715.y * 2.0) + (-1.0);
    float _724 = dot(vec2(_722, _723), vec2(_722, _723));
    float _1051 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _729 = sqrt(1.0 - (isnan(1.0) ? _1051 : (isnan(_1051) ? 1.0 : min(_1051, 1.0))));
    float _730 = _719 * _255;
    float _737 = (cbMtdParam._m0[15u].w * ((_294 - _730) + ((_719 - _294) * _255))) + _730;
    float _741 = (cbMtdParam._m0[16u].x * _322) + _722;
    float _742 = (cbMtdParam._m0[16u].x * _323) + _723;
    float _745 = fma(_729, _164, fma(_742, _171, _741 * _157));
    float _748 = fma(_729, _165, fma(_742, _172, _741 * _158));
    float _751 = fma(_729, _166, fma(_742, _173, _741 * _159));
    float _755 = inversesqrt(dot(vec3(_745, _748, _751), vec3(_745, _748, _751)));
    float _1062 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _1073 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _757 = isnan(1.0) ? _1073 : (isnan(_1073) ? 1.0 : min(_1073, 1.0));
    float _1084 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _758 = isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0));
    float _1095 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _759 = isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0));
    uint _761 = uint(roundEven(NORMAL.w));
    vec4 _766 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _768 = _766.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _830 = sqrt(((_228 * _228) + (_229 * _229)) + (_230 * _230));
        float _836 = (cbMatDynParam._m0[5u].x * _830) + cbMatDynParam._m0[5u].y;
        float _1106 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _837 = isnan(1.0) ? _1106 : (isnan(_1106) ? 1.0 : min(_1106, 1.0));
        float _841 = (cbMatDynParam._m0[5u].z * _830) + cbMatDynParam._m0[5u].w;
        float _1117 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1117 : (isnan(_1117) ? 1.0 : min(_1117, 1.0))) - _837)) + _837) < ((_768 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _868;
    uint _789;
    vec4 _794;
    float _801;
    float _802;
    float _803;
    float _807;
    vec4 _810;
    float _812;
    float _813;
    bool _824;
    for (;;)
    {
        _789 = _761 * 13u;
        _794 = cbInstanceData._m0[(_789 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _798 = (cbMtdParam._m0[0u].x * _757) * _794.x;
        float _799 = (cbMtdParam._m0[0u].y * _758) * _794.y;
        float _800 = (cbMtdParam._m0[0u].z * _759) * _794.z;
        float _1128 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        _801 = isnan(1.0) ? _1128 : (isnan(_1128) ? 1.0 : min(_1128, 1.0));
        float _1139 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
        _802 = isnan(1.0) ? _1139 : (isnan(_1139) ? 1.0 : min(_1139, 1.0));
        float _1150 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
        _803 = isnan(1.0) ? _1150 : (isnan(_1150) ? 1.0 : min(_1150, 1.0));
        _807 = cbInstanceData._m0[_789 + 6u].w;
        float _808 = _768 + (-0.5);
        _810 = cbMtdParam._m0[1u];
        _812 = _810.y * _808;
        _813 = _808 * 0.999000012874603271484375;
        _824 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_824)
        {
            if ((cbInstanceData._m0[_789 + 7u].x + _813) < 0.5)
            {
                _868 = true;
                break;
            }
        }
        if ((_794.w < 1.0) && ((_794.w + _813) < 0.5))
        {
            _868 = true;
            break;
        }
        if ((_812 + 1.0) < _810.x)
        {
            _868 = true;
            break;
        }
        _868 = false;
        break;
    }
    if (_868)
    {
        discard_state = true;
    }
    bool _894 = cbMtdParam._m0[1u].z != 0.0;
    float _895 = _894 ? _807 : 0.0;
    SV_Target.x = ((_745 * 0.5) * _755) + 0.500488758087158203125;
    SV_Target.y = ((_748 * 0.5) * _755) + 0.500488758087158203125;
    SV_Target.z = ((_751 * 0.5) * _755) + 0.500488758087158203125;
    SV_Target.w = _895;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1062 : (isnan(_1062) ? 1.0 : min(_1062, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _894 ? _807 : TEXCOORD.z;
    SV_Target_2.x = _801;
    SV_Target_2.y = _802;
    SV_Target_2.z = _803;
    SV_Target_2.w = _894 ? _807 : (float(floatBitsToUint(cbInstanceData._m0[_789 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _895;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _895;
    discard_exit();
}


