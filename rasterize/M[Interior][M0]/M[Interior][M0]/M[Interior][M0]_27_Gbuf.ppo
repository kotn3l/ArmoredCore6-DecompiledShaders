#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

float _377;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _140 = _139 * _132;
    float _141 = _139 * _133;
    float _142 = _139 * _134;
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _154 = _153 * TANGENT.x;
    float _155 = _153 * TANGENT.y;
    float _156 = _153 * TANGENT.z;
    float _201 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _232 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _238 = _232.w;
    float _251 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _238) + cbMtdParam._m0[11u].x) * _232.x;
    float _253 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _238) + cbMtdParam._m0[11u].y) * _232.y;
    float _255 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _238) + cbMtdParam._m0[11u].z) * _232.z;
    vec4 _291 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _295 = _291.z;
    float _299 = (_291.x * 2.0) + (-1.0);
    float _301 = (_291.y * 2.0) + (-1.0);
    float _307 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _314 = inversesqrt(dot(vec3(_154, _155, _156), vec3(_154, _155, _156)));
    float _324 = cbMtdParam._m0[23u].x + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _201));
    float _325 = cbMtdParam._m0[23u].y + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _201));
    float _326 = cbMtdParam._m0[23u].z + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _201));
    float _340 = (-0.0) - dot(vec3(_324, _325, _326), vec3(_307 * _140, _307 * _141, _307 * _142));
    float _341 = (-0.0) - dot(vec3(_324, _325, _326), vec3(_314 * _154, _314 * _155, _314 * _156));
    float _342 = (-0.0) - dot(vec3(_324, _325, _326), vec3((-0.0) - _147, (-0.0) - _148, (-0.0) - _149));
    float _346 = inversesqrt(dot(vec3(_340, _341, _342), vec3(_340, _341, _342)));
    float _347 = _346 * _342;
    float _352 = ((cbMtdParam._m0[19u].w * _340) * _346) + (_299 * cbMtdParam._m0[20u].y);
    float _353 = ((cbMtdParam._m0[20u].x * _341) * _346) + (_301 * cbMtdParam._m0[20u].z);
    float _356 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _357 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _375;
    float _378;
    float _380;
    if (_352 > 0.0)
    {
        float _361 = (1.0 - _356) / _352;
        _375 = _361;
        _378 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_361 * _347)) * 0.16666667163372039794921875;
        _380 = (fract((_361 * _353) + _357) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_352 < 0.0)
        {
            float _376 = ((-0.0) - _356) / _352;
            frontier_phi_3_2_ladder = _376;
            frontier_phi_3_2_ladder_1 = (fract(_376 * _347) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_376 * _353) + _357) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _377;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _375 = frontier_phi_3_2_ladder;
        _378 = frontier_phi_3_2_ladder_1;
        _380 = frontier_phi_3_2_ladder_2;
    }
    float _406;
    float _408;
    float _410;
    if (_353 > 0.0)
    {
        float _393 = (1.0 - _357) / _353;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_393 < _375)
        {
            frontier_phi_8_5_ladder = _393;
            frontier_phi_8_5_ladder_1 = (fract((_393 * _352) + _356) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_393 * _347) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _375;
            frontier_phi_8_5_ladder_1 = _378;
            frontier_phi_8_5_ladder_2 = _380;
        }
        _406 = frontier_phi_8_5_ladder;
        _408 = frontier_phi_8_5_ladder_1;
        _410 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_353 < 0.0)
        {
            float _407 = ((-0.0) - _357) / _353;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_407 < _375)
            {
                frontier_phi_8_6_ladder_9_ladder = _407;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_407 * _352) + _356) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_407 * _347) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _375;
                frontier_phi_8_6_ladder_9_ladder_1 = _378;
                frontier_phi_8_6_ladder_9_ladder_2 = _380;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _375;
            frontier_phi_8_6_ladder_1 = _378;
            frontier_phi_8_6_ladder_2 = _380;
        }
        _406 = frontier_phi_8_6_ladder;
        _408 = frontier_phi_8_6_ladder_1;
        _410 = frontier_phi_8_6_ladder_2;
    }
    float _414 = (_347 > 0.0) ? (cbMtdParam._m0[16u].w / _347) : 5000.0;
    float _427;
    float _428;
    if (_414 < _406)
    {
        _427 = ((_356 + cbMtdParam._m0[17u].x) + (_414 * _352)) * 0.16666667163372039794921875;
        _428 = (((_414 * _353) + _357) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _427 = _408;
        _428 = _410;
    }
    vec4 _430 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_427, _428));
    float _435 = _430.x * cbMtdParam._m0[13u].x;
    float _436 = _430.y * cbMtdParam._m0[13u].y;
    float _437 = _430.z * cbMtdParam._m0[13u].z;
    float _442 = 0.5 - (_238 * 0.5);
    float _452 = (((_435 - _251) - (_435 * _238)) * _442) + _251;
    float _453 = (((_436 - _253) - (_436 * _238)) * _442) + _253;
    float _454 = (((_437 - _255) - (_437 * _238)) * _442) + _255;
    vec4 _466 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _470 = _466.z;
    float _473 = (_466.x * 2.0) + (-1.0);
    float _474 = (_466.y * 2.0) + (-1.0);
    float _475 = dot(vec2(_473, _474), vec2(_473, _474));
    float _633 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _480 = sqrt(1.0 - (isnan(1.0) ? _633 : (isnan(_633) ? 1.0 : min(_633, 1.0))));
    float _481 = _470 * _238;
    float _491 = (cbMtdParam._m0[15u].w * ((_295 - _481) + ((_470 - _295) * _238))) + _481;
    float _499 = (cbMtdParam._m0[16u].x * (_299 - (_299 * _238))) + _473;
    float _500 = (cbMtdParam._m0[16u].x * (_301 - (_301 * _238))) + _474;
    float _503 = fma(_480, _147, fma(_500, _154, _499 * _140));
    float _506 = fma(_480, _148, fma(_500, _155, _499 * _141));
    float _509 = fma(_480, _149, fma(_500, _156, _499 * _142));
    float _513 = inversesqrt(dot(vec3(_503, _506, _509), vec3(_503, _506, _509)));
    float _644 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _655 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _666 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _677 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    uint _532 = uint(roundEven(NORMAL.w)) * 13u;
    uint _534 = (_532 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _540 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _655 : (isnan(_655) ? 1.0 : min(_655, 1.0)))) * cbInstanceData._m0[_534].x;
    float _541 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _666 : (isnan(_666) ? 1.0 : min(_666, 1.0)))) * cbInstanceData._m0[_534].y;
    float _542 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _677 : (isnan(_677) ? 1.0 : min(_677, 1.0)))) * cbInstanceData._m0[_534].z;
    float _688 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _699 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _710 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    uint _546 = _532 + 6u;
    bool _573 = cbMtdParam._m0[1u].z != 0.0;
    float _574 = _573 ? cbInstanceData._m0[_546].w : 0.0;
    SV_Target.x = ((_503 * 0.5) * _513) + 0.500488758087158203125;
    SV_Target.y = ((_506 * 0.5) * _513) + 0.500488758087158203125;
    SV_Target.z = ((_509 * 0.5) * _513) + 0.500488758087158203125;
    SV_Target.w = _574;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _644 : (isnan(_644) ? 1.0 : min(_644, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _573 ? cbInstanceData._m0[_546].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _688 : (isnan(_688) ? 1.0 : min(_688, 1.0));
    SV_Target_2.y = isnan(1.0) ? _699 : (isnan(_699) ? 1.0 : min(_699, 1.0));
    SV_Target_2.z = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    SV_Target_2.w = _573 ? cbInstanceData._m0[_546].w : (float(floatBitsToUint(cbInstanceData._m0[_532 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _574;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _574;
}


