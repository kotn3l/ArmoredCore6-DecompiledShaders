#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _883;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _255 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _245);
    float _256 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _245);
    float _257 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _245);
    float _283 = cbMtdParam._m0[22u].y + _255;
    float _284 = cbMtdParam._m0[22u].z + _256;
    float _285 = cbMtdParam._m0[22u].w + _257;
    float _299 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_183 * _176, _183 * _177, _183 * _178));
    float _300 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_197 * TANGENT.x, _197 * TANGENT.y, _197 * TANGENT.z));
    float _301 = (-0.0) - dot(vec3(_283, _284, _285), vec3((-0.0) - (_190 * NORMAL.x), (-0.0) - (_190 * NORMAL.y), (-0.0) - (_190 * NORMAL.z)));
    float _305 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _306 = _305 * _301;
    float _308 = (cbMtdParam._m0[19u].x * _299) * _305;
    float _310 = (cbMtdParam._m0[18u].w * _300) * _305;
    float _311 = fract(TEXCOORD.x);
    float _312 = fract(TEXCOORD.y);
    float _318;
    if (_308 > 0.0)
    {
        _318 = (1.0 - _311) / _308;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_308 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _311) / _308;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _318 = frontier_phi_3_2_ladder;
    }
    float _326;
    if (_310 > 0.0)
    {
        _326 = (1.0 - _312) / _310;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_310 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _312) / _310;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _326 = frontier_phi_7_6_ladder;
    }
    bool _328 = _306 > 0.0;
    float _330 = _328 ? (cbMtdParam._m0[15u].x / _306) : 5000.0;
    float _331 = isnan(_326) ? _318 : (isnan(_318) ? _326 : min(_318, _326));
    float _332 = isnan(_330) ? _331 : (isnan(_331) ? _330 : min(_331, _330));
    float _336 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _337 = _311 + (-0.5);
    float _340 = _312 + (-0.5);
    float _343 = ((_332 * _306) + _336) / _336;
    vec4 _369 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_337 + (_332 * _308)) / _343) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_340 + (_332 * _310)) / _343) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _380 = cbMtdParam._m0[9u].x * _369.x;
    float _381 = cbMtdParam._m0[9u].y * _369.y;
    float _382 = cbMtdParam._m0[9u].z * _369.z;
    float _404 = (cbMtdParam._m0[21u].x * _299) * _305;
    float _406 = (cbMtdParam._m0[20u].w * _300) * _305;
    bool _407 = _404 > 0.0;
    float _412;
    if (_407)
    {
        _412 = (1.0 - _311) / _404;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _311) / _404;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _412 = frontier_phi_11_10_ladder;
    }
    bool _414 = _406 > 0.0;
    float _419;
    if (_414)
    {
        _419 = (1.0 - _312) / _406;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _312) / _406;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _419 = frontier_phi_15_14_ladder;
    }
    float _422 = _328 ? (cbMtdParam._m0[16u].z / _306) : 5000.0;
    float _423 = isnan(_419) ? _412 : (isnan(_412) ? _419 : min(_412, _419));
    float _424 = isnan(_422) ? _423 : (isnan(_423) ? _422 : min(_423, _422));
    float _428 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _432 = ((_424 * _306) + _428) / _428;
    float _437 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _439 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _455 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_424 * _404)) / _432) + 0.5) + _437) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_424 * _406)) / _432) + 0.5) + _439) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _467;
    if (_407)
    {
        _467 = (1.0 - _311) / _404;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _311) / _404;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _467 = frontier_phi_19_18_ladder;
    }
    float _473;
    if (_414)
    {
        _473 = (1.0 - _312) / _406;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _312) / _406;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _473 = frontier_phi_23_22_ladder;
    }
    float _475 = isnan(_473) ? _467 : (isnan(_467) ? _473 : min(_467, _473));
    float _476 = isnan(_422) ? _475 : (isnan(_475) ? _422 : min(_475, _422));
    float _483 = ((_476 * _306) + _428) / _428;
    vec4 _497 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_476 * _404)) / _483) + 0.5) + _437) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_476 * _406)) / _483) + 0.5) + _439) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _499 = _497.w;
    float _506 = (_499 * ((_455.x * cbMtdParam._m0[10u].x) - _380)) + _380;
    float _507 = (_499 * ((_455.y * cbMtdParam._m0[10u].y) - _381)) + _381;
    float _508 = (_499 * ((_455.z * cbMtdParam._m0[10u].z) - _382)) + _382;
    float _3100 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _3111 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _3122 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _527 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _531 = inversesqrt(dot(vec3(_255, _256, _257), vec3(_255, _256, _257)));
    float _532 = _255 * _531;
    float _533 = _256 * _531;
    float _534 = _257 * _531;
    float _540 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _541 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _554 = uint(roundEven(NORMAL.w)) * 13u;
    uint _557 = (_554 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _563 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0)))) * cbInstanceData._m0[_557].x;
    float _564 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0)))) * cbInstanceData._m0[_557].y;
    float _565 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3122 : (isnan(_3122) ? 1.0 : min(_3122, 1.0)))) * cbInstanceData._m0[_557].z;
    float _3133 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _566 = isnan(1.0) ? _3133 : (isnan(_3133) ? 1.0 : min(_3133, 1.0));
    float _3144 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _567 = isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0));
    float _3155 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _568 = isnan(1.0) ? _3155 : (isnan(_3155) ? 1.0 : min(_3155, 1.0));
    vec4 _577 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _540, cbSceneParam._m0[86u].y * _541));
    float _580 = _577.x * TEXCOORD.z;
    float _581 = (-0.0) - _532;
    float _582 = (-0.0) - _533;
    float _583 = (-0.0) - _534;
    float _605 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _609 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _613 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _882;
    float _884;
    float _885;
    float _886;
    float _887;
    float _888;
    float _889;
    float _890;
    float _891;
    float _892;
    float _893;
    float _894;
    float _895;
    float _896;
    float _897;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _669 = (cbModelParam._m0[37u].x * ((((fma(_613, cbModelParam._m0[26u].z, fma(_609, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _605)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _671 = (cbModelParam._m0[37u].y * ((((fma(_613, cbModelParam._m0[27u].z, fma(_609, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _605)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _672 = (((((fma(_613, cbModelParam._m0[28u].z, fma(_609, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _605)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _675 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_669, _671, _672), 0.0);
        vec4 _682 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_669, _671, _672), 0.0);
        vec4 _689 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_669, _671, _672), 0.0);
        vec4 _696 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_669, _671, _672), 0.0);
        float _709 = exp2((_675.w + (-0.5)) * 20.0) * 2.0;
        float _711 = _709 * (_675.x + (-0.5));
        float _712 = _709 * (_675.y + (-0.5));
        float _713 = _709 * (_675.z + (-0.5));
        float _720 = exp2((_682.w + (-0.5)) * 20.0) * 2.0;
        float _721 = _720 * (_682.x + (-0.5));
        float _722 = _720 * (_682.y + (-0.5));
        float _723 = _720 * (_682.z + (-0.5));
        float _730 = exp2((_689.w + (-0.5)) * 20.0) * 2.0;
        float _731 = _730 * (_689.x + (-0.5));
        float _732 = _730 * (_689.y + (-0.5));
        float _733 = _730 * (_689.z + (-0.5));
        float _740 = exp2((_696.w + (-0.5)) * 20.0) * 2.0;
        float _741 = _740 * (_696.x + (-0.5));
        float _742 = _740 * (_696.y + (-0.5));
        float _743 = _740 * (_696.z + (-0.5));
        float _744 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
        float _745 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
        float _746 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
        float _747 = _711 * 0.5;
        float _748 = _721 * 0.5;
        float _749 = _731 * 0.5;
        float _750 = dot(vec3(_747, _748, _749), vec3(_747, _748, _749));
        float _755 = (_750 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_750);
        float _764 = (dot(vec3(0.0), vec3(_755 * _747, _755 * _748, _755 * _749)) + 1.0) * 0.5;
        float _3181 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
        float _774 = sqrt(((_748 * _748) + (_747 * _747)) + (_749 * _749)) / (_744 + 9.9999997473787516355514526367188e-06);
        float _3192 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
        float _775 = isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0));
        float _776 = _775 * 2.0;
        float _780 = (1.0 - _775) / (_775 + 1.0);
        float _3203 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
        float _781 = isnan(1.0) ? _3203 : (isnan(_3203) ? 1.0 : min(_3203, 1.0));
        float _790 = ((((1.0 - _781) * (_776 + 2.0)) * exp2(log2(isnan(1.0) ? _3181 : (isnan(_3181) ? 1.0 : min(_3181, 1.0))) * (_776 + 1.0))) + _781) * _744;
        float _791 = _712 * 0.5;
        float _792 = _722 * 0.5;
        float _793 = _732 * 0.5;
        float _794 = dot(vec3(_791, _792, _793), vec3(_791, _792, _793));
        float _799 = (_794 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_794);
        float _807 = (dot(vec3(0.0), vec3(_799 * _791, _799 * _792, _799 * _793)) + 1.0) * 0.5;
        float _3214 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _816 = sqrt(((_792 * _792) + (_791 * _791)) + (_793 * _793)) / (_745 + 9.9999997473787516355514526367188e-06);
        float _3225 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
        float _817 = isnan(1.0) ? _3225 : (isnan(_3225) ? 1.0 : min(_3225, 1.0));
        float _818 = _817 * 2.0;
        float _822 = (1.0 - _817) / (_817 + 1.0);
        float _3236 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
        float _823 = isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0));
        float _832 = ((((1.0 - _823) * (_818 + 2.0)) * exp2(log2(isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0))) * (_818 + 1.0))) + _823) * _745;
        float _833 = _713 * 0.5;
        float _834 = _723 * 0.5;
        float _835 = _733 * 0.5;
        float _836 = dot(vec3(_833, _834, _835), vec3(_833, _834, _835));
        float _841 = (_836 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_836);
        float _849 = (dot(vec3(0.0), vec3(_841 * _833, _841 * _834, _841 * _835)) + 1.0) * 0.5;
        float _3247 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        float _858 = sqrt(((_834 * _834) + (_833 * _833)) + (_835 * _835)) / (_746 + 9.9999997473787516355514526367188e-06);
        float _3258 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
        float _859 = isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0));
        float _860 = _859 * 2.0;
        float _864 = (1.0 - _859) / (_859 + 1.0);
        float _3269 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
        float _865 = isnan(1.0) ? _3269 : (isnan(_3269) ? 1.0 : min(_3269, 1.0));
        float _874 = ((((1.0 - _865) * (_860 + 2.0)) * exp2(log2(isnan(1.0) ? _3247 : (isnan(_3247) ? 1.0 : min(_3247, 1.0))) * (_860 + 1.0))) + _865) * _746;
        _882 = _713;
        _884 = _712;
        _885 = _711;
        _886 = _723;
        _887 = _722;
        _888 = _721;
        _889 = _733;
        _890 = _732;
        _891 = _731;
        _892 = _746;
        _893 = _745;
        _894 = _744;
        _895 = cbModelParam._m0[36u].z * (isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0)));
        _896 = cbModelParam._m0[36u].z * (isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0)));
        _897 = cbModelParam._m0[36u].z * (isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0)));
    }
    else
    {
        _882 = _883;
        _884 = _883;
        _885 = _883;
        _886 = _883;
        _887 = _883;
        _888 = _883;
        _889 = _883;
        _890 = _883;
        _891 = _883;
        _892 = _883;
        _893 = _883;
        _894 = _883;
        _895 = 0.0;
        _896 = 0.0;
        _897 = 0.0;
    }
    float _1158;
    float _1159;
    float _1160;
    float _1161;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _951 = (cbModelParam._m0[38u].x * ((((fma(_613, cbModelParam._m0[30u].z, fma(_609, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _605)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _952 = (cbModelParam._m0[38u].y * ((((fma(_613, cbModelParam._m0[31u].z, fma(_609, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _605)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _953 = (((((fma(_613, cbModelParam._m0[32u].z, fma(_609, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _605)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _955 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_951, _952, _953), 0.0);
        vec4 _962 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_951, _952, _953), 0.0);
        vec4 _969 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_951, _952, _953), 0.0);
        vec4 _976 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_951, _952, _953), 0.0);
        float _988 = exp2((_955.w + (-0.5)) * 20.0) * 2.0;
        float _989 = _988 * (_955.x + (-0.5));
        float _990 = _988 * (_955.y + (-0.5));
        float _991 = _988 * (_955.z + (-0.5));
        float _998 = exp2((_962.w + (-0.5)) * 20.0) * 2.0;
        float _999 = _998 * (_962.x + (-0.5));
        float _1000 = _998 * (_962.y + (-0.5));
        float _1001 = _998 * (_962.z + (-0.5));
        float _1008 = exp2((_969.w + (-0.5)) * 20.0) * 2.0;
        float _1009 = _1008 * (_969.x + (-0.5));
        float _1010 = _1008 * (_969.y + (-0.5));
        float _1011 = _1008 * (_969.z + (-0.5));
        float _1018 = exp2((_976.w + (-0.5)) * 20.0) * 2.0;
        float _1019 = _1018 * (_976.x + (-0.5));
        float _1020 = _1018 * (_976.y + (-0.5));
        float _1021 = _1018 * (_976.z + (-0.5));
        float _1022 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1023 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1024 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1025 = _989 * 0.5;
        float _1026 = _999 * 0.5;
        float _1027 = _1009 * 0.5;
        float _1028 = dot(vec3(_1025, _1026, _1027), vec3(_1025, _1026, _1027));
        float _1033 = (_1028 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1028);
        float _1041 = (dot(vec3(0.0), vec3(_1033 * _1025, _1033 * _1026, _1033 * _1027)) + 1.0) * 0.5;
        float _3310 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
        float _1050 = sqrt(((_1026 * _1026) + (_1025 * _1025)) + (_1027 * _1027)) / (_1022 + 9.9999997473787516355514526367188e-06);
        float _3321 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
        float _1051 = isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0));
        float _1052 = _1051 * 2.0;
        float _1056 = (1.0 - _1051) / (_1051 + 1.0);
        float _3332 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1057 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
        float _1066 = ((((1.0 - _1057) * (_1052 + 2.0)) * exp2(log2(isnan(1.0) ? _3310 : (isnan(_3310) ? 1.0 : min(_3310, 1.0))) * (_1052 + 1.0))) + _1057) * _1022;
        float _1067 = _990 * 0.5;
        float _1068 = _1000 * 0.5;
        float _1069 = _1010 * 0.5;
        float _1070 = dot(vec3(_1067, _1068, _1069), vec3(_1067, _1068, _1069));
        float _1075 = (_1070 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1070);
        float _1083 = (dot(vec3(0.0), vec3(_1075 * _1067, _1075 * _1068, _1075 * _1069)) + 1.0) * 0.5;
        float _3343 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1092 = sqrt(((_1068 * _1068) + (_1067 * _1067)) + (_1069 * _1069)) / (_1023 + 9.9999997473787516355514526367188e-06);
        float _3354 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1093 = isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0));
        float _1094 = _1093 * 2.0;
        float _1098 = (1.0 - _1093) / (_1093 + 1.0);
        float _3365 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1099 = isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0));
        float _1108 = ((((1.0 - _1099) * (_1094 + 2.0)) * exp2(log2(isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0))) * (_1094 + 1.0))) + _1099) * _1023;
        float _1109 = _991 * 0.5;
        float _1110 = _1001 * 0.5;
        float _1111 = _1011 * 0.5;
        float _1112 = dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111));
        float _1117 = (_1112 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1112);
        float _1125 = (dot(vec3(0.0), vec3(_1117 * _1109, _1117 * _1110, _1117 * _1111)) + 1.0) * 0.5;
        float _3376 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1134 = sqrt(((_1110 * _1110) + (_1109 * _1109)) + (_1111 * _1111)) / (_1024 + 9.9999997473787516355514526367188e-06);
        float _3387 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1135 = isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0));
        float _1136 = _1135 * 2.0;
        float _1140 = (1.0 - _1135) / (_1135 + 1.0);
        float _3398 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
        float _1150 = ((((1.0 - _1141) * (_1136 + 2.0)) * exp2(log2(isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0))) * (_1136 + 1.0))) + _1141) * _1024;
        _1158 = _991;
        _1159 = _990;
        _1160 = _989;
        _1161 = _1001;
        _1162 = _1000;
        _1163 = _999;
        _1164 = _1011;
        _1165 = _1010;
        _1166 = _1009;
        _1167 = _1024;
        _1168 = _1023;
        _1169 = _1022;
        _1170 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0)));
        _1171 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0)));
        _1172 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0)));
    }
    else
    {
        _1158 = _883;
        _1159 = _883;
        _1160 = _883;
        _1161 = _883;
        _1162 = _883;
        _1163 = _883;
        _1164 = _883;
        _1165 = _883;
        _1166 = _883;
        _1167 = _883;
        _1168 = _883;
        _1169 = _883;
        _1170 = 0.0;
        _1171 = 0.0;
        _1172 = 0.0;
    }
    float _1182 = (cbModelParam._m0[1u].x * (_1170 - _895)) + _895;
    float _1183 = (cbModelParam._m0[1u].x * (_1171 - _896)) + _896;
    float _1184 = (cbModelParam._m0[1u].x * (_1172 - _897)) + _897;
    float _1205 = fma(_1184, cbSceneParam._m0[89u].z, fma(_1183, cbSceneParam._m0[89u].y, _1182 * cbSceneParam._m0[89u].x));
    float _1208 = fma(_1184, cbSceneParam._m0[90u].z, fma(_1183, cbSceneParam._m0[90u].y, _1182 * cbSceneParam._m0[90u].x));
    float _1211 = fma(_1184, cbSceneParam._m0[91u].z, fma(_1183, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1182));
    float _1226 = _532 * (-0.5);
    float _1227 = _533 * (-0.5);
    float _1228 = _534 * (-0.5);
    float _1229 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_1160, _1163, _1166, _1169));
    float _1232 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_1159, _1162, _1165, _1168));
    float _1235 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_1158, _1161, _1164, _1167));
    float _1269;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1242 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_882, _886, _889, _892));
        float _1246 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_884, _887, _890, _893));
        float _1250 = dot(vec4(_1226, _1227, _1228, 1.0), vec4(_885, _888, _891, _894));
        float _1257 = dot(vec4(cbModelParam._m0[39u]), vec4(_1226, _1227, _1228, 1.0));
        _1269 = dot(vec3(isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0)), isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0)), isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1257) ? 0.0 : (isnan(0.0) ? _1257 : max(0.0, _1257))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1269 = 1.0;
    }
    float _1280;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1271 = dot(vec4(cbModelParam._m0[40u]), vec4(_1226, _1227, _1228, 1.0));
        _1280 = dot(vec3(isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0)), isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0)), isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1271) ? 0.0 : (isnan(0.0) ? _1271 : max(0.0, _1271))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1280 = 1.0;
    }
    float _1284 = (_1280 * cbModelParam._m0[1u].x) + (_1269 * (1.0 - cbModelParam._m0[1u].x));
    float _1293 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1375;
    float _1377;
    float _1379;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1342 = fma(_613, cbModelParam._m0[13u].z, fma(_609, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _605)) + cbModelParam._m0[13u].w;
        float _1346 = fma(_613, cbModelParam._m0[14u].z, fma(_609, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _605)) + cbModelParam._m0[14u].w;
        float _1350 = fma(_613, cbModelParam._m0[15u].z, fma(_609, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _605)) + cbModelParam._m0[15u].w;
        float _1353 = fma(_583, cbModelParam._m0[13u].z, fma(_582, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _581));
        float _1356 = fma(_583, cbModelParam._m0[14u].z, fma(_582, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _581));
        float _1359 = fma(_583, cbModelParam._m0[15u].z, fma(_582, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _581));
        float _1385;
        if (_1353 > 0.0)
        {
            _1385 = abs((1.0 - _1342) / _1353);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1353 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1342 + 1.0) / _1353);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1385 = frontier_phi_38_36_ladder;
        }
        float _1555;
        if (_1356 > 0.0)
        {
            _1555 = abs((1.0 - _1346) / _1356);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1356 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1346 + 1.0) / _1356);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1555 = frontier_phi_47_43_ladder;
        }
        float _1951;
        if (_1359 > 0.0)
        {
            _1951 = abs((1.0 - _1350) / _1359);
        }
        else
        {
            float frontier_phi_59_54_ladder;
            if (_1359 < 0.0)
            {
                frontier_phi_59_54_ladder = abs((_1350 + 1.0) / _1359);
            }
            else
            {
                frontier_phi_59_54_ladder = 5000.0;
            }
            _1951 = frontier_phi_59_54_ladder;
        }
        float _1953 = isnan(_1555) ? _1385 : (isnan(_1385) ? _1555 : min(_1385, _1555));
        float _1954 = isnan(_1951) ? _1953 : (isnan(_1953) ? _1951 : min(_1953, _1951));
        float _1958 = (_1954 * _1353) + _1342;
        float _1959 = (_1954 * _1356) + _1346;
        float _1960 = (_1954 * _1359) + _1350;
        float _1961 = _1954 * 9.9999997473787516355514526367188e-05;
        float _1963 = (-1.0) - _1961;
        float _1965 = _1961 + 1.0;
        float frontier_phi_37_59_ladder;
        float frontier_phi_37_59_ladder_1;
        float frontier_phi_37_59_ladder_2;
        if ((_1960 > _1965) || ((_1960 < _1963) || ((_1959 > _1965) || ((_1959 < _1963) || ((_1958 < _1963) || (_1958 > _1965))))))
        {
            frontier_phi_37_59_ladder = 0.0;
            frontier_phi_37_59_ladder_1 = 0.0;
            frontier_phi_37_59_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2195 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1960, cbModelParam._m0[9u].z, fma(_1959, cbModelParam._m0[9u].y, _1958 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1960, cbModelParam._m0[10u].z, fma(_1959, cbModelParam._m0[10u].y, _1958 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1960, cbModelParam._m0[11u].z, fma(_1959, cbModelParam._m0[11u].y, _1958 * cbModelParam._m0[11u].x))), _1293);
            frontier_phi_37_59_ladder = _2195.z * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_1 = _2195.y * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_2 = _2195.x * cbModelParam._m0[1u].y;
        }
        _1375 = frontier_phi_37_59_ladder_2;
        _1377 = frontier_phi_37_59_ladder_1;
        _1379 = frontier_phi_37_59_ladder;
    }
    else
    {
        vec4 _1363 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_581, _582, _583), _1293);
        _1375 = _1363.x * cbModelParam._m0[1u].y;
        _1377 = _1363.y * cbModelParam._m0[1u].y;
        _1379 = _1363.z * cbModelParam._m0[1u].y;
    }
    float _1382 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1470;
    float _1472;
    float _1474;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1434 = fma(_613, cbModelParam._m0[21u].z, fma(_609, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _605)) + cbModelParam._m0[21u].w;
        float _1438 = fma(_613, cbModelParam._m0[22u].z, fma(_609, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _605)) + cbModelParam._m0[22u].w;
        float _1442 = fma(_613, cbModelParam._m0[23u].z, fma(_609, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _605)) + cbModelParam._m0[23u].w;
        float _1445 = fma(_583, cbModelParam._m0[21u].z, fma(_582, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _581));
        float _1448 = fma(_583, cbModelParam._m0[22u].z, fma(_582, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _581));
        float _1451 = fma(_583, cbModelParam._m0[23u].z, fma(_582, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _581));
        float _1560;
        if (_1445 > 0.0)
        {
            _1560 = abs((1.0 - _1434) / _1445);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1445 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1434 + 1.0) / _1445);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1560 = frontier_phi_49_45_ladder;
        }
        float _1978;
        if (_1448 > 0.0)
        {
            _1978 = abs((1.0 - _1438) / _1448);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1448 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1438 + 1.0) / _1448);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _1978 = frontier_phi_61_56_ladder;
        }
        float _2317;
        if (_1451 > 0.0)
        {
            _2317 = abs((1.0 - _1442) / _1451);
        }
        else
        {
            float frontier_phi_73_68_ladder;
            if (_1451 < 0.0)
            {
                frontier_phi_73_68_ladder = abs((_1442 + 1.0) / _1451);
            }
            else
            {
                frontier_phi_73_68_ladder = 5000.0;
            }
            _2317 = frontier_phi_73_68_ladder;
        }
        float _2319 = isnan(_1978) ? _1560 : (isnan(_1560) ? _1978 : min(_1560, _1978));
        float _2320 = isnan(_2317) ? _2319 : (isnan(_2319) ? _2317 : min(_2319, _2317));
        float _2324 = (_2320 * _1445) + _1434;
        float _2325 = (_2320 * _1448) + _1438;
        float _2326 = (_2320 * _1451) + _1442;
        float _2327 = _2320 * 9.9999997473787516355514526367188e-05;
        float _2328 = (-1.0) - _2327;
        float _2330 = _2327 + 1.0;
        float frontier_phi_46_73_ladder;
        float frontier_phi_46_73_ladder_1;
        float frontier_phi_46_73_ladder_2;
        if ((_2326 > _2330) || ((_2326 < _2328) || ((_2325 > _2330) || ((_2325 < _2328) || ((_2324 < _2328) || (_2324 > _2330))))))
        {
            frontier_phi_46_73_ladder = 0.0;
            frontier_phi_46_73_ladder_1 = 0.0;
            frontier_phi_46_73_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2444 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2326, cbModelParam._m0[17u].z, fma(_2325, cbModelParam._m0[17u].y, _2324 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2326, cbModelParam._m0[18u].z, fma(_2325, cbModelParam._m0[18u].y, _2324 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2326, cbModelParam._m0[19u].z, fma(_2325, cbModelParam._m0[19u].y, _2324 * cbModelParam._m0[19u].x))), _1382);
            frontier_phi_46_73_ladder = _2444.z * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_1 = _2444.y * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_2 = _2444.x * cbModelParam._m0[1u].z;
        }
        _1470 = frontier_phi_46_73_ladder_2;
        _1472 = frontier_phi_46_73_ladder_1;
        _1474 = frontier_phi_46_73_ladder;
    }
    else
    {
        vec4 _1454 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_581, _582, _583), _1382);
        _1470 = _1454.x * cbModelParam._m0[1u].z;
        _1472 = _1454.y * cbModelParam._m0[1u].z;
        _1474 = _1454.z * cbModelParam._m0[1u].z;
    }
    float _1486 = _580 * 0.01200000010430812835693359375;
    float _1488 = _1486 * ((cbModelParam._m0[1u].w * (_1470 - _1375)) + _1375);
    float _1489 = _1486 * ((cbModelParam._m0[1u].w * (_1472 - _1377)) + _1377);
    float _1490 = _1486 * ((cbModelParam._m0[1u].w * (_1474 - _1379)) + _1379);
    float _1493 = fma(_1490, cbSceneParam._m0[89u].z, fma(_1489, cbSceneParam._m0[89u].y, _1488 * cbSceneParam._m0[89u].x));
    float _1496 = fma(_1490, cbSceneParam._m0[90u].z, fma(_1489, cbSceneParam._m0[90u].y, _1488 * cbSceneParam._m0[90u].x));
    float _1499 = fma(_1490, cbSceneParam._m0[91u].z, fma(_1489, cbSceneParam._m0[91u].y, _1488 * cbSceneParam._m0[91u].x));
    float _1534 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1538 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1542 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1546 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1547 = _1534 / _1546;
    float _1548 = _1538 / _1546;
    float _1549 = _1542 / _1546;
    float _1697;
    float _1698;
    float _1699;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1576 = ((uint(_1549 > cbSceneParam._m0[59u].y) + uint(_1549 > cbSceneParam._m0[59u].x)) + uint(_1549 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1577 = _1576 + 43u;
        uint _1585 = _1576 + 44u;
        uint _1593 = _1576 + 45u;
        uint _1601 = _1576 + 46u;
        float _1612 = fma(_1546, cbSceneParam._m0[_1577].w, fma(_1542, cbSceneParam._m0[_1577].z, fma(_1538, cbSceneParam._m0[_1577].y, _1534 * cbSceneParam._m0[_1577].x)));
        float _1616 = fma(_1546, cbSceneParam._m0[_1585].w, fma(_1542, cbSceneParam._m0[_1585].z, fma(_1538, cbSceneParam._m0[_1585].y, _1534 * cbSceneParam._m0[_1585].x)));
        float _1624 = fma(_1546, cbSceneParam._m0[_1601].w, fma(_1542, cbSceneParam._m0[_1601].z, fma(_1538, cbSceneParam._m0[_1601].y, _1534 * cbSceneParam._m0[_1601].x)));
        float _1629 = cbSceneParam._m0[33u].z * _1624;
        float _1631 = cbSceneParam._m0[33u].w * _1624;
        float _1634 = fma(_1546, cbSceneParam._m0[_1593].w, fma(_1542, cbSceneParam._m0[_1593].z, fma(_1538, cbSceneParam._m0[_1593].y, _1534 * cbSceneParam._m0[_1593].x))) / _1624;
        float _1682 = (cbSceneParam._m0[33u].x - sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549))) * cbSceneParam._m0[33u].y;
        float _3524 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1690 = (isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1629 + _1612) / _1624, (_1631 + _1616) / _1624), _1634), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1631 + _1612) / _1624, (_1616 - _1629) / _1624), _1634), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1612 - _1629) / _1624, (_1616 - _1631) / _1624), _1634), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1612 - _1631) / _1624, (_1629 + _1616) / _1624), _1634), 0.0)).x), vec4(0.25)));
        _1697 = 1.0 - (_1690 * cbSceneParam._m0[34u].x);
        _1698 = 1.0 - (_1690 * cbSceneParam._m0[34u].y);
        _1699 = 1.0 - (_1690 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1697 = 1.0;
        _1698 = 1.0;
        _1699 = 1.0;
    }
    float _1763;
    float _1765;
    float _1767;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1751 = fma(_1546, cbSceneParam._m0[63u].w, fma(_1542, cbSceneParam._m0[63u].z, fma(_1538, cbSceneParam._m0[63u].y, _1534 * cbSceneParam._m0[63u].x)));
        float _1752 = fma(_1546, cbSceneParam._m0[60u].w, fma(_1542, cbSceneParam._m0[60u].z, fma(_1538, cbSceneParam._m0[60u].y, _1534 * cbSceneParam._m0[60u].x))) / _1751;
        float _1753 = fma(_1546, cbSceneParam._m0[61u].w, fma(_1542, cbSceneParam._m0[61u].z, fma(_1538, cbSceneParam._m0[61u].y, _1534 * cbSceneParam._m0[61u].x))) / _1751;
        float frontier_phi_58_57_ladder;
        float frontier_phi_58_57_ladder_1;
        float frontier_phi_58_57_ladder_2;
        if ((((_1752 >= cbSceneParam._m0[64u].x) && (_1753 >= cbSceneParam._m0[64u].y)) && (_1752 <= cbSceneParam._m0[64u].z)) && (_1753 <= cbSceneParam._m0[64u].w))
        {
            float _1991 = fma(_1546, cbSceneParam._m0[62u].w, fma(_1542, cbSceneParam._m0[62u].z, fma(_1538, cbSceneParam._m0[62u].y, _1534 * cbSceneParam._m0[62u].x))) / _1751;
            float _1995 = isnan(cbSceneParam._m0[41u].w) ? _1991 : (isnan(_1991) ? cbSceneParam._m0[41u].w : max(_1991, cbSceneParam._m0[41u].w));
            float _2038 = (cbSceneParam._m0[33u].x - sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549))) * cbSceneParam._m0[33u].y;
            float _3540 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
            float _2045 = (isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1752, cbSceneParam._m0[33u].w + _1753), _1995), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1752, _1753 - cbSceneParam._m0[33u].z), _1995), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1752 - cbSceneParam._m0[33u].z, _1753 - cbSceneParam._m0[33u].w), _1995), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1752 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1753), _1995), 0.0)).x), vec4(0.25)));
            float _2049 = 1.0 - (_2045 * cbSceneParam._m0[34u].x);
            float _2050 = 1.0 - (_2045 * cbSceneParam._m0[34u].y);
            float _2051 = 1.0 - (_2045 * cbSceneParam._m0[34u].z);
            frontier_phi_58_57_ladder = isnan(_2051) ? _1699 : (isnan(_1699) ? _2051 : min(_1699, _2051));
            frontier_phi_58_57_ladder_1 = isnan(_2050) ? _1698 : (isnan(_1698) ? _2050 : min(_1698, _2050));
            frontier_phi_58_57_ladder_2 = isnan(_2049) ? _1697 : (isnan(_1697) ? _2049 : min(_1697, _2049));
        }
        else
        {
            frontier_phi_58_57_ladder = _1699;
            frontier_phi_58_57_ladder_1 = _1698;
            frontier_phi_58_57_ladder_2 = _1697;
        }
        _1763 = frontier_phi_58_57_ladder_2;
        _1765 = frontier_phi_58_57_ladder_1;
        _1767 = frontier_phi_58_57_ladder;
    }
    else
    {
        _1763 = _1697;
        _1765 = _1698;
        _1767 = _1699;
    }
    uvec4 _1773 = floatBitsToUint(cbInstanceData._m0[_554 + 5u]);
    uint _1775 = _1773.x * 14u;
    uint _1776 = _1775 + 13u;
    float _1781 = _580 + (-1.0);
    float _1785 = (cbLight._m0[_1776].x * _1781) + 1.0;
    float _1786 = (cbLight._m0[_1776].y * _1781) + 1.0;
    uint _1787 = _1775 + 5u;
    float _1793 = isnan(1.0) ? _1786 : (isnan(_1786) ? 1.0 : min(_1786, 1.0));
    uint _1797 = _1775 + 4u;
    float _1806 = isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0));
    uint _1810 = _1775 | 1u;
    float _1821 = dot(vec3(cbLight._m0[_1775].xyz), vec3(0.0));
    float _1824 = dot(vec3(cbLight._m0[_1810].xyz), vec3(0.0));
    float _3576 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
    float _3587 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
    float _1829 = (isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0))) * 0.3183098733425140380859375;
    float _1831 = (isnan(1.0) ? _3587 : (isnan(_3587) ? 1.0 : min(_3587, 1.0))) * 0.3183098733425140380859375;
    float _1838 = ((cbLight._m0[_1787].x * _1793) * _1831) + (((cbLight._m0[_1797].x * _1763) * _1806) * _1829);
    float _1839 = ((_1793 * cbLight._m0[_1787].y) * _1831) + (((cbLight._m0[_1797].y * _1765) * _1806) * _1829);
    float _1840 = ((_1793 * cbLight._m0[_1787].z) * _1831) + (((cbLight._m0[_1797].z * _1767) * _1806) * _1829);
    uint _1841 = _1775 + 8u;
    float _1847 = cbLight._m0[_1775].x + _532;
    float _1848 = cbLight._m0[_1775].y + _533;
    float _1849 = cbLight._m0[_1775].z + _534;
    float _1853 = inversesqrt(dot(vec3(_1847, _1848, _1849), vec3(_1847, _1848, _1849)));
    float _1857 = dot(vec3(0.0), vec3(cbLight._m0[_1775].xyz));
    float _3598 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
    float _1860 = isnan(1.0) ? _3598 : (isnan(_3598) ? 1.0 : min(_3598, 1.0));
    float _1861 = dot(vec3(0.0), vec3(_532, _533, _534));
    float _3609 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
    float _1864 = isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0));
    float _1865 = dot(vec3(cbLight._m0[_1775].xyz), vec3(_1847 * _1853, _1848 * _1853, _1849 * _1853));
    float _3620 = isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0));
    float _1876 = (exp2(log2(1.0 - (isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1882 = (0.5 / ((_1860 + 9.9999999392252902907785028219223e-09) + _1864)) * _1860;
    float _3631 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
    float _1884 = (isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0))) * 0.31831014156341552734375;
    uint _1898 = _1775 + 9u;
    float _1904 = cbLight._m0[_1810].x + _532;
    float _1905 = cbLight._m0[_1810].y + _533;
    float _1906 = cbLight._m0[_1810].z + _534;
    float _1910 = inversesqrt(dot(vec3(_1904, _1905, _1906), vec3(_1904, _1905, _1906)));
    float _1914 = dot(vec3(0.0), vec3(cbLight._m0[_1810].xyz));
    float _3642 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
    float _1917 = isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0));
    float _1918 = dot(vec3(cbLight._m0[_1810].xyz), vec3(_1904 * _1910, _1905 * _1910, _1906 * _1910));
    float _3653 = isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0));
    float _1927 = (exp2(log2(1.0 - (isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1931 = (0.5 / ((_1917 + 9.9999999392252902907785028219223e-09) + _1864)) * _1917;
    float _3664 = isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0));
    float _1933 = (isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0))) * 0.31831014156341552734375;
    float _1943 = (((_1927 * cbLight._m0[_1898].x) * _1933) * _1793) + ((((cbLight._m0[_1841].x * _1763) * _1876) * _1884) * _1806);
    float _1944 = (((_1927 * cbLight._m0[_1898].y) * _1933) * _1793) + ((((cbLight._m0[_1841].y * _1765) * _1876) * _1884) * _1806);
    float _1945 = (((_1927 * cbLight._m0[_1898].z) * _1933) * _1793) + ((((cbLight._m0[_1841].z * _1767) * _1876) * _1884) * _1806);
    float _2109;
    float _2111;
    float _2113;
    float _2115;
    float _2117;
    float _2119;
    if (_1773.y == 0u)
    {
        uvec4 _2063 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2064 = _2063.x;
        uint _2075 = uint((float(_2063.y) * floor(float(uint(cbSceneParam._m0[85u].y * _541) / _2064))) + floor(float(uint(cbSceneParam._m0[85u].x * _540) / _2064)));
        float _2085 = (log2(_1549 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2086 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
        uint _2089 = uint(isnan(14.0) ? _2086 : (isnan(_2086) ? 14.0 : min(_2086, 14.0)));
        uvec4 _2095 = texelFetch(g_lightClusterGridBuffer, int(((_2089 << 2u) + (_2075 << 6u)) >> 2u));
        uint _2096 = _2095.x;
        uint _2097 = _2063.z;
        float _2204;
        float _2206;
        float _2208;
        float _2210;
        float _2212;
        float _2214;
        if (((((1u << ((_2097 >> 4u) & 15u)) + 4294967295u) & _2096) == 0u) || ((_2097 & 240u) == 0u))
        {
            _2204 = 0.0;
            _2206 = 0.0;
            _2208 = 0.0;
            _2210 = 0.0;
            _2212 = 0.0;
            _2214 = 0.0;
        }
        else
        {
            float _2205;
            float _2207;
            float _2209;
            float _2211;
            float _2213;
            float _2215;
            float _2372 = 0.0;
            float _2373 = 0.0;
            float _2374 = 0.0;
            float _2375 = 0.0;
            float _2376 = 0.0;
            float _2377 = 0.0;
            uint _2378 = 0u;
            uint _2387;
            bool _2388;
            for (;;)
            {
                _2387 = texelFetch(g_lightClassification, int((((_2089 << 5u) + (_2075 << 9u)) + (_2378 << 2u)) >> 2u)).x;
                _2388 = _2387 == 0u;
                float frontier_phi_82_pred;
                float frontier_phi_82_pred_1;
                float frontier_phi_82_pred_2;
                float frontier_phi_82_pred_3;
                float frontier_phi_82_pred_4;
                float frontier_phi_82_pred_5;
                if (_2388)
                {
                    frontier_phi_82_pred = _2372;
                    frontier_phi_82_pred_1 = _2377;
                    frontier_phi_82_pred_2 = _2376;
                    frontier_phi_82_pred_3 = _2375;
                    frontier_phi_82_pred_4 = _2374;
                    frontier_phi_82_pred_5 = _2373;
                }
                else
                {
                    float _2517;
                    float _2518;
                    float _2519;
                    float _2520;
                    float _2521;
                    float _2522;
                    uint _2523;
                    _2517 = _2372;
                    _2518 = _2373;
                    _2519 = _2374;
                    _2520 = _2375;
                    _2521 = _2376;
                    _2522 = _2377;
                    _2523 = _2387;
                    float _2449;
                    float _2450;
                    float _2451;
                    float _2452;
                    float _2453;
                    float _2454;
                    for (;;)
                    {
                        uint _2527 = uint(findLSB(_2523)) + (_2378 << 5u);
                        uint _2524 = (_2523 + 4294967295u) & _2523;
                        uint _2529 = _2527 * 48u;
                        vec4 _2543 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2529)).x, texelFetch(g_PointLightRenderingBuffer, int(_2529 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2529 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2529 + 3u)).x));
                        uint _2549 = (_2527 * 48u) + 4u;
                        vec4 _2562 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2549)).x, texelFetch(g_PointLightRenderingBuffer, int(_2549 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2549 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2549 + 3u)).x));
                        uint _2568 = (_2527 * 48u) + 8u;
                        vec3 _2579 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2568)).x, texelFetch(g_PointLightRenderingBuffer, int(_2568 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2568 + 2u)).x));
                        float _2583 = _2543.x - _1547;
                        float _2584 = _2543.y - _1548;
                        float _2585 = _2543.z - _1549;
                        float _2586 = dot(vec3(_2583, _2584, _2585), vec3(_2583, _2584, _2585));
                        float _2589 = inversesqrt(_2586);
                        float _2598 = 1.0 - (_2586 * _2543.w);
                        float _3685 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
                        float _2599 = isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0));
                        float _2600 = sqrt(_2586) * _2562.w;
                        float _2603 = 1.39999997615814208984375 / (_2600 + 1.39999997615814208984375);
                        float _2604 = _2603 * _2603;
                        float _2607 = ((1.0 - _2604) * dot(vec3(0.0), vec3(_2589 * _2583, _2589 * _2584, _2589 * _2585))) + _2604;
                        float _2610 = _2600 * _2600;
                        float _2614 = ((isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0))) * _2599) / ((_2610 * 0.699999988079071044921875) + 1.0);
                        float _2618 = (-0.0) - _1547;
                        float _2619 = (-0.0) - _1548;
                        float _2620 = (-0.0) - _1549;
                        float _2624 = inversesqrt(dot(vec3(_2618, _2619, _2620), vec3(_2618, _2619, _2620)));
                        float _2628 = dot(vec3(0.0), vec3(_2624 * _2618, _2624 * _2619, _2624 * _2620));
                        float _3701 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
                        float _3712 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
                        float _2632 = isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0));
                        float _2636 = (0.5 / (((isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0))) + 9.9999999392252902907785028219223e-09) + _2632)) * _2632;
                        float _3723 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
                        float _2645 = (((isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0))) * 3.1415927410125732421875) / ((_2610 * 2.1991131305694580078125) + 3.141590118408203125)) * _2599;
                        _2452 = (_2614 * _2562.x) + _2520;
                        _2453 = (_2614 * _2562.y) + _2521;
                        _2454 = (_2614 * _2562.z) + _2522;
                        _2449 = (_2645 * _2579.x) + _2517;
                        _2450 = (_2645 * _2579.y) + _2518;
                        _2451 = (_2645 * _2579.z) + _2519;
                        if (_2524 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2517 = _2449;
                            _2518 = _2450;
                            _2519 = _2451;
                            _2520 = _2452;
                            _2521 = _2453;
                            _2522 = _2454;
                            _2523 = _2524;
                        }
                    }
                    frontier_phi_82_pred = _2449;
                    frontier_phi_82_pred_1 = _2454;
                    frontier_phi_82_pred_2 = _2453;
                    frontier_phi_82_pred_3 = _2452;
                    frontier_phi_82_pred_4 = _2451;
                    frontier_phi_82_pred_5 = _2450;
                }
                _2205 = frontier_phi_82_pred;
                _2215 = frontier_phi_82_pred_1;
                _2213 = frontier_phi_82_pred_2;
                _2211 = frontier_phi_82_pred_3;
                _2209 = frontier_phi_82_pred_4;
                _2207 = frontier_phi_82_pred_5;
                uint _2379 = _2378 + 1u;
                if (_2379 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2372 = _2205;
                    _2373 = _2207;
                    _2374 = _2209;
                    _2375 = _2211;
                    _2376 = _2213;
                    _2377 = _2215;
                    _2378 = _2379;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2204 = _2205;
            _2206 = _2207;
            _2208 = _2209;
            _2210 = _2211;
            _2212 = _2213;
            _2214 = _2215;
        }
        uvec4 _2218 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2219 = _2218.z;
        uint _2221 = (_2219 >> 8u) & 15u;
        float _2343;
        float _2345;
        float _2347;
        float _2349;
        float _2351;
        float _2353;
        if (((4294967295u << _2221) & _2096) == 0u)
        {
            _2343 = _2204;
            _2345 = _2206;
            _2347 = _2208;
            _2349 = _2210;
            _2351 = _2212;
            _2353 = _2214;
        }
        else
        {
            float _2368 = inversesqrt(dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549)));
            float frontier_phi_75_76_ladder;
            float frontier_phi_75_76_ladder_1;
            float frontier_phi_75_76_ladder_2;
            float frontier_phi_75_76_ladder_3;
            float frontier_phi_75_76_ladder_4;
            float frontier_phi_75_76_ladder_5;
            if (_2221 < ((_2219 >> 12u) & 15u))
            {
                float _2344;
                float _2346;
                float _2348;
                float _2350;
                float _2352;
                float _2354;
                float _2500 = _2204;
                float _2501 = _2206;
                float _2502 = _2208;
                float _2503 = _2210;
                float _2504 = _2212;
                float _2505 = _2214;
                uint _2506 = _2221;
                uint _2515;
                bool _2516;
                for (;;)
                {
                    _2515 = texelFetch(g_lightClassification, int((((_2089 << 5u) + (_2075 << 9u)) + (_2506 << 2u)) >> 2u)).x;
                    _2516 = _2515 == 0u;
                    float frontier_phi_88_pred;
                    float frontier_phi_88_pred_1;
                    float frontier_phi_88_pred_2;
                    float frontier_phi_88_pred_3;
                    float frontier_phi_88_pred_4;
                    float frontier_phi_88_pred_5;
                    if (_2516)
                    {
                        frontier_phi_88_pred = _2503;
                        frontier_phi_88_pred_1 = _2504;
                        frontier_phi_88_pred_2 = _2505;
                        frontier_phi_88_pred_3 = _2502;
                        frontier_phi_88_pred_4 = _2501;
                        frontier_phi_88_pred_5 = _2500;
                    }
                    else
                    {
                        float _2650;
                        float _2651;
                        float _2652;
                        float _2653;
                        float _2654;
                        float _2655;
                        float _2899;
                        float _2900;
                        float _2901;
                        float _2902;
                        float _2903;
                        float _2904;
                        float _2663 = _2500;
                        float _2664 = _2501;
                        float _2665 = _2502;
                        float _2666 = _2503;
                        float _2667 = _2504;
                        float _2668 = _2505;
                        uint _2669 = _2515;
                        uint _2670;
                        vec4 _2695;
                        float _2696;
                        vec4 _2711;
                        vec3 _2723;
                        vec4 _2738;
                        vec4 _2753;
                        float _2799;
                        bool _2800;
                        for (;;)
                        {
                            uint _2680 = ((_2506 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2669));
                            _2670 = (_2669 + 4294967295u) & _2669;
                            uint _2682 = _2680 * 40u;
                            _2695 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2682)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 3u)).x));
                            _2696 = _2695.w;
                            uint _2698 = (_2680 * 40u) + 4u;
                            _2711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 3u)).x));
                            uint _2713 = (_2680 * 40u) + 8u;
                            _2723 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2713 + 2u)).x));
                            uint _2725 = (_2680 * 40u) + 16u;
                            _2738 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2725)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2725 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2725 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2725 + 3u)).x));
                            uint _2740 = (_2680 * 40u) + 20u;
                            _2753 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2740)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2740 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2740 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2740 + 3u)).x));
                            uint _2755 = (_2680 * 40u) + 24u;
                            vec4 _2768 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2755)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2755 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2755 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2755 + 3u)).x));
                            uint _2774 = (_2680 * 40u) + 28u;
                            vec4 _2787 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2774)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2774 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2774 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2774 + 3u)).x));
                            _2799 = fma(_1549, _2787.z, fma(_1548, _2787.y, _2787.x * _1547)) + _2787.w;
                            _2800 = !((fma(_1549, _2768.z, fma(_1548, _2768.y, _2768.x * _1547)) + _2768.w) <= 0.0);
                            float frontier_phi_94_pred;
                            float frontier_phi_94_pred_1;
                            float frontier_phi_94_pred_2;
                            float frontier_phi_94_pred_3;
                            float frontier_phi_94_pred_4;
                            float frontier_phi_94_pred_5;
                            if (_2800)
                            {
                                float _2827 = _2695.x - _1547;
                                float _2828 = _2695.y - _1548;
                                float _2829 = _2695.z - _1549;
                                float _2830 = dot(vec3(_2827, _2828, _2829), vec3(_2827, _2828, _2829));
                                float _2833 = inversesqrt(_2830);
                                float _2834 = _2833 * _2827;
                                float _2835 = _2833 * _2828;
                                float _2836 = _2833 * _2829;
                                float _2840 = 1.0 - (_2830 / (_2696 * _2696));
                                float _3734 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
                                float _2841 = isnan(1.0) ? _3734 : (isnan(_3734) ? 1.0 : min(_3734, 1.0));
                                float _2845 = sqrt(_2830) * _2711.w;
                                float _2847 = 1.39999997615814208984375 / (_2845 + 1.39999997615814208984375);
                                float _2848 = _2847 * _2847;
                                float _2849 = 1.0 - _2848;
                                float _2851 = (_2849 * dot(vec3(_2834, _2835, _2836), vec3(0.0))) + _2848;
                                float _2854 = _2845 * _2845;
                                float _2858 = (fma(_1549, _2738.z, fma(_1548, _2738.y, _2738.x * _1547)) + _2738.w) / _2799;
                                float _2859 = (fma(_1549, _2753.z, fma(_1548, _2753.y, _2753.x * _1547)) + _2753.w) / _2799;
                                float _2863 = 1.0 - dot(vec2(_2858, _2859), vec2(_2858, _2859));
                                float _3750 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
                                float _2864 = isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0));
                                float _2865 = _2864 * (((isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0))) * _2841) / ((_2854 * 0.699999988079071044921875) + 1.0));
                                float _2875 = dot(vec3(0.0), vec3((-0.0) - (_1547 * _2368), (-0.0) - (_1548 * _2368), (-0.0) - (_1549 * _2368)));
                                float _3761 = isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0));
                                float _2883 = (_2849 * dot(vec3(0.0), vec3(_2834, _2835, _2836))) + _2848;
                                float _3772 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
                                float _2884 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
                                float _2888 = (0.5 / (((isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0))) + 9.9999999392252902907785028219223e-09) + _2884)) * _2884;
                                float _3783 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
                                float _2895 = (_2864 * _2841) * (((isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0))) * 3.1415927410125732421875) / ((_2854 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_94_pred = _2895 * _2723.x;
                                frontier_phi_94_pred_1 = _2895 * _2723.y;
                                frontier_phi_94_pred_2 = _2865 * _2711.z;
                                frontier_phi_94_pred_3 = _2865 * _2711.y;
                                frontier_phi_94_pred_4 = _2865 * _2711.x;
                                frontier_phi_94_pred_5 = _2895 * _2723.z;
                            }
                            else
                            {
                                frontier_phi_94_pred = 0.0;
                                frontier_phi_94_pred_1 = 0.0;
                                frontier_phi_94_pred_2 = 0.0;
                                frontier_phi_94_pred_3 = 0.0;
                                frontier_phi_94_pred_4 = 0.0;
                                frontier_phi_94_pred_5 = 0.0;
                            }
                            _2899 = frontier_phi_94_pred;
                            _2900 = frontier_phi_94_pred_1;
                            _2904 = frontier_phi_94_pred_2;
                            _2903 = frontier_phi_94_pred_3;
                            _2902 = frontier_phi_94_pred_4;
                            _2901 = frontier_phi_94_pred_5;
                            _2653 = _2902 + _2666;
                            _2654 = _2903 + _2667;
                            _2655 = _2904 + _2668;
                            _2650 = _2899 + _2663;
                            _2651 = _2900 + _2664;
                            _2652 = _2901 + _2665;
                            if (_2670 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2663 = _2650;
                                _2664 = _2651;
                                _2665 = _2652;
                                _2666 = _2653;
                                _2667 = _2654;
                                _2668 = _2655;
                                _2669 = _2670;
                                continue;
                            }
                        }
                        frontier_phi_88_pred = _2653;
                        frontier_phi_88_pred_1 = _2654;
                        frontier_phi_88_pred_2 = _2655;
                        frontier_phi_88_pred_3 = _2652;
                        frontier_phi_88_pred_4 = _2651;
                        frontier_phi_88_pred_5 = _2650;
                    }
                    _2350 = frontier_phi_88_pred;
                    _2352 = frontier_phi_88_pred_1;
                    _2354 = frontier_phi_88_pred_2;
                    _2348 = frontier_phi_88_pred_3;
                    _2346 = frontier_phi_88_pred_4;
                    _2344 = frontier_phi_88_pred_5;
                    uint _2507 = _2506 + 1u;
                    if (_2507 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2500 = _2344;
                        _2501 = _2346;
                        _2502 = _2348;
                        _2503 = _2350;
                        _2504 = _2352;
                        _2505 = _2354;
                        _2506 = _2507;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_75_76_ladder = _2352;
                frontier_phi_75_76_ladder_1 = _2354;
                frontier_phi_75_76_ladder_2 = _2350;
                frontier_phi_75_76_ladder_3 = _2348;
                frontier_phi_75_76_ladder_4 = _2346;
                frontier_phi_75_76_ladder_5 = _2344;
            }
            else
            {
                frontier_phi_75_76_ladder = _2212;
                frontier_phi_75_76_ladder_1 = _2214;
                frontier_phi_75_76_ladder_2 = _2210;
                frontier_phi_75_76_ladder_3 = _2208;
                frontier_phi_75_76_ladder_4 = _2206;
                frontier_phi_75_76_ladder_5 = _2204;
            }
            _2343 = frontier_phi_75_76_ladder_5;
            _2345 = frontier_phi_75_76_ladder_4;
            _2347 = frontier_phi_75_76_ladder_3;
            _2349 = frontier_phi_75_76_ladder_2;
            _2351 = frontier_phi_75_76_ladder;
            _2353 = frontier_phi_75_76_ladder_1;
        }
        float _2358 = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
        _2109 = (_2358 * _2349) + _1838;
        _2111 = (_2358 * _2351) + _1839;
        _2113 = (_2358 * _2353) + _1840;
        _2115 = ((_2343 * 0.039999999105930328369140625) * _2358) + _1943;
        _2117 = ((_2345 * 0.039999999105930328369140625) * _2358) + _1944;
        _2119 = ((_2347 * 0.039999999105930328369140625) * _2358) + _1945;
    }
    else
    {
        _2109 = _1838;
        _2111 = _1839;
        _2113 = _1840;
        _2115 = _1943;
        _2117 = _1944;
        _2119 = _1945;
    }
    float _3799 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _3810 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _3821 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _2136 = ((isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0))) * (_2109 + ((isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0))) * _580))) + ((_2115 + ((isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0))) * _1284)) * cbPerFrame._m0[3u].x);
    float _2137 = ((isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0))) * (_2111 + ((isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0))) * _580))) + ((_2117 + ((isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0))) * _1284)) * cbPerFrame._m0[3u].x);
    float _2138 = ((isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0))) * (_2113 + ((isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0))) * _580))) + ((_2119 + ((isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0))) * _1284)) * cbPerFrame._m0[3u].x);
    uint _2142 = _554 + 6u;
    float _2150 = _540 / cbSceneParam._m0[86u].x;
    float _2151 = _541 / cbSceneParam._m0[86u].y;
    vec4 _2165 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2150, _2151, (log2((isnan(cbSceneParam._m0[77u].w) ? _527 : (isnan(_527) ? cbSceneParam._m0[77u].w : min(_527, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2167 = _2165.x;
    float _2168 = _2165.y;
    float _2169 = _2165.z;
    float _2170 = _2165.w;
    float _2266;
    float _2268;
    float _2270;
    float _2272;
    if (_527 > cbSceneParam._m0[78u].w)
    {
        float _2229 = isnan(_527) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _527 : min(cbSceneParam._m0[80u].w, _527));
        float _2230 = _2229 / _527;
        float _2241 = _2230 * _255;
        float _2242 = _256 * _2230;
        float _2243 = (-0.0) - _2242;
        float _2244 = _2230 * _257;
        float _2246 = (cbSceneParam._m0[77u].w * _2243) / _2229;
        float _2247 = _2246 + cbSceneParam._m0[79u].w;
        float _2248 = cbSceneParam._m0[79u].w - _2242;
        float _2254 = sqrt(((_2241 * _2241) + (_2242 * _2242)) + (_2244 * _2244));
        float _2257 = (1.0 - (cbSceneParam._m0[77u].w / _2229)) * _2254;
        float _2262 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2264 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2462;
        if (abs((_2243 - _2246) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2462 = ((((_2247 > 0.0) ? exp2(_2262 * _2247) : (2.0 - exp2(_2264 * _2247))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2257;
        }
        else
        {
            float _2401 = 1.0 / cbSceneParam._m0[80u].x;
            float _2402 = isnan(_2248) ? _2247 : (isnan(_2247) ? _2248 : max(_2247, _2248));
            float _2403 = isnan(_2248) ? _2247 : (isnan(_2247) ? _2248 : min(_2247, _2248));
            float _2412 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : min(_2402, 0.0));
            float _2413 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : min(_2403, 0.0));
            _2462 = ((abs(_2254 / _2243) * cbSceneParam._m0[80u].y) * ((((_2412 - _2413) * 2.0) - ((exp2(_2262 * (isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0)))) - exp2(_2262 * (isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0))))) * _2401)) - ((exp2(_2264 * _2412) - exp2(_2264 * _2413)) * _2401))) + (_2257 * cbSceneParam._m0[80u].z);
        }
        vec4 _2464 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2150, _2151, 1.0), 0.0);
        float _2473 = exp2((_2462 * (-1.44269502162933349609375)) * (1.0 - _2464.w));
        float _2474 = log2(_2473);
        float _2490 = log2(_2170);
        _2266 = (exp2(_2490 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2474 * cbSceneParam._m0[78u].x)) * _2464.x) / cbSceneParam._m0[78u].x)) + _2167;
        _2268 = (exp2(_2490 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2474 * cbSceneParam._m0[78u].y)) * _2464.y) / cbSceneParam._m0[78u].y)) + _2168;
        _2270 = (exp2(_2490 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2474 * cbSceneParam._m0[78u].z)) * _2464.z) / cbSceneParam._m0[78u].z)) + _2169;
        _2272 = _2473 * _2170;
    }
    else
    {
        _2266 = _2167;
        _2268 = _2168;
        _2270 = _2169;
        _2272 = _2170;
    }
    float _2284 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2285 = _2284 == 3.0;
    float _2287 = log2(_2272);
    float _2294 = exp2(_2287 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0)));
    float _2295 = exp2(_2287 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0)));
    float _2296 = exp2(_2287 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0)));
    float _2305 = (_2284 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2305 * (_2285 ? _2294 : (_2294 + (cbSceneParam._m0[72u].w * _2266)));
    SV_Target.y = _2305 * (_2285 ? _2295 : (_2295 + (cbSceneParam._m0[72u].w * _2268)));
    SV_Target.z = _2305 * (_2285 ? _2296 : (_2296 + (cbSceneParam._m0[72u].w * _2270)));
    SV_Target.w = cbInstanceData._m0[_2142].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2142].w;
}


