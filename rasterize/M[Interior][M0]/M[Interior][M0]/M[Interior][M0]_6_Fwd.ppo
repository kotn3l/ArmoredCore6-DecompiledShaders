#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M0_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1209;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _188 = _187 * _180;
    float _189 = _187 * _181;
    float _190 = _187 * _182;
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _195 = _194 * NORMAL.x;
    float _196 = _194 * NORMAL.y;
    float _197 = _194 * NORMAL.z;
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _202 = _201 * TANGENT.x;
    float _203 = _201 * TANGENT.y;
    float _204 = _201 * TANGENT.z;
    float _249 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _259 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _249);
    float _260 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _249);
    float _261 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _249);
    vec4 _280 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _286 = _280.w;
    float _299 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _286) + cbMtdParam._m0[11u].x) * _280.x;
    float _301 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _286) + cbMtdParam._m0[11u].y) * _280.y;
    float _303 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _286) + cbMtdParam._m0[11u].z) * _280.z;
    float _329 = cbMtdParam._m0[22u].y + _259;
    float _330 = cbMtdParam._m0[22u].z + _260;
    float _331 = cbMtdParam._m0[22u].w + _261;
    float _345 = (-0.0) - dot(vec3(_329, _330, _331), vec3(_188, _189, _190));
    float _346 = (-0.0) - dot(vec3(_329, _330, _331), vec3(_202, _203, _204));
    float _347 = (-0.0) - dot(vec3(_329, _330, _331), vec3((-0.0) - _195, (-0.0) - _196, (-0.0) - _197));
    float _351 = inversesqrt(dot(vec3(_345, _346, _347), vec3(_345, _346, _347)));
    float _352 = _351 * _347;
    float _354 = (cbMtdParam._m0[19u].x * _345) * _351;
    float _356 = (cbMtdParam._m0[18u].w * _346) * _351;
    float _357 = fract(TEXCOORD.x);
    float _358 = fract(TEXCOORD.y);
    float _364;
    if (_354 > 0.0)
    {
        _364 = (1.0 - _357) / _354;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_354 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _357) / _354;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _364 = frontier_phi_3_2_ladder;
    }
    float _372;
    if (_356 > 0.0)
    {
        _372 = (1.0 - _358) / _356;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _358) / _356;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _372 = frontier_phi_7_6_ladder;
    }
    bool _374 = _352 > 0.0;
    float _376 = _374 ? (cbMtdParam._m0[15u].x / _352) : 5000.0;
    float _377 = isnan(_372) ? _364 : (isnan(_364) ? _372 : min(_364, _372));
    float _378 = isnan(_376) ? _377 : (isnan(_377) ? _376 : min(_377, _376));
    float _382 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _383 = _357 + (-0.5);
    float _386 = _358 + (-0.5);
    float _389 = ((_378 * _352) + _382) / _382;
    vec4 _414 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_383 + (_378 * _354)) / _389) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_386 + (_378 * _356)) / _389) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _416 = _414.x;
    float _417 = _414.y;
    float _418 = _414.z;
    float _430 = (_416 - (_416 * _286)) * cbMtdParam._m0[9u].x;
    float _431 = (_417 - (_417 * _286)) * cbMtdParam._m0[9u].y;
    float _432 = cbMtdParam._m0[9u].z * (_418 - (_418 * _286));
    float _454 = (cbMtdParam._m0[21u].x * _345) * _351;
    float _456 = (cbMtdParam._m0[20u].w * _346) * _351;
    bool _457 = _454 > 0.0;
    float _462;
    if (_457)
    {
        _462 = (1.0 - _357) / _454;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _357) / _454;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _462 = frontier_phi_11_10_ladder;
    }
    bool _464 = _456 > 0.0;
    float _469;
    if (_464)
    {
        _469 = (1.0 - _358) / _456;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _358) / _456;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _469 = frontier_phi_15_14_ladder;
    }
    float _472 = _374 ? (cbMtdParam._m0[16u].z / _352) : 5000.0;
    float _473 = isnan(_469) ? _462 : (isnan(_462) ? _469 : min(_462, _469));
    float _474 = isnan(_472) ? _473 : (isnan(_473) ? _472 : min(_473, _472));
    float _478 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _482 = ((_474 * _352) + _478) / _478;
    float _487 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _489 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _505 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_383 + (_474 * _454)) / _482) + 0.5) + _487) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_386 + (_474 * _456)) / _482) + 0.5) + _489) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _510 = _505.x * cbMtdParam._m0[10u].x;
    float _511 = _505.y * cbMtdParam._m0[10u].y;
    float _512 = _505.z * cbMtdParam._m0[10u].z;
    float _520;
    if (_457)
    {
        _520 = (1.0 - _357) / _454;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _357) / _454;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _520 = frontier_phi_19_18_ladder;
    }
    float _526;
    if (_464)
    {
        _526 = (1.0 - _358) / _456;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _358) / _456;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _526 = frontier_phi_23_22_ladder;
    }
    float _528 = isnan(_526) ? _520 : (isnan(_520) ? _526 : min(_520, _526));
    float _529 = isnan(_472) ? _528 : (isnan(_528) ? _472 : min(_528, _472));
    float _536 = ((_529 * _352) + _478) / _478;
    vec4 _550 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_383 + (_529 * _454)) / _536) + 0.5) + _487) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_386 + (_529 * _456)) / _536) + 0.5) + _489) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _552 = _550.w;
    float _554 = _552 - (_552 * _286);
    float _564 = (_554 * ((_510 - _430) - (_510 * _286))) + _430;
    float _565 = (_554 * ((_511 - _431) - (_511 * _286))) + _431;
    float _566 = (_554 * ((_512 - _432) - (_512 * _286))) + _432;
    float _581 = (cbMtdParam._m0[21u].z * _345) * _351;
    float _583 = (cbMtdParam._m0[21u].y * _346) * _351;
    bool _584 = _581 > 0.0;
    float _589;
    if (_584)
    {
        _589 = (1.0 - _357) / _581;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_581 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _357) / _581;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _589 = frontier_phi_27_26_ladder;
    }
    bool _591 = _583 > 0.0;
    float _596;
    if (_591)
    {
        _596 = (1.0 - _358) / _583;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_583 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _358) / _583;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _596 = frontier_phi_31_30_ladder;
    }
    float _599 = _374 ? (cbMtdParam._m0[18u].x / _352) : 5000.0;
    float _600 = isnan(_596) ? _589 : (isnan(_589) ? _596 : min(_589, _596));
    float _601 = isnan(_599) ? _600 : (isnan(_600) ? _599 : min(_600, _599));
    float _605 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _609 = ((_601 * _352) + _605) / _605;
    float _614 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _616 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _633 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_383 + (_601 * _581)) / _609) + 0.5) + _614) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_386 + (_601 * _583)) / _609) + 0.5) + _616) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _638 = _633.x * cbMtdParam._m0[14u].x;
    float _639 = _633.y * cbMtdParam._m0[14u].y;
    float _640 = _633.z * cbMtdParam._m0[14u].z;
    float _648;
    if (_584)
    {
        _648 = (1.0 - _357) / _581;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_581 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _357) / _581;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _648 = frontier_phi_35_34_ladder;
    }
    float _654;
    if (_591)
    {
        _654 = (1.0 - _358) / _583;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_583 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _358) / _583;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _654 = frontier_phi_39_38_ladder;
    }
    float _656 = isnan(_654) ? _648 : (isnan(_648) ? _654 : min(_648, _654));
    float _657 = isnan(_599) ? _656 : (isnan(_656) ? _599 : min(_656, _599));
    float _664 = ((_657 * _352) + _605) / _605;
    vec4 _678 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_383 + (_657 * _581)) / _664) + 0.5) + _614) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_386 + (_657 * _583)) / _664) + 0.5) + _616) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _680 = _678.w;
    float _682 = _680 - (_680 * _286);
    vec4 _706 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _714 = (_706.x * 2.0) + (-1.0);
    float _716 = (_706.y * 2.0) + (-1.0);
    float _717 = dot(vec2(_714, _716), vec2(_714, _716));
    float _3379 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _722 = sqrt(1.0 - (isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0))));
    float _723 = _706.z * _286;
    float _726 = fma(_722, _195, fma(_716, _202, _714 * _188));
    float _729 = fma(_722, _196, fma(_716, _203, _714 * _189));
    float _732 = fma(_722, _197, fma(_716, _204, _714 * _190));
    float _736 = inversesqrt(dot(vec3(_726, _729, _732), vec3(_726, _729, _732)));
    float _737 = _736 * _726;
    float _738 = _736 * _729;
    float _739 = _736 * _732;
    float _3390 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _740 = isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0));
    float _3401 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _3412 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _3423 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _759 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _763 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _764 = _259 * _763;
    float _765 = _260 * _763;
    float _766 = _261 * _763;
    float _772 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _773 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _793 = fma(_739, cbSceneParam._m0[5u].z, fma(_738, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _737));
    float _796 = fma(_739, cbSceneParam._m0[6u].z, fma(_738, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _737));
    float _799 = fma(_739, cbSceneParam._m0[7u].z, fma(_738, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _737));
    uint _812 = uint(roundEven(NORMAL.w)) * 13u;
    uint _814 = _812 + 9u;
    uint _815 = _814 + uint(cbMatDynParam._m0[0u].w);
    float _821 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0)))) * cbInstanceData._m0[_815].x;
    float _822 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0)))) * cbInstanceData._m0[_815].y;
    float _823 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0)))) * cbInstanceData._m0[_815].z;
    float _3434 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _824 = isnan(1.0) ? _3434 : (isnan(_3434) ? 1.0 : min(_3434, 1.0));
    float _3445 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3445 : (isnan(_3445) ? 1.0 : min(_3445, 1.0));
    float _3456 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3456 : (isnan(_3456) ? 1.0 : min(_3456, 1.0));
    vec4 _835 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _772, cbSceneParam._m0[86u].y * _773));
    float _838 = _835.x * TEXCOORD.z;
    float _839 = dot(vec3(_737, _738, _739), vec3(_764, _765, _766));
    float _842 = _839 * 2.0;
    float _846 = (_842 * _737) - _764;
    float _847 = (_842 * _738) - _765;
    float _848 = (_842 * _739) - _766;
    float _852 = abs(dot(vec3(_764, _765, _766), vec3(_737, _738, _739)));
    float _3467 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _854 = sqrt(_740);
    float _867 = exp2((_854 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_854 * 3.0));
    float _899 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _903 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _907 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1208;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _935 = fma(_907, cbModelParam._m0[26u].z, fma(_903, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _899));
        float _939 = fma(_907, cbModelParam._m0[27u].z, fma(_903, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _899));
        float _943 = fma(_907, cbModelParam._m0[28u].z, fma(_903, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _899));
        float _966 = _899 + _737;
        float _967 = _903 + _738;
        float _968 = _907 + _739;
        float _978 = fma(_968, cbModelParam._m0[26u].z, fma(_967, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _966)) - _935;
        float _979 = fma(_968, cbModelParam._m0[27u].z, fma(_967, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _966)) - _939;
        float _980 = fma(_968, cbModelParam._m0[28u].z, fma(_967, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _966)) - _943;
        float _984 = inversesqrt(dot(vec3(_978, _979, _980), vec3(_978, _979, _980)));
        float _997 = ((_984 * _978) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_935 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _998 = ((_984 * _979) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_939 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _999 = ((_984 * _980) / cbModelParam._m0[34u].z) + ((((((_943 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1002 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_997, _998, _999), 0.0);
        vec4 _1009 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_997, _998, _999), 0.0);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_997, _998, _999), 0.0);
        vec4 _1023 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_997, _998, _999), 0.0);
        float _1036 = exp2((_1002.w + (-0.5)) * 20.0) * 2.0;
        float _1037 = _1036 * (_1002.x + (-0.5));
        float _1038 = _1036 * (_1002.y + (-0.5));
        float _1039 = _1036 * (_1002.z + (-0.5));
        float _1046 = exp2((_1009.w + (-0.5)) * 20.0) * 2.0;
        float _1047 = _1046 * (_1009.x + (-0.5));
        float _1048 = _1046 * (_1009.y + (-0.5));
        float _1049 = _1046 * (_1009.z + (-0.5));
        float _1056 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1016.x + (-0.5));
        float _1058 = _1056 * (_1016.y + (-0.5));
        float _1059 = _1056 * (_1016.z + (-0.5));
        float _1066 = exp2((_1023.w + (-0.5)) * 20.0) * 2.0;
        float _1067 = _1066 * (_1023.x + (-0.5));
        float _1068 = _1066 * (_1023.y + (-0.5));
        float _1069 = _1066 * (_1023.z + (-0.5));
        float _1070 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1071 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = _1037 * 0.5;
        float _1074 = _1047 * 0.5;
        float _1075 = _1057 * 0.5;
        float _1076 = dot(vec3(_1073, _1074, _1075), vec3(_1073, _1074, _1075));
        float _1081 = (_1076 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1076);
        float _1090 = (dot(vec3(_737, _738, _739), vec3(_1081 * _1073, _1081 * _1074, _1081 * _1075)) + 1.0) * 0.5;
        float _3493 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1100 = sqrt(((_1074 * _1074) + (_1073 * _1073)) + (_1075 * _1075)) / (_1070 + 9.9999997473787516355514526367188e-06);
        float _3504 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1101 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
        float _1102 = _1101 * 2.0;
        float _1106 = (1.0 - _1101) / (_1101 + 1.0);
        float _3515 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1107 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
        float _1116 = ((((1.0 - _1107) * (_1102 + 2.0)) * exp2(log2(isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0))) * (_1102 + 1.0))) + _1107) * _1070;
        float _1117 = _1038 * 0.5;
        float _1118 = _1048 * 0.5;
        float _1119 = _1058 * 0.5;
        float _1120 = dot(vec3(_1117, _1118, _1119), vec3(_1117, _1118, _1119));
        float _1125 = (_1120 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1120);
        float _1133 = (dot(vec3(_737, _738, _739), vec3(_1125 * _1117, _1125 * _1118, _1125 * _1119)) + 1.0) * 0.5;
        float _3526 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1142 = sqrt(((_1118 * _1118) + (_1117 * _1117)) + (_1119 * _1119)) / (_1071 + 9.9999997473787516355514526367188e-06);
        float _3537 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1143 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
        float _1144 = _1143 * 2.0;
        float _1148 = (1.0 - _1143) / (_1143 + 1.0);
        float _3548 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1149 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
        float _1158 = ((((1.0 - _1149) * (_1144 + 2.0)) * exp2(log2(isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))) * (_1144 + 1.0))) + _1149) * _1071;
        float _1159 = _1039 * 0.5;
        float _1160 = _1049 * 0.5;
        float _1161 = _1059 * 0.5;
        float _1162 = dot(vec3(_1159, _1160, _1161), vec3(_1159, _1160, _1161));
        float _1167 = (_1162 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1162);
        float _1175 = (dot(vec3(_737, _738, _739), vec3(_1167 * _1159, _1167 * _1160, _1167 * _1161)) + 1.0) * 0.5;
        float _3559 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1184 = sqrt(((_1160 * _1160) + (_1159 * _1159)) + (_1161 * _1161)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _3570 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1185 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
        float _1186 = _1185 * 2.0;
        float _1190 = (1.0 - _1185) / (_1185 + 1.0);
        float _3581 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0));
        float _1200 = ((((1.0 - _1191) * (_1186 + 2.0)) * exp2(log2(isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0))) * (_1186 + 1.0))) + _1191) * _1072;
        _1208 = _1039;
        _1210 = _1038;
        _1211 = _1037;
        _1212 = _1049;
        _1213 = _1048;
        _1214 = _1047;
        _1215 = _1059;
        _1216 = _1058;
        _1217 = _1057;
        _1218 = _1072;
        _1219 = _1071;
        _1220 = _1070;
        _1221 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0)));
        _1222 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0)));
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0)));
    }
    else
    {
        _1208 = _1209;
        _1210 = _1209;
        _1211 = _1209;
        _1212 = _1209;
        _1213 = _1209;
        _1214 = _1209;
        _1215 = _1209;
        _1216 = _1209;
        _1217 = _1209;
        _1218 = _1209;
        _1219 = _1209;
        _1220 = _1209;
        _1221 = 0.0;
        _1222 = 0.0;
        _1223 = 0.0;
    }
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1249 = fma(_907, cbModelParam._m0[30u].z, fma(_903, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _899));
        float _1253 = fma(_907, cbModelParam._m0[31u].z, fma(_903, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _899));
        float _1257 = fma(_907, cbModelParam._m0[32u].z, fma(_903, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _899));
        float _1280 = _899 + _737;
        float _1281 = _903 + _738;
        float _1282 = _907 + _739;
        float _1292 = fma(_1282, cbModelParam._m0[30u].z, fma(_1281, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1280)) - _1249;
        float _1293 = fma(_1282, cbModelParam._m0[31u].z, fma(_1281, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1280)) - _1253;
        float _1294 = fma(_1282, cbModelParam._m0[32u].z, fma(_1281, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1280)) - _1257;
        float _1298 = inversesqrt(dot(vec3(_1292, _1293, _1294), vec3(_1292, _1293, _1294)));
        float _1311 = ((_1298 * _1292) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1249 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1312 = ((_1298 * _1293) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1253 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1313 = ((_1298 * _1294) / cbModelParam._m0[35u].z) + ((((((_1257 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1315 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1322 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        float _1348 = exp2((_1315.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1315.x + (-0.5));
        float _1350 = _1348 * (_1315.y + (-0.5));
        float _1351 = _1348 * (_1315.z + (-0.5));
        float _1358 = exp2((_1322.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1322.x + (-0.5));
        float _1360 = _1358 * (_1322.y + (-0.5));
        float _1361 = _1358 * (_1322.z + (-0.5));
        float _1368 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1329.x + (-0.5));
        float _1370 = _1368 * (_1329.y + (-0.5));
        float _1371 = _1368 * (_1329.z + (-0.5));
        float _1378 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1379 = _1378 * (_1336.x + (-0.5));
        float _1380 = _1378 * (_1336.y + (-0.5));
        float _1381 = _1378 * (_1336.z + (-0.5));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = _1349 * 0.5;
        float _1386 = _1359 * 0.5;
        float _1387 = _1369 * 0.5;
        float _1388 = dot(vec3(_1385, _1386, _1387), vec3(_1385, _1386, _1387));
        float _1393 = (_1388 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1388);
        float _1401 = (dot(vec3(_737, _738, _739), vec3(_1393 * _1385, _1393 * _1386, _1393 * _1387)) + 1.0) * 0.5;
        float _3622 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1410 = sqrt(((_1386 * _1386) + (_1385 * _1385)) + (_1387 * _1387)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _3633 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
        float _1412 = _1411 * 2.0;
        float _1416 = (1.0 - _1411) / (_1411 + 1.0);
        float _3644 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
        float _1426 = ((((1.0 - _1417) * (_1412 + 2.0)) * exp2(log2(isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0))) * (_1412 + 1.0))) + _1417) * _1382;
        float _1427 = _1350 * 0.5;
        float _1428 = _1360 * 0.5;
        float _1429 = _1370 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1443 = (dot(vec3(_737, _738, _739), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _3655 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1452 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _3666 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
        float _1454 = _1453 * 2.0;
        float _1458 = (1.0 - _1453) / (_1453 + 1.0);
        float _3677 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
        float _1468 = ((((1.0 - _1459) * (_1454 + 2.0)) * exp2(log2(isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0))) * (_1454 + 1.0))) + _1459) * _1383;
        float _1469 = _1351 * 0.5;
        float _1470 = _1361 * 0.5;
        float _1471 = _1371 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_737, _738, _739), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _3688 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _3699 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _3710 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0))) * (_1496 + 1.0))) + _1501) * _1384;
        _1518 = _1351;
        _1519 = _1350;
        _1520 = _1349;
        _1521 = _1361;
        _1522 = _1360;
        _1523 = _1359;
        _1524 = _1371;
        _1525 = _1370;
        _1526 = _1369;
        _1527 = _1384;
        _1528 = _1383;
        _1529 = _1382;
        _1530 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)));
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0)));
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
    }
    else
    {
        _1518 = _1209;
        _1519 = _1209;
        _1520 = _1209;
        _1521 = _1209;
        _1522 = _1209;
        _1523 = _1209;
        _1524 = _1209;
        _1525 = _1209;
        _1526 = _1209;
        _1527 = _1209;
        _1528 = _1209;
        _1529 = _1209;
        _1530 = 0.0;
        _1531 = 0.0;
        _1532 = 0.0;
    }
    float _1542 = (cbModelParam._m0[1u].x * (_1530 - _1221)) + _1221;
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1222)) + _1222;
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1223)) + _1223;
    float _1565 = fma(_1544, cbSceneParam._m0[89u].z, fma(_1543, cbSceneParam._m0[89u].y, _1542 * cbSceneParam._m0[89u].x));
    float _1568 = fma(_1544, cbSceneParam._m0[90u].z, fma(_1543, cbSceneParam._m0[90u].y, _1542 * cbSceneParam._m0[90u].x));
    float _1571 = fma(_1544, cbSceneParam._m0[91u].z, fma(_1543, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1542));
    float _1586 = _846 * 0.5;
    float _1587 = _847 * 0.5;
    float _1588 = _848 * 0.5;
    float _1589 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1592 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1595 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1518, _1521, _1524, _1527));
    float _1629;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1602 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1208, _1212, _1215, _1218));
        float _1606 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1210, _1213, _1216, _1219));
        float _1610 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1211, _1214, _1217, _1220));
        float _1617 = dot(vec4(cbModelParam._m0[39u]), vec4(_1586, _1587, _1588, 1.0));
        _1629 = dot(vec3(isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1617) ? 0.0 : (isnan(0.0) ? _1617 : max(0.0, _1617))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1629 = 1.0;
    }
    float _1640;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1631 = dot(vec4(cbModelParam._m0[40u]), vec4(_1586, _1587, _1588, 1.0));
        _1640 = dot(vec3(isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0)), isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1631) ? 0.0 : (isnan(0.0) ? _1631 : max(0.0, _1631))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1640 = 1.0;
    }
    float _1644 = (_1640 * cbModelParam._m0[1u].x) + (_1629 * (1.0 - cbModelParam._m0[1u].x));
    float _1654 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _740);
    float _1655 = isnan(_1654) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1654 : min(cbModelParam._m0[25u].z, _1654));
    float _1735;
    float _1737;
    float _1739;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1702 = fma(_907, cbModelParam._m0[13u].z, fma(_903, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _899)) + cbModelParam._m0[13u].w;
        float _1706 = fma(_907, cbModelParam._m0[14u].z, fma(_903, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _899)) + cbModelParam._m0[14u].w;
        float _1710 = fma(_907, cbModelParam._m0[15u].z, fma(_903, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _899)) + cbModelParam._m0[15u].w;
        float _1713 = fma(_848, cbModelParam._m0[13u].z, fma(_847, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _846));
        float _1716 = fma(_848, cbModelParam._m0[14u].z, fma(_847, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _846));
        float _1719 = fma(_848, cbModelParam._m0[15u].z, fma(_847, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _846));
        float _1747;
        if (_1713 > 0.0)
        {
            _1747 = abs((1.0 - _1702) / _1713);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1713 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1702 + 1.0) / _1713);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _1747 = frontier_phi_54_52_ladder;
        }
        float _2092;
        if (_1716 > 0.0)
        {
            _2092 = abs((1.0 - _1706) / _1716);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1716 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1706 + 1.0) / _1716);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _2092 = frontier_phi_63_59_ladder;
        }
        float _2408;
        if (_1719 > 0.0)
        {
            _2408 = abs((1.0 - _1710) / _1719);
        }
        else
        {
            float frontier_phi_77_70_ladder;
            if (_1719 < 0.0)
            {
                frontier_phi_77_70_ladder = abs((_1710 + 1.0) / _1719);
            }
            else
            {
                frontier_phi_77_70_ladder = 5000.0;
            }
            _2408 = frontier_phi_77_70_ladder;
        }
        float _2410 = isnan(_2092) ? _1747 : (isnan(_1747) ? _2092 : min(_1747, _2092));
        float _2411 = isnan(_2408) ? _2410 : (isnan(_2410) ? _2408 : min(_2410, _2408));
        float _2415 = (_2411 * _1713) + _1702;
        float _2416 = (_2411 * _1716) + _1706;
        float _2417 = (_2411 * _1719) + _1710;
        float _2418 = _2411 * 9.9999997473787516355514526367188e-05;
        float _2419 = (-1.0) - _2418;
        float _2421 = _2418 + 1.0;
        float frontier_phi_53_77_ladder;
        float frontier_phi_53_77_ladder_1;
        float frontier_phi_53_77_ladder_2;
        if ((_2417 > _2421) || ((_2417 < _2419) || ((_2416 > _2421) || ((_2416 < _2419) || ((_2415 < _2419) || (_2415 > _2421))))))
        {
            frontier_phi_53_77_ladder = 0.0;
            frontier_phi_53_77_ladder_1 = 0.0;
            frontier_phi_53_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2543 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2417, cbModelParam._m0[9u].z, fma(_2416, cbModelParam._m0[9u].y, _2415 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2417, cbModelParam._m0[10u].z, fma(_2416, cbModelParam._m0[10u].y, _2415 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2417, cbModelParam._m0[11u].z, fma(_2416, cbModelParam._m0[11u].y, _2415 * cbModelParam._m0[11u].x))), _1655);
            frontier_phi_53_77_ladder = _2543.x * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_1 = _2543.y * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_2 = _2543.z * cbModelParam._m0[1u].y;
        }
        _1735 = frontier_phi_53_77_ladder;
        _1737 = frontier_phi_53_77_ladder_1;
        _1739 = frontier_phi_53_77_ladder_2;
    }
    else
    {
        vec4 _1723 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_846, _847, _848), _1655);
        _1735 = _1723.x * cbModelParam._m0[1u].y;
        _1737 = _1723.y * cbModelParam._m0[1u].y;
        _1739 = _1723.z * cbModelParam._m0[1u].y;
    }
    float _1743 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _740);
    float _1744 = isnan(_1743) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1743 : min(cbModelParam._m0[25u].w, _1743));
    float _1832;
    float _1834;
    float _1836;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1796 = fma(_907, cbModelParam._m0[21u].z, fma(_903, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _899)) + cbModelParam._m0[21u].w;
        float _1800 = fma(_907, cbModelParam._m0[22u].z, fma(_903, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _899)) + cbModelParam._m0[22u].w;
        float _1804 = fma(_907, cbModelParam._m0[23u].z, fma(_903, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _899)) + cbModelParam._m0[23u].w;
        float _1807 = fma(_848, cbModelParam._m0[21u].z, fma(_847, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _846));
        float _1810 = fma(_848, cbModelParam._m0[22u].z, fma(_847, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _846));
        float _1813 = fma(_848, cbModelParam._m0[23u].z, fma(_847, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _846));
        float _2097;
        if (_1807 > 0.0)
        {
            _2097 = abs((1.0 - _1796) / _1807);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_1807 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_1796 + 1.0) / _1807);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _2097 = frontier_phi_65_61_ladder;
        }
        float _2434;
        if (_1810 > 0.0)
        {
            _2434 = abs((1.0 - _1800) / _1810);
        }
        else
        {
            float frontier_phi_79_72_ladder;
            if (_1810 < 0.0)
            {
                frontier_phi_79_72_ladder = abs((_1800 + 1.0) / _1810);
            }
            else
            {
                frontier_phi_79_72_ladder = 5000.0;
            }
            _2434 = frontier_phi_79_72_ladder;
        }
        float _2603;
        if (_1813 > 0.0)
        {
            _2603 = abs((1.0 - _1804) / _1813);
        }
        else
        {
            float frontier_phi_93_88_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_93_88_ladder = abs((_1804 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_93_88_ladder = 5000.0;
            }
            _2603 = frontier_phi_93_88_ladder;
        }
        float _2605 = isnan(_2434) ? _2097 : (isnan(_2097) ? _2434 : min(_2097, _2434));
        float _2606 = isnan(_2603) ? _2605 : (isnan(_2605) ? _2603 : min(_2605, _2603));
        float _2610 = (_2606 * _1807) + _1796;
        float _2611 = (_2606 * _1810) + _1800;
        float _2612 = (_2606 * _1813) + _1804;
        float _2613 = _2606 * 9.9999997473787516355514526367188e-05;
        float _2614 = (-1.0) - _2613;
        float _2616 = _2613 + 1.0;
        float frontier_phi_62_93_ladder;
        float frontier_phi_62_93_ladder_1;
        float frontier_phi_62_93_ladder_2;
        if ((_2612 > _2616) || ((_2612 < _2614) || ((_2611 > _2616) || ((_2611 < _2614) || ((_2610 < _2614) || (_2610 > _2616))))))
        {
            frontier_phi_62_93_ladder = 0.0;
            frontier_phi_62_93_ladder_1 = 0.0;
            frontier_phi_62_93_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2845 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2612, cbModelParam._m0[17u].z, fma(_2611, cbModelParam._m0[17u].y, _2610 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2612, cbModelParam._m0[18u].z, fma(_2611, cbModelParam._m0[18u].y, _2610 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2612, cbModelParam._m0[19u].z, fma(_2611, cbModelParam._m0[19u].y, _2610 * cbModelParam._m0[19u].x))), _1744);
            frontier_phi_62_93_ladder = _2845.z * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_1 = _2845.y * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_2 = _2845.x * cbModelParam._m0[1u].z;
        }
        _1832 = frontier_phi_62_93_ladder_2;
        _1834 = frontier_phi_62_93_ladder_1;
        _1836 = frontier_phi_62_93_ladder;
    }
    else
    {
        vec4 _1816 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_846, _847, _848), _1744);
        _1832 = _1816.x * cbModelParam._m0[1u].z;
        _1834 = _1816.y * cbModelParam._m0[1u].z;
        _1836 = _1816.z * cbModelParam._m0[1u].z;
    }
    float _1848 = ((((1.0 - _867) * ((_854 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_867 * _854)) * _838;
    float _1849 = _1848 * ((cbModelParam._m0[1u].w * (_1832 - _1735)) + _1735);
    float _1850 = _1848 * ((cbModelParam._m0[1u].w * (_1834 - _1737)) + _1737);
    float _1851 = _1848 * ((cbModelParam._m0[1u].w * (_1836 - _1739)) + _1739);
    float _1854 = fma(_1851, cbSceneParam._m0[89u].z, fma(_1850, cbSceneParam._m0[89u].y, _1849 * cbSceneParam._m0[89u].x));
    float _1857 = fma(_1851, cbSceneParam._m0[90u].z, fma(_1850, cbSceneParam._m0[90u].y, _1849 * cbSceneParam._m0[90u].x));
    float _1860 = fma(_1851, cbSceneParam._m0[91u].z, fma(_1850, cbSceneParam._m0[91u].y, _1849 * cbSceneParam._m0[91u].x));
    uvec4 _1870 = floatBitsToUint(cbInstanceData._m0[_812 + 5u]);
    uint _1872 = _1870.x * 14u;
    uint _1873 = _1872 + 13u;
    float _1878 = _838 + (-1.0);
    float _1881 = (cbLight._m0[_1873].x * _1878) + 1.0;
    float _1882 = (cbLight._m0[_1873].y * _1878) + 1.0;
    uint _1883 = _1872 + 5u;
    float _1889 = isnan(1.0) ? _1882 : (isnan(_1882) ? 1.0 : min(_1882, 1.0));
    uint _1893 = _1872 + 4u;
    float _1899 = isnan(1.0) ? _1881 : (isnan(_1881) ? 1.0 : min(_1881, 1.0));
    uint _1903 = _1872 | 1u;
    float _1914 = dot(vec3(cbLight._m0[_1872].xyz), vec3(_737, _738, _739));
    float _1917 = dot(vec3(cbLight._m0[_1903].xyz), vec3(_737, _738, _739));
    float _3846 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
    float _3857 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
    float _1922 = (isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0))) * 0.3183098733425140380859375;
    float _1924 = (isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0))) * 0.3183098733425140380859375;
    float _1931 = ((cbLight._m0[_1883].x * _1889) * _1924) + ((cbLight._m0[_1893].x * _1899) * _1922);
    float _1932 = ((_1889 * cbLight._m0[_1883].y) * _1924) + ((_1899 * cbLight._m0[_1893].y) * _1922);
    float _1933 = ((_1889 * cbLight._m0[_1883].z) * _1924) + ((_1899 * cbLight._m0[_1893].z) * _1922);
    uint _1935 = _1872 + 8u;
    float _1948 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1872].w)) * _740) * 0.949999988079071044921875);
    float _1949 = _1948 * _1948;
    float _1950 = cbLight._m0[_1872].x + _764;
    float _1951 = cbLight._m0[_1872].y + _765;
    float _1952 = cbLight._m0[_1872].z + _766;
    float _1956 = inversesqrt(dot(vec3(_1950, _1951, _1952), vec3(_1950, _1951, _1952)));
    float _1957 = _1956 * _1950;
    float _1958 = _1956 * _1951;
    float _1959 = _1956 * _1952;
    float _1960 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1872].xyz));
    float _3868 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
    float _1963 = isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0));
    float _3879 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _1964 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
    float _1965 = dot(vec3(_737, _738, _739), vec3(_1957, _1958, _1959));
    float _3890 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
    float _1968 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
    float _1969 = dot(vec3(cbLight._m0[_1872].xyz), vec3(_1957, _1958, _1959));
    float _3901 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
    float _1973 = _1949 * _1949;
    float _1977 = ((_1968 * _1968) * (_1973 + (-1.0))) + 1.0;
    float _1988 = (exp2(log2(1.0 - (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1989 = 1.0 - _1949;
    float _2000 = (0.5 / (((_1964 * ((_1963 * _1989) + _1949)) + 9.9999999392252902907785028219223e-09) + (((_1964 * _1989) + _1949) * _1963))) * _1963;
    float _3912 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
    float _2002 = (isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0))) * (_1973 / ((_1977 * _1977) * 3.141590118408203125));
    uint _2013 = _1872 + 9u;
    float _2024 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1903].w)) * _740) * 0.949999988079071044921875);
    float _2025 = _2024 * _2024;
    float _2026 = cbLight._m0[_1903].x + _764;
    float _2027 = cbLight._m0[_1903].y + _765;
    float _2028 = cbLight._m0[_1903].z + _766;
    float _2032 = inversesqrt(dot(vec3(_2026, _2027, _2028), vec3(_2026, _2027, _2028)));
    float _2033 = _2032 * _2026;
    float _2034 = _2032 * _2027;
    float _2035 = _2032 * _2028;
    float _2036 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1903].xyz));
    float _3923 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
    float _2039 = isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0));
    float _2040 = dot(vec3(_737, _738, _739), vec3(_2033, _2034, _2035));
    float _3934 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
    float _2043 = isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0));
    float _2044 = dot(vec3(cbLight._m0[_1903].xyz), vec3(_2033, _2034, _2035));
    float _3945 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2048 = _2025 * _2025;
    float _2052 = ((_2043 * _2043) * (_2048 + (-1.0))) + 1.0;
    float _2061 = (exp2(log2(1.0 - (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2062 = 1.0 - _2025;
    float _2072 = (0.5 / (((_1964 * ((_2039 * _2062) + _2025)) + 9.9999999392252902907785028219223e-09) + (((_1964 * _2062) + _2025) * _2039))) * _2039;
    float _3956 = isnan(0.0) ? _2072 : (isnan(_2072) ? 0.0 : max(_2072, 0.0));
    float _2074 = (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) * (_2048 / ((_2052 * _2052) * 3.141590118408203125));
    float _2084 = (((_2061 * cbLight._m0[_2013].x) * _2074) * _1889) + (((_1988 * cbLight._m0[_1935].x) * _2002) * _1899);
    float _2085 = (((_2061 * cbLight._m0[_2013].y) * _2074) * _1889) + (((_1988 * cbLight._m0[_1935].y) * _2002) * _1899);
    float _2086 = (((_2061 * cbLight._m0[_2013].z) * _2074) * _1889) + (((_1988 * cbLight._m0[_1935].z) * _2002) * _1899);
    float _2201;
    float _2203;
    float _2205;
    float _2207;
    float _2209;
    float _2211;
    if (_1870.y == 0u)
    {
        float _2141 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2142 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2141;
        float _2143 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2141;
        float _2144 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2141;
        uvec4 _2156 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2157 = _2156.x;
        uint _2168 = uint((float(_2156.y) * floor(float(uint(cbSceneParam._m0[85u].y * _773) / _2157))) + floor(float(uint(cbSceneParam._m0[85u].x * _772) / _2157)));
        float _2178 = (log2(_2144 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2179 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
        uint _2182 = uint(isnan(14.0) ? _2179 : (isnan(_2179) ? 14.0 : min(_2179, 14.0)));
        uvec4 _2187 = texelFetch(g_lightClusterGridBuffer, int(((_2182 << 2u) + (_2168 << 6u)) >> 2u));
        uint _2188 = _2187.x;
        uint _2189 = _2156.z;
        float _2295;
        float _2297;
        float _2299;
        float _2301;
        float _2303;
        float _2305;
        if (((((1u << ((_2189 >> 4u) & 15u)) + 4294967295u) & _2188) == 0u) || ((_2189 & 240u) == 0u))
        {
            _2295 = 0.0;
            _2297 = 0.0;
            _2299 = 0.0;
            _2301 = 0.0;
            _2303 = 0.0;
            _2305 = 0.0;
        }
        else
        {
            float _2296;
            float _2298;
            float _2300;
            float _2302;
            float _2304;
            float _2306;
            float _2471 = 0.0;
            float _2472 = 0.0;
            float _2473 = 0.0;
            float _2474 = 0.0;
            float _2475 = 0.0;
            float _2476 = 0.0;
            uint _2477 = 0u;
            uint _2486;
            bool _2487;
            for (;;)
            {
                _2486 = texelFetch(g_lightClassification, int((((_2182 << 5u) + (_2168 << 9u)) + (_2477 << 2u)) >> 2u)).x;
                _2487 = _2486 == 0u;
                float frontier_phi_90_pred;
                float frontier_phi_90_pred_1;
                float frontier_phi_90_pred_2;
                float frontier_phi_90_pred_3;
                float frontier_phi_90_pred_4;
                float frontier_phi_90_pred_5;
                if (_2487)
                {
                    frontier_phi_90_pred = _2476;
                    frontier_phi_90_pred_1 = _2471;
                    frontier_phi_90_pred_2 = _2472;
                    frontier_phi_90_pred_3 = _2473;
                    frontier_phi_90_pred_4 = _2474;
                    frontier_phi_90_pred_5 = _2475;
                }
                else
                {
                    float _2646;
                    float _2647;
                    float _2648;
                    float _2649;
                    float _2650;
                    float _2651;
                    uint _2652;
                    _2646 = _2471;
                    _2647 = _2472;
                    _2648 = _2473;
                    _2649 = _2474;
                    _2650 = _2475;
                    _2651 = _2476;
                    _2652 = _2486;
                    float _2552;
                    float _2553;
                    float _2554;
                    float _2555;
                    float _2556;
                    float _2557;
                    for (;;)
                    {
                        uint _2656 = uint(findLSB(_2652)) + (_2477 << 5u);
                        uint _2653 = (_2652 + 4294967295u) & _2652;
                        uint _2658 = _2656 * 48u;
                        vec4 _2672 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2658)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 3u)).x));
                        uint _2678 = (_2656 * 48u) + 4u;
                        vec4 _2691 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2678)).x, texelFetch(g_PointLightRenderingBuffer, int(_2678 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2678 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2678 + 3u)).x));
                        uint _2697 = (_2656 * 48u) + 8u;
                        vec3 _2708 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2697)).x, texelFetch(g_PointLightRenderingBuffer, int(_2697 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2697 + 2u)).x));
                        float _2712 = _2672.x - _2142;
                        float _2713 = _2672.y - _2143;
                        float _2714 = _2672.z - _2144;
                        float _2715 = dot(vec3(_2712, _2713, _2714), vec3(_2712, _2713, _2714));
                        float _2718 = inversesqrt(_2715);
                        float _2719 = _2718 * _2712;
                        float _2720 = _2718 * _2713;
                        float _2721 = _2718 * _2714;
                        float _2722 = dot(vec3(_793, _796, _799), vec3(_2719, _2720, _2721));
                        float _2727 = 1.0 - (_2715 * _2672.w);
                        float _3977 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
                        float _2728 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
                        float _2729 = sqrt(_2715) * _2691.w;
                        float _2732 = 1.39999997615814208984375 / (_2729 + 1.39999997615814208984375);
                        float _2733 = _2732 * _2732;
                        float _2736 = ((1.0 - _2733) * _2722) + _2733;
                        float _2739 = _2729 * _2729;
                        float _2743 = ((isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0))) * _2728) / ((_2739 * 0.699999988079071044921875) + 1.0);
                        float _2747 = (-0.0) - _2142;
                        float _2748 = (-0.0) - _2143;
                        float _2749 = (-0.0) - _2144;
                        float _2753 = inversesqrt(dot(vec3(_2747, _2748, _2749), vec3(_2747, _2748, _2749)));
                        float _2754 = _2753 * _2747;
                        float _2755 = _2753 * _2748;
                        float _2756 = _2753 * _2749;
                        float _2764 = exp2(log2(1.0 / ((_2739 * 3.5) + 5.0)) * 0.25);
                        float _2765 = 1.0 - _854;
                        float _2772 = sqrt(1.0 - ((1.0 - (_2765 * _2765)) * (1.0 - (_2764 * _2764))));
                        float _2773 = _2772 * _2772;
                        float _2774 = _2773 * _2773;
                        float _2775 = _2754 + _2719;
                        float _2776 = _2755 + _2720;
                        float _2777 = _2756 + _2721;
                        float _2781 = inversesqrt(dot(vec3(_2775, _2776, _2777), vec3(_2775, _2776, _2777)));
                        float _2785 = dot(vec3(_793, _796, _799), vec3(_2754, _2755, _2756));
                        float _3993 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
                        float _2788 = isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0));
                        float _2789 = dot(vec3(_793, _796, _799), vec3(_2781 * _2775, _2781 * _2776, _2781 * _2777));
                        float _4004 = isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0));
                        float _2792 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
                        float _2796 = ((_2792 * _2792) * (_2774 + (-1.0))) + 1.0;
                        float _2797 = _2732 * _2773;
                        float _2798 = _2797 * _2797;
                        float _2801 = ((1.0 - _2798) * _2722) + _2798;
                        float _4015 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
                        float _2802 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
                        float _2803 = 1.0 - _2773;
                        float _2813 = (0.5 / (((_2802 * ((_2788 * _2803) + _2773)) + 9.9999999392252902907785028219223e-09) + (((_2802 * _2803) + _2773) * _2788))) * _2802;
                        float _4026 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
                        float _2824 = (((_2774 * 3.1415927410125732421875) * (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0)))) / ((_2796 * _2796) * ((_2739 * 2.1991131305694580078125) + 3.141590118408203125))) * _2728;
                        _2555 = (_2743 * _2691.x) + _2649;
                        _2556 = (_2743 * _2691.y) + _2650;
                        _2557 = (_2743 * _2691.z) + _2651;
                        _2552 = (_2824 * _2708.x) + _2646;
                        _2553 = (_2824 * _2708.y) + _2647;
                        _2554 = (_2824 * _2708.z) + _2648;
                        if (_2653 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2646 = _2552;
                            _2647 = _2553;
                            _2648 = _2554;
                            _2649 = _2555;
                            _2650 = _2556;
                            _2651 = _2557;
                            _2652 = _2653;
                        }
                    }
                    frontier_phi_90_pred = _2557;
                    frontier_phi_90_pred_1 = _2552;
                    frontier_phi_90_pred_2 = _2553;
                    frontier_phi_90_pred_3 = _2554;
                    frontier_phi_90_pred_4 = _2555;
                    frontier_phi_90_pred_5 = _2556;
                }
                _2306 = frontier_phi_90_pred;
                _2296 = frontier_phi_90_pred_1;
                _2298 = frontier_phi_90_pred_2;
                _2300 = frontier_phi_90_pred_3;
                _2302 = frontier_phi_90_pred_4;
                _2304 = frontier_phi_90_pred_5;
                uint _2478 = _2477 + 1u;
                if (_2478 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2471 = _2296;
                    _2472 = _2298;
                    _2473 = _2300;
                    _2474 = _2302;
                    _2475 = _2304;
                    _2476 = _2306;
                    _2477 = _2478;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2295 = _2296;
            _2297 = _2298;
            _2299 = _2300;
            _2301 = _2302;
            _2303 = _2304;
            _2305 = _2306;
        }
        uvec4 _2309 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2310 = _2309.z;
        uint _2312 = (_2310 >> 8u) & 15u;
        float _2439;
        float _2441;
        float _2443;
        float _2445;
        float _2447;
        float _2449;
        if (((4294967295u << _2312) & _2188) == 0u)
        {
            _2439 = _2295;
            _2441 = _2297;
            _2443 = _2299;
            _2445 = _2301;
            _2447 = _2303;
            _2449 = _2305;
        }
        else
        {
            float _2464 = inversesqrt(dot(vec3(_2142, _2143, _2144), vec3(_2142, _2143, _2144)));
            float _2465 = _2464 * _2142;
            float _2466 = _2464 * _2143;
            float _2467 = _2464 * _2144;
            float frontier_phi_81_82_ladder;
            float frontier_phi_81_82_ladder_1;
            float frontier_phi_81_82_ladder_2;
            float frontier_phi_81_82_ladder_3;
            float frontier_phi_81_82_ladder_4;
            float frontier_phi_81_82_ladder_5;
            if (_2312 < ((_2310 >> 12u) & 15u))
            {
                float _2440;
                float _2442;
                float _2444;
                float _2446;
                float _2448;
                float _2450;
                float _2629 = _2295;
                float _2630 = _2297;
                float _2631 = _2299;
                float _2632 = _2301;
                float _2633 = _2303;
                float _2634 = _2305;
                uint _2635 = _2312;
                uint _2644;
                bool _2645;
                for (;;)
                {
                    _2644 = texelFetch(g_lightClassification, int((((_2182 << 5u) + (_2168 << 9u)) + (_2635 << 2u)) >> 2u)).x;
                    _2645 = _2644 == 0u;
                    float frontier_phi_99_pred;
                    float frontier_phi_99_pred_1;
                    float frontier_phi_99_pred_2;
                    float frontier_phi_99_pred_3;
                    float frontier_phi_99_pred_4;
                    float frontier_phi_99_pred_5;
                    if (_2645)
                    {
                        frontier_phi_99_pred = _2632;
                        frontier_phi_99_pred_1 = _2631;
                        frontier_phi_99_pred_2 = _2630;
                        frontier_phi_99_pred_3 = _2629;
                        frontier_phi_99_pred_4 = _2634;
                        frontier_phi_99_pred_5 = _2633;
                    }
                    else
                    {
                        float _2850;
                        float _2851;
                        float _2852;
                        float _2853;
                        float _2854;
                        float _2855;
                        float _3143;
                        float _3144;
                        float _3145;
                        float _3146;
                        float _3147;
                        float _3148;
                        float _2863 = _2629;
                        float _2864 = _2630;
                        float _2865 = _2631;
                        float _2866 = _2632;
                        float _2867 = _2633;
                        float _2868 = _2634;
                        uint _2869 = _2644;
                        uint _2870;
                        vec4 _2895;
                        float _2896;
                        vec4 _2911;
                        vec3 _2923;
                        vec4 _2938;
                        vec4 _2953;
                        float _2999;
                        bool _3000;
                        for (;;)
                        {
                            uint _2880 = ((_2635 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2869));
                            _2870 = (_2869 + 4294967295u) & _2869;
                            uint _2882 = _2880 * 40u;
                            _2895 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2882)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2882 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2882 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2882 + 3u)).x));
                            _2896 = _2895.w;
                            uint _2898 = (_2880 * 40u) + 4u;
                            _2911 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2898)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2898 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2898 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2898 + 3u)).x));
                            uint _2913 = (_2880 * 40u) + 8u;
                            _2923 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2913)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2913 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2913 + 2u)).x));
                            uint _2925 = (_2880 * 40u) + 16u;
                            _2938 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2925)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2925 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2925 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2925 + 3u)).x));
                            uint _2940 = (_2880 * 40u) + 20u;
                            _2953 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2940)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2940 + 3u)).x));
                            uint _2955 = (_2880 * 40u) + 24u;
                            vec4 _2968 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2955)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2955 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2955 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2955 + 3u)).x));
                            uint _2974 = (_2880 * 40u) + 28u;
                            vec4 _2987 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2974)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2974 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2974 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2974 + 3u)).x));
                            _2999 = fma(_2144, _2987.z, fma(_2143, _2987.y, _2987.x * _2142)) + _2987.w;
                            _3000 = !((fma(_2144, _2968.z, fma(_2143, _2968.y, _2968.x * _2142)) + _2968.w) <= 0.0);
                            float frontier_phi_105_pred;
                            float frontier_phi_105_pred_1;
                            float frontier_phi_105_pred_2;
                            float frontier_phi_105_pred_3;
                            float frontier_phi_105_pred_4;
                            float frontier_phi_105_pred_5;
                            if (_3000)
                            {
                                float _3027 = _2895.x - _2142;
                                float _3028 = _2895.y - _2143;
                                float _3029 = _2895.z - _2144;
                                float _3030 = dot(vec3(_3027, _3028, _3029), vec3(_3027, _3028, _3029));
                                float _3033 = inversesqrt(_3030);
                                float _3034 = _3033 * _3027;
                                float _3035 = _3033 * _3028;
                                float _3036 = _3033 * _3029;
                                float _3040 = 1.0 - (_3030 / (_2896 * _2896));
                                float _4037 = isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : max(_3040, 0.0));
                                float _3041 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
                                float _3045 = sqrt(_3030) * _2911.w;
                                float _3047 = 1.39999997615814208984375 / (_3045 + 1.39999997615814208984375);
                                float _3048 = _3047 * _3047;
                                float _3051 = ((1.0 - _3048) * dot(vec3(_3034, _3035, _3036), vec3(_793, _796, _799))) + _3048;
                                float _3054 = _3045 * _3045;
                                float _3058 = (fma(_2144, _2938.z, fma(_2143, _2938.y, _2938.x * _2142)) + _2938.w) / _2999;
                                float _3059 = (fma(_2144, _2953.z, fma(_2143, _2953.y, _2953.x * _2142)) + _2953.w) / _2999;
                                float _3063 = 1.0 - dot(vec2(_3058, _3059), vec2(_3058, _3059));
                                float _4053 = isnan(0.0) ? _3063 : (isnan(_3063) ? 0.0 : max(_3063, 0.0));
                                float _3064 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
                                float _3065 = _3064 * (((isnan(0.0) ? _3051 : (isnan(_3051) ? 0.0 : max(_3051, 0.0))) * _3041) / ((_3054 * 0.699999988079071044921875) + 1.0));
                                float _3077 = exp2(log2(1.0 / ((_3054 * 3.5) + 5.0)) * 0.25);
                                float _3078 = 1.0 - _854;
                                float _3085 = sqrt(1.0 - ((1.0 - (_3078 * _3078)) * (1.0 - (_3077 * _3077))));
                                float _3086 = _3085 * _3085;
                                float _3087 = _3086 * _3086;
                                float _3088 = _3034 - _2465;
                                float _3089 = _3035 - _2466;
                                float _3090 = _3036 - _2467;
                                float _3094 = inversesqrt(dot(vec3(_3088, _3089, _3090), vec3(_3088, _3089, _3090)));
                                float _3098 = dot(vec3(_793, _796, _799), vec3((-0.0) - _2465, (-0.0) - _2466, (-0.0) - _2467));
                                float _4064 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0));
                                float _3101 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
                                float _3102 = dot(vec3(_793, _796, _799), vec3(_3094 * _3088, _3094 * _3089, _3094 * _3090));
                                float _4075 = isnan(0.0) ? _3102 : (isnan(_3102) ? 0.0 : max(_3102, 0.0));
                                float _3105 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
                                float _3109 = ((_3105 * _3105) * (_3087 + (-1.0))) + 1.0;
                                float _3110 = _3047 * _3086;
                                float _3111 = _3110 * _3110;
                                float _3117 = ((1.0 - _3111) * dot(vec3(_793, _796, _799), vec3(_3034, _3035, _3036))) + _3111;
                                float _4086 = isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0));
                                float _3118 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
                                float _3119 = 1.0 - _3086;
                                float _3129 = (0.5 / (((_3118 * ((_3101 * _3119) + _3086)) + 9.9999999392252902907785028219223e-09) + (((_3118 * _3119) + _3086) * _3101))) * _3118;
                                float _4097 = isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : max(_3129, 0.0));
                                float _3139 = (_3064 * _3041) * (((_3087 * 3.1415927410125732421875) * (isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0)))) / ((_3109 * _3109) * ((_3054 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_105_pred = _3065 * _2911.z;
                                frontier_phi_105_pred_1 = _3139 * _2923.x;
                                frontier_phi_105_pred_2 = _3139 * _2923.y;
                                frontier_phi_105_pred_3 = _3139 * _2923.z;
                                frontier_phi_105_pred_4 = _3065 * _2911.x;
                                frontier_phi_105_pred_5 = _3065 * _2911.y;
                            }
                            else
                            {
                                frontier_phi_105_pred = 0.0;
                                frontier_phi_105_pred_1 = 0.0;
                                frontier_phi_105_pred_2 = 0.0;
                                frontier_phi_105_pred_3 = 0.0;
                                frontier_phi_105_pred_4 = 0.0;
                                frontier_phi_105_pred_5 = 0.0;
                            }
                            _3148 = frontier_phi_105_pred;
                            _3143 = frontier_phi_105_pred_1;
                            _3144 = frontier_phi_105_pred_2;
                            _3145 = frontier_phi_105_pred_3;
                            _3146 = frontier_phi_105_pred_4;
                            _3147 = frontier_phi_105_pred_5;
                            _2853 = _3146 + _2866;
                            _2854 = _3147 + _2867;
                            _2855 = _3148 + _2868;
                            _2850 = _3143 + _2863;
                            _2851 = _3144 + _2864;
                            _2852 = _3145 + _2865;
                            if (_2870 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2863 = _2850;
                                _2864 = _2851;
                                _2865 = _2852;
                                _2866 = _2853;
                                _2867 = _2854;
                                _2868 = _2855;
                                _2869 = _2870;
                                continue;
                            }
                        }
                        frontier_phi_99_pred = _2853;
                        frontier_phi_99_pred_1 = _2852;
                        frontier_phi_99_pred_2 = _2851;
                        frontier_phi_99_pred_3 = _2850;
                        frontier_phi_99_pred_4 = _2855;
                        frontier_phi_99_pred_5 = _2854;
                    }
                    _2446 = frontier_phi_99_pred;
                    _2444 = frontier_phi_99_pred_1;
                    _2442 = frontier_phi_99_pred_2;
                    _2440 = frontier_phi_99_pred_3;
                    _2450 = frontier_phi_99_pred_4;
                    _2448 = frontier_phi_99_pred_5;
                    uint _2636 = _2635 + 1u;
                    if (_2636 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2629 = _2440;
                        _2630 = _2442;
                        _2631 = _2444;
                        _2632 = _2446;
                        _2633 = _2448;
                        _2634 = _2450;
                        _2635 = _2636;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_81_82_ladder = _2450;
                frontier_phi_81_82_ladder_1 = _2446;
                frontier_phi_81_82_ladder_2 = _2444;
                frontier_phi_81_82_ladder_3 = _2442;
                frontier_phi_81_82_ladder_4 = _2440;
                frontier_phi_81_82_ladder_5 = _2448;
            }
            else
            {
                frontier_phi_81_82_ladder = _2305;
                frontier_phi_81_82_ladder_1 = _2301;
                frontier_phi_81_82_ladder_2 = _2299;
                frontier_phi_81_82_ladder_3 = _2297;
                frontier_phi_81_82_ladder_4 = _2295;
                frontier_phi_81_82_ladder_5 = _2303;
            }
            _2439 = frontier_phi_81_82_ladder_4;
            _2441 = frontier_phi_81_82_ladder_3;
            _2443 = frontier_phi_81_82_ladder_2;
            _2445 = frontier_phi_81_82_ladder_1;
            _2447 = frontier_phi_81_82_ladder_5;
            _2449 = frontier_phi_81_82_ladder;
        }
        float _2454 = isnan(1.0) ? _838 : (isnan(_838) ? 1.0 : min(_838, 1.0));
        _2201 = (_2454 * _2445) + _1931;
        _2203 = (_2454 * _2447) + _1932;
        _2205 = (_2454 * _2449) + _1933;
        _2207 = ((_2439 * 0.039999999105930328369140625) * _2454) + _2084;
        _2209 = ((_2441 * 0.039999999105930328369140625) * _2454) + _2085;
        _2211 = ((_2443 * 0.039999999105930328369140625) * _2454) + _2086;
    }
    else
    {
        _2201 = _1931;
        _2203 = _1932;
        _2205 = _1933;
        _2207 = _2084;
        _2209 = _2085;
        _2211 = _2086;
    }
    uint _2217 = _814 + uint(cbMatDynParam._m0[0u].w);
    float _4113 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _4124 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4135 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _2242 = (((isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_2201 + ((isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0))) * _838))) + ((_2207 + ((isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))) * _1644)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_2217].x * ((_682 * ((_638 - _564) - (_638 * _286))) + _564));
    float _2244 = ((cbInstanceData._m0[_2217].y * ((_682 * ((_639 - _565) - (_639 * _286))) + _565)) + ((_2209 + ((isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0))) * _1644)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (_2203 + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _838)));
    float _2246 = ((cbInstanceData._m0[_2217].z * ((_682 * ((_640 - _566) - (_640 * _286))) + _566)) + ((_2211 + ((isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))) * _1644)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * (_2205 + ((isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))) * _838)));
    uint _2250 = _812 + 6u;
    float _2258 = _772 / cbSceneParam._m0[86u].x;
    float _2259 = _773 / cbSceneParam._m0[86u].y;
    vec4 _2273 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2258, _2259, (log2((isnan(cbSceneParam._m0[77u].w) ? _759 : (isnan(_759) ? cbSceneParam._m0[77u].w : min(_759, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2275 = _2273.x;
    float _2276 = _2273.y;
    float _2277 = _2273.z;
    float _2278 = _2273.w;
    float _2358;
    float _2360;
    float _2362;
    float _2364;
    if (_759 > cbSceneParam._m0[78u].w)
    {
        float _2320 = isnan(_759) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _759 : min(cbSceneParam._m0[80u].w, _759));
        float _2321 = _2320 / _759;
        float _2332 = _2321 * _259;
        float _2333 = _260 * _2321;
        float _2334 = (-0.0) - _2333;
        float _2335 = _2321 * _261;
        float _2337 = (cbSceneParam._m0[77u].w * _2334) / _2320;
        float _2338 = _2337 + cbSceneParam._m0[79u].w;
        float _2339 = cbSceneParam._m0[79u].w - _2333;
        float _2345 = sqrt(((_2332 * _2332) + (_2333 * _2333)) + (_2335 * _2335));
        float _2348 = (1.0 - (cbSceneParam._m0[77u].w / _2320)) * _2345;
        float _2354 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2356 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2565;
        if (abs((_2334 - _2337) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2565 = ((((_2338 > 0.0) ? exp2(_2354 * _2338) : (2.0 - exp2(_2356 * _2338))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2348;
        }
        else
        {
            float _2500 = 1.0 / cbSceneParam._m0[80u].x;
            float _2501 = isnan(_2339) ? _2338 : (isnan(_2338) ? _2339 : max(_2338, _2339));
            float _2502 = isnan(_2339) ? _2338 : (isnan(_2338) ? _2339 : min(_2338, _2339));
            float _2511 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : min(_2501, 0.0));
            float _2512 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : min(_2502, 0.0));
            _2565 = ((abs(_2345 / _2334) * cbSceneParam._m0[80u].y) * ((((_2511 - _2512) * 2.0) - ((exp2(_2354 * (isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0)))) - exp2(_2354 * (isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0))))) * _2500)) - ((exp2(_2356 * _2511) - exp2(_2356 * _2512)) * _2500))) + (_2348 * cbSceneParam._m0[80u].z);
        }
        vec4 _2567 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2258, _2259, 1.0), 0.0);
        float _2576 = exp2((_2565 * (-1.44269502162933349609375)) * (1.0 - _2567.w));
        float _2577 = log2(_2576);
        float _2593 = log2(_2278);
        _2358 = (exp2(_2593 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2577 * cbSceneParam._m0[78u].x)) * _2567.x) / cbSceneParam._m0[78u].x)) + _2275;
        _2360 = (exp2(_2593 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2577 * cbSceneParam._m0[78u].y)) * _2567.y) / cbSceneParam._m0[78u].y)) + _2276;
        _2362 = (exp2(_2593 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2577 * cbSceneParam._m0[78u].z)) * _2567.z) / cbSceneParam._m0[78u].z)) + _2277;
        _2364 = _2576 * _2278;
    }
    else
    {
        _2358 = _2275;
        _2360 = _2276;
        _2362 = _2277;
        _2364 = _2278;
    }
    float _2376 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2377 = _2376 == 3.0;
    float _2378 = log2(_2364);
    float _2385 = exp2(_2378 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0)));
    float _2386 = exp2(_2378 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0)));
    float _2387 = exp2(_2378 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0)));
    float _2396 = (_2376 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2396 * (_2377 ? _2385 : (_2385 + (cbSceneParam._m0[72u].w * _2358)));
    SV_Target.y = _2396 * (_2377 ? _2386 : (_2386 + (cbSceneParam._m0[72u].w * _2360)));
    SV_Target.z = _2396 * (_2377 ? _2387 : (_2387 + (cbSceneParam._m0[72u].w * _2362)));
    SV_Target.w = cbInstanceData._m0[_2250].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2250].w;
}


