#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

float _293;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _120 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _121 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _126 = inversesqrt(dot(vec3(_119, _120, _121), vec3(_119, _120, _121)));
    float _127 = _126 * _119;
    float _128 = _126 * _120;
    float _129 = _126 * _121;
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _138 = _137 * TANGENT.x;
    float _139 = _137 * TANGENT.y;
    float _140 = _137 * TANGENT.z;
    float _185 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _222 = inversesqrt(dot(vec3(_127, _128, _129), vec3(_127, _128, _129)));
    float _229 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _239 = cbMtdParam._m0[23u].x + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _185));
    float _240 = cbMtdParam._m0[23u].y + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _185));
    float _241 = cbMtdParam._m0[23u].z + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _185));
    float _258 = (-0.0) - dot(vec3(_239, _240, _241), vec3(_222 * _127, _222 * _128, _222 * _129));
    float _259 = (-0.0) - dot(vec3(_239, _240, _241), vec3(_229 * _138, _229 * _139, _229 * _140));
    float _260 = (-0.0) - dot(vec3(_239, _240, _241), vec3((-0.0) - (NORMAL.x * _133), (-0.0) - (NORMAL.y * _133), (-0.0) - (NORMAL.z * _133)));
    float _264 = inversesqrt(dot(vec3(_258, _259, _260), vec3(_258, _259, _260)));
    float _265 = _264 * _260;
    float _267 = (cbMtdParam._m0[19u].w * _258) * _264;
    float _269 = (cbMtdParam._m0[20u].x * _259) * _264;
    float _272 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _273 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _291;
    float _294;
    float _296;
    if (_267 > 0.0)
    {
        float _277 = (1.0 - _272) / _267;
        _291 = _277;
        _294 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_277 * _265)) * 0.16666667163372039794921875;
        _296 = (fract((_277 * _269) + _273) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_267 < 0.0)
        {
            float _292 = ((-0.0) - _272) / _267;
            frontier_phi_3_2_ladder = _292;
            frontier_phi_3_2_ladder_1 = (fract(_292 * _265) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_292 * _269) + _273) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _293;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _291 = frontier_phi_3_2_ladder;
        _294 = frontier_phi_3_2_ladder_1;
        _296 = frontier_phi_3_2_ladder_2;
    }
    float _322;
    float _324;
    float _326;
    if (_269 > 0.0)
    {
        float _309 = (1.0 - _273) / _269;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_309 < _291)
        {
            frontier_phi_8_5_ladder = _309;
            frontier_phi_8_5_ladder_1 = (fract((_309 * _267) + _272) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_309 * _265) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _291;
            frontier_phi_8_5_ladder_1 = _294;
            frontier_phi_8_5_ladder_2 = _296;
        }
        _322 = frontier_phi_8_5_ladder;
        _324 = frontier_phi_8_5_ladder_1;
        _326 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_269 < 0.0)
        {
            float _323 = ((-0.0) - _273) / _269;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_323 < _291)
            {
                frontier_phi_8_6_ladder_9_ladder = _323;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_323 * _267) + _272) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_323 * _265) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _291;
                frontier_phi_8_6_ladder_9_ladder_1 = _294;
                frontier_phi_8_6_ladder_9_ladder_2 = _296;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _291;
            frontier_phi_8_6_ladder_1 = _294;
            frontier_phi_8_6_ladder_2 = _296;
        }
        _322 = frontier_phi_8_6_ladder;
        _324 = frontier_phi_8_6_ladder_1;
        _326 = frontier_phi_8_6_ladder_2;
    }
    float _330 = (_265 > 0.0) ? (cbMtdParam._m0[16u].w / _265) : 5000.0;
    float _343;
    float _344;
    if (_330 < _322)
    {
        _343 = ((_272 + cbMtdParam._m0[17u].x) + (_330 * _267)) * 0.16666667163372039794921875;
        _344 = (((_330 * _269) + _273) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _343 = _324;
        _344 = _326;
    }
    vec4 _347 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_343, _344));
    float _353 = _347.x * cbMtdParam._m0[13u].x;
    float _354 = _347.y * cbMtdParam._m0[13u].y;
    float _355 = _347.z * cbMtdParam._m0[13u].z;
    float _466 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _477 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _488 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    uint _373 = uint(roundEven(NORMAL.w)) * 13u;
    uint _375 = (_373 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _381 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _466 : (isnan(_466) ? 1.0 : min(_466, 1.0)))) * cbInstanceData._m0[_375].x;
    float _382 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _477 : (isnan(_477) ? 1.0 : min(_477, 1.0)))) * cbInstanceData._m0[_375].y;
    float _383 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _488 : (isnan(_488) ? 1.0 : min(_488, 1.0)))) * cbInstanceData._m0[_375].z;
    float _499 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _510 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _521 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    uint _387 = _373 + 6u;
    bool _405 = cbMtdParam._m0[1u].z != 0.0;
    float _406 = _405 ? cbInstanceData._m0[_387].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _406;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _405 ? cbInstanceData._m0[_387].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _499 : (isnan(_499) ? 1.0 : min(_499, 1.0));
    SV_Target_2.y = isnan(1.0) ? _510 : (isnan(_510) ? 1.0 : min(_510, 1.0));
    SV_Target_2.z = isnan(1.0) ? _521 : (isnan(_521) ? 1.0 : min(_521, 1.0));
    SV_Target_2.w = _405 ? cbInstanceData._m0[_387].w : (float(floatBitsToUint(cbInstanceData._m0[_373 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _406;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _406;
}


