#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _145 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _146 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _147 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _152 = inversesqrt(dot(vec3(_145, _146, _147), vec3(_145, _146, _147)));
    float _153 = _152 * _145;
    float _154 = _152 * _146;
    float _155 = _152 * _147;
    float _159 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _160 = _159 * NORMAL.x;
    float _161 = _159 * NORMAL.y;
    float _162 = _159 * NORMAL.z;
    float _166 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167 = _166 * TANGENT.x;
    float _168 = _166 * TANGENT.y;
    float _169 = _166 * TANGENT.z;
    float _214 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _224 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _214);
    float _225 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _214);
    float _226 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _214);
    vec4 _245 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _251 = _245.w;
    float _264 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _251) + cbMtdParam._m0[11u].x) * _245.x;
    float _266 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _251) + cbMtdParam._m0[11u].y) * _245.y;
    float _268 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _251) + cbMtdParam._m0[11u].z) * _245.z;
    float _294 = cbMtdParam._m0[22u].y + _224;
    float _295 = cbMtdParam._m0[22u].z + _225;
    float _296 = cbMtdParam._m0[22u].w + _226;
    float _310 = (-0.0) - dot(vec3(_294, _295, _296), vec3(_153, _154, _155));
    float _311 = (-0.0) - dot(vec3(_294, _295, _296), vec3(_167, _168, _169));
    float _312 = (-0.0) - dot(vec3(_294, _295, _296), vec3((-0.0) - _160, (-0.0) - _161, (-0.0) - _162));
    float _316 = inversesqrt(dot(vec3(_310, _311, _312), vec3(_310, _311, _312)));
    float _317 = _316 * _312;
    float _319 = (cbMtdParam._m0[19u].x * _310) * _316;
    float _321 = (cbMtdParam._m0[18u].w * _311) * _316;
    float _322 = fract(TEXCOORD.x);
    float _323 = fract(TEXCOORD.y);
    float _329;
    if (_319 > 0.0)
    {
        _329 = (1.0 - _322) / _319;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_319 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _322) / _319;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _329 = frontier_phi_3_2_ladder;
    }
    float _337;
    if (_321 > 0.0)
    {
        _337 = (1.0 - _323) / _321;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_321 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _323) / _321;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _337 = frontier_phi_7_6_ladder;
    }
    bool _339 = _317 > 0.0;
    float _341 = _339 ? (cbMtdParam._m0[15u].x / _317) : 5000.0;
    float _342 = isnan(_337) ? _329 : (isnan(_329) ? _337 : min(_329, _337));
    float _343 = isnan(_341) ? _342 : (isnan(_342) ? _341 : min(_342, _341));
    float _347 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _348 = _322 + (-0.5);
    float _351 = _323 + (-0.5);
    float _354 = ((_343 * _317) + _347) / _347;
    vec4 _379 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_348 + (_343 * _319)) / _354) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_351 + (_343 * _321)) / _354) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _381 = _379.x;
    float _382 = _379.y;
    float _383 = _379.z;
    float _395 = (_381 - (_381 * _251)) * cbMtdParam._m0[9u].x;
    float _396 = (_382 - (_382 * _251)) * cbMtdParam._m0[9u].y;
    float _397 = cbMtdParam._m0[9u].z * (_383 - (_383 * _251));
    float _419 = (cbMtdParam._m0[21u].x * _310) * _316;
    float _421 = (cbMtdParam._m0[20u].w * _311) * _316;
    bool _422 = _419 > 0.0;
    float _427;
    if (_422)
    {
        _427 = (1.0 - _322) / _419;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_419 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _322) / _419;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _427 = frontier_phi_11_10_ladder;
    }
    bool _429 = _421 > 0.0;
    float _434;
    if (_429)
    {
        _434 = (1.0 - _323) / _421;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_421 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _323) / _421;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _434 = frontier_phi_15_14_ladder;
    }
    float _437 = _339 ? (cbMtdParam._m0[16u].z / _317) : 5000.0;
    float _438 = isnan(_434) ? _427 : (isnan(_427) ? _434 : min(_427, _434));
    float _439 = isnan(_437) ? _438 : (isnan(_438) ? _437 : min(_438, _437));
    float _443 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _447 = ((_439 * _317) + _443) / _443;
    float _452 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _454 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _470 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_348 + (_439 * _419)) / _447) + 0.5) + _452) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_351 + (_439 * _421)) / _447) + 0.5) + _454) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _475 = _470.x * cbMtdParam._m0[10u].x;
    float _476 = _470.y * cbMtdParam._m0[10u].y;
    float _477 = _470.z * cbMtdParam._m0[10u].z;
    float _485;
    if (_422)
    {
        _485 = (1.0 - _322) / _419;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_419 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _322) / _419;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _485 = frontier_phi_19_18_ladder;
    }
    float _491;
    if (_429)
    {
        _491 = (1.0 - _323) / _421;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_421 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _323) / _421;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _491 = frontier_phi_23_22_ladder;
    }
    float _493 = isnan(_491) ? _485 : (isnan(_485) ? _491 : min(_485, _491));
    float _494 = isnan(_437) ? _493 : (isnan(_493) ? _437 : min(_493, _437));
    float _501 = ((_494 * _317) + _443) / _443;
    vec4 _515 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_348 + (_494 * _419)) / _501) + 0.5) + _452) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_351 + (_494 * _421)) / _501) + 0.5) + _454) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _517 = _515.w;
    float _519 = _517 - (_517 * _251);
    float _530 = 0.5 - (_251 * 0.5);
    float _540 = (((_395 - _264) + (_519 * ((_475 - _395) - (_475 * _251)))) * _530) + _264;
    float _541 = (((_396 - _266) + (_519 * ((_476 - _396) - (_476 * _251)))) * _530) + _266;
    float _542 = (((_397 - _268) + (_519 * ((_477 - _397) - (_477 * _251)))) * _530) + _268;
    vec4 _554 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _562 = (_554.x * 2.0) + (-1.0);
    float _564 = (_554.y * 2.0) + (-1.0);
    float _565 = dot(vec2(_562, _564), vec2(_562, _564));
    float _838 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _570 = sqrt(1.0 - (isnan(1.0) ? _838 : (isnan(_838) ? 1.0 : min(_838, 1.0))));
    float _571 = _554.z * _251;
    float _574 = fma(_570, _160, fma(_564, _167, _562 * _153));
    float _577 = fma(_570, _161, fma(_564, _168, _562 * _154));
    float _580 = fma(_570, _162, fma(_564, _169, _562 * _155));
    float _584 = inversesqrt(dot(vec3(_574, _577, _580), vec3(_574, _577, _580)));
    float _849 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _860 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _586 = isnan(1.0) ? _860 : (isnan(_860) ? 1.0 : min(_860, 1.0));
    float _871 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _587 = isnan(1.0) ? _871 : (isnan(_871) ? 1.0 : min(_871, 1.0));
    float _882 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _588 = isnan(1.0) ? _882 : (isnan(_882) ? 1.0 : min(_882, 1.0));
    uint _590 = uint(roundEven(NORMAL.w));
    vec4 _595 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _597 = _595.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _659 = sqrt(((_224 * _224) + (_225 * _225)) + (_226 * _226));
        float _666 = (cbMatDynParam._m0[5u].x * _659) + cbMatDynParam._m0[5u].y;
        float _893 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _667 = isnan(1.0) ? _893 : (isnan(_893) ? 1.0 : min(_893, 1.0));
        float _671 = (cbMatDynParam._m0[5u].z * _659) + cbMatDynParam._m0[5u].w;
        float _904 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _904 : (isnan(_904) ? 1.0 : min(_904, 1.0))) - _667)) + _667) < ((_597 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _699;
    uint _618;
    vec4 _623;
    float _630;
    float _631;
    float _632;
    float _636;
    vec4 _639;
    float _641;
    float _642;
    bool _653;
    for (;;)
    {
        _618 = _590 * 13u;
        _623 = cbInstanceData._m0[(_618 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _627 = (cbMtdParam._m0[0u].x * _586) * _623.x;
        float _628 = (cbMtdParam._m0[0u].y * _587) * _623.y;
        float _629 = (cbMtdParam._m0[0u].z * _588) * _623.z;
        float _915 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
        _630 = isnan(1.0) ? _915 : (isnan(_915) ? 1.0 : min(_915, 1.0));
        float _926 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
        _631 = isnan(1.0) ? _926 : (isnan(_926) ? 1.0 : min(_926, 1.0));
        float _937 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
        _632 = isnan(1.0) ? _937 : (isnan(_937) ? 1.0 : min(_937, 1.0));
        _636 = cbInstanceData._m0[_618 + 6u].w;
        float _637 = _597 + (-0.5);
        _639 = cbMtdParam._m0[1u];
        _641 = _639.y * _637;
        _642 = _637 * 0.999000012874603271484375;
        _653 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_653)
        {
            if ((cbInstanceData._m0[_618 + 7u].x + _642) < 0.5)
            {
                _699 = true;
                break;
            }
        }
        if ((_623.w < 1.0) && ((_623.w + _642) < 0.5))
        {
            _699 = true;
            break;
        }
        if ((_641 + 1.0) < _639.x)
        {
            _699 = true;
            break;
        }
        _699 = false;
        break;
    }
    if (_699)
    {
        discard_state = true;
    }
    bool _725 = cbMtdParam._m0[1u].z != 0.0;
    float _726 = _725 ? _636 : 0.0;
    SV_Target.x = ((_574 * 0.5) * _584) + 0.500488758087158203125;
    SV_Target.y = ((_577 * 0.5) * _584) + 0.500488758087158203125;
    SV_Target.z = ((_580 * 0.5) * _584) + 0.500488758087158203125;
    SV_Target.w = _726;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _849 : (isnan(_849) ? 1.0 : min(_849, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _725 ? _636 : TEXCOORD.z;
    SV_Target_2.x = _630;
    SV_Target_2.y = _631;
    SV_Target_2.z = _632;
    SV_Target_2.w = _725 ? _636 : (float(floatBitsToUint(cbInstanceData._m0[_618 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _726;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _726;
    discard_exit();
}


