#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _359;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _143 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _144 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _145 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _150 = inversesqrt(dot(vec3(_143, _144, _145), vec3(_143, _144, _145)));
    float _151 = _150 * _143;
    float _152 = _150 * _144;
    float _153 = _150 * _145;
    float _157 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _158 = _157 * NORMAL.x;
    float _159 = _157 * NORMAL.y;
    float _160 = _157 * NORMAL.z;
    float _164 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _165 = _164 * TANGENT.x;
    float _166 = _164 * TANGENT.y;
    float _167 = _164 * TANGENT.z;
    float _212 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _222 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _212);
    float _223 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _212);
    float _224 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _212);
    vec4 _243 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _249 = _243.w;
    float _262 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _249) + cbMtdParam._m0[11u].x) * _243.x;
    float _264 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _249) + cbMtdParam._m0[11u].y) * _243.y;
    float _266 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _249) + cbMtdParam._m0[11u].z) * _243.z;
    float _291 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _298 = inversesqrt(dot(vec3(_165, _166, _167), vec3(_165, _166, _167)));
    float _308 = cbMtdParam._m0[23u].x + _222;
    float _309 = cbMtdParam._m0[23u].y + _223;
    float _310 = cbMtdParam._m0[23u].z + _224;
    float _324 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_291 * _151, _291 * _152, _291 * _153));
    float _325 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_298 * _165, _298 * _166, _298 * _167));
    float _326 = (-0.0) - dot(vec3(_308, _309, _310), vec3((-0.0) - _158, (-0.0) - _159, (-0.0) - _160));
    float _330 = inversesqrt(dot(vec3(_324, _325, _326), vec3(_324, _325, _326)));
    float _331 = _330 * _326;
    float _333 = (cbMtdParam._m0[19u].w * _324) * _330;
    float _335 = (cbMtdParam._m0[20u].x * _325) * _330;
    float _338 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _339 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _357;
    float _360;
    float _362;
    if (_333 > 0.0)
    {
        float _343 = (1.0 - _338) / _333;
        _357 = _343;
        _360 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_343 * _331)) * 0.16666667163372039794921875;
        _362 = (fract((_343 * _335) + _339) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_333 < 0.0)
        {
            float _358 = ((-0.0) - _338) / _333;
            frontier_phi_3_2_ladder = _358;
            frontier_phi_3_2_ladder_1 = (fract(_358 * _331) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_358 * _335) + _339) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _359;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _357 = frontier_phi_3_2_ladder;
        _360 = frontier_phi_3_2_ladder_1;
        _362 = frontier_phi_3_2_ladder_2;
    }
    float _388;
    float _390;
    float _392;
    if (_335 > 0.0)
    {
        float _375 = (1.0 - _339) / _335;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_375 < _357)
        {
            frontier_phi_8_5_ladder = _375;
            frontier_phi_8_5_ladder_1 = (fract((_375 * _333) + _338) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_375 * _331) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _357;
            frontier_phi_8_5_ladder_1 = _360;
            frontier_phi_8_5_ladder_2 = _362;
        }
        _388 = frontier_phi_8_5_ladder;
        _390 = frontier_phi_8_5_ladder_1;
        _392 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_335 < 0.0)
        {
            float _389 = ((-0.0) - _339) / _335;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_389 < _357)
            {
                frontier_phi_8_6_ladder_9_ladder = _389;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_389 * _333) + _338) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_389 * _331) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _357;
                frontier_phi_8_6_ladder_9_ladder_1 = _360;
                frontier_phi_8_6_ladder_9_ladder_2 = _362;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _357;
            frontier_phi_8_6_ladder_1 = _360;
            frontier_phi_8_6_ladder_2 = _362;
        }
        _388 = frontier_phi_8_6_ladder;
        _390 = frontier_phi_8_6_ladder_1;
        _392 = frontier_phi_8_6_ladder_2;
    }
    float _396 = (_331 > 0.0) ? (cbMtdParam._m0[16u].w / _331) : 5000.0;
    float _409;
    float _410;
    if (_396 < _388)
    {
        _409 = ((_338 + cbMtdParam._m0[17u].x) + (_396 * _333)) * 0.16666667163372039794921875;
        _410 = (((_396 * _335) + _339) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _409 = _390;
        _410 = _392;
    }
    vec4 _412 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_409, _410));
    float _417 = _412.x * cbMtdParam._m0[13u].x;
    float _418 = _412.y * cbMtdParam._m0[13u].y;
    float _419 = _412.z * cbMtdParam._m0[13u].z;
    float _424 = 0.5 - (_249 * 0.5);
    float _434 = (((_417 - _262) - (_417 * _249)) * _424) + _262;
    float _435 = (((_418 - _264) - (_418 * _249)) * _424) + _264;
    float _436 = (((_419 - _266) - (_419 * _249)) * _424) + _266;
    vec4 _448 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _456 = (_448.x * 2.0) + (-1.0);
    float _458 = (_448.y * 2.0) + (-1.0);
    float _459 = dot(vec2(_456, _458), vec2(_456, _458));
    float _699 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _464 = sqrt(1.0 - (isnan(1.0) ? _699 : (isnan(_699) ? 1.0 : min(_699, 1.0))));
    float _465 = _448.z * _249;
    float _468 = fma(_464, _158, fma(_458, _165, _456 * _151));
    float _471 = fma(_464, _159, fma(_458, _166, _456 * _152));
    float _474 = fma(_464, _160, fma(_458, _167, _456 * _153));
    float _478 = inversesqrt(dot(vec3(_468, _471, _474), vec3(_468, _471, _474)));
    float _710 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _721 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _480 = isnan(1.0) ? _721 : (isnan(_721) ? 1.0 : min(_721, 1.0));
    float _732 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _481 = isnan(1.0) ? _732 : (isnan(_732) ? 1.0 : min(_732, 1.0));
    float _743 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _482 = isnan(1.0) ? _743 : (isnan(_743) ? 1.0 : min(_743, 1.0));
    uint _484 = uint(roundEven(NORMAL.w));
    vec4 _489 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _491 = _489.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _558 = sqrt(((_222 * _222) + (_223 * _223)) + (_224 * _224));
        float _565 = (cbMatDynParam._m0[5u].x * _558) + cbMatDynParam._m0[5u].y;
        float _754 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
        float _566 = isnan(1.0) ? _754 : (isnan(_754) ? 1.0 : min(_754, 1.0));
        float _570 = (cbMatDynParam._m0[5u].z * _558) + cbMatDynParam._m0[5u].w;
        float _765 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _765 : (isnan(_765) ? 1.0 : min(_765, 1.0))) - _566)) + _566) < ((_491 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _598;
    uint _517;
    vec4 _521;
    float _528;
    float _529;
    float _530;
    float _534;
    vec4 _538;
    float _540;
    float _541;
    bool _552;
    for (;;)
    {
        _517 = _484 * 13u;
        _521 = cbInstanceData._m0[(_517 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _525 = (cbMtdParam._m0[0u].x * _480) * _521.x;
        float _526 = (cbMtdParam._m0[0u].y * _481) * _521.y;
        float _527 = (cbMtdParam._m0[0u].z * _482) * _521.z;
        float _776 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
        _528 = isnan(1.0) ? _776 : (isnan(_776) ? 1.0 : min(_776, 1.0));
        float _787 = isnan(0.0) ? _526 : (isnan(_526) ? 0.0 : max(_526, 0.0));
        _529 = isnan(1.0) ? _787 : (isnan(_787) ? 1.0 : min(_787, 1.0));
        float _798 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
        _530 = isnan(1.0) ? _798 : (isnan(_798) ? 1.0 : min(_798, 1.0));
        _534 = cbInstanceData._m0[_517 + 6u].w;
        float _535 = _491 + (-0.5);
        _538 = cbMtdParam._m0[1u];
        _540 = _538.y * _535;
        _541 = _535 * 0.999000012874603271484375;
        _552 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_552)
        {
            if ((cbInstanceData._m0[_517 + 7u].x + _541) < 0.5)
            {
                _598 = true;
                break;
            }
        }
        if ((_521.w < 1.0) && ((_521.w + _541) < 0.5))
        {
            _598 = true;
            break;
        }
        if ((_540 + 1.0) < _538.x)
        {
            _598 = true;
            break;
        }
        _598 = false;
        break;
    }
    if (_598)
    {
        discard_state = true;
    }
    bool _624 = cbMtdParam._m0[1u].z != 0.0;
    float _625 = _624 ? _534 : 0.0;
    SV_Target.x = ((_468 * 0.5) * _478) + 0.500488758087158203125;
    SV_Target.y = ((_471 * 0.5) * _478) + 0.500488758087158203125;
    SV_Target.z = ((_474 * 0.5) * _478) + 0.500488758087158203125;
    SV_Target.w = _625;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _624 ? _534 : TEXCOORD.z;
    SV_Target_2.x = _528;
    SV_Target_2.y = _529;
    SV_Target_2.z = _530;
    SV_Target_2.w = _624 ? _534 : (float(floatBitsToUint(cbInstanceData._m0[_517 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _625;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _625;
    discard_exit();
}


