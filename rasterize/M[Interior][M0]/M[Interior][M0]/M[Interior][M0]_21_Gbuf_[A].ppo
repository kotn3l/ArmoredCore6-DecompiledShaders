#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _147 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _148 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _149 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _154 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _155 = _154 * _147;
    float _156 = _154 * _148;
    float _157 = _154 * _149;
    float _161 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = _161 * NORMAL.x;
    float _163 = _161 * NORMAL.y;
    float _164 = _161 * NORMAL.z;
    float _168 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _169 = _168 * TANGENT.x;
    float _170 = _168 * TANGENT.y;
    float _171 = _168 * TANGENT.z;
    float _216 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _226 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _216);
    float _227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _216);
    float _228 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _216);
    vec4 _247 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _253 = _247.w;
    float _266 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _253) + cbMtdParam._m0[11u].x) * _247.x;
    float _268 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _253) + cbMtdParam._m0[11u].y) * _247.y;
    float _270 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _253) + cbMtdParam._m0[11u].z) * _247.z;
    vec4 _288 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _292 = _288.z;
    float _315 = (_288.x * 2.0) + (-1.0);
    float _317 = (_288.y * 2.0) + (-1.0);
    float _320 = _315 - (_315 * _253);
    float _321 = _317 - (_317 * _253);
    float _330 = cbMtdParam._m0[22u].y + _226;
    float _331 = cbMtdParam._m0[22u].z + _227;
    float _332 = cbMtdParam._m0[22u].w + _228;
    float _346 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_155, _156, _157));
    float _347 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_169, _170, _171));
    float _348 = (-0.0) - dot(vec3(_330, _331, _332), vec3((-0.0) - _162, (-0.0) - _163, (-0.0) - _164));
    float _352 = inversesqrt(dot(vec3(_346, _347, _348), vec3(_346, _347, _348)));
    float _355 = _352 * _348;
    float _356 = (_352 * _346) + (_320 * cbMtdParam._m0[20u].y);
    float _357 = (_352 * _347) + (_321 * cbMtdParam._m0[20u].z);
    float _358 = _356 * cbMtdParam._m0[19u].x;
    float _359 = _357 * cbMtdParam._m0[18u].w;
    float _360 = fract(TEXCOORD.x);
    float _361 = fract(TEXCOORD.y);
    float _367;
    if (_358 > 0.0)
    {
        _367 = (1.0 - _360) / _358;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_358 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _360) / _358;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _367 = frontier_phi_3_2_ladder;
    }
    float _375;
    if (_359 > 0.0)
    {
        _375 = (1.0 - _361) / _359;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_359 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _361) / _359;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _375 = frontier_phi_7_6_ladder;
    }
    bool _377 = _355 > 0.0;
    float _379 = _377 ? (cbMtdParam._m0[15u].x / _355) : 5000.0;
    float _380 = isnan(_375) ? _367 : (isnan(_367) ? _375 : min(_367, _375));
    float _381 = isnan(_379) ? _380 : (isnan(_380) ? _379 : min(_380, _379));
    float _385 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _386 = _360 + (-0.5);
    float _389 = _361 + (-0.5);
    float _392 = ((_381 * _355) + _385) / _385;
    vec4 _417 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_386 + (_381 * _358)) / _392) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_389 + (_381 * _359)) / _392) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _419 = _417.x;
    float _420 = _417.y;
    float _421 = _417.z;
    float _433 = (_419 - (_419 * _253)) * cbMtdParam._m0[9u].x;
    float _434 = (_420 - (_420 * _253)) * cbMtdParam._m0[9u].y;
    float _435 = cbMtdParam._m0[9u].z * (_421 - (_421 * _253));
    float _453 = _356 * cbMtdParam._m0[21u].x;
    float _454 = _357 * cbMtdParam._m0[20u].w;
    bool _455 = _453 > 0.0;
    float _460;
    if (_455)
    {
        _460 = (1.0 - _360) / _453;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _360) / _453;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _460 = frontier_phi_11_10_ladder;
    }
    bool _462 = _454 > 0.0;
    float _467;
    if (_462)
    {
        _467 = (1.0 - _361) / _454;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _361) / _454;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _467 = frontier_phi_15_14_ladder;
    }
    float _470 = _377 ? (cbMtdParam._m0[16u].z / _355) : 5000.0;
    float _471 = isnan(_467) ? _460 : (isnan(_460) ? _467 : min(_460, _467));
    float _472 = isnan(_470) ? _471 : (isnan(_471) ? _470 : min(_471, _470));
    float _476 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _480 = ((_472 * _355) + _476) / _476;
    float _485 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _487 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _503 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_386 + (_472 * _453)) / _480) + 0.5) + _485) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_389 + (_472 * _454)) / _480) + 0.5) + _487) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _508 = _503.x * cbMtdParam._m0[10u].x;
    float _509 = _503.y * cbMtdParam._m0[10u].y;
    float _510 = _503.z * cbMtdParam._m0[10u].z;
    float _518;
    if (_455)
    {
        _518 = (1.0 - _360) / _453;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _360) / _453;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _518 = frontier_phi_19_18_ladder;
    }
    float _524;
    if (_462)
    {
        _524 = (1.0 - _361) / _454;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_454 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _361) / _454;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _524 = frontier_phi_23_22_ladder;
    }
    float _526 = isnan(_524) ? _518 : (isnan(_518) ? _524 : min(_518, _524));
    float _527 = isnan(_470) ? _526 : (isnan(_526) ? _470 : min(_526, _470));
    float _534 = ((_527 * _355) + _476) / _476;
    vec4 _548 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_386 + (_527 * _453)) / _534) + 0.5) + _485) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_389 + (_527 * _454)) / _534) + 0.5) + _487) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _550 = _548.w;
    float _552 = _550 - (_550 * _253);
    float _562 = (_552 * ((_508 - _433) - (_508 * _253))) + _433;
    float _563 = (_552 * ((_509 - _434) - (_509 * _253))) + _434;
    float _564 = (_552 * ((_510 - _435) - (_510 * _253))) + _435;
    vec4 _576 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _580 = _576.z;
    float _583 = (_576.x * 2.0) + (-1.0);
    float _584 = (_576.y * 2.0) + (-1.0);
    float _585 = dot(vec2(_583, _584), vec2(_583, _584));
    float _879 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _590 = sqrt(1.0 - (isnan(1.0) ? _879 : (isnan(_879) ? 1.0 : min(_879, 1.0))));
    float _591 = _580 * _253;
    float _598 = (cbMtdParam._m0[15u].w * ((_292 - _591) + ((_580 - _292) * _253))) + _591;
    float _602 = (cbMtdParam._m0[16u].x * _320) + _583;
    float _603 = (cbMtdParam._m0[16u].x * _321) + _584;
    float _606 = fma(_590, _162, fma(_603, _169, _602 * _155));
    float _609 = fma(_590, _163, fma(_603, _170, _602 * _156));
    float _612 = fma(_590, _164, fma(_603, _171, _602 * _157));
    float _616 = inversesqrt(dot(vec3(_606, _609, _612), vec3(_606, _609, _612)));
    float _890 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _901 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _618 = isnan(1.0) ? _901 : (isnan(_901) ? 1.0 : min(_901, 1.0));
    float _912 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _619 = isnan(1.0) ? _912 : (isnan(_912) ? 1.0 : min(_912, 1.0));
    float _923 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _620 = isnan(1.0) ? _923 : (isnan(_923) ? 1.0 : min(_923, 1.0));
    uint _622 = uint(roundEven(NORMAL.w));
    vec4 _627 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _629 = _627.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _694 = sqrt(((_226 * _226) + (_227 * _227)) + (_228 * _228));
        float _700 = (cbMatDynParam._m0[5u].x * _694) + cbMatDynParam._m0[5u].y;
        float _934 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
        float _701 = isnan(1.0) ? _934 : (isnan(_934) ? 1.0 : min(_934, 1.0));
        float _705 = (cbMatDynParam._m0[5u].z * _694) + cbMatDynParam._m0[5u].w;
        float _945 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _945 : (isnan(_945) ? 1.0 : min(_945, 1.0))) - _701)) + _701) < ((_629 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _733;
    uint _650;
    vec4 _655;
    float _662;
    float _663;
    float _664;
    float _665;
    float _666;
    float _667;
    float _671;
    vec4 _674;
    float _676;
    float _677;
    bool _688;
    for (;;)
    {
        _650 = _622 * 13u;
        _655 = cbInstanceData._m0[(_650 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _659 = (cbMtdParam._m0[0u].x * _618) * _655.x;
        float _660 = (cbMtdParam._m0[0u].y * _619) * _655.y;
        float _661 = (cbMtdParam._m0[0u].z * _620) * _655.z;
        float _956 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
        _662 = isnan(1.0) ? _956 : (isnan(_956) ? 1.0 : min(_956, 1.0));
        float _967 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
        _663 = isnan(1.0) ? _967 : (isnan(_967) ? 1.0 : min(_967, 1.0));
        float _978 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
        _664 = isnan(1.0) ? _978 : (isnan(_978) ? 1.0 : min(_978, 1.0));
        _665 = _655.x * _562;
        _666 = _655.y * _563;
        _667 = _655.z * _564;
        _671 = cbInstanceData._m0[_650 + 6u].w;
        float _672 = _629 + (-0.5);
        _674 = cbMtdParam._m0[1u];
        _676 = _674.y * _672;
        _677 = _672 * 0.999000012874603271484375;
        _688 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_688)
        {
            if ((cbInstanceData._m0[_650 + 7u].x + _677) < 0.5)
            {
                _733 = true;
                break;
            }
        }
        if ((_655.w < 1.0) && ((_655.w + _677) < 0.5))
        {
            _733 = true;
            break;
        }
        if ((_676 + 1.0) < _674.x)
        {
            _733 = true;
            break;
        }
        _733 = false;
        break;
    }
    if (_733)
    {
        discard_state = true;
    }
    bool _766 = cbMtdParam._m0[1u].z != 0.0;
    float _767 = _766 ? _671 : 0.0;
    SV_Target.x = ((_606 * 0.5) * _616) + 0.500488758087158203125;
    SV_Target.y = ((_609 * 0.5) * _616) + 0.500488758087158203125;
    SV_Target.z = ((_612 * 0.5) * _616) + 0.500488758087158203125;
    SV_Target.w = _767;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _890 : (isnan(_890) ? 1.0 : min(_890, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _766 ? _671 : TEXCOORD.z;
    SV_Target_2.x = _662;
    SV_Target_2.y = _663;
    SV_Target_2.z = _664;
    SV_Target_2.w = _766 ? _671 : (float(floatBitsToUint(cbInstanceData._m0[_650 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _767;
    SV_Target_4.x = _665 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _666 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _667 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _767;
    discard_exit();
}


