#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _134 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _135 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _136 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_134, _135, _136), vec3(_134, _135, _136)));
    float _142 = _141 * _134;
    float _143 = _141 * _135;
    float _144 = _141 * _136;
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = _148 * NORMAL.x;
    float _150 = _148 * NORMAL.y;
    float _151 = _148 * NORMAL.z;
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _156 = _155 * TANGENT.x;
    float _157 = _155 * TANGENT.y;
    float _158 = _155 * TANGENT.z;
    float _203 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _234 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _240 = _234.w;
    float _253 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _240) + cbMtdParam._m0[11u].x) * _234.x;
    float _255 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _240) + cbMtdParam._m0[11u].y) * _234.y;
    float _257 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _240) + cbMtdParam._m0[11u].z) * _234.z;
    vec4 _275 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _279 = _275.z;
    float _302 = (_275.x * 2.0) + (-1.0);
    float _304 = (_275.y * 2.0) + (-1.0);
    float _307 = _302 - (_302 * _240);
    float _308 = _304 - (_304 * _240);
    float _317 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _203));
    float _318 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _203));
    float _319 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _203));
    float _333 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_142, _143, _144));
    float _334 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_156, _157, _158));
    float _335 = (-0.0) - dot(vec3(_317, _318, _319), vec3((-0.0) - _149, (-0.0) - _150, (-0.0) - _151));
    float _339 = inversesqrt(dot(vec3(_333, _334, _335), vec3(_333, _334, _335)));
    float _342 = _339 * _335;
    float _343 = (_339 * _333) + (_307 * cbMtdParam._m0[20u].y);
    float _344 = (_339 * _334) + (_308 * cbMtdParam._m0[20u].z);
    float _345 = _343 * cbMtdParam._m0[19u].x;
    float _346 = _344 * cbMtdParam._m0[18u].w;
    float _347 = fract(TEXCOORD.x);
    float _348 = fract(TEXCOORD.y);
    float _354;
    if (_345 > 0.0)
    {
        _354 = (1.0 - _347) / _345;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_345 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _347) / _345;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _354 = frontier_phi_3_2_ladder;
    }
    float _362;
    if (_346 > 0.0)
    {
        _362 = (1.0 - _348) / _346;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_346 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _348) / _346;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _362 = frontier_phi_7_6_ladder;
    }
    bool _364 = _342 > 0.0;
    float _366 = _364 ? (cbMtdParam._m0[15u].x / _342) : 5000.0;
    float _367 = isnan(_362) ? _354 : (isnan(_354) ? _362 : min(_354, _362));
    float _368 = isnan(_366) ? _367 : (isnan(_367) ? _366 : min(_367, _366));
    float _372 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _373 = _347 + (-0.5);
    float _376 = _348 + (-0.5);
    float _379 = ((_368 * _342) + _372) / _372;
    vec4 _404 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_373 + (_368 * _345)) / _379) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_376 + (_368 * _346)) / _379) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _406 = _404.x;
    float _407 = _404.y;
    float _408 = _404.z;
    float _420 = (_406 - (_406 * _240)) * cbMtdParam._m0[9u].x;
    float _421 = (_407 - (_407 * _240)) * cbMtdParam._m0[9u].y;
    float _422 = cbMtdParam._m0[9u].z * (_408 - (_408 * _240));
    float _440 = _343 * cbMtdParam._m0[21u].x;
    float _441 = _344 * cbMtdParam._m0[20u].w;
    bool _442 = _440 > 0.0;
    float _447;
    if (_442)
    {
        _447 = (1.0 - _347) / _440;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_440 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _347) / _440;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _447 = frontier_phi_11_10_ladder;
    }
    bool _449 = _441 > 0.0;
    float _454;
    if (_449)
    {
        _454 = (1.0 - _348) / _441;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _348) / _441;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _454 = frontier_phi_15_14_ladder;
    }
    float _457 = _364 ? (cbMtdParam._m0[16u].z / _342) : 5000.0;
    float _458 = isnan(_454) ? _447 : (isnan(_447) ? _454 : min(_447, _454));
    float _459 = isnan(_457) ? _458 : (isnan(_458) ? _457 : min(_458, _457));
    float _463 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _467 = ((_459 * _342) + _463) / _463;
    float _472 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _474 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _490 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_373 + (_459 * _440)) / _467) + 0.5) + _472) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_376 + (_459 * _441)) / _467) + 0.5) + _474) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _495 = _490.x * cbMtdParam._m0[10u].x;
    float _496 = _490.y * cbMtdParam._m0[10u].y;
    float _497 = _490.z * cbMtdParam._m0[10u].z;
    float _505;
    if (_442)
    {
        _505 = (1.0 - _347) / _440;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_440 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _347) / _440;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _505 = frontier_phi_19_18_ladder;
    }
    float _511;
    if (_449)
    {
        _511 = (1.0 - _348) / _441;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _348) / _441;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _511 = frontier_phi_23_22_ladder;
    }
    float _513 = isnan(_511) ? _505 : (isnan(_505) ? _511 : min(_505, _511));
    float _514 = isnan(_457) ? _513 : (isnan(_513) ? _457 : min(_513, _457));
    float _521 = ((_514 * _342) + _463) / _463;
    vec4 _535 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_373 + (_514 * _440)) / _521) + 0.5) + _472) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_376 + (_514 * _441)) / _521) + 0.5) + _474) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _537 = _535.w;
    float _539 = _537 - (_537 * _240);
    float _550 = 0.5 - (_240 * 0.5);
    float _560 = (((_420 - _253) + (_539 * ((_495 - _420) - (_495 * _240)))) * _550) + _253;
    float _561 = (((_421 - _255) + (_539 * ((_496 - _421) - (_496 * _240)))) * _550) + _255;
    float _562 = (((_422 - _257) + (_539 * ((_497 - _422) - (_497 * _240)))) * _550) + _257;
    vec4 _574 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _578 = _574.z;
    float _581 = (_574.x * 2.0) + (-1.0);
    float _582 = (_574.y * 2.0) + (-1.0);
    float _583 = dot(vec2(_581, _582), vec2(_581, _582));
    float _768 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _588 = sqrt(1.0 - (isnan(1.0) ? _768 : (isnan(_768) ? 1.0 : min(_768, 1.0))));
    float _589 = _578 * _240;
    float _596 = (cbMtdParam._m0[15u].w * ((_279 - _589) + ((_578 - _279) * _240))) + _589;
    float _600 = (cbMtdParam._m0[16u].x * _307) + _581;
    float _601 = (cbMtdParam._m0[16u].x * _308) + _582;
    float _604 = fma(_588, _149, fma(_601, _156, _600 * _142));
    float _607 = fma(_588, _150, fma(_601, _157, _600 * _143));
    float _610 = fma(_588, _151, fma(_601, _158, _600 * _144));
    float _614 = inversesqrt(dot(vec3(_604, _607, _610), vec3(_604, _607, _610)));
    float _779 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _790 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _801 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _812 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    uint _633 = uint(roundEven(NORMAL.w)) * 13u;
    uint _636 = (_633 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _642 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _790 : (isnan(_790) ? 1.0 : min(_790, 1.0)))) * cbInstanceData._m0[_636].x;
    float _643 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _801 : (isnan(_801) ? 1.0 : min(_801, 1.0)))) * cbInstanceData._m0[_636].y;
    float _644 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0)))) * cbInstanceData._m0[_636].z;
    float _823 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _834 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _845 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    uint _648 = _633 + 6u;
    bool _675 = cbMtdParam._m0[1u].z != 0.0;
    float _676 = _675 ? cbInstanceData._m0[_648].w : 0.0;
    SV_Target.x = ((_604 * 0.5) * _614) + 0.500488758087158203125;
    SV_Target.y = ((_607 * 0.5) * _614) + 0.500488758087158203125;
    SV_Target.z = ((_610 * 0.5) * _614) + 0.500488758087158203125;
    SV_Target.w = _676;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _779 : (isnan(_779) ? 1.0 : min(_779, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _675 ? cbInstanceData._m0[_648].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _823 : (isnan(_823) ? 1.0 : min(_823, 1.0));
    SV_Target_2.y = isnan(1.0) ? _834 : (isnan(_834) ? 1.0 : min(_834, 1.0));
    SV_Target_2.z = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
    SV_Target_2.w = _675 ? cbInstanceData._m0[_648].w : (float(floatBitsToUint(cbInstanceData._m0[_633 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _676;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _676;
}


