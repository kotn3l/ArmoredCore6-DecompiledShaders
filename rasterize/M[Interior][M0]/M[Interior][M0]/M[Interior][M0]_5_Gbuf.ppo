#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _140 = _139 * _132;
    float _141 = _139 * _133;
    float _142 = _139 * _134;
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _154 = _153 * TANGENT.x;
    float _155 = _153 * TANGENT.y;
    float _156 = _153 * TANGENT.z;
    float _201 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _232 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _238 = _232.w;
    float _251 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _238) + cbMtdParam._m0[11u].x) * _232.x;
    float _253 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _238) + cbMtdParam._m0[11u].y) * _232.y;
    float _255 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _238) + cbMtdParam._m0[11u].z) * _232.z;
    float _281 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _201));
    float _282 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _201));
    float _283 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _201));
    float _297 = (-0.0) - dot(vec3(_281, _282, _283), vec3(_140, _141, _142));
    float _298 = (-0.0) - dot(vec3(_281, _282, _283), vec3(_154, _155, _156));
    float _299 = (-0.0) - dot(vec3(_281, _282, _283), vec3((-0.0) - _147, (-0.0) - _148, (-0.0) - _149));
    float _303 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _304 = _303 * _299;
    float _306 = (cbMtdParam._m0[19u].x * _297) * _303;
    float _308 = (cbMtdParam._m0[18u].w * _298) * _303;
    float _309 = fract(TEXCOORD.x);
    float _310 = fract(TEXCOORD.y);
    float _316;
    if (_306 > 0.0)
    {
        _316 = (1.0 - _309) / _306;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_306 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _309) / _306;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _316 = frontier_phi_3_2_ladder;
    }
    float _324;
    if (_308 > 0.0)
    {
        _324 = (1.0 - _310) / _308;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_308 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _310) / _308;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _324 = frontier_phi_7_6_ladder;
    }
    bool _326 = _304 > 0.0;
    float _328 = _326 ? (cbMtdParam._m0[15u].x / _304) : 5000.0;
    float _329 = isnan(_324) ? _316 : (isnan(_316) ? _324 : min(_316, _324));
    float _330 = isnan(_328) ? _329 : (isnan(_329) ? _328 : min(_329, _328));
    float _334 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _335 = _309 + (-0.5);
    float _338 = _310 + (-0.5);
    float _341 = ((_330 * _304) + _334) / _334;
    vec4 _366 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_335 + (_330 * _306)) / _341) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_338 + (_330 * _308)) / _341) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _368 = _366.x;
    float _369 = _366.y;
    float _370 = _366.z;
    float _382 = (_368 - (_368 * _238)) * cbMtdParam._m0[9u].x;
    float _383 = (_369 - (_369 * _238)) * cbMtdParam._m0[9u].y;
    float _384 = cbMtdParam._m0[9u].z * (_370 - (_370 * _238));
    float _406 = (cbMtdParam._m0[21u].x * _297) * _303;
    float _408 = (cbMtdParam._m0[20u].w * _298) * _303;
    bool _409 = _406 > 0.0;
    float _414;
    if (_409)
    {
        _414 = (1.0 - _309) / _406;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _309) / _406;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _414 = frontier_phi_11_10_ladder;
    }
    bool _416 = _408 > 0.0;
    float _421;
    if (_416)
    {
        _421 = (1.0 - _310) / _408;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _310) / _408;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _421 = frontier_phi_15_14_ladder;
    }
    float _424 = _326 ? (cbMtdParam._m0[16u].z / _304) : 5000.0;
    float _425 = isnan(_421) ? _414 : (isnan(_414) ? _421 : min(_414, _421));
    float _426 = isnan(_424) ? _425 : (isnan(_425) ? _424 : min(_425, _424));
    float _430 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _434 = ((_426 * _304) + _430) / _430;
    float _439 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _441 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _457 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_335 + (_426 * _406)) / _434) + 0.5) + _439) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_338 + (_426 * _408)) / _434) + 0.5) + _441) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _462 = _457.x * cbMtdParam._m0[10u].x;
    float _463 = _457.y * cbMtdParam._m0[10u].y;
    float _464 = _457.z * cbMtdParam._m0[10u].z;
    float _472;
    if (_409)
    {
        _472 = (1.0 - _309) / _406;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _309) / _406;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _472 = frontier_phi_19_18_ladder;
    }
    float _478;
    if (_416)
    {
        _478 = (1.0 - _310) / _408;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_408 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _310) / _408;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _478 = frontier_phi_23_22_ladder;
    }
    float _480 = isnan(_478) ? _472 : (isnan(_472) ? _478 : min(_472, _478));
    float _481 = isnan(_424) ? _480 : (isnan(_480) ? _424 : min(_480, _424));
    float _488 = ((_481 * _304) + _430) / _430;
    vec4 _502 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_335 + (_481 * _406)) / _488) + 0.5) + _439) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_338 + (_481 * _408)) / _488) + 0.5) + _441) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _504 = _502.w;
    float _506 = _504 - (_504 * _238);
    vec4 _530 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _538 = (_530.x * 2.0) + (-1.0);
    float _540 = (_530.y * 2.0) + (-1.0);
    float _541 = dot(vec2(_538, _540), vec2(_538, _540));
    float _725 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _546 = sqrt(1.0 - (isnan(1.0) ? _725 : (isnan(_725) ? 1.0 : min(_725, 1.0))));
    float _547 = _530.z * _238;
    float _550 = fma(_546, _147, fma(_540, _154, _538 * _140));
    float _553 = fma(_546, _148, fma(_540, _155, _538 * _141));
    float _556 = fma(_546, _149, fma(_540, _156, _538 * _142));
    float _560 = inversesqrt(dot(vec3(_550, _553, _556), vec3(_550, _553, _556)));
    float _736 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    float _747 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _758 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _769 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    uint _579 = uint(roundEven(NORMAL.w)) * 13u;
    uint _582 = (_579 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _588 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _747 : (isnan(_747) ? 1.0 : min(_747, 1.0)))) * cbInstanceData._m0[_582].x;
    float _589 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0)))) * cbInstanceData._m0[_582].y;
    float _590 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0)))) * cbInstanceData._m0[_582].z;
    float _780 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _791 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _802 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    uint _597 = _579 + 6u;
    bool _632 = cbMtdParam._m0[1u].z != 0.0;
    float _633 = _632 ? cbInstanceData._m0[_597].w : 0.0;
    SV_Target.x = ((_550 * 0.5) * _560) + 0.500488758087158203125;
    SV_Target.y = ((_553 * 0.5) * _560) + 0.500488758087158203125;
    SV_Target.z = ((_556 * 0.5) * _560) + 0.500488758087158203125;
    SV_Target.w = _633;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _736 : (isnan(_736) ? 1.0 : min(_736, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _632 ? cbInstanceData._m0[_597].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0));
    SV_Target_2.y = isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0));
    SV_Target_2.z = isnan(1.0) ? _802 : (isnan(_802) ? 1.0 : min(_802, 1.0));
    SV_Target_2.w = _632 ? cbInstanceData._m0[_597].w : (float(floatBitsToUint(cbInstanceData._m0[_579 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _633;
    SV_Target_4.x = (cbInstanceData._m0[_582].x * ((_506 * ((_462 - _382) - (_462 * _238))) + _382)) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (cbInstanceData._m0[_582].y * ((_506 * ((_463 - _383) - (_463 * _238))) + _383)) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (cbInstanceData._m0[_582].z * ((_506 * ((_464 - _384) - (_464 * _238))) + _384)) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _633;
}


