#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

float _346;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _130 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _131 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _132 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _137 = inversesqrt(dot(vec3(_130, _131, _132), vec3(_130, _131, _132)));
    float _138 = _137 * _130;
    float _139 = _137 * _131;
    float _140 = _137 * _132;
    float _144 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _145 = _144 * NORMAL.x;
    float _146 = _144 * NORMAL.y;
    float _147 = _144 * NORMAL.z;
    float _151 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _152 = _151 * TANGENT.x;
    float _153 = _151 * TANGENT.y;
    float _154 = _151 * TANGENT.z;
    float _199 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _230 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _236 = _230.w;
    float _249 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _236) + cbMtdParam._m0[11u].x) * _230.x;
    float _251 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _236) + cbMtdParam._m0[11u].y) * _230.y;
    float _253 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _236) + cbMtdParam._m0[11u].z) * _230.z;
    float _278 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _285 = inversesqrt(dot(vec3(_152, _153, _154), vec3(_152, _153, _154)));
    float _295 = cbMtdParam._m0[23u].x + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _199));
    float _296 = cbMtdParam._m0[23u].y + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _199));
    float _297 = cbMtdParam._m0[23u].z + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _199));
    float _311 = (-0.0) - dot(vec3(_295, _296, _297), vec3(_278 * _138, _278 * _139, _278 * _140));
    float _312 = (-0.0) - dot(vec3(_295, _296, _297), vec3(_285 * _152, _285 * _153, _285 * _154));
    float _313 = (-0.0) - dot(vec3(_295, _296, _297), vec3((-0.0) - _145, (-0.0) - _146, (-0.0) - _147));
    float _317 = inversesqrt(dot(vec3(_311, _312, _313), vec3(_311, _312, _313)));
    float _318 = _317 * _313;
    float _320 = (cbMtdParam._m0[19u].w * _311) * _317;
    float _322 = (cbMtdParam._m0[20u].x * _312) * _317;
    float _325 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _326 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _344;
    float _347;
    float _349;
    if (_320 > 0.0)
    {
        float _330 = (1.0 - _325) / _320;
        _344 = _330;
        _347 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_330 * _318)) * 0.16666667163372039794921875;
        _349 = (fract((_330 * _322) + _326) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_320 < 0.0)
        {
            float _345 = ((-0.0) - _325) / _320;
            frontier_phi_3_2_ladder = _345;
            frontier_phi_3_2_ladder_1 = (fract(_345 * _318) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_345 * _322) + _326) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _346;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _344 = frontier_phi_3_2_ladder;
        _347 = frontier_phi_3_2_ladder_1;
        _349 = frontier_phi_3_2_ladder_2;
    }
    float _375;
    float _377;
    float _379;
    if (_322 > 0.0)
    {
        float _362 = (1.0 - _326) / _322;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_362 < _344)
        {
            frontier_phi_8_5_ladder = _362;
            frontier_phi_8_5_ladder_1 = (fract((_362 * _320) + _325) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_362 * _318) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _344;
            frontier_phi_8_5_ladder_1 = _347;
            frontier_phi_8_5_ladder_2 = _349;
        }
        _375 = frontier_phi_8_5_ladder;
        _377 = frontier_phi_8_5_ladder_1;
        _379 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_322 < 0.0)
        {
            float _376 = ((-0.0) - _326) / _322;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_376 < _344)
            {
                frontier_phi_8_6_ladder_9_ladder = _376;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_376 * _320) + _325) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_376 * _318) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _344;
                frontier_phi_8_6_ladder_9_ladder_1 = _347;
                frontier_phi_8_6_ladder_9_ladder_2 = _349;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _344;
            frontier_phi_8_6_ladder_1 = _347;
            frontier_phi_8_6_ladder_2 = _349;
        }
        _375 = frontier_phi_8_6_ladder;
        _377 = frontier_phi_8_6_ladder_1;
        _379 = frontier_phi_8_6_ladder_2;
    }
    float _383 = (_318 > 0.0) ? (cbMtdParam._m0[16u].w / _318) : 5000.0;
    float _396;
    float _397;
    if (_383 < _375)
    {
        _396 = ((_325 + cbMtdParam._m0[17u].x) + (_383 * _320)) * 0.16666667163372039794921875;
        _397 = (((_383 * _322) + _326) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _396 = _377;
        _397 = _379;
    }
    vec4 _399 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_396, _397));
    float _404 = _399.x * cbMtdParam._m0[13u].x;
    float _405 = _399.y * cbMtdParam._m0[13u].y;
    float _406 = _399.z * cbMtdParam._m0[13u].z;
    float _411 = 0.5 - (_236 * 0.5);
    float _421 = (((_404 - _249) - (_404 * _236)) * _411) + _249;
    float _422 = (((_405 - _251) - (_405 * _236)) * _411) + _251;
    float _423 = (((_406 - _253) - (_406 * _236)) * _411) + _253;
    vec4 _435 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _443 = (_435.x * 2.0) + (-1.0);
    float _445 = (_435.y * 2.0) + (-1.0);
    float _446 = dot(vec2(_443, _445), vec2(_443, _445));
    float _586 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _451 = sqrt(1.0 - (isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0))));
    float _452 = _435.z * _236;
    float _455 = fma(_451, _145, fma(_445, _152, _443 * _138));
    float _458 = fma(_451, _146, fma(_445, _153, _443 * _139));
    float _461 = fma(_451, _147, fma(_445, _154, _443 * _140));
    float _465 = inversesqrt(dot(vec3(_455, _458, _461), vec3(_455, _458, _461)));
    float _597 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _608 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _619 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _630 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    uint _484 = uint(roundEven(NORMAL.w)) * 13u;
    uint _486 = (_484 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _492 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _608 : (isnan(_608) ? 1.0 : min(_608, 1.0)))) * cbInstanceData._m0[_486].x;
    float _493 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _619 : (isnan(_619) ? 1.0 : min(_619, 1.0)))) * cbInstanceData._m0[_486].y;
    float _494 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _630 : (isnan(_630) ? 1.0 : min(_630, 1.0)))) * cbInstanceData._m0[_486].z;
    float _641 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _652 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _663 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    uint _498 = _484 + 6u;
    bool _526 = cbMtdParam._m0[1u].z != 0.0;
    float _527 = _526 ? cbInstanceData._m0[_498].w : 0.0;
    SV_Target.x = ((_455 * 0.5) * _465) + 0.500488758087158203125;
    SV_Target.y = ((_458 * 0.5) * _465) + 0.500488758087158203125;
    SV_Target.z = ((_461 * 0.5) * _465) + 0.500488758087158203125;
    SV_Target.w = _527;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _597 : (isnan(_597) ? 1.0 : min(_597, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _526 ? cbInstanceData._m0[_498].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
    SV_Target_2.y = isnan(1.0) ? _652 : (isnan(_652) ? 1.0 : min(_652, 1.0));
    SV_Target_2.z = isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0));
    SV_Target_2.w = _526 ? cbInstanceData._m0[_498].w : (float(floatBitsToUint(cbInstanceData._m0[_484 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _527;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _527;
}


