#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M0_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _390;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _145 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _146 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _147 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _152 = inversesqrt(dot(vec3(_145, _146, _147), vec3(_145, _146, _147)));
    float _153 = _152 * _145;
    float _154 = _152 * _146;
    float _155 = _152 * _147;
    float _159 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _160 = _159 * NORMAL.x;
    float _161 = _159 * NORMAL.y;
    float _162 = _159 * NORMAL.z;
    float _166 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167 = _166 * TANGENT.x;
    float _168 = _166 * TANGENT.y;
    float _169 = _166 * TANGENT.z;
    float _214 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _224 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _214);
    float _225 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _214);
    float _226 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _214);
    vec4 _245 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _251 = _245.w;
    float _264 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _251) + cbMtdParam._m0[11u].x) * _245.x;
    float _266 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _251) + cbMtdParam._m0[11u].y) * _245.y;
    float _268 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _251) + cbMtdParam._m0[11u].z) * _245.z;
    vec4 _304 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _308 = _304.z;
    float _312 = (_304.x * 2.0) + (-1.0);
    float _314 = (_304.y * 2.0) + (-1.0);
    float _320 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _327 = inversesqrt(dot(vec3(_167, _168, _169), vec3(_167, _168, _169)));
    float _337 = cbMtdParam._m0[23u].x + _224;
    float _338 = cbMtdParam._m0[23u].y + _225;
    float _339 = cbMtdParam._m0[23u].z + _226;
    float _353 = (-0.0) - dot(vec3(_337, _338, _339), vec3(_320 * _153, _320 * _154, _320 * _155));
    float _354 = (-0.0) - dot(vec3(_337, _338, _339), vec3(_327 * _167, _327 * _168, _327 * _169));
    float _355 = (-0.0) - dot(vec3(_337, _338, _339), vec3((-0.0) - _160, (-0.0) - _161, (-0.0) - _162));
    float _359 = inversesqrt(dot(vec3(_353, _354, _355), vec3(_353, _354, _355)));
    float _360 = _359 * _355;
    float _365 = ((cbMtdParam._m0[19u].w * _353) * _359) + (_312 * cbMtdParam._m0[20u].y);
    float _366 = ((cbMtdParam._m0[20u].x * _354) * _359) + (_314 * cbMtdParam._m0[20u].z);
    float _369 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _370 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _388;
    float _391;
    float _393;
    if (_365 > 0.0)
    {
        float _374 = (1.0 - _369) / _365;
        _388 = _374;
        _391 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_374 * _360)) * 0.16666667163372039794921875;
        _393 = (fract((_374 * _366) + _370) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_365 < 0.0)
        {
            float _389 = ((-0.0) - _369) / _365;
            frontier_phi_3_2_ladder = _389;
            frontier_phi_3_2_ladder_1 = (fract(_389 * _360) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_389 * _366) + _370) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _390;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _388 = frontier_phi_3_2_ladder;
        _391 = frontier_phi_3_2_ladder_1;
        _393 = frontier_phi_3_2_ladder_2;
    }
    float _419;
    float _421;
    float _423;
    if (_366 > 0.0)
    {
        float _406 = (1.0 - _370) / _366;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_406 < _388)
        {
            frontier_phi_8_5_ladder = _406;
            frontier_phi_8_5_ladder_1 = (fract((_406 * _365) + _369) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_406 * _360) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _388;
            frontier_phi_8_5_ladder_1 = _391;
            frontier_phi_8_5_ladder_2 = _393;
        }
        _419 = frontier_phi_8_5_ladder;
        _421 = frontier_phi_8_5_ladder_1;
        _423 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_366 < 0.0)
        {
            float _420 = ((-0.0) - _370) / _366;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_420 < _388)
            {
                frontier_phi_8_6_ladder_9_ladder = _420;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_420 * _365) + _369) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_420 * _360) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _388;
                frontier_phi_8_6_ladder_9_ladder_1 = _391;
                frontier_phi_8_6_ladder_9_ladder_2 = _393;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _388;
            frontier_phi_8_6_ladder_1 = _391;
            frontier_phi_8_6_ladder_2 = _393;
        }
        _419 = frontier_phi_8_6_ladder;
        _421 = frontier_phi_8_6_ladder_1;
        _423 = frontier_phi_8_6_ladder_2;
    }
    float _427 = (_360 > 0.0) ? (cbMtdParam._m0[16u].w / _360) : 5000.0;
    float _440;
    float _441;
    if (_427 < _419)
    {
        _440 = ((_369 + cbMtdParam._m0[17u].x) + (_427 * _365)) * 0.16666667163372039794921875;
        _441 = (((_427 * _366) + _370) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _440 = _421;
        _441 = _423;
    }
    vec4 _443 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_440, _441));
    float _448 = _443.x * cbMtdParam._m0[13u].x;
    float _449 = _443.y * cbMtdParam._m0[13u].y;
    float _450 = _443.z * cbMtdParam._m0[13u].z;
    float _455 = 0.5 - (_251 * 0.5);
    float _465 = (((_448 - _264) - (_448 * _251)) * _455) + _264;
    float _466 = (((_449 - _266) - (_449 * _251)) * _455) + _266;
    float _467 = (((_450 - _268) - (_450 * _251)) * _455) + _268;
    vec4 _479 = texture(sampler2D(M_Interior_M0_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _483 = _479.z;
    float _486 = (_479.x * 2.0) + (-1.0);
    float _487 = (_479.y * 2.0) + (-1.0);
    float _488 = dot(vec2(_486, _487), vec2(_486, _487));
    float _746 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _493 = sqrt(1.0 - (isnan(1.0) ? _746 : (isnan(_746) ? 1.0 : min(_746, 1.0))));
    float _494 = _483 * _251;
    float _504 = (cbMtdParam._m0[15u].w * ((_308 - _494) + ((_483 - _308) * _251))) + _494;
    float _512 = (cbMtdParam._m0[16u].x * (_312 - (_312 * _251))) + _486;
    float _513 = (cbMtdParam._m0[16u].x * (_314 - (_314 * _251))) + _487;
    float _516 = fma(_493, _160, fma(_513, _167, _512 * _153));
    float _519 = fma(_493, _161, fma(_513, _168, _512 * _154));
    float _522 = fma(_493, _162, fma(_513, _169, _512 * _155));
    float _526 = inversesqrt(dot(vec3(_516, _519, _522), vec3(_516, _519, _522)));
    float _757 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
    float _768 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _528 = isnan(1.0) ? _768 : (isnan(_768) ? 1.0 : min(_768, 1.0));
    float _779 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _529 = isnan(1.0) ? _779 : (isnan(_779) ? 1.0 : min(_779, 1.0));
    float _790 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _530 = isnan(1.0) ? _790 : (isnan(_790) ? 1.0 : min(_790, 1.0));
    uint _532 = uint(roundEven(NORMAL.w));
    vec4 _537 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _539 = _537.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _606 = sqrt(((_224 * _224) + (_225 * _225)) + (_226 * _226));
        float _612 = (cbMatDynParam._m0[5u].x * _606) + cbMatDynParam._m0[5u].y;
        float _801 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
        float _613 = isnan(1.0) ? _801 : (isnan(_801) ? 1.0 : min(_801, 1.0));
        float _617 = (cbMatDynParam._m0[5u].z * _606) + cbMatDynParam._m0[5u].w;
        float _812 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0))) - _613)) + _613) < ((_539 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _645;
    uint _565;
    vec4 _569;
    float _576;
    float _577;
    float _578;
    float _582;
    vec4 _586;
    float _588;
    float _589;
    bool _600;
    for (;;)
    {
        _565 = _532 * 13u;
        _569 = cbInstanceData._m0[(_565 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _573 = (cbMtdParam._m0[0u].x * _528) * _569.x;
        float _574 = (cbMtdParam._m0[0u].y * _529) * _569.y;
        float _575 = (cbMtdParam._m0[0u].z * _530) * _569.z;
        float _823 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
        _576 = isnan(1.0) ? _823 : (isnan(_823) ? 1.0 : min(_823, 1.0));
        float _834 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
        _577 = isnan(1.0) ? _834 : (isnan(_834) ? 1.0 : min(_834, 1.0));
        float _845 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
        _578 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
        _582 = cbInstanceData._m0[_565 + 6u].w;
        float _583 = _539 + (-0.5);
        _586 = cbMtdParam._m0[1u];
        _588 = _586.y * _583;
        _589 = _583 * 0.999000012874603271484375;
        _600 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_600)
        {
            if ((cbInstanceData._m0[_565 + 7u].x + _589) < 0.5)
            {
                _645 = true;
                break;
            }
        }
        if ((_569.w < 1.0) && ((_569.w + _589) < 0.5))
        {
            _645 = true;
            break;
        }
        if ((_588 + 1.0) < _586.x)
        {
            _645 = true;
            break;
        }
        _645 = false;
        break;
    }
    if (_645)
    {
        discard_state = true;
    }
    bool _671 = cbMtdParam._m0[1u].z != 0.0;
    float _672 = _671 ? _582 : 0.0;
    SV_Target.x = ((_516 * 0.5) * _526) + 0.500488758087158203125;
    SV_Target.y = ((_519 * 0.5) * _526) + 0.500488758087158203125;
    SV_Target.z = ((_522 * 0.5) * _526) + 0.500488758087158203125;
    SV_Target.w = _672;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _757 : (isnan(_757) ? 1.0 : min(_757, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _671 ? _582 : TEXCOORD.z;
    SV_Target_2.x = _576;
    SV_Target_2.y = _577;
    SV_Target_2.z = _578;
    SV_Target_2.w = _671 ? _582 : (float(floatBitsToUint(cbInstanceData._m0[_565 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _672;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _672;
    discard_exit();
}


