#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2270;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _223 = _222.x;
    bool _237 = _182 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + (_183 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _181 * _175;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_186)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_183 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _181 * _176;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_186)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_183 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _132.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _173 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _173 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _175 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _175 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _176 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _176 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_212) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_213) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_214) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    uvec2 _643 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_1, int(0u)));
    bool _648 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _701;
    if (_648)
    {
        float _659 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _665 = (_574 * _559) - (_571 * _562);
        float _668 = (_568 * _562) - (_574 * _556);
        float _671 = (_571 * _556) - (_568 * _559);
        float _698 = ((log2((((float(_643.y) * 0.5) * float(_643.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_668 * _668) + (_671 * _671)) + (_665 * _665)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_659 * gl_WorldRayDirectionEXT.x, _659 * gl_WorldRayDirectionEXT.y, _659 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _701 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    }
    else
    {
        _701 = 0.0;
    }
    vec4 _705 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _575) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _576) + cbTextureTilingScale._m0[1u].w), _701);
    float _710 = _705.x * cbMtdParam._m0[10u].x;
    float _711 = _705.y * cbMtdParam._m0[10u].y;
    float _712 = _705.z * cbMtdParam._m0[10u].z;
    uvec2 _730 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_2, int(0u)));
    float _781;
    if (_648)
    {
        float _741 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _747 = (_574 * _559) - (_571 * _562);
        float _750 = (_568 * _562) - (_574 * _556);
        float _753 = (_571 * _556) - (_568 * _559);
        float _779 = ((log2((((float(_730.y) * 0.5) * float(_730.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_750 * _750) + (_753 * _753)) + (_747 * _747)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_741 * gl_WorldRayDirectionEXT.x, _741 * gl_WorldRayDirectionEXT.y, _741 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _781 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    }
    else
    {
        _781 = 0.0;
    }
    vec4 _783 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _575) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _576) + cbTextureTilingScale._m0[11u].w), _781);
    uvec2 _809 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_0, int(0u)));
    float _860;
    if (_648)
    {
        float _820 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _826 = (_574 * _559) - (_571 * _562);
        float _829 = (_568 * _562) - (_574 * _556);
        float _832 = (_571 * _556) - (_568 * _559);
        float _858 = ((log2((((float(_809.y) * 0.5) * float(_809.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_829 * _829) + (_832 * _832)) + (_826 * _826)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_820 * gl_WorldRayDirectionEXT.x, _820 * gl_WorldRayDirectionEXT.y, _820 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _860 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    }
    else
    {
        _860 = 0.0;
    }
    uvec2 _883 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_3, int(0u)));
    float _934;
    if (_648)
    {
        float _894 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _900 = (_574 * _559) - (_571 * _562);
        float _903 = (_568 * _562) - (_574 * _556);
        float _906 = (_571 * _556) - (_568 * _559);
        float _932 = ((log2((((float(_883.y) * 0.5) * float(_883.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_903 * _903) + (_906 * _906)) + (_900 * _900)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_894 * gl_WorldRayDirectionEXT.x, _894 * gl_WorldRayDirectionEXT.y, _894 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _934 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    }
    else
    {
        _934 = 0.0;
    }
    float _939 = cbMtdParam._m0[18u].y * textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * _575) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _576) + cbTextureTilingScale._m0[13u].w), _934).x;
    float _949 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].x * _575) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].y * _576) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _860).x) * 2.0) - _939)) + 1.0;
    float _2394 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _950 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
    float _957 = (_950 * ((_783.x * cbMtdParam._m0[11u].x) - _710)) + _710;
    float _958 = (_950 * ((_783.y * cbMtdParam._m0[11u].y) - _711)) + _711;
    float _959 = (_950 * ((_783.z * cbMtdParam._m0[11u].z) - _712)) + _712;
    uvec2 _977 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_8, int(0u)));
    float _1028;
    if (_648)
    {
        float _988 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _994 = (_574 * _559) - (_571 * _562);
        float _997 = (_568 * _562) - (_574 * _556);
        float _1000 = (_571 * _556) - (_568 * _559);
        float _1026 = ((log2((((float(_977.y) * 0.5) * float(_977.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_997 * _997) + (_1000 * _1000)) + (_994 * _994)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_988 * gl_WorldRayDirectionEXT.x, _988 * gl_WorldRayDirectionEXT.y, _988 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1028 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    }
    else
    {
        _1028 = 0.0;
    }
    vec4 _1030 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[17u].x * _575) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _576) + cbTextureTilingScale._m0[17u].w), _1028);
    float _1096;
    if (_648)
    {
        float _1056 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1062 = (_574 * _559) - (_571 * _562);
        float _1065 = (_568 * _562) - (_574 * _556);
        float _1068 = (_571 * _556) - (_568 * _559);
        float _1094 = ((log2((((float(_809.y) * 0.5) * float(_809.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1065 * _1065) + (_1068 * _1068)) + (_1062 * _1062)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1056 * gl_WorldRayDirectionEXT.x, _1056 * gl_WorldRayDirectionEXT.y, _1056 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1096 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    }
    else
    {
        _1096 = 0.0;
    }
    float _1109 = ((cbMtdParam._m0[17u].w * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].z * _575) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].w * _576) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1096).y) * 2.0) - _939)) + 1.0;
    float _2415 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _1110 = isnan(1.0) ? _2415 : (isnan(_2415) ? 1.0 : min(_2415, 1.0));
    float _1117 = (_1110 * ((_1030.x * cbMtdParam._m0[12u].x) - _957)) + _957;
    float _1118 = (_1110 * ((_1030.y * cbMtdParam._m0[12u].y) - _958)) + _958;
    float _1119 = (_1110 * ((_1030.z * cbMtdParam._m0[12u].z) - _959)) + _959;
    uvec2 _1136 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_11, int(0u)));
    float _1187;
    if (_648)
    {
        float _1147 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1153 = (_574 * _559) - (_571 * _562);
        float _1156 = (_568 * _562) - (_574 * _556);
        float _1159 = (_571 * _556) - (_568 * _559);
        float _1185 = ((log2((((float(_1136.y) * 0.5) * float(_1136.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1156 * _1156) + (_1159 * _1159)) + (_1153 * _1153)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1147 * gl_WorldRayDirectionEXT.x, _1147 * gl_WorldRayDirectionEXT.y, _1147 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1187 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
    }
    else
    {
        _1187 = 0.0;
    }
    vec4 _1189 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _1187);
    float _1255;
    if (_648)
    {
        float _1215 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1221 = (_574 * _559) - (_571 * _562);
        float _1224 = (_568 * _562) - (_574 * _556);
        float _1227 = (_571 * _556) - (_568 * _559);
        float _1253 = ((log2((((float(_809.y) * 0.5) * float(_809.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1224 * _1224) + (_1227 * _1227)) + (_1221 * _1221)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1215 * gl_WorldRayDirectionEXT.x, _1215 * gl_WorldRayDirectionEXT.y, _1215 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1255 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
    }
    else
    {
        _1255 = 0.0;
    }
    float _1266 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[18u].z * _575) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].w * _576) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1255).z) * 2.0) - _939)) + 1.0;
    float _2436 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
    float _1267 = isnan(1.0) ? _2436 : (isnan(_2436) ? 1.0 : min(_2436, 1.0));
    float _1274 = (_1267 * ((_1189.x * cbMtdParam._m0[13u].x) - _1117)) + _1117;
    float _1275 = (_1267 * ((_1189.y * cbMtdParam._m0[13u].y) - _1118)) + _1118;
    float _1276 = (_1267 * ((_1189.z * cbMtdParam._m0[13u].z) - _1119)) + _1119;
    uvec2 _1289 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_14, int(0u)));
    float _1340;
    if (_648)
    {
        float _1300 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1306 = (_574 * _559) - (_571 * _562);
        float _1309 = (_568 * _562) - (_574 * _556);
        float _1312 = (_571 * _556) - (_568 * _559);
        float _1338 = ((log2((((float(_1289.y) * 0.5) * float(_1289.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1309 * _1309) + (_1312 * _1312)) + (_1306 * _1306)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1300 * gl_WorldRayDirectionEXT.x, _1300 * gl_WorldRayDirectionEXT.y, _1300 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1340 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
    }
    else
    {
        _1340 = 0.0;
    }
    vec4 _1342 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _575) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _576) + cbTextureTilingScale._m0[5u].w), _1340);
    float _1344 = _1342.x;
    uvec2 _1356 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_17, int(0u)));
    float _1407;
    if (_648)
    {
        float _1367 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1373 = (_574 * _559) - (_571 * _562);
        float _1376 = (_568 * _562) - (_574 * _556);
        float _1379 = (_571 * _556) - (_568 * _559);
        float _1405 = ((log2((((float(_1356.y) * 0.5) * float(_1356.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1376 * _1376) + (_1379 * _1379)) + (_1373 * _1373)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1367 * gl_WorldRayDirectionEXT.x, _1367 * gl_WorldRayDirectionEXT.y, _1367 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1407 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
    }
    else
    {
        _1407 = 0.0;
    }
    float _1414 = ((textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _575) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _576) + cbTextureTilingScale._m0[8u].w), _1407).x - _1344) * _950) + _1344;
    uvec2 _1427 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_18, int(0u)));
    float _1478;
    if (_648)
    {
        float _1438 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1444 = (_574 * _559) - (_571 * _562);
        float _1447 = (_568 * _562) - (_574 * _556);
        float _1450 = (_571 * _556) - (_568 * _559);
        float _1476 = ((log2((((float(_1427.y) * 0.5) * float(_1427.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1447 * _1447) + (_1450 * _1450)) + (_1444 * _1444)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1438 * gl_WorldRayDirectionEXT.x, _1438 * gl_WorldRayDirectionEXT.y, _1438 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1478 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
    }
    else
    {
        _1478 = 0.0;
    }
    float _1485 = ((textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _575) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _576) + cbTextureTilingScale._m0[9u].w), _1478).x - _1414) * _1110) + _1414;
    uvec2 _1497 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_19, int(0u)));
    float _1548;
    if (_648)
    {
        float _1508 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1514 = (_574 * _559) - (_571 * _562);
        float _1517 = (_568 * _562) - (_574 * _556);
        float _1520 = (_571 * _556) - (_568 * _559);
        float _1546 = ((log2((((float(_1497.y) * 0.5) * float(_1497.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1517 * _1517) + (_1520 * _1520)) + (_1514 * _1514)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1508 * gl_WorldRayDirectionEXT.x, _1508 * gl_WorldRayDirectionEXT.y, _1508 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1548 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
    }
    else
    {
        _1548 = 0.0;
    }
    float _1555 = ((textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _575) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _576) + cbTextureTilingScale._m0[10u].w), _1548).x - _1485) * _1267) + _1485;
    uvec2 _1568 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_5, int(0u)));
    float _1619;
    if (_648)
    {
        float _1579 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1585 = (_574 * _559) - (_571 * _562);
        float _1588 = (_568 * _562) - (_574 * _556);
        float _1591 = (_571 * _556) - (_568 * _559);
        float _1617 = ((log2((((float(_1568.y) * 0.5) * float(_1568.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1588 * _1588) + (_1591 * _1591)) + (_1585 * _1585)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1579 * gl_WorldRayDirectionEXT.x, _1579 * gl_WorldRayDirectionEXT.y, _1579 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1619 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
    }
    else
    {
        _1619 = 0.0;
    }
    vec4 _1622 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _575) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _576) + cbTextureTilingScale._m0[14u].w), _1619);
    float _1624 = _1622.x;
    float _1625 = _1622.y;
    float _1628 = cbMtdParam._m0[17u].y * _1622.z;
    uvec2 _1640 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_6, int(0u)));
    float _1691;
    if (_648)
    {
        float _1651 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1657 = (_574 * _559) - (_571 * _562);
        float _1660 = (_568 * _562) - (_574 * _556);
        float _1663 = (_571 * _556) - (_568 * _559);
        float _1689 = ((log2((((float(_1640.y) * 0.5) * float(_1640.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1660 * _1660) + (_1663 * _1663)) + (_1657 * _1657)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1651 * gl_WorldRayDirectionEXT.x, _1651 * gl_WorldRayDirectionEXT.y, _1651 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1691 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
    }
    else
    {
        _1691 = 0.0;
    }
    vec4 _1693 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _575) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _576) + cbTextureTilingScale._m0[15u].w), _1691);
    float _1702 = (((cbMtdParam._m0[17u].x * _1693.z) - _1628) * _950) + _1628;
    uvec2 _1714 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_15, int(0u)));
    float _1765;
    if (_648)
    {
        float _1725 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1731 = (_574 * _559) - (_571 * _562);
        float _1734 = (_568 * _562) - (_574 * _556);
        float _1737 = (_571 * _556) - (_568 * _559);
        float _1763 = ((log2((((float(_1714.y) * 0.5) * float(_1714.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1734 * _1734) + (_1737 * _1737)) + (_1731 * _1731)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1725 * gl_WorldRayDirectionEXT.x, _1725 * gl_WorldRayDirectionEXT.y, _1725 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1765 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
    }
    else
    {
        _1765 = 0.0;
    }
    vec4 _1767 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _575) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _576) + cbTextureTilingScale._m0[6u].w), _1765);
    float _1778 = (((cbMtdParam._m0[16u].w * _1767.z) - _1702) * _1110) + _1702;
    uvec2 _1790 = uvec2(textureSize(C_3Mask_Detail_M1_snp_0_Texture2D_16, int(0u)));
    float _1794 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1795 = _1794 * gl_WorldRayDirectionEXT.x;
    float _1796 = _1794 * gl_WorldRayDirectionEXT.y;
    float _1797 = _1794 * gl_WorldRayDirectionEXT.z;
    float _1841;
    if (_648)
    {
        float _1807 = (_574 * _559) - (_571 * _562);
        float _1810 = (_568 * _562) - (_574 * _556);
        float _1813 = (_571 * _556) - (_568 * _559);
        float _1839 = ((log2((((float(_1790.y) * 0.5) * float(_1790.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1810 * _1810) + (_1813 * _1813)) + (_1807 * _1807)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1795, _1796, _1797), vec3(_587, _589, _590))));
        _1841 = isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0));
    }
    else
    {
        _1841 = 0.0;
    }
    vec4 _1843 = textureLod(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _575) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _576) + cbTextureTilingScale._m0[7u].w), _1841);
    float _1852 = (((cbMtdParam._m0[16u].z * _1843.z) - _1778) * _1267) + _1778;
    float _1857 = ((_1693.x - _1624) * _950) + _1624;
    float _1858 = ((_1693.y - _1625) * _950) + _1625;
    float _1863 = ((_1767.x - _1857) * _1110) + _1857;
    float _1864 = ((_1767.y - _1858) * _1110) + _1858;
    float _1873 = ((((_1843.x - _1863) * _1267) + _1863) * 2.0) + (-1.0);
    float _1875 = ((((_1843.y - _1864) * _1267) + _1864) * 2.0) + (-1.0);
    float _1876 = dot(vec2(_1873, _1875), vec2(_1873, _1875));
    float _2487 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
    float _1881 = sqrt(1.0 - (isnan(1.0) ? _2487 : (isnan(_2487) ? 1.0 : min(_2487, 1.0))));
    float _1884 = fma(_1881, _587, fma(_1875, _603, (_622 * _616) * _1873));
    float _1887 = fma(_1881, _589, fma(_1875, _604, (_622 * _617) * _1873));
    float _1890 = fma(_1881, _590, fma(_1875, _605, (_622 * _618) * _1873));
    float _1894 = inversesqrt(dot(vec3(_1884, _1887, _1890), vec3(_1884, _1887, _1890)));
    float _1895 = _1894 * _1884;
    float _1896 = _1894 * _1887;
    float _1897 = _1894 * _1890;
    float _1909 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1910 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1911 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1912 = (-0.0) - _1795;
    float _1914 = (-0.0) - _1796;
    float _1915 = (-0.0) - _1797;
    float _1921 = float(gl_LaunchIDEXT.x);
    float _1922 = float(gl_LaunchIDEXT.y);
    float _1925 = float(gl_LaunchSizeEXT.x);
    float _1939 = fract(fract(sin(dot(vec2(_1921 / _1925, _1922 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1952 = fract(fract(sin(dot(vec2((_1921 + 128.0) / _1925, (_1922 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1953 = 1.0 - _1555;
    float _1954 = _1953 * _1274;
    float _1955 = _1953 * _1275;
    float _1956 = _1953 * _1276;
    float _1961 = _1555 * (_1274 + (-0.039999999105930328369140625));
    float _1962 = _1555 * (_1275 + (-0.039999999105930328369140625));
    float _1963 = _1555 * (_1276 + (-0.039999999105930328369140625));
    float _1964 = _1961 + 0.039999999105930328369140625;
    float _1966 = _1962 + 0.039999999105930328369140625;
    float _1967 = _1963 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1977 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1978 = _1977.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1978, _1977.w, _1978, vec3(_1909, _1910, _1911), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2092;
    float _2093;
    float _2094;
    float _2095;
    float _2096;
    float _2097;
    if (_74._m0 == 0u)
    {
        float _1998 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1895, _1896, _1897));
        float _2498 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2001 = isnan(1.0) ? _2498 : (isnan(_2498) ? 1.0 : min(_2498, 1.0));
        float _2020 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1852) * 0.949999988079071044921875);
        float _2021 = _2020 * _2020;
        float _2022 = g_sceneCB._m0[4u].x - _1795;
        float _2023 = g_sceneCB._m0[4u].y - _1796;
        float _2024 = g_sceneCB._m0[4u].z - _1797;
        float _2028 = inversesqrt(dot(vec3(_2022, _2023, _2024), vec3(_2022, _2023, _2024)));
        float _2029 = _2028 * _2022;
        float _2030 = _2028 * _2023;
        float _2031 = _2028 * _2024;
        float _2032 = dot(vec3(_1895, _1896, _1897), vec3(g_sceneCB._m0[4u].xyz));
        float _2509 = isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0));
        float _2035 = isnan(1.0) ? _2509 : (isnan(_2509) ? 1.0 : min(_2509, 1.0));
        float _2036 = dot(vec3(_1895, _1896, _1897), vec3(_1912, _1914, _1915));
        float _2520 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
        float _2039 = isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0));
        float _2040 = dot(vec3(_1895, _1896, _1897), vec3(_2029, _2030, _2031));
        float _2531 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
        float _2043 = isnan(1.0) ? _2531 : (isnan(_2531) ? 1.0 : min(_2531, 1.0));
        float _2044 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2029, _2030, _2031));
        float _2542 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
        float _2048 = _2021 * _2021;
        float _2052 = ((_2043 * _2043) * (_2048 + (-1.0))) + 1.0;
        float _2061 = exp2(log2(1.0 - (isnan(1.0) ? _2542 : (isnan(_2542) ? 1.0 : min(_2542, 1.0)))) * 5.0);
        float _2072 = 1.0 - _2021;
        float _2083 = (0.5 / (((_2039 * ((_2035 * _2072) + _2021)) + 9.9999999392252902907785028219223e-09) + (((_2039 * _2072) + _2021) * _2035))) * _2035;
        float _2553 = isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0));
        float _2085 = (isnan(1.0) ? _2553 : (isnan(_2553) ? 1.0 : min(_2553, 1.0))) * (_2048 / ((_2052 * _2052) * 3.141590118408203125));
        _2092 = ((_1954 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2001;
        _2093 = ((_1955 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2001;
        _2094 = ((_1956 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2001;
        _2095 = (((_2061 * (0.959999978542327880859375 - _1961)) + _1964) * g_sceneCB._m0[5u].x) * _2085;
        _2096 = (((_2061 * (0.959999978542327880859375 - _1962)) + _1966) * g_sceneCB._m0[5u].y) * _2085;
        _2097 = (((_2061 * (0.959999978542327880859375 - _1963)) + _1967) * g_sceneCB._m0[5u].z) * _2085;
    }
    else
    {
        _2092 = 0.0;
        _2093 = 0.0;
        _2094 = 0.0;
        _2095 = 0.0;
        _2096 = 0.0;
        _2097 = 0.0;
    }
    bool _2099 = abs(_1896) < 0.89999997615814208984375;
    float _2101 = float(_2099);
    float _2102 = _2099 ? 0.0 : 1.0;
    float _2105 = (_2101 * _1897) - (_2102 * _1896);
    float _2106 = _2102 * _1895;
    float _2108 = (-0.0) - (_1895 * _2101);
    float _2112 = inversesqrt(dot(vec3(_2105, _2106, _2108), vec3(_2105, _2106, _2108)));
    float _2113 = _2105 * _2112;
    float _2114 = _2106 * _2112;
    float _2115 = _2112 * _2108;
    float _2118 = (_2114 * _1897) - (_2115 * _1896);
    float _2121 = (_2115 * _1895) - (_2113 * _1897);
    float _2124 = (_2113 * _1896) - (_2114 * _1895);
    float _2126;
    float _2134;
    float _2125 = 0.0;
    uint _2127 = 0u;
    float _2131;
    bool _2133;
    for (;;)
    {
        _2131 = (float(_2127) + _1939) * 0.03125;
        _2133 = _2127 == 0u;
        float frontier_phi_71_pred;
        if (_2133)
        {
            frontier_phi_71_pred = 0.0;
        }
        else
        {
            float _2275;
            float _2276;
            uint _2278;
            _2275 = 0.0;
            _2276 = 0.5;
            _2278 = _2127;
            float _2135;
            for (;;)
            {
                _2135 = ((_2278 & 1u) != 0u) ? (_2276 + _2275) : _2275;
                uint _2279 = _2278 >> 1u;
                if (_2279 == 0u)
                {
                    break;
                }
                else
                {
                    _2275 = _2135;
                    _2276 *= 0.5;
                    _2278 = _2279;
                }
            }
            frontier_phi_71_pred = _2135;
        }
        _2134 = frontier_phi_71_pred;
        float _2136 = _2134 + _1952;
        float _2140 = sqrt(_2131);
        float _2141 = ((_2136 > 1.0) ? (_2136 + (-1.0)) : _2136) * 6.283185482025146484375;
        float _2144 = cos(_2141) * _2140;
        float _2146 = sin(_2141) * _2140;
        float _2148 = sqrt(1.0 - _2131);
        float _2161 = ((_2148 * _1895) + (_2144 * _2118)) + (_2146 * _2113);
        float _2162 = ((_2148 * _1896) + (_2144 * _2121)) + (_2146 * _2114);
        float _2163 = ((_2148 * _1897) + (_2144 * _2124)) + (_2146 * _2115);
        _73._m0 = 1u;
        uvec4 _2167 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2168 = _2167.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2168, _2167.w, _2168, vec3(_1909, _1910, _1911), 9.9999997473787516355514526367188e-05, vec3(_2161, _2162, _2163), 10000.0, 1);
        float _2174 = dot(vec3(_1895, _1896, _1897), vec3(_2161, _2162, _2163));
        float _2564 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
        float _2177 = isnan(1.0) ? _2564 : (isnan(_2564) ? 1.0 : min(_2564, 1.0));
        _2126 = ((float(_73._m0 == 0u) * _2177) / (_2177 * 0.3183098733425140380859375)) + _2125;
        uint _2128 = _2127 + 1u;
        if (_2128 == 32u)
        {
            break;
        }
        else
        {
            _2125 = _2126;
            _2127 = _2128;
            continue;
        }
    }
    float _2185 = _2126 * 0.009947183541953563690185546875;
    float _2190 = dot(vec3(_1795, _1796, _1797), vec3(_1895, _1896, _1897)) * 2.0;
    vec4 _2204 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1795 - (_2190 * _1895), _1796 - (_2190 * _1896), _1797 - (_2190 * _1897)), 4.0 - (_1852 * 4.0));
    float _2209 = dot(vec3(_1912, _1914, _1915), vec3(_1895, _1896, _1897));
    float _2575 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2219 = exp2(log2(1.0 - (isnan(1.0) ? _2575 : (isnan(_2575) ? 1.0 : min(_2575, 1.0)))) * 5.0);
    vec4 _2231 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1895, _1896, _1897), 0.0);
    float _2242 = (_2095 + _2092) + (((_2231.x * _1954) + (((_2219 * (0.959999978542327880859375 - _1961)) + _1964) * _2204.x)) * _2185);
    float _2246 = (_2096 + _2093) + (((_2231.y * _1955) + (((_2219 * (0.959999978542327880859375 - _1962)) + _1966) * _2204.y)) * _2185);
    float _2250 = (_2097 + _2094) + (((_2231.z * _1956) + (((_2219 * (0.959999978542327880859375 - _1963)) + _1967) * _2204.z)) * _2185);
    float _2586 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _2597 = isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0));
    float _2608 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
    bool _2258 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2269;
    _2269.x = _2258 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2586 : (isnan(_2586) ? 1.0 : min(_2586, 1.0)));
    _2269.y = _2258 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2597 : (isnan(_2597) ? 1.0 : min(_2597, 1.0)));
    _2269.z = _2258 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2608 : (isnan(_2608) ? 1.0 : min(_2608, 1.0)));
    payload._m0 = _2269;
}


