#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_Repair_Line_snp_0_Texture2D_18;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _930;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _161 >> 16u;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _164;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder_2;
        _169 = frontier_phi_3_2_ladder;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _181 = (_174 * _166) + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 20u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 24u;
    }
    bool _214 = _175 == 0u;
    uint _215;
    if (_214)
    {
        _215 = _208;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 8u;
        }
        _215 = frontier_phi_9_10_ladder;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((((_174 * _166) + 4u) + (_176 ? (_215 + 4u) : _215)) >> 2u));
    uint _227 = _226.x;
    float _231 = float(int(uint(int(_227 << 16u) >> int(16u))));
    float _232 = float(int(uint(int(_227) >> int(16u))));
    uint _234 = (_174 * _168) + 12u;
    uint _255;
    uint _256;
    uint _257;
    uint _258;
    if (_179)
    {
        uvec4 _236 = texelFetch(l_geomAttrib_0, int(_234 >> 2u));
        uint _237 = _236.x;
        _255 = _237 & 255u;
        _256 = (_237 >> 8u) & 255u;
        _257 = (_237 >> 16u) & 255u;
        _258 = 20u;
    }
    else
    {
        uint _243 = _234 >> 2u;
        uvec2 _249 = uvec2(texelFetch(l_geomAttrib_0, int(_243)).x, texelFetch(l_geomAttrib_0, int(_243 + 1u)).x);
        uint _250 = _249.x;
        _255 = _250 & 65535u;
        _256 = _250 >> 16u;
        _257 = _249.y & 65535u;
        _258 = 24u;
    }
    uint _262;
    if (_214)
    {
        _262 = _258;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _258 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _258 + 8u;
        }
        _262 = frontier_phi_16_17_ladder;
    }
    uvec4 _271 = texelFetch(l_geomAttrib_0, int((((_174 * _168) + 4u) + (_176 ? (_262 + 4u) : _262)) >> 2u));
    uint _272 = _271.x;
    float _276 = float(int(uint(int(_272 << 16u) >> int(16u))));
    float _277 = float(int(uint(int(_272) >> int(16u))));
    uint _279 = (_174 * _169) + 12u;
    uint _300;
    uint _301;
    uint _302;
    uint _303;
    if (_179)
    {
        uvec4 _281 = texelFetch(l_geomAttrib_0, int(_279 >> 2u));
        uint _282 = _281.x;
        _300 = _282 & 255u;
        _301 = (_282 >> 8u) & 255u;
        _302 = (_282 >> 16u) & 255u;
        _303 = 20u;
    }
    else
    {
        uint _288 = _279 >> 2u;
        uvec2 _294 = uvec2(texelFetch(l_geomAttrib_0, int(_288)).x, texelFetch(l_geomAttrib_0, int(_288 + 1u)).x);
        uint _295 = _294.x;
        _300 = _295 & 65535u;
        _301 = _295 >> 16u;
        _302 = _294.y & 65535u;
        _303 = 24u;
    }
    uint _307;
    if (_214)
    {
        _307 = _303;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _303 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _303 + 8u;
        }
        _307 = frontier_phi_23_24_ladder;
    }
    uvec4 _316 = texelFetch(l_geomAttrib_0, int((((_174 * _169) + 4u) + (_176 ? (_307 + 4u) : _307)) >> 2u));
    uint _317 = _316.x;
    float _321 = float(int(uint(int(_317 << 16u) >> int(16u))));
    float _322 = float(int(uint(int(_317) >> int(16u))));
    bool _324 = _125.z == 0u;
    float _360;
    float _361;
    float _362;
    if (_324)
    {
        uint _327 = _166 * 3u;
        uvec3 _336 = uvec3(texelFetch(l_geomPositionBuffer, int(_327)).x, texelFetch(l_geomPositionBuffer, int(_327 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_327 + 2u)).x);
        _360 = uintBitsToFloat(_336.x);
        _361 = uintBitsToFloat(_336.y);
        _362 = uintBitsToFloat(_336.z);
    }
    else
    {
        uint _344 = _166 * 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomPositionBuffer, int(_344)).x, texelFetch(l_geomPositionBuffer, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _360 = unpackHalf2x16(_351).x;
        _361 = unpackHalf2x16(_351 >> 16u).x;
        _362 = unpackHalf2x16(_350.y).x;
    }
    float _398;
    float _399;
    float _400;
    if (_324)
    {
        uint _365 = _168 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _168 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_324)
    {
        uint _403 = _169 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _169 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _441 = (1.0 - hit._m0.x) - hit._m0.y;
    float _482 = _398 - _360;
    float _483 = _399 - _361;
    float _484 = _400 - _362;
    float _487 = fma(_484, gl_ObjectToWorldEXT[2u].x, fma(_483, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _482));
    float _490 = fma(_484, gl_ObjectToWorldEXT[2u].y, fma(_483, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _482));
    float _493 = fma(_484, gl_ObjectToWorldEXT[2u].z, fma(_483, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _482));
    float _494 = _436 - _360;
    float _495 = _437 - _361;
    float _496 = _438 - _362;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _512 = (((float(_205) * _441) + (-127.0)) + (float(_255) * hit._m0.x)) + (float(_300) * hit._m0.y);
    float _515 = (((float(_206) * _441) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _518 = (((float(_207) * _441) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _519 = _512 * 0.0078740157186985015869140625;
    float _521 = _515 * 0.0078740157186985015869140625;
    float _522 = _518 * 0.0078740157186985015869140625;
    uvec2 _554 = uvec2(textureSize(S_Repair_Line_snp_0_Texture2D_18, int(0u)));
    float _563 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _564 = _563 * gl_WorldRayDirectionEXT.x;
    float _565 = _563 * gl_WorldRayDirectionEXT.y;
    float _566 = _563 * gl_WorldRayDirectionEXT.z;
    float _618;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _580 = (_505 * _490) - (_502 * _493);
        float _583 = (_499 * _493) - (_505 * _487);
        float _586 = (_502 * _487) - (_499 * _490);
        float _615 = ((log2((((float(_554.y) * 0.5) * float(_554.x)) * abs((((_322 - _232) * (_276 - _231)) - ((_321 - _231) * (_277 - _232))) * 2.384185791015625e-07)) / (sqrt(((_583 * _583) + (_586 * _586)) + (_580 * _580)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))))) / abs(dot(vec3(_564, _565, _566), vec3(_519, _521, _522))));
        _618 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    }
    else
    {
        _618 = 0.0;
    }
    vec4 _622 = textureLod(sampler2D(S_Repair_Line_snp_0_Texture2D_18, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w) + ((((_276 * hit._m0.x) + (_231 * _441)) + (_321 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w) + ((((_277 * hit._m0.x) + (_232 * _441)) + (_322 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _618);
    float _640 = inversesqrt(dot(vec3(_519, _521, _522), vec3(_519, _521, _522)));
    float _641 = _640 * _519;
    float _642 = _640 * _521;
    float _643 = _640 * _522;
    float _655 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _656 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _657 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _658 = (-0.0) - _564;
    float _660 = (-0.0) - _565;
    float _661 = (-0.0) - _566;
    float _667 = float(gl_LaunchIDEXT.x);
    float _668 = float(gl_LaunchIDEXT.y);
    float _671 = float(gl_LaunchSizeEXT.x);
    float _685 = fract(fract(sin(dot(vec2(_667 / _671, _668 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _698 = fract(fract(sin(dot(vec2((_667 + 128.0) / _671, (_668 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _708 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _709 = _708.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _709, _708.w, _709, vec3(_655, _656, _657), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _775;
    float _776;
    float _777;
    if (_63._m0 == 0u)
    {
        float _730 = g_sceneCB._m0[4u].x - _564;
        float _731 = g_sceneCB._m0[4u].y - _565;
        float _732 = g_sceneCB._m0[4u].z - _566;
        float _736 = inversesqrt(dot(vec3(_730, _731, _732), vec3(_730, _731, _732)));
        float _740 = dot(vec3(_641, _642, _643), vec3(g_sceneCB._m0[4u].xyz));
        float _1009 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
        float _743 = isnan(1.0) ? _1009 : (isnan(_1009) ? 1.0 : min(_1009, 1.0));
        float _744 = dot(vec3(_641, _642, _643), vec3(_658, _660, _661));
        float _1020 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
        float _748 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_730 * _736, _731 * _736, _732 * _736));
        float _1031 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        float _759 = (exp2(log2(1.0 - (isnan(1.0) ? _1031 : (isnan(_1031) ? 1.0 : min(_1031, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _765 = (0.5 / ((_743 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1020 : (isnan(_1020) ? 1.0 : min(_1020, 1.0))))) * _743;
        float _1042 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _767 = (isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0))) * 0.31831014156341552734375;
        _775 = (_759 * g_sceneCB._m0[5u].x) * _767;
        _776 = (_759 * g_sceneCB._m0[5u].y) * _767;
        _777 = (_759 * g_sceneCB._m0[5u].z) * _767;
    }
    else
    {
        _775 = 0.0;
        _776 = 0.0;
        _777 = 0.0;
    }
    bool _779 = abs(_642) < 0.89999997615814208984375;
    float _781 = float(_779);
    float _782 = _779 ? 0.0 : 1.0;
    float _785 = (_781 * _643) - (_782 * _642);
    float _786 = _782 * _641;
    float _788 = (-0.0) - (_641 * _781);
    float _792 = inversesqrt(dot(vec3(_785, _786, _788), vec3(_785, _786, _788)));
    float _793 = _785 * _792;
    float _794 = _786 * _792;
    float _795 = _792 * _788;
    float _798 = (_794 * _643) - (_795 * _642);
    float _801 = (_795 * _641) - (_793 * _643);
    float _804 = (_793 * _642) - (_794 * _641);
    float _806;
    float _814;
    float _805 = 0.0;
    uint _807 = 0u;
    float _811;
    bool _813;
    for (;;)
    {
        _811 = (float(_807) + _685) * 0.03125;
        _813 = _807 == 0u;
        float frontier_phi_41_pred;
        if (_813)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _935;
            float _936;
            uint _938;
            _935 = 0.0;
            _936 = 0.5;
            _938 = _807;
            float _815;
            for (;;)
            {
                _815 = ((_938 & 1u) != 0u) ? (_936 + _935) : _935;
                uint _939 = _938 >> 1u;
                if (_939 == 0u)
                {
                    break;
                }
                else
                {
                    _935 = _815;
                    _936 *= 0.5;
                    _938 = _939;
                }
            }
            frontier_phi_41_pred = _815;
        }
        _814 = frontier_phi_41_pred;
        float _816 = _814 + _698;
        float _821 = sqrt(_811);
        float _822 = ((_816 > 1.0) ? (_816 + (-1.0)) : _816) * 6.283185482025146484375;
        float _825 = cos(_822) * _821;
        float _827 = sin(_822) * _821;
        float _829 = sqrt(1.0 - _811);
        float _842 = ((_829 * _641) + (_825 * _798)) + (_827 * _793);
        float _843 = ((_829 * _642) + (_825 * _801)) + (_827 * _794);
        float _844 = ((_829 * _643) + (_825 * _804)) + (_827 * _795);
        _62._m0 = 1u;
        uvec4 _848 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _849 = _848.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _849, _848.w, _849, vec3(_655, _656, _657), 9.9999997473787516355514526367188e-05, vec3(_842, _843, _844), 10000.0, 1);
        float _855 = dot(vec3(_641, _642, _643), vec3(_842, _843, _844));
        float _1053 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        float _858 = isnan(1.0) ? _1053 : (isnan(_1053) ? 1.0 : min(_1053, 1.0));
        _806 = ((float(_62._m0 == 0u) * _858) / (_858 * 0.3183098733425140380859375)) + _805;
        uint _808 = _807 + 1u;
        if (_808 == 32u)
        {
            break;
        }
        else
        {
            _805 = _806;
            _807 = _808;
            continue;
        }
    }
    float _867 = _806 * 0.009947183541953563690185546875;
    float _872 = dot(vec3(_564, _565, _566), vec3(_641, _642, _643)) * 2.0;
    vec4 _884 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_564 - (_872 * _641), _565 - (_872 * _642), _566 - (_872 * _643)), 4.0);
    float _889 = dot(vec3(_658, _660, _661), vec3(_641, _642, _643));
    float _1064 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _898 = (exp2(log2(1.0 - (isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _906 = (_775 + ((_622.x * cbMtdParam._m0[9u].x) * cbMtdParam._m0[11u].z)) + ((_884.x * _867) * _898);
    float _908 = (_776 + ((_622.y * cbMtdParam._m0[9u].y) * cbMtdParam._m0[11u].z)) + ((_884.y * _867) * _898);
    float _910 = (_777 + ((_622.z * cbMtdParam._m0[9u].z) * cbMtdParam._m0[11u].z)) + ((_884.z * _867) * _898);
    float _1075 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _1086 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
    float _1097 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    bool _918 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _929;
    _929.x = _918 ? ((_512 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1075 : (isnan(_1075) ? 1.0 : min(_1075, 1.0)));
    _929.y = _918 ? ((_515 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1086 : (isnan(_1086) ? 1.0 : min(_1086, 1.0)));
    _929.z = _918 ? ((_518 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1097 : (isnan(_1097) ? 1.0 : min(_1097, 1.0)));
    payload._m0 = _929;
}


