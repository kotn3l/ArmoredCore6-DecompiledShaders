#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_RT_PL_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_RT_PL_snp_0_Texture2D_1;
layout(set = 0, binding = 6) uniform texture2DArray C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_0;
layout(set = 0, binding = 7) uniform texture2DArray C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_1;
layout(set = 0, binding = 8) uniform texture2DArray C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1325;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    bool _235 = _179 == 0u;
    uint _236;
    if (_235)
    {
        _236 = _212 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 12u;
        }
        _236 = frontier_phi_9_10_ladder;
    }
    uvec4 _244 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + (_180 ? (_236 + 4u) : _236)) >> 2u));
    uint _245 = _244.x;
    float _249 = float(int(uint(int(_245 << 16u) >> int(16u))));
    float _250 = float(int(uint(int(_245) >> int(16u))));
    uint _251 = _178 * _172;
    uint _252 = _251 + 12u;
    uint _273;
    uint _274;
    uint _275;
    uint _276;
    if (_183)
    {
        uvec4 _254 = texelFetch(l_geomAttrib_0, int(_252 >> 2u));
        uint _255 = _254.x;
        _273 = _255 & 255u;
        _274 = (_255 >> 8u) & 255u;
        _275 = (_255 >> 16u) & 255u;
        _276 = 16u;
    }
    else
    {
        uint _261 = _252 >> 2u;
        uvec2 _267 = uvec2(texelFetch(l_geomAttrib_0, int(_261)).x, texelFetch(l_geomAttrib_0, int(_261 + 1u)).x);
        uint _268 = _267.x;
        _273 = _268 & 65535u;
        _274 = _268 >> 16u;
        _275 = _267.y & 65535u;
        _276 = 20u;
    }
    uvec4 _282 = texelFetch(l_geomAttrib_0, int((_276 + _251) >> 2u));
    uint _283 = _282.x;
    uint _295;
    if (_235)
    {
        _295 = _276 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _276 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _276 + 12u;
        }
        _295 = frontier_phi_16_17_ladder;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int(((_251 + 4u) + (_180 ? (_295 + 4u) : _295)) >> 2u));
    uint _304 = _303.x;
    float _308 = float(int(uint(int(_304 << 16u) >> int(16u))));
    float _309 = float(int(uint(int(_304) >> int(16u))));
    uint _310 = _178 * _173;
    uint _311 = _310 + 12u;
    uint _332;
    uint _333;
    uint _334;
    uint _335;
    if (_183)
    {
        uvec4 _313 = texelFetch(l_geomAttrib_0, int(_311 >> 2u));
        uint _314 = _313.x;
        _332 = _314 & 255u;
        _333 = (_314 >> 8u) & 255u;
        _334 = (_314 >> 16u) & 255u;
        _335 = 16u;
    }
    else
    {
        uint _320 = _311 >> 2u;
        uvec2 _326 = uvec2(texelFetch(l_geomAttrib_0, int(_320)).x, texelFetch(l_geomAttrib_0, int(_320 + 1u)).x);
        uint _327 = _326.x;
        _332 = _327 & 65535u;
        _333 = _327 >> 16u;
        _334 = _326.y & 65535u;
        _335 = 20u;
    }
    uvec4 _341 = texelFetch(l_geomAttrib_0, int((_335 + _310) >> 2u));
    uint _342 = _341.x;
    uint _354;
    if (_235)
    {
        _354 = _335 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _335 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _335 + 12u;
        }
        _354 = frontier_phi_23_24_ladder;
    }
    uvec4 _362 = texelFetch(l_geomAttrib_0, int(((_310 + 4u) + (_180 ? (_354 + 4u) : _354)) >> 2u));
    uint _363 = _362.x;
    float _367 = float(int(uint(int(_363 << 16u) >> int(16u))));
    float _368 = float(int(uint(int(_363) >> int(16u))));
    bool _370 = _129.z == 0u;
    float _406;
    float _407;
    float _408;
    if (_370)
    {
        uint _373 = _170 * 3u;
        uvec3 _382 = uvec3(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_373 + 2u)).x);
        _406 = uintBitsToFloat(_382.x);
        _407 = uintBitsToFloat(_382.y);
        _408 = uintBitsToFloat(_382.z);
    }
    else
    {
        uint _390 = _170 * 2u;
        uvec2 _396 = uvec2(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x);
        uint _397 = _396.x;
        _406 = unpackHalf2x16(_397).x;
        _407 = unpackHalf2x16(_397 >> 16u).x;
        _408 = unpackHalf2x16(_396.y).x;
    }
    float _444;
    float _445;
    float _446;
    if (_370)
    {
        uint _411 = _172 * 3u;
        uvec3 _420 = uvec3(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_411 + 2u)).x);
        _444 = uintBitsToFloat(_420.x);
        _445 = uintBitsToFloat(_420.y);
        _446 = uintBitsToFloat(_420.z);
    }
    else
    {
        uint _428 = _172 * 2u;
        uvec2 _434 = uvec2(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x);
        uint _435 = _434.x;
        _444 = unpackHalf2x16(_435).x;
        _445 = unpackHalf2x16(_435 >> 16u).x;
        _446 = unpackHalf2x16(_434.y).x;
    }
    float _482;
    float _483;
    float _484;
    if (_370)
    {
        uint _449 = _173 * 3u;
        uvec3 _458 = uvec3(texelFetch(l_geomPositionBuffer, int(_449)).x, texelFetch(l_geomPositionBuffer, int(_449 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_449 + 2u)).x);
        _482 = uintBitsToFloat(_458.x);
        _483 = uintBitsToFloat(_458.y);
        _484 = uintBitsToFloat(_458.z);
    }
    else
    {
        uint _466 = _173 * 2u;
        uvec2 _472 = uvec2(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x);
        uint _473 = _472.x;
        _482 = unpackHalf2x16(_473).x;
        _483 = unpackHalf2x16(_473 >> 16u).x;
        _484 = unpackHalf2x16(_472.y).x;
    }
    float _487 = (1.0 - hit._m0.x) - hit._m0.y;
    float _521 = (_308 - _249) * 0.00048828125;
    float _523 = (_309 - _250) * 0.00048828125;
    float _526 = (_367 - _249) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _549 = _444 - _406;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _554 = fma(_551, gl_ObjectToWorldEXT[2u].x, fma(_550, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _549));
    float _557 = fma(_551, gl_ObjectToWorldEXT[2u].y, fma(_550, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _549));
    float _560 = fma(_551, gl_ObjectToWorldEXT[2u].z, fma(_550, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _549));
    float _561 = _482 - _406;
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _566 = fma(_563, gl_ObjectToWorldEXT[2u].x, fma(_562, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _561));
    float _569 = fma(_563, gl_ObjectToWorldEXT[2u].y, fma(_562, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _561));
    float _572 = fma(_563, gl_ObjectToWorldEXT[2u].z, fma(_562, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _561));
    float _573 = (((_308 * hit._m0.x) + (_249 * _487)) + (_367 * hit._m0.y)) * 0.00048828125;
    float _574 = (((_309 * hit._m0.x) + (_250 * _487)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _578 = (((float(_209) * _487) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _581 = (((float(_210) * _487) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _584 = (((float(_211) * _487) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = _578 * 0.0078740157186985015869140625;
    float _587 = _581 * 0.0078740157186985015869140625;
    float _588 = _584 * 0.0078740157186985015869140625;
    float _601 = ((((float(_221 & 255u) * _487) + (-127.0)) + (float(_283 & 255u) * hit._m0.x)) + (float(_342 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float((_221 >> 8u) & 255u) * _487) + (-127.0)) + (float((_283 >> 8u) & 255u) * hit._m0.x)) + (float((_342 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_221 >> 16u) & 255u) * _487) + (-127.0)) + (float((_283 >> 16u) & 255u) * hit._m0.x)) + (float((_342 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float(_221 >> 24u) * _487) + (-127.0)) + (float(_283 >> 24u) * hit._m0.x)) + (float(_342 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _614 = ((_602 * _588) - (_603 * _587)) * _604;
    float _615 = ((_603 * _585) - (_601 * _588)) * _604;
    float _616 = ((_601 * _587) - (_602 * _585)) * _604;
    float _620 = inversesqrt(dot(vec3(_614, _615, _616), vec3(_614, _615, _616)));
    float _641 = log2(0.0);
    bool _645 = exp2(_641 * cbMtdParam._m0[20u].w) < cbMtdParam._m0[21u].x;
    float _646;
    float _648;
    float _650;
    if (_645)
    {
        _646 = cbMtdParam._m0[18u].x;
        _648 = cbMtdParam._m0[18u].y;
        _650 = cbMtdParam._m0[18u].z;
    }
    else
    {
        _646 = cbMtdParam._m0[17u].x;
        _648 = cbMtdParam._m0[17u].y;
        _650 = cbMtdParam._m0[17u].z;
    }
    float _656;
    if (_645)
    {
        _656 = cbMtdParam._m0[19u].y;
    }
    else
    {
        _656 = cbMtdParam._m0[19u].z;
    }
    float _663;
    float _665;
    if (_645)
    {
        _663 = cbMtdParam._m0[26u].x;
        _665 = cbMtdParam._m0[26u].y;
    }
    else
    {
        _663 = cbMtdParam._m0[22u].x;
        _665 = cbMtdParam._m0[22u].y;
    }
    float _667 = _663 * _573;
    float _668 = _665 * _574;
    float _679 = floor(_656);
    vec4 _684 = textureLod(sampler2DArray(C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[6u].x * _667) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _668) + cbTextureTilingScale._m0[6u].w, _679), 0.0);
    uvec2 _706 = uvec2(textureSize(C_Enemy_AMSN_RT_PL_snp_0_Texture2D_0, int(0u)));
    bool _711 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _766;
    if (_711)
    {
        float _725 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _731 = (_572 * _557) - (_569 * _560);
        float _734 = (_566 * _560) - (_572 * _554);
        float _737 = (_569 * _554) - (_566 * _557);
        float _764 = ((log2((((float(_706.y) * 0.5) * float(_706.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_734 * _734) + (_737 * _737)) + (_731 * _731)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_725 * gl_WorldRayDirectionEXT.x, _725 * gl_WorldRayDirectionEXT.y, _725 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _766 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _769 = textureLod(sampler2D(C_Enemy_AMSN_RT_PL_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _573) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _574) + cbTextureTilingScale._m0[0u].w), _766);
    float _777 = (((_646 * cbMtdParam._m0[19u].w) * _684.x) * cbMtdParam._m0[9u].x) * _769.x;
    float _781 = (((_648 * cbMtdParam._m0[19u].w) * _684.y) * cbMtdParam._m0[9u].y) * _769.y;
    float _785 = (((_650 * cbMtdParam._m0[19u].w) * _684.z) * cbMtdParam._m0[9u].z) * _769.z;
    uvec2 _797 = uvec2(textureSize(C_Enemy_AMSN_RT_PL_snp_0_Texture2D_1, int(0u)));
    float _801 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _802 = _801 * gl_WorldRayDirectionEXT.x;
    float _803 = _801 * gl_WorldRayDirectionEXT.y;
    float _804 = _801 * gl_WorldRayDirectionEXT.z;
    float _848;
    if (_711)
    {
        float _814 = (_572 * _557) - (_569 * _560);
        float _817 = (_566 * _560) - (_572 * _554);
        float _820 = (_569 * _554) - (_566 * _557);
        float _846 = ((log2((((float(_797.y) * 0.5) * float(_797.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_817 * _817) + (_820 * _820)) + (_814 * _814)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_802, _803, _804), vec3(_585, _587, _588))));
        _848 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    }
    else
    {
        _848 = 0.0;
    }
    vec4 _851 = textureLod(sampler2D(C_Enemy_AMSN_RT_PL_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _573) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _574) + cbTextureTilingScale._m0[1u].w), _848);
    float _855 = _851.z;
    float _66[2];
    float _67[2];
    _66[0u] = cbMtdParam._m0[25u].x;
    _67[0u] = cbMtdParam._m0[25u].y;
    _66[1u] = cbMtdParam._m0[25u].z;
    _67[1u] = cbMtdParam._m0[25u].w;
    float _883 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    uint _885 = uint(int(isnan(1.0) ? _883 : (isnan(_883) ? 1.0 : min(_883, 1.0))));
    float _890 = _67[_885] + textureLod(sampler2DArray(C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_2, SS_WrapLinear), vec3((cbTextureTilingScale._m0[8u].x * _667) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _668) + cbTextureTilingScale._m0[8u].w, _679), 0.0).x;
    vec4 _908 = textureLod(sampler2DArray(C_Enemy_AMSN_RT_PL_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[7u].x * _667) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _668) + cbTextureTilingScale._m0[7u].w, _679), 0.0);
    float _915 = (_908.x * 2.0) + (-1.0);
    float _916 = (_908.y * 2.0) + (-1.0);
    float _917 = dot(vec2(_915, _916), vec2(_915, _916));
    float _1427 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _922 = sqrt(1.0 - (isnan(1.0) ? _1427 : (isnan(_1427) ? 1.0 : min(_1427, 1.0))));
    float _929 = (cbMtdParam._m0[20u].x * (((_855 * 2.0) * (_908.z + _66[_885])) - _855)) + _855;
    float _933 = (cbMtdParam._m0[20u].y * ((_851.x * 2.0) + (-1.0))) + _915;
    float _934 = (cbMtdParam._m0[20u].y * ((_851.y * 2.0) + (-1.0))) + _916;
    float _937 = fma(_922, _585, fma(_934, _601, (_620 * _614) * _933));
    float _940 = fma(_922, _587, fma(_934, _602, (_620 * _615) * _933));
    float _943 = fma(_922, _588, fma(_934, _603, (_620 * _616) * _933));
    float _947 = inversesqrt(dot(vec3(_937, _940, _943), vec3(_937, _940, _943)));
    float _948 = _947 * _937;
    float _949 = _947 * _940;
    float _950 = _947 * _943;
    float _962 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _963 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _964 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _965 = (-0.0) - _802;
    float _967 = (-0.0) - _803;
    float _968 = (-0.0) - _804;
    float _974 = float(gl_LaunchIDEXT.x);
    float _975 = float(gl_LaunchIDEXT.y);
    float _978 = float(gl_LaunchSizeEXT.x);
    float _992 = fract(fract(sin(dot(vec2(_974 / _978, _975 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1005 = fract(fract(sin(dot(vec2((_974 + 128.0) / _978, (_975 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1006 = 1.0 - _890;
    float _1007 = _1006 * _777;
    float _1008 = _1006 * _781;
    float _1009 = _1006 * _785;
    float _1014 = _890 * (_777 + (-0.039999999105930328369140625));
    float _1015 = _890 * (_781 + (-0.039999999105930328369140625));
    float _1016 = _890 * (_785 + (-0.039999999105930328369140625));
    float _1017 = _1014 + 0.039999999105930328369140625;
    float _1019 = _1015 + 0.039999999105930328369140625;
    float _1020 = _1016 + 0.039999999105930328369140625;
    _71._m0 = 1u;
    uvec4 _1030 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1031 = _1030.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1031, _1030.w, _1031, vec3(_962, _963, _964), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1146;
    float _1147;
    float _1148;
    float _1149;
    float _1150;
    float _1151;
    if (_71._m0 == 0u)
    {
        float _1052 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_948, _949, _950));
        float _1438 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1055 = isnan(1.0) ? _1438 : (isnan(_1438) ? 1.0 : min(_1438, 1.0));
        float _1074 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _929) * 0.949999988079071044921875);
        float _1075 = _1074 * _1074;
        float _1076 = g_sceneCB._m0[4u].x - _802;
        float _1077 = g_sceneCB._m0[4u].y - _803;
        float _1078 = g_sceneCB._m0[4u].z - _804;
        float _1082 = inversesqrt(dot(vec3(_1076, _1077, _1078), vec3(_1076, _1077, _1078)));
        float _1083 = _1082 * _1076;
        float _1084 = _1082 * _1077;
        float _1085 = _1082 * _1078;
        float _1086 = dot(vec3(_948, _949, _950), vec3(g_sceneCB._m0[4u].xyz));
        float _1449 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1089 = isnan(1.0) ? _1449 : (isnan(_1449) ? 1.0 : min(_1449, 1.0));
        float _1090 = dot(vec3(_948, _949, _950), vec3(_965, _967, _968));
        float _1460 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1093 = isnan(1.0) ? _1460 : (isnan(_1460) ? 1.0 : min(_1460, 1.0));
        float _1094 = dot(vec3(_948, _949, _950), vec3(_1083, _1084, _1085));
        float _1471 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1097 = isnan(1.0) ? _1471 : (isnan(_1471) ? 1.0 : min(_1471, 1.0));
        float _1098 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1083, _1084, _1085));
        float _1482 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1102 = _1075 * _1075;
        float _1106 = ((_1097 * _1097) * (_1102 + (-1.0))) + 1.0;
        float _1115 = exp2(log2(1.0 - (isnan(1.0) ? _1482 : (isnan(_1482) ? 1.0 : min(_1482, 1.0)))) * 5.0);
        float _1126 = 1.0 - _1075;
        float _1137 = (0.5 / (((_1093 * ((_1089 * _1126) + _1075)) + 9.9999999392252902907785028219223e-09) + (((_1093 * _1126) + _1075) * _1089))) * _1089;
        float _1493 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1139 = (isnan(1.0) ? _1493 : (isnan(_1493) ? 1.0 : min(_1493, 1.0))) * (_1102 / ((_1106 * _1106) * 3.141590118408203125));
        _1146 = ((_1007 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1055;
        _1147 = ((_1008 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1055;
        _1148 = ((_1009 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1055;
        _1149 = (((_1115 * (0.959999978542327880859375 - _1014)) + _1017) * g_sceneCB._m0[5u].x) * _1139;
        _1150 = (((_1115 * (0.959999978542327880859375 - _1015)) + _1019) * g_sceneCB._m0[5u].y) * _1139;
        _1151 = (((_1115 * (0.959999978542327880859375 - _1016)) + _1020) * g_sceneCB._m0[5u].z) * _1139;
    }
    else
    {
        _1146 = 0.0;
        _1147 = 0.0;
        _1148 = 0.0;
        _1149 = 0.0;
        _1150 = 0.0;
        _1151 = 0.0;
    }
    bool _1153 = abs(_949) < 0.89999997615814208984375;
    float _1155 = float(_1153);
    float _1156 = _1153 ? 0.0 : 1.0;
    float _1159 = (_1155 * _950) - (_1156 * _949);
    float _1160 = _1156 * _948;
    float _1162 = (-0.0) - (_948 * _1155);
    float _1166 = inversesqrt(dot(vec3(_1159, _1160, _1162), vec3(_1159, _1160, _1162)));
    float _1167 = _1159 * _1166;
    float _1168 = _1160 * _1166;
    float _1169 = _1166 * _1162;
    float _1172 = (_1168 * _950) - (_1169 * _949);
    float _1175 = (_1169 * _948) - (_1167 * _950);
    float _1178 = (_1167 * _949) - (_1168 * _948);
    float _1180;
    float _1188;
    float _1179 = 0.0;
    uint _1181 = 0u;
    float _1185;
    bool _1187;
    for (;;)
    {
        _1185 = (float(_1181) + _992) * 0.03125;
        _1187 = _1181 == 0u;
        float frontier_phi_49_pred;
        if (_1187)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1330;
            float _1331;
            uint _1333;
            _1330 = 0.0;
            _1331 = 0.5;
            _1333 = _1181;
            float _1189;
            for (;;)
            {
                _1189 = ((_1333 & 1u) != 0u) ? (_1331 + _1330) : _1330;
                uint _1334 = _1333 >> 1u;
                if (_1334 == 0u)
                {
                    break;
                }
                else
                {
                    _1330 = _1189;
                    _1331 *= 0.5;
                    _1333 = _1334;
                }
            }
            frontier_phi_49_pred = _1189;
        }
        _1188 = frontier_phi_49_pred;
        float _1190 = _1188 + _1005;
        float _1194 = sqrt(_1185);
        float _1195 = ((_1190 > 1.0) ? (_1190 + (-1.0)) : _1190) * 6.283185482025146484375;
        float _1198 = cos(_1195) * _1194;
        float _1200 = sin(_1195) * _1194;
        float _1202 = sqrt(1.0 - _1185);
        float _1215 = ((_1202 * _948) + (_1198 * _1172)) + (_1200 * _1167);
        float _1216 = ((_1202 * _949) + (_1198 * _1175)) + (_1200 * _1168);
        float _1217 = ((_1202 * _950) + (_1198 * _1178)) + (_1200 * _1169);
        _70._m0 = 1u;
        uvec4 _1221 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1222 = _1221.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1222, _1221.w, _1222, vec3(_962, _963, _964), 9.9999997473787516355514526367188e-05, vec3(_1215, _1216, _1217), 10000.0, 1);
        float _1228 = dot(vec3(_948, _949, _950), vec3(_1215, _1216, _1217));
        float _1504 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1231 = isnan(1.0) ? _1504 : (isnan(_1504) ? 1.0 : min(_1504, 1.0));
        _1180 = ((float(_70._m0 == 0u) * _1231) / (_1231 * 0.3183098733425140380859375)) + _1179;
        uint _1182 = _1181 + 1u;
        if (_1182 == 32u)
        {
            break;
        }
        else
        {
            _1179 = _1180;
            _1181 = _1182;
            continue;
        }
    }
    float _1239 = _1180 * 0.009947183541953563690185546875;
    float _1244 = dot(vec3(_802, _803, _804), vec3(_948, _949, _950)) * 2.0;
    vec4 _1258 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_802 - (_1244 * _948), _803 - (_1244 * _949), _804 - (_1244 * _950)), 4.0 - (_929 * 4.0));
    float _1263 = dot(vec3(_965, _967, _968), vec3(_948, _949, _950));
    float _1515 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
    float _1273 = exp2(log2(1.0 - (isnan(1.0) ? _1515 : (isnan(_1515) ? 1.0 : min(_1515, 1.0)))) * 5.0);
    vec4 _1285 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_948, _949, _950), 0.0);
    float _1296 = (_1149 + _1146) + (((_1285.x * _1007) + (((_1273 * (0.959999978542327880859375 - _1014)) + _1017) * _1258.x)) * _1239);
    float _1300 = (_1150 + _1147) + (((_1285.y * _1008) + (((_1273 * (0.959999978542327880859375 - _1015)) + _1019) * _1258.y)) * _1239);
    float _1304 = (_1151 + _1148) + (((_1285.z * _1009) + (((_1273 * (0.959999978542327880859375 - _1016)) + _1020) * _1258.z)) * _1239);
    float _1526 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    float _1537 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
    float _1548 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
    bool _1313 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1324;
    _1324.x = _1313 ? ((_578 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1526 : (isnan(_1526) ? 1.0 : min(_1526, 1.0)));
    _1324.y = _1313 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1537 : (isnan(_1537) ? 1.0 : min(_1537, 1.0)));
    _1324.z = _1313 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1548 : (isnan(_1548) ? 1.0 : min(_1548, 1.0)));
    payload._m0 = _1324;
}


