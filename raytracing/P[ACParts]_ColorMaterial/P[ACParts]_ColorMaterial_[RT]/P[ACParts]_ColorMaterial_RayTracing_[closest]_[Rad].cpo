#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _75
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 10) uniform texture2DArray P_ACParts_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 11) uniform texture2DArray P_ACParts_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _75 _77;
layout(location = 2) rayPayloadEXT _75 _78;

vec3 _1988;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _116 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _125 = sqrt(((_117 * _117) + (_116 * _116)) + (_118 * _118)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _136 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _137 = _136.y;
    uint _177;
    uint _179;
    uint _180;
    if (_136.x == 0u)
    {
        uint _145 = (_137 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _154 = uvec3(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_145 + 2u)).x);
        _177 = _154.x;
        _179 = _154.y;
        _180 = _154.z;
    }
    else
    {
        uint _158 = uint(gl_PrimitiveID) * 6u;
        uint _160 = _158 & 4294967292u;
        uint _163 = (_137 + _160) >> 2u;
        uvec2 _170 = uvec2(texelFetch(l_geomIndexBuffer, int(_163)).x, texelFetch(l_geomIndexBuffer, int(_163 + 1u)).x);
        uint _171 = _170.x;
        uint _172 = _170.y;
        uint _174 = _171 >> 16u;
        uint _175 = _172 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_160 == _158)
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _171 & 65535u;
            frontier_phi_3_2_ladder_2 = _175;
        }
        else
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _174;
            frontier_phi_3_2_ladder_2 = _172 >> 16u;
        }
        _177 = frontier_phi_3_2_ladder_1;
        _179 = frontier_phi_3_2_ladder;
        _180 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _184 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _185 = _184.x;
    uint _186 = _184.z;
    bool _187 = _186 != 0u;
    bool _189 = _136.w == 0u;
    bool _190 = _187 || _189;
    uint _191 = _185 * _177;
    uint _192 = _191 + 12u;
    uint _216;
    uint _217;
    uint _218;
    uint _219;
    if (_190)
    {
        uvec4 _195 = texelFetch(l_geomAttrib_0, int(_192 >> 2u));
        uint _196 = _195.x;
        _216 = _196 & 255u;
        _217 = (_196 >> 8u) & 255u;
        _218 = (_196 >> 16u) & 255u;
        _219 = 16u;
    }
    else
    {
        uint _204 = _192 >> 2u;
        uvec2 _210 = uvec2(texelFetch(l_geomAttrib_0, int(_204)).x, texelFetch(l_geomAttrib_0, int(_204 + 1u)).x);
        uint _211 = _210.x;
        _216 = _211 & 65535u;
        _217 = _211 >> 16u;
        _218 = _210.y & 65535u;
        _219 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_219 + _191) >> 2u));
    uint _228 = _227.x;
    bool _242 = _186 == 0u;
    uint _243;
    if (_242)
    {
        _243 = _219 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_189)
        {
            frontier_phi_9_10_ladder = _219 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _219 + 12u;
        }
        _243 = frontier_phi_9_10_ladder;
    }
    uint _247 = _187 ? (_243 + 4u) : _243;
    uvec4 _251 = texelFetch(l_geomAttrib_0, int(((_191 + 4u) + _247) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uvec4 _261 = texelFetch(l_geomAttrib_0, int(((_191 + 12u) + _247) >> 2u));
    uint _262 = _261.x;
    uint _271 = _185 * _179;
    uint _272 = _271 + 12u;
    uint _293;
    uint _294;
    uint _295;
    uint _296;
    if (_190)
    {
        uvec4 _274 = texelFetch(l_geomAttrib_0, int(_272 >> 2u));
        uint _275 = _274.x;
        _293 = _275 & 255u;
        _294 = (_275 >> 8u) & 255u;
        _295 = (_275 >> 16u) & 255u;
        _296 = 16u;
    }
    else
    {
        uint _281 = _272 >> 2u;
        uvec2 _287 = uvec2(texelFetch(l_geomAttrib_0, int(_281)).x, texelFetch(l_geomAttrib_0, int(_281 + 1u)).x);
        uint _288 = _287.x;
        _293 = _288 & 65535u;
        _294 = _288 >> 16u;
        _295 = _287.y & 65535u;
        _296 = 20u;
    }
    uvec4 _302 = texelFetch(l_geomAttrib_0, int((_296 + _271) >> 2u));
    uint _303 = _302.x;
    uint _315;
    if (_242)
    {
        _315 = _296 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_189)
        {
            frontier_phi_16_17_ladder = _296 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _296 + 12u;
        }
        _315 = frontier_phi_16_17_ladder;
    }
    uint _319 = _187 ? (_315 + 4u) : _315;
    uvec4 _323 = texelFetch(l_geomAttrib_0, int(((_271 + 4u) + _319) >> 2u));
    uint _324 = _323.x;
    float _328 = float(int(uint(int(_324 << 16u) >> int(16u))));
    float _329 = float(int(uint(int(_324) >> int(16u))));
    uvec4 _333 = texelFetch(l_geomAttrib_0, int(((_271 + 12u) + _319) >> 2u));
    uint _334 = _333.x;
    uint _343 = _185 * _180;
    uint _344 = _343 + 12u;
    uint _365;
    uint _366;
    uint _367;
    uint _368;
    if (_190)
    {
        uvec4 _346 = texelFetch(l_geomAttrib_0, int(_344 >> 2u));
        uint _347 = _346.x;
        _365 = _347 & 255u;
        _366 = (_347 >> 8u) & 255u;
        _367 = (_347 >> 16u) & 255u;
        _368 = 16u;
    }
    else
    {
        uint _353 = _344 >> 2u;
        uvec2 _359 = uvec2(texelFetch(l_geomAttrib_0, int(_353)).x, texelFetch(l_geomAttrib_0, int(_353 + 1u)).x);
        uint _360 = _359.x;
        _365 = _360 & 65535u;
        _366 = _360 >> 16u;
        _367 = _359.y & 65535u;
        _368 = 20u;
    }
    uvec4 _374 = texelFetch(l_geomAttrib_0, int((_368 + _343) >> 2u));
    uint _375 = _374.x;
    uint _387;
    if (_242)
    {
        _387 = _368 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_189)
        {
            frontier_phi_23_24_ladder = _368 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _368 + 12u;
        }
        _387 = frontier_phi_23_24_ladder;
    }
    uint _391 = _187 ? (_387 + 4u) : _387;
    uvec4 _395 = texelFetch(l_geomAttrib_0, int(((_343 + 4u) + _391) >> 2u));
    uint _396 = _395.x;
    float _400 = float(int(uint(int(_396 << 16u) >> int(16u))));
    float _401 = float(int(uint(int(_396) >> int(16u))));
    uvec4 _405 = texelFetch(l_geomAttrib_0, int(((_343 + 12u) + _391) >> 2u));
    uint _406 = _405.x;
    bool _416 = _136.z == 0u;
    float _452;
    float _453;
    float _454;
    if (_416)
    {
        uint _419 = _177 * 3u;
        uvec3 _428 = uvec3(texelFetch(l_geomPositionBuffer, int(_419)).x, texelFetch(l_geomPositionBuffer, int(_419 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_419 + 2u)).x);
        _452 = uintBitsToFloat(_428.x);
        _453 = uintBitsToFloat(_428.y);
        _454 = uintBitsToFloat(_428.z);
    }
    else
    {
        uint _436 = _177 * 2u;
        uvec2 _442 = uvec2(texelFetch(l_geomPositionBuffer, int(_436)).x, texelFetch(l_geomPositionBuffer, int(_436 + 1u)).x);
        uint _443 = _442.x;
        _452 = unpackHalf2x16(_443).x;
        _453 = unpackHalf2x16(_443 >> 16u).x;
        _454 = unpackHalf2x16(_442.y).x;
    }
    float _490;
    float _491;
    float _492;
    if (_416)
    {
        uint _457 = _179 * 3u;
        uvec3 _466 = uvec3(texelFetch(l_geomPositionBuffer, int(_457)).x, texelFetch(l_geomPositionBuffer, int(_457 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_457 + 2u)).x);
        _490 = uintBitsToFloat(_466.x);
        _491 = uintBitsToFloat(_466.y);
        _492 = uintBitsToFloat(_466.z);
    }
    else
    {
        uint _474 = _179 * 2u;
        uvec2 _480 = uvec2(texelFetch(l_geomPositionBuffer, int(_474)).x, texelFetch(l_geomPositionBuffer, int(_474 + 1u)).x);
        uint _481 = _480.x;
        _490 = unpackHalf2x16(_481).x;
        _491 = unpackHalf2x16(_481 >> 16u).x;
        _492 = unpackHalf2x16(_480.y).x;
    }
    float _528;
    float _529;
    float _530;
    if (_416)
    {
        uint _495 = _180 * 3u;
        uvec3 _504 = uvec3(texelFetch(l_geomPositionBuffer, int(_495)).x, texelFetch(l_geomPositionBuffer, int(_495 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_495 + 2u)).x);
        _528 = uintBitsToFloat(_504.x);
        _529 = uintBitsToFloat(_504.y);
        _530 = uintBitsToFloat(_504.z);
    }
    else
    {
        uint _512 = _180 * 2u;
        uvec2 _518 = uvec2(texelFetch(l_geomPositionBuffer, int(_512)).x, texelFetch(l_geomPositionBuffer, int(_512 + 1u)).x);
        uint _519 = _518.x;
        _528 = unpackHalf2x16(_519).x;
        _529 = unpackHalf2x16(_519 >> 16u).x;
        _530 = unpackHalf2x16(_518.y).x;
    }
    float _533 = (1.0 - hit._m0.x) - hit._m0.y;
    float _586 = (_328 - _256) * 0.00048828125;
    float _588 = (_329 - _257) * 0.00048828125;
    float _591 = (_400 - _256) * 0.00048828125;
    float _592 = (_401 - _257) * 0.00048828125;
    float _614 = _490 - _452;
    float _615 = _491 - _453;
    float _616 = _492 - _454;
    float _619 = fma(_616, gl_ObjectToWorldEXT[2u].x, fma(_615, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _614));
    float _622 = fma(_616, gl_ObjectToWorldEXT[2u].y, fma(_615, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _614));
    float _625 = fma(_616, gl_ObjectToWorldEXT[2u].z, fma(_615, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _614));
    float _626 = _528 - _452;
    float _627 = _529 - _453;
    float _628 = _530 - _454;
    float _631 = fma(_628, gl_ObjectToWorldEXT[2u].x, fma(_627, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _626));
    float _634 = fma(_628, gl_ObjectToWorldEXT[2u].y, fma(_627, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _626));
    float _637 = fma(_628, gl_ObjectToWorldEXT[2u].z, fma(_627, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _626));
    float _638 = (((_328 * hit._m0.x) + (_256 * _533)) + (_400 * hit._m0.y)) * 0.00048828125;
    float _639 = (((_329 * hit._m0.x) + (_257 * _533)) + (_401 * hit._m0.y)) * 0.00048828125;
    float _643 = (((float(_216) * _533) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_365) * hit._m0.y);
    float _646 = (((float(_217) * _533) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_366) * hit._m0.y);
    float _649 = (((float(_218) * _533) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_367) * hit._m0.y);
    float _650 = _643 * 0.0078740157186985015869140625;
    float _652 = _646 * 0.0078740157186985015869140625;
    float _653 = _649 * 0.0078740157186985015869140625;
    float _666 = ((((float(_228 & 255u) * _533) + (-127.0)) + (float(_303 & 255u) * hit._m0.x)) + (float(_375 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _667 = ((((float((_228 >> 8u) & 255u) * _533) + (-127.0)) + (float((_303 >> 8u) & 255u) * hit._m0.x)) + (float((_375 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _668 = ((((float((_228 >> 16u) & 255u) * _533) + (-127.0)) + (float((_303 >> 16u) & 255u) * hit._m0.x)) + (float((_375 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _669 = ((((float(_228 >> 24u) * _533) + (-127.0)) + (float(_303 >> 24u) * hit._m0.x)) + (float(_375 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _679 = ((_667 * _653) - (_668 * _652)) * _669;
    float _680 = ((_668 * _650) - (_666 * _653)) * _669;
    float _681 = ((_666 * _652) - (_667 * _650)) * _669;
    float _685 = inversesqrt(dot(vec3(_679, _680, _681), vec3(_679, _680, _681)));
    uvec2 _706 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_7, int(0u)));
    bool _711 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _764;
    if (_711)
    {
        float _722 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _728 = (_637 * _622) - (_634 * _625);
        float _731 = (_631 * _625) - (_637 * _619);
        float _734 = (_634 * _619) - (_631 * _622);
        float _761 = ((log2((((float(_706.y) * 0.5) * float(_706.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_731 * _731) + (_734 * _734)) + (_728 * _728)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_722 * gl_WorldRayDirectionEXT.x, _722 * gl_WorldRayDirectionEXT.y, _722 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _764 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    }
    else
    {
        _764 = 0.0;
    }
    vec4 _768 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _638) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _639) + cbTextureTilingScale._m0[7u].w), _764);
    float _774 = log2(0.0);
    float _776 = exp2(_774 * cbMtdParam._m0[24u].y);
    float _780 = _776 - ((((((float(_334 & 255u) * hit._m0.x) + (float(_262 & 255u) * _533)) + (float(_406 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[24u].x) * _776);
    float _781 = _776 - ((((((float((_334 >> 8u) & 255u) * hit._m0.x) + (float((_262 >> 8u) & 255u) * _533)) + (float((_406 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[24u].x) * _776);
    float _782 = _776 - ((((((float((_334 >> 16u) & 255u) * hit._m0.x) + (float((_262 >> 16u) & 255u) * _533)) + (float((_406 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[24u].x) * _776);
    float _783 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _784 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _785 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _786 = isnan(1.0) ? _783 : (isnan(_783) ? 1.0 : min(_783, 1.0));
    float _787 = isnan(1.0) ? _784 : (isnan(_784) ? 1.0 : min(_784, 1.0));
    float _788 = isnan(1.0) ? _785 : (isnan(_785) ? 1.0 : min(_785, 1.0));
    uvec2 _803 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_0, int(0u)));
    float _854;
    if (_711)
    {
        float _814 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _820 = (_637 * _622) - (_634 * _625);
        float _823 = (_631 * _625) - (_637 * _619);
        float _826 = (_634 * _619) - (_631 * _622);
        float _852 = ((log2((((float(_803.y) * 0.5) * float(_803.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_823 * _823) + (_826 * _826)) + (_820 * _820)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_814 * gl_WorldRayDirectionEXT.x, _814 * gl_WorldRayDirectionEXT.y, _814 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _854 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    }
    else
    {
        _854 = 0.0;
    }
    vec4 _857 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _638) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _639) + cbTextureTilingScale._m0[0u].w), _854);
    float _861 = _857.z;
    float _862 = _857.w;
    float _863 = 1.0 - _862;
    float _873 = exp2(log2((1.0 - (_863 * _861)) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[26u].x);
    float _874 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _875 = isnan(1.0) ? _874 : (isnan(_874) ? 1.0 : min(_874, 1.0));
    float _884 = exp2(log2(cbMtdParam._m0[26u].z * (1.0 - ((_863 * _863) * _861))) * cbMtdParam._m0[26u].y);
    float _885 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    uvec2 _898 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_14, int(0u)));
    float _949;
    if (_711)
    {
        float _909 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _915 = (_637 * _622) - (_634 * _625);
        float _918 = (_631 * _625) - (_637 * _619);
        float _921 = (_634 * _619) - (_631 * _622);
        float _947 = ((log2((((float(_898.y) * 0.5) * float(_898.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_918 * _918) + (_921 * _921)) + (_915 * _915)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_909 * gl_WorldRayDirectionEXT.x, _909 * gl_WorldRayDirectionEXT.y, _909 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _949 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    }
    else
    {
        _949 = 0.0;
    }
    vec4 _952 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _638) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _639) + cbTextureTilingScale._m0[2u].w), _949);
    float _958 = (_952.y * ((isnan(1.0) ? _885 : (isnan(_885) ? 1.0 : min(_885, 1.0))) - _862)) + _862;
    float _965 = roundEven(5.0 - ((_952.x + (-0.02500000037252902984619140625)) * 8.0));
    float _966 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    float _967 = isnan(4.0) ? _966 : (isnan(_966) ? 4.0 : min(_966, 4.0));
    float _980 = floor(_967);
    vec4 _984 = textureLod(sampler2DArray(P_ACParts_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[10u].x * _638) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _639) + cbTextureTilingScale._m0[10u].w, _980), 0.0);
    float _994 = cbMtdParam._m0[10u].x * _984.x;
    float _995 = cbMtdParam._m0[10u].y * _984.y;
    float _996 = cbMtdParam._m0[10u].z * _984.z;
    uvec2 _1008 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_1, int(0u)));
    float _1059;
    if (_711)
    {
        float _1019 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1025 = (_637 * _622) - (_634 * _625);
        float _1028 = (_631 * _625) - (_637 * _619);
        float _1031 = (_634 * _619) - (_631 * _622);
        float _1057 = ((log2((((float(_1008.y) * 0.5) * float(_1008.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1028 * _1028) + (_1031 * _1031)) + (_1025 * _1025)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1019 * gl_WorldRayDirectionEXT.x, _1019 * gl_WorldRayDirectionEXT.y, _1019 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _1059 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    }
    else
    {
        _1059 = 0.0;
    }
    vec4 _1061 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _638) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _639) + cbTextureTilingScale._m0[1u].w), _1059);
    float _1081 = (((cbMtdParam._m0[9u].x * _1061.x) - _994) * _958) + _994;
    float _1082 = (((cbMtdParam._m0[9u].y * _1061.y) - _995) * _958) + _995;
    float _1083 = (((cbMtdParam._m0[9u].z * _1061.z) - _996) * _958) + _996;
    uvec2 _1095 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_2, int(0u)));
    float _1146;
    if (_711)
    {
        float _1106 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1112 = (_637 * _622) - (_634 * _625);
        float _1115 = (_631 * _625) - (_637 * _619);
        float _1118 = (_634 * _619) - (_631 * _622);
        float _1144 = ((log2((((float(_1095.y) * 0.5) * float(_1095.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1115 * _1115) + (_1118 * _1118)) + (_1112 * _1112)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1106 * gl_WorldRayDirectionEXT.x, _1106 * gl_WorldRayDirectionEXT.y, _1106 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _1146 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    }
    else
    {
        _1146 = 0.0;
    }
    vec4 _1148 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _638) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _639) + cbTextureTilingScale._m0[4u].w), _1146);
    float _1167 = (((cbMtdParam._m0[20u].x * _1148.x) - _1081) * _875) + _1081;
    float _1168 = (((cbMtdParam._m0[20u].y * _1148.y) - _1082) * _875) + _1082;
    float _1169 = (((cbMtdParam._m0[20u].z * _1148.z) - _1083) * _875) + _1083;
    uvec2 _1181 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_4, int(0u)));
    float _1232;
    if (_711)
    {
        float _1192 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1198 = (_637 * _622) - (_634 * _625);
        float _1201 = (_631 * _625) - (_637 * _619);
        float _1204 = (_634 * _619) - (_631 * _622);
        float _1230 = ((log2((((float(_1181.y) * 0.5) * float(_1181.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1201 * _1201) + (_1204 * _1204)) + (_1198 * _1198)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1192 * gl_WorldRayDirectionEXT.x, _1192 * gl_WorldRayDirectionEXT.y, _1192 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _1232 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
    }
    else
    {
        _1232 = 0.0;
    }
    vec4 _1234 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _638) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _639) + cbTextureTilingScale._m0[5u].w), _1232);
    float _1259 = (_768.x * 4.5) * ((((cbMtdParam._m0[23u].x * _1234.x) - _1167) * _786) + _1167);
    float _1261 = (_768.y * 4.5) * ((((cbMtdParam._m0[23u].y * _1234.y) - _1168) * _787) + _1168);
    float _1263 = (_768.z * 4.5) * ((((cbMtdParam._m0[23u].z * _1234.z) - _1169) * _788) + _1169);
    float _73[5];
    float _74[5];
    _73[0u] = cbMtdParam._m0[26u].w;
    _74[0u] = cbMtdParam._m0[27u].x;
    _73[1u] = cbMtdParam._m0[27u].y;
    _74[1u] = cbMtdParam._m0[27u].z;
    _73[2u] = cbMtdParam._m0[27u].w;
    _74[2u] = cbMtdParam._m0[28u].x;
    _73[3u] = cbMtdParam._m0[28u].y;
    _74[3u] = cbMtdParam._m0[28u].z;
    _73[4u] = cbMtdParam._m0[28u].w;
    _74[4u] = cbMtdParam._m0[29u].x;
    float _1294 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    uint _1296 = uint(int(isnan(4.0) ? _1294 : (isnan(_1294) ? 4.0 : min(_1294, 4.0))));
    float _1308 = ((cbMtdParam._m0[30u].x - _74[_1296]) * _958) + _74[_1296];
    float _1313 = ((cbMtdParam._m0[30u].z - _1308) * _875) + _1308;
    float _1321 = ((cbMtdParam._m0[31u].x - _1313) * _786) + _1313;
    vec4 _1336 = textureLod(sampler2DArray(P_ACParts_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[11u].x * _638) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _639) + cbTextureTilingScale._m0[11u].w, _980), 0.0);
    float _1338 = _1336.x;
    float _1339 = _1336.y;
    float _1341 = _1336.z + _73[_1296];
    uvec2 _1353 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_6, int(0u)));
    float _1404;
    if (_711)
    {
        float _1364 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1370 = (_637 * _622) - (_634 * _625);
        float _1373 = (_631 * _625) - (_637 * _619);
        float _1376 = (_634 * _619) - (_631 * _622);
        float _1402 = ((log2((((float(_1353.y) * 0.5) * float(_1353.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1373 * _1373) + (_1376 * _1376)) + (_1370 * _1370)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1364 * gl_WorldRayDirectionEXT.x, _1364 * gl_WorldRayDirectionEXT.y, _1364 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _1404 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
    }
    else
    {
        _1404 = 0.0;
    }
    vec4 _1406 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _638) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _639) + cbTextureTilingScale._m0[6u].w), _1404);
    float _1414 = (((cbMtdParam._m0[29u].w - _1341) + _1406.z) * _958) + _1341;
    uvec2 _1426 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_8, int(0u)));
    float _1477;
    if (_711)
    {
        float _1437 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1443 = (_637 * _622) - (_634 * _625);
        float _1446 = (_631 * _625) - (_637 * _619);
        float _1449 = (_634 * _619) - (_631 * _622);
        float _1475 = ((log2((((float(_1426.y) * 0.5) * float(_1426.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1446 * _1446) + (_1449 * _1449)) + (_1443 * _1443)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1437 * gl_WorldRayDirectionEXT.x, _1437 * gl_WorldRayDirectionEXT.y, _1437 * gl_WorldRayDirectionEXT.z), vec3(_650, _652, _653))));
        _1477 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
    }
    else
    {
        _1477 = 0.0;
    }
    vec4 _1479 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _638) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _639) + cbTextureTilingScale._m0[8u].w), _1477);
    float _1487 = (((cbMtdParam._m0[30u].y - _1414) + _1479.z) * _875) + _1414;
    float _1492 = ((((_861 * 2.0) * _1487) - _1487) * cbMtdParam._m0[25u].y) + _1487;
    uvec2 _1504 = uvec2(textureSize(P_ACParts_ColorMaterial_snp_0_Texture2D_9, int(0u)));
    float _1508 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1509 = _1508 * gl_WorldRayDirectionEXT.x;
    float _1510 = _1508 * gl_WorldRayDirectionEXT.y;
    float _1511 = _1508 * gl_WorldRayDirectionEXT.z;
    float _1555;
    if (_711)
    {
        float _1521 = (_637 * _622) - (_634 * _625);
        float _1524 = (_631 * _625) - (_637 * _619);
        float _1527 = (_634 * _619) - (_631 * _622);
        float _1553 = ((log2((((float(_1504.y) * 0.5) * float(_1504.x)) * abs((_592 * _586) - (_591 * _588))) / (sqrt(((_1524 * _1524) + (_1527 * _1527)) + (_1521 * _1521)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1509, _1510, _1511), vec3(_650, _652, _653))));
        _1555 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
    }
    else
    {
        _1555 = 0.0;
    }
    vec4 _1557 = textureLod(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _638) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _639) + cbTextureTilingScale._m0[9u].w), _1555);
    float _1565 = (((cbMtdParam._m0[30u].w - _1492) + _1557.z) * _788) + _1492;
    float _1576 = ((_1406.x - _1338) * _958) + _1338;
    float _1577 = ((_1406.y - _1339) * _958) + _1339;
    float _1582 = ((_1479.x - _1576) * _875) + _1576;
    float _1583 = ((_1479.y - _1577) * _875) + _1577;
    float _1592 = ((((_1557.x - _1582) * _786) + _1582) * 2.0) + (-1.0);
    float _1593 = ((((_1557.y - _1583) * _787) + _1583) * 2.0) + (-1.0);
    float _1594 = dot(vec2(_1592, _1593), vec2(_1592, _1593));
    float _2193 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
    float _1599 = sqrt(1.0 - (isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0))));
    float _1602 = _1592 + (cbMtdParam._m0[25u].z * ((_857.x * 2.0) + (-1.0)));
    float _1603 = _1593 + (cbMtdParam._m0[25u].z * ((_857.y * 2.0) + (-1.0)));
    float _1606 = fma(_1599, _650, fma(_1603, _666, (_685 * _679) * _1602));
    float _1609 = fma(_1599, _652, fma(_1603, _667, (_685 * _680) * _1602));
    float _1612 = fma(_1599, _653, fma(_1603, _668, (_685 * _681) * _1602));
    float _1616 = inversesqrt(dot(vec3(_1606, _1609, _1612), vec3(_1606, _1609, _1612)));
    float _1617 = _1616 * _1606;
    float _1618 = _1616 * _1609;
    float _1619 = _1616 * _1612;
    float _1631 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1632 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1633 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1634 = (-0.0) - _1509;
    float _1636 = (-0.0) - _1510;
    float _1637 = (-0.0) - _1511;
    float _1643 = float(gl_LaunchIDEXT.x);
    float _1644 = float(gl_LaunchIDEXT.y);
    float _1647 = float(gl_LaunchSizeEXT.x);
    float _1661 = fract(fract(sin(dot(vec2(_1643 / _1647, _1644 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1674 = fract(fract(sin(dot(vec2((_1643 + 128.0) / _1647, (_1644 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1675 = 1.0 - _1321;
    float _1676 = _1675 * _1259;
    float _1677 = _1675 * _1261;
    float _1678 = _1675 * _1263;
    float _1683 = _1321 * (_1259 + (-0.039999999105930328369140625));
    float _1684 = _1321 * (_1261 + (-0.039999999105930328369140625));
    float _1685 = _1321 * (_1263 + (-0.039999999105930328369140625));
    float _1686 = _1683 + 0.039999999105930328369140625;
    float _1688 = _1684 + 0.039999999105930328369140625;
    float _1689 = _1685 + 0.039999999105930328369140625;
    _78._m0 = 1u;
    uvec4 _1699 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1700 = _1699.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1700, _1699.w, _1700, vec3(_1631, _1632, _1633), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    float _1816;
    float _1817;
    if (_78._m0 == 0u)
    {
        float _1719 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1617, _1618, _1619));
        float _2204 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1722 = isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0));
        float _1741 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1565) * 0.949999988079071044921875);
        float _1742 = _1741 * _1741;
        float _1743 = g_sceneCB._m0[4u].x - _1509;
        float _1744 = g_sceneCB._m0[4u].y - _1510;
        float _1745 = g_sceneCB._m0[4u].z - _1511;
        float _1749 = inversesqrt(dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745)));
        float _1750 = _1749 * _1743;
        float _1751 = _1749 * _1744;
        float _1752 = _1749 * _1745;
        float _1753 = dot(vec3(_1617, _1618, _1619), vec3(g_sceneCB._m0[4u].xyz));
        float _2215 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1756 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        float _1757 = dot(vec3(_1617, _1618, _1619), vec3(_1634, _1636, _1637));
        float _2226 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
        float _1760 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
        float _1761 = dot(vec3(_1617, _1618, _1619), vec3(_1750, _1751, _1752));
        float _2237 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
        float _1764 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
        float _1765 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1750, _1751, _1752));
        float _2248 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1769 = _1742 * _1742;
        float _1773 = ((_1764 * _1764) * (_1769 + (-1.0))) + 1.0;
        float _1781 = exp2(log2(1.0 - (isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0)))) * 5.0);
        float _1792 = 1.0 - _1742;
        float _1803 = (0.5 / (((_1760 * ((_1756 * _1792) + _1742)) + 9.9999999392252902907785028219223e-09) + (((_1760 * _1792) + _1742) * _1756))) * _1756;
        float _2259 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
        float _1805 = (isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0))) * (_1769 / ((_1773 * _1773) * 3.141590118408203125));
        _1812 = ((_1676 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1722;
        _1813 = ((_1677 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1722;
        _1814 = ((_1678 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1722;
        _1815 = (((_1781 * (0.959999978542327880859375 - _1683)) + _1686) * g_sceneCB._m0[5u].x) * _1805;
        _1816 = (((_1781 * (0.959999978542327880859375 - _1684)) + _1688) * g_sceneCB._m0[5u].y) * _1805;
        _1817 = (((_1781 * (0.959999978542327880859375 - _1685)) + _1689) * g_sceneCB._m0[5u].z) * _1805;
    }
    else
    {
        _1812 = 0.0;
        _1813 = 0.0;
        _1814 = 0.0;
        _1815 = 0.0;
        _1816 = 0.0;
        _1817 = 0.0;
    }
    bool _1819 = abs(_1618) < 0.89999997615814208984375;
    float _1821 = float(_1819);
    float _1822 = _1819 ? 0.0 : 1.0;
    float _1825 = (_1821 * _1619) - (_1822 * _1618);
    float _1826 = _1822 * _1617;
    float _1828 = (-0.0) - (_1617 * _1821);
    float _1832 = inversesqrt(dot(vec3(_1825, _1826, _1828), vec3(_1825, _1826, _1828)));
    float _1833 = _1825 * _1832;
    float _1834 = _1826 * _1832;
    float _1835 = _1832 * _1828;
    float _1838 = (_1834 * _1619) - (_1835 * _1618);
    float _1841 = (_1835 * _1617) - (_1833 * _1619);
    float _1844 = (_1833 * _1618) - (_1834 * _1617);
    float _1846;
    float _1854;
    float _1845 = 0.0;
    uint _1847 = 0u;
    float _1851;
    bool _1853;
    for (;;)
    {
        _1851 = (float(_1847) + _1661) * 0.03125;
        _1853 = _1847 == 0u;
        float frontier_phi_57_pred;
        if (_1853)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1993;
            float _1994;
            uint _1996;
            _1993 = 0.0;
            _1994 = 0.5;
            _1996 = _1847;
            float _1855;
            for (;;)
            {
                _1855 = ((_1996 & 1u) != 0u) ? (_1994 + _1993) : _1993;
                uint _1997 = _1996 >> 1u;
                if (_1997 == 0u)
                {
                    break;
                }
                else
                {
                    _1993 = _1855;
                    _1994 *= 0.5;
                    _1996 = _1997;
                }
            }
            frontier_phi_57_pred = _1855;
        }
        _1854 = frontier_phi_57_pred;
        float _1856 = _1854 + _1674;
        float _1860 = sqrt(_1851);
        float _1861 = ((_1856 > 1.0) ? (_1856 + (-1.0)) : _1856) * 6.283185482025146484375;
        float _1864 = cos(_1861) * _1860;
        float _1866 = sin(_1861) * _1860;
        float _1868 = sqrt(1.0 - _1851);
        float _1881 = ((_1868 * _1617) + (_1864 * _1838)) + (_1866 * _1833);
        float _1882 = ((_1868 * _1618) + (_1864 * _1841)) + (_1866 * _1834);
        float _1883 = ((_1868 * _1619) + (_1864 * _1844)) + (_1866 * _1835);
        _77._m0 = 1u;
        uvec4 _1887 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1888 = _1887.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1888, _1887.w, _1888, vec3(_1631, _1632, _1633), 9.9999997473787516355514526367188e-05, vec3(_1881, _1882, _1883), 10000.0, 1);
        float _1894 = dot(vec3(_1617, _1618, _1619), vec3(_1881, _1882, _1883));
        float _2270 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
        float _1897 = isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0));
        _1846 = ((float(_77._m0 == 0u) * _1897) / (_1897 * 0.3183098733425140380859375)) + _1845;
        uint _1848 = _1847 + 1u;
        if (_1848 == 32u)
        {
            break;
        }
        else
        {
            _1845 = _1846;
            _1847 = _1848;
            continue;
        }
    }
    float _1904 = _1846 * 0.009947183541953563690185546875;
    float _1909 = dot(vec3(_1509, _1510, _1511), vec3(_1617, _1618, _1619)) * 2.0;
    vec4 _1922 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1509 - (_1909 * _1617), _1510 - (_1909 * _1618), _1511 - (_1909 * _1619)), 4.0 - (_1565 * 4.0));
    float _1927 = dot(vec3(_1634, _1636, _1637), vec3(_1617, _1618, _1619));
    float _2281 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
    float _1937 = exp2(log2(1.0 - (isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0)))) * 5.0);
    vec4 _1949 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1617, _1618, _1619), 0.0);
    float _1960 = (_1815 + _1812) + (((_1949.x * _1676) + (((_1937 * (0.959999978542327880859375 - _1683)) + _1686) * _1922.x)) * _1904);
    float _1964 = (_1816 + _1813) + (((_1949.y * _1677) + (((_1937 * (0.959999978542327880859375 - _1684)) + _1688) * _1922.y)) * _1904);
    float _1968 = (_1817 + _1814) + (((_1949.z * _1678) + (((_1937 * (0.959999978542327880859375 - _1685)) + _1689) * _1922.z)) * _1904);
    float _2292 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
    float _2303 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
    float _2314 = isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0));
    bool _1976 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1987;
    _1987.x = _1976 ? ((_643 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2292 : (isnan(_2292) ? 1.0 : min(_2292, 1.0)));
    _1987.y = _1976 ? ((_646 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0)));
    _1987.z = _1976 ? ((_649 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2314 : (isnan(_2314) ? 1.0 : min(_2314, 1.0)));
    payload._m0 = _1987;
}


