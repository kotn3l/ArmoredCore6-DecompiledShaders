#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Camouflage_test_03_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_Camouflage_test_03_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Camouflage_test_03_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_Camouflage_test_03_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1397;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _157 & 65535u;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _158 >> 16u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        _163 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
        _166 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    bool _228 = _172 == 0u;
    uint _229;
    if (_228)
    {
        _229 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _229 = frontier_phi_9_10_ladder;
    }
    uint _233 = _173 ? (_229 + 4u) : _229;
    uvec4 _243 = texelFetch(l_geomAttrib_0, int(((_177 + 8u) + _233) >> 2u));
    uint _244 = _243.x;
    float _248 = float(int(uint(int(_244 << 16u) >> int(16u))));
    float _249 = float(int(uint(int(_244) >> int(16u))));
    uint _250 = _171 * _165;
    uint _251 = _250 + 12u;
    uint _272;
    uint _273;
    uint _274;
    uint _275;
    if (_176)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
        _275 = 16u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
        _275 = 20u;
    }
    uvec4 _281 = texelFetch(l_geomAttrib_0, int((_275 + _250) >> 2u));
    uint _282 = _281.x;
    uint _294;
    if (_228)
    {
        _294 = _275 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _275 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _275 + 12u;
        }
        _294 = frontier_phi_16_17_ladder;
    }
    uint _298 = _173 ? (_294 + 4u) : _294;
    uvec4 _308 = texelFetch(l_geomAttrib_0, int(((_250 + 8u) + _298) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _315 = _171 * _166;
    uint _316 = _315 + 12u;
    uint _337;
    uint _338;
    uint _339;
    uint _340;
    if (_176)
    {
        uvec4 _318 = texelFetch(l_geomAttrib_0, int(_316 >> 2u));
        uint _319 = _318.x;
        _337 = _319 & 255u;
        _338 = (_319 >> 8u) & 255u;
        _339 = (_319 >> 16u) & 255u;
        _340 = 16u;
    }
    else
    {
        uint _325 = _316 >> 2u;
        uvec2 _331 = uvec2(texelFetch(l_geomAttrib_0, int(_325)).x, texelFetch(l_geomAttrib_0, int(_325 + 1u)).x);
        uint _332 = _331.x;
        _337 = _332 & 65535u;
        _338 = _332 >> 16u;
        _339 = _331.y & 65535u;
        _340 = 20u;
    }
    uvec4 _346 = texelFetch(l_geomAttrib_0, int((_340 + _315) >> 2u));
    uint _347 = _346.x;
    uint _359;
    if (_228)
    {
        _359 = _340 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _340 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _340 + 12u;
        }
        _359 = frontier_phi_23_24_ladder;
    }
    uint _363 = _173 ? (_359 + 4u) : _359;
    uvec4 _373 = texelFetch(l_geomAttrib_0, int(((_315 + 8u) + _363) >> 2u));
    uint _374 = _373.x;
    float _378 = float(int(uint(int(_374 << 16u) >> int(16u))));
    float _379 = float(int(uint(int(_374) >> int(16u))));
    bool _381 = _122.z == 0u;
    float _417;
    float _418;
    float _419;
    if (_381)
    {
        uint _384 = _163 * 3u;
        uvec3 _393 = uvec3(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_384 + 2u)).x);
        _417 = uintBitsToFloat(_393.x);
        _418 = uintBitsToFloat(_393.y);
        _419 = uintBitsToFloat(_393.z);
    }
    else
    {
        uint _401 = _163 * 2u;
        uvec2 _407 = uvec2(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x);
        uint _408 = _407.x;
        _417 = unpackHalf2x16(_408).x;
        _418 = unpackHalf2x16(_408 >> 16u).x;
        _419 = unpackHalf2x16(_407.y).x;
    }
    float _455;
    float _456;
    float _457;
    if (_381)
    {
        uint _422 = _165 * 3u;
        uvec3 _431 = uvec3(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_422 + 2u)).x);
        _455 = uintBitsToFloat(_431.x);
        _456 = uintBitsToFloat(_431.y);
        _457 = uintBitsToFloat(_431.z);
    }
    else
    {
        uint _439 = _165 * 2u;
        uvec2 _445 = uvec2(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x);
        uint _446 = _445.x;
        _455 = unpackHalf2x16(_446).x;
        _456 = unpackHalf2x16(_446 >> 16u).x;
        _457 = unpackHalf2x16(_445.y).x;
    }
    float _493;
    float _494;
    float _495;
    if (_381)
    {
        uint _460 = _166 * 3u;
        uvec3 _469 = uvec3(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_460 + 2u)).x);
        _493 = uintBitsToFloat(_469.x);
        _494 = uintBitsToFloat(_469.y);
        _495 = uintBitsToFloat(_469.z);
    }
    else
    {
        uint _477 = _166 * 2u;
        uvec2 _483 = uvec2(texelFetch(l_geomPositionBuffer, int(_477)).x, texelFetch(l_geomPositionBuffer, int(_477 + 1u)).x);
        uint _484 = _483.x;
        _493 = unpackHalf2x16(_484).x;
        _494 = unpackHalf2x16(_484 >> 16u).x;
        _495 = unpackHalf2x16(_483.y).x;
    }
    float _498 = (1.0 - hit._m0.x) - hit._m0.y;
    float _525 = (((float(texelFetch(l_geomAttrib_0, int((_298 + _250) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_233 + _177) >> 2u)).x >> 24u) * _498)) + (float(texelFetch(l_geomAttrib_0, int((_363 + _315) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _539 = (_313 - _248) * 0.00048828125;
    float _541 = (_314 - _249) * 0.00048828125;
    float _544 = (_378 - _248) * 0.00048828125;
    float _545 = (_379 - _249) * 0.00048828125;
    float _567 = _455 - _417;
    float _568 = _456 - _418;
    float _569 = _457 - _419;
    float _572 = fma(_569, gl_ObjectToWorldEXT[2u].x, fma(_568, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _567));
    float _575 = fma(_569, gl_ObjectToWorldEXT[2u].y, fma(_568, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _567));
    float _578 = fma(_569, gl_ObjectToWorldEXT[2u].z, fma(_568, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _567));
    float _579 = _493 - _417;
    float _580 = _494 - _418;
    float _581 = _495 - _419;
    float _584 = fma(_581, gl_ObjectToWorldEXT[2u].x, fma(_580, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _579));
    float _587 = fma(_581, gl_ObjectToWorldEXT[2u].y, fma(_580, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _579));
    float _590 = fma(_581, gl_ObjectToWorldEXT[2u].z, fma(_580, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _579));
    float _591 = (((_313 * hit._m0.x) + (_248 * _498)) + (_378 * hit._m0.y)) * 0.00048828125;
    float _592 = (((_314 * hit._m0.x) + (_249 * _498)) + (_379 * hit._m0.y)) * 0.00048828125;
    float _596 = (((float(_202) * _498) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _599 = (((float(_203) * _498) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _602 = (((float(_204) * _498) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _603 = _596 * 0.0078740157186985015869140625;
    float _605 = _599 * 0.0078740157186985015869140625;
    float _606 = _602 * 0.0078740157186985015869140625;
    float _619 = ((((float(_214 & 255u) * _498) + (-127.0)) + (float(_282 & 255u) * hit._m0.x)) + (float(_347 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _620 = ((((float((_214 >> 8u) & 255u) * _498) + (-127.0)) + (float((_282 >> 8u) & 255u) * hit._m0.x)) + (float((_347 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _621 = ((((float((_214 >> 16u) & 255u) * _498) + (-127.0)) + (float((_282 >> 16u) & 255u) * hit._m0.x)) + (float((_347 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _622 = ((((float(_214 >> 24u) * _498) + (-127.0)) + (float(_282 >> 24u) * hit._m0.x)) + (float(_347 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _632 = ((_620 * _606) - (_621 * _605)) * _622;
    float _633 = ((_621 * _603) - (_619 * _606)) * _622;
    float _634 = ((_619 * _605) - (_620 * _603)) * _622;
    float _638 = inversesqrt(dot(vec3(_632, _633, _634), vec3(_632, _633, _634)));
    uvec2 _659 = uvec2(textureSize(C_Camouflage_test_03_snp_0_Texture2D_1, int(0u)));
    bool _664 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _717;
    if (_664)
    {
        float _675 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _681 = (_590 * _575) - (_587 * _578);
        float _684 = (_584 * _578) - (_590 * _572);
        float _687 = (_587 * _572) - (_584 * _575);
        float _714 = ((log2((((float(_659.y) * 0.5) * float(_659.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_684 * _684) + (_687 * _687)) + (_681 * _681)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_675 * gl_WorldRayDirectionEXT.x, _675 * gl_WorldRayDirectionEXT.y, _675 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _717 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    }
    else
    {
        _717 = 0.0;
    }
    vec4 _721 = textureLod(sampler2D(C_Camouflage_test_03_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _591) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _592) + cbTextureTilingScale._m0[0u].w), _717);
    float _726 = _721.x * cbMtdParam._m0[9u].x;
    float _727 = _721.y * cbMtdParam._m0[9u].y;
    float _728 = _721.z * cbMtdParam._m0[9u].z;
    uvec2 _743 = uvec2(textureSize(C_Camouflage_test_03_snp_0_Texture2D_2, int(0u)));
    float _794;
    if (_664)
    {
        float _754 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _760 = (_590 * _575) - (_587 * _578);
        float _763 = (_584 * _578) - (_590 * _572);
        float _766 = (_587 * _572) - (_584 * _575);
        float _792 = ((log2((((float(_743.y) * 0.5) * float(_743.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_763 * _763) + (_766 * _766)) + (_760 * _760)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_754 * gl_WorldRayDirectionEXT.x, _754 * gl_WorldRayDirectionEXT.y, _754 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _794 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    }
    else
    {
        _794 = 0.0;
    }
    float _800 = textureLod(sampler2D(C_Camouflage_test_03_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _591) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _592) + cbTextureTilingScale._m0[2u].w), _794).x + cbMtdParam._m0[12u].w;
    uvec2 _816 = uvec2(textureSize(C_Camouflage_test_03_snp_0_Texture2D_3, int(0u)));
    float _867;
    if (_664)
    {
        float _827 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _833 = (_590 * _575) - (_587 * _578);
        float _836 = (_584 * _578) - (_590 * _572);
        float _839 = (_587 * _572) - (_584 * _575);
        float _865 = ((log2((((float(_816.y) * 0.5) * float(_816.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_836 * _836) + (_839 * _839)) + (_833 * _833)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_827 * gl_WorldRayDirectionEXT.x, _827 * gl_WorldRayDirectionEXT.y, _827 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _867 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    }
    else
    {
        _867 = 0.0;
    }
    vec4 _870 = textureLod(sampler2D(C_Camouflage_test_03_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _591) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _592) + cbTextureTilingScale._m0[3u].w), _867);
    float _877 = (_870.x * 2.0) + (-1.0);
    float _879 = (_870.y * 2.0) + (-1.0);
    float _880 = dot(vec2(_877, _879), vec2(_877, _879));
    float _1492 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _885 = sqrt(1.0 - (isnan(1.0) ? _1492 : (isnan(_1492) ? 1.0 : min(_1492, 1.0))));
    float _888 = fma(_885, _603, fma(_879, _619, (_638 * _632) * _877));
    float _891 = fma(_885, _605, fma(_879, _620, (_638 * _633) * _877));
    float _894 = fma(_885, _606, fma(_879, _621, (_638 * _634) * _877));
    float _898 = inversesqrt(dot(vec3(_888, _891, _894), vec3(_888, _891, _894)));
    float _899 = _898 * _888;
    float _900 = _898 * _891;
    float _901 = _898 * _894;
    float _902 = _870.z + cbMtdParam._m0[13u].x;
    float _915 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_899, _900, _901, 0.0)) - cbMtdParam._m0[13u].y;
    float _1503 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _922 = exp2(log2(1.0 - (isnan(1.0) ? _1503 : (isnan(_1503) ? 1.0 : min(_1503, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875))));
    uvec2 _950 = uvec2(textureSize(C_Camouflage_test_03_snp_0_Texture2D_0, int(0u)));
    float _954 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _955 = _954 * gl_WorldRayDirectionEXT.x;
    float _956 = _954 * gl_WorldRayDirectionEXT.y;
    float _957 = _954 * gl_WorldRayDirectionEXT.z;
    float _1001;
    if (_664)
    {
        float _967 = (_590 * _575) - (_587 * _578);
        float _970 = (_584 * _578) - (_590 * _572);
        float _973 = (_587 * _572) - (_584 * _575);
        float _999 = ((log2((((float(_950.y) * 0.5) * float(_950.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_970 * _970) + (_973 * _973)) + (_967 * _967)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_955, _956, _957), vec3(_603, _605, _606))));
        _1001 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    }
    else
    {
        _1001 = 0.0;
    }
    vec4 _1003 = textureLod(sampler2D(C_Camouflage_test_03_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _591) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _592) + cbTextureTilingScale._m0[1u].w), _1001);
    float _1014 = inversesqrt(dot(vec3(_899, _900, _901), vec3(_899, _900, _901)));
    float _1015 = _1014 * _899;
    float _1016 = _1014 * _900;
    float _1017 = _1014 * _901;
    float _1029 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1030 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1031 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1032 = (-0.0) - _955;
    float _1034 = (-0.0) - _956;
    float _1035 = (-0.0) - _957;
    float _1041 = float(gl_LaunchIDEXT.x);
    float _1042 = float(gl_LaunchIDEXT.y);
    float _1045 = float(gl_LaunchSizeEXT.x);
    float _1059 = fract(fract(sin(dot(vec2(_1041 / _1045, _1042 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1072 = fract(fract(sin(dot(vec2((_1041 + 128.0) / _1045, (_1042 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1073 = 1.0 - _800;
    float _1074 = _1073 * _726;
    float _1075 = _1073 * _727;
    float _1076 = _1073 * _728;
    float _1081 = _800 * (_726 + (-0.039999999105930328369140625));
    float _1082 = _800 * (_727 + (-0.039999999105930328369140625));
    float _1083 = _800 * (_728 + (-0.039999999105930328369140625));
    float _1084 = _1081 + 0.039999999105930328369140625;
    float _1086 = _1082 + 0.039999999105930328369140625;
    float _1087 = _1083 + 0.039999999105930328369140625;
    _64._m0 = 1u;
    uvec4 _1097 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1098 = _1097.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1098, _1097.w, _1098, vec3(_1029, _1030, _1031), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    if (_64._m0 == 0u)
    {
        float _1119 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1015, _1016, _1017));
        float _1524 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1122 = isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0));
        float _1141 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _902) * 0.949999988079071044921875);
        float _1142 = _1141 * _1141;
        float _1143 = g_sceneCB._m0[4u].x - _955;
        float _1144 = g_sceneCB._m0[4u].y - _956;
        float _1145 = g_sceneCB._m0[4u].z - _957;
        float _1149 = inversesqrt(dot(vec3(_1143, _1144, _1145), vec3(_1143, _1144, _1145)));
        float _1150 = _1149 * _1143;
        float _1151 = _1149 * _1144;
        float _1152 = _1149 * _1145;
        float _1153 = dot(vec3(_1015, _1016, _1017), vec3(g_sceneCB._m0[4u].xyz));
        float _1535 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1156 = isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0));
        float _1157 = dot(vec3(_1015, _1016, _1017), vec3(_1032, _1034, _1035));
        float _1546 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1160 = isnan(1.0) ? _1546 : (isnan(_1546) ? 1.0 : min(_1546, 1.0));
        float _1161 = dot(vec3(_1015, _1016, _1017), vec3(_1150, _1151, _1152));
        float _1557 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1164 = isnan(1.0) ? _1557 : (isnan(_1557) ? 1.0 : min(_1557, 1.0));
        float _1165 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1150, _1151, _1152));
        float _1568 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = _1142 * _1142;
        float _1173 = ((_1164 * _1164) * (_1169 + (-1.0))) + 1.0;
        float _1182 = exp2(log2(1.0 - (isnan(1.0) ? _1568 : (isnan(_1568) ? 1.0 : min(_1568, 1.0)))) * 5.0);
        float _1193 = 1.0 - _1142;
        float _1204 = (0.5 / (((_1160 * ((_1156 * _1193) + _1142)) + 9.9999999392252902907785028219223e-09) + (((_1160 * _1193) + _1142) * _1156))) * _1156;
        float _1579 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1206 = (isnan(1.0) ? _1579 : (isnan(_1579) ? 1.0 : min(_1579, 1.0))) * (_1169 / ((_1173 * _1173) * 3.141590118408203125));
        _1213 = ((_1074 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1122;
        _1214 = ((_1075 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1122;
        _1215 = ((_1076 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1122;
        _1216 = (((_1182 * (0.959999978542327880859375 - _1081)) + _1084) * g_sceneCB._m0[5u].x) * _1206;
        _1217 = (((_1182 * (0.959999978542327880859375 - _1082)) + _1086) * g_sceneCB._m0[5u].y) * _1206;
        _1218 = (((_1182 * (0.959999978542327880859375 - _1083)) + _1087) * g_sceneCB._m0[5u].z) * _1206;
    }
    else
    {
        _1213 = 0.0;
        _1214 = 0.0;
        _1215 = 0.0;
        _1216 = 0.0;
        _1217 = 0.0;
        _1218 = 0.0;
    }
    bool _1220 = abs(_1016) < 0.89999997615814208984375;
    float _1222 = float(_1220);
    float _1223 = _1220 ? 0.0 : 1.0;
    float _1226 = (_1222 * _1017) - (_1223 * _1016);
    float _1227 = _1223 * _1015;
    float _1229 = (-0.0) - (_1015 * _1222);
    float _1233 = inversesqrt(dot(vec3(_1226, _1227, _1229), vec3(_1226, _1227, _1229)));
    float _1234 = _1226 * _1233;
    float _1235 = _1227 * _1233;
    float _1236 = _1233 * _1229;
    float _1239 = (_1235 * _1017) - (_1236 * _1016);
    float _1242 = (_1236 * _1015) - (_1234 * _1017);
    float _1245 = (_1234 * _1016) - (_1235 * _1015);
    float _1247;
    float _1255;
    float _1246 = 0.0;
    uint _1248 = 0u;
    float _1252;
    bool _1254;
    for (;;)
    {
        _1252 = (float(_1248) + _1059) * 0.03125;
        _1254 = _1248 == 0u;
        float frontier_phi_47_pred;
        if (_1254)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1402;
            float _1403;
            uint _1405;
            _1402 = 0.0;
            _1403 = 0.5;
            _1405 = _1248;
            float _1256;
            for (;;)
            {
                _1256 = ((_1405 & 1u) != 0u) ? (_1403 + _1402) : _1402;
                uint _1406 = _1405 >> 1u;
                if (_1406 == 0u)
                {
                    break;
                }
                else
                {
                    _1402 = _1256;
                    _1403 *= 0.5;
                    _1405 = _1406;
                }
            }
            frontier_phi_47_pred = _1256;
        }
        _1255 = frontier_phi_47_pred;
        float _1257 = _1255 + _1072;
        float _1261 = sqrt(_1252);
        float _1262 = ((_1257 > 1.0) ? (_1257 + (-1.0)) : _1257) * 6.283185482025146484375;
        float _1265 = cos(_1262) * _1261;
        float _1267 = sin(_1262) * _1261;
        float _1269 = sqrt(1.0 - _1252);
        float _1282 = ((_1269 * _1015) + (_1265 * _1239)) + (_1267 * _1234);
        float _1283 = ((_1269 * _1016) + (_1265 * _1242)) + (_1267 * _1235);
        float _1284 = ((_1269 * _1017) + (_1265 * _1245)) + (_1267 * _1236);
        _63._m0 = 1u;
        uvec4 _1288 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1289 = _1288.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1289, _1288.w, _1289, vec3(_1029, _1030, _1031), 9.9999997473787516355514526367188e-05, vec3(_1282, _1283, _1284), 10000.0, 1);
        float _1295 = dot(vec3(_1015, _1016, _1017), vec3(_1282, _1283, _1284));
        float _1590 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1298 = isnan(1.0) ? _1590 : (isnan(_1590) ? 1.0 : min(_1590, 1.0));
        _1247 = ((float(_63._m0 == 0u) * _1298) / (_1298 * 0.3183098733425140380859375)) + _1246;
        uint _1249 = _1248 + 1u;
        if (_1249 == 32u)
        {
            break;
        }
        else
        {
            _1246 = _1247;
            _1248 = _1249;
            continue;
        }
    }
    float _1306 = _1247 * 0.009947183541953563690185546875;
    float _1311 = dot(vec3(_955, _956, _957), vec3(_1015, _1016, _1017)) * 2.0;
    vec4 _1325 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_955 - (_1311 * _1015), _956 - (_1311 * _1016), _957 - (_1311 * _1017)), 4.0 - (_902 * 4.0));
    float _1330 = dot(vec3(_1032, _1034, _1035), vec3(_1015, _1016, _1017));
    float _1601 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
    float _1340 = exp2(log2(1.0 - (isnan(1.0) ? _1601 : (isnan(_1601) ? 1.0 : min(_1601, 1.0)))) * 5.0);
    vec4 _1352 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1015, _1016, _1017), 0.0);
    float _1365 = (((((cbMtdParam._m0[13u].z * cbMtdParam._m0[11u].x) * _1003.x) + ((cbMtdParam._m0[10u].x * _525) * _922)) + _1213) + _1216) + (((_1352.x * _1074) + (((_1340 * (0.959999978542327880859375 - _1081)) + _1084) * _1325.x)) * _1306);
    float _1371 = (((((cbMtdParam._m0[13u].z * cbMtdParam._m0[11u].y) * _1003.y) + ((cbMtdParam._m0[10u].y * _525) * _922)) + _1214) + _1217) + (((_1352.y * _1075) + (((_1340 * (0.959999978542327880859375 - _1082)) + _1086) * _1325.y)) * _1306);
    float _1377 = (((((cbMtdParam._m0[13u].z * cbMtdParam._m0[11u].z) * _1003.z) + ((cbMtdParam._m0[10u].z * _525) * _922)) + _1215) + _1218) + (((_1352.z * _1076) + (((_1340 * (0.959999978542327880859375 - _1083)) + _1087) * _1325.z)) * _1306);
    float _1612 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
    float _1623 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
    float _1634 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
    bool _1385 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1396;
    _1396.x = _1385 ? ((_596 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0)));
    _1396.y = _1385 ? ((_599 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1623 : (isnan(_1623) ? 1.0 : min(_1623, 1.0)));
    _1396.z = _1385 ? ((_602 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1634 : (isnan(_1634) ? 1.0 : min(_1634, 1.0)));
    payload._m0 = _1396;
}


