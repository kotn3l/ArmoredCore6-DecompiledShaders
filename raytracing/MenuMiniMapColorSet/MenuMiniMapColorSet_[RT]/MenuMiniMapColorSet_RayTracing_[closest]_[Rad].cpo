#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D MenuMiniMapColorSet_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _1051;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _158;
    uint _160;
    uint _161;
    if (_117.x == 0u)
    {
        uint _126 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _135 = uvec3(texelFetch(l_geomIndexBuffer, int(_126)).x, texelFetch(l_geomIndexBuffer, int(_126 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_126 + 2u)).x);
        _158 = _135.x;
        _160 = _135.y;
        _161 = _135.z;
    }
    else
    {
        uint _139 = uint(gl_PrimitiveID) * 6u;
        uint _141 = _139 & 4294967292u;
        uint _144 = (_118 + _141) >> 2u;
        uvec2 _151 = uvec2(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x);
        uint _152 = _151.x;
        uint _153 = _151.y;
        uint _155 = _152 >> 16u;
        uint _156 = _153 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_141 == _139)
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _152 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _153 >> 16u;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _158 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder_1;
        _161 = frontier_phi_3_2_ladder;
    }
    uvec4 _165 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _166 = _165.x;
    uint _167 = _165.z;
    bool _168 = _167 != 0u;
    bool _170 = _117.w == 0u;
    bool _171 = _168 || _170;
    uint _172 = _166 * _158;
    uint _173 = _172 + 12u;
    uint _197;
    uint _198;
    uint _199;
    uint _200;
    if (_171)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_173 >> 2u));
        uint _177 = _176.x;
        _197 = _177 & 255u;
        _198 = (_177 >> 8u) & 255u;
        _199 = (_177 >> 16u) & 255u;
        _200 = 16u;
    }
    else
    {
        uint _185 = _173 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
        _200 = 20u;
    }
    uvec4 _208 = texelFetch(l_geomAttrib_0, int((_200 + _172) >> 2u));
    uint _209 = _208.x;
    bool _223 = _167 == 0u;
    uint _224;
    if (_223)
    {
        _224 = _200 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_170)
        {
            frontier_phi_9_10_ladder = _200 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _200 + 12u;
        }
        _224 = frontier_phi_9_10_ladder;
    }
    uvec4 _232 = texelFetch(l_geomAttrib_0, int(((_172 + 4u) + (_168 ? (_224 + 4u) : _224)) >> 2u));
    uint _233 = _232.x;
    float _237 = float(int(uint(int(_233 << 16u) >> int(16u))));
    float _238 = float(int(uint(int(_233) >> int(16u))));
    uint _239 = _166 * _160;
    uint _240 = _239 + 12u;
    uint _261;
    uint _262;
    uint _263;
    uint _264;
    if (_171)
    {
        uvec4 _242 = texelFetch(l_geomAttrib_0, int(_240 >> 2u));
        uint _243 = _242.x;
        _261 = _243 & 255u;
        _262 = (_243 >> 8u) & 255u;
        _263 = (_243 >> 16u) & 255u;
        _264 = 16u;
    }
    else
    {
        uint _249 = _240 >> 2u;
        uvec2 _255 = uvec2(texelFetch(l_geomAttrib_0, int(_249)).x, texelFetch(l_geomAttrib_0, int(_249 + 1u)).x);
        uint _256 = _255.x;
        _261 = _256 & 65535u;
        _262 = _256 >> 16u;
        _263 = _255.y & 65535u;
        _264 = 20u;
    }
    uvec4 _270 = texelFetch(l_geomAttrib_0, int((_264 + _239) >> 2u));
    uint _271 = _270.x;
    uint _283;
    if (_223)
    {
        _283 = _264 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_170)
        {
            frontier_phi_16_17_ladder = _264 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _264 + 12u;
        }
        _283 = frontier_phi_16_17_ladder;
    }
    uvec4 _291 = texelFetch(l_geomAttrib_0, int(((_239 + 4u) + (_168 ? (_283 + 4u) : _283)) >> 2u));
    uint _292 = _291.x;
    float _296 = float(int(uint(int(_292 << 16u) >> int(16u))));
    float _297 = float(int(uint(int(_292) >> int(16u))));
    uint _298 = _166 * _161;
    uint _299 = _298 + 12u;
    uint _320;
    uint _321;
    uint _322;
    uint _323;
    if (_171)
    {
        uvec4 _301 = texelFetch(l_geomAttrib_0, int(_299 >> 2u));
        uint _302 = _301.x;
        _320 = _302 & 255u;
        _321 = (_302 >> 8u) & 255u;
        _322 = (_302 >> 16u) & 255u;
        _323 = 16u;
    }
    else
    {
        uint _308 = _299 >> 2u;
        uvec2 _314 = uvec2(texelFetch(l_geomAttrib_0, int(_308)).x, texelFetch(l_geomAttrib_0, int(_308 + 1u)).x);
        uint _315 = _314.x;
        _320 = _315 & 65535u;
        _321 = _315 >> 16u;
        _322 = _314.y & 65535u;
        _323 = 20u;
    }
    uvec4 _329 = texelFetch(l_geomAttrib_0, int((_323 + _298) >> 2u));
    uint _330 = _329.x;
    uint _342;
    if (_223)
    {
        _342 = _323 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_170)
        {
            frontier_phi_23_24_ladder = _323 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _323 + 12u;
        }
        _342 = frontier_phi_23_24_ladder;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int(((_298 + 4u) + (_168 ? (_342 + 4u) : _342)) >> 2u));
    uint _351 = _350.x;
    float _355 = float(int(uint(int(_351 << 16u) >> int(16u))));
    float _356 = float(int(uint(int(_351) >> int(16u))));
    bool _358 = _117.z == 0u;
    float _394;
    float _395;
    float _396;
    if (_358)
    {
        uint _361 = _158 * 3u;
        uvec3 _370 = uvec3(texelFetch(l_geomPositionBuffer, int(_361)).x, texelFetch(l_geomPositionBuffer, int(_361 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_361 + 2u)).x);
        _394 = uintBitsToFloat(_370.x);
        _395 = uintBitsToFloat(_370.y);
        _396 = uintBitsToFloat(_370.z);
    }
    else
    {
        uint _378 = _158 * 2u;
        uvec2 _384 = uvec2(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x);
        uint _385 = _384.x;
        _394 = unpackHalf2x16(_385).x;
        _395 = unpackHalf2x16(_385 >> 16u).x;
        _396 = unpackHalf2x16(_384.y).x;
    }
    float _432;
    float _433;
    float _434;
    if (_358)
    {
        uint _399 = _160 * 3u;
        uvec3 _408 = uvec3(texelFetch(l_geomPositionBuffer, int(_399)).x, texelFetch(l_geomPositionBuffer, int(_399 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_399 + 2u)).x);
        _432 = uintBitsToFloat(_408.x);
        _433 = uintBitsToFloat(_408.y);
        _434 = uintBitsToFloat(_408.z);
    }
    else
    {
        uint _416 = _160 * 2u;
        uvec2 _422 = uvec2(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x);
        uint _423 = _422.x;
        _432 = unpackHalf2x16(_423).x;
        _433 = unpackHalf2x16(_423 >> 16u).x;
        _434 = unpackHalf2x16(_422.y).x;
    }
    float _470;
    float _471;
    float _472;
    if (_358)
    {
        uint _437 = _161 * 3u;
        uvec3 _446 = uvec3(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_437 + 2u)).x);
        _470 = uintBitsToFloat(_446.x);
        _471 = uintBitsToFloat(_446.y);
        _472 = uintBitsToFloat(_446.z);
    }
    else
    {
        uint _454 = _161 * 2u;
        uvec2 _460 = uvec2(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x);
        uint _461 = _460.x;
        _470 = unpackHalf2x16(_461).x;
        _471 = unpackHalf2x16(_461 >> 16u).x;
        _472 = unpackHalf2x16(_460.y).x;
    }
    float _475 = (1.0 - hit._m0.x) - hit._m0.y;
    float _528 = _432 - _394;
    float _529 = _433 - _395;
    float _530 = _434 - _396;
    float _533 = fma(_530, gl_ObjectToWorldEXT[2u].x, fma(_529, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _528));
    float _536 = fma(_530, gl_ObjectToWorldEXT[2u].y, fma(_529, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _528));
    float _539 = fma(_530, gl_ObjectToWorldEXT[2u].z, fma(_529, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _528));
    float _540 = _470 - _394;
    float _541 = _471 - _395;
    float _542 = _472 - _396;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _558 = (((float(_197) * _475) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _561 = (((float(_198) * _475) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _564 = (((float(_199) * _475) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _565 = _558 * 0.0078740157186985015869140625;
    float _567 = _561 * 0.0078740157186985015869140625;
    float _568 = _564 * 0.0078740157186985015869140625;
    float _581 = ((((float(_209 & 255u) * _475) + (-127.0)) + (float(_271 & 255u) * hit._m0.x)) + (float(_330 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _582 = ((((float((_209 >> 8u) & 255u) * _475) + (-127.0)) + (float((_271 >> 8u) & 255u) * hit._m0.x)) + (float((_330 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _583 = ((((float((_209 >> 16u) & 255u) * _475) + (-127.0)) + (float((_271 >> 16u) & 255u) * hit._m0.x)) + (float((_330 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _584 = ((((float(_209 >> 24u) * _475) + (-127.0)) + (float(_271 >> 24u) * hit._m0.x)) + (float(_330 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((_582 * _568) - (_583 * _567)) * _584;
    float _595 = ((_583 * _565) - (_581 * _568)) * _584;
    float _596 = ((_581 * _567) - (_582 * _565)) * _584;
    float _600 = inversesqrt(dot(vec3(_594, _595, _596), vec3(_594, _595, _596)));
    float _601 = _600 * _594;
    float _602 = _600 * _595;
    float _603 = _600 * _596;
    uvec2 _621 = uvec2(textureSize(MenuMiniMapColorSet_snp_0_Texture2D_7, int(0u)));
    float _630 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _631 = _630 * gl_WorldRayDirectionEXT.x;
    float _632 = _630 * gl_WorldRayDirectionEXT.y;
    float _633 = _630 * gl_WorldRayDirectionEXT.z;
    float _685;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _647 = (_551 * _536) - (_548 * _539);
        float _650 = (_545 * _539) - (_551 * _533);
        float _653 = (_548 * _533) - (_545 * _536);
        float _682 = ((log2((((float(_621.y) * 0.5) * float(_621.x)) * abs((((_356 - _238) * (_296 - _237)) - ((_355 - _237) * (_297 - _238))) * 2.384185791015625e-07)) / (sqrt(((_650 * _650) + (_653 * _653)) + (_647 * _647)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_631, _632, _633), vec3(_565, _567, _568))));
        _685 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    }
    else
    {
        _685 = 0.0;
    }
    vec4 _689 = textureLod(sampler2D(MenuMiniMapColorSet_snp_0_Texture2D_7, SS_BumpMap), vec2((((((_296 * hit._m0.x) + (_237 * _475)) + (_355 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_297 * hit._m0.x) + (_238 * _475)) + (_356 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _685);
    float _695 = (_689.x * 2.0) + (-1.0);
    float _697 = (_689.y * 2.0) + (-1.0);
    float _698 = dot(vec2(_695, _697), vec2(_695, _697));
    float _1130 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _703 = sqrt(1.0 - (isnan(1.0) ? _1130 : (isnan(_1130) ? 1.0 : min(_1130, 1.0))));
    float _706 = fma(_703, _565, fma(_697, _581, _695 * _601));
    float _709 = fma(_703, _567, fma(_697, _582, _695 * _602));
    float _712 = fma(_703, _568, fma(_697, _583, _695 * _603));
    float _716 = inversesqrt(dot(vec3(_706, _709, _712), vec3(_706, _709, _712)));
    float _717 = _716 * _706;
    float _718 = _716 * _709;
    float _719 = _716 * _712;
    float _722 = fma(_719, _565, fma(_718, _581, _717 * _601));
    float _725 = fma(_719, _567, fma(_718, _582, _717 * _602));
    float _728 = fma(_719, _568, fma(_718, _583, _717 * _603));
    float _732 = inversesqrt(dot(vec3(_722, _725, _728), vec3(_722, _725, _728)));
    float _733 = _732 * _722;
    float _734 = _732 * _725;
    float _735 = _732 * _728;
    float _747 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _748 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _749 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _750 = (-0.0) - _631;
    float _752 = (-0.0) - _632;
    float _753 = (-0.0) - _633;
    float _759 = float(gl_LaunchIDEXT.x);
    float _760 = float(gl_LaunchIDEXT.y);
    float _763 = float(gl_LaunchSizeEXT.x);
    float _777 = fract(fract(sin(dot(vec2(_759 / _763, _760 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _790 = fract(fract(sin(dot(vec2((_759 + 128.0) / _763, (_760 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _800 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _801 = _800.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _801, _800.w, _801, vec3(_747, _748, _749), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _881;
    float _882;
    float _883;
    float _884;
    float _885;
    float _886;
    if (_59._m0 == 0u)
    {
        float _822 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_733, _734, _735));
        float _1141 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
        float _825 = isnan(1.0) ? _1141 : (isnan(_1141) ? 1.0 : min(_1141, 1.0));
        float _836 = g_sceneCB._m0[4u].x - _631;
        float _837 = g_sceneCB._m0[4u].y - _632;
        float _838 = g_sceneCB._m0[4u].z - _633;
        float _842 = inversesqrt(dot(vec3(_836, _837, _838), vec3(_836, _837, _838)));
        float _846 = dot(vec3(_733, _734, _735), vec3(g_sceneCB._m0[4u].xyz));
        float _1152 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
        float _849 = isnan(1.0) ? _1152 : (isnan(_1152) ? 1.0 : min(_1152, 1.0));
        float _850 = dot(vec3(_733, _734, _735), vec3(_750, _752, _753));
        float _1163 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
        float _854 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_836 * _842, _837 * _842, _838 * _842));
        float _1174 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
        float _865 = (exp2(log2(1.0 - (isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _871 = (0.5 / ((_849 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0))))) * _849;
        float _1185 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        float _873 = (isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0))) * 0.31831014156341552734375;
        _881 = ((cbMatDynParam._m0[17u].x * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _825;
        _882 = ((cbMatDynParam._m0[17u].y * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _825;
        _883 = ((cbMatDynParam._m0[17u].z * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _825;
        _884 = (_865 * g_sceneCB._m0[5u].x) * _873;
        _885 = (_865 * g_sceneCB._m0[5u].y) * _873;
        _886 = (_865 * g_sceneCB._m0[5u].z) * _873;
    }
    else
    {
        _881 = 0.0;
        _882 = 0.0;
        _883 = 0.0;
        _884 = 0.0;
        _885 = 0.0;
        _886 = 0.0;
    }
    bool _888 = abs(_734) < 0.89999997615814208984375;
    float _890 = float(_888);
    float _891 = _888 ? 0.0 : 1.0;
    float _894 = (_890 * _735) - (_891 * _734);
    float _895 = _891 * _733;
    float _897 = (-0.0) - (_733 * _890);
    float _901 = inversesqrt(dot(vec3(_894, _895, _897), vec3(_894, _895, _897)));
    float _902 = _894 * _901;
    float _903 = _895 * _901;
    float _904 = _901 * _897;
    float _907 = (_903 * _735) - (_904 * _734);
    float _910 = (_904 * _733) - (_902 * _735);
    float _913 = (_902 * _734) - (_903 * _733);
    float _915;
    float _923;
    float _914 = 0.0;
    uint _916 = 0u;
    float _920;
    bool _922;
    for (;;)
    {
        _920 = (float(_916) + _777) * 0.03125;
        _922 = _916 == 0u;
        float frontier_phi_41_pred;
        if (_922)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1056;
            float _1057;
            uint _1059;
            _1056 = 0.0;
            _1057 = 0.5;
            _1059 = _916;
            float _924;
            for (;;)
            {
                _924 = ((_1059 & 1u) != 0u) ? (_1057 + _1056) : _1056;
                uint _1060 = _1059 >> 1u;
                if (_1060 == 0u)
                {
                    break;
                }
                else
                {
                    _1056 = _924;
                    _1057 *= 0.5;
                    _1059 = _1060;
                }
            }
            frontier_phi_41_pred = _924;
        }
        _923 = frontier_phi_41_pred;
        float _925 = _923 + _790;
        float _929 = sqrt(_920);
        float _930 = ((_925 > 1.0) ? (_925 + (-1.0)) : _925) * 6.283185482025146484375;
        float _933 = cos(_930) * _929;
        float _935 = sin(_930) * _929;
        float _937 = sqrt(1.0 - _920);
        float _950 = ((_937 * _733) + (_933 * _907)) + (_935 * _902);
        float _951 = ((_937 * _734) + (_933 * _910)) + (_935 * _903);
        float _952 = ((_937 * _735) + (_933 * _913)) + (_935 * _904);
        _58._m0 = 1u;
        uvec4 _956 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _957 = _956.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _957, _956.w, _957, vec3(_747, _748, _749), 9.9999997473787516355514526367188e-05, vec3(_950, _951, _952), 10000.0, 1);
        float _963 = dot(vec3(_733, _734, _735), vec3(_950, _951, _952));
        float _1196 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
        float _966 = isnan(1.0) ? _1196 : (isnan(_1196) ? 1.0 : min(_1196, 1.0));
        _915 = ((float(_58._m0 == 0u) * _966) / (_966 * 0.3183098733425140380859375)) + _914;
        uint _917 = _916 + 1u;
        if (_917 == 32u)
        {
            break;
        }
        else
        {
            _914 = _915;
            _916 = _917;
            continue;
        }
    }
    float _974 = _915 * 0.009947183541953563690185546875;
    float _979 = dot(vec3(_631, _632, _633), vec3(_733, _734, _735)) * 2.0;
    vec4 _991 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_631 - (_979 * _733), _632 - (_979 * _734), _633 - (_979 * _735)), 4.0);
    float _996 = dot(vec3(_750, _752, _753), vec3(_733, _734, _735));
    float _1207 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
    float _1005 = (exp2(log2(1.0 - (isnan(1.0) ? _1207 : (isnan(_1207) ? 1.0 : min(_1207, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1011 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_733, _734, _735), 0.0);
    float _1022 = (_884 + _881) + (((_1011.x * cbMatDynParam._m0[17u].x) + (_1005 * _991.x)) * _974);
    float _1026 = (_885 + _882) + (((_1011.y * cbMatDynParam._m0[17u].y) + (_1005 * _991.y)) * _974);
    float _1030 = (_886 + _883) + (((_1011.z * cbMatDynParam._m0[17u].z) + (_1005 * _991.z)) * _974);
    float _1218 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1229 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _1240 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    bool _1039 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1050;
    _1050.x = _1039 ? ((_558 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1218 : (isnan(_1218) ? 1.0 : min(_1218, 1.0)));
    _1050.y = _1039 ? ((_561 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1229 : (isnan(_1229) ? 1.0 : min(_1229, 1.0)));
    _1050.z = _1039 ? ((_564 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1240 : (isnan(_1240) ? 1.0 : min(_1240, 1.0)));
    payload._m0 = _1050;
}


