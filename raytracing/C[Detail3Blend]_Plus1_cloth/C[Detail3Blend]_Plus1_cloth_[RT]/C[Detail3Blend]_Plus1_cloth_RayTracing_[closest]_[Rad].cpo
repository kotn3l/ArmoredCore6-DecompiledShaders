#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1865;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    uint _180 = _128.w;
    bool _182 = _179 || (_180 == 0u);
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _220 = _219.x;
    uint _232 = _176.y;
    bool _233 = _178 == 0u;
    uint _236 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _245 = texelFetch(l_geomAttrib_1, int((((_232 * _169) + 4u) + (_179 ? (_236 + 4u) : _236)) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uint _252 = _177 * _171;
    uint _253 = _252 + 12u;
    uint _274;
    uint _275;
    uint _276;
    uint _277;
    if (_182)
    {
        uvec4 _255 = texelFetch(l_geomAttrib_0, int(_253 >> 2u));
        uint _256 = _255.x;
        _274 = _256 & 255u;
        _275 = (_256 >> 8u) & 255u;
        _276 = (_256 >> 16u) & 255u;
        _277 = 16u;
    }
    else
    {
        uint _262 = _253 >> 2u;
        uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
        uint _269 = _268.x;
        _274 = _269 & 65535u;
        _275 = _269 >> 16u;
        _276 = _268.y & 65535u;
        _277 = 20u;
    }
    uvec4 _283 = texelFetch(l_geomAttrib_0, int((_277 + _252) >> 2u));
    uint _284 = _283.x;
    uint _297 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _304 = texelFetch(l_geomAttrib_1, int((((_232 * _171) + 4u) + (_179 ? (_297 + 4u) : _297)) >> 2u));
    uint _305 = _304.x;
    float _309 = float(int(uint(int(_305 << 16u) >> int(16u))));
    float _310 = float(int(uint(int(_305) >> int(16u))));
    uint _311 = _177 * _172;
    uint _312 = _311 + 12u;
    uint _333;
    uint _334;
    uint _335;
    uint _336;
    if (_182)
    {
        uvec4 _314 = texelFetch(l_geomAttrib_0, int(_312 >> 2u));
        uint _315 = _314.x;
        _333 = _315 & 255u;
        _334 = (_315 >> 8u) & 255u;
        _335 = (_315 >> 16u) & 255u;
        _336 = 16u;
    }
    else
    {
        uint _321 = _312 >> 2u;
        uvec2 _327 = uvec2(texelFetch(l_geomAttrib_0, int(_321)).x, texelFetch(l_geomAttrib_0, int(_321 + 1u)).x);
        uint _328 = _327.x;
        _333 = _328 & 65535u;
        _334 = _328 >> 16u;
        _335 = _327.y & 65535u;
        _336 = 20u;
    }
    uvec4 _342 = texelFetch(l_geomAttrib_0, int((_336 + _311) >> 2u));
    uint _343 = _342.x;
    uint _356 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _363 = texelFetch(l_geomAttrib_1, int((((_232 * _172) + 4u) + (_179 ? (_356 + 4u) : _356)) >> 2u));
    uint _364 = _363.x;
    float _368 = float(int(uint(int(_364 << 16u) >> int(16u))));
    float _369 = float(int(uint(int(_364) >> int(16u))));
    bool _371 = _128.z == 0u;
    float _407;
    float _408;
    float _409;
    if (_371)
    {
        uint _374 = _169 * 3u;
        uvec3 _383 = uvec3(texelFetch(l_geomPositionBuffer, int(_374)).x, texelFetch(l_geomPositionBuffer, int(_374 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_374 + 2u)).x);
        _407 = uintBitsToFloat(_383.x);
        _408 = uintBitsToFloat(_383.y);
        _409 = uintBitsToFloat(_383.z);
    }
    else
    {
        uint _391 = _169 * 2u;
        uvec2 _397 = uvec2(texelFetch(l_geomPositionBuffer, int(_391)).x, texelFetch(l_geomPositionBuffer, int(_391 + 1u)).x);
        uint _398 = _397.x;
        _407 = unpackHalf2x16(_398).x;
        _408 = unpackHalf2x16(_398 >> 16u).x;
        _409 = unpackHalf2x16(_397.y).x;
    }
    float _445;
    float _446;
    float _447;
    if (_371)
    {
        uint _412 = _171 * 3u;
        uvec3 _421 = uvec3(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_412 + 2u)).x);
        _445 = uintBitsToFloat(_421.x);
        _446 = uintBitsToFloat(_421.y);
        _447 = uintBitsToFloat(_421.z);
    }
    else
    {
        uint _429 = _171 * 2u;
        uvec2 _435 = uvec2(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x);
        uint _436 = _435.x;
        _445 = unpackHalf2x16(_436).x;
        _446 = unpackHalf2x16(_436 >> 16u).x;
        _447 = unpackHalf2x16(_435.y).x;
    }
    float _483;
    float _484;
    float _485;
    if (_371)
    {
        uint _450 = _172 * 3u;
        uvec3 _459 = uvec3(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_450 + 2u)).x);
        _483 = uintBitsToFloat(_459.x);
        _484 = uintBitsToFloat(_459.y);
        _485 = uintBitsToFloat(_459.z);
    }
    else
    {
        uint _467 = _172 * 2u;
        uvec2 _473 = uvec2(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x);
        uint _474 = _473.x;
        _483 = unpackHalf2x16(_474).x;
        _484 = unpackHalf2x16(_474 >> 16u).x;
        _485 = unpackHalf2x16(_473.y).x;
    }
    float _488 = (1.0 - hit._m0.x) - hit._m0.y;
    float _522 = (_309 - _250) * 0.00048828125;
    float _524 = (_310 - _251) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _555 = fma(_552, gl_ObjectToWorldEXT[2u].x, fma(_551, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _550));
    float _558 = fma(_552, gl_ObjectToWorldEXT[2u].y, fma(_551, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _550));
    float _561 = fma(_552, gl_ObjectToWorldEXT[2u].z, fma(_551, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _550));
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _567 = fma(_564, gl_ObjectToWorldEXT[2u].x, fma(_563, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _562));
    float _570 = fma(_564, gl_ObjectToWorldEXT[2u].y, fma(_563, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _562));
    float _573 = fma(_564, gl_ObjectToWorldEXT[2u].z, fma(_563, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _562));
    float _574 = (((_309 * hit._m0.x) + (_250 * _488)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _575 = (((_310 * hit._m0.x) + (_251 * _488)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _579 = (((float(_208) * _488) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _582 = (((float(_209) * _488) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = (((float(_210) * _488) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = _579 * 0.0078740157186985015869140625;
    float _588 = _582 * 0.0078740157186985015869140625;
    float _589 = _585 * 0.0078740157186985015869140625;
    float _602 = ((((float(_220 & 255u) * _488) + (-127.0)) + (float(_284 & 255u) * hit._m0.x)) + (float(_343 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_220 >> 8u) & 255u) * _488) + (-127.0)) + (float((_284 >> 8u) & 255u) * hit._m0.x)) + (float((_343 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_220 >> 16u) & 255u) * _488) + (-127.0)) + (float((_284 >> 16u) & 255u) * hit._m0.x)) + (float((_343 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float(_220 >> 24u) * _488) + (-127.0)) + (float(_284 >> 24u) * hit._m0.x)) + (float(_343 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _615 = ((_603 * _589) - (_604 * _588)) * _605;
    float _616 = ((_604 * _586) - (_602 * _589)) * _605;
    float _617 = ((_602 * _588) - (_603 * _586)) * _605;
    float _621 = inversesqrt(dot(vec3(_615, _616, _617), vec3(_615, _616, _617)));
    uvec2 _636 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_0, int(0u)));
    bool _641 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _694;
    if (_641)
    {
        float _652 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _658 = (_573 * _558) - (_570 * _561);
        float _661 = (_567 * _561) - (_573 * _555);
        float _664 = (_570 * _555) - (_567 * _558);
        float _691 = ((log2((((float(_636.y) * 0.5) * float(_636.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_661 * _661) + (_664 * _664)) + (_658 * _658)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_652 * gl_WorldRayDirectionEXT.x, _652 * gl_WorldRayDirectionEXT.y, _652 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _694 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    }
    else
    {
        _694 = 0.0;
    }
    vec4 _698 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _574) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _575) + cbTextureTilingScale._m0[1u].w), _694);
    float _702 = _698.z;
    float _703 = _698.w;
    float _709 = exp2(log2(_702 * 22.0) * 260.0);
    float _710 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _711 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    float _716 = exp2(log2(1.0 - _703) * 10.19999980926513671875);
    uvec2 _728 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_3, int(0u)));
    float _779;
    if (_641)
    {
        float _739 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _745 = (_573 * _558) - (_570 * _561);
        float _748 = (_567 * _561) - (_573 * _555);
        float _751 = (_570 * _555) - (_567 * _558);
        float _777 = ((log2((((float(_728.y) * 0.5) * float(_728.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_748 * _748) + (_751 * _751)) + (_745 * _745)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_739 * gl_WorldRayDirectionEXT.x, _739 * gl_WorldRayDirectionEXT.y, _739 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _779 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    }
    else
    {
        _779 = 0.0;
    }
    vec4 _782 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _574) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _575) + cbTextureTilingScale._m0[4u].w), _779);
    uvec2 _807 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_1, int(0u)));
    float _858;
    if (_641)
    {
        float _818 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _824 = (_573 * _558) - (_570 * _561);
        float _827 = (_567 * _561) - (_573 * _555);
        float _830 = (_570 * _555) - (_567 * _558);
        float _856 = ((log2((((float(_807.y) * 0.5) * float(_807.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_827 * _827) + (_830 * _830)) + (_824 * _824)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_818 * gl_WorldRayDirectionEXT.x, _818 * gl_WorldRayDirectionEXT.y, _818 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _858 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    }
    else
    {
        _858 = 0.0;
    }
    vec4 _860 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _574) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _575) + cbTextureTilingScale._m0[2u].w), _858);
    float _871 = cbMtdParam._m0[9u].x * _860.x;
    float _872 = cbMtdParam._m0[9u].y * _860.y;
    float _873 = cbMtdParam._m0[9u].z * _860.z;
    float _880 = (((cbMtdParam._m0[10u].x * _782.x) - _871) * _716) + _871;
    float _881 = (((cbMtdParam._m0[10u].y * _782.y) - _872) * _716) + _872;
    float _882 = (((cbMtdParam._m0[10u].z * _782.z) - _873) * _716) + _873;
    float _886 = exp2(log2(_703) * 10.0);
    uvec2 _898 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_2, int(0u)));
    float _949;
    if (_641)
    {
        float _909 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _915 = (_573 * _558) - (_570 * _561);
        float _918 = (_567 * _561) - (_573 * _555);
        float _921 = (_570 * _555) - (_567 * _558);
        float _947 = ((log2((((float(_898.y) * 0.5) * float(_898.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_918 * _918) + (_921 * _921)) + (_915 * _915)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_909 * gl_WorldRayDirectionEXT.x, _909 * gl_WorldRayDirectionEXT.y, _909 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _949 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    }
    else
    {
        _949 = 0.0;
    }
    vec4 _951 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _574) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _575) + cbTextureTilingScale._m0[3u].w), _949);
    uvec2 _985 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_7, int(0u)));
    float _1036;
    if (_641)
    {
        float _996 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1002 = (_573 * _558) - (_570 * _561);
        float _1005 = (_567 * _561) - (_573 * _555);
        float _1008 = (_570 * _555) - (_567 * _558);
        float _1034 = ((log2((((float(_985.y) * 0.5) * float(_985.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1005 * _1005) + (_1008 * _1008)) + (_1002 * _1002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_996 * gl_WorldRayDirectionEXT.x, _996 * gl_WorldRayDirectionEXT.y, _996 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1036 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    }
    else
    {
        _1036 = 0.0;
    }
    vec4 _1038 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _574) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _575) + cbTextureTilingScale._m0[0u].w), _1036);
    uvec2 _1062 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_4, int(0u)));
    float _1113;
    if (_641)
    {
        float _1073 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1079 = (_573 * _558) - (_570 * _561);
        float _1082 = (_567 * _561) - (_573 * _555);
        float _1085 = (_570 * _555) - (_567 * _558);
        float _1111 = ((log2((((float(_1062.y) * 0.5) * float(_1062.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1082 * _1082) + (_1085 * _1085)) + (_1079 * _1079)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1073 * gl_WorldRayDirectionEXT.x, _1073 * gl_WorldRayDirectionEXT.y, _1073 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1113 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    }
    else
    {
        _1113 = 0.0;
    }
    vec4 _1115 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _574) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _575) + cbTextureTilingScale._m0[5u].w), _1113);
    float _1125 = cbMtdParam._m0[12u].x * _1115.x;
    float _1126 = cbMtdParam._m0[12u].y * _1115.y;
    float _1127 = cbMtdParam._m0[12u].z * _1115.z;
    float _1134 = ((((((((cbMtdParam._m0[11u].x * _951.x) - _880) * _886) + _880) * 4.55000019073486328125) * _1038.x) - _1125) * _711) + _1125;
    float _1135 = ((((((((cbMtdParam._m0[11u].y * _951.y) - _881) * _886) + _881) * 4.55000019073486328125) * _1038.y) - _1126) * _711) + _1126;
    float _1136 = ((((((((cbMtdParam._m0[11u].z * _951.z) - _882) * _886) + _882) * 4.55000019073486328125) * _1038.z) - _1127) * _711) + _1127;
    uvec2 _1152 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_5, int(0u)));
    float _1203;
    if (_641)
    {
        float _1163 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1169 = (_573 * _558) - (_570 * _561);
        float _1172 = (_567 * _561) - (_573 * _555);
        float _1175 = (_570 * _555) - (_567 * _558);
        float _1201 = ((log2((((float(_1152.y) * 0.5) * float(_1152.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1172 * _1172) + (_1175 * _1175)) + (_1169 * _1169)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1163 * gl_WorldRayDirectionEXT.x, _1163 * gl_WorldRayDirectionEXT.y, _1163 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1203 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    }
    else
    {
        _1203 = 0.0;
    }
    vec4 _1205 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _574) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _575) + cbTextureTilingScale._m0[6u].w), _1203);
    uvec2 _1226 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_6, int(0u)));
    float _1277;
    if (_641)
    {
        float _1237 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1243 = (_573 * _558) - (_570 * _561);
        float _1246 = (_567 * _561) - (_573 * _555);
        float _1249 = (_570 * _555) - (_567 * _558);
        float _1275 = ((log2((((float(_1226.y) * 0.5) * float(_1226.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1246 * _1246) + (_1249 * _1249)) + (_1243 * _1243)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1237 * gl_WorldRayDirectionEXT.x, _1237 * gl_WorldRayDirectionEXT.y, _1237 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1277 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
    }
    else
    {
        _1277 = 0.0;
    }
    vec4 _1279 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _574) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _575) + cbTextureTilingScale._m0[7u].w), _1277);
    float _1281 = _1279.x;
    float _1282 = _1279.y;
    float _1285 = cbMtdParam._m0[13u].x + _1279.z;
    float _1288 = (((cbMtdParam._m0[13u].y + _1205.z) - _1285) * _716) + _1285;
    uvec2 _1300 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_8, int(0u)));
    float _1351;
    if (_641)
    {
        float _1311 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1317 = (_573 * _558) - (_570 * _561);
        float _1320 = (_567 * _561) - (_573 * _555);
        float _1323 = (_570 * _555) - (_567 * _558);
        float _1349 = ((log2((((float(_1300.y) * 0.5) * float(_1300.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1320 * _1320) + (_1323 * _1323)) + (_1317 * _1317)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1311 * gl_WorldRayDirectionEXT.x, _1311 * gl_WorldRayDirectionEXT.y, _1311 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1351 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
    }
    else
    {
        _1351 = 0.0;
    }
    vec4 _1353 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _574) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _575) + cbTextureTilingScale._m0[8u].w), _1351);
    uvec2 _1376 = uvec2(textureSize(C_Detail3Blend_Plus1_snp_0_Texture2D_9, int(0u)));
    float _1380 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1381 = _1380 * gl_WorldRayDirectionEXT.x;
    float _1382 = _1380 * gl_WorldRayDirectionEXT.y;
    float _1383 = _1380 * gl_WorldRayDirectionEXT.z;
    float _1427;
    if (_641)
    {
        float _1393 = (_573 * _558) - (_570 * _561);
        float _1396 = (_567 * _561) - (_573 * _555);
        float _1399 = (_570 * _555) - (_567 * _558);
        float _1425 = ((log2((((float(_1376.y) * 0.5) * float(_1376.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1396 * _1396) + (_1399 * _1399)) + (_1393 * _1393)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1381, _1382, _1383), vec3(_586, _588, _589))));
        _1427 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
    }
    else
    {
        _1427 = 0.0;
    }
    vec4 _1429 = textureLod(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _574) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _575) + cbTextureTilingScale._m0[9u].w), _1427);
    float _1431 = _1429.x;
    float _1432 = _1429.y;
    float _1435 = cbMtdParam._m0[13u].z + _1429.z;
    float _1438 = ((((_702 * 2.0) * ((((_1353.z - _1288) + cbMtdParam._m0[14u].y) * _886) + _1288)) - _1435) * _711) + _1435;
    float _1449 = ((_1205.x - _1281) * _716) + _1281;
    float _1450 = ((_1205.y - _1282) * _716) + _1282;
    float _1465 = (((((((_1353.x - _1449) * _886) + _1449) - _1431) * _711) + _1431) * 2.0) + (-1.0);
    float _1466 = (((((((_1353.y - _1450) * _886) + _1450) - _1432) * _711) + _1432) * 2.0) + (-1.0);
    float _1467 = dot(vec2(_1465, _1466), vec2(_1465, _1466));
    float _1999 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
    float _1472 = sqrt(1.0 - (isnan(1.0) ? _1999 : (isnan(_1999) ? 1.0 : min(_1999, 1.0))));
    float _1475 = _1465 + (cbMtdParam._m0[13u].w * ((_698.x * 2.0) + (-1.0)));
    float _1476 = _1466 + (cbMtdParam._m0[13u].w * ((_698.y * 2.0) + (-1.0)));
    float _1479 = fma(_1472, _586, fma(_1476, _602, (_621 * _615) * _1475));
    float _1482 = fma(_1472, _588, fma(_1476, _603, (_621 * _616) * _1475));
    float _1485 = fma(_1472, _589, fma(_1476, _604, (_621 * _617) * _1475));
    float _1489 = inversesqrt(dot(vec3(_1479, _1482, _1485), vec3(_1479, _1482, _1485)));
    float _1490 = _1489 * _1479;
    float _1491 = _1489 * _1482;
    float _1492 = _1489 * _1485;
    float _1504 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1505 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1506 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1507 = (-0.0) - _1381;
    float _1509 = (-0.0) - _1382;
    float _1510 = (-0.0) - _1383;
    float _1516 = float(gl_LaunchIDEXT.x);
    float _1517 = float(gl_LaunchIDEXT.y);
    float _1520 = float(gl_LaunchSizeEXT.x);
    float _1534 = fract(fract(sin(dot(vec2(_1516 / _1520, _1517 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1547 = fract(fract(sin(dot(vec2((_1516 + 128.0) / _1520, (_1517 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1548 = 1.0 - cbMtdParam._m0[14u].x;
    float _1549 = _1134 * _1548;
    float _1550 = _1135 * _1548;
    float _1551 = _1136 * _1548;
    float _1556 = (_1134 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1557 = (_1135 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1558 = (_1136 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1559 = _1556 + 0.039999999105930328369140625;
    float _1561 = _1557 + 0.039999999105930328369140625;
    float _1562 = _1558 + 0.039999999105930328369140625;
    _70._m0 = 1u;
    uvec4 _1572 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1573 = _1572.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1573, _1572.w, _1573, vec3(_1504, _1505, _1506), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    float _1692;
    if (_70._m0 == 0u)
    {
        float _1593 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1490, _1491, _1492));
        float _2010 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1596 = isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0));
        float _1615 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1438) * 0.949999988079071044921875);
        float _1616 = _1615 * _1615;
        float _1617 = g_sceneCB._m0[4u].x - _1381;
        float _1618 = g_sceneCB._m0[4u].y - _1382;
        float _1619 = g_sceneCB._m0[4u].z - _1383;
        float _1623 = inversesqrt(dot(vec3(_1617, _1618, _1619), vec3(_1617, _1618, _1619)));
        float _1624 = _1623 * _1617;
        float _1625 = _1623 * _1618;
        float _1626 = _1623 * _1619;
        float _1627 = dot(vec3(_1490, _1491, _1492), vec3(g_sceneCB._m0[4u].xyz));
        float _2021 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1630 = isnan(1.0) ? _2021 : (isnan(_2021) ? 1.0 : min(_2021, 1.0));
        float _1631 = dot(vec3(_1490, _1491, _1492), vec3(_1507, _1509, _1510));
        float _2032 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1634 = isnan(1.0) ? _2032 : (isnan(_2032) ? 1.0 : min(_2032, 1.0));
        float _1635 = dot(vec3(_1490, _1491, _1492), vec3(_1624, _1625, _1626));
        float _2043 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1638 = isnan(1.0) ? _2043 : (isnan(_2043) ? 1.0 : min(_2043, 1.0));
        float _1639 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1624, _1625, _1626));
        float _2054 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1643 = _1616 * _1616;
        float _1647 = ((_1638 * _1638) * (_1643 + (-1.0))) + 1.0;
        float _1656 = exp2(log2(1.0 - (isnan(1.0) ? _2054 : (isnan(_2054) ? 1.0 : min(_2054, 1.0)))) * 5.0);
        float _1667 = 1.0 - _1616;
        float _1678 = (0.5 / (((_1634 * ((_1630 * _1667) + _1616)) + 9.9999999392252902907785028219223e-09) + (((_1634 * _1667) + _1616) * _1630))) * _1630;
        float _2065 = isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0));
        float _1680 = (isnan(1.0) ? _2065 : (isnan(_2065) ? 1.0 : min(_2065, 1.0))) * (_1643 / ((_1647 * _1647) * 3.141590118408203125));
        _1687 = ((_1549 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1596;
        _1688 = ((_1550 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1596;
        _1689 = ((_1551 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1596;
        _1690 = (((_1656 * (0.959999978542327880859375 - _1556)) + _1559) * g_sceneCB._m0[5u].x) * _1680;
        _1691 = (((_1656 * (0.959999978542327880859375 - _1557)) + _1561) * g_sceneCB._m0[5u].y) * _1680;
        _1692 = (((_1656 * (0.959999978542327880859375 - _1558)) + _1562) * g_sceneCB._m0[5u].z) * _1680;
    }
    else
    {
        _1687 = 0.0;
        _1688 = 0.0;
        _1689 = 0.0;
        _1690 = 0.0;
        _1691 = 0.0;
        _1692 = 0.0;
    }
    bool _1694 = abs(_1491) < 0.89999997615814208984375;
    float _1696 = float(_1694);
    float _1697 = _1694 ? 0.0 : 1.0;
    float _1700 = (_1696 * _1492) - (_1697 * _1491);
    float _1701 = _1697 * _1490;
    float _1703 = (-0.0) - (_1490 * _1696);
    float _1707 = inversesqrt(dot(vec3(_1700, _1701, _1703), vec3(_1700, _1701, _1703)));
    float _1708 = _1700 * _1707;
    float _1709 = _1701 * _1707;
    float _1710 = _1707 * _1703;
    float _1713 = (_1709 * _1492) - (_1710 * _1491);
    float _1716 = (_1710 * _1490) - (_1708 * _1492);
    float _1719 = (_1708 * _1491) - (_1709 * _1490);
    float _1721;
    float _1729;
    float _1720 = 0.0;
    uint _1722 = 0u;
    float _1726;
    bool _1728;
    for (;;)
    {
        _1726 = (float(_1722) + _1534) * 0.03125;
        _1728 = _1722 == 0u;
        float frontier_phi_47_pred;
        if (_1728)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1870;
            float _1871;
            uint _1873;
            _1870 = 0.0;
            _1871 = 0.5;
            _1873 = _1722;
            float _1730;
            for (;;)
            {
                _1730 = ((_1873 & 1u) != 0u) ? (_1871 + _1870) : _1870;
                uint _1874 = _1873 >> 1u;
                if (_1874 == 0u)
                {
                    break;
                }
                else
                {
                    _1870 = _1730;
                    _1871 *= 0.5;
                    _1873 = _1874;
                }
            }
            frontier_phi_47_pred = _1730;
        }
        _1729 = frontier_phi_47_pred;
        float _1731 = _1729 + _1547;
        float _1735 = sqrt(_1726);
        float _1736 = ((_1731 > 1.0) ? (_1731 + (-1.0)) : _1731) * 6.283185482025146484375;
        float _1739 = cos(_1736) * _1735;
        float _1741 = sin(_1736) * _1735;
        float _1743 = sqrt(1.0 - _1726);
        float _1756 = ((_1743 * _1490) + (_1739 * _1713)) + (_1741 * _1708);
        float _1757 = ((_1743 * _1491) + (_1739 * _1716)) + (_1741 * _1709);
        float _1758 = ((_1743 * _1492) + (_1739 * _1719)) + (_1741 * _1710);
        _69._m0 = 1u;
        uvec4 _1762 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1763 = _1762.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1763, _1762.w, _1763, vec3(_1504, _1505, _1506), 9.9999997473787516355514526367188e-05, vec3(_1756, _1757, _1758), 10000.0, 1);
        float _1769 = dot(vec3(_1490, _1491, _1492), vec3(_1756, _1757, _1758));
        float _2076 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1772 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
        _1721 = ((float(_69._m0 == 0u) * _1772) / (_1772 * 0.3183098733425140380859375)) + _1720;
        uint _1723 = _1722 + 1u;
        if (_1723 == 32u)
        {
            break;
        }
        else
        {
            _1720 = _1721;
            _1722 = _1723;
            continue;
        }
    }
    float _1780 = _1721 * 0.009947183541953563690185546875;
    float _1785 = dot(vec3(_1381, _1382, _1383), vec3(_1490, _1491, _1492)) * 2.0;
    vec4 _1799 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1381 - (_1785 * _1490), _1382 - (_1785 * _1491), _1383 - (_1785 * _1492)), 4.0 - (_1438 * 4.0));
    float _1804 = dot(vec3(_1507, _1509, _1510), vec3(_1490, _1491, _1492));
    float _2087 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
    float _1814 = exp2(log2(1.0 - (isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0)))) * 5.0);
    vec4 _1826 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1490, _1491, _1492), 0.0);
    float _1837 = (_1690 + _1687) + (((_1826.x * _1549) + (((_1814 * (0.959999978542327880859375 - _1556)) + _1559) * _1799.x)) * _1780);
    float _1841 = (_1691 + _1688) + (((_1826.y * _1550) + (((_1814 * (0.959999978542327880859375 - _1557)) + _1561) * _1799.y)) * _1780);
    float _1845 = (_1692 + _1689) + (((_1826.z * _1551) + (((_1814 * (0.959999978542327880859375 - _1558)) + _1562) * _1799.z)) * _1780);
    float _2098 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
    float _2109 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
    float _2120 = isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0));
    bool _1853 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1864;
    _1864.x = _1853 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0)));
    _1864.y = _1853 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2109 : (isnan(_2109) ? 1.0 : min(_2109, 1.0)));
    _1864.z = _1853 ? ((_585 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2120 : (isnan(_2120) ? 1.0 : min(_2120, 1.0)));
    payload._m0 = _1864;
}


