#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _68
{
    vec3 _m0;
};

struct _72
{
    vec2 _m0;
};

struct _75
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 17) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_17;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _68 payload;
hitAttributeEXT _72 hit;
layout(location = 1) rayPayloadEXT _75 _77;
layout(location = 2) rayPayloadEXT _75 _78;

vec3 _2604;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _116 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _125 = sqrt(((_117 * _117) + (_116 * _116)) + (_118 * _118)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _136 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _137 = _136.y;
    uint _177;
    uint _179;
    uint _180;
    if (_136.x == 0u)
    {
        uint _145 = (_137 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _154 = uvec3(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_145 + 2u)).x);
        _177 = _154.x;
        _179 = _154.y;
        _180 = _154.z;
    }
    else
    {
        uint _158 = uint(gl_PrimitiveID) * 6u;
        uint _160 = _158 & 4294967292u;
        uint _163 = (_137 + _160) >> 2u;
        uvec2 _170 = uvec2(texelFetch(l_geomIndexBuffer, int(_163)).x, texelFetch(l_geomIndexBuffer, int(_163 + 1u)).x);
        uint _171 = _170.x;
        uint _172 = _170.y;
        uint _174 = _171 >> 16u;
        uint _175 = _172 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_160 == _158)
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _171 & 65535u;
            frontier_phi_3_2_ladder_2 = _175;
        }
        else
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _174;
            frontier_phi_3_2_ladder_2 = _172 >> 16u;
        }
        _177 = frontier_phi_3_2_ladder_1;
        _179 = frontier_phi_3_2_ladder;
        _180 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _184 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _185 = _184.x;
    uint _186 = _184.z;
    bool _187 = _186 != 0u;
    bool _189 = _136.w == 0u;
    bool _190 = _187 || _189;
    uint _191 = _185 * _177;
    uint _192 = _191 + 12u;
    uint _216;
    uint _217;
    uint _218;
    uint _219;
    if (_190)
    {
        uvec4 _195 = texelFetch(l_geomAttrib_0, int(_192 >> 2u));
        uint _196 = _195.x;
        _216 = _196 & 255u;
        _217 = (_196 >> 8u) & 255u;
        _218 = (_196 >> 16u) & 255u;
        _219 = 16u;
    }
    else
    {
        uint _204 = _192 >> 2u;
        uvec2 _210 = uvec2(texelFetch(l_geomAttrib_0, int(_204)).x, texelFetch(l_geomAttrib_0, int(_204 + 1u)).x);
        uint _211 = _210.x;
        _216 = _211 & 65535u;
        _217 = _211 >> 16u;
        _218 = _210.y & 65535u;
        _219 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_219 + _191) >> 2u));
    uint _228 = _227.x;
    bool _242 = _186 == 0u;
    uint _243;
    if (_242)
    {
        _243 = _219 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_189)
        {
            frontier_phi_9_10_ladder = _219 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _219 + 12u;
        }
        _243 = frontier_phi_9_10_ladder;
    }
    uint _250 = ((_191 + 4u) + (_187 ? (_243 + 4u) : _243)) >> 2u;
    uvec2 _256 = uvec2(texelFetch(l_geomAttrib_0, int(_250)).x, texelFetch(l_geomAttrib_0, int(_250 + 1u)).x);
    uint _257 = _256.x;
    uint _258 = _256.y;
    float _262 = float(int(uint(int(_257 << 16u) >> int(16u))));
    float _263 = float(int(uint(int(_257) >> int(16u))));
    float _267 = float(int(uint(int(_258 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_258) >> int(16u))));
    uint _269 = _185 * _179;
    uint _270 = _269 + 12u;
    uint _291;
    uint _292;
    uint _293;
    uint _294;
    if (_190)
    {
        uvec4 _272 = texelFetch(l_geomAttrib_0, int(_270 >> 2u));
        uint _273 = _272.x;
        _291 = _273 & 255u;
        _292 = (_273 >> 8u) & 255u;
        _293 = (_273 >> 16u) & 255u;
        _294 = 16u;
    }
    else
    {
        uint _279 = _270 >> 2u;
        uvec2 _285 = uvec2(texelFetch(l_geomAttrib_0, int(_279)).x, texelFetch(l_geomAttrib_0, int(_279 + 1u)).x);
        uint _286 = _285.x;
        _291 = _286 & 65535u;
        _292 = _286 >> 16u;
        _293 = _285.y & 65535u;
        _294 = 20u;
    }
    uvec4 _300 = texelFetch(l_geomAttrib_0, int((_294 + _269) >> 2u));
    uint _301 = _300.x;
    uint _313;
    if (_242)
    {
        _313 = _294 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_189)
        {
            frontier_phi_16_17_ladder = _294 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _294 + 12u;
        }
        _313 = frontier_phi_16_17_ladder;
    }
    uint _320 = ((_269 + 4u) + (_187 ? (_313 + 4u) : _313)) >> 2u;
    uvec2 _326 = uvec2(texelFetch(l_geomAttrib_0, int(_320)).x, texelFetch(l_geomAttrib_0, int(_320 + 1u)).x);
    uint _327 = _326.x;
    uint _328 = _326.y;
    float _332 = float(int(uint(int(_327 << 16u) >> int(16u))));
    float _333 = float(int(uint(int(_327) >> int(16u))));
    float _337 = float(int(uint(int(_328 << 16u) >> int(16u))));
    float _338 = float(int(uint(int(_328) >> int(16u))));
    uint _339 = _185 * _180;
    uint _340 = _339 + 12u;
    uint _361;
    uint _362;
    uint _363;
    uint _364;
    if (_190)
    {
        uvec4 _342 = texelFetch(l_geomAttrib_0, int(_340 >> 2u));
        uint _343 = _342.x;
        _361 = _343 & 255u;
        _362 = (_343 >> 8u) & 255u;
        _363 = (_343 >> 16u) & 255u;
        _364 = 16u;
    }
    else
    {
        uint _349 = _340 >> 2u;
        uvec2 _355 = uvec2(texelFetch(l_geomAttrib_0, int(_349)).x, texelFetch(l_geomAttrib_0, int(_349 + 1u)).x);
        uint _356 = _355.x;
        _361 = _356 & 65535u;
        _362 = _356 >> 16u;
        _363 = _355.y & 65535u;
        _364 = 20u;
    }
    uvec4 _370 = texelFetch(l_geomAttrib_0, int((_364 + _339) >> 2u));
    uint _371 = _370.x;
    uint _383;
    if (_242)
    {
        _383 = _364 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_189)
        {
            frontier_phi_23_24_ladder = _364 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _364 + 12u;
        }
        _383 = frontier_phi_23_24_ladder;
    }
    uint _390 = ((_339 + 4u) + (_187 ? (_383 + 4u) : _383)) >> 2u;
    uvec2 _396 = uvec2(texelFetch(l_geomAttrib_0, int(_390)).x, texelFetch(l_geomAttrib_0, int(_390 + 1u)).x);
    uint _397 = _396.x;
    uint _398 = _396.y;
    float _402 = float(int(uint(int(_397 << 16u) >> int(16u))));
    float _403 = float(int(uint(int(_397) >> int(16u))));
    float _407 = float(int(uint(int(_398 << 16u) >> int(16u))));
    float _408 = float(int(uint(int(_398) >> int(16u))));
    bool _410 = _136.z == 0u;
    float _446;
    float _447;
    float _448;
    if (_410)
    {
        uint _413 = _177 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _177 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_410)
    {
        uint _451 = _179 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _179 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _522;
    float _523;
    float _524;
    if (_410)
    {
        uint _489 = _180 * 3u;
        uvec3 _498 = uvec3(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_489 + 2u)).x);
        _522 = uintBitsToFloat(_498.x);
        _523 = uintBitsToFloat(_498.y);
        _524 = uintBitsToFloat(_498.z);
    }
    else
    {
        uint _506 = _180 * 2u;
        uvec2 _512 = uvec2(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x);
        uint _513 = _512.x;
        _522 = unpackHalf2x16(_513).x;
        _523 = unpackHalf2x16(_513 >> 16u).x;
        _524 = unpackHalf2x16(_512.y).x;
    }
    float _527 = (1.0 - hit._m0.x) - hit._m0.y;
    float _571 = (_332 - _262) * 0.00048828125;
    float _573 = (_333 - _263) * 0.00048828125;
    float _576 = (_402 - _262) * 0.00048828125;
    float _577 = (_403 - _263) * 0.00048828125;
    float _580 = (_337 - _267) * 0.00048828125;
    float _581 = (_338 - _268) * 0.00048828125;
    float _584 = (_407 - _267) * 0.00048828125;
    float _585 = (_408 - _268) * 0.00048828125;
    float _607 = _484 - _446;
    float _608 = _485 - _447;
    float _609 = _486 - _448;
    float _612 = fma(_609, gl_ObjectToWorldEXT[2u].x, fma(_608, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _607));
    float _615 = fma(_609, gl_ObjectToWorldEXT[2u].y, fma(_608, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _607));
    float _618 = fma(_609, gl_ObjectToWorldEXT[2u].z, fma(_608, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _607));
    float _619 = _522 - _446;
    float _620 = _523 - _447;
    float _621 = _524 - _448;
    float _624 = fma(_621, gl_ObjectToWorldEXT[2u].x, fma(_620, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _619));
    float _627 = fma(_621, gl_ObjectToWorldEXT[2u].y, fma(_620, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _619));
    float _630 = fma(_621, gl_ObjectToWorldEXT[2u].z, fma(_620, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _619));
    float _631 = (((_332 * hit._m0.x) + (_262 * _527)) + (_402 * hit._m0.y)) * 0.00048828125;
    float _632 = (((_333 * hit._m0.x) + (_263 * _527)) + (_403 * hit._m0.y)) * 0.00048828125;
    float _633 = (((_337 * hit._m0.x) + (_267 * _527)) + (_407 * hit._m0.y)) * 0.00048828125;
    float _634 = (((_338 * hit._m0.x) + (_268 * _527)) + (_408 * hit._m0.y)) * 0.00048828125;
    float _638 = (((float(_216) * _527) + (-127.0)) + (float(_291) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _641 = (((float(_217) * _527) + (-127.0)) + (float(_292) * hit._m0.x)) + (float(_362) * hit._m0.y);
    float _644 = (((float(_218) * _527) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_363) * hit._m0.y);
    float _645 = _638 * 0.0078740157186985015869140625;
    float _647 = _641 * 0.0078740157186985015869140625;
    float _648 = _644 * 0.0078740157186985015869140625;
    float _661 = ((((float(_228 & 255u) * _527) + (-127.0)) + (float(_301 & 255u) * hit._m0.x)) + (float(_371 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _662 = ((((float((_228 >> 8u) & 255u) * _527) + (-127.0)) + (float((_301 >> 8u) & 255u) * hit._m0.x)) + (float((_371 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _663 = ((((float((_228 >> 16u) & 255u) * _527) + (-127.0)) + (float((_301 >> 16u) & 255u) * hit._m0.x)) + (float((_371 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _664 = ((((float(_228 >> 24u) * _527) + (-127.0)) + (float(_301 >> 24u) * hit._m0.x)) + (float(_371 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _674 = ((_662 * _648) - (_663 * _647)) * _664;
    float _675 = ((_663 * _645) - (_661 * _648)) * _664;
    float _676 = ((_661 * _647) - (_662 * _645)) * _664;
    float _680 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
    uvec2 _701 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, int(0u)));
    bool _706 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _759;
    if (_706)
    {
        float _717 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _723 = (_630 * _615) - (_627 * _618);
        float _726 = (_624 * _618) - (_630 * _612);
        float _729 = (_627 * _612) - (_624 * _615);
        float _756 = ((log2((((float(_701.y) * 0.5) * float(_701.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_726 * _726) + (_729 * _729)) + (_723 * _723)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_717 * gl_WorldRayDirectionEXT.x, _717 * gl_WorldRayDirectionEXT.y, _717 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _759 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    }
    else
    {
        _759 = 0.0;
    }
    vec4 _763 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * _631) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _632) + cbTextureTilingScale._m0[15u].w), _759);
    uvec2 _785 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7, int(0u)));
    float _836;
    if (_706)
    {
        float _796 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _802 = (_630 * _615) - (_627 * _618);
        float _805 = (_624 * _618) - (_630 * _612);
        float _808 = (_627 * _612) - (_624 * _615);
        float _834 = ((log2((((float(_785.y) * 0.5) * float(_785.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_805 * _805) + (_808 * _808)) + (_802 * _802)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_796 * gl_WorldRayDirectionEXT.x, _796 * gl_WorldRayDirectionEXT.y, _796 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _836 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    }
    else
    {
        _836 = 0.0;
    }
    float _841 = cbMtdParam._m0[15u].y * textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * _631) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _632) + cbTextureTilingScale._m0[16u].w), _836).x;
    float _848 = ((cbMtdParam._m0[14u].z * (-1.39999997615814208984375)) * (((1.0 - _763.x) * 2.0) - _841)) + 1.0;
    float _2724 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _849 = isnan(1.0) ? _2724 : (isnan(_2724) ? 1.0 : min(_2724, 1.0));
    uvec2 _861 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, int(0u)));
    float _912;
    if (_706)
    {
        float _872 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _878 = (_630 * _615) - (_627 * _618);
        float _881 = (_624 * _618) - (_630 * _612);
        float _884 = (_627 * _612) - (_624 * _615);
        float _910 = ((log2((((float(_861.y) * 0.5) * float(_861.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_881 * _881) + (_884 * _884)) + (_878 * _878)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_872 * gl_WorldRayDirectionEXT.x, _872 * gl_WorldRayDirectionEXT.y, _872 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _912 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    }
    else
    {
        _912 = 0.0;
    }
    vec4 _915 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _633) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _634) + cbTextureTilingScale._m0[4u].w), _912);
    uvec2 _931 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, int(0u)));
    float _982;
    if (_706)
    {
        float _942 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _948 = (_630 * _615) - (_627 * _618);
        float _951 = (_624 * _618) - (_630 * _612);
        float _954 = (_627 * _612) - (_624 * _615);
        float _980 = ((log2((((float(_931.y) * 0.5) * float(_931.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_951 * _951) + (_954 * _954)) + (_948 * _948)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_942 * gl_WorldRayDirectionEXT.x, _942 * gl_WorldRayDirectionEXT.y, _942 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _982 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    }
    else
    {
        _982 = 0.0;
    }
    vec4 _984 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _633) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _634) + cbTextureTilingScale._m0[6u].w), _982);
    float _986 = _984.x;
    float _987 = _984.y;
    float _988 = _984.z;
    float _995 = ((_915.x - _986) * _849) + _986;
    float _996 = ((_915.y - _987) * _849) + _987;
    float _997 = ((_915.z - _988) * _849) + _988;
    float _1003 = (((((1.0 - _763.y) * 2.0) - _841) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].w) + 1.0;
    float _2745 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1004 = isnan(1.0) ? _2745 : (isnan(_2745) ? 1.0 : min(_2745, 1.0));
    uvec2 _1016 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, int(0u)));
    float _1067;
    if (_706)
    {
        float _1027 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1033 = (_630 * _615) - (_627 * _618);
        float _1036 = (_624 * _618) - (_630 * _612);
        float _1039 = (_627 * _612) - (_624 * _615);
        float _1065 = ((log2((((float(_1016.y) * 0.5) * float(_1016.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1036 * _1036) + (_1039 * _1039)) + (_1033 * _1033)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1027 * gl_WorldRayDirectionEXT.x, _1027 * gl_WorldRayDirectionEXT.y, _1027 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1067 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    }
    else
    {
        _1067 = 0.0;
    }
    vec4 _1069 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _633) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _634) + cbTextureTilingScale._m0[2u].w), _1067);
    float _1080 = ((_1069.x - _995) * _1004) + _995;
    float _1081 = ((_1069.y - _996) * _1004) + _996;
    float _1082 = ((_1069.z - _997) * _1004) + _997;
    float _1088 = (((((1.0 - _763.z) * 2.0) - _841) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].z) + 1.0;
    float _2761 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _1089 = isnan(1.0) ? _2761 : (isnan(_2761) ? 1.0 : min(_2761, 1.0));
    uvec2 _1102 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, int(0u)));
    float _1153;
    if (_706)
    {
        float _1113 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1119 = (_630 * _615) - (_627 * _618);
        float _1122 = (_624 * _618) - (_630 * _612);
        float _1125 = (_627 * _612) - (_624 * _615);
        float _1151 = ((log2((((float(_1102.y) * 0.5) * float(_1102.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1122 * _1122) + (_1125 * _1125)) + (_1119 * _1119)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1113 * gl_WorldRayDirectionEXT.x, _1113 * gl_WorldRayDirectionEXT.y, _1113 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1153 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    }
    else
    {
        _1153 = 0.0;
    }
    vec4 _1155 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _633) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _634) + cbTextureTilingScale._m0[17u].w), _1153);
    float _1168 = ((_1155.z - _1082) * _1089) + _1082;
    float _1171 = ((((_1155.x - _1080) * _1089) + _1080) * 2.0) + (-1.0);
    float _1173 = ((((_1155.y - _1081) * _1089) + _1081) * 2.0) + (-1.0);
    float _1174 = dot(vec2(_1171, _1173), vec2(_1171, _1173));
    float _2777 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
    float _1179 = sqrt(1.0 - (isnan(1.0) ? _2777 : (isnan(_2777) ? 1.0 : min(_2777, 1.0))));
    float _1180 = fma(_1179, _645, 0.0);
    float _1181 = fma(_1179, _647, 0.0);
    float _1182 = fma(_1179, _648, 0.0);
    float _1191 = exp2(log2(inversesqrt(dot(vec3(_1180, _1181, _1182), vec3(_1180, _1181, _1182))) * _1181) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[14u].y;
    float _2788 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    float _1192 = isnan(1.0) ? _2788 : (isnan(_2788) ? 1.0 : min(_2788, 1.0));
    uvec2 _1210 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, int(0u)));
    float _1261;
    if (_706)
    {
        float _1221 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1227 = (_630 * _615) - (_627 * _618);
        float _1230 = (_624 * _618) - (_630 * _612);
        float _1233 = (_627 * _612) - (_624 * _615);
        float _1259 = ((log2((((float(_1210.y) * 0.5) * float(_1210.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1230 * _1230) + (_1233 * _1233)) + (_1227 * _1227)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1221 * gl_WorldRayDirectionEXT.x, _1221 * gl_WorldRayDirectionEXT.y, _1221 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1261 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
    }
    else
    {
        _1261 = 0.0;
    }
    vec4 _1264 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _633) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _634) + cbTextureTilingScale._m0[7u].w), _1261);
    float _1269 = _1264.x * cbMtdParam._m0[10u].x;
    float _1270 = _1264.y * cbMtdParam._m0[10u].y;
    float _1271 = _1264.z * cbMtdParam._m0[10u].z;
    uvec2 _1290 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, int(0u)));
    float _1341;
    if (_706)
    {
        float _1301 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1307 = (_630 * _615) - (_627 * _618);
        float _1310 = (_624 * _618) - (_630 * _612);
        float _1313 = (_627 * _612) - (_624 * _615);
        float _1339 = ((log2((((float(_1290.y) * 0.5) * float(_1290.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1310 * _1310) + (_1313 * _1313)) + (_1307 * _1307)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1301 * gl_WorldRayDirectionEXT.x, _1301 * gl_WorldRayDirectionEXT.y, _1301 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1341 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
    }
    else
    {
        _1341 = 0.0;
    }
    vec4 _1343 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _633) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _634) + cbTextureTilingScale._m0[5u].w), _1341);
    float _1357 = (((_1343.x * cbMtdParam._m0[11u].x) - _1269) * _849) + _1269;
    float _1358 = (((_1343.y * cbMtdParam._m0[11u].y) - _1270) * _849) + _1270;
    float _1359 = (((_1343.z * cbMtdParam._m0[11u].z) - _1271) * _849) + _1271;
    uvec2 _1376 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, int(0u)));
    float _1427;
    if (_706)
    {
        float _1387 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1393 = (_630 * _615) - (_627 * _618);
        float _1396 = (_624 * _618) - (_630 * _612);
        float _1399 = (_627 * _612) - (_624 * _615);
        float _1425 = ((log2((((float(_1376.y) * 0.5) * float(_1376.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1396 * _1396) + (_1399 * _1399)) + (_1393 * _1393)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1387 * gl_WorldRayDirectionEXT.x, _1387 * gl_WorldRayDirectionEXT.y, _1387 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1427 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
    }
    else
    {
        _1427 = 0.0;
    }
    vec4 _1429 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _633) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _634) + cbTextureTilingScale._m0[3u].w), _1427);
    float _1443 = (((_1429.x * cbMtdParam._m0[12u].x) - _1357) * _1004) + _1357;
    float _1444 = (((_1429.y * cbMtdParam._m0[12u].y) - _1358) * _1004) + _1358;
    float _1445 = (((_1429.z * cbMtdParam._m0[12u].z) - _1359) * _1004) + _1359;
    uvec2 _1464 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, int(0u)));
    float _1515;
    if (_706)
    {
        float _1475 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1481 = (_630 * _615) - (_627 * _618);
        float _1484 = (_624 * _618) - (_630 * _612);
        float _1487 = (_627 * _612) - (_624 * _615);
        float _1513 = ((log2((((float(_1464.y) * 0.5) * float(_1464.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1484 * _1484) + (_1487 * _1487)) + (_1481 * _1481)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1475 * gl_WorldRayDirectionEXT.x, _1475 * gl_WorldRayDirectionEXT.y, _1475 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1515 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    }
    else
    {
        _1515 = 0.0;
    }
    vec4 _1517 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[18u].x * _633) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _634) + cbTextureTilingScale._m0[18u].w), _1515);
    uvec2 _1551 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, int(0u)));
    float _1602;
    if (_706)
    {
        float _1562 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1568 = (_630 * _615) - (_627 * _618);
        float _1571 = (_624 * _618) - (_630 * _612);
        float _1574 = (_627 * _612) - (_624 * _615);
        float _1600 = ((log2((((float(_1551.y) * 0.5) * float(_1551.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_1571 * _1571) + (_1574 * _1574)) + (_1568 * _1568)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1562 * gl_WorldRayDirectionEXT.x, _1562 * gl_WorldRayDirectionEXT.y, _1562 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1602 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
    }
    else
    {
        _1602 = 0.0;
    }
    vec4 _1604 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _631) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _632) + cbTextureTilingScale._m0[0u].w), _1602);
    float _1612 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_1517.x * cbMtdParam._m0[13u].x) - _1443) * _1089) + _1443)) * _1604.x;
    float _1615 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_1517.y * cbMtdParam._m0[13u].y) - _1444) * _1089) + _1444)) * _1604.y;
    float _1618 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_1517.z * cbMtdParam._m0[13u].z) - _1445) * _1089) + _1445)) * _1604.z;
    uvec2 _1630 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5, int(0u)));
    float _1681;
    if (_706)
    {
        float _1641 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1647 = (_630 * _615) - (_627 * _618);
        float _1650 = (_624 * _618) - (_630 * _612);
        float _1653 = (_627 * _612) - (_624 * _615);
        float _1679 = ((log2((((float(_1630.y) * 0.5) * float(_1630.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_1650 * _1650) + (_1653 * _1653)) + (_1647 * _1647)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1641 * gl_WorldRayDirectionEXT.x, _1641 * gl_WorldRayDirectionEXT.y, _1641 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1681 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
    }
    else
    {
        _1681 = 0.0;
    }
    vec4 _1683 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _631) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _632) + cbTextureTilingScale._m0[14u].w), _1681);
    float _1694 = ((_1683.x - _1612) * _1192) + _1612;
    float _1695 = ((_1683.y - _1615) * _1192) + _1615;
    float _1696 = ((_1683.z - _1618) * _1192) + _1618;
    uvec2 _1709 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_1, int(0u)));
    float _1760;
    if (_706)
    {
        float _1720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1726 = (_630 * _615) - (_627 * _618);
        float _1729 = (_624 * _618) - (_630 * _612);
        float _1732 = (_627 * _612) - (_624 * _615);
        float _1758 = ((log2((((float(_1709.y) * 0.5) * float(_1709.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1729 * _1729) + (_1732 * _1732)) + (_1726 * _1726)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1720 * gl_WorldRayDirectionEXT.x, _1720 * gl_WorldRayDirectionEXT.y, _1720 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1760 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
    }
    else
    {
        _1760 = 0.0;
    }
    vec4 _1762 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _633) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _634) + cbTextureTilingScale._m0[1u].w), _1760);
    float _1764 = _1762.x;
    uvec2 _1776 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_17, int(0u)));
    float _1827;
    if (_706)
    {
        float _1787 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1793 = (_630 * _615) - (_627 * _618);
        float _1796 = (_624 * _618) - (_630 * _612);
        float _1799 = (_627 * _612) - (_624 * _615);
        float _1825 = ((log2((((float(_1776.y) * 0.5) * float(_1776.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1796 * _1796) + (_1799 * _1799)) + (_1793 * _1793)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1787 * gl_WorldRayDirectionEXT.x, _1787 * gl_WorldRayDirectionEXT.y, _1787 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1827 = isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0));
    }
    else
    {
        _1827 = 0.0;
    }
    float _1834 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _633) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _634) + cbTextureTilingScale._m0[9u].w), _1827).x - _1764) * _849) + _1764;
    uvec2 _1846 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_4, int(0u)));
    float _1897;
    if (_706)
    {
        float _1857 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1863 = (_630 * _615) - (_627 * _618);
        float _1866 = (_624 * _618) - (_630 * _612);
        float _1869 = (_627 * _612) - (_624 * _615);
        float _1895 = ((log2((((float(_1846.y) * 0.5) * float(_1846.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1866 * _1866) + (_1869 * _1869)) + (_1863 * _1863)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1857 * gl_WorldRayDirectionEXT.x, _1857 * gl_WorldRayDirectionEXT.y, _1857 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1897 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
    }
    else
    {
        _1897 = 0.0;
    }
    float _1904 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * _633) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _634) + cbTextureTilingScale._m0[13u].w), _1897).x - _1834) * _1004) + _1834;
    uvec2 _1916 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_18, int(0u)));
    float _1967;
    if (_706)
    {
        float _1927 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1933 = (_630 * _615) - (_627 * _618);
        float _1936 = (_624 * _618) - (_630 * _612);
        float _1939 = (_627 * _612) - (_624 * _615);
        float _1965 = ((log2((((float(_1916.y) * 0.5) * float(_1916.x)) * abs((_585 * _580) - (_584 * _581))) / (sqrt(((_1936 * _1936) + (_1939 * _1939)) + (_1933 * _1933)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1927 * gl_WorldRayDirectionEXT.x, _1927 * gl_WorldRayDirectionEXT.y, _1927 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _1967 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
    }
    else
    {
        _1967 = 0.0;
    }
    uvec2 _1986 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_2, int(0u)));
    float _2037;
    if (_706)
    {
        float _1997 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2003 = (_630 * _615) - (_627 * _618);
        float _2006 = (_624 * _618) - (_630 * _612);
        float _2009 = (_627 * _612) - (_624 * _615);
        float _2035 = ((log2((((float(_1986.y) * 0.5) * float(_1986.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_2006 * _2006) + (_2009 * _2009)) + (_2003 * _2003)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1997 * gl_WorldRayDirectionEXT.x, _1997 * gl_WorldRayDirectionEXT.y, _1997 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _2037 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
    }
    else
    {
        _2037 = 0.0;
    }
    vec4 _2039 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _631) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _632) + cbTextureTilingScale._m0[11u].w), _2037);
    float _2041 = _2039.x;
    float _2854 = isnan(0.0) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.0 : max(cbMtdParam._m0[14u].w, 0.0));
    float _2045 = (((((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _633) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _634) + cbTextureTilingScale._m0[10u].w), _1967).x - _1904) * _1089) + _1904) - _2041) * (isnan(1.0) ? _2854 : (isnan(_2854) ? 1.0 : min(_2854, 1.0)))) + _2041;
    float _2047 = _2045 - (_2045 * _1192);
    uvec2 _2059 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3, int(0u)));
    float _2110;
    if (_706)
    {
        float _2070 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2076 = (_630 * _615) - (_627 * _618);
        float _2079 = (_624 * _618) - (_630 * _612);
        float _2082 = (_627 * _612) - (_624 * _615);
        float _2108 = ((log2((((float(_2059.y) * 0.5) * float(_2059.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_2079 * _2079) + (_2082 * _2082)) + (_2076 * _2076)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_2070 * gl_WorldRayDirectionEXT.x, _2070 * gl_WorldRayDirectionEXT.y, _2070 * gl_WorldRayDirectionEXT.z), vec3(_645, _647, _648))));
        _2110 = isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0));
    }
    else
    {
        _2110 = 0.0;
    }
    vec4 _2112 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _631) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _632) + cbTextureTilingScale._m0[12u].w), _2110);
    float _2119 = (_2112.x * 2.0) + (-1.0);
    float _2120 = (_2112.y * 2.0) + (-1.0);
    float _2121 = dot(vec2(_2119, _2120), vec2(_2119, _2120));
    float _2870 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
    float _2129 = ((_2112.z - _1168) * _1192) + _1168;
    float _2138 = ((sqrt(1.0 - (isnan(1.0) ? _2870 : (isnan(_2870) ? 1.0 : min(_2870, 1.0)))) - _1179) * _1192) + _1179;
    uvec2 _2151 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, int(0u)));
    float _2155 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2156 = _2155 * gl_WorldRayDirectionEXT.x;
    float _2157 = _2155 * gl_WorldRayDirectionEXT.y;
    float _2158 = _2155 * gl_WorldRayDirectionEXT.z;
    float _2202;
    if (_706)
    {
        float _2168 = (_630 * _615) - (_627 * _618);
        float _2171 = (_624 * _618) - (_630 * _612);
        float _2174 = (_627 * _612) - (_624 * _615);
        float _2200 = ((log2((((float(_2151.y) * 0.5) * float(_2151.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_2171 * _2171) + (_2174 * _2174)) + (_2168 * _2168)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_2156, _2157, _2158), vec3(_645, _647, _648))));
        _2202 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    }
    else
    {
        _2202 = 0.0;
    }
    vec4 _2204 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _631) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _632) + cbTextureTilingScale._m0[8u].w), _2202);
    float _2214 = (((_2119 - _1171) * _1192) + _1171) + (((_2204.x * 2.0) + (-1.0)) * cbMtdParam._m0[15u].x);
    float _2215 = (((_2120 - _1173) * _1192) + _1173) + (((_2204.y * 2.0) + (-1.0)) * cbMtdParam._m0[15u].x);
    float _2218 = fma(_2138, _645, fma(_2215, _661, (_680 * _674) * _2214));
    float _2221 = fma(_2138, _647, fma(_2215, _662, (_680 * _675) * _2214));
    float _2224 = fma(_2138, _648, fma(_2215, _663, (_680 * _676) * _2214));
    float _2228 = inversesqrt(dot(vec3(_2218, _2221, _2224), vec3(_2218, _2221, _2224)));
    float _2229 = _2228 * _2218;
    float _2230 = _2228 * _2221;
    float _2231 = _2228 * _2224;
    float _2243 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2244 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2245 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2246 = (-0.0) - _2156;
    float _2248 = (-0.0) - _2157;
    float _2249 = (-0.0) - _2158;
    float _2255 = float(gl_LaunchIDEXT.x);
    float _2256 = float(gl_LaunchIDEXT.y);
    float _2259 = float(gl_LaunchSizeEXT.x);
    float _2273 = fract(fract(sin(dot(vec2(_2255 / _2259, _2256 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2286 = fract(fract(sin(dot(vec2((_2255 + 128.0) / _2259, (_2256 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2287 = 1.0 - _2047;
    float _2288 = _2287 * _1694;
    float _2289 = _2287 * _1695;
    float _2290 = _2287 * _1696;
    float _2295 = _2047 * (_1694 + (-0.039999999105930328369140625));
    float _2296 = _2047 * (_1695 + (-0.039999999105930328369140625));
    float _2297 = _2047 * (_1696 + (-0.039999999105930328369140625));
    float _2298 = _2295 + 0.039999999105930328369140625;
    float _2300 = _2296 + 0.039999999105930328369140625;
    float _2301 = _2297 + 0.039999999105930328369140625;
    _78._m0 = 1u;
    uvec4 _2311 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2312 = _2311.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2312, _2311.w, _2312, vec3(_2243, _2244, _2245), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2426;
    float _2427;
    float _2428;
    float _2429;
    float _2430;
    float _2431;
    if (_78._m0 == 0u)
    {
        float _2332 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2229, _2230, _2231));
        float _2886 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
        float _2335 = isnan(1.0) ? _2886 : (isnan(_2886) ? 1.0 : min(_2886, 1.0));
        float _2354 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2129) * 0.949999988079071044921875);
        float _2355 = _2354 * _2354;
        float _2356 = g_sceneCB._m0[4u].x - _2156;
        float _2357 = g_sceneCB._m0[4u].y - _2157;
        float _2358 = g_sceneCB._m0[4u].z - _2158;
        float _2362 = inversesqrt(dot(vec3(_2356, _2357, _2358), vec3(_2356, _2357, _2358)));
        float _2363 = _2362 * _2356;
        float _2364 = _2362 * _2357;
        float _2365 = _2362 * _2358;
        float _2366 = dot(vec3(_2229, _2230, _2231), vec3(g_sceneCB._m0[4u].xyz));
        float _2897 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
        float _2369 = isnan(1.0) ? _2897 : (isnan(_2897) ? 1.0 : min(_2897, 1.0));
        float _2370 = dot(vec3(_2229, _2230, _2231), vec3(_2246, _2248, _2249));
        float _2908 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
        float _2373 = isnan(1.0) ? _2908 : (isnan(_2908) ? 1.0 : min(_2908, 1.0));
        float _2374 = dot(vec3(_2229, _2230, _2231), vec3(_2363, _2364, _2365));
        float _2919 = isnan(0.0) ? _2374 : (isnan(_2374) ? 0.0 : max(_2374, 0.0));
        float _2377 = isnan(1.0) ? _2919 : (isnan(_2919) ? 1.0 : min(_2919, 1.0));
        float _2378 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2363, _2364, _2365));
        float _2930 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
        float _2382 = _2355 * _2355;
        float _2386 = ((_2377 * _2377) * (_2382 + (-1.0))) + 1.0;
        float _2395 = exp2(log2(1.0 - (isnan(1.0) ? _2930 : (isnan(_2930) ? 1.0 : min(_2930, 1.0)))) * 5.0);
        float _2406 = 1.0 - _2355;
        float _2417 = (0.5 / (((_2373 * ((_2369 * _2406) + _2355)) + 9.9999999392252902907785028219223e-09) + (((_2373 * _2406) + _2355) * _2369))) * _2369;
        float _2941 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
        float _2419 = (isnan(1.0) ? _2941 : (isnan(_2941) ? 1.0 : min(_2941, 1.0))) * (_2382 / ((_2386 * _2386) * 3.141590118408203125));
        _2426 = ((_2288 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2335;
        _2427 = ((_2289 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2335;
        _2428 = ((_2290 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2335;
        _2429 = (((_2395 * (0.959999978542327880859375 - _2295)) + _2298) * g_sceneCB._m0[5u].x) * _2419;
        _2430 = (((_2395 * (0.959999978542327880859375 - _2296)) + _2300) * g_sceneCB._m0[5u].y) * _2419;
        _2431 = (((_2395 * (0.959999978542327880859375 - _2297)) + _2301) * g_sceneCB._m0[5u].z) * _2419;
    }
    else
    {
        _2426 = 0.0;
        _2427 = 0.0;
        _2428 = 0.0;
        _2429 = 0.0;
        _2430 = 0.0;
        _2431 = 0.0;
    }
    bool _2433 = abs(_2230) < 0.89999997615814208984375;
    float _2435 = float(_2433);
    float _2436 = _2433 ? 0.0 : 1.0;
    float _2439 = (_2435 * _2231) - (_2436 * _2230);
    float _2440 = _2436 * _2229;
    float _2442 = (-0.0) - (_2229 * _2435);
    float _2446 = inversesqrt(dot(vec3(_2439, _2440, _2442), vec3(_2439, _2440, _2442)));
    float _2447 = _2439 * _2446;
    float _2448 = _2440 * _2446;
    float _2449 = _2446 * _2442;
    float _2452 = (_2448 * _2231) - (_2449 * _2230);
    float _2455 = (_2449 * _2229) - (_2447 * _2231);
    float _2458 = (_2447 * _2230) - (_2448 * _2229);
    float _2460;
    float _2468;
    float _2459 = 0.0;
    uint _2461 = 0u;
    float _2465;
    bool _2467;
    for (;;)
    {
        _2465 = (float(_2461) + _2273) * 0.03125;
        _2467 = _2461 == 0u;
        float frontier_phi_77_pred;
        if (_2467)
        {
            frontier_phi_77_pred = 0.0;
        }
        else
        {
            float _2609;
            float _2610;
            uint _2612;
            _2609 = 0.0;
            _2610 = 0.5;
            _2612 = _2461;
            float _2469;
            for (;;)
            {
                _2469 = ((_2612 & 1u) != 0u) ? (_2610 + _2609) : _2609;
                uint _2613 = _2612 >> 1u;
                if (_2613 == 0u)
                {
                    break;
                }
                else
                {
                    _2609 = _2469;
                    _2610 *= 0.5;
                    _2612 = _2613;
                }
            }
            frontier_phi_77_pred = _2469;
        }
        _2468 = frontier_phi_77_pred;
        float _2470 = _2468 + _2286;
        float _2474 = sqrt(_2465);
        float _2475 = ((_2470 > 1.0) ? (_2470 + (-1.0)) : _2470) * 6.283185482025146484375;
        float _2478 = cos(_2475) * _2474;
        float _2480 = sin(_2475) * _2474;
        float _2482 = sqrt(1.0 - _2465);
        float _2495 = ((_2482 * _2229) + (_2478 * _2452)) + (_2480 * _2447);
        float _2496 = ((_2482 * _2230) + (_2478 * _2455)) + (_2480 * _2448);
        float _2497 = ((_2482 * _2231) + (_2478 * _2458)) + (_2480 * _2449);
        _77._m0 = 1u;
        uvec4 _2501 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2502 = _2501.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2502, _2501.w, _2502, vec3(_2243, _2244, _2245), 9.9999997473787516355514526367188e-05, vec3(_2495, _2496, _2497), 10000.0, 1);
        float _2508 = dot(vec3(_2229, _2230, _2231), vec3(_2495, _2496, _2497));
        float _2952 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
        float _2511 = isnan(1.0) ? _2952 : (isnan(_2952) ? 1.0 : min(_2952, 1.0));
        _2460 = ((float(_77._m0 == 0u) * _2511) / (_2511 * 0.3183098733425140380859375)) + _2459;
        uint _2462 = _2461 + 1u;
        if (_2462 == 32u)
        {
            break;
        }
        else
        {
            _2459 = _2460;
            _2461 = _2462;
            continue;
        }
    }
    float _2519 = _2460 * 0.009947183541953563690185546875;
    float _2524 = dot(vec3(_2156, _2157, _2158), vec3(_2229, _2230, _2231)) * 2.0;
    vec4 _2538 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2156 - (_2524 * _2229), _2157 - (_2524 * _2230), _2158 - (_2524 * _2231)), 4.0 - (_2129 * 4.0));
    float _2543 = dot(vec3(_2246, _2248, _2249), vec3(_2229, _2230, _2231));
    float _2963 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2553 = exp2(log2(1.0 - (isnan(1.0) ? _2963 : (isnan(_2963) ? 1.0 : min(_2963, 1.0)))) * 5.0);
    vec4 _2565 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2229, _2230, _2231), 0.0);
    float _2576 = (_2429 + _2426) + (((_2565.x * _2288) + (((_2553 * (0.959999978542327880859375 - _2295)) + _2298) * _2538.x)) * _2519);
    float _2580 = (_2430 + _2427) + (((_2565.y * _2289) + (((_2553 * (0.959999978542327880859375 - _2296)) + _2300) * _2538.y)) * _2519);
    float _2584 = (_2431 + _2428) + (((_2565.z * _2290) + (((_2553 * (0.959999978542327880859375 - _2297)) + _2301) * _2538.z)) * _2519);
    float _2974 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2985 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2996 = isnan(0.0) ? _2584 : (isnan(_2584) ? 0.0 : max(_2584, 0.0));
    bool _2592 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2603;
    _2603.x = _2592 ? ((_638 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2974 : (isnan(_2974) ? 1.0 : min(_2974, 1.0)));
    _2603.y = _2592 ? ((_641 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2985 : (isnan(_2985) ? 1.0 : min(_2985, 1.0)));
    _2603.z = _2592 ? ((_644 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2996 : (isnan(_2996) ? 1.0 : min(_2996, 1.0)));
    payload._m0 = _2603;
}


