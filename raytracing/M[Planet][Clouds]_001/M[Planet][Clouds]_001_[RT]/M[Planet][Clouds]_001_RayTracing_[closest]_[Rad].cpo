#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1491;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _178 * _170;
    uint _181 = _179 >> 2u;
    uvec3 _190 = uvec3(texelFetch(l_geomAttrib_0, int(_181)).x, texelFetch(l_geomAttrib_0, int(_181 + 1u)).x, texelFetch(l_geomAttrib_0, int(_181 + 2u)).x);
    uint _197 = _177.z;
    bool _198 = _197 != 0u;
    bool _200 = _129.w == 0u;
    bool _201 = _198 || _200;
    uint _202 = _179 + 12u;
    uint _225;
    uint _226;
    uint _227;
    uint _228;
    if (_201)
    {
        uvec4 _204 = texelFetch(l_geomAttrib_0, int(_202 >> 2u));
        uint _205 = _204.x;
        _225 = _205 & 255u;
        _226 = (_205 >> 8u) & 255u;
        _227 = (_205 >> 16u) & 255u;
        _228 = 20u;
    }
    else
    {
        uint _213 = _202 >> 2u;
        uvec2 _219 = uvec2(texelFetch(l_geomAttrib_0, int(_213)).x, texelFetch(l_geomAttrib_0, int(_213 + 1u)).x);
        uint _220 = _219.x;
        _225 = _220 & 65535u;
        _226 = _220 >> 16u;
        _227 = _219.y & 65535u;
        _228 = 24u;
    }
    bool _234 = _197 == 0u;
    uint _235;
    if (_234)
    {
        _235 = _228;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_200)
        {
            frontier_phi_9_10_ladder = _228 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _228 + 8u;
        }
        _235 = frontier_phi_9_10_ladder;
    }
    uvec4 _244 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + (_198 ? (_235 + 4u) : _235)) >> 2u));
    uint _245 = _244.x;
    float _249 = float(int(uint(int(_245 << 16u) >> int(16u))));
    float _250 = float(int(uint(int(_245) >> int(16u))));
    uint _251 = _178 * _172;
    uint _252 = _251 >> 2u;
    uvec3 _261 = uvec3(texelFetch(l_geomAttrib_0, int(_252)).x, texelFetch(l_geomAttrib_0, int(_252 + 1u)).x, texelFetch(l_geomAttrib_0, int(_252 + 2u)).x);
    uint _268 = _251 + 12u;
    uint _289;
    uint _290;
    uint _291;
    uint _292;
    if (_201)
    {
        uvec4 _270 = texelFetch(l_geomAttrib_0, int(_268 >> 2u));
        uint _271 = _270.x;
        _289 = _271 & 255u;
        _290 = (_271 >> 8u) & 255u;
        _291 = (_271 >> 16u) & 255u;
        _292 = 20u;
    }
    else
    {
        uint _277 = _268 >> 2u;
        uvec2 _283 = uvec2(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x);
        uint _284 = _283.x;
        _289 = _284 & 65535u;
        _290 = _284 >> 16u;
        _291 = _283.y & 65535u;
        _292 = 24u;
    }
    uint _296;
    if (_234)
    {
        _296 = _292;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_200)
        {
            frontier_phi_16_17_ladder = _292 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _292 + 8u;
        }
        _296 = frontier_phi_16_17_ladder;
    }
    uvec4 _304 = texelFetch(l_geomAttrib_0, int(((_251 + 4u) + (_198 ? (_296 + 4u) : _296)) >> 2u));
    uint _305 = _304.x;
    float _309 = float(int(uint(int(_305 << 16u) >> int(16u))));
    float _310 = float(int(uint(int(_305) >> int(16u))));
    uint _311 = _178 * _173;
    uint _312 = _311 >> 2u;
    uvec3 _321 = uvec3(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x, texelFetch(l_geomAttrib_0, int(_312 + 2u)).x);
    uint _328 = _311 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_201)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 20u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 24u;
    }
    uint _356;
    if (_234)
    {
        _356 = _352;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_200)
        {
            frontier_phi_23_24_ladder = _352 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _352 + 8u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_311 + 4u) + (_198 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _129.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _170 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _170 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _172 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _172 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _173 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _173 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _502 = ((uintBitsToFloat(_261.x) * hit._m0.x) + (uintBitsToFloat(_190.x) * _489)) + (uintBitsToFloat(_321.x) * hit._m0.y);
    float _503 = ((uintBitsToFloat(_261.y) * hit._m0.x) + (uintBitsToFloat(_190.y) * _489)) + (uintBitsToFloat(_321.y) * hit._m0.y);
    float _504 = ((uintBitsToFloat(_261.z) * hit._m0.x) + (uintBitsToFloat(_190.z) * _489)) + (uintBitsToFloat(_321.z) * hit._m0.y);
    float _526 = (_309 - _249) * 0.00048828125;
    float _528 = (_310 - _250) * 0.00048828125;
    float _531 = (_369 - _249) * 0.00048828125;
    float _532 = (_370 - _250) * 0.00048828125;
    float _554 = _446 - _408;
    float _555 = _447 - _409;
    float _556 = _448 - _410;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = _484 - _408;
    float _567 = _485 - _409;
    float _568 = _486 - _410;
    float _571 = fma(_568, gl_ObjectToWorldEXT[2u].x, fma(_567, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _566));
    float _574 = fma(_568, gl_ObjectToWorldEXT[2u].y, fma(_567, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _566));
    float _577 = fma(_568, gl_ObjectToWorldEXT[2u].z, fma(_567, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _566));
    float _578 = (((_309 * hit._m0.x) + (_249 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _579 = (((_310 * hit._m0.x) + (_250 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _583 = (((float(_225) * _489) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _586 = (((float(_226) * _489) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _589 = (((float(_227) * _489) + (-127.0)) + (float(_291) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _590 = _583 * 0.0078740157186985015869140625;
    float _592 = _586 * 0.0078740157186985015869140625;
    float _593 = _589 * 0.0078740157186985015869140625;
    float _610 = cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x;
    uvec2 _628 = uvec2(textureSize(M_Planet_Clouds_001_snp_0_Texture2D_1, int(0u)));
    bool _633 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _686;
    if (_633)
    {
        float _644 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _650 = (_577 * _562) - (_574 * _565);
        float _653 = (_571 * _565) - (_577 * _559);
        float _656 = (_574 * _559) - (_571 * _562);
        float _683 = ((log2((((float(_628.y) * 0.5) * float(_628.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_653 * _653) + (_656 * _656)) + (_650 * _650)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_644 * gl_WorldRayDirectionEXT.x, _644 * gl_WorldRayDirectionEXT.y, _644 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _686 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    }
    else
    {
        _686 = 0.0;
    }
    vec4 _690 = textureLod(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[1u].x * cbMtdParam._m0[23u].w) * ((_610 * cbMtdParam._m0[23u].y) + _578)) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[24u].x) * ((_610 * cbMtdParam._m0[23u].z) + _579)) + cbTextureTilingScale._m0[1u].w), _686);
    float _692 = _690.x;
    uvec2 _723 = uvec2(textureSize(M_Planet_Clouds_001_snp_0_Texture2D_0, int(0u)));
    float _774;
    if (_633)
    {
        float _734 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _740 = (_577 * _562) - (_574 * _565);
        float _743 = (_571 * _565) - (_577 * _559);
        float _746 = (_574 * _559) - (_571 * _562);
        float _772 = ((log2((((float(_723.y) * 0.5) * float(_723.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_743 * _743) + (_746 * _746)) + (_740 * _740)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_734 * gl_WorldRayDirectionEXT.x, _734 * gl_WorldRayDirectionEXT.y, _734 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _774 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    }
    else
    {
        _774 = 0.0;
    }
    vec4 _777 = textureLod(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[24u].y + _578) * cbMtdParam._m0[22u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[24u].z + _579) * cbMtdParam._m0[22u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _774);
    uvec2 _808 = uvec2(textureSize(M_Planet_Clouds_001_snp_0_Texture2D_2, int(0u)));
    float _859;
    if (_633)
    {
        float _819 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _825 = (_577 * _562) - (_574 * _565);
        float _828 = (_571 * _565) - (_577 * _559);
        float _831 = (_574 * _559) - (_571 * _562);
        float _857 = ((log2((((float(_808.y) * 0.5) * float(_808.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_828 * _828) + (_831 * _831)) + (_825 * _825)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_819 * gl_WorldRayDirectionEXT.x, _819 * gl_WorldRayDirectionEXT.y, _819 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _859 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    }
    else
    {
        _859 = 0.0;
    }
    vec4 _862 = textureLod(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((((((_692 * cbMtdParam._m0[22u].w) + _578) + (cbMtdParam._m0[21u].w * _610)) + cbMtdParam._m0[21u].y) + ((_777.x + (-0.5)) * cbMtdParam._m0[16u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((((((_692 * cbMtdParam._m0[23u].x) + _579) + (cbMtdParam._m0[22u].x * _610)) + cbMtdParam._m0[21u].z) + ((_777.y + (-0.5)) * cbMtdParam._m0[16u].z)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _859);
    float _874 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_590, _592, _593, 0.0)) - cbMtdParam._m0[17u].w;
    float _1614 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _882 = exp2(log2(1.0 - (isnan(1.0) ? _1614 : (isnan(_1614) ? 1.0 : min(_1614, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].x : (isnan(cbMtdParam._m0[17u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].x, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].y;
    float _890 = inversesqrt(dot(vec3(_502, _503, _504), vec3(_502, _503, _504)));
    float _891 = _890 * _502;
    float _892 = _890 * _503;
    float _893 = _890 * _504;
    uvec4 _897 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _899 = _897.y != 0u;
    float _908 = inversesqrt(dot(vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy), vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy)));
    float _917 = _899 ? g_sceneCB._m0[4u].x : (_908 * cbMtdParam._m0[24u].w);
    float _918 = _899 ? g_sceneCB._m0[4u].y : (_908 * cbMtdParam._m0[25u].x);
    float _919 = _899 ? g_sceneCB._m0[4u].z : (_908 * cbMtdParam._m0[25u].y);
    float _923 = inversesqrt(dot(vec3(_917, _918, _919), vec3(_917, _918, _919)));
    float _924 = _917 * _923;
    float _925 = _918 * _923;
    float _926 = _919 * _923;
    float _927 = dot(vec4(_891, _892, _893, 0.0), vec4(_924, _925, _926, 0.0));
    float _1630 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _930 = isnan(1.0) ? _1630 : (isnan(_1630) ? 1.0 : min(_1630, 1.0));
    float _932 = 1.0 - (_930 * _930);
    float _934 = (-0.0) - (_932 - cbMtdParam._m0[19u].z);
    float _936 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _957 = (-0.0) - (_932 - cbMtdParam._m0[20u].y);
    float _958 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _990 = cbMtdParam._m0[13u].z - (cbMtdParam._m0[19u].y * cbMtdParam._m0[13u].z);
    float _991 = cbMtdParam._m0[13u].w - (cbMtdParam._m0[19u].y * cbMtdParam._m0[13u].w);
    float _992 = cbMtdParam._m0[14u].x - (cbMtdParam._m0[19u].y * cbMtdParam._m0[14u].x);
    float _1003 = inversesqrt(dot(vec3(_924, _925, _926), vec3(_924, _925, _926)));
    float _1018 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_891, _892, _893, 0.0), vec4(_1003 * _924, _1003 * _925, _1003 * _926, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1661 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _1020 = isnan(1.0) ? _1661 : (isnan(_1661) ? 1.0 : min(_1661, 1.0));
    float _1026 = exp2(log2(_1020 * 6.5) * 7.0);
    float _1672 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _1028 = (isnan(1.0) ? _1672 : (isnan(_1672) ? 1.0 : min(_1672, 1.0))) + _1020;
    float _1683 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
    float _1029 = isnan(1.0) ? _1683 : (isnan(_1683) ? 1.0 : min(_1683, 1.0));
    float _1041 = ((_1029 * ((cbMtdParam._m0[12u].z - (cbMtdParam._m0[12u].z * cbMtdParam._m0[19u].y)) - _990)) + _990) * _862.x;
    float _1042 = ((_1029 * ((cbMtdParam._m0[12u].w - _991) - (cbMtdParam._m0[12u].w * cbMtdParam._m0[19u].y))) + _991) * _862.y;
    float _1043 = ((_1029 * ((cbMtdParam._m0[13u].x - _992) - (cbMtdParam._m0[13u].x * cbMtdParam._m0[19u].y))) + _992) * _862.z;
    float _1044 = isnan(_1042) ? _1041 : (isnan(_1041) ? _1042 : max(_1041, _1042));
    float _1045 = isnan(_1043) ? _1044 : (isnan(_1044) ? _1043 : max(_1044, _1043));
    float _1048;
    float _1050;
    if (_1045 < 1.1920928955078125e-07)
    {
        _1048 = 0.0;
        _1050 = 0.0;
    }
    else
    {
        float _1074 = isnan(_1042) ? _1041 : (isnan(_1041) ? _1042 : min(_1041, _1042));
        float _1076 = _1045 - (isnan(_1043) ? _1074 : (isnan(_1074) ? _1043 : min(_1074, _1043)));
        float _1051 = _1076 / _1045;
        float frontier_phi_42_43_ladder;
        float frontier_phi_42_43_ladder_1;
        if (_1076 < 1.1920928955078125e-07)
        {
            frontier_phi_42_43_ladder = _1051;
            frontier_phi_42_43_ladder_1 = 0.0;
        }
        else
        {
            float _1355;
            if (_1045 == _1041)
            {
                _1355 = ((_1042 - _1043) / _1076) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_54_51_ladder;
                if (_1045 == _1042)
                {
                    frontier_phi_54_51_ladder = (((_1043 - _1041) / _1076) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_54_51_ladder = (((_1041 - _1042) / _1076) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1355 = frontier_phi_54_51_ladder;
            }
            float _1360 = (_1355 < 0.0) ? (_1355 + 1.0) : _1355;
            precise float _1049 = (_1360 - floor(_1360)) * 6.0;
            frontier_phi_42_43_ladder = _1051;
            frontier_phi_42_43_ladder_1 = _1049;
        }
        _1048 = frontier_phi_42_43_ladder_1;
        _1050 = frontier_phi_42_43_ladder;
    }
    float _1053 = cbMtdParam._m0[19u].w + _1045;
    float _1714 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    float _1054 = isnan(1.0) ? _1714 : (isnan(_1714) ? 1.0 : min(_1714, 1.0));
    float _1056 = cbMtdParam._m0[20u].z + _1050;
    float _1725 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _1057 = isnan(1.0) ? _1725 : (isnan(_1725) ? 1.0 : min(_1725, 1.0));
    uint _1059 = uint(int(floor(_1048)));
    float _1061 = _1048 - float(int(_1059));
    float _1063 = (1.0 - _1057) * _1054;
    float _1066 = (1.0 - (_1061 * _1057)) * _1054;
    float _1070 = (1.0 - ((1.0 - _1061) * _1057)) * _1054;
    float _1078;
    float _1080;
    float _1081;
    if ((_1059 == 0u) || (_1059 == 6u))
    {
        _1078 = _1054;
        _1080 = _1070;
        _1081 = _1063;
    }
    else
    {
        float frontier_phi_44_45_ladder;
        float frontier_phi_44_45_ladder_1;
        float frontier_phi_44_45_ladder_2;
        if (_1059 == 1u)
        {
            frontier_phi_44_45_ladder = _1063;
            frontier_phi_44_45_ladder_1 = _1066;
            frontier_phi_44_45_ladder_2 = _1054;
        }
        else
        {
            float frontier_phi_44_45_ladder_49_ladder;
            float frontier_phi_44_45_ladder_49_ladder_1;
            float frontier_phi_44_45_ladder_49_ladder_2;
            if (_1059 == 2u)
            {
                frontier_phi_44_45_ladder_49_ladder = _1070;
                frontier_phi_44_45_ladder_49_ladder_1 = _1063;
                frontier_phi_44_45_ladder_49_ladder_2 = _1054;
            }
            else
            {
                float frontier_phi_44_45_ladder_49_ladder_53_ladder;
                float frontier_phi_44_45_ladder_49_ladder_53_ladder_1;
                float frontier_phi_44_45_ladder_49_ladder_53_ladder_2;
                if (_1059 == 3u)
                {
                    frontier_phi_44_45_ladder_49_ladder_53_ladder = _1054;
                    frontier_phi_44_45_ladder_49_ladder_53_ladder_1 = _1063;
                    frontier_phi_44_45_ladder_49_ladder_53_ladder_2 = _1066;
                }
                else
                {
                    bool _1425 = _1059 == 4u;
                    frontier_phi_44_45_ladder_49_ladder_53_ladder = _1425 ? _1054 : _1066;
                    frontier_phi_44_45_ladder_49_ladder_53_ladder_1 = _1425 ? _1070 : _1054;
                    frontier_phi_44_45_ladder_49_ladder_53_ladder_2 = _1063;
                }
                frontier_phi_44_45_ladder_49_ladder = frontier_phi_44_45_ladder_49_ladder_53_ladder;
                frontier_phi_44_45_ladder_49_ladder_1 = frontier_phi_44_45_ladder_49_ladder_53_ladder_1;
                frontier_phi_44_45_ladder_49_ladder_2 = frontier_phi_44_45_ladder_49_ladder_53_ladder_2;
            }
            frontier_phi_44_45_ladder = frontier_phi_44_45_ladder_49_ladder;
            frontier_phi_44_45_ladder_1 = frontier_phi_44_45_ladder_49_ladder_1;
            frontier_phi_44_45_ladder_2 = frontier_phi_44_45_ladder_49_ladder_2;
        }
        _1078 = frontier_phi_44_45_ladder_1;
        _1080 = frontier_phi_44_45_ladder_2;
        _1081 = frontier_phi_44_45_ladder;
    }
    float _1090 = exp2(log2(_1078) * cbMtdParam._m0[20u].w);
    float _1091 = exp2(log2(_1080) * cbMtdParam._m0[20u].w);
    float _1092 = exp2(log2(_1081) * cbMtdParam._m0[20u].w);
    float _1105 = inversesqrt(dot(vec3(cbMtdParam._m0[25u].zw, cbMtdParam._m0[26u].x), vec3(cbMtdParam._m0[25u].zw, cbMtdParam._m0[26u].x)));
    float _1113 = (dot(vec4(_891, _892, _893, 0.0), vec4(_1105 * cbMtdParam._m0[25u].z, _1105 * cbMtdParam._m0[25u].w, _1105 * cbMtdParam._m0[26u].x, 0.0)) + 1.0) * 0.5;
    float _1736 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _1120 = cbMtdParam._m0[16u].w * exp2(log2(isnan(1.0) ? _1736 : (isnan(_1736) ? 1.0 : min(_1736, 1.0))) * cbMtdParam._m0[17u].y);
    float _1747 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _1121 = isnan(1.0) ? _1747 : (isnan(_1747) ? 1.0 : min(_1747, 1.0));
    float _1128 = (cbMtdParam._m0[18u].w * exp2(log2(isnan(64.0) ? _958 : (isnan(_958) ? 64.0 : min(_958, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[19u].x * exp2(log2(isnan(64.0) ? _936 : (isnan(_936) ? 64.0 : min(_936, 64.0))) * 1.64999997615814208984375));
    float _1131 = ((_1121 * ((_1090 * cbMtdParam._m0[9u].z) - _1090)) + _1090) + (_1128 * cbMtdParam._m0[11u].z);
    float _1134 = ((_1121 * ((_1091 * cbMtdParam._m0[9u].w) - _1091)) + _1091) + (_1128 * cbMtdParam._m0[11u].w);
    float _1137 = ((_1121 * ((_1092 * cbMtdParam._m0[10u].x) - _1092)) + _1092) + (_1128 * cbMtdParam._m0[12u].x);
    bool _1143 = _897.x != 0u;
    float _1171 = inversesqrt(dot(vec3(_590, _592, _593), vec3(_590, _592, _593)));
    float _1172 = _1171 * _590;
    float _1173 = _1171 * _592;
    float _1174 = _1171 * _593;
    float _1186 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1187 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1188 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1192 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1193 = _1192 * gl_WorldRayDirectionEXT.x;
    float _1194 = _1192 * gl_WorldRayDirectionEXT.y;
    float _1195 = _1192 * gl_WorldRayDirectionEXT.z;
    float _1196 = (-0.0) - _1193;
    float _1197 = (-0.0) - _1194;
    float _1198 = (-0.0) - _1195;
    float _1204 = float(gl_LaunchIDEXT.x);
    float _1205 = float(gl_LaunchIDEXT.y);
    float _1208 = float(gl_LaunchSizeEXT.x);
    float _1222 = fract(fract(sin(dot(vec2(_1204 / _1208, _1205 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1235 = fract(fract(sin(dot(vec2((_1204 + 128.0) / _1208, (_1205 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1240 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1241 = _1240.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1241, _1240.w, _1241, vec3(_1186, _1187, _1188), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1309;
    float _1310;
    float _1311;
    if (_67._m0 == 0u)
    {
        float _1264 = g_sceneCB._m0[4u].x - _1193;
        float _1265 = g_sceneCB._m0[4u].y - _1194;
        float _1266 = g_sceneCB._m0[4u].z - _1195;
        float _1270 = inversesqrt(dot(vec3(_1264, _1265, _1266), vec3(_1264, _1265, _1266)));
        float _1274 = dot(vec3(_1172, _1173, _1174), vec3(g_sceneCB._m0[4u].xyz));
        float _1773 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1277 = isnan(1.0) ? _1773 : (isnan(_1773) ? 1.0 : min(_1773, 1.0));
        float _1278 = dot(vec3(_1172, _1173, _1174), vec3(_1196, _1197, _1198));
        float _1784 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1282 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1264 * _1270, _1265 * _1270, _1266 * _1270));
        float _1795 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1293 = (exp2(log2(1.0 - (isnan(1.0) ? _1795 : (isnan(_1795) ? 1.0 : min(_1795, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1299 = (0.5 / ((_1277 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1784 : (isnan(_1784) ? 1.0 : min(_1784, 1.0))))) * _1277;
        float _1806 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1301 = (isnan(1.0) ? _1806 : (isnan(_1806) ? 1.0 : min(_1806, 1.0))) * 0.31831014156341552734375;
        _1309 = (_1293 * g_sceneCB._m0[5u].x) * _1301;
        _1310 = (_1293 * g_sceneCB._m0[5u].y) * _1301;
        _1311 = (_1293 * g_sceneCB._m0[5u].z) * _1301;
    }
    else
    {
        _1309 = 0.0;
        _1310 = 0.0;
        _1311 = 0.0;
    }
    bool _1313 = abs(_1173) < 0.89999997615814208984375;
    float _1315 = float(_1313);
    float _1316 = _1313 ? 0.0 : 1.0;
    float _1319 = (_1315 * _1174) - (_1316 * _1173);
    float _1320 = _1316 * _1172;
    float _1322 = (-0.0) - (_1172 * _1315);
    float _1326 = inversesqrt(dot(vec3(_1319, _1320, _1322), vec3(_1319, _1320, _1322)));
    float _1327 = _1319 * _1326;
    float _1328 = _1320 * _1326;
    float _1329 = _1326 * _1322;
    float _1332 = (_1328 * _1174) - (_1329 * _1173);
    float _1335 = (_1329 * _1172) - (_1327 * _1174);
    float _1338 = (_1327 * _1173) - (_1328 * _1172);
    float _1346;
    float _1372;
    float _1345 = 0.0;
    uint _1347 = 0u;
    float _1351;
    bool _1353;
    for (;;)
    {
        _1351 = (float(_1347) + _1222) * 0.03125;
        _1353 = _1347 == 0u;
        float frontier_phi_57_pred;
        if (_1353)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1496;
            float _1497;
            uint _1499;
            _1496 = 0.0;
            _1497 = 0.5;
            _1499 = _1347;
            float _1373;
            for (;;)
            {
                _1373 = ((_1499 & 1u) != 0u) ? (_1497 + _1496) : _1496;
                uint _1500 = _1499 >> 1u;
                if (_1500 == 0u)
                {
                    break;
                }
                else
                {
                    _1496 = _1373;
                    _1497 *= 0.5;
                    _1499 = _1500;
                }
            }
            frontier_phi_57_pred = _1373;
        }
        _1372 = frontier_phi_57_pred;
        float _1374 = _1372 + _1235;
        float _1379 = sqrt(_1351);
        float _1380 = ((_1374 > 1.0) ? (_1374 + (-1.0)) : _1374) * 6.283185482025146484375;
        float _1383 = cos(_1380) * _1379;
        float _1385 = sin(_1380) * _1379;
        float _1387 = sqrt(1.0 - _1351);
        float _1400 = ((_1387 * _1172) + (_1383 * _1332)) + (_1385 * _1327);
        float _1401 = ((_1387 * _1173) + (_1383 * _1335)) + (_1385 * _1328);
        float _1402 = ((_1387 * _1174) + (_1383 * _1338)) + (_1385 * _1329);
        _66._m0 = 1u;
        uvec4 _1406 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1407 = _1406.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1407, _1406.w, _1407, vec3(_1186, _1187, _1188), 9.9999997473787516355514526367188e-05, vec3(_1400, _1401, _1402), 10000.0, 1);
        float _1413 = dot(vec3(_1172, _1173, _1174), vec3(_1400, _1401, _1402));
        float _1817 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1416 = isnan(1.0) ? _1817 : (isnan(_1817) ? 1.0 : min(_1817, 1.0));
        _1346 = ((float(_66._m0 == 0u) * _1416) / (_1416 * 0.3183098733425140380859375)) + _1345;
        uint _1348 = _1347 + 1u;
        if (_1348 == 32u)
        {
            break;
        }
        else
        {
            _1345 = _1346;
            _1347 = _1348;
            continue;
        }
    }
    float _1426 = _1346 * 0.009947183541953563690185546875;
    float _1431 = dot(vec3(_1193, _1194, _1195), vec3(_1172, _1173, _1174)) * 2.0;
    vec4 _1442 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1193 - (_1431 * _1172), _1194 - (_1431 * _1173), _1195 - (_1431 * _1174)), 4.0);
    float _1447 = dot(vec3(_1196, _1197, _1198), vec3(_1172, _1173, _1174));
    float _1828 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
    float _1456 = (exp2(log2(1.0 - (isnan(1.0) ? _1828 : (isnan(_1828) ? 1.0 : min(_1828, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1465 = (((_1143 ? (_882 * ((_1029 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z)) : 0.0) + (isnan(4.0) ? _1131 : (isnan(_1131) ? 4.0 : min(_1131, 4.0)))) + _1309) + ((_1442.x * _1426) * _1456);
    float _1468 = (((_1143 ? (_882 * ((_1029 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _1134 : (isnan(_1134) ? 4.0 : min(_1134, 4.0)))) + _1310) + ((_1442.y * _1426) * _1456);
    float _1471 = (((_1143 ? (_882 * ((_1029 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x)) : 0.0) + (isnan(4.0) ? _1137 : (isnan(_1137) ? 4.0 : min(_1137, 4.0)))) + _1311) + ((_1442.z * _1426) * _1456);
    float _1839 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
    float _1850 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
    float _1861 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    bool _1479 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1490;
    _1490.x = _1479 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1839 : (isnan(_1839) ? 1.0 : min(_1839, 1.0)));
    _1490.y = _1479 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1850 : (isnan(_1850) ? 1.0 : min(_1850, 1.0)));
    _1490.z = _1479 ? ((_589 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1861 : (isnan(_1861) ? 1.0 : min(_1861, 1.0)));
    payload._m0 = _1490;
}


