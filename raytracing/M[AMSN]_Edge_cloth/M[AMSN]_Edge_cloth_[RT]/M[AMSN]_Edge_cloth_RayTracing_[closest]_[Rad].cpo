#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1256;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _157 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _158 >> 16u;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _160;
        }
        _163 = frontier_phi_3_2_ladder_2;
        _165 = frontier_phi_3_2_ladder_1;
        _166 = frontier_phi_3_2_ladder;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    uint _174 = _122.w;
    bool _176 = _173 || (_174 == 0u);
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    uint _226 = _170.y;
    bool _227 = _172 == 0u;
    uint _230 = _227 ? 4u : ((_174 != 0u) ? 12u : 8u);
    uvec4 _239 = texelFetch(l_geomAttrib_1, int((((_226 * _163) + 4u) + (_173 ? (_230 + 4u) : _230)) >> 2u));
    uint _240 = _239.x;
    float _244 = float(int(uint(int(_240 << 16u) >> int(16u))));
    float _245 = float(int(uint(int(_240) >> int(16u))));
    uint _246 = _171 * _165;
    uint _247 = _246 + 12u;
    uint _268;
    uint _269;
    uint _270;
    uint _271;
    if (_176)
    {
        uvec4 _249 = texelFetch(l_geomAttrib_0, int(_247 >> 2u));
        uint _250 = _249.x;
        _268 = _250 & 255u;
        _269 = (_250 >> 8u) & 255u;
        _270 = (_250 >> 16u) & 255u;
        _271 = 16u;
    }
    else
    {
        uint _256 = _247 >> 2u;
        uvec2 _262 = uvec2(texelFetch(l_geomAttrib_0, int(_256)).x, texelFetch(l_geomAttrib_0, int(_256 + 1u)).x);
        uint _263 = _262.x;
        _268 = _263 & 65535u;
        _269 = _263 >> 16u;
        _270 = _262.y & 65535u;
        _271 = 20u;
    }
    uvec4 _277 = texelFetch(l_geomAttrib_0, int((_271 + _246) >> 2u));
    uint _278 = _277.x;
    uint _291 = _227 ? 4u : ((_174 != 0u) ? 12u : 8u);
    uvec4 _298 = texelFetch(l_geomAttrib_1, int((((_226 * _165) + 4u) + (_173 ? (_291 + 4u) : _291)) >> 2u));
    uint _299 = _298.x;
    float _303 = float(int(uint(int(_299 << 16u) >> int(16u))));
    float _304 = float(int(uint(int(_299) >> int(16u))));
    uint _305 = _171 * _166;
    uint _306 = _305 + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_176)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 16u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 20u;
    }
    uvec4 _336 = texelFetch(l_geomAttrib_0, int((_330 + _305) >> 2u));
    uint _337 = _336.x;
    uint _350 = _227 ? 4u : ((_174 != 0u) ? 12u : 8u);
    uvec4 _357 = texelFetch(l_geomAttrib_1, int((((_226 * _166) + 4u) + (_173 ? (_350 + 4u) : _350)) >> 2u));
    uint _358 = _357.x;
    float _362 = float(int(uint(int(_358 << 16u) >> int(16u))));
    float _363 = float(int(uint(int(_358) >> int(16u))));
    bool _365 = _122.z == 0u;
    float _401;
    float _402;
    float _403;
    if (_365)
    {
        uint _368 = _163 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _163 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_365)
    {
        uint _406 = _165 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _165 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_365)
    {
        uint _444 = _166 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _166 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _482 = (1.0 - hit._m0.x) - hit._m0.y;
    float _516 = (_303 - _244) * 0.00048828125;
    float _518 = (_304 - _245) * 0.00048828125;
    float _521 = (_362 - _244) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _544 = _439 - _401;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _549 = fma(_546, gl_ObjectToWorldEXT[2u].x, fma(_545, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _544));
    float _552 = fma(_546, gl_ObjectToWorldEXT[2u].y, fma(_545, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _544));
    float _555 = fma(_546, gl_ObjectToWorldEXT[2u].z, fma(_545, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _544));
    float _556 = _477 - _401;
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _561 = fma(_558, gl_ObjectToWorldEXT[2u].x, fma(_557, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _556));
    float _564 = fma(_558, gl_ObjectToWorldEXT[2u].y, fma(_557, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _556));
    float _567 = fma(_558, gl_ObjectToWorldEXT[2u].z, fma(_557, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _556));
    float _568 = (((_303 * hit._m0.x) + (_244 * _482)) + (_362 * hit._m0.y)) * 0.00048828125;
    float _569 = (((_304 * hit._m0.x) + (_245 * _482)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _573 = (((float(_202) * _482) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _576 = (((float(_203) * _482) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _579 = (((float(_204) * _482) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = _573 * 0.0078740157186985015869140625;
    float _582 = _576 * 0.0078740157186985015869140625;
    float _583 = _579 * 0.0078740157186985015869140625;
    float _596 = ((((float(_214 & 255u) * _482) + (-127.0)) + (float(_278 & 255u) * hit._m0.x)) + (float(_337 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float((_214 >> 8u) & 255u) * _482) + (-127.0)) + (float((_278 >> 8u) & 255u) * hit._m0.x)) + (float((_337 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_214 >> 16u) & 255u) * _482) + (-127.0)) + (float((_278 >> 16u) & 255u) * hit._m0.x)) + (float((_337 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float(_214 >> 24u) * _482) + (-127.0)) + (float(_278 >> 24u) * hit._m0.x)) + (float(_337 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((_597 * _583) - (_598 * _582)) * _599;
    float _610 = ((_598 * _580) - (_596 * _583)) * _599;
    float _611 = ((_596 * _582) - (_597 * _580)) * _599;
    float _615 = inversesqrt(dot(vec3(_609, _610, _611), vec3(_609, _610, _611)));
    uvec2 _636 = uvec2(textureSize(M_AMSN_Edge_snp_0_Texture2D_0, int(0u)));
    bool _641 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _694;
    if (_641)
    {
        float _652 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _658 = (_567 * _552) - (_564 * _555);
        float _661 = (_561 * _555) - (_567 * _549);
        float _664 = (_564 * _549) - (_561 * _552);
        float _691 = ((log2((((float(_636.y) * 0.5) * float(_636.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_661 * _661) + (_664 * _664)) + (_658 * _658)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_652 * gl_WorldRayDirectionEXT.x, _652 * gl_WorldRayDirectionEXT.y, _652 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _694 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    }
    else
    {
        _694 = 0.0;
    }
    vec4 _698 = textureLod(sampler2D(M_AMSN_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _568) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _569) + cbTextureTilingScale._m0[0u].w), _694);
    float _703 = _698.x * cbMtdParam._m0[9u].x;
    float _704 = _698.y * cbMtdParam._m0[9u].y;
    float _705 = _698.z * cbMtdParam._m0[9u].z;
    uvec2 _721 = uvec2(textureSize(M_AMSN_Edge_snp_0_Texture2D_2, int(0u)));
    float _772;
    if (_641)
    {
        float _732 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _738 = (_567 * _552) - (_564 * _555);
        float _741 = (_561 * _555) - (_567 * _549);
        float _744 = (_564 * _549) - (_561 * _552);
        float _770 = ((log2((((float(_721.y) * 0.5) * float(_721.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_741 * _741) + (_744 * _744)) + (_738 * _738)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_732 * gl_WorldRayDirectionEXT.x, _732 * gl_WorldRayDirectionEXT.y, _732 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _772 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    }
    else
    {
        _772 = 0.0;
    }
    float _778 = textureLod(sampler2D(M_AMSN_Edge_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _568) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _569) + cbTextureTilingScale._m0[2u].w), _772).x + cbMtdParam._m0[10u].x;
    uvec2 _790 = uvec2(textureSize(M_AMSN_Edge_snp_0_Texture2D_1, int(0u)));
    float _794 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _795 = _794 * gl_WorldRayDirectionEXT.x;
    float _796 = _794 * gl_WorldRayDirectionEXT.y;
    float _797 = _794 * gl_WorldRayDirectionEXT.z;
    float _841;
    if (_641)
    {
        float _807 = (_567 * _552) - (_564 * _555);
        float _810 = (_561 * _555) - (_567 * _549);
        float _813 = (_564 * _549) - (_561 * _552);
        float _839 = ((log2((((float(_790.y) * 0.5) * float(_790.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_810 * _810) + (_813 * _813)) + (_807 * _807)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_795, _796, _797), vec3(_580, _582, _583))));
        _841 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    }
    else
    {
        _841 = 0.0;
    }
    vec4 _844 = textureLod(sampler2D(M_AMSN_Edge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _568) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _569) + cbTextureTilingScale._m0[1u].w), _841);
    float _848 = _844.z;
    float _851 = (_844.x * 2.0) + (-1.0);
    float _853 = (_844.y * 2.0) + (-1.0);
    float _854 = dot(vec2(_851, _853), vec2(_851, _853));
    float _1331 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _859 = sqrt(1.0 - (isnan(1.0) ? _1331 : (isnan(_1331) ? 1.0 : min(_1331, 1.0))));
    float _862 = fma(_859, _580, fma(_853, _596, (_615 * _609) * _851));
    float _865 = fma(_859, _582, fma(_853, _597, (_615 * _610) * _851));
    float _868 = fma(_859, _583, fma(_853, _598, (_615 * _611) * _851));
    float _872 = inversesqrt(dot(vec3(_862, _865, _868), vec3(_862, _865, _868)));
    float _873 = _872 * _862;
    float _874 = _872 * _865;
    float _875 = _872 * _868;
    float _879 = inversesqrt(dot(vec3(_873, _874, _875), vec3(_873, _874, _875)));
    float _880 = _879 * _873;
    float _881 = _879 * _874;
    float _882 = _879 * _875;
    float _894 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _895 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _896 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _897 = (-0.0) - _795;
    float _899 = (-0.0) - _796;
    float _900 = (-0.0) - _797;
    float _906 = float(gl_LaunchIDEXT.x);
    float _907 = float(gl_LaunchIDEXT.y);
    float _910 = float(gl_LaunchSizeEXT.x);
    float _924 = fract(fract(sin(dot(vec2(_906 / _910, _907 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _937 = fract(fract(sin(dot(vec2((_906 + 128.0) / _910, (_907 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _938 = 1.0 - _778;
    float _939 = _938 * _703;
    float _940 = _938 * _704;
    float _941 = _938 * _705;
    float _946 = _778 * (_703 + (-0.039999999105930328369140625));
    float _947 = _778 * (_704 + (-0.039999999105930328369140625));
    float _948 = _778 * (_705 + (-0.039999999105930328369140625));
    float _949 = _946 + 0.039999999105930328369140625;
    float _951 = _947 + 0.039999999105930328369140625;
    float _952 = _948 + 0.039999999105930328369140625;
    _64._m0 = 1u;
    uvec4 _962 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _963 = _962.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _963, _962.w, _963, vec3(_894, _895, _896), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1078;
    float _1079;
    float _1080;
    float _1081;
    float _1082;
    float _1083;
    if (_64._m0 == 0u)
    {
        float _984 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_880, _881, _882));
        float _1342 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _987 = isnan(1.0) ? _1342 : (isnan(_1342) ? 1.0 : min(_1342, 1.0));
        float _1006 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _848) * 0.949999988079071044921875);
        float _1007 = _1006 * _1006;
        float _1008 = g_sceneCB._m0[4u].x - _795;
        float _1009 = g_sceneCB._m0[4u].y - _796;
        float _1010 = g_sceneCB._m0[4u].z - _797;
        float _1014 = inversesqrt(dot(vec3(_1008, _1009, _1010), vec3(_1008, _1009, _1010)));
        float _1015 = _1014 * _1008;
        float _1016 = _1014 * _1009;
        float _1017 = _1014 * _1010;
        float _1018 = dot(vec3(_880, _881, _882), vec3(g_sceneCB._m0[4u].xyz));
        float _1353 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1021 = isnan(1.0) ? _1353 : (isnan(_1353) ? 1.0 : min(_1353, 1.0));
        float _1022 = dot(vec3(_880, _881, _882), vec3(_897, _899, _900));
        float _1364 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
        float _1025 = isnan(1.0) ? _1364 : (isnan(_1364) ? 1.0 : min(_1364, 1.0));
        float _1026 = dot(vec3(_880, _881, _882), vec3(_1015, _1016, _1017));
        float _1375 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1029 = isnan(1.0) ? _1375 : (isnan(_1375) ? 1.0 : min(_1375, 1.0));
        float _1030 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1015, _1016, _1017));
        float _1386 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1034 = _1007 * _1007;
        float _1038 = ((_1029 * _1029) * (_1034 + (-1.0))) + 1.0;
        float _1047 = exp2(log2(1.0 - (isnan(1.0) ? _1386 : (isnan(_1386) ? 1.0 : min(_1386, 1.0)))) * 5.0);
        float _1058 = 1.0 - _1007;
        float _1069 = (0.5 / (((_1025 * ((_1021 * _1058) + _1007)) + 9.9999999392252902907785028219223e-09) + (((_1025 * _1058) + _1007) * _1021))) * _1021;
        float _1397 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1071 = (isnan(1.0) ? _1397 : (isnan(_1397) ? 1.0 : min(_1397, 1.0))) * (_1034 / ((_1038 * _1038) * 3.141590118408203125));
        _1078 = ((_939 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _987;
        _1079 = ((_940 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _987;
        _1080 = ((_941 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _987;
        _1081 = (((_1047 * (0.959999978542327880859375 - _946)) + _949) * g_sceneCB._m0[5u].x) * _1071;
        _1082 = (((_1047 * (0.959999978542327880859375 - _947)) + _951) * g_sceneCB._m0[5u].y) * _1071;
        _1083 = (((_1047 * (0.959999978542327880859375 - _948)) + _952) * g_sceneCB._m0[5u].z) * _1071;
    }
    else
    {
        _1078 = 0.0;
        _1079 = 0.0;
        _1080 = 0.0;
        _1081 = 0.0;
        _1082 = 0.0;
        _1083 = 0.0;
    }
    bool _1085 = abs(_881) < 0.89999997615814208984375;
    float _1087 = float(_1085);
    float _1088 = _1085 ? 0.0 : 1.0;
    float _1091 = (_1087 * _882) - (_1088 * _881);
    float _1092 = _1088 * _880;
    float _1094 = (-0.0) - (_880 * _1087);
    float _1098 = inversesqrt(dot(vec3(_1091, _1092, _1094), vec3(_1091, _1092, _1094)));
    float _1099 = _1091 * _1098;
    float _1100 = _1092 * _1098;
    float _1101 = _1098 * _1094;
    float _1104 = (_1100 * _882) - (_1101 * _881);
    float _1107 = (_1101 * _880) - (_1099 * _882);
    float _1110 = (_1099 * _881) - (_1100 * _880);
    float _1112;
    float _1120;
    float _1111 = 0.0;
    uint _1113 = 0u;
    float _1117;
    bool _1119;
    for (;;)
    {
        _1117 = (float(_1113) + _924) * 0.03125;
        _1119 = _1113 == 0u;
        float frontier_phi_33_pred;
        if (_1119)
        {
            frontier_phi_33_pred = 0.0;
        }
        else
        {
            float _1261;
            float _1262;
            uint _1264;
            _1261 = 0.0;
            _1262 = 0.5;
            _1264 = _1113;
            float _1121;
            for (;;)
            {
                _1121 = ((_1264 & 1u) != 0u) ? (_1262 + _1261) : _1261;
                uint _1265 = _1264 >> 1u;
                if (_1265 == 0u)
                {
                    break;
                }
                else
                {
                    _1261 = _1121;
                    _1262 *= 0.5;
                    _1264 = _1265;
                }
            }
            frontier_phi_33_pred = _1121;
        }
        _1120 = frontier_phi_33_pred;
        float _1122 = _1120 + _937;
        float _1126 = sqrt(_1117);
        float _1127 = ((_1122 > 1.0) ? (_1122 + (-1.0)) : _1122) * 6.283185482025146484375;
        float _1130 = cos(_1127) * _1126;
        float _1132 = sin(_1127) * _1126;
        float _1134 = sqrt(1.0 - _1117);
        float _1147 = ((_1134 * _880) + (_1130 * _1104)) + (_1132 * _1099);
        float _1148 = ((_1134 * _881) + (_1130 * _1107)) + (_1132 * _1100);
        float _1149 = ((_1134 * _882) + (_1130 * _1110)) + (_1132 * _1101);
        _63._m0 = 1u;
        uvec4 _1153 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1154 = _1153.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1154, _1153.w, _1154, vec3(_894, _895, _896), 9.9999997473787516355514526367188e-05, vec3(_1147, _1148, _1149), 10000.0, 1);
        float _1160 = dot(vec3(_880, _881, _882), vec3(_1147, _1148, _1149));
        float _1408 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1163 = isnan(1.0) ? _1408 : (isnan(_1408) ? 1.0 : min(_1408, 1.0));
        _1112 = ((float(_63._m0 == 0u) * _1163) / (_1163 * 0.3183098733425140380859375)) + _1111;
        uint _1114 = _1113 + 1u;
        if (_1114 == 32u)
        {
            break;
        }
        else
        {
            _1111 = _1112;
            _1113 = _1114;
            continue;
        }
    }
    float _1171 = _1112 * 0.009947183541953563690185546875;
    float _1176 = dot(vec3(_795, _796, _797), vec3(_880, _881, _882)) * 2.0;
    vec4 _1190 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_795 - (_1176 * _880), _796 - (_1176 * _881), _797 - (_1176 * _882)), 4.0 - (_848 * 4.0));
    float _1195 = dot(vec3(_897, _899, _900), vec3(_880, _881, _882));
    float _1419 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1205 = exp2(log2(1.0 - (isnan(1.0) ? _1419 : (isnan(_1419) ? 1.0 : min(_1419, 1.0)))) * 5.0);
    vec4 _1217 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_880, _881, _882), 0.0);
    float _1228 = (_1081 + _1078) + (((_1217.x * _939) + (((_1205 * (0.959999978542327880859375 - _946)) + _949) * _1190.x)) * _1171);
    float _1232 = (_1082 + _1079) + (((_1217.y * _940) + (((_1205 * (0.959999978542327880859375 - _947)) + _951) * _1190.y)) * _1171);
    float _1236 = (_1083 + _1080) + (((_1217.z * _941) + (((_1205 * (0.959999978542327880859375 - _948)) + _952) * _1190.z)) * _1171);
    float _1430 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
    float _1441 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
    float _1452 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    bool _1244 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1255;
    _1255.x = _1244 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1430 : (isnan(_1430) ? 1.0 : min(_1430, 1.0)));
    _1255.y = _1244 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1441 : (isnan(_1441) ? 1.0 : min(_1441, 1.0)));
    _1255.z = _1244 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1452 : (isnan(_1452) ? 1.0 : min(_1452, 1.0)));
    payload._m0 = _1255;
}


