#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Transiton_Construction_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _1838;

void main()
{
    float _88 = float(gl_LaunchSizeEXT.y);
    float _116 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _125 = sqrt(((_117 * _117) + (_116 * _116)) + (_118 * _118)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _88)))));
    uvec4 _136 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _137 = _136.y;
    uint _177;
    uint _179;
    uint _180;
    if (_136.x == 0u)
    {
        uint _145 = (_137 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _154 = uvec3(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_145 + 2u)).x);
        _177 = _154.x;
        _179 = _154.y;
        _180 = _154.z;
    }
    else
    {
        uint _158 = uint(gl_PrimitiveID) * 6u;
        uint _160 = _158 & 4294967292u;
        uint _163 = (_137 + _160) >> 2u;
        uvec2 _170 = uvec2(texelFetch(l_geomIndexBuffer, int(_163)).x, texelFetch(l_geomIndexBuffer, int(_163 + 1u)).x);
        uint _171 = _170.x;
        uint _172 = _170.y;
        uint _174 = _171 >> 16u;
        uint _175 = _172 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_160 == _158)
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _171 & 65535u;
            frontier_phi_3_2_ladder_2 = _175;
        }
        else
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _174;
            frontier_phi_3_2_ladder_2 = _172 >> 16u;
        }
        _177 = frontier_phi_3_2_ladder_1;
        _179 = frontier_phi_3_2_ladder;
        _180 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _184 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _185 = _184.x;
    uint _186 = _184.z;
    bool _187 = _186 != 0u;
    bool _189 = _136.w == 0u;
    bool _190 = _187 || _189;
    uint _191 = _185 * _177;
    uint _192 = _191 + 12u;
    uint _216;
    uint _217;
    uint _218;
    uint _219;
    if (_190)
    {
        uvec4 _195 = texelFetch(l_geomAttrib_0, int(_192 >> 2u));
        uint _196 = _195.x;
        _216 = _196 & 255u;
        _217 = (_196 >> 8u) & 255u;
        _218 = (_196 >> 16u) & 255u;
        _219 = 16u;
    }
    else
    {
        uint _204 = _192 >> 2u;
        uvec2 _210 = uvec2(texelFetch(l_geomAttrib_0, int(_204)).x, texelFetch(l_geomAttrib_0, int(_204 + 1u)).x);
        uint _211 = _210.x;
        _216 = _211 & 65535u;
        _217 = _211 >> 16u;
        _218 = _210.y & 65535u;
        _219 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_219 + _191) >> 2u));
    uint _228 = _227.x;
    bool _242 = _186 == 0u;
    uint _243;
    if (_242)
    {
        _243 = _219 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_189)
        {
            frontier_phi_9_10_ladder = _219 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _219 + 12u;
        }
        _243 = frontier_phi_9_10_ladder;
    }
    uint _247 = _187 ? (_243 + 4u) : _243;
    uvec4 _251 = texelFetch(l_geomAttrib_0, int(((_191 + 4u) + _247) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uint _265 = _185 * _179;
    uint _266 = _265 + 12u;
    uint _287;
    uint _288;
    uint _289;
    uint _290;
    if (_190)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_266 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
        _290 = 16u;
    }
    else
    {
        uint _275 = _266 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
        _290 = 20u;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int((_290 + _265) >> 2u));
    uint _297 = _296.x;
    uint _309;
    if (_242)
    {
        _309 = _290 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_189)
        {
            frontier_phi_16_17_ladder = _290 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _290 + 12u;
        }
        _309 = frontier_phi_16_17_ladder;
    }
    uint _313 = _187 ? (_309 + 4u) : _309;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_265 + 4u) + _313) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uint _331 = _185 * _180;
    uint _332 = _331 + 12u;
    uint _353;
    uint _354;
    uint _355;
    uint _356;
    if (_190)
    {
        uvec4 _334 = texelFetch(l_geomAttrib_0, int(_332 >> 2u));
        uint _335 = _334.x;
        _353 = _335 & 255u;
        _354 = (_335 >> 8u) & 255u;
        _355 = (_335 >> 16u) & 255u;
        _356 = 16u;
    }
    else
    {
        uint _341 = _332 >> 2u;
        uvec2 _347 = uvec2(texelFetch(l_geomAttrib_0, int(_341)).x, texelFetch(l_geomAttrib_0, int(_341 + 1u)).x);
        uint _348 = _347.x;
        _353 = _348 & 65535u;
        _354 = _348 >> 16u;
        _355 = _347.y & 65535u;
        _356 = 20u;
    }
    uvec4 _362 = texelFetch(l_geomAttrib_0, int((_356 + _331) >> 2u));
    uint _363 = _362.x;
    uint _375;
    if (_242)
    {
        _375 = _356 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_189)
        {
            frontier_phi_23_24_ladder = _356 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _356 + 12u;
        }
        _375 = frontier_phi_23_24_ladder;
    }
    uint _379 = _187 ? (_375 + 4u) : _375;
    uvec4 _383 = texelFetch(l_geomAttrib_0, int(((_331 + 4u) + _379) >> 2u));
    uint _384 = _383.x;
    float _388 = float(int(uint(int(_384 << 16u) >> int(16u))));
    float _389 = float(int(uint(int(_384) >> int(16u))));
    bool _398 = _136.z == 0u;
    float _434;
    float _435;
    float _436;
    if (_398)
    {
        uint _401 = _177 * 3u;
        uvec3 _410 = uvec3(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_401 + 2u)).x);
        _434 = uintBitsToFloat(_410.x);
        _435 = uintBitsToFloat(_410.y);
        _436 = uintBitsToFloat(_410.z);
    }
    else
    {
        uint _418 = _177 * 2u;
        uvec2 _424 = uvec2(texelFetch(l_geomPositionBuffer, int(_418)).x, texelFetch(l_geomPositionBuffer, int(_418 + 1u)).x);
        uint _425 = _424.x;
        _434 = unpackHalf2x16(_425).x;
        _435 = unpackHalf2x16(_425 >> 16u).x;
        _436 = unpackHalf2x16(_424.y).x;
    }
    float _472;
    float _473;
    float _474;
    if (_398)
    {
        uint _439 = _179 * 3u;
        uvec3 _448 = uvec3(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_439 + 2u)).x);
        _472 = uintBitsToFloat(_448.x);
        _473 = uintBitsToFloat(_448.y);
        _474 = uintBitsToFloat(_448.z);
    }
    else
    {
        uint _456 = _179 * 2u;
        uvec2 _462 = uvec2(texelFetch(l_geomPositionBuffer, int(_456)).x, texelFetch(l_geomPositionBuffer, int(_456 + 1u)).x);
        uint _463 = _462.x;
        _472 = unpackHalf2x16(_463).x;
        _473 = unpackHalf2x16(_463 >> 16u).x;
        _474 = unpackHalf2x16(_462.y).x;
    }
    float _510;
    float _511;
    float _512;
    if (_398)
    {
        uint _477 = _180 * 3u;
        uvec3 _486 = uvec3(texelFetch(l_geomPositionBuffer, int(_477)).x, texelFetch(l_geomPositionBuffer, int(_477 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_477 + 2u)).x);
        _510 = uintBitsToFloat(_486.x);
        _511 = uintBitsToFloat(_486.y);
        _512 = uintBitsToFloat(_486.z);
    }
    else
    {
        uint _494 = _180 * 2u;
        uvec2 _500 = uvec2(texelFetch(l_geomPositionBuffer, int(_494)).x, texelFetch(l_geomPositionBuffer, int(_494 + 1u)).x);
        uint _501 = _500.x;
        _510 = unpackHalf2x16(_501).x;
        _511 = unpackHalf2x16(_501 >> 16u).x;
        _512 = unpackHalf2x16(_500.y).x;
    }
    float _515 = (1.0 - hit._m0.x) - hit._m0.y;
    float _552 = (((float(texelFetch(l_geomAttrib_0, int(((_265 + 8u) + _313) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_191 + 8u) + _247) >> 2u)).x & 255u) * _515)) + (float(texelFetch(l_geomAttrib_0, int(((_331 + 8u) + _379) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _556 = (_322 - _256) * 0.00048828125;
    float _558 = (_323 - _257) * 0.00048828125;
    float _561 = (_388 - _256) * 0.00048828125;
    float _562 = (_389 - _257) * 0.00048828125;
    float _584 = _472 - _434;
    float _585 = _473 - _435;
    float _586 = _474 - _436;
    float _589 = fma(_586, gl_ObjectToWorldEXT[2u].x, fma(_585, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _584));
    float _592 = fma(_586, gl_ObjectToWorldEXT[2u].y, fma(_585, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _584));
    float _595 = fma(_586, gl_ObjectToWorldEXT[2u].z, fma(_585, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _584));
    float _596 = _510 - _434;
    float _597 = _511 - _435;
    float _598 = _512 - _436;
    float _601 = fma(_598, gl_ObjectToWorldEXT[2u].x, fma(_597, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _596));
    float _604 = fma(_598, gl_ObjectToWorldEXT[2u].y, fma(_597, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _596));
    float _607 = fma(_598, gl_ObjectToWorldEXT[2u].z, fma(_597, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _596));
    float _608 = (((_322 * hit._m0.x) + (_256 * _515)) + (_388 * hit._m0.y)) * 0.00048828125;
    float _609 = (((_323 * hit._m0.x) + (_257 * _515)) + (_389 * hit._m0.y)) * 0.00048828125;
    float _613 = (((float(_216) * _515) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_353) * hit._m0.y);
    float _616 = (((float(_217) * _515) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _619 = (((float(_218) * _515) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _620 = _613 * 0.0078740157186985015869140625;
    float _622 = _616 * 0.0078740157186985015869140625;
    float _623 = _619 * 0.0078740157186985015869140625;
    float _636 = ((((float(_228 & 255u) * _515) + (-127.0)) + (float(_297 & 255u) * hit._m0.x)) + (float(_363 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _637 = ((((float((_228 >> 8u) & 255u) * _515) + (-127.0)) + (float((_297 >> 8u) & 255u) * hit._m0.x)) + (float((_363 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _638 = ((((float((_228 >> 16u) & 255u) * _515) + (-127.0)) + (float((_297 >> 16u) & 255u) * hit._m0.x)) + (float((_363 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _639 = ((((float(_228 >> 24u) * _515) + (-127.0)) + (float(_297 >> 24u) * hit._m0.x)) + (float(_363 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _649 = ((_637 * _623) - (_638 * _622)) * _639;
    float _650 = ((_638 * _620) - (_636 * _623)) * _639;
    float _651 = ((_636 * _622) - (_637 * _620)) * _639;
    float _655 = inversesqrt(dot(vec3(_649, _650, _651), vec3(_649, _650, _651)));
    uvec2 _680 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_0, int(0u)));
    bool _685 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _738;
    if (_685)
    {
        float _696 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _702 = (_607 * _592) - (_604 * _595);
        float _705 = (_601 * _595) - (_607 * _589);
        float _708 = (_604 * _589) - (_601 * _592);
        float _735 = ((log2((((float(_680.y) * 0.5) * float(_680.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_705 * _705) + (_708 * _708)) + (_702 * _702)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_696 * gl_WorldRayDirectionEXT.x, _696 * gl_WorldRayDirectionEXT.y, _696 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _738 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    }
    else
    {
        _738 = 0.0;
    }
    vec4 _742 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _608) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _609) + cbTextureTilingScale._m0[0u].w), _738);
    float _748 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[17u].z) * _742.x;
    float _750 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[17u].z) * _742.y;
    float _752 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[17u].z) * _742.z;
    uvec2 _765 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_5, int(0u)));
    float _816;
    if (_685)
    {
        float _776 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _782 = (_607 * _592) - (_604 * _595);
        float _785 = (_601 * _595) - (_607 * _589);
        float _788 = (_604 * _589) - (_601 * _592);
        float _814 = ((log2((((float(_765.y) * 0.5) * float(_765.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_785 * _785) + (_788 * _788)) + (_782 * _782)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_776 * gl_WorldRayDirectionEXT.x, _776 * gl_WorldRayDirectionEXT.y, _776 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _816 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _819 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_5, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _608) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _609) + cbTextureTilingScale._m0[5u].w), _816);
    float _821 = _819.x;
    float _826 = cbMtdParam._m0[18u].y * 0.16666667163372039794921875;
    float _832 = fract(abs(_826));
    float _837 = (((_826 >= ((-0.0) - _826)) ? _832 : ((-0.0) - _832)) * 3.0) - _821;
    float _844 = (_552 - _837) + cbMtdParam._m0[15u].z;
    float _845 = (cbMtdParam._m0[15u].z + _552) - _837;
    float _846 = ceil(_844);
    float _847 = ceil(_845);
    float _1936 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _848 = isnan(1.0) ? _1936 : (isnan(_1936) ? 1.0 : min(_1936, 1.0));
    float _1947 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _849 = isnan(1.0) ? _1947 : (isnan(_1947) ? 1.0 : min(_1947, 1.0));
    float _852 = sin(cbMtdParam._m0[15u].y);
    float _853 = cos(cbMtdParam._m0[15u].y);
    float _854 = _608 - cbMtdParam._m0[15u].x;
    float _855 = _609 - cbMtdParam._m0[15u].x;
    uvec2 _874 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_4, int(0u)));
    float _925;
    if (_685)
    {
        float _885 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _891 = (_607 * _592) - (_604 * _595);
        float _894 = (_601 * _595) - (_607 * _589);
        float _897 = (_604 * _589) - (_601 * _592);
        float _923 = ((log2((((float(_874.y) * 0.5) * float(_874.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_894 * _894) + (_897 * _897)) + (_891 * _891)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_885 * gl_WorldRayDirectionEXT.x, _885 * gl_WorldRayDirectionEXT.y, _885 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _925 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    }
    else
    {
        _925 = 0.0;
    }
    vec4 _927 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (fma(_855, (-0.0) - _852, _853 * _854) + cbMtdParam._m0[15u].x)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (fma(_855, _853, _854 * _852) + cbMtdParam._m0[15u].x)) + cbTextureTilingScale._m0[4u].w), _925);
    float _938 = cbMtdParam._m0[10u].x * _927.x;
    float _939 = cbMtdParam._m0[10u].y * _927.y;
    float _940 = cbMtdParam._m0[10u].z * _927.z;
    float _947 = ((_938 - _748) * _848) + _748;
    float _948 = ((_939 - _750) * _849) + _750;
    float _949 = ((_940 - _752) * _849) + _752;
    float _956 = abs(cbMtdParam._m0[15u].w * _844);
    float _957 = abs(cbMtdParam._m0[15u].w * _845);
    float _964 = (((_956 * cbMtdParam._m0[16u].x) - _821) * _956) + _821;
    float _965 = (((_957 * cbMtdParam._m0[16u].x) - _821) * _957) + _821;
    float _1963 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _966 = isnan(1.0) ? _1963 : (isnan(_1963) ? 1.0 : min(_1963, 1.0));
    float _1974 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    float _967 = isnan(1.0) ? _1974 : (isnan(_1974) ? 1.0 : min(_1974, 1.0));
    uvec2 _979 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_6, int(0u)));
    float _1030;
    if (_685)
    {
        float _990 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _996 = (_607 * _592) - (_604 * _595);
        float _999 = (_601 * _595) - (_607 * _589);
        float _1002 = (_604 * _589) - (_601 * _592);
        float _1028 = ((log2((((float(_979.y) * 0.5) * float(_979.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_999 * _999) + (_1002 * _1002)) + (_996 * _996)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_990 * gl_WorldRayDirectionEXT.x, _990 * gl_WorldRayDirectionEXT.y, _990 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _1030 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
    }
    else
    {
        _1030 = 0.0;
    }
    vec4 _1032 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _608) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _609) + cbTextureTilingScale._m0[6u].w), _1030);
    float _1043 = cbMtdParam._m0[11u].x * _1032.x;
    float _1044 = cbMtdParam._m0[11u].y * _1032.y;
    float _1045 = cbMtdParam._m0[11u].z * _1032.z;
    float _1046 = _1043 * _966;
    float _1047 = _1044 * _967;
    float _1048 = _1045 * _967;
    float _1054 = exp2(log2(_966) * cbMtdParam._m0[16u].z);
    float _1055 = exp2(log2(_967) * cbMtdParam._m0[16u].z);
    float _1065 = (_1054 * ((_1043 - _947) - _1046)) + _947;
    float _1066 = (_1055 * ((_1044 - _948) - _1047)) + _948;
    float _1067 = (_1055 * ((_1045 - _949) - _1048)) + _949;
    float _1082 = (cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x) + _608;
    float _1083 = (cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) + _609;
    uvec2 _1105 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_10, int(0u)));
    float _1156;
    if (_685)
    {
        float _1116 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1122 = (_607 * _592) - (_604 * _595);
        float _1125 = (_601 * _595) - (_607 * _589);
        float _1128 = (_604 * _589) - (_601 * _592);
        float _1154 = ((log2((((float(_1105.y) * 0.5) * float(_1105.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_1125 * _1125) + (_1128 * _1128)) + (_1122 * _1122)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1116 * gl_WorldRayDirectionEXT.x, _1116 * gl_WorldRayDirectionEXT.y, _1116 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _1156 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    }
    else
    {
        _1156 = 0.0;
    }
    vec4 _1158 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * ((cbMtdParam._m0[19u].w * cbPerFrame._m0[22u].x) + _608)) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * ((cbMtdParam._m0[20u].x * cbPerFrame._m0[22u].x) + _609)) + cbTextureTilingScale._m0[2u].w), _1156);
    float _1163 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].w;
    float _1169 = ((_1158.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].x;
    float _1171 = (-0.0) - (cbMtdParam._m0[18u].x * ((_1158.x * 0.5) + (-0.25)));
    float _1172 = fract(_1163);
    float _1174 = fract(_1163 + 0.5);
    float _1186 = abs((_1172 * 2.0) + (-1.0));
    vec4 _1203 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1172 * _1171) + _1082) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1169 * _1172) + _1083) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1205 = _1203.x;
    float _1206 = _1203.y;
    float _1207 = _1203.z;
    vec4 _1208 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1174 * _1171) + _1082) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1169 * _1174) + _1083) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1223 = (cbMtdParam._m0[13u].x * cbMtdParam._m0[17u].x) * (((_1208.x - _1205) * _1186) + _1205);
    float _1225 = (cbMtdParam._m0[13u].y * cbMtdParam._m0[17u].x) * (((_1208.y - _1206) * _1186) + _1206);
    float _1227 = (cbMtdParam._m0[13u].z * cbMtdParam._m0[17u].x) * (((_1208.z - _1207) * _1186) + _1207);
    uvec2 _1246 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_9, int(0u)));
    float _1297;
    if (_685)
    {
        float _1257 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1263 = (_607 * _592) - (_604 * _595);
        float _1266 = (_601 * _595) - (_607 * _589);
        float _1269 = (_604 * _589) - (_601 * _592);
        float _1295 = ((log2((((float(_1246.y) * 0.5) * float(_1246.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_1266 * _1266) + (_1269 * _1269)) + (_1263 * _1263)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1257 * gl_WorldRayDirectionEXT.x, _1257 * gl_WorldRayDirectionEXT.y, _1257 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _1297 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
    }
    else
    {
        _1297 = 0.0;
    }
    vec4 _1299 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((cbMtdParam._m0[19u].y * cbPerFrame._m0[22u].x) + _608) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x) + _609) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w), _1297);
    float _1319 = _938 * _848;
    float _1320 = _939 * _849;
    float _1321 = _940 * _849;
    uvec2 _1355 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_7, int(0u)));
    float _1406;
    if (_685)
    {
        float _1366 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1372 = (_607 * _592) - (_604 * _595);
        float _1375 = (_601 * _595) - (_607 * _589);
        float _1378 = (_604 * _589) - (_601 * _592);
        float _1404 = ((log2((((float(_1355.y) * 0.5) * float(_1355.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_1375 * _1375) + (_1378 * _1378)) + (_1372 * _1372)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1366 * gl_WorldRayDirectionEXT.x, _1366 * gl_WorldRayDirectionEXT.y, _1366 * gl_WorldRayDirectionEXT.z), vec3(_620, _622, _623))));
        _1406 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
    }
    else
    {
        _1406 = 0.0;
    }
    vec4 _1408 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _608) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _609) + cbTextureTilingScale._m0[7u].w), _1406);
    uvec2 _1430 = uvec2(textureSize(M_Transiton_Construction_snp_0_Texture2D_1, int(0u)));
    float _1434 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1435 = _1434 * gl_WorldRayDirectionEXT.x;
    float _1436 = _1434 * gl_WorldRayDirectionEXT.y;
    float _1437 = _1434 * gl_WorldRayDirectionEXT.z;
    float _1481;
    if (_685)
    {
        float _1447 = (_607 * _592) - (_604 * _595);
        float _1450 = (_601 * _595) - (_607 * _589);
        float _1453 = (_604 * _589) - (_601 * _592);
        float _1479 = ((log2((((float(_1430.y) * 0.5) * float(_1430.x)) * abs((_562 * _556) - (_561 * _558))) / (sqrt(((_1450 * _1450) + (_1453 * _1453)) + (_1447 * _1447)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1435, _1436, _1437), vec3(_620, _622, _623))));
        _1481 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
    }
    else
    {
        _1481 = 0.0;
    }
    vec4 _1484 = textureLod(sampler2D(M_Transiton_Construction_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _608) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _609) + cbTextureTilingScale._m0[1u].w), _1481);
    float _1490 = (_1484.x * 2.0) + (-1.0);
    float _1491 = (_1484.y * 2.0) + (-1.0);
    float _1492 = dot(vec2(_1490, _1491), vec2(_1490, _1491));
    float _2010 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
    float _1497 = sqrt(1.0 - (isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0))));
    float _1500 = fma(_1497, _620, fma(_1491, _636, (_655 * _649) * _1490));
    float _1503 = fma(_1497, _622, fma(_1491, _637, (_655 * _650) * _1490));
    float _1506 = fma(_1497, _623, fma(_1491, _638, (_655 * _651) * _1490));
    float _1510 = inversesqrt(dot(vec3(_1500, _1503, _1506), vec3(_1500, _1503, _1506)));
    float _1511 = _1510 * _1500;
    float _1512 = _1510 * _1503;
    float _1513 = _1510 * _1506;
    float _1525 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1526 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1527 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1528 = (-0.0) - _1435;
    float _1529 = (-0.0) - _1436;
    float _1530 = (-0.0) - _1437;
    float _1536 = float(gl_LaunchIDEXT.x);
    float _1537 = float(gl_LaunchIDEXT.y);
    float _1540 = float(gl_LaunchSizeEXT.x);
    float _1554 = fract(fract(sin(dot(vec2(_1536 / _1540, _1537 / _88), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1567 = fract(fract(sin(dot(vec2((_1536 + 128.0) / _1540, (_1537 + 128.0) / _88), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _74._m0 = 1u;
    uvec4 _1577 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1578 = _1577.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1578, _1577.w, _1578, vec3(_1525, _1526, _1527), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    if (_74._m0 == 0u)
    {
        float _1598 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1511, _1512, _1513));
        float _2021 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1601 = isnan(1.0) ? _2021 : (isnan(_2021) ? 1.0 : min(_2021, 1.0));
        float _1612 = g_sceneCB._m0[4u].x - _1435;
        float _1613 = g_sceneCB._m0[4u].y - _1436;
        float _1614 = g_sceneCB._m0[4u].z - _1437;
        float _1618 = inversesqrt(dot(vec3(_1612, _1613, _1614), vec3(_1612, _1613, _1614)));
        float _1622 = dot(vec3(_1511, _1512, _1513), vec3(g_sceneCB._m0[4u].xyz));
        float _2032 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1625 = isnan(1.0) ? _2032 : (isnan(_2032) ? 1.0 : min(_2032, 1.0));
        float _1626 = dot(vec3(_1511, _1512, _1513), vec3(_1528, _1529, _1530));
        float _2043 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1612 * _1618, _1613 * _1618, _1614 * _1618));
        float _2054 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1641 = (exp2(log2(1.0 - (isnan(1.0) ? _2054 : (isnan(_2054) ? 1.0 : min(_2054, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1647 = (0.5 / ((_1625 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2043 : (isnan(_2043) ? 1.0 : min(_2043, 1.0))))) * _1625;
        float _2065 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1649 = (isnan(1.0) ? _2065 : (isnan(_2065) ? 1.0 : min(_2065, 1.0))) * 0.31831014156341552734375;
        _1657 = ((_1065 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1601;
        _1658 = ((_1066 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1601;
        _1659 = ((_1067 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1601;
        _1660 = (_1641 * g_sceneCB._m0[5u].x) * _1649;
        _1661 = (_1641 * g_sceneCB._m0[5u].y) * _1649;
        _1662 = (_1641 * g_sceneCB._m0[5u].z) * _1649;
    }
    else
    {
        _1657 = 0.0;
        _1658 = 0.0;
        _1659 = 0.0;
        _1660 = 0.0;
        _1661 = 0.0;
        _1662 = 0.0;
    }
    bool _1664 = abs(_1512) < 0.89999997615814208984375;
    float _1666 = float(_1664);
    float _1667 = _1664 ? 0.0 : 1.0;
    float _1670 = (_1666 * _1513) - (_1667 * _1512);
    float _1671 = _1667 * _1511;
    float _1673 = (-0.0) - (_1511 * _1666);
    float _1677 = inversesqrt(dot(vec3(_1670, _1671, _1673), vec3(_1670, _1671, _1673)));
    float _1678 = _1670 * _1677;
    float _1679 = _1671 * _1677;
    float _1680 = _1677 * _1673;
    float _1683 = (_1679 * _1513) - (_1680 * _1512);
    float _1686 = (_1680 * _1511) - (_1678 * _1513);
    float _1689 = (_1678 * _1512) - (_1679 * _1511);
    float _1691;
    float _1699;
    float _1690 = 0.0;
    uint _1692 = 0u;
    float _1696;
    bool _1698;
    for (;;)
    {
        _1696 = (float(_1692) + _1554) * 0.03125;
        _1698 = _1692 == 0u;
        float frontier_phi_55_pred;
        if (_1698)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1843;
            float _1844;
            uint _1846;
            _1843 = 0.0;
            _1844 = 0.5;
            _1846 = _1692;
            float _1700;
            for (;;)
            {
                _1700 = ((_1846 & 1u) != 0u) ? (_1844 + _1843) : _1843;
                uint _1847 = _1846 >> 1u;
                if (_1847 == 0u)
                {
                    break;
                }
                else
                {
                    _1843 = _1700;
                    _1844 *= 0.5;
                    _1846 = _1847;
                }
            }
            frontier_phi_55_pred = _1700;
        }
        _1699 = frontier_phi_55_pred;
        float _1701 = _1699 + _1567;
        float _1705 = sqrt(_1696);
        float _1706 = ((_1701 > 1.0) ? (_1701 + (-1.0)) : _1701) * 6.283185482025146484375;
        float _1709 = cos(_1706) * _1705;
        float _1711 = sin(_1706) * _1705;
        float _1713 = sqrt(1.0 - _1696);
        float _1726 = ((_1713 * _1511) + (_1709 * _1683)) + (_1711 * _1678);
        float _1727 = ((_1713 * _1512) + (_1709 * _1686)) + (_1711 * _1679);
        float _1728 = ((_1713 * _1513) + (_1709 * _1689)) + (_1711 * _1680);
        _73._m0 = 1u;
        uvec4 _1732 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1733 = _1732.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1733, _1732.w, _1733, vec3(_1525, _1526, _1527), 9.9999997473787516355514526367188e-05, vec3(_1726, _1727, _1728), 10000.0, 1);
        float _1739 = dot(vec3(_1511, _1512, _1513), vec3(_1726, _1727, _1728));
        float _2076 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1742 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
        _1691 = ((float(_73._m0 == 0u) * _1742) / (_1742 * 0.3183098733425140380859375)) + _1690;
        uint _1693 = _1692 + 1u;
        if (_1693 == 32u)
        {
            break;
        }
        else
        {
            _1690 = _1691;
            _1692 = _1693;
            continue;
        }
    }
    float _1750 = _1691 * 0.009947183541953563690185546875;
    float _1755 = dot(vec3(_1435, _1436, _1437), vec3(_1511, _1512, _1513)) * 2.0;
    vec4 _1767 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1435 - (_1755 * _1511), _1436 - (_1755 * _1512), _1437 - (_1755 * _1513)), 4.0);
    float _1772 = dot(vec3(_1528, _1529, _1530), vec3(_1511, _1512, _1513));
    float _2087 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
    float _1781 = (exp2(log2(1.0 - (isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1787 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1511, _1512, _1513), 0.0);
    float _1802 = ((((((((_1223 * cbMtdParam._m0[17u].y) * _1299.x) * cbMtdParam._m0[14u].x) + _1223) + (cbMtdParam._m0[16u].w * ((_1054 * ((_1043 - _1319) - _1046)) + _1319))) + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * _1408.x)) + _1657) + _1660) + (((_1787.x * _1065) + (_1781 * _1767.x)) * _1750);
    float _1810 = ((((((((_1225 * cbMtdParam._m0[17u].y) * _1299.y) * cbMtdParam._m0[14u].y) + _1225) + (cbMtdParam._m0[16u].w * ((_1055 * ((_1044 - _1320) - _1047)) + _1320))) + ((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * _1408.y)) + _1658) + _1661) + (((_1787.y * _1066) + (_1781 * _1767.y)) * _1750);
    float _1818 = ((((((cbMtdParam._m0[16u].w * ((_1055 * ((_1045 - _1321) - _1048)) + _1321)) + _1227) + (((_1227 * cbMtdParam._m0[17u].y) * _1299.z) * cbMtdParam._m0[14u].z)) + ((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * _1408.z)) + _1659) + _1662) + (((_1787.z * _1067) + (_1781 * _1767.z)) * _1750);
    float _2098 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
    float _2109 = isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0));
    float _2120 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
    bool _1826 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1837;
    _1837.x = _1826 ? ((_613 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0)));
    _1837.y = _1826 ? ((_616 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2109 : (isnan(_2109) ? 1.0 : min(_2109, 1.0)));
    _1837.z = _1826 ? ((_619 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2120 : (isnan(_2120) ? 1.0 : min(_2120, 1.0)));
    payload._m0 = _1837;
}


