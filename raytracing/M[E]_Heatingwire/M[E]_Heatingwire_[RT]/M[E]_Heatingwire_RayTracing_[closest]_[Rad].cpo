#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1284;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _106 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _115 = sqrt(((_107 * _107) + (_106 * _106)) + (_108 * _108)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _126 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _127 = _126.y;
    uint _167;
    uint _169;
    uint _170;
    if (_126.x == 0u)
    {
        uint _135 = (_127 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_127 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _161 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _162 >> 16u;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _164;
        }
        _167 = frontier_phi_3_2_ladder_2;
        _169 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    bool _179 = _126.w == 0u;
    bool _180 = _177 || _179;
    uint _181 = _175 * _167;
    uint _182 = _181 + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 16u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 20u;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((_209 + _181) >> 2u));
    uint _218 = _217.x;
    bool _232 = _176 == 0u;
    uint _233;
    if (_232)
    {
        _233 = _209 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_179)
        {
            frontier_phi_9_10_ladder = _209 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _209 + 12u;
        }
        _233 = frontier_phi_9_10_ladder;
    }
    uint _237 = _177 ? (_233 + 4u) : _233;
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_181 + 4u) + _237) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _254 = _175 * _169;
    uint _255 = _254 + 12u;
    uint _276;
    uint _277;
    uint _278;
    uint _279;
    if (_180)
    {
        uvec4 _257 = texelFetch(l_geomAttrib_0, int(_255 >> 2u));
        uint _258 = _257.x;
        _276 = _258 & 255u;
        _277 = (_258 >> 8u) & 255u;
        _278 = (_258 >> 16u) & 255u;
        _279 = 16u;
    }
    else
    {
        uint _264 = _255 >> 2u;
        uvec2 _270 = uvec2(texelFetch(l_geomAttrib_0, int(_264)).x, texelFetch(l_geomAttrib_0, int(_264 + 1u)).x);
        uint _271 = _270.x;
        _276 = _271 & 65535u;
        _277 = _271 >> 16u;
        _278 = _270.y & 65535u;
        _279 = 20u;
    }
    uvec4 _285 = texelFetch(l_geomAttrib_0, int((_279 + _254) >> 2u));
    uint _286 = _285.x;
    uint _298;
    if (_232)
    {
        _298 = _279 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_179)
        {
            frontier_phi_16_17_ladder = _279 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _279 + 12u;
        }
        _298 = frontier_phi_16_17_ladder;
    }
    uint _302 = _177 ? (_298 + 4u) : _298;
    uvec4 _312 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + _302) >> 2u));
    uint _313 = _312.x;
    float _317 = float(int(uint(int(_313 << 16u) >> int(16u))));
    float _318 = float(int(uint(int(_313) >> int(16u))));
    uint _319 = _175 * _170;
    uint _320 = _319 + 12u;
    uint _341;
    uint _342;
    uint _343;
    uint _344;
    if (_180)
    {
        uvec4 _322 = texelFetch(l_geomAttrib_0, int(_320 >> 2u));
        uint _323 = _322.x;
        _341 = _323 & 255u;
        _342 = (_323 >> 8u) & 255u;
        _343 = (_323 >> 16u) & 255u;
        _344 = 16u;
    }
    else
    {
        uint _329 = _320 >> 2u;
        uvec2 _335 = uvec2(texelFetch(l_geomAttrib_0, int(_329)).x, texelFetch(l_geomAttrib_0, int(_329 + 1u)).x);
        uint _336 = _335.x;
        _341 = _336 & 65535u;
        _342 = _336 >> 16u;
        _343 = _335.y & 65535u;
        _344 = 20u;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int((_344 + _319) >> 2u));
    uint _351 = _350.x;
    uint _363;
    if (_232)
    {
        _363 = _344 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_179)
        {
            frontier_phi_23_24_ladder = _344 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _344 + 12u;
        }
        _363 = frontier_phi_23_24_ladder;
    }
    uint _367 = _177 ? (_363 + 4u) : _363;
    uvec4 _377 = texelFetch(l_geomAttrib_0, int(((_319 + 4u) + _367) >> 2u));
    uint _378 = _377.x;
    float _382 = float(int(uint(int(_378 << 16u) >> int(16u))));
    float _383 = float(int(uint(int(_378) >> int(16u))));
    bool _385 = _126.z == 0u;
    float _421;
    float _422;
    float _423;
    if (_385)
    {
        uint _388 = _167 * 3u;
        uvec3 _397 = uvec3(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_388 + 2u)).x);
        _421 = uintBitsToFloat(_397.x);
        _422 = uintBitsToFloat(_397.y);
        _423 = uintBitsToFloat(_397.z);
    }
    else
    {
        uint _405 = _167 * 2u;
        uvec2 _411 = uvec2(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x);
        uint _412 = _411.x;
        _421 = unpackHalf2x16(_412).x;
        _422 = unpackHalf2x16(_412 >> 16u).x;
        _423 = unpackHalf2x16(_411.y).x;
    }
    float _459;
    float _460;
    float _461;
    if (_385)
    {
        uint _426 = _169 * 3u;
        uvec3 _435 = uvec3(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_426 + 2u)).x);
        _459 = uintBitsToFloat(_435.x);
        _460 = uintBitsToFloat(_435.y);
        _461 = uintBitsToFloat(_435.z);
    }
    else
    {
        uint _443 = _169 * 2u;
        uvec2 _449 = uvec2(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x);
        uint _450 = _449.x;
        _459 = unpackHalf2x16(_450).x;
        _460 = unpackHalf2x16(_450 >> 16u).x;
        _461 = unpackHalf2x16(_449.y).x;
    }
    float _497;
    float _498;
    float _499;
    if (_385)
    {
        uint _464 = _170 * 3u;
        uvec3 _473 = uvec3(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_464 + 2u)).x);
        _497 = uintBitsToFloat(_473.x);
        _498 = uintBitsToFloat(_473.y);
        _499 = uintBitsToFloat(_473.z);
    }
    else
    {
        uint _481 = _170 * 2u;
        uvec2 _487 = uvec2(texelFetch(l_geomPositionBuffer, int(_481)).x, texelFetch(l_geomPositionBuffer, int(_481 + 1u)).x);
        uint _488 = _487.x;
        _497 = unpackHalf2x16(_488).x;
        _498 = unpackHalf2x16(_488 >> 16u).x;
        _499 = unpackHalf2x16(_487.y).x;
    }
    float _502 = (1.0 - hit._m0.x) - hit._m0.y;
    float _529 = (((float(texelFetch(l_geomAttrib_0, int((_302 + _254) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_237 + _181) >> 2u)).x >> 24u) * _502)) + (float(texelFetch(l_geomAttrib_0, int((_367 + _319) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _543 = (_317 - _252) * 0.00048828125;
    float _545 = (_318 - _253) * 0.00048828125;
    float _548 = (_382 - _252) * 0.00048828125;
    float _549 = (_383 - _253) * 0.00048828125;
    float _571 = _459 - _421;
    float _572 = _460 - _422;
    float _573 = _461 - _423;
    float _576 = fma(_573, gl_ObjectToWorldEXT[2u].x, fma(_572, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _571));
    float _579 = fma(_573, gl_ObjectToWorldEXT[2u].y, fma(_572, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _571));
    float _582 = fma(_573, gl_ObjectToWorldEXT[2u].z, fma(_572, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _571));
    float _583 = _497 - _421;
    float _584 = _498 - _422;
    float _585 = _499 - _423;
    float _588 = fma(_585, gl_ObjectToWorldEXT[2u].x, fma(_584, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _583));
    float _591 = fma(_585, gl_ObjectToWorldEXT[2u].y, fma(_584, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _583));
    float _594 = fma(_585, gl_ObjectToWorldEXT[2u].z, fma(_584, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _583));
    float _595 = (((_317 * hit._m0.x) + (_252 * _502)) + (_382 * hit._m0.y)) * 0.00048828125;
    float _596 = (((_318 * hit._m0.x) + (_253 * _502)) + (_383 * hit._m0.y)) * 0.00048828125;
    float _600 = (((float(_206) * _502) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _603 = (((float(_207) * _502) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _606 = (((float(_208) * _502) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_343) * hit._m0.y);
    float _607 = _600 * 0.0078740157186985015869140625;
    float _609 = _603 * 0.0078740157186985015869140625;
    float _610 = _606 * 0.0078740157186985015869140625;
    float _623 = ((((float(_218 & 255u) * _502) + (-127.0)) + (float(_286 & 255u) * hit._m0.x)) + (float(_351 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _624 = ((((float((_218 >> 8u) & 255u) * _502) + (-127.0)) + (float((_286 >> 8u) & 255u) * hit._m0.x)) + (float((_351 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _625 = ((((float((_218 >> 16u) & 255u) * _502) + (-127.0)) + (float((_286 >> 16u) & 255u) * hit._m0.x)) + (float((_351 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _626 = ((((float(_218 >> 24u) * _502) + (-127.0)) + (float(_286 >> 24u) * hit._m0.x)) + (float(_351 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _636 = ((_624 * _610) - (_625 * _609)) * _626;
    float _637 = ((_625 * _607) - (_623 * _610)) * _626;
    float _638 = ((_623 * _609) - (_624 * _607)) * _626;
    float _642 = inversesqrt(dot(vec3(_636, _637, _638), vec3(_636, _637, _638)));
    float _659 = fma(0.9055385589599609375, _607, fma(0.2999999523162841796875, _623, (_636 * 0.2999999523162841796875) * _642));
    float _664 = fma(0.9055385589599609375, _609, fma(0.2999999523162841796875, _624, (_637 * 0.2999999523162841796875) * _642));
    float _668 = fma(0.9055385589599609375, _610, fma(0.2999999523162841796875, _625, (_638 * 0.2999999523162841796875) * _642));
    float _672 = inversesqrt(dot(vec3(_659, _664, _668), vec3(_659, _664, _668)));
    float _681 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_672 * _659, _672 * _664, _672 * _668, 0.0)) - cbMtdParam._m0[13u].x;
    float _1362 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _688 = exp2(log2(1.0 - (isnan(1.0) ? _1362 : (isnan(_1362) ? 1.0 : min(_1362, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].y : (isnan(cbMtdParam._m0[13u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].y, 0.001000000047497451305389404296875))));
    float _711 = abs((fract(cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1378 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _712 = isnan(1.0) ? _1378 : (isnan(_1378) ? 1.0 : min(_1378, 1.0));
    float _717 = (_712 * _712) * (3.0 - (_712 * 2.0));
    uvec2 _735 = uvec2(textureSize(M_E_Heatingwire_snp_0_Texture2D_2, int(0u)));
    bool _740 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _792;
    if (_740)
    {
        float _751 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _757 = (_594 * _579) - (_591 * _582);
        float _760 = (_588 * _582) - (_594 * _576);
        float _763 = (_591 * _576) - (_588 * _579);
        float _790 = ((log2((((float(_735.y) * 0.5) * float(_735.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_760 * _760) + (_763 * _763)) + (_757 * _757)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_751 * gl_WorldRayDirectionEXT.x, _751 * gl_WorldRayDirectionEXT.y, _751 * gl_WorldRayDirectionEXT.z), vec3(_607, _609, _610))));
        _792 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    }
    else
    {
        _792 = 0.0;
    }
    vec4 _796 = textureLod(sampler2D(M_E_Heatingwire_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _595) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _596) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _792);
    uvec2 _836 = uvec2(textureSize(M_E_Heatingwire_snp_0_Texture2D_1, int(0u)));
    float _887;
    if (_740)
    {
        float _847 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _853 = (_594 * _579) - (_591 * _582);
        float _856 = (_588 * _582) - (_594 * _576);
        float _859 = (_591 * _576) - (_588 * _579);
        float _885 = ((log2((((float(_836.y) * 0.5) * float(_836.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_856 * _856) + (_859 * _859)) + (_853 * _853)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_847 * gl_WorldRayDirectionEXT.x, _847 * gl_WorldRayDirectionEXT.y, _847 * gl_WorldRayDirectionEXT.z), vec3(_607, _609, _610))));
        _887 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    }
    else
    {
        _887 = 0.0;
    }
    vec4 _889 = textureLod(sampler2D(M_E_Heatingwire_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _595) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + _596) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _887);
    uvec2 _919 = uvec2(textureSize(M_E_Heatingwire_snp_0_Texture2D_3, int(0u)));
    float _923 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _924 = _923 * gl_WorldRayDirectionEXT.x;
    float _925 = _923 * gl_WorldRayDirectionEXT.y;
    float _926 = _923 * gl_WorldRayDirectionEXT.z;
    float _970;
    if (_740)
    {
        float _936 = (_594 * _579) - (_591 * _582);
        float _939 = (_588 * _582) - (_594 * _576);
        float _942 = (_591 * _576) - (_588 * _579);
        float _968 = ((log2((((float(_919.y) * 0.5) * float(_919.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_939 * _939) + (_942 * _942)) + (_936 * _936)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_924, _925, _926), vec3(_607, _609, _610))));
        _970 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    }
    else
    {
        _970 = 0.0;
    }
    vec4 _972 = textureLod(sampler2D(M_E_Heatingwire_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + _595) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + _596) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _970);
    float _983 = inversesqrt(dot(vec3(_607, _609, _610), vec3(_607, _609, _610)));
    float _984 = _983 * _607;
    float _985 = _983 * _609;
    float _986 = _983 * _610;
    float _998 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _999 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1000 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1001 = (-0.0) - _924;
    float _1003 = (-0.0) - _925;
    float _1004 = (-0.0) - _926;
    float _1010 = float(gl_LaunchIDEXT.x);
    float _1011 = float(gl_LaunchIDEXT.y);
    float _1014 = float(gl_LaunchSizeEXT.x);
    float _1028 = fract(fract(sin(dot(vec2(_1010 / _1014, _1011 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1041 = fract(fract(sin(dot(vec2((_1010 + 128.0) / _1014, (_1011 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _64._m0 = 1u;
    uvec4 _1051 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1052 = _1051.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1052, _1051.w, _1052, vec3(_998, _999, _1000), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1118;
    float _1119;
    float _1120;
    if (_64._m0 == 0u)
    {
        float _1073 = g_sceneCB._m0[4u].x - _924;
        float _1074 = g_sceneCB._m0[4u].y - _925;
        float _1075 = g_sceneCB._m0[4u].z - _926;
        float _1079 = inversesqrt(dot(vec3(_1073, _1074, _1075), vec3(_1073, _1074, _1075)));
        float _1083 = dot(vec3(_984, _985, _986), vec3(g_sceneCB._m0[4u].xyz));
        float _1404 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1086 = isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0));
        float _1087 = dot(vec3(_984, _985, _986), vec3(_1001, _1003, _1004));
        float _1415 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1073 * _1079, _1074 * _1079, _1075 * _1079));
        float _1426 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1102 = (exp2(log2(1.0 - (isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1108 = (0.5 / ((_1086 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0))))) * _1086;
        float _1437 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1110 = (isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0))) * 0.31831014156341552734375;
        _1118 = (_1102 * g_sceneCB._m0[5u].x) * _1110;
        _1119 = (_1102 * g_sceneCB._m0[5u].y) * _1110;
        _1120 = (_1102 * g_sceneCB._m0[5u].z) * _1110;
    }
    else
    {
        _1118 = 0.0;
        _1119 = 0.0;
        _1120 = 0.0;
    }
    bool _1122 = abs(_985) < 0.89999997615814208984375;
    float _1124 = float(_1122);
    float _1125 = _1122 ? 0.0 : 1.0;
    float _1128 = (_1124 * _986) - (_1125 * _985);
    float _1129 = _1125 * _984;
    float _1131 = (-0.0) - (_984 * _1124);
    float _1135 = inversesqrt(dot(vec3(_1128, _1129, _1131), vec3(_1128, _1129, _1131)));
    float _1136 = _1128 * _1135;
    float _1137 = _1129 * _1135;
    float _1138 = _1135 * _1131;
    float _1141 = (_1137 * _986) - (_1138 * _985);
    float _1144 = (_1138 * _984) - (_1136 * _986);
    float _1147 = (_1136 * _985) - (_1137 * _984);
    float _1149;
    float _1157;
    float _1148 = 0.0;
    uint _1150 = 0u;
    float _1154;
    bool _1156;
    for (;;)
    {
        _1154 = (float(_1150) + _1028) * 0.03125;
        _1156 = _1150 == 0u;
        float frontier_phi_45_pred;
        if (_1156)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1289;
            float _1290;
            uint _1292;
            _1289 = 0.0;
            _1290 = 0.5;
            _1292 = _1150;
            float _1158;
            for (;;)
            {
                _1158 = ((_1292 & 1u) != 0u) ? (_1290 + _1289) : _1289;
                uint _1293 = _1292 >> 1u;
                if (_1293 == 0u)
                {
                    break;
                }
                else
                {
                    _1289 = _1158;
                    _1290 *= 0.5;
                    _1292 = _1293;
                }
            }
            frontier_phi_45_pred = _1158;
        }
        _1157 = frontier_phi_45_pred;
        float _1159 = _1157 + _1041;
        float _1163 = sqrt(_1154);
        float _1164 = ((_1159 > 1.0) ? (_1159 + (-1.0)) : _1159) * 6.283185482025146484375;
        float _1167 = cos(_1164) * _1163;
        float _1169 = sin(_1164) * _1163;
        float _1171 = sqrt(1.0 - _1154);
        float _1184 = ((_1171 * _984) + (_1167 * _1141)) + (_1169 * _1136);
        float _1185 = ((_1171 * _985) + (_1167 * _1144)) + (_1169 * _1137);
        float _1186 = ((_1171 * _986) + (_1167 * _1147)) + (_1169 * _1138);
        _63._m0 = 1u;
        uvec4 _1190 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1191 = _1190.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1191, _1190.w, _1191, vec3(_998, _999, _1000), 9.9999997473787516355514526367188e-05, vec3(_1184, _1185, _1186), 10000.0, 1);
        float _1197 = dot(vec3(_984, _985, _986), vec3(_1184, _1185, _1186));
        float _1448 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1200 = isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0));
        _1149 = ((float(_63._m0 == 0u) * _1200) / (_1200 * 0.3183098733425140380859375)) + _1148;
        uint _1151 = _1150 + 1u;
        if (_1151 == 32u)
        {
            break;
        }
        else
        {
            _1148 = _1149;
            _1150 = _1151;
            continue;
        }
    }
    float _1209 = _1149 * 0.009947183541953563690185546875;
    float _1214 = dot(vec3(_924, _925, _926), vec3(_984, _985, _986)) * 2.0;
    vec4 _1226 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_924 - (_1214 * _984), _925 - (_1214 * _985), _926 - (_1214 * _986)), 4.0);
    float _1231 = dot(vec3(_1001, _1003, _1004), vec3(_984, _985, _986));
    float _1459 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    float _1240 = (exp2(log2(1.0 - (isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1252 = (((_1226.x * _1209) * _1240) + _1118) + (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].x) * _717) * _796.x) + ((cbMtdParam._m0[9u].x * _529) * _688)) + (_889.x * cbMtdParam._m0[11u].x)) + (_972.x * cbMtdParam._m0[12u].x)) * cbMtdParam._m0[13u].z);
    float _1258 = (((_1226.y * _1209) * _1240) + _1119) + (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].y) * _717) * _796.y) + ((cbMtdParam._m0[9u].y * _529) * _688)) + (_889.y * cbMtdParam._m0[11u].y)) + (_972.y * cbMtdParam._m0[12u].y)) * cbMtdParam._m0[13u].z);
    float _1264 = (((_1226.z * _1209) * _1240) + _1120) + (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].z) * _717) * _796.z) + ((cbMtdParam._m0[9u].z * _529) * _688)) + (_889.z * cbMtdParam._m0[11u].z)) + (_972.z * cbMtdParam._m0[12u].z)) * cbMtdParam._m0[13u].z);
    float _1470 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
    float _1481 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
    float _1492 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
    bool _1272 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1283;
    _1283.x = _1272 ? ((_600 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1470 : (isnan(_1470) ? 1.0 : min(_1470, 1.0)));
    _1283.y = _1272 ? ((_603 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1481 : (isnan(_1481) ? 1.0 : min(_1481, 1.0)));
    _1283.z = _1272 ? ((_606 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1492 : (isnan(_1492) ? 1.0 : min(_1492, 1.0)));
    payload._m0 = _1283;
}


