#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_c4200_transition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_transition_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_c4200_transition_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D C_c4200_transition_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c4200_transition_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_c4200_transition_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_c4200_transition_snp_0_Texture2D_12;
layout(set = 0, binding = 8) uniform texture2D C_c4200_transition_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_c4200_transition_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _2022;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _115 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _124 = sqrt(((_116 * _116) + (_115 * _115)) + (_117 * _117)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _135 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _136 = _135.y;
    uint _176;
    uint _178;
    uint _179;
    if (_135.x == 0u)
    {
        uint _144 = (_136 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _153 = uvec3(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_144 + 2u)).x);
        _176 = _153.x;
        _178 = _153.y;
        _179 = _153.z;
    }
    else
    {
        uint _157 = uint(gl_PrimitiveID) * 6u;
        uint _159 = _157 & 4294967292u;
        uint _162 = (_136 + _159) >> 2u;
        uvec2 _169 = uvec2(texelFetch(l_geomIndexBuffer, int(_162)).x, texelFetch(l_geomIndexBuffer, int(_162 + 1u)).x);
        uint _170 = _169.x;
        uint _171 = _169.y;
        uint _173 = _170 >> 16u;
        uint _174 = _171 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_159 == _157)
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _170 & 65535u;
            frontier_phi_3_2_ladder_2 = _174;
        }
        else
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _171 >> 16u;
        }
        _176 = frontier_phi_3_2_ladder_1;
        _178 = frontier_phi_3_2_ladder;
        _179 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _183 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _184 = _183.x;
    uint _185 = _183.z;
    bool _186 = _185 != 0u;
    bool _188 = _135.w == 0u;
    bool _189 = _186 || _188;
    uint _190 = _184 * _176;
    uint _191 = _190 + 12u;
    uint _215;
    uint _216;
    uint _217;
    uint _218;
    if (_189)
    {
        uvec4 _194 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _195 = _194.x;
        _215 = _195 & 255u;
        _216 = (_195 >> 8u) & 255u;
        _217 = (_195 >> 16u) & 255u;
        _218 = 16u;
    }
    else
    {
        uint _203 = _191 >> 2u;
        uvec2 _209 = uvec2(texelFetch(l_geomAttrib_0, int(_203)).x, texelFetch(l_geomAttrib_0, int(_203 + 1u)).x);
        uint _210 = _209.x;
        _215 = _210 & 65535u;
        _216 = _210 >> 16u;
        _217 = _209.y & 65535u;
        _218 = 20u;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((_218 + _190) >> 2u));
    uint _227 = _226.x;
    bool _241 = _185 == 0u;
    uint _242;
    if (_241)
    {
        _242 = _218 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_188)
        {
            frontier_phi_9_10_ladder = _218 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _218 + 12u;
        }
        _242 = frontier_phi_9_10_ladder;
    }
    uvec4 _250 = texelFetch(l_geomAttrib_0, int(((_190 + 4u) + (_186 ? (_242 + 4u) : _242)) >> 2u));
    uint _251 = _250.x;
    float _255 = float(int(uint(int(_251 << 16u) >> int(16u))));
    float _256 = float(int(uint(int(_251) >> int(16u))));
    uint _257 = _184 * _178;
    uint _258 = _257 + 12u;
    uint _279;
    uint _280;
    uint _281;
    uint _282;
    if (_189)
    {
        uvec4 _260 = texelFetch(l_geomAttrib_0, int(_258 >> 2u));
        uint _261 = _260.x;
        _279 = _261 & 255u;
        _280 = (_261 >> 8u) & 255u;
        _281 = (_261 >> 16u) & 255u;
        _282 = 16u;
    }
    else
    {
        uint _267 = _258 >> 2u;
        uvec2 _273 = uvec2(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x);
        uint _274 = _273.x;
        _279 = _274 & 65535u;
        _280 = _274 >> 16u;
        _281 = _273.y & 65535u;
        _282 = 20u;
    }
    uvec4 _288 = texelFetch(l_geomAttrib_0, int((_282 + _257) >> 2u));
    uint _289 = _288.x;
    uint _301;
    if (_241)
    {
        _301 = _282 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_188)
        {
            frontier_phi_16_17_ladder = _282 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _282 + 12u;
        }
        _301 = frontier_phi_16_17_ladder;
    }
    uvec4 _309 = texelFetch(l_geomAttrib_0, int(((_257 + 4u) + (_186 ? (_301 + 4u) : _301)) >> 2u));
    uint _310 = _309.x;
    float _314 = float(int(uint(int(_310 << 16u) >> int(16u))));
    float _315 = float(int(uint(int(_310) >> int(16u))));
    uint _316 = _184 * _179;
    uint _317 = _316 + 12u;
    uint _338;
    uint _339;
    uint _340;
    uint _341;
    if (_189)
    {
        uvec4 _319 = texelFetch(l_geomAttrib_0, int(_317 >> 2u));
        uint _320 = _319.x;
        _338 = _320 & 255u;
        _339 = (_320 >> 8u) & 255u;
        _340 = (_320 >> 16u) & 255u;
        _341 = 16u;
    }
    else
    {
        uint _326 = _317 >> 2u;
        uvec2 _332 = uvec2(texelFetch(l_geomAttrib_0, int(_326)).x, texelFetch(l_geomAttrib_0, int(_326 + 1u)).x);
        uint _333 = _332.x;
        _338 = _333 & 65535u;
        _339 = _333 >> 16u;
        _340 = _332.y & 65535u;
        _341 = 20u;
    }
    uvec4 _347 = texelFetch(l_geomAttrib_0, int((_341 + _316) >> 2u));
    uint _348 = _347.x;
    uint _360;
    if (_241)
    {
        _360 = _341 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_188)
        {
            frontier_phi_23_24_ladder = _341 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _341 + 12u;
        }
        _360 = frontier_phi_23_24_ladder;
    }
    uvec4 _368 = texelFetch(l_geomAttrib_0, int(((_316 + 4u) + (_186 ? (_360 + 4u) : _360)) >> 2u));
    uint _369 = _368.x;
    float _373 = float(int(uint(int(_369 << 16u) >> int(16u))));
    float _374 = float(int(uint(int(_369) >> int(16u))));
    bool _376 = _135.z == 0u;
    float _412;
    float _413;
    float _414;
    if (_376)
    {
        uint _379 = _176 * 3u;
        uvec3 _388 = uvec3(texelFetch(l_geomPositionBuffer, int(_379)).x, texelFetch(l_geomPositionBuffer, int(_379 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_379 + 2u)).x);
        _412 = uintBitsToFloat(_388.x);
        _413 = uintBitsToFloat(_388.y);
        _414 = uintBitsToFloat(_388.z);
    }
    else
    {
        uint _396 = _176 * 2u;
        uvec2 _402 = uvec2(texelFetch(l_geomPositionBuffer, int(_396)).x, texelFetch(l_geomPositionBuffer, int(_396 + 1u)).x);
        uint _403 = _402.x;
        _412 = unpackHalf2x16(_403).x;
        _413 = unpackHalf2x16(_403 >> 16u).x;
        _414 = unpackHalf2x16(_402.y).x;
    }
    float _450;
    float _451;
    float _452;
    if (_376)
    {
        uint _417 = _178 * 3u;
        uvec3 _426 = uvec3(texelFetch(l_geomPositionBuffer, int(_417)).x, texelFetch(l_geomPositionBuffer, int(_417 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_417 + 2u)).x);
        _450 = uintBitsToFloat(_426.x);
        _451 = uintBitsToFloat(_426.y);
        _452 = uintBitsToFloat(_426.z);
    }
    else
    {
        uint _434 = _178 * 2u;
        uvec2 _440 = uvec2(texelFetch(l_geomPositionBuffer, int(_434)).x, texelFetch(l_geomPositionBuffer, int(_434 + 1u)).x);
        uint _441 = _440.x;
        _450 = unpackHalf2x16(_441).x;
        _451 = unpackHalf2x16(_441 >> 16u).x;
        _452 = unpackHalf2x16(_440.y).x;
    }
    float _488;
    float _489;
    float _490;
    if (_376)
    {
        uint _455 = _179 * 3u;
        uvec3 _464 = uvec3(texelFetch(l_geomPositionBuffer, int(_455)).x, texelFetch(l_geomPositionBuffer, int(_455 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_455 + 2u)).x);
        _488 = uintBitsToFloat(_464.x);
        _489 = uintBitsToFloat(_464.y);
        _490 = uintBitsToFloat(_464.z);
    }
    else
    {
        uint _472 = _179 * 2u;
        uvec2 _478 = uvec2(texelFetch(l_geomPositionBuffer, int(_472)).x, texelFetch(l_geomPositionBuffer, int(_472 + 1u)).x);
        uint _479 = _478.x;
        _488 = unpackHalf2x16(_479).x;
        _489 = unpackHalf2x16(_479 >> 16u).x;
        _490 = unpackHalf2x16(_478.y).x;
    }
    float _493 = (1.0 - hit._m0.x) - hit._m0.y;
    float _527 = (_314 - _255) * 0.00048828125;
    float _529 = (_315 - _256) * 0.00048828125;
    float _532 = (_373 - _255) * 0.00048828125;
    float _533 = (_374 - _256) * 0.00048828125;
    float _555 = _450 - _412;
    float _556 = _451 - _413;
    float _557 = _452 - _414;
    float _560 = fma(_557, gl_ObjectToWorldEXT[2u].x, fma(_556, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _555));
    float _563 = fma(_557, gl_ObjectToWorldEXT[2u].y, fma(_556, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _555));
    float _566 = fma(_557, gl_ObjectToWorldEXT[2u].z, fma(_556, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _555));
    float _567 = _488 - _412;
    float _568 = _489 - _413;
    float _569 = _490 - _414;
    float _572 = fma(_569, gl_ObjectToWorldEXT[2u].x, fma(_568, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _567));
    float _575 = fma(_569, gl_ObjectToWorldEXT[2u].y, fma(_568, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _567));
    float _578 = fma(_569, gl_ObjectToWorldEXT[2u].z, fma(_568, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _567));
    float _579 = (((_314 * hit._m0.x) + (_255 * _493)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _580 = (((_315 * hit._m0.x) + (_256 * _493)) + (_374 * hit._m0.y)) * 0.00048828125;
    float _584 = (((float(_215) * _493) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _587 = (((float(_216) * _493) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _590 = (((float(_217) * _493) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_340) * hit._m0.y);
    float _591 = _584 * 0.0078740157186985015869140625;
    float _593 = _587 * 0.0078740157186985015869140625;
    float _594 = _590 * 0.0078740157186985015869140625;
    float _607 = ((((float(_227 & 255u) * _493) + (-127.0)) + (float(_289 & 255u) * hit._m0.x)) + (float(_348 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _608 = ((((float((_227 >> 8u) & 255u) * _493) + (-127.0)) + (float((_289 >> 8u) & 255u) * hit._m0.x)) + (float((_348 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((((float((_227 >> 16u) & 255u) * _493) + (-127.0)) + (float((_289 >> 16u) & 255u) * hit._m0.x)) + (float((_348 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((((float(_227 >> 24u) * _493) + (-127.0)) + (float(_289 >> 24u) * hit._m0.x)) + (float(_348 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _620 = ((_608 * _594) - (_609 * _593)) * _610;
    float _621 = ((_609 * _591) - (_607 * _594)) * _610;
    float _622 = ((_607 * _593) - (_608 * _591)) * _610;
    float _626 = inversesqrt(dot(vec3(_620, _621, _622), vec3(_620, _621, _622)));
    uvec2 _641 = uvec2(textureSize(C_c4200_transition_snp_0_Texture2D_12, int(0u)));
    bool _646 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _699;
    if (_646)
    {
        float _657 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _663 = (_578 * _563) - (_575 * _566);
        float _666 = (_572 * _566) - (_578 * _560);
        float _669 = (_575 * _560) - (_572 * _563);
        float _696 = ((log2((((float(_641.y) * 0.5) * float(_641.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_666 * _666) + (_669 * _669)) + (_663 * _663)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_657 * gl_WorldRayDirectionEXT.x, _657 * gl_WorldRayDirectionEXT.y, _657 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _699 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    }
    else
    {
        _699 = 0.0;
    }
    vec4 _703 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _579) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _580) + cbTextureTilingScale._m0[4u].w), _699);
    float _705 = _703.x;
    float _714 = cbMtdParam._m0[18u].y * 0.3333333432674407958984375;
    float _720 = fract(abs(_714));
    float _731 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    float _734 = (_731 * cbMtdParam._m0[24u].x) + _579;
    float _735 = (_731 * cbMtdParam._m0[24u].y) + _580;
    float _755 = (cbTextureTilingScale._m0[10u].x * ((_731 * cbMtdParam._m0[23u].x) + _579)) + cbTextureTilingScale._m0[10u].z;
    float _756 = (cbTextureTilingScale._m0[10u].y * ((cbMtdParam._m0[23u].y * _731) + _580)) + cbTextureTilingScale._m0[10u].w;
    uvec2 _758 = uvec2(textureSize(C_c4200_transition_snp_0_Texture2D_7, int(0u)));
    float _809;
    if (_646)
    {
        float _769 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _775 = (_578 * _563) - (_575 * _566);
        float _778 = (_572 * _566) - (_578 * _560);
        float _781 = (_575 * _560) - (_572 * _563);
        float _807 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_778 * _778) + (_781 * _781)) + (_775 * _775)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_769 * gl_WorldRayDirectionEXT.x, _769 * gl_WorldRayDirectionEXT.y, _769 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _809 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    }
    else
    {
        _809 = 0.0;
    }
    vec4 _811 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2(_755, _756), _809);
    float _815 = cbPerFrame._m0[22u].x * 2.0;
    float _816 = _815 * cbMtdParam._m0[19u].w;
    float _822 = ((_811.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].z;
    float _824 = (-0.0) - (cbMtdParam._m0[18u].z * ((_811.x * 0.5) + (-0.25)));
    float _825 = fract(_816);
    float _827 = fract(_816 + 0.5);
    float _839 = abs((_825 * 2.0) + (-1.0));
    vec4 _857 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_825 * _824) + _734) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_822 * _825) + _735) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w), 0.0);
    float _859 = _857.x;
    float _870 = (0.25 - ((((_714 >= ((-0.0) - _714)) ? _720 : ((-0.0) - _720)) * 3.0) - _705)) + ((((textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_827 * _824) + _734) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_822 * _827) + _735) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w), 0.0).x - _859) * _839) + _859) * 1.35000002384185791015625);
    float _873 = abs(_870 * cbMtdParam._m0[19u].z);
    float _877 = (((_873 * cbMtdParam._m0[19u].y) - _705) * _873) + _705;
    float _2120 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _878 = isnan(1.0) ? _2120 : (isnan(_2120) ? 1.0 : min(_2120, 1.0));
    float _889 = (cbMtdParam._m0[23u].z * _731) + _579;
    float _890 = (cbMtdParam._m0[23u].w * _731) + _580;
    float _941;
    if (_646)
    {
        float _901 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _907 = (_578 * _563) - (_575 * _566);
        float _910 = (_572 * _566) - (_578 * _560);
        float _913 = (_575 * _560) - (_572 * _563);
        float _939 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_910 * _910) + (_913 * _913)) + (_907 * _907)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_901 * gl_WorldRayDirectionEXT.x, _901 * gl_WorldRayDirectionEXT.y, _901 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _941 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    }
    else
    {
        _941 = 0.0;
    }
    vec4 _943 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2(_755, _756), _941);
    float _951 = ((_943.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].z;
    float _953 = (-0.0) - (cbMtdParam._m0[18u].z * ((_943.x * 0.5) + (-0.25)));
    vec4 _978 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_825 * _953) + _889) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_951 * _825) + _890) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _980 = _978.x;
    float _981 = _978.y;
    float _982 = _978.z;
    vec4 _983 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_827 * _953) + _889) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_951 * _827) + _890) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _997 = (((_983.x - _980) * _839) + _980) * cbMtdParam._m0[14u].x;
    float _998 = (((_983.y - _981) * _839) + _981) * cbMtdParam._m0[14u].y;
    float _999 = (((_983.z - _982) * _839) + _982) * cbMtdParam._m0[14u].z;
    float _1003 = _997 - (_997 * _878);
    float _1004 = _998 - (_998 * _878);
    float _1005 = _999 - (_999 * _878);
    uvec2 _1023 = uvec2(textureSize(C_c4200_transition_snp_0_Texture2D_0, int(0u)));
    float _1074;
    if (_646)
    {
        float _1034 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1040 = (_578 * _563) - (_575 * _566);
        float _1043 = (_572 * _566) - (_578 * _560);
        float _1046 = (_575 * _560) - (_572 * _563);
        float _1072 = ((log2((((float(_1023.y) * 0.5) * float(_1023.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_1043 * _1043) + (_1046 * _1046)) + (_1040 * _1040)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1034 * gl_WorldRayDirectionEXT.x, _1034 * gl_WorldRayDirectionEXT.y, _1034 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _1074 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    }
    else
    {
        _1074 = 0.0;
    }
    vec4 _1076 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _579) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _580) + cbTextureTilingScale._m0[0u].w), _1074);
    float _1081 = ceil(_870);
    float _2141 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _1082 = isnan(1.0) ? _2141 : (isnan(_2141) ? 1.0 : min(_2141, 1.0));
    float _1096 = (((cbMtdParam._m0[9u].x - cbMtdParam._m0[15u].x) * _1082) + cbMtdParam._m0[15u].x) * _1076.x;
    float _1098 = (((cbMtdParam._m0[9u].y - cbMtdParam._m0[15u].y) * _1082) + cbMtdParam._m0[15u].y) * _1076.y;
    float _1100 = (((cbMtdParam._m0[9u].z - cbMtdParam._m0[15u].z) * _1082) + cbMtdParam._m0[15u].z) * _1076.z;
    float _1104 = exp2(log2(_878) * cbMtdParam._m0[19u].x);
    float _1111 = (_1104 * (_1003 - _1096)) + _1096;
    float _1112 = (_1104 * (_1004 - _1098)) + _1098;
    float _1113 = (_1104 * (_1005 - _1100)) + _1100;
    uvec2 _1129 = uvec2(textureSize(C_c4200_transition_snp_0_Texture2D_1, int(0u)));
    float _1180;
    if (_646)
    {
        float _1140 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1146 = (_578 * _563) - (_575 * _566);
        float _1149 = (_572 * _566) - (_578 * _560);
        float _1152 = (_575 * _560) - (_572 * _563);
        float _1178 = ((log2((((float(_1129.y) * 0.5) * float(_1129.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_1149 * _1149) + (_1152 * _1152)) + (_1146 * _1146)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1140 * gl_WorldRayDirectionEXT.x, _1140 * gl_WorldRayDirectionEXT.y, _1140 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _1180 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
    }
    else
    {
        _1180 = 0.0;
    }
    vec4 _1183 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _579) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _580) + cbTextureTilingScale._m0[1u].w), _1180);
    float _1187 = _1183.z;
    float _1190 = (_1183.x * 2.0) + (-1.0);
    float _1191 = (_1183.y * 2.0) + (-1.0);
    float _1192 = dot(vec2(_1190, _1191), vec2(_1190, _1191));
    float _2157 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _1197 = sqrt(1.0 - (isnan(1.0) ? _2157 : (isnan(_2157) ? 1.0 : min(_2157, 1.0))));
    float _1207 = (cbMtdParam._m0[24u].z * _731) + _579;
    float _1208 = (cbMtdParam._m0[24u].w * _731) + _580;
    float _1263;
    if (_646)
    {
        float _1223 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1229 = (_578 * _563) - (_575 * _566);
        float _1232 = (_572 * _566) - (_578 * _560);
        float _1235 = (_575 * _560) - (_572 * _563);
        float _1261 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_1232 * _1232) + (_1235 * _1235)) + (_1229 * _1229)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1223 * gl_WorldRayDirectionEXT.x, _1223 * gl_WorldRayDirectionEXT.y, _1223 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _1263 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    }
    else
    {
        _1263 = 0.0;
    }
    vec4 _1265 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2(_755, _756), _1263);
    float _1269 = _815 * cbMtdParam._m0[20u].z;
    float _1274 = ((_1265.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].y;
    float _1276 = (-0.0) - (cbMtdParam._m0[20u].y * ((_1265.x * 0.5) + (-0.25)));
    float _1277 = fract(_1269);
    float _1279 = fract(_1269 + 0.5);
    float _1290 = abs((_1277 * 2.0) + (-1.0));
    vec4 _1307 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_1277 * _1276) + _1207) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_1274 * _1277) + _1208) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1309 = _1307.x;
    float _1310 = _1307.y;
    float _1311 = _1307.z;
    vec4 _1312 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_1279 * _1276) + _1207) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_1274 * _1279) + _1208) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1326 = (((_1312.x - _1309) * _1290) + _1309) * cbMtdParam._m0[16u].x;
    float _1327 = (((_1312.y - _1310) * _1290) + _1310) * cbMtdParam._m0[16u].y;
    float _1328 = (((_1312.z - _1311) * _1290) + _1311) * cbMtdParam._m0[16u].z;
    float _1332 = _1326 - (_1326 * _1082);
    float _1333 = _1327 - (_1327 * _1082);
    float _1334 = _1328 - (_1328 * _1082);
    float _1401;
    if (_646)
    {
        float _1361 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1367 = (_578 * _563) - (_575 * _566);
        float _1370 = (_572 * _566) - (_578 * _560);
        float _1373 = (_575 * _560) - (_572 * _563);
        float _1399 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_1370 * _1370) + (_1373 * _1373)) + (_1367 * _1367)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1361 * gl_WorldRayDirectionEXT.x, _1361 * gl_WorldRayDirectionEXT.y, _1361 * gl_WorldRayDirectionEXT.z), vec3(_591, _593, _594))));
        _1401 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
    }
    else
    {
        _1401 = 0.0;
    }
    vec4 _1403 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2(_755, _756), _1401);
    float _1407 = _815 * cbMtdParam._m0[21u].w;
    float _1412 = ((_1403.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _1414 = (-0.0) - (cbMtdParam._m0[22u].x * ((_1403.x * 0.5) + (-0.25)));
    float _1415 = fract(_1407);
    float _1417 = fract(_1407 + 0.5);
    float _1428 = abs((_1415 * 2.0) + (-1.0));
    vec4 _1445 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1415 * _1414) + _579) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_1412 * _1415) + _580) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w), 0.0);
    float _1447 = _1445.x;
    float _1448 = _1445.y;
    float _1449 = _1445.z;
    vec4 _1450 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1417 * _1414) + _579) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_1412 * _1417) + _580) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w), 0.0);
    float _1461 = ((_1450.x - _1447) * _1428) + _1447;
    float _1468 = exp2(log2(_1461 * cbMtdParam._m0[21u].z) * cbMtdParam._m0[21u].y);
    float _1469 = isnan(cbMtdParam._m0[21u].x) ? _1468 : (isnan(_1468) ? cbMtdParam._m0[21u].x : max(_1468, cbMtdParam._m0[21u].x));
    float _1470 = isnan(cbMtdParam._m0[20u].x) ? _1469 : (isnan(_1469) ? cbMtdParam._m0[20u].x : min(_1469, cbMtdParam._m0[20u].x));
    float _1494 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1495 = _1494 * gl_WorldRayDirectionEXT.x;
    float _1496 = _1494 * gl_WorldRayDirectionEXT.y;
    float _1497 = _1494 * gl_WorldRayDirectionEXT.z;
    float _1541;
    if (_646)
    {
        float _1507 = (_578 * _563) - (_575 * _566);
        float _1510 = (_572 * _566) - (_578 * _560);
        float _1513 = (_575 * _560) - (_572 * _563);
        float _1539 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_533 * _527) - (_532 * _529))) / (sqrt(((_1510 * _1510) + (_1513 * _1513)) + (_1507 * _1507)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1495, _1496, _1497), vec3(_591, _593, _594))));
        _1541 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
    }
    else
    {
        _1541 = 0.0;
    }
    vec4 _1543 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2(_755, _756), _1541);
    float _1547 = _815 * cbMtdParam._m0[17u].z;
    float _1552 = ((_1543.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _1554 = (-0.0) - (cbMtdParam._m0[17u].w * ((_1543.x * 0.5) + (-0.25)));
    float _1555 = fract(_1547);
    float _1557 = fract(_1547 + 0.5);
    float _1568 = abs((_1555 * 2.0) + (-1.0));
    vec4 _1585 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1555 * _1554) + _579) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1552 * _1555) + _580) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1587 = _1585.x;
    float _1588 = _1585.y;
    float _1589 = _1585.z;
    vec4 _1590 = textureLod(sampler2D(C_c4200_transition_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1557 * _1554) + _579) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1552 * _1557) + _580) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1621 = fma(_1197, _591, fma(_1191, _607, (_626 * _620) * _1190));
    float _1624 = fma(_1197, _593, fma(_1191, _608, (_626 * _621) * _1190));
    float _1627 = fma(_1197, _594, fma(_1191, _609, (_626 * _622) * _1190));
    float _1631 = inversesqrt(dot(vec3(_1621, _1624, _1627), vec3(_1621, _1624, _1627)));
    float _1632 = _1631 * _1621;
    float _1633 = _1631 * _1624;
    float _1634 = _1631 * _1627;
    float _1646 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1647 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1648 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1649 = (-0.0) - _1495;
    float _1650 = (-0.0) - _1496;
    float _1651 = (-0.0) - _1497;
    float _1657 = float(gl_LaunchIDEXT.x);
    float _1658 = float(gl_LaunchIDEXT.y);
    float _1661 = float(gl_LaunchSizeEXT.x);
    float _1675 = fract(fract(sin(dot(vec2(_1657 / _1661, _1658 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1688 = fract(fract(sin(dot(vec2((_1657 + 128.0) / _1661, (_1658 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1689 = 1.0 - cbMtdParam._m0[17u].x;
    float _1690 = _1689 * _1111;
    float _1691 = _1689 * _1112;
    float _1692 = _1689 * _1113;
    float _1697 = cbMtdParam._m0[17u].x * (_1111 + (-0.039999999105930328369140625));
    float _1698 = cbMtdParam._m0[17u].x * (_1112 + (-0.039999999105930328369140625));
    float _1699 = (_1113 + (-0.039999999105930328369140625)) * cbMtdParam._m0[17u].x;
    float _1700 = _1697 + 0.039999999105930328369140625;
    float _1702 = _1698 + 0.039999999105930328369140625;
    float _1703 = _1699 + 0.039999999105930328369140625;
    _73._m0 = 1u;
    uvec4 _1713 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1714 = _1713.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1714, _1713.w, _1714, vec3(_1646, _1647, _1648), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    if (_73._m0 == 0u)
    {
        float _1735 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1632, _1633, _1634));
        float _2193 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1738 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        float _1757 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1187) * 0.949999988079071044921875);
        float _1758 = _1757 * _1757;
        float _1759 = g_sceneCB._m0[4u].x - _1495;
        float _1760 = g_sceneCB._m0[4u].y - _1496;
        float _1761 = g_sceneCB._m0[4u].z - _1497;
        float _1765 = inversesqrt(dot(vec3(_1759, _1760, _1761), vec3(_1759, _1760, _1761)));
        float _1766 = _1765 * _1759;
        float _1767 = _1765 * _1760;
        float _1768 = _1765 * _1761;
        float _1769 = dot(vec3(_1632, _1633, _1634), vec3(g_sceneCB._m0[4u].xyz));
        float _2204 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1772 = isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0));
        float _1773 = dot(vec3(_1632, _1633, _1634), vec3(_1649, _1650, _1651));
        float _2215 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1776 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        float _1777 = dot(vec3(_1632, _1633, _1634), vec3(_1766, _1767, _1768));
        float _2226 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1780 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
        float _1781 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1766, _1767, _1768));
        float _2237 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
        float _1785 = _1758 * _1758;
        float _1789 = ((_1780 * _1780) * (_1785 + (-1.0))) + 1.0;
        float _1798 = exp2(log2(1.0 - (isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0)))) * 5.0);
        float _1809 = 1.0 - _1758;
        float _1820 = (0.5 / (((_1776 * ((_1772 * _1809) + _1758)) + 9.9999999392252902907785028219223e-09) + (((_1776 * _1809) + _1758) * _1772))) * _1772;
        float _2248 = isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0));
        float _1822 = (isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0))) * (_1785 / ((_1789 * _1789) * 3.141590118408203125));
        _1829 = ((_1690 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1738;
        _1830 = ((_1691 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1738;
        _1831 = ((_1692 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1738;
        _1832 = (((_1798 * (0.959999978542327880859375 - _1697)) + _1700) * g_sceneCB._m0[5u].x) * _1822;
        _1833 = (((_1798 * (0.959999978542327880859375 - _1698)) + _1702) * g_sceneCB._m0[5u].y) * _1822;
        _1834 = (((_1798 * (0.959999978542327880859375 - _1699)) + _1703) * g_sceneCB._m0[5u].z) * _1822;
    }
    else
    {
        _1829 = 0.0;
        _1830 = 0.0;
        _1831 = 0.0;
        _1832 = 0.0;
        _1833 = 0.0;
        _1834 = 0.0;
    }
    bool _1836 = abs(_1633) < 0.89999997615814208984375;
    float _1838 = float(_1836);
    float _1839 = _1836 ? 0.0 : 1.0;
    float _1842 = (_1838 * _1634) - (_1839 * _1633);
    float _1843 = _1839 * _1632;
    float _1845 = (-0.0) - (_1632 * _1838);
    float _1849 = inversesqrt(dot(vec3(_1842, _1843, _1845), vec3(_1842, _1843, _1845)));
    float _1850 = _1842 * _1849;
    float _1851 = _1843 * _1849;
    float _1852 = _1849 * _1845;
    float _1855 = (_1851 * _1634) - (_1852 * _1633);
    float _1858 = (_1852 * _1632) - (_1850 * _1634);
    float _1861 = (_1850 * _1633) - (_1851 * _1632);
    float _1863;
    float _1871;
    float _1862 = 0.0;
    uint _1864 = 0u;
    float _1868;
    bool _1870;
    for (;;)
    {
        _1868 = (float(_1864) + _1675) * 0.03125;
        _1870 = _1864 == 0u;
        float frontier_phi_55_pred;
        if (_1870)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _2027;
            float _2028;
            uint _2030;
            _2027 = 0.0;
            _2028 = 0.5;
            _2030 = _1864;
            float _1872;
            for (;;)
            {
                _1872 = ((_2030 & 1u) != 0u) ? (_2028 + _2027) : _2027;
                uint _2031 = _2030 >> 1u;
                if (_2031 == 0u)
                {
                    break;
                }
                else
                {
                    _2027 = _1872;
                    _2028 *= 0.5;
                    _2030 = _2031;
                }
            }
            frontier_phi_55_pred = _1872;
        }
        _1871 = frontier_phi_55_pred;
        float _1873 = _1871 + _1688;
        float _1877 = sqrt(_1868);
        float _1878 = ((_1873 > 1.0) ? (_1873 + (-1.0)) : _1873) * 6.283185482025146484375;
        float _1881 = cos(_1878) * _1877;
        float _1883 = sin(_1878) * _1877;
        float _1885 = sqrt(1.0 - _1868);
        float _1898 = ((_1885 * _1632) + (_1881 * _1855)) + (_1883 * _1850);
        float _1899 = ((_1885 * _1633) + (_1881 * _1858)) + (_1883 * _1851);
        float _1900 = ((_1885 * _1634) + (_1881 * _1861)) + (_1883 * _1852);
        _72._m0 = 1u;
        uvec4 _1904 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1905 = _1904.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1905, _1904.w, _1905, vec3(_1646, _1647, _1648), 9.9999997473787516355514526367188e-05, vec3(_1898, _1899, _1900), 10000.0, 1);
        float _1911 = dot(vec3(_1632, _1633, _1634), vec3(_1898, _1899, _1900));
        float _2259 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
        float _1914 = isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0));
        _1863 = ((float(_72._m0 == 0u) * _1914) / (_1914 * 0.3183098733425140380859375)) + _1862;
        uint _1865 = _1864 + 1u;
        if (_1865 == 32u)
        {
            break;
        }
        else
        {
            _1862 = _1863;
            _1864 = _1865;
            continue;
        }
    }
    float _1922 = _1863 * 0.009947183541953563690185546875;
    float _1927 = dot(vec3(_1495, _1496, _1497), vec3(_1632, _1633, _1634)) * 2.0;
    vec4 _1941 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1495 - (_1927 * _1632), _1496 - (_1927 * _1633), _1497 - (_1927 * _1634)), 4.0 - (_1187 * 4.0));
    float _1946 = dot(vec3(_1649, _1650, _1651), vec3(_1632, _1633, _1634));
    float _2270 = isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0));
    float _1956 = exp2(log2(1.0 - (isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0)))) * 5.0);
    vec4 _1968 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1632, _1633, _1634), 0.0);
    float _1984 = ((((((_1332 + (_1104 * _1003)) - (_1332 * _1104)) + cbMtdParam._m0[13u].x) + ((((((_1590.x - _1587) * _1568) + _1587) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[22u].y * _1461) * cbMtdParam._m0[12u].x)) * _1470)) + _1829) + _1832) + (((_1968.x * _1690) + (((_1956 * (0.959999978542327880859375 - _1697)) + _1700) * _1941.x)) * _1922);
    float _1993 = ((((((_1333 + (_1104 * _1004)) - (_1333 * _1104)) + cbMtdParam._m0[13u].y) + ((((((_1590.y - _1588) * _1568) + _1588) * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[22u].y * (((_1450.y - _1448) * _1428) + _1448)) * cbMtdParam._m0[12u].y)) * _1470)) + _1830) + _1833) + (((_1968.y * _1691) + (((_1956 * (0.959999978542327880859375 - _1698)) + _1702) * _1941.y)) * _1922);
    float _2002 = ((((((_1334 + (_1104 * _1005)) - (_1334 * _1104)) + cbMtdParam._m0[13u].z) + ((((((_1590.z - _1589) * _1568) + _1589) * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[22u].y * (((_1450.z - _1449) * _1428) + _1449)) * cbMtdParam._m0[12u].z)) * _1470)) + _1831) + _1834) + (((_1968.z * _1692) + (((_1956 * (0.959999978542327880859375 - _1699)) + _1703) * _1941.z)) * _1922);
    float _2281 = isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0));
    float _2292 = isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0));
    float _2303 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
    bool _2010 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2021;
    _2021.x = _2010 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0)));
    _2021.y = _2010 ? ((_587 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2292 : (isnan(_2292) ? 1.0 : min(_2292, 1.0)));
    _2021.z = _2010 ? ((_590 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0)));
    payload._m0 = _2021;
}


