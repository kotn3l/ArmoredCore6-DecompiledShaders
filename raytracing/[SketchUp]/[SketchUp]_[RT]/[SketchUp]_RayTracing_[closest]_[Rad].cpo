#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _44
{
    vec3 _m0;
};

struct _48
{
    vec2 _m0;
};

struct _51
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D _SketchUp_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _44 payload;
hitAttributeEXT _48 hit;
layout(location = 1) rayPayloadEXT _51 _53;
layout(location = 2) rayPayloadEXT _51 _54;

vec3 _981;

void main()
{
    float _62 = float(gl_LaunchSizeEXT.y);
    float _92 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _93 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _94 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _112 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _113 = _112.y;
    uint _153;
    uint _155;
    uint _156;
    if (_112.x == 0u)
    {
        uint _121 = (_113 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _130 = uvec3(texelFetch(l_geomIndexBuffer, int(_121)).x, texelFetch(l_geomIndexBuffer, int(_121 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_121 + 2u)).x);
        _153 = _130.x;
        _155 = _130.y;
        _156 = _130.z;
    }
    else
    {
        uint _134 = uint(gl_PrimitiveID) * 6u;
        uint _136 = _134 & 4294967292u;
        uint _139 = (_113 + _136) >> 2u;
        uvec2 _146 = uvec2(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x);
        uint _147 = _146.x;
        uint _148 = _146.y;
        uint _150 = _147 >> 16u;
        uint _151 = _148 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_136 == _134)
        {
            frontier_phi_3_2_ladder = _151;
            frontier_phi_3_2_ladder_1 = _150;
            frontier_phi_3_2_ladder_2 = _147 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _148 >> 16u;
            frontier_phi_3_2_ladder_1 = _151;
            frontier_phi_3_2_ladder_2 = _150;
        }
        _153 = frontier_phi_3_2_ladder_2;
        _155 = frontier_phi_3_2_ladder_1;
        _156 = frontier_phi_3_2_ladder;
    }
    uvec4 _160 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _161 = _160.x;
    uint _162 = _160.z;
    bool _163 = _162 != 0u;
    bool _165 = _112.w == 0u;
    bool _166 = _163 || _165;
    uint _168 = (_161 * _153) + 12u;
    uint _192;
    uint _193;
    uint _194;
    uint _195;
    if (_166)
    {
        uvec4 _171 = texelFetch(l_geomAttrib_0, int(_168 >> 2u));
        uint _172 = _171.x;
        _192 = _172 & 255u;
        _193 = (_172 >> 8u) & 255u;
        _194 = (_172 >> 16u) & 255u;
        _195 = 20u;
    }
    else
    {
        uint _180 = _168 >> 2u;
        uvec2 _186 = uvec2(texelFetch(l_geomAttrib_0, int(_180)).x, texelFetch(l_geomAttrib_0, int(_180 + 1u)).x);
        uint _187 = _186.x;
        _192 = _187 & 65535u;
        _193 = _187 >> 16u;
        _194 = _186.y & 65535u;
        _195 = 24u;
    }
    bool _201 = _162 == 0u;
    uint _202;
    if (_201)
    {
        _202 = _195;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_165)
        {
            frontier_phi_9_10_ladder = _195 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _195 + 8u;
        }
        _202 = frontier_phi_9_10_ladder;
    }
    uint _207 = _163 ? (_202 + 4u) : _202;
    uint _208 = _161 * _153;
    uvec4 _212 = texelFetch(l_geomAttrib_0, int((_207 + _208) >> 2u));
    uint _213 = _212.x;
    uvec4 _225 = texelFetch(l_geomAttrib_0, int(((_208 + 8u) + _207) >> 2u));
    uint _226 = _225.x;
    float _230 = float(int(uint(int(_226 << 16u) >> int(16u))));
    float _231 = float(int(uint(int(_226) >> int(16u))));
    uint _233 = (_161 * _155) + 12u;
    uint _254;
    uint _255;
    uint _256;
    uint _257;
    if (_166)
    {
        uvec4 _235 = texelFetch(l_geomAttrib_0, int(_233 >> 2u));
        uint _236 = _235.x;
        _254 = _236 & 255u;
        _255 = (_236 >> 8u) & 255u;
        _256 = (_236 >> 16u) & 255u;
        _257 = 20u;
    }
    else
    {
        uint _242 = _233 >> 2u;
        uvec2 _248 = uvec2(texelFetch(l_geomAttrib_0, int(_242)).x, texelFetch(l_geomAttrib_0, int(_242 + 1u)).x);
        uint _249 = _248.x;
        _254 = _249 & 65535u;
        _255 = _249 >> 16u;
        _256 = _248.y & 65535u;
        _257 = 24u;
    }
    uint _261;
    if (_201)
    {
        _261 = _257;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_165)
        {
            frontier_phi_16_17_ladder = _257 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _257 + 8u;
        }
        _261 = frontier_phi_16_17_ladder;
    }
    uint _265 = _163 ? (_261 + 4u) : _261;
    uint _266 = _161 * _155;
    uvec4 _269 = texelFetch(l_geomAttrib_0, int((_265 + _266) >> 2u));
    uint _270 = _269.x;
    uvec4 _282 = texelFetch(l_geomAttrib_0, int(((_266 + 8u) + _265) >> 2u));
    uint _283 = _282.x;
    float _287 = float(int(uint(int(_283 << 16u) >> int(16u))));
    float _288 = float(int(uint(int(_283) >> int(16u))));
    uint _290 = (_161 * _156) + 12u;
    uint _311;
    uint _312;
    uint _313;
    uint _314;
    if (_166)
    {
        uvec4 _292 = texelFetch(l_geomAttrib_0, int(_290 >> 2u));
        uint _293 = _292.x;
        _311 = _293 & 255u;
        _312 = (_293 >> 8u) & 255u;
        _313 = (_293 >> 16u) & 255u;
        _314 = 20u;
    }
    else
    {
        uint _299 = _290 >> 2u;
        uvec2 _305 = uvec2(texelFetch(l_geomAttrib_0, int(_299)).x, texelFetch(l_geomAttrib_0, int(_299 + 1u)).x);
        uint _306 = _305.x;
        _311 = _306 & 65535u;
        _312 = _306 >> 16u;
        _313 = _305.y & 65535u;
        _314 = 24u;
    }
    uint _318;
    if (_201)
    {
        _318 = _314;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_165)
        {
            frontier_phi_23_24_ladder = _314 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _314 + 8u;
        }
        _318 = frontier_phi_23_24_ladder;
    }
    uint _322 = _163 ? (_318 + 4u) : _318;
    uint _323 = _161 * _156;
    uvec4 _326 = texelFetch(l_geomAttrib_0, int((_322 + _323) >> 2u));
    uint _327 = _326.x;
    uvec4 _339 = texelFetch(l_geomAttrib_0, int(((_323 + 8u) + _322) >> 2u));
    uint _340 = _339.x;
    float _344 = float(int(uint(int(_340 << 16u) >> int(16u))));
    float _345 = float(int(uint(int(_340) >> int(16u))));
    bool _347 = _112.z == 0u;
    float _383;
    float _384;
    float _385;
    if (_347)
    {
        uint _350 = _153 * 3u;
        uvec3 _359 = uvec3(texelFetch(l_geomPositionBuffer, int(_350)).x, texelFetch(l_geomPositionBuffer, int(_350 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_350 + 2u)).x);
        _383 = uintBitsToFloat(_359.x);
        _384 = uintBitsToFloat(_359.y);
        _385 = uintBitsToFloat(_359.z);
    }
    else
    {
        uint _367 = _153 * 2u;
        uvec2 _373 = uvec2(texelFetch(l_geomPositionBuffer, int(_367)).x, texelFetch(l_geomPositionBuffer, int(_367 + 1u)).x);
        uint _374 = _373.x;
        _383 = unpackHalf2x16(_374).x;
        _384 = unpackHalf2x16(_374 >> 16u).x;
        _385 = unpackHalf2x16(_373.y).x;
    }
    float _421;
    float _422;
    float _423;
    if (_347)
    {
        uint _388 = _155 * 3u;
        uvec3 _397 = uvec3(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_388 + 2u)).x);
        _421 = uintBitsToFloat(_397.x);
        _422 = uintBitsToFloat(_397.y);
        _423 = uintBitsToFloat(_397.z);
    }
    else
    {
        uint _405 = _155 * 2u;
        uvec2 _411 = uvec2(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x);
        uint _412 = _411.x;
        _421 = unpackHalf2x16(_412).x;
        _422 = unpackHalf2x16(_412 >> 16u).x;
        _423 = unpackHalf2x16(_411.y).x;
    }
    float _459;
    float _460;
    float _461;
    if (_347)
    {
        uint _426 = _156 * 3u;
        uvec3 _435 = uvec3(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_426 + 2u)).x);
        _459 = uintBitsToFloat(_435.x);
        _460 = uintBitsToFloat(_435.y);
        _461 = uintBitsToFloat(_435.z);
    }
    else
    {
        uint _443 = _156 * 2u;
        uvec2 _449 = uvec2(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x);
        uint _450 = _449.x;
        _459 = unpackHalf2x16(_450).x;
        _460 = unpackHalf2x16(_450 >> 16u).x;
        _461 = unpackHalf2x16(_449.y).x;
    }
    float _464 = (1.0 - hit._m0.x) - hit._m0.y;
    float _485 = (((float(_270 & 255u) * hit._m0.x) + (float(_213 & 255u) * _464)) + (float(_327 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _489 = (((float((_270 >> 8u) & 255u) * hit._m0.x) + (float((_213 >> 8u) & 255u) * _464)) + (float((_327 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _492 = (((float((_270 >> 16u) & 255u) * hit._m0.x) + (float((_213 >> 16u) & 255u) * _464)) + (float((_327 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _524 = _421 - _383;
    float _525 = _422 - _384;
    float _526 = _423 - _385;
    float _529 = fma(_526, gl_ObjectToWorldEXT[2u].x, fma(_525, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _524));
    float _532 = fma(_526, gl_ObjectToWorldEXT[2u].y, fma(_525, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _524));
    float _535 = fma(_526, gl_ObjectToWorldEXT[2u].z, fma(_525, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _524));
    float _536 = _459 - _383;
    float _537 = _460 - _384;
    float _538 = _461 - _385;
    float _541 = fma(_538, gl_ObjectToWorldEXT[2u].x, fma(_537, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _536));
    float _544 = fma(_538, gl_ObjectToWorldEXT[2u].y, fma(_537, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _536));
    float _547 = fma(_538, gl_ObjectToWorldEXT[2u].z, fma(_537, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _536));
    float _554 = (((float(_192) * _464) + (-127.0)) + (float(_254) * hit._m0.x)) + (float(_311) * hit._m0.y);
    float _557 = (((float(_193) * _464) + (-127.0)) + (float(_255) * hit._m0.x)) + (float(_312) * hit._m0.y);
    float _560 = (((float(_194) * _464) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_313) * hit._m0.y);
    float _561 = _554 * 0.0078740157186985015869140625;
    float _563 = _557 * 0.0078740157186985015869140625;
    float _564 = _560 * 0.0078740157186985015869140625;
    uvec2 _576 = uvec2(textureSize(_SketchUp_snp_0_Texture2D_0, int(0u)));
    float _585 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _586 = _585 * gl_WorldRayDirectionEXT.x;
    float _587 = _585 * gl_WorldRayDirectionEXT.y;
    float _588 = _585 * gl_WorldRayDirectionEXT.z;
    float _640;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _602 = (_547 * _532) - (_544 * _535);
        float _605 = (_541 * _535) - (_547 * _529);
        float _608 = (_544 * _529) - (_541 * _532);
        float _637 = ((log2((((float(_576.y) * 0.5) * float(_576.x)) * abs((((_345 - _231) * (_287 - _230)) - ((_344 - _230) * (_288 - _231))) * 2.384185791015625e-07)) / (sqrt(((_605 * _605) + (_608 * _608)) + (_602 * _602)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_93 * _93) + (_92 * _92)) + (_94 * _94)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _62)))))) / abs(dot(vec3(_586, _587, _588), vec3(_561, _563, _564))));
        _640 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    }
    else
    {
        _640 = 0.0;
    }
    vec4 _644 = textureLod(sampler2D(_SketchUp_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_287 * hit._m0.x) + (_230 * _464)) + (_344 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_288 * hit._m0.x) + (_231 * _464)) + (_345 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _640);
    float _656 = (sqrt(_644.x) * _485) * sqrt(_485);
    float _658 = (sqrt(_644.y) * _489) * sqrt(_489);
    float _660 = (sqrt(_644.z) * _492) * sqrt(_492);
    float _661 = _656 * _656;
    float _662 = _658 * _658;
    float _663 = _660 * _660;
    float _667 = inversesqrt(dot(vec3(_561, _563, _564), vec3(_561, _563, _564)));
    float _668 = _667 * _561;
    float _669 = _667 * _563;
    float _670 = _667 * _564;
    float _682 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _683 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _684 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _685 = (-0.0) - _586;
    float _687 = (-0.0) - _587;
    float _688 = (-0.0) - _588;
    float _694 = float(gl_LaunchIDEXT.x);
    float _695 = float(gl_LaunchIDEXT.y);
    float _698 = float(gl_LaunchSizeEXT.x);
    float _712 = fract(fract(sin(dot(vec2(_694 / _698, _695 / _62), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _725 = fract(fract(sin(dot(vec2((_694 + 128.0) / _698, (_695 + 128.0) / _62), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _54._m0 = 1u;
    uvec4 _735 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _736 = _735.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _736, _735.w, _736, vec3(_682, _683, _684), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    if (_54._m0 == 0u)
    {
        float _757 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_668, _669, _670));
        float _1060 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
        float _760 = isnan(1.0) ? _1060 : (isnan(_1060) ? 1.0 : min(_1060, 1.0));
        float _771 = g_sceneCB._m0[4u].x - _586;
        float _772 = g_sceneCB._m0[4u].y - _587;
        float _773 = g_sceneCB._m0[4u].z - _588;
        float _777 = inversesqrt(dot(vec3(_771, _772, _773), vec3(_771, _772, _773)));
        float _781 = dot(vec3(_668, _669, _670), vec3(g_sceneCB._m0[4u].xyz));
        float _1071 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
        float _784 = isnan(1.0) ? _1071 : (isnan(_1071) ? 1.0 : min(_1071, 1.0));
        float _785 = dot(vec3(_668, _669, _670), vec3(_685, _687, _688));
        float _1082 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
        float _789 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_771 * _777, _772 * _777, _773 * _777));
        float _1093 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
        float _797 = exp2(log2(1.0 - (isnan(1.0) ? _1093 : (isnan(_1093) ? 1.0 : min(_1093, 1.0)))) * 5.0);
        float _802 = (0.5 / ((_784 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1082 : (isnan(_1082) ? 1.0 : min(_1082, 1.0))))) * _784;
        float _1104 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
        float _804 = (isnan(1.0) ? _1104 : (isnan(_1104) ? 1.0 : min(_1104, 1.0))) * 0.31831014156341552734375;
        _812 = ((_661 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _760;
        _813 = ((_662 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _760;
        _814 = ((_663 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _760;
        _815 = (_797 * g_sceneCB._m0[5u].x) * _804;
        _816 = (_797 * g_sceneCB._m0[5u].y) * _804;
        _817 = (_797 * g_sceneCB._m0[5u].z) * _804;
    }
    else
    {
        _812 = 0.0;
        _813 = 0.0;
        _814 = 0.0;
        _815 = 0.0;
        _816 = 0.0;
        _817 = 0.0;
    }
    bool _819 = abs(_669) < 0.89999997615814208984375;
    float _821 = float(_819);
    float _822 = _819 ? 0.0 : 1.0;
    float _825 = (_821 * _670) - (_822 * _669);
    float _826 = _822 * _668;
    float _828 = (-0.0) - (_668 * _821);
    float _832 = inversesqrt(dot(vec3(_825, _826, _828), vec3(_825, _826, _828)));
    float _833 = _825 * _832;
    float _834 = _826 * _832;
    float _835 = _832 * _828;
    float _838 = (_834 * _670) - (_835 * _669);
    float _841 = (_835 * _668) - (_833 * _670);
    float _844 = (_833 * _669) - (_834 * _668);
    float _846;
    float _854;
    float _845 = 0.0;
    uint _847 = 0u;
    float _851;
    bool _853;
    for (;;)
    {
        _851 = (float(_847) + _712) * 0.03125;
        _853 = _847 == 0u;
        float frontier_phi_41_pred;
        if (_853)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _986;
            float _987;
            uint _989;
            _986 = 0.0;
            _987 = 0.5;
            _989 = _847;
            float _855;
            for (;;)
            {
                _855 = ((_989 & 1u) != 0u) ? (_987 + _986) : _986;
                uint _990 = _989 >> 1u;
                if (_990 == 0u)
                {
                    break;
                }
                else
                {
                    _986 = _855;
                    _987 *= 0.5;
                    _989 = _990;
                }
            }
            frontier_phi_41_pred = _855;
        }
        _854 = frontier_phi_41_pred;
        float _856 = _854 + _725;
        float _861 = sqrt(_851);
        float _862 = ((_856 > 1.0) ? (_856 + (-1.0)) : _856) * 6.283185482025146484375;
        float _865 = cos(_862) * _861;
        float _867 = sin(_862) * _861;
        float _869 = sqrt(1.0 - _851);
        float _882 = ((_869 * _668) + (_865 * _838)) + (_867 * _833);
        float _883 = ((_869 * _669) + (_865 * _841)) + (_867 * _834);
        float _884 = ((_869 * _670) + (_865 * _844)) + (_867 * _835);
        _53._m0 = 1u;
        uvec4 _888 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _889 = _888.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _889, _888.w, _889, vec3(_682, _683, _684), 9.9999997473787516355514526367188e-05, vec3(_882, _883, _884), 10000.0, 1);
        float _895 = dot(vec3(_668, _669, _670), vec3(_882, _883, _884));
        float _1115 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _898 = isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0));
        _846 = ((float(_53._m0 == 0u) * _898) / (_898 * 0.3183098733425140380859375)) + _845;
        uint _848 = _847 + 1u;
        if (_848 == 32u)
        {
            break;
        }
        else
        {
            _845 = _846;
            _847 = _848;
            continue;
        }
    }
    float _906 = _846 * 0.009947183541953563690185546875;
    float _911 = dot(vec3(_586, _587, _588), vec3(_668, _669, _670)) * 2.0;
    vec4 _923 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_586 - (_911 * _668), _587 - (_911 * _669), _588 - (_911 * _670)), 4.0);
    float _928 = dot(vec3(_685, _687, _688), vec3(_668, _669, _670));
    float _1126 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _935 = exp2(log2(1.0 - (isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0)))) * 5.0);
    vec4 _941 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_668, _669, _670), 0.0);
    float _952 = (_815 + _812) + (((_941.x * _661) + (_935 * _923.x)) * _906);
    float _956 = (_816 + _813) + (((_941.y * _662) + (_935 * _923.y)) * _906);
    float _960 = (_817 + _814) + (((_941.z * _663) + (_935 * _923.z)) * _906);
    float _1137 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _1148 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _1159 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    bool _969 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _980;
    _980.x = _969 ? ((_554 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1137 : (isnan(_1137) ? 1.0 : min(_1137, 1.0)));
    _980.y = _969 ? ((_557 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1148 : (isnan(_1148) ? 1.0 : min(_1148, 1.0)));
    _980.z = _969 ? ((_560 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1159 : (isnan(_1159) ? 1.0 : min(_1159, 1.0)));
    payload._m0 = _980;
}


