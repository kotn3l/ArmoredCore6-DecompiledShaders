#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _44
{
    vec3 _m0;
};

struct _48
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _44 payload;
hitAttributeEXT _48 hit;

void main()
{
    vec3 _54 = payload._m0;
    float _95 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _96 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _97 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _115 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _116 = _115.y;
    uint _156;
    uint _158;
    uint _159;
    if (_115.x == 0u)
    {
        uint _124 = (_116 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _133 = uvec3(texelFetch(l_geomIndexBuffer, int(_124)).x, texelFetch(l_geomIndexBuffer, int(_124 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_124 + 2u)).x);
        _156 = _133.x;
        _158 = _133.y;
        _159 = _133.z;
    }
    else
    {
        uint _137 = uint(gl_PrimitiveID) * 6u;
        uint _139 = _137 & 4294967292u;
        uint _142 = (_116 + _139) >> 2u;
        uvec2 _149 = uvec2(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x);
        uint _150 = _149.x;
        uint _151 = _149.y;
        uint _153 = _150 >> 16u;
        uint _154 = _151 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_139 == _137)
        {
            frontier_phi_3_2_ladder = _150 & 65535u;
            frontier_phi_3_2_ladder_1 = _153;
            frontier_phi_3_2_ladder_2 = _154;
        }
        else
        {
            frontier_phi_3_2_ladder = _153;
            frontier_phi_3_2_ladder_1 = _154;
            frontier_phi_3_2_ladder_2 = _151 >> 16u;
        }
        _156 = frontier_phi_3_2_ladder;
        _158 = frontier_phi_3_2_ladder_1;
        _159 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _163 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _164 = _163.x;
    uint _165 = _163.z;
    bool _166 = _165 != 0u;
    bool _168 = _115.w == 0u;
    bool _169 = _166 || _168;
    uint _171 = (_164 * _156) + 12u;
    uint _195;
    uint _196;
    uint _197;
    uint _198;
    if (_169)
    {
        uvec4 _174 = texelFetch(l_geomAttrib_0, int(_171 >> 2u));
        uint _175 = _174.x;
        _195 = _175 & 255u;
        _196 = (_175 >> 8u) & 255u;
        _197 = (_175 >> 16u) & 255u;
        _198 = 20u;
    }
    else
    {
        uint _183 = _171 >> 2u;
        uvec2 _189 = uvec2(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x);
        uint _190 = _189.x;
        _195 = _190 & 65535u;
        _196 = _190 >> 16u;
        _197 = _189.y & 65535u;
        _198 = 24u;
    }
    bool _204 = _165 == 0u;
    uint _205;
    if (_204)
    {
        _205 = _198;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_168)
        {
            frontier_phi_9_10_ladder = _198 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _198 + 8u;
        }
        _205 = frontier_phi_9_10_ladder;
    }
    uvec4 _216 = texelFetch(l_geomAttrib_0, int((((_164 * _156) + 4u) + (_166 ? (_205 + 4u) : _205)) >> 2u));
    uint _217 = _216.x;
    float _221 = float(int(uint(int(_217 << 16u) >> int(16u))));
    float _222 = float(int(uint(int(_217) >> int(16u))));
    uint _224 = (_164 * _158) + 12u;
    uint _245;
    uint _246;
    uint _247;
    uint _248;
    if (_169)
    {
        uvec4 _226 = texelFetch(l_geomAttrib_0, int(_224 >> 2u));
        uint _227 = _226.x;
        _245 = _227 & 255u;
        _246 = (_227 >> 8u) & 255u;
        _247 = (_227 >> 16u) & 255u;
        _248 = 20u;
    }
    else
    {
        uint _233 = _224 >> 2u;
        uvec2 _239 = uvec2(texelFetch(l_geomAttrib_0, int(_233)).x, texelFetch(l_geomAttrib_0, int(_233 + 1u)).x);
        uint _240 = _239.x;
        _245 = _240 & 65535u;
        _246 = _240 >> 16u;
        _247 = _239.y & 65535u;
        _248 = 24u;
    }
    uint _252;
    if (_204)
    {
        _252 = _248;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_168)
        {
            frontier_phi_16_17_ladder = _248 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _248 + 8u;
        }
        _252 = frontier_phi_16_17_ladder;
    }
    uvec4 _261 = texelFetch(l_geomAttrib_0, int((((_164 * _158) + 4u) + (_166 ? (_252 + 4u) : _252)) >> 2u));
    uint _262 = _261.x;
    float _266 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _267 = float(int(uint(int(_262) >> int(16u))));
    uint _269 = (_164 * _159) + 12u;
    uint _290;
    uint _291;
    uint _292;
    uint _293;
    if (_169)
    {
        uvec4 _271 = texelFetch(l_geomAttrib_0, int(_269 >> 2u));
        uint _272 = _271.x;
        _290 = _272 & 255u;
        _291 = (_272 >> 8u) & 255u;
        _292 = (_272 >> 16u) & 255u;
        _293 = 20u;
    }
    else
    {
        uint _278 = _269 >> 2u;
        uvec2 _284 = uvec2(texelFetch(l_geomAttrib_0, int(_278)).x, texelFetch(l_geomAttrib_0, int(_278 + 1u)).x);
        uint _285 = _284.x;
        _290 = _285 & 65535u;
        _291 = _285 >> 16u;
        _292 = _284.y & 65535u;
        _293 = 24u;
    }
    uint _297;
    if (_204)
    {
        _297 = _293;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_168)
        {
            frontier_phi_23_24_ladder = _293 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _293 + 8u;
        }
        _297 = frontier_phi_23_24_ladder;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int((((_164 * _159) + 4u) + (_166 ? (_297 + 4u) : _297)) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    bool _314 = _115.z == 0u;
    float _350;
    float _351;
    float _352;
    if (_314)
    {
        uint _317 = _156 * 3u;
        uvec3 _326 = uvec3(texelFetch(l_geomPositionBuffer, int(_317)).x, texelFetch(l_geomPositionBuffer, int(_317 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_317 + 2u)).x);
        _350 = uintBitsToFloat(_326.x);
        _351 = uintBitsToFloat(_326.y);
        _352 = uintBitsToFloat(_326.z);
    }
    else
    {
        uint _334 = _156 * 2u;
        uvec2 _340 = uvec2(texelFetch(l_geomPositionBuffer, int(_334)).x, texelFetch(l_geomPositionBuffer, int(_334 + 1u)).x);
        uint _341 = _340.x;
        _350 = unpackHalf2x16(_341).x;
        _351 = unpackHalf2x16(_341 >> 16u).x;
        _352 = unpackHalf2x16(_340.y).x;
    }
    float _388;
    float _389;
    float _390;
    if (_314)
    {
        uint _355 = _158 * 3u;
        uvec3 _364 = uvec3(texelFetch(l_geomPositionBuffer, int(_355)).x, texelFetch(l_geomPositionBuffer, int(_355 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_355 + 2u)).x);
        _388 = uintBitsToFloat(_364.x);
        _389 = uintBitsToFloat(_364.y);
        _390 = uintBitsToFloat(_364.z);
    }
    else
    {
        uint _372 = _158 * 2u;
        uvec2 _378 = uvec2(texelFetch(l_geomPositionBuffer, int(_372)).x, texelFetch(l_geomPositionBuffer, int(_372 + 1u)).x);
        uint _379 = _378.x;
        _388 = unpackHalf2x16(_379).x;
        _389 = unpackHalf2x16(_379 >> 16u).x;
        _390 = unpackHalf2x16(_378.y).x;
    }
    float _426;
    float _427;
    float _428;
    if (_314)
    {
        uint _393 = _159 * 3u;
        uvec3 _402 = uvec3(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_393 + 2u)).x);
        _426 = uintBitsToFloat(_402.x);
        _427 = uintBitsToFloat(_402.y);
        _428 = uintBitsToFloat(_402.z);
    }
    else
    {
        uint _410 = _159 * 2u;
        uvec2 _416 = uvec2(texelFetch(l_geomPositionBuffer, int(_410)).x, texelFetch(l_geomPositionBuffer, int(_410 + 1u)).x);
        uint _417 = _416.x;
        _426 = unpackHalf2x16(_417).x;
        _427 = unpackHalf2x16(_417 >> 16u).x;
        _428 = unpackHalf2x16(_416.y).x;
    }
    float _431 = (1.0 - hit._m0.x) - hit._m0.y;
    float _463 = _388 - _350;
    float _464 = _389 - _351;
    float _465 = _390 - _352;
    float _468 = fma(_465, gl_ObjectToWorldEXT[2u].x, fma(_464, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _463));
    float _471 = fma(_465, gl_ObjectToWorldEXT[2u].y, fma(_464, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _463));
    float _474 = fma(_465, gl_ObjectToWorldEXT[2u].z, fma(_464, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _463));
    float _475 = _426 - _350;
    float _476 = _427 - _351;
    float _477 = _428 - _352;
    float _480 = fma(_477, gl_ObjectToWorldEXT[2u].x, fma(_476, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _475));
    float _483 = fma(_477, gl_ObjectToWorldEXT[2u].y, fma(_476, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _475));
    float _486 = fma(_477, gl_ObjectToWorldEXT[2u].z, fma(_476, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _475));
    uvec2 _514 = uvec2(textureSize(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, int(0u)));
    float _601;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _557 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _563 = (_486 * _471) - (_483 * _474);
        float _566 = (_480 * _474) - (_486 * _468);
        float _569 = (_483 * _468) - (_480 * _471);
        float _596 = log2(abs(sqrt(((_96 * _96) + (_95 * _95)) + (_97 * _97)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))))) / abs(dot(vec3(_557 * gl_WorldRayDirectionEXT.x, _557 * gl_WorldRayDirectionEXT.y, _557 * gl_WorldRayDirectionEXT.z), vec3(((((float(_195) * _431) + (-127.0)) + (float(_245) * hit._m0.x)) + (float(_290) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_196) * _431) + (-127.0)) + (float(_246) * hit._m0.x)) + (float(_291) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_197) * _431) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y)) * 0.0078740157186985015869140625))));
        float _598 = ((log2((((float(_514.y) * 0.5) * float(_514.x)) * abs((((_312 - _222) * (_266 - _221)) - ((_311 - _221) * (_267 - _222))) * 2.384185791015625e-07)) / (sqrt(((_566 * _566) + (_569 * _569)) + (_563 * _563)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + _596;
        _601 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    }
    else
    {
        _601 = 0.0;
    }
    if ((textureLod(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + ((((_266 * hit._m0.x) + (_221 * _431)) + (_311 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + ((((_267 * hit._m0.x) + (_222 * _431)) + (_312 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _601).w * cbMtdParam._m0[9u].w) < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _54;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _54;
        return;
    }
}


