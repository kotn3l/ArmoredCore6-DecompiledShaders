#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1171;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _163 >> 16u;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _183 = (_176 * _168) + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 20u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 24u;
    }
    bool _216 = _177 == 0u;
    uint _217;
    if (_216)
    {
        _217 = _210;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 8u;
        }
        _217 = frontier_phi_9_10_ladder;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((((_176 * _168) + 4u) + (_178 ? (_217 + 4u) : _217)) >> 2u));
    uint _229 = _228.x;
    float _233 = float(int(uint(int(_229 << 16u) >> int(16u))));
    float _234 = float(int(uint(int(_229) >> int(16u))));
    uint _236 = (_176 * _170) + 12u;
    uint _257;
    uint _258;
    uint _259;
    uint _260;
    if (_181)
    {
        uvec4 _238 = texelFetch(l_geomAttrib_0, int(_236 >> 2u));
        uint _239 = _238.x;
        _257 = _239 & 255u;
        _258 = (_239 >> 8u) & 255u;
        _259 = (_239 >> 16u) & 255u;
        _260 = 20u;
    }
    else
    {
        uint _245 = _236 >> 2u;
        uvec2 _251 = uvec2(texelFetch(l_geomAttrib_0, int(_245)).x, texelFetch(l_geomAttrib_0, int(_245 + 1u)).x);
        uint _252 = _251.x;
        _257 = _252 & 65535u;
        _258 = _252 >> 16u;
        _259 = _251.y & 65535u;
        _260 = 24u;
    }
    uint _264;
    if (_216)
    {
        _264 = _260;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _260 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _260 + 8u;
        }
        _264 = frontier_phi_16_17_ladder;
    }
    uvec4 _273 = texelFetch(l_geomAttrib_0, int((((_176 * _170) + 4u) + (_178 ? (_264 + 4u) : _264)) >> 2u));
    uint _274 = _273.x;
    float _278 = float(int(uint(int(_274 << 16u) >> int(16u))));
    float _279 = float(int(uint(int(_274) >> int(16u))));
    uint _281 = (_176 * _171) + 12u;
    uint _302;
    uint _303;
    uint _304;
    uint _305;
    if (_181)
    {
        uvec4 _283 = texelFetch(l_geomAttrib_0, int(_281 >> 2u));
        uint _284 = _283.x;
        _302 = _284 & 255u;
        _303 = (_284 >> 8u) & 255u;
        _304 = (_284 >> 16u) & 255u;
        _305 = 20u;
    }
    else
    {
        uint _290 = _281 >> 2u;
        uvec2 _296 = uvec2(texelFetch(l_geomAttrib_0, int(_290)).x, texelFetch(l_geomAttrib_0, int(_290 + 1u)).x);
        uint _297 = _296.x;
        _302 = _297 & 65535u;
        _303 = _297 >> 16u;
        _304 = _296.y & 65535u;
        _305 = 24u;
    }
    uint _309;
    if (_216)
    {
        _309 = _305;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _305 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _305 + 8u;
        }
        _309 = frontier_phi_23_24_ladder;
    }
    uvec4 _318 = texelFetch(l_geomAttrib_0, int((((_176 * _171) + 4u) + (_178 ? (_309 + 4u) : _309)) >> 2u));
    uint _319 = _318.x;
    float _323 = float(int(uint(int(_319 << 16u) >> int(16u))));
    float _324 = float(int(uint(int(_319) >> int(16u))));
    bool _326 = _127.z == 0u;
    float _362;
    float _363;
    float _364;
    if (_326)
    {
        uint _329 = _168 * 3u;
        uvec3 _338 = uvec3(texelFetch(l_geomPositionBuffer, int(_329)).x, texelFetch(l_geomPositionBuffer, int(_329 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_329 + 2u)).x);
        _362 = uintBitsToFloat(_338.x);
        _363 = uintBitsToFloat(_338.y);
        _364 = uintBitsToFloat(_338.z);
    }
    else
    {
        uint _346 = _168 * 2u;
        uvec2 _352 = uvec2(texelFetch(l_geomPositionBuffer, int(_346)).x, texelFetch(l_geomPositionBuffer, int(_346 + 1u)).x);
        uint _353 = _352.x;
        _362 = unpackHalf2x16(_353).x;
        _363 = unpackHalf2x16(_353 >> 16u).x;
        _364 = unpackHalf2x16(_352.y).x;
    }
    float _400;
    float _401;
    float _402;
    if (_326)
    {
        uint _367 = _170 * 3u;
        uvec3 _376 = uvec3(texelFetch(l_geomPositionBuffer, int(_367)).x, texelFetch(l_geomPositionBuffer, int(_367 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_367 + 2u)).x);
        _400 = uintBitsToFloat(_376.x);
        _401 = uintBitsToFloat(_376.y);
        _402 = uintBitsToFloat(_376.z);
    }
    else
    {
        uint _384 = _170 * 2u;
        uvec2 _390 = uvec2(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x);
        uint _391 = _390.x;
        _400 = unpackHalf2x16(_391).x;
        _401 = unpackHalf2x16(_391 >> 16u).x;
        _402 = unpackHalf2x16(_390.y).x;
    }
    float _438;
    float _439;
    float _440;
    if (_326)
    {
        uint _405 = _171 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _171 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _443 = (1.0 - hit._m0.x) - hit._m0.y;
    float _465 = (_278 - _233) * 0.00048828125;
    float _467 = (_279 - _234) * 0.00048828125;
    float _470 = (_323 - _233) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _493 = _400 - _362;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _498 = fma(_495, gl_ObjectToWorldEXT[2u].x, fma(_494, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _493));
    float _501 = fma(_495, gl_ObjectToWorldEXT[2u].y, fma(_494, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _493));
    float _504 = fma(_495, gl_ObjectToWorldEXT[2u].z, fma(_494, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _493));
    float _505 = _438 - _362;
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _510 = fma(_507, gl_ObjectToWorldEXT[2u].x, fma(_506, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _505));
    float _513 = fma(_507, gl_ObjectToWorldEXT[2u].y, fma(_506, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _505));
    float _516 = fma(_507, gl_ObjectToWorldEXT[2u].z, fma(_506, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _505));
    float _517 = (((_278 * hit._m0.x) + (_233 * _443)) + (_323 * hit._m0.y)) * 0.00048828125;
    float _518 = (((_279 * hit._m0.x) + (_234 * _443)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _522 = (((float(_207) * _443) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _525 = (((float(_208) * _443) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _528 = (((float(_209) * _443) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = _522 * 0.0078740157186985015869140625;
    float _531 = _525 * 0.0078740157186985015869140625;
    float _532 = _528 * 0.0078740157186985015869140625;
    uvec2 _559 = uvec2(textureSize(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, int(0u)));
    bool _564 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _617;
    if (_564)
    {
        float _575 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _581 = (_516 * _501) - (_513 * _504);
        float _584 = (_510 * _504) - (_516 * _498);
        float _587 = (_513 * _498) - (_510 * _501);
        float _614 = ((log2((((float(_559.y) * 0.5) * float(_559.x)) * abs((_471 * _465) - (_470 * _467))) / (sqrt(((_584 * _584) + (_587 * _587)) + (_581 * _581)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_575 * gl_WorldRayDirectionEXT.x, _575 * gl_WorldRayDirectionEXT.y, _575 * gl_WorldRayDirectionEXT.z), vec3(_529, _531, _532))));
        _617 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    }
    else
    {
        _617 = 0.0;
    }
    vec4 _621 = textureLod(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _617);
    float _626 = _621.x * cbMtdParam._m0[9u].x;
    float _627 = _621.y * cbMtdParam._m0[9u].y;
    float _628 = _621.z * cbMtdParam._m0[9u].z;
    uvec2 _655 = uvec2(textureSize(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_2, int(0u)));
    float _706;
    if (_564)
    {
        float _666 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _672 = (_516 * _501) - (_513 * _504);
        float _675 = (_510 * _504) - (_516 * _498);
        float _678 = (_513 * _498) - (_510 * _501);
        float _704 = ((log2((((float(_655.y) * 0.5) * float(_655.x)) * abs((_471 * _465) - (_470 * _467))) / (sqrt(((_675 * _675) + (_678 * _678)) + (_672 * _672)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_666 * gl_WorldRayDirectionEXT.x, _666 * gl_WorldRayDirectionEXT.y, _666 * gl_WorldRayDirectionEXT.z), vec3(_529, _531, _532))));
        _706 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    }
    else
    {
        _706 = 0.0;
    }
    vec4 _708 = textureLod(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _706);
    uvec2 _739 = uvec2(textureSize(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_1, int(0u)));
    float _743 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _744 = _743 * gl_WorldRayDirectionEXT.x;
    float _745 = _743 * gl_WorldRayDirectionEXT.y;
    float _746 = _743 * gl_WorldRayDirectionEXT.z;
    float _790;
    if (_564)
    {
        float _756 = (_516 * _501) - (_513 * _504);
        float _759 = (_510 * _504) - (_516 * _498);
        float _762 = (_513 * _498) - (_510 * _501);
        float _788 = ((log2((((float(_739.y) * 0.5) * float(_739.x)) * abs((_471 * _465) - (_470 * _467))) / (sqrt(((_759 * _759) + (_762 * _762)) + (_756 * _756)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_744, _745, _746), vec3(_529, _531, _532))));
        _790 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    }
    else
    {
        _790 = 0.0;
    }
    vec4 _792 = textureLod(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _790);
    float _826 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_529, _531, _532, 0.0)) - cbMtdParam._m0[13u].w;
    float _1264 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _833 = exp2(log2(1.0 - (isnan(1.0) ? _1264 : (isnan(_1264) ? 1.0 : min(_1264, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].x : (isnan(cbMtdParam._m0[14u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].x, 0.001000000047497451305389404296875))));
    float _843 = inversesqrt(dot(vec3(_529, _531, _532), vec3(_529, _531, _532)));
    float _844 = _843 * _529;
    float _845 = _843 * _531;
    float _846 = _843 * _532;
    float _858 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _859 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _860 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _861 = (-0.0) - _744;
    float _863 = (-0.0) - _745;
    float _864 = (-0.0) - _746;
    float _870 = float(gl_LaunchIDEXT.x);
    float _871 = float(gl_LaunchIDEXT.y);
    float _874 = float(gl_LaunchSizeEXT.x);
    float _888 = fract(fract(sin(dot(vec2(_870 / _874, _871 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _901 = fract(fract(sin(dot(vec2((_870 + 128.0) / _874, (_871 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _65._m0 = 1u;
    uvec4 _911 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _912 = _911.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _912, _911.w, _912, vec3(_858, _859, _860), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _992;
    float _993;
    float _994;
    float _995;
    float _996;
    float _997;
    if (_65._m0 == 0u)
    {
        float _933 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_844, _845, _846));
        float _1280 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _936 = isnan(1.0) ? _1280 : (isnan(_1280) ? 1.0 : min(_1280, 1.0));
        float _947 = g_sceneCB._m0[4u].x - _744;
        float _948 = g_sceneCB._m0[4u].y - _745;
        float _949 = g_sceneCB._m0[4u].z - _746;
        float _953 = inversesqrt(dot(vec3(_947, _948, _949), vec3(_947, _948, _949)));
        float _957 = dot(vec3(_844, _845, _846), vec3(g_sceneCB._m0[4u].xyz));
        float _1291 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        float _960 = isnan(1.0) ? _1291 : (isnan(_1291) ? 1.0 : min(_1291, 1.0));
        float _961 = dot(vec3(_844, _845, _846), vec3(_861, _863, _864));
        float _1302 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
        float _965 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_947 * _953, _948 * _953, _949 * _953));
        float _1313 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _976 = (exp2(log2(1.0 - (isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _982 = (0.5 / ((_960 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1302 : (isnan(_1302) ? 1.0 : min(_1302, 1.0))))) * _960;
        float _1324 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
        float _984 = (isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0))) * 0.31831014156341552734375;
        _992 = ((_626 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _936;
        _993 = ((_627 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _936;
        _994 = ((_628 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _936;
        _995 = (_976 * g_sceneCB._m0[5u].x) * _984;
        _996 = (_976 * g_sceneCB._m0[5u].y) * _984;
        _997 = (_976 * g_sceneCB._m0[5u].z) * _984;
    }
    else
    {
        _992 = 0.0;
        _993 = 0.0;
        _994 = 0.0;
        _995 = 0.0;
        _996 = 0.0;
        _997 = 0.0;
    }
    bool _999 = abs(_845) < 0.89999997615814208984375;
    float _1001 = float(_999);
    float _1002 = _999 ? 0.0 : 1.0;
    float _1005 = (_1001 * _846) - (_1002 * _845);
    float _1006 = _1002 * _844;
    float _1008 = (-0.0) - (_844 * _1001);
    float _1012 = inversesqrt(dot(vec3(_1005, _1006, _1008), vec3(_1005, _1006, _1008)));
    float _1013 = _1005 * _1012;
    float _1014 = _1006 * _1012;
    float _1015 = _1012 * _1008;
    float _1018 = (_1014 * _846) - (_1015 * _845);
    float _1021 = (_1015 * _844) - (_1013 * _846);
    float _1024 = (_1013 * _845) - (_1014 * _844);
    float _1026;
    float _1034;
    float _1025 = 0.0;
    uint _1027 = 0u;
    float _1031;
    bool _1033;
    for (;;)
    {
        _1031 = (float(_1027) + _888) * 0.03125;
        _1033 = _1027 == 0u;
        float frontier_phi_45_pred;
        if (_1033)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1176;
            float _1177;
            uint _1179;
            _1176 = 0.0;
            _1177 = 0.5;
            _1179 = _1027;
            float _1035;
            for (;;)
            {
                _1035 = ((_1179 & 1u) != 0u) ? (_1177 + _1176) : _1176;
                uint _1180 = _1179 >> 1u;
                if (_1180 == 0u)
                {
                    break;
                }
                else
                {
                    _1176 = _1035;
                    _1177 *= 0.5;
                    _1179 = _1180;
                }
            }
            frontier_phi_45_pred = _1035;
        }
        _1034 = frontier_phi_45_pred;
        float _1036 = _1034 + _901;
        float _1041 = sqrt(_1031);
        float _1042 = ((_1036 > 1.0) ? (_1036 + (-1.0)) : _1036) * 6.283185482025146484375;
        float _1045 = cos(_1042) * _1041;
        float _1047 = sin(_1042) * _1041;
        float _1049 = sqrt(1.0 - _1031);
        float _1062 = ((_1049 * _844) + (_1045 * _1018)) + (_1047 * _1013);
        float _1063 = ((_1049 * _845) + (_1045 * _1021)) + (_1047 * _1014);
        float _1064 = ((_1049 * _846) + (_1045 * _1024)) + (_1047 * _1015);
        _64._m0 = 1u;
        uvec4 _1068 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1069 = _1068.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1069, _1068.w, _1069, vec3(_858, _859, _860), 9.9999997473787516355514526367188e-05, vec3(_1062, _1063, _1064), 10000.0, 1);
        float _1075 = dot(vec3(_844, _845, _846), vec3(_1062, _1063, _1064));
        float _1335 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1078 = isnan(1.0) ? _1335 : (isnan(_1335) ? 1.0 : min(_1335, 1.0));
        _1026 = ((float(_64._m0 == 0u) * _1078) / (_1078 * 0.3183098733425140380859375)) + _1025;
        uint _1028 = _1027 + 1u;
        if (_1028 == 32u)
        {
            break;
        }
        else
        {
            _1025 = _1026;
            _1027 = _1028;
            continue;
        }
    }
    float _1086 = _1026 * 0.009947183541953563690185546875;
    float _1091 = dot(vec3(_744, _745, _746), vec3(_844, _845, _846)) * 2.0;
    vec4 _1103 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_744 - (_1091 * _844), _745 - (_1091 * _845), _746 - (_1091 * _846)), 4.0);
    float _1108 = dot(vec3(_861, _863, _864), vec3(_844, _845, _846));
    float _1346 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    float _1117 = (exp2(log2(1.0 - (isnan(1.0) ? _1346 : (isnan(_1346) ? 1.0 : min(_1346, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1123 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_844, _845, _846), 0.0);
    float _1137 = (((((((_792.x * cbMtdParam._m0[11u].x) + (_708.x * cbMtdParam._m0[10u].x)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_833 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].x) - cbMtdParam._m0[13u].y))) + _992) + _995) + (((_1123.x * _626) + (_1117 * _1103.x)) * _1086);
    float _1144 = (((((((_792.y * cbMtdParam._m0[11u].y) + (_708.y * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_833 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].y) - cbMtdParam._m0[13u].y))) + _993) + _996) + (((_1123.y * _627) + (_1117 * _1103.y)) * _1086);
    float _1151 = (((((((_792.z * cbMtdParam._m0[11u].z) + (_708.z * cbMtdParam._m0[10u].z)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_833 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].z) - cbMtdParam._m0[13u].y))) + _994) + _997) + (((_1123.z * _628) + (_1117 * _1103.z)) * _1086);
    float _1357 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
    float _1368 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    float _1379 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    bool _1159 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1170;
    _1170.x = _1159 ? ((_522 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1357 : (isnan(_1357) ? 1.0 : min(_1357, 1.0)));
    _1170.y = _1159 ? ((_525 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1368 : (isnan(_1368) ? 1.0 : min(_1368, 1.0)));
    _1170.z = _1159 ? ((_528 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1379 : (isnan(_1379) ? 1.0 : min(_1379, 1.0)));
    payload._m0 = _1170;
}


