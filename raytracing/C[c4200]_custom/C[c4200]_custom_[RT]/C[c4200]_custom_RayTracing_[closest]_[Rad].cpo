#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _71
{
    vec3 _m0;
};

struct _75
{
    vec2 _m0;
};

struct _78
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _71 payload;
hitAttributeEXT _75 hit;
layout(location = 1) rayPayloadEXT _78 _80;
layout(location = 2) rayPayloadEXT _78 _81;

vec3 _2486;

void main()
{
    float _95 = float(gl_LaunchSizeEXT.y);
    float _123 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _124 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _125 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _132 = sqrt(((_124 * _124) + (_123 * _123)) + (_125 * _125)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _95)))));
    uvec4 _143 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _144 = _143.y;
    uint _184;
    uint _186;
    uint _187;
    if (_143.x == 0u)
    {
        uint _152 = (_144 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _161 = uvec3(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_152 + 2u)).x);
        _184 = _161.x;
        _186 = _161.y;
        _187 = _161.z;
    }
    else
    {
        uint _165 = uint(gl_PrimitiveID) * 6u;
        uint _167 = _165 & 4294967292u;
        uint _170 = (_144 + _167) >> 2u;
        uvec2 _177 = uvec2(texelFetch(l_geomIndexBuffer, int(_170)).x, texelFetch(l_geomIndexBuffer, int(_170 + 1u)).x);
        uint _178 = _177.x;
        uint _179 = _177.y;
        uint _181 = _178 >> 16u;
        uint _182 = _179 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_167 == _165)
        {
            frontier_phi_3_2_ladder = _181;
            frontier_phi_3_2_ladder_1 = _178 & 65535u;
            frontier_phi_3_2_ladder_2 = _182;
        }
        else
        {
            frontier_phi_3_2_ladder = _182;
            frontier_phi_3_2_ladder_1 = _181;
            frontier_phi_3_2_ladder_2 = _179 >> 16u;
        }
        _184 = frontier_phi_3_2_ladder_1;
        _186 = frontier_phi_3_2_ladder;
        _187 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _191 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _192 = _191.x;
    uint _193 = _191.z;
    bool _194 = _193 != 0u;
    bool _196 = _143.w == 0u;
    bool _197 = _194 || _196;
    uint _198 = _192 * _184;
    uint _199 = _198 + 12u;
    uint _223;
    uint _224;
    uint _225;
    uint _226;
    if (_197)
    {
        uvec4 _202 = texelFetch(l_geomAttrib_0, int(_199 >> 2u));
        uint _203 = _202.x;
        _223 = _203 & 255u;
        _224 = (_203 >> 8u) & 255u;
        _225 = (_203 >> 16u) & 255u;
        _226 = 16u;
    }
    else
    {
        uint _211 = _199 >> 2u;
        uvec2 _217 = uvec2(texelFetch(l_geomAttrib_0, int(_211)).x, texelFetch(l_geomAttrib_0, int(_211 + 1u)).x);
        uint _218 = _217.x;
        _223 = _218 & 65535u;
        _224 = _218 >> 16u;
        _225 = _217.y & 65535u;
        _226 = 20u;
    }
    uvec4 _234 = texelFetch(l_geomAttrib_0, int((_226 + _198) >> 2u));
    uint _235 = _234.x;
    bool _249 = _193 == 0u;
    uint _250;
    if (_249)
    {
        _250 = _226 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_196)
        {
            frontier_phi_9_10_ladder = _226 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _226 + 12u;
        }
        _250 = frontier_phi_9_10_ladder;
    }
    uint _254 = _194 ? (_250 + 4u) : _250;
    uvec4 _258 = texelFetch(l_geomAttrib_0, int(((_198 + 4u) + _254) >> 2u));
    uint _259 = _258.x;
    float _263 = float(int(uint(int(_259 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_259) >> int(16u))));
    uvec4 _268 = texelFetch(l_geomAttrib_0, int(((_198 + 12u) + _254) >> 2u));
    uint _269 = _268.x;
    uint _275 = _192 * _186;
    uint _276 = _275 + 12u;
    uint _297;
    uint _298;
    uint _299;
    uint _300;
    if (_197)
    {
        uvec4 _278 = texelFetch(l_geomAttrib_0, int(_276 >> 2u));
        uint _279 = _278.x;
        _297 = _279 & 255u;
        _298 = (_279 >> 8u) & 255u;
        _299 = (_279 >> 16u) & 255u;
        _300 = 16u;
    }
    else
    {
        uint _285 = _276 >> 2u;
        uvec2 _291 = uvec2(texelFetch(l_geomAttrib_0, int(_285)).x, texelFetch(l_geomAttrib_0, int(_285 + 1u)).x);
        uint _292 = _291.x;
        _297 = _292 & 65535u;
        _298 = _292 >> 16u;
        _299 = _291.y & 65535u;
        _300 = 20u;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int((_300 + _275) >> 2u));
    uint _307 = _306.x;
    uint _319;
    if (_249)
    {
        _319 = _300 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_196)
        {
            frontier_phi_16_17_ladder = _300 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _300 + 12u;
        }
        _319 = frontier_phi_16_17_ladder;
    }
    uint _323 = _194 ? (_319 + 4u) : _319;
    uvec4 _327 = texelFetch(l_geomAttrib_0, int(((_275 + 4u) + _323) >> 2u));
    uint _328 = _327.x;
    float _332 = float(int(uint(int(_328 << 16u) >> int(16u))));
    float _333 = float(int(uint(int(_328) >> int(16u))));
    uvec4 _337 = texelFetch(l_geomAttrib_0, int(((_275 + 12u) + _323) >> 2u));
    uint _338 = _337.x;
    uint _344 = _192 * _187;
    uint _345 = _344 + 12u;
    uint _366;
    uint _367;
    uint _368;
    uint _369;
    if (_197)
    {
        uvec4 _347 = texelFetch(l_geomAttrib_0, int(_345 >> 2u));
        uint _348 = _347.x;
        _366 = _348 & 255u;
        _367 = (_348 >> 8u) & 255u;
        _368 = (_348 >> 16u) & 255u;
        _369 = 16u;
    }
    else
    {
        uint _354 = _345 >> 2u;
        uvec2 _360 = uvec2(texelFetch(l_geomAttrib_0, int(_354)).x, texelFetch(l_geomAttrib_0, int(_354 + 1u)).x);
        uint _361 = _360.x;
        _366 = _361 & 65535u;
        _367 = _361 >> 16u;
        _368 = _360.y & 65535u;
        _369 = 20u;
    }
    uvec4 _375 = texelFetch(l_geomAttrib_0, int((_369 + _344) >> 2u));
    uint _376 = _375.x;
    uint _388;
    if (_249)
    {
        _388 = _369 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_196)
        {
            frontier_phi_23_24_ladder = _369 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _369 + 12u;
        }
        _388 = frontier_phi_23_24_ladder;
    }
    uint _392 = _194 ? (_388 + 4u) : _388;
    uvec4 _396 = texelFetch(l_geomAttrib_0, int(((_344 + 4u) + _392) >> 2u));
    uint _397 = _396.x;
    float _401 = float(int(uint(int(_397 << 16u) >> int(16u))));
    float _402 = float(int(uint(int(_397) >> int(16u))));
    uvec4 _406 = texelFetch(l_geomAttrib_0, int(((_344 + 12u) + _392) >> 2u));
    uint _407 = _406.x;
    bool _414 = _143.z == 0u;
    float _450;
    float _451;
    float _452;
    if (_414)
    {
        uint _417 = _184 * 3u;
        uvec3 _426 = uvec3(texelFetch(l_geomPositionBuffer, int(_417)).x, texelFetch(l_geomPositionBuffer, int(_417 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_417 + 2u)).x);
        _450 = uintBitsToFloat(_426.x);
        _451 = uintBitsToFloat(_426.y);
        _452 = uintBitsToFloat(_426.z);
    }
    else
    {
        uint _434 = _184 * 2u;
        uvec2 _440 = uvec2(texelFetch(l_geomPositionBuffer, int(_434)).x, texelFetch(l_geomPositionBuffer, int(_434 + 1u)).x);
        uint _441 = _440.x;
        _450 = unpackHalf2x16(_441).x;
        _451 = unpackHalf2x16(_441 >> 16u).x;
        _452 = unpackHalf2x16(_440.y).x;
    }
    float _488;
    float _489;
    float _490;
    if (_414)
    {
        uint _455 = _186 * 3u;
        uvec3 _464 = uvec3(texelFetch(l_geomPositionBuffer, int(_455)).x, texelFetch(l_geomPositionBuffer, int(_455 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_455 + 2u)).x);
        _488 = uintBitsToFloat(_464.x);
        _489 = uintBitsToFloat(_464.y);
        _490 = uintBitsToFloat(_464.z);
    }
    else
    {
        uint _472 = _186 * 2u;
        uvec2 _478 = uvec2(texelFetch(l_geomPositionBuffer, int(_472)).x, texelFetch(l_geomPositionBuffer, int(_472 + 1u)).x);
        uint _479 = _478.x;
        _488 = unpackHalf2x16(_479).x;
        _489 = unpackHalf2x16(_479 >> 16u).x;
        _490 = unpackHalf2x16(_478.y).x;
    }
    float _526;
    float _527;
    float _528;
    if (_414)
    {
        uint _493 = _187 * 3u;
        uvec3 _502 = uvec3(texelFetch(l_geomPositionBuffer, int(_493)).x, texelFetch(l_geomPositionBuffer, int(_493 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_493 + 2u)).x);
        _526 = uintBitsToFloat(_502.x);
        _527 = uintBitsToFloat(_502.y);
        _528 = uintBitsToFloat(_502.z);
    }
    else
    {
        uint _510 = _187 * 2u;
        uvec2 _516 = uvec2(texelFetch(l_geomPositionBuffer, int(_510)).x, texelFetch(l_geomPositionBuffer, int(_510 + 1u)).x);
        uint _517 = _516.x;
        _526 = unpackHalf2x16(_517).x;
        _527 = unpackHalf2x16(_517 >> 16u).x;
        _528 = unpackHalf2x16(_516.y).x;
    }
    float _531 = (1.0 - hit._m0.x) - hit._m0.y;
    float _578 = (_332 - _263) * 0.00048828125;
    float _580 = (_333 - _264) * 0.00048828125;
    float _583 = (_401 - _263) * 0.00048828125;
    float _584 = (_402 - _264) * 0.00048828125;
    float _606 = _488 - _450;
    float _607 = _489 - _451;
    float _608 = _490 - _452;
    float _611 = fma(_608, gl_ObjectToWorldEXT[2u].x, fma(_607, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _606));
    float _614 = fma(_608, gl_ObjectToWorldEXT[2u].y, fma(_607, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _606));
    float _617 = fma(_608, gl_ObjectToWorldEXT[2u].z, fma(_607, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _606));
    float _618 = _526 - _450;
    float _619 = _527 - _451;
    float _620 = _528 - _452;
    float _623 = fma(_620, gl_ObjectToWorldEXT[2u].x, fma(_619, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _618));
    float _626 = fma(_620, gl_ObjectToWorldEXT[2u].y, fma(_619, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _618));
    float _629 = fma(_620, gl_ObjectToWorldEXT[2u].z, fma(_619, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _618));
    float _630 = (((_332 * hit._m0.x) + (_263 * _531)) + (_401 * hit._m0.y)) * 0.00048828125;
    float _631 = (((_333 * hit._m0.x) + (_264 * _531)) + (_402 * hit._m0.y)) * 0.00048828125;
    float _635 = (((float(_223) * _531) + (-127.0)) + (float(_297) * hit._m0.x)) + (float(_366) * hit._m0.y);
    float _638 = (((float(_224) * _531) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_367) * hit._m0.y);
    float _641 = (((float(_225) * _531) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_368) * hit._m0.y);
    float _642 = _635 * 0.0078740157186985015869140625;
    float _644 = _638 * 0.0078740157186985015869140625;
    float _645 = _641 * 0.0078740157186985015869140625;
    float _658 = ((((float(_235 & 255u) * _531) + (-127.0)) + (float(_307 & 255u) * hit._m0.x)) + (float(_376 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _659 = ((((float((_235 >> 8u) & 255u) * _531) + (-127.0)) + (float((_307 >> 8u) & 255u) * hit._m0.x)) + (float((_376 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _660 = ((((float((_235 >> 16u) & 255u) * _531) + (-127.0)) + (float((_307 >> 16u) & 255u) * hit._m0.x)) + (float((_376 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _661 = ((((float(_235 >> 24u) * _531) + (-127.0)) + (float(_307 >> 24u) * hit._m0.x)) + (float(_376 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _671 = ((_659 * _645) - (_660 * _644)) * _661;
    float _672 = ((_660 * _642) - (_658 * _645)) * _661;
    float _673 = ((_658 * _644) - (_659 * _642)) * _661;
    float _677 = inversesqrt(dot(vec3(_671, _672, _673), vec3(_671, _672, _673)));
    uvec2 _702 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_23, int(0u)));
    bool _707 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _760;
    if (_707)
    {
        float _718 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _724 = (_629 * _614) - (_626 * _617);
        float _727 = (_623 * _617) - (_629 * _611);
        float _730 = (_626 * _611) - (_623 * _614);
        float _757 = ((log2((((float(_702.y) * 0.5) * float(_702.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_727 * _727) + (_730 * _730)) + (_724 * _724)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_718 * gl_WorldRayDirectionEXT.x, _718 * gl_WorldRayDirectionEXT.y, _718 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _760 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    }
    else
    {
        _760 = 0.0;
    }
    uvec2 _779 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_7, int(0u)));
    float _830;
    if (_707)
    {
        float _790 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _796 = (_629 * _614) - (_626 * _617);
        float _799 = (_623 * _617) - (_629 * _611);
        float _802 = (_626 * _611) - (_623 * _614);
        float _828 = ((log2((((float(_779.y) * 0.5) * float(_779.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_799 * _799) + (_802 * _802)) + (_796 * _796)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_790 * gl_WorldRayDirectionEXT.x, _790 * gl_WorldRayDirectionEXT.y, _790 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _830 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    }
    else
    {
        _830 = 0.0;
    }
    vec4 _833 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * _630) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _631) + cbTextureTilingScale._m0[19u].w), _830);
    float _842 = log2(0.0);
    float _844 = exp2(_842 * cbMtdParam._m0[18u].w);
    float _845 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _846 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
    uvec2 _861 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_0, int(0u)));
    float _912;
    if (_707)
    {
        float _872 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _878 = (_629 * _614) - (_626 * _617);
        float _881 = (_623 * _617) - (_629 * _611);
        float _884 = (_626 * _611) - (_623 * _614);
        float _910 = ((log2((((float(_861.y) * 0.5) * float(_861.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_881 * _881) + (_884 * _884)) + (_878 * _878)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_872 * gl_WorldRayDirectionEXT.x, _872 * gl_WorldRayDirectionEXT.y, _872 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _912 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    }
    else
    {
        _912 = 0.0;
    }
    vec4 _915 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _630) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _631) + cbTextureTilingScale._m0[0u].w), _912);
    float _919 = _915.z;
    float _924 = exp2(log2(_919 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _925 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _926 = isnan(1.0) ? _925 : (isnan(_925) ? 1.0 : min(_925, 1.0));
    uvec2 _938 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_3, int(0u)));
    float _989;
    if (_707)
    {
        float _949 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _955 = (_629 * _614) - (_626 * _617);
        float _958 = (_623 * _617) - (_629 * _611);
        float _961 = (_626 * _611) - (_623 * _614);
        float _987 = ((log2((((float(_938.y) * 0.5) * float(_938.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_958 * _958) + (_961 * _961)) + (_955 * _955)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_949 * gl_WorldRayDirectionEXT.x, _949 * gl_WorldRayDirectionEXT.y, _949 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _989 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    }
    else
    {
        _989 = 0.0;
    }
    vec4 _991 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _630) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _631) + cbTextureTilingScale._m0[14u].w), _989);
    uvec2 _1016 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_1, int(0u)));
    float _1067;
    if (_707)
    {
        float _1027 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1033 = (_629 * _614) - (_626 * _617);
        float _1036 = (_623 * _617) - (_629 * _611);
        float _1039 = (_626 * _611) - (_623 * _614);
        float _1065 = ((log2((((float(_1016.y) * 0.5) * float(_1016.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1036 * _1036) + (_1039 * _1039)) + (_1033 * _1033)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1027 * gl_WorldRayDirectionEXT.x, _1027 * gl_WorldRayDirectionEXT.y, _1027 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1067 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    }
    else
    {
        _1067 = 0.0;
    }
    vec4 _1069 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _630) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _631) + cbTextureTilingScale._m0[1u].w), _1067);
    float _1080 = cbMtdParam._m0[9u].x * _1069.x;
    float _1081 = cbMtdParam._m0[9u].y * _1069.y;
    float _1082 = cbMtdParam._m0[9u].z * _1069.z;
    float _1089 = (((cbMtdParam._m0[10u].x * _991.x) - _1080) * _926) + _1080;
    float _1090 = (((cbMtdParam._m0[10u].y * _991.y) - _1081) * _926) + _1081;
    float _1091 = (((cbMtdParam._m0[10u].z * _991.z) - _1082) * _926) + _1082;
    uvec2 _1104 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_30, int(0u)));
    float _1155;
    if (_707)
    {
        float _1115 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1121 = (_629 * _614) - (_626 * _617);
        float _1124 = (_623 * _617) - (_629 * _611);
        float _1127 = (_626 * _611) - (_623 * _614);
        float _1153 = ((log2((((float(_1104.y) * 0.5) * float(_1104.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1124 * _1124) + (_1127 * _1127)) + (_1121 * _1121)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1115 * gl_WorldRayDirectionEXT.x, _1115 * gl_WorldRayDirectionEXT.y, _1115 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1155 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    }
    else
    {
        _1155 = 0.0;
    }
    vec4 _1157 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * _630) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _631) + cbTextureTilingScale._m0[15u].w), _1155);
    float _1159 = _1157.x;
    float _1163 = exp2(log2(_1159) * cbMtdParam._m0[19u].z);
    uvec2 _1176 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_2, int(0u)));
    float _1227;
    if (_707)
    {
        float _1187 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1193 = (_629 * _614) - (_626 * _617);
        float _1196 = (_623 * _617) - (_629 * _611);
        float _1199 = (_626 * _611) - (_623 * _614);
        float _1225 = ((log2((((float(_1176.y) * 0.5) * float(_1176.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1196 * _1196) + (_1199 * _1199)) + (_1193 * _1193)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1187 * gl_WorldRayDirectionEXT.x, _1187 * gl_WorldRayDirectionEXT.y, _1187 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1227 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    }
    else
    {
        _1227 = 0.0;
    }
    vec4 _1229 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _630) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _631) + cbTextureTilingScale._m0[5u].w), _1227);
    float _1248 = (((cbMtdParam._m0[12u].x * _1229.x) - _1089) * _1163) + _1089;
    float _1249 = (((cbMtdParam._m0[12u].y * _1229.y) - _1090) * _1163) + _1090;
    float _1250 = (((cbMtdParam._m0[12u].z * _1229.z) - _1091) * _1163) + _1091;
    uvec2 _1262 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_4, int(0u)));
    float _1313;
    if (_707)
    {
        float _1273 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1279 = (_629 * _614) - (_626 * _617);
        float _1282 = (_623 * _617) - (_629 * _611);
        float _1285 = (_626 * _611) - (_623 * _614);
        float _1311 = ((log2((((float(_1262.y) * 0.5) * float(_1262.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1282 * _1282) + (_1285 * _1285)) + (_1279 * _1279)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1273 * gl_WorldRayDirectionEXT.x, _1273 * gl_WorldRayDirectionEXT.y, _1273 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1313 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
    }
    else
    {
        _1313 = 0.0;
    }
    vec4 _1315 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * _630) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _631) + cbTextureTilingScale._m0[16u].w), _1313);
    float _1340 = (_833.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _1315.x) - _1248) * _846) + _1248);
    float _1342 = (_833.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _1315.y) - _1249) * _846) + _1249);
    float _1344 = (_833.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _1315.z) - _1250) * _846) + _1250);
    float _1346 = ((((float(_338 & 255u) * hit._m0.x) + (float(_269 & 255u) * _531)) + (float(_407 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[22u].z;
    float _1355 = (_1346 - (((textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _630) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _631) + cbTextureTilingScale._m0[7u].w), _760).x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _1346))) * (cbMtdParam._m0[22u].y + 1.0);
    float _2648 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
    float _1356 = isnan(1.0) ? _2648 : (isnan(_2648) ? 1.0 : min(_2648, 1.0));
    float _1363 = ((cbMtdParam._m0[14u].x - _1340) * _1356) + _1340;
    float _1364 = ((cbMtdParam._m0[14u].y - _1342) * _1356) + _1342;
    float _1365 = ((cbMtdParam._m0[14u].z - _1344) * _1356) + _1344;
    float _1367 = _1159 - (_1346 * _1159);
    uvec2 _1383 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_5, int(0u)));
    float _1434;
    if (_707)
    {
        float _1394 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1400 = (_629 * _614) - (_626 * _617);
        float _1403 = (_623 * _617) - (_629 * _611);
        float _1406 = (_626 * _611) - (_623 * _614);
        float _1432 = ((log2((((float(_1383.y) * 0.5) * float(_1383.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1403 * _1403) + (_1406 * _1406)) + (_1400 * _1400)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1394 * gl_WorldRayDirectionEXT.x, _1394 * gl_WorldRayDirectionEXT.y, _1394 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1434 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
    }
    else
    {
        _1434 = 0.0;
    }
    vec4 _1436 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _630) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _631) + cbTextureTilingScale._m0[17u].w), _1434);
    uvec2 _1454 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_6, int(0u)));
    float _1505;
    if (_707)
    {
        float _1465 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1471 = (_629 * _614) - (_626 * _617);
        float _1474 = (_623 * _617) - (_629 * _611);
        float _1477 = (_626 * _611) - (_623 * _614);
        float _1503 = ((log2((((float(_1454.y) * 0.5) * float(_1454.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1474 * _1474) + (_1477 * _1477)) + (_1471 * _1471)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1465 * gl_WorldRayDirectionEXT.x, _1465 * gl_WorldRayDirectionEXT.y, _1465 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1505 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
    }
    else
    {
        _1505 = 0.0;
    }
    vec4 _1507 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _630) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _631) + cbTextureTilingScale._m0[18u].w), _1505);
    float _1509 = _1507.x;
    float _1510 = _1507.y;
    float _1513 = cbMtdParam._m0[18u].x + _1507.z;
    float _1516 = (((cbMtdParam._m0[18u].z + _1436.z) - _1513) * _926) + _1513;
    uvec2 _1528 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_8, int(0u)));
    float _1579;
    if (_707)
    {
        float _1539 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1545 = (_629 * _614) - (_626 * _617);
        float _1548 = (_623 * _617) - (_629 * _611);
        float _1551 = (_626 * _611) - (_623 * _614);
        float _1577 = ((log2((((float(_1528.y) * 0.5) * float(_1528.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1548 * _1548) + (_1551 * _1551)) + (_1545 * _1545)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1539 * gl_WorldRayDirectionEXT.x, _1539 * gl_WorldRayDirectionEXT.y, _1539 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1579 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
    }
    else
    {
        _1579 = 0.0;
    }
    vec4 _1581 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _630) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _631) + cbTextureTilingScale._m0[20u].w), _1579);
    float _1592 = (((_1581.z - _1516) + cbMtdParam._m0[24u].z) * _1163) + _1516;
    float _1597 = ((((_919 * 2.0) * _1592) - _1592) * cbMtdParam._m0[20u].z) + _1592;
    uvec2 _1610 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_9, int(0u)));
    float _1661;
    if (_707)
    {
        float _1621 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1627 = (_629 * _614) - (_626 * _617);
        float _1630 = (_623 * _617) - (_629 * _611);
        float _1633 = (_626 * _611) - (_623 * _614);
        float _1659 = ((log2((((float(_1610.y) * 0.5) * float(_1610.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1630 * _1630) + (_1633 * _1633)) + (_1627 * _1627)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1621 * gl_WorldRayDirectionEXT.x, _1621 * gl_WorldRayDirectionEXT.y, _1621 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1661 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
    }
    else
    {
        _1661 = 0.0;
    }
    vec4 _1663 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * _630) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _631) + cbTextureTilingScale._m0[21u].w), _1661);
    float _1672 = (((_1663.z - _1597) + cbMtdParam._m0[19u].y) * _846) + _1597;
    uvec2 _1687 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_22, int(0u)));
    float _1738;
    if (_707)
    {
        float _1698 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1704 = (_629 * _614) - (_626 * _617);
        float _1707 = (_623 * _617) - (_629 * _611);
        float _1710 = (_626 * _611) - (_623 * _614);
        float _1736 = ((log2((((float(_1687.y) * 0.5) * float(_1687.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1707 * _1707) + (_1710 * _1710)) + (_1704 * _1704)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1698 * gl_WorldRayDirectionEXT.x, _1698 * gl_WorldRayDirectionEXT.y, _1698 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1738 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
    }
    else
    {
        _1738 = 0.0;
    }
    vec4 _1740 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _630) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _631) + cbTextureTilingScale._m0[6u].w), _1738);
    float _1755 = ((cbMtdParam._m0[21u].w * _1346) * ((_1740.z * cbMtdParam._m0[21u].z) - _1672)) + _1672;
    float _1762 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    float _1784 = (cbTextureTilingScale._m0[12u].x * ((_1762 * cbMtdParam._m0[26u].y) + _630)) + cbTextureTilingScale._m0[12u].z;
    float _1785 = (cbTextureTilingScale._m0[12u].y * ((_1762 * cbMtdParam._m0[26u].z) + _631)) + cbTextureTilingScale._m0[12u].w;
    uvec2 _1787 = uvec2(textureSize(C_c4200_custom_snp_0_Texture2D_28, int(0u)));
    float _1838;
    if (_707)
    {
        float _1798 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1804 = (_629 * _614) - (_626 * _617);
        float _1807 = (_623 * _617) - (_629 * _611);
        float _1810 = (_626 * _611) - (_623 * _614);
        float _1836 = ((log2((((float(_1787.y) * 0.5) * float(_1787.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1807 * _1807) + (_1810 * _1810)) + (_1804 * _1804)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1798 * gl_WorldRayDirectionEXT.x, _1798 * gl_WorldRayDirectionEXT.y, _1798 * gl_WorldRayDirectionEXT.z), vec3(_642, _644, _645))));
        _1838 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
    }
    else
    {
        _1838 = 0.0;
    }
    vec4 _1840 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_1784, _1785), _1838);
    float _1844 = cbPerFrame._m0[22u].x * 2.0;
    float _1845 = _1844 * cbMtdParam._m0[25u].y;
    float _1851 = ((_1840.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].x;
    float _1853 = (-0.0) - (cbMtdParam._m0[25u].x * ((_1840.x * 0.5) + (-0.25)));
    float _1855 = fract(_1845);
    float _1857 = fract(_1845 + 0.5);
    float _1868 = abs((_1855 * 2.0) + (-1.0));
    vec4 _1886 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_1855 * _1853) + _630) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_1851 * _1855) + _631) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w), 0.0);
    float _1888 = _1886.x;
    float _1889 = _1886.y;
    float _1890 = _1886.z;
    vec4 _1891 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_1857 * _1853) + _630) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_1851 * _1857) + _631) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w), 0.0);
    float _1902 = ((_1891.x - _1888) * _1868) + _1888;
    float _1909 = exp2(log2(_1902 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _1910 = isnan(cbMtdParam._m0[24u].x) ? _1909 : (isnan(_1909) ? cbMtdParam._m0[24u].x : max(_1909, cbMtdParam._m0[24u].x));
    float _1911 = isnan(cbMtdParam._m0[24u].y) ? _1910 : (isnan(_1910) ? cbMtdParam._m0[24u].y : min(_1910, cbMtdParam._m0[24u].y));
    float _1934 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1935 = _1934 * gl_WorldRayDirectionEXT.x;
    float _1936 = _1934 * gl_WorldRayDirectionEXT.y;
    float _1937 = _1934 * gl_WorldRayDirectionEXT.z;
    float _1981;
    if (_707)
    {
        float _1947 = (_629 * _614) - (_626 * _617);
        float _1950 = (_623 * _617) - (_629 * _611);
        float _1953 = (_626 * _611) - (_623 * _614);
        float _1979 = ((log2((((float(_1787.y) * 0.5) * float(_1787.x)) * abs((_584 * _578) - (_583 * _580))) / (sqrt(((_1950 * _1950) + (_1953 * _1953)) + (_1947 * _1947)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_132) / abs(dot(vec3(_1935, _1936, _1937), vec3(_642, _644, _645))));
        _1981 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
    }
    else
    {
        _1981 = 0.0;
    }
    vec4 _1983 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_1784, _1785), _1981);
    float _1987 = _1844 * cbMtdParam._m0[25u].w;
    float _1992 = ((_1983.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _1994 = (-0.0) - (cbMtdParam._m0[25u].z * ((_1983.x * 0.5) + (-0.25)));
    float _1995 = fract(_1987);
    float _1997 = fract(_1987 + 0.5);
    float _2008 = abs((_1995 * 2.0) + (-1.0));
    vec4 _2025 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_1995 * _1994) + _630) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_1992 * _1995) + _631) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w), 0.0);
    float _2027 = _2025.x;
    float _2028 = _2025.y;
    float _2029 = _2025.z;
    vec4 _2030 = textureLod(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_1997 * _1994) + _630) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_1992 * _1997) + _631) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w), 0.0);
    float _2062 = ((_1436.x - _1509) * _926) + _1509;
    float _2063 = ((_1436.y - _1510) * _926) + _1510;
    float _2068 = ((_1581.x - _2062) * _1163) + _2062;
    float _2069 = ((_1581.y - _2063) * _1163) + _2063;
    float _2078 = ((((_1663.x - _2068) * _846) + _2068) * 2.0) + (-1.0);
    float _2079 = ((((_1663.y - _2069) * _846) + _2069) * 2.0) + (-1.0);
    float _2080 = dot(vec2(_2078, _2079), vec2(_2078, _2079));
    float _2704 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    float _2085 = sqrt(1.0 - (isnan(1.0) ? _2704 : (isnan(_2704) ? 1.0 : min(_2704, 1.0))));
    float _2095 = ((cbMtdParam._m0[20u].w * ((_915.x * 2.0) + (-1.0))) + _2078) + ((((_1740.x * 2.0) + (-1.0)) * _1346) * cbMtdParam._m0[21u].y);
    float _2096 = ((cbMtdParam._m0[20u].w * ((_915.y * 2.0) + (-1.0))) + _2079) + (((((((float((_338 >> 8u) & 255u) * hit._m0.x) + (float((_269 >> 8u) & 255u) * _531)) + (float((_407 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[22u].z) * ((_1740.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _2099 = fma(_2085, _642, fma(_2096, _658, (_677 * _671) * _2095));
    float _2102 = fma(_2085, _644, fma(_2096, _659, (_677 * _672) * _2095));
    float _2105 = fma(_2085, _645, fma(_2096, _660, (_677 * _673) * _2095));
    float _2109 = inversesqrt(dot(vec3(_2099, _2102, _2105), vec3(_2099, _2102, _2105)));
    float _2110 = _2109 * _2099;
    float _2111 = _2109 * _2102;
    float _2112 = _2109 * _2105;
    float _2124 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2125 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2126 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2127 = (-0.0) - _1935;
    float _2128 = (-0.0) - _1936;
    float _2129 = (-0.0) - _1937;
    float _2135 = float(gl_LaunchIDEXT.x);
    float _2136 = float(gl_LaunchIDEXT.y);
    float _2139 = float(gl_LaunchSizeEXT.x);
    float _2153 = fract(fract(sin(dot(vec2(_2135 / _2139, _2136 / _95), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2166 = fract(fract(sin(dot(vec2((_2135 + 128.0) / _2139, (_2136 + 128.0) / _95), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2167 = 1.0 - _1367;
    float _2168 = _1363 * _2167;
    float _2169 = _1364 * _2167;
    float _2170 = _1365 * _2167;
    float _2175 = (_1363 + (-0.039999999105930328369140625)) * _1367;
    float _2176 = (_1364 + (-0.039999999105930328369140625)) * _1367;
    float _2177 = (_1365 + (-0.039999999105930328369140625)) * _1367;
    float _2178 = _2175 + 0.039999999105930328369140625;
    float _2180 = _2176 + 0.039999999105930328369140625;
    float _2181 = _2177 + 0.039999999105930328369140625;
    _81._m0 = 1u;
    uvec4 _2191 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2192 = _2191.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2192, _2191.w, _2192, vec3(_2124, _2125, _2126), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2305;
    float _2306;
    float _2307;
    float _2308;
    float _2309;
    float _2310;
    if (_81._m0 == 0u)
    {
        float _2211 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2110, _2111, _2112));
        float _2715 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
        float _2214 = isnan(1.0) ? _2715 : (isnan(_2715) ? 1.0 : min(_2715, 1.0));
        float _2233 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1755) * 0.949999988079071044921875);
        float _2234 = _2233 * _2233;
        float _2235 = g_sceneCB._m0[4u].x - _1935;
        float _2236 = g_sceneCB._m0[4u].y - _1936;
        float _2237 = g_sceneCB._m0[4u].z - _1937;
        float _2241 = inversesqrt(dot(vec3(_2235, _2236, _2237), vec3(_2235, _2236, _2237)));
        float _2242 = _2241 * _2235;
        float _2243 = _2241 * _2236;
        float _2244 = _2241 * _2237;
        float _2245 = dot(vec3(_2110, _2111, _2112), vec3(g_sceneCB._m0[4u].xyz));
        float _2726 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
        float _2248 = isnan(1.0) ? _2726 : (isnan(_2726) ? 1.0 : min(_2726, 1.0));
        float _2249 = dot(vec3(_2110, _2111, _2112), vec3(_2127, _2128, _2129));
        float _2737 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
        float _2252 = isnan(1.0) ? _2737 : (isnan(_2737) ? 1.0 : min(_2737, 1.0));
        float _2253 = dot(vec3(_2110, _2111, _2112), vec3(_2242, _2243, _2244));
        float _2748 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
        float _2256 = isnan(1.0) ? _2748 : (isnan(_2748) ? 1.0 : min(_2748, 1.0));
        float _2257 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2242, _2243, _2244));
        float _2759 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
        float _2261 = _2234 * _2234;
        float _2265 = ((_2256 * _2256) * (_2261 + (-1.0))) + 1.0;
        float _2274 = exp2(log2(1.0 - (isnan(1.0) ? _2759 : (isnan(_2759) ? 1.0 : min(_2759, 1.0)))) * 5.0);
        float _2285 = 1.0 - _2234;
        float _2296 = (0.5 / (((_2252 * ((_2248 * _2285) + _2234)) + 9.9999999392252902907785028219223e-09) + (((_2252 * _2285) + _2234) * _2248))) * _2248;
        float _2770 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
        float _2298 = (isnan(1.0) ? _2770 : (isnan(_2770) ? 1.0 : min(_2770, 1.0))) * (_2261 / ((_2265 * _2265) * 3.141590118408203125));
        _2305 = ((_2168 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2214;
        _2306 = ((_2169 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2214;
        _2307 = ((_2170 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2214;
        _2308 = (((_2274 * (0.959999978542327880859375 - _2175)) + _2178) * g_sceneCB._m0[5u].x) * _2298;
        _2309 = (((_2274 * (0.959999978542327880859375 - _2176)) + _2180) * g_sceneCB._m0[5u].y) * _2298;
        _2310 = (((_2274 * (0.959999978542327880859375 - _2177)) + _2181) * g_sceneCB._m0[5u].z) * _2298;
    }
    else
    {
        _2305 = 0.0;
        _2306 = 0.0;
        _2307 = 0.0;
        _2308 = 0.0;
        _2309 = 0.0;
        _2310 = 0.0;
    }
    bool _2312 = abs(_2111) < 0.89999997615814208984375;
    float _2314 = float(_2312);
    float _2315 = _2312 ? 0.0 : 1.0;
    float _2318 = (_2314 * _2112) - (_2315 * _2111);
    float _2319 = _2315 * _2110;
    float _2321 = (-0.0) - (_2110 * _2314);
    float _2325 = inversesqrt(dot(vec3(_2318, _2319, _2321), vec3(_2318, _2319, _2321)));
    float _2326 = _2318 * _2325;
    float _2327 = _2319 * _2325;
    float _2328 = _2325 * _2321;
    float _2331 = (_2327 * _2112) - (_2328 * _2111);
    float _2334 = (_2328 * _2110) - (_2326 * _2112);
    float _2337 = (_2326 * _2111) - (_2327 * _2110);
    float _2339;
    float _2347;
    float _2338 = 0.0;
    uint _2340 = 0u;
    float _2344;
    bool _2346;
    for (;;)
    {
        _2344 = (float(_2340) + _2153) * 0.03125;
        _2346 = _2340 == 0u;
        float frontier_phi_69_pred;
        if (_2346)
        {
            frontier_phi_69_pred = 0.0;
        }
        else
        {
            float _2491;
            float _2492;
            uint _2494;
            _2491 = 0.0;
            _2492 = 0.5;
            _2494 = _2340;
            float _2348;
            for (;;)
            {
                _2348 = ((_2494 & 1u) != 0u) ? (_2492 + _2491) : _2491;
                uint _2495 = _2494 >> 1u;
                if (_2495 == 0u)
                {
                    break;
                }
                else
                {
                    _2491 = _2348;
                    _2492 *= 0.5;
                    _2494 = _2495;
                }
            }
            frontier_phi_69_pred = _2348;
        }
        _2347 = frontier_phi_69_pred;
        float _2349 = _2347 + _2166;
        float _2353 = sqrt(_2344);
        float _2354 = ((_2349 > 1.0) ? (_2349 + (-1.0)) : _2349) * 6.283185482025146484375;
        float _2357 = cos(_2354) * _2353;
        float _2359 = sin(_2354) * _2353;
        float _2361 = sqrt(1.0 - _2344);
        float _2374 = ((_2361 * _2110) + (_2357 * _2331)) + (_2359 * _2326);
        float _2375 = ((_2361 * _2111) + (_2357 * _2334)) + (_2359 * _2327);
        float _2376 = ((_2361 * _2112) + (_2357 * _2337)) + (_2359 * _2328);
        _80._m0 = 1u;
        uvec4 _2380 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2381 = _2380.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2381, _2380.w, _2381, vec3(_2124, _2125, _2126), 9.9999997473787516355514526367188e-05, vec3(_2374, _2375, _2376), 10000.0, 1);
        float _2387 = dot(vec3(_2110, _2111, _2112), vec3(_2374, _2375, _2376));
        float _2781 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
        float _2390 = isnan(1.0) ? _2781 : (isnan(_2781) ? 1.0 : min(_2781, 1.0));
        _2339 = ((float(_80._m0 == 0u) * _2390) / (_2390 * 0.3183098733425140380859375)) + _2338;
        uint _2341 = _2340 + 1u;
        if (_2341 == 32u)
        {
            break;
        }
        else
        {
            _2338 = _2339;
            _2340 = _2341;
            continue;
        }
    }
    float _2398 = _2339 * 0.009947183541953563690185546875;
    float _2403 = dot(vec3(_1935, _1936, _1937), vec3(_2110, _2111, _2112)) * 2.0;
    vec4 _2417 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1935 - (_2403 * _2110), _1936 - (_2403 * _2111), _1937 - (_2403 * _2112)), 4.0 - (_1755 * 4.0));
    float _2422 = dot(vec3(_2127, _2128, _2129), vec3(_2110, _2111, _2112));
    float _2792 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2432 = exp2(log2(1.0 - (isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0)))) * 5.0);
    vec4 _2444 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2110, _2111, _2112), 0.0);
    float _2456 = ((_2305 + ((((((_2030.x - _2027) * _2008) + _2027) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _1902) * cbMtdParam._m0[16u].x)) * _1911)) + _2308) + (((_2444.x * _2168) + (((_2432 * (0.959999978542327880859375 - _2175)) + _2178) * _2417.x)) * _2398);
    float _2461 = ((_2306 + ((((((_2030.y - _2028) * _2008) + _2028) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_1891.y - _1889) * _1868) + _1889)) * cbMtdParam._m0[16u].y)) * _1911)) + _2309) + (((_2444.y * _2169) + (((_2432 * (0.959999978542327880859375 - _2176)) + _2180) * _2417.y)) * _2398);
    float _2466 = ((_2307 + ((((((_2030.z - _2029) * _2008) + _2029) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_1891.z - _1890) * _1868) + _1890)) * cbMtdParam._m0[16u].z)) * _1911)) + _2310) + (((_2444.z * _2170) + (((_2432 * (0.959999978542327880859375 - _2177)) + _2181) * _2417.z)) * _2398);
    float _2803 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2814 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
    float _2825 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
    bool _2474 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2485;
    _2485.x = _2474 ? ((_635 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2803 : (isnan(_2803) ? 1.0 : min(_2803, 1.0)));
    _2485.y = _2474 ? ((_638 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2814 : (isnan(_2814) ? 1.0 : min(_2814, 1.0)));
    _2485.z = _2474 ? ((_641 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0)));
    payload._m0 = _2485;
}


