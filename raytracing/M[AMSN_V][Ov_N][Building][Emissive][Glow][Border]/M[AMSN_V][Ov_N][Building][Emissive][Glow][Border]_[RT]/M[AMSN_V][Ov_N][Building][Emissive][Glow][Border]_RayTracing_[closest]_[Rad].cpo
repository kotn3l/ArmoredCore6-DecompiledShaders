#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _2031;

void main()
{
    float _76 = float(gl_LaunchSizeEXT.y);
    float _106 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _115 = sqrt(((_107 * _107) + (_106 * _106)) + (_108 * _108)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _76)))));
    uvec4 _126 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _127 = _126.y;
    uint _167;
    uint _169;
    uint _170;
    if (_126.x == 0u)
    {
        uint _135 = (_127 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_127 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _161 & 65535u;
            frontier_phi_3_2_ladder_2 = _165;
        }
        else
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _162 >> 16u;
        }
        _167 = frontier_phi_3_2_ladder_1;
        _169 = frontier_phi_3_2_ladder;
        _170 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    bool _179 = _126.w == 0u;
    bool _180 = _177 || _179;
    uint _181 = _175 * _167;
    uint _182 = _181 + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 16u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 20u;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((_209 + _181) >> 2u));
    uint _218 = _217.x;
    uint _230 = _181 + 4u;
    uvec4 _234 = texelFetch(l_geomAttrib_0, int((_230 + _209) >> 2u));
    uint _235 = _234.x;
    uint _244 = _209 | 8u;
    bool _245 = _176 == 0u;
    uint _246;
    if (_245)
    {
        _246 = _244;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_179)
        {
            frontier_phi_9_10_ladder = _244 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _244 + 8u;
        }
        _246 = frontier_phi_9_10_ladder;
    }
    uint _250 = _177 ? (_246 + 4u) : _246;
    uint _252 = (_230 + _250) >> 2u;
    uvec2 _258 = uvec2(texelFetch(l_geomAttrib_0, int(_252)).x, texelFetch(l_geomAttrib_0, int(_252 + 1u)).x);
    uint _259 = _258.x;
    uint _260 = _258.y;
    float _264 = float(int(uint(int(_259 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_259) >> int(16u))));
    float _269 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _270 = float(int(uint(int(_260) >> int(16u))));
    uvec4 _274 = texelFetch(l_geomAttrib_0, int(((_181 + 12u) + _250) >> 2u));
    uint _275 = _274.x;
    uint _281 = _175 * _169;
    uint _282 = _281 + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_180)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 16u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 20u;
    }
    uvec4 _312 = texelFetch(l_geomAttrib_0, int((_306 + _281) >> 2u));
    uint _313 = _312.x;
    uint _324 = _281 + 4u;
    uvec4 _327 = texelFetch(l_geomAttrib_0, int((_324 + _306) >> 2u));
    uint _328 = _327.x;
    uint _337 = _306 | 8u;
    uint _338;
    if (_245)
    {
        _338 = _337;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_179)
        {
            frontier_phi_16_17_ladder = _337 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _337 + 8u;
        }
        _338 = frontier_phi_16_17_ladder;
    }
    uint _342 = _177 ? (_338 + 4u) : _338;
    uint _344 = (_324 + _342) >> 2u;
    uvec2 _350 = uvec2(texelFetch(l_geomAttrib_0, int(_344)).x, texelFetch(l_geomAttrib_0, int(_344 + 1u)).x);
    uint _351 = _350.x;
    uint _352 = _350.y;
    float _356 = float(int(uint(int(_351 << 16u) >> int(16u))));
    float _357 = float(int(uint(int(_351) >> int(16u))));
    float _361 = float(int(uint(int(_352 << 16u) >> int(16u))));
    float _362 = float(int(uint(int(_352) >> int(16u))));
    uvec4 _366 = texelFetch(l_geomAttrib_0, int(((_281 + 12u) + _342) >> 2u));
    uint _367 = _366.x;
    uint _373 = _175 * _170;
    uint _374 = _373 + 12u;
    uint _395;
    uint _396;
    uint _397;
    uint _398;
    if (_180)
    {
        uvec4 _376 = texelFetch(l_geomAttrib_0, int(_374 >> 2u));
        uint _377 = _376.x;
        _395 = _377 & 255u;
        _396 = (_377 >> 8u) & 255u;
        _397 = (_377 >> 16u) & 255u;
        _398 = 16u;
    }
    else
    {
        uint _383 = _374 >> 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomAttrib_0, int(_383)).x, texelFetch(l_geomAttrib_0, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _395 = _390 & 65535u;
        _396 = _390 >> 16u;
        _397 = _389.y & 65535u;
        _398 = 20u;
    }
    uvec4 _404 = texelFetch(l_geomAttrib_0, int((_398 + _373) >> 2u));
    uint _405 = _404.x;
    uint _416 = _373 + 4u;
    uvec4 _419 = texelFetch(l_geomAttrib_0, int((_416 + _398) >> 2u));
    uint _420 = _419.x;
    uint _429 = _398 | 8u;
    uint _430;
    if (_245)
    {
        _430 = _429;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_179)
        {
            frontier_phi_23_24_ladder = _429 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _429 + 8u;
        }
        _430 = frontier_phi_23_24_ladder;
    }
    uint _434 = _177 ? (_430 + 4u) : _430;
    uint _436 = (_416 + _434) >> 2u;
    uvec2 _442 = uvec2(texelFetch(l_geomAttrib_0, int(_436)).x, texelFetch(l_geomAttrib_0, int(_436 + 1u)).x);
    uint _443 = _442.x;
    uint _444 = _442.y;
    float _448 = float(int(uint(int(_443 << 16u) >> int(16u))));
    float _449 = float(int(uint(int(_443) >> int(16u))));
    float _453 = float(int(uint(int(_444 << 16u) >> int(16u))));
    float _454 = float(int(uint(int(_444) >> int(16u))));
    uvec4 _458 = texelFetch(l_geomAttrib_0, int(((_373 + 12u) + _434) >> 2u));
    uint _459 = _458.x;
    bool _466 = _126.z == 0u;
    float _502;
    float _503;
    float _504;
    if (_466)
    {
        uint _469 = _167 * 3u;
        uvec3 _478 = uvec3(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_469 + 2u)).x);
        _502 = uintBitsToFloat(_478.x);
        _503 = uintBitsToFloat(_478.y);
        _504 = uintBitsToFloat(_478.z);
    }
    else
    {
        uint _486 = _167 * 2u;
        uvec2 _492 = uvec2(texelFetch(l_geomPositionBuffer, int(_486)).x, texelFetch(l_geomPositionBuffer, int(_486 + 1u)).x);
        uint _493 = _492.x;
        _502 = unpackHalf2x16(_493).x;
        _503 = unpackHalf2x16(_493 >> 16u).x;
        _504 = unpackHalf2x16(_492.y).x;
    }
    float _540;
    float _541;
    float _542;
    if (_466)
    {
        uint _507 = _169 * 3u;
        uvec3 _516 = uvec3(texelFetch(l_geomPositionBuffer, int(_507)).x, texelFetch(l_geomPositionBuffer, int(_507 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_507 + 2u)).x);
        _540 = uintBitsToFloat(_516.x);
        _541 = uintBitsToFloat(_516.y);
        _542 = uintBitsToFloat(_516.z);
    }
    else
    {
        uint _524 = _169 * 2u;
        uvec2 _530 = uvec2(texelFetch(l_geomPositionBuffer, int(_524)).x, texelFetch(l_geomPositionBuffer, int(_524 + 1u)).x);
        uint _531 = _530.x;
        _540 = unpackHalf2x16(_531).x;
        _541 = unpackHalf2x16(_531 >> 16u).x;
        _542 = unpackHalf2x16(_530.y).x;
    }
    float _578;
    float _579;
    float _580;
    if (_466)
    {
        uint _545 = _170 * 3u;
        uvec3 _554 = uvec3(texelFetch(l_geomPositionBuffer, int(_545)).x, texelFetch(l_geomPositionBuffer, int(_545 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_545 + 2u)).x);
        _578 = uintBitsToFloat(_554.x);
        _579 = uintBitsToFloat(_554.y);
        _580 = uintBitsToFloat(_554.z);
    }
    else
    {
        uint _562 = _170 * 2u;
        uvec2 _568 = uvec2(texelFetch(l_geomPositionBuffer, int(_562)).x, texelFetch(l_geomPositionBuffer, int(_562 + 1u)).x);
        uint _569 = _568.x;
        _578 = unpackHalf2x16(_569).x;
        _579 = unpackHalf2x16(_569 >> 16u).x;
        _580 = unpackHalf2x16(_568.y).x;
    }
    float _583 = (1.0 - hit._m0.x) - hit._m0.y;
    float _642 = (((float(_367 & 255u) * hit._m0.x) + (float(_275 & 255u) * _583)) + (float(_459 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _646 = (((float((_367 >> 8u) & 255u) * hit._m0.x) + (float((_275 >> 8u) & 255u) * _583)) + (float((_459 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _649 = (_356 - _264) * 0.00048828125;
    float _651 = (_357 - _265) * 0.00048828125;
    float _654 = (_448 - _264) * 0.00048828125;
    float _655 = (_449 - _265) * 0.00048828125;
    float _658 = (_361 - _269) * 0.00048828125;
    float _659 = (_362 - _270) * 0.00048828125;
    float _662 = (_453 - _269) * 0.00048828125;
    float _663 = (_454 - _270) * 0.00048828125;
    float _685 = _540 - _502;
    float _686 = _541 - _503;
    float _687 = _542 - _504;
    float _690 = fma(_687, gl_ObjectToWorldEXT[2u].x, fma(_686, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _685));
    float _693 = fma(_687, gl_ObjectToWorldEXT[2u].y, fma(_686, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _685));
    float _696 = fma(_687, gl_ObjectToWorldEXT[2u].z, fma(_686, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _685));
    float _697 = _578 - _502;
    float _698 = _579 - _503;
    float _699 = _580 - _504;
    float _702 = fma(_699, gl_ObjectToWorldEXT[2u].x, fma(_698, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _697));
    float _705 = fma(_699, gl_ObjectToWorldEXT[2u].y, fma(_698, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _697));
    float _708 = fma(_699, gl_ObjectToWorldEXT[2u].z, fma(_698, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _697));
    float _709 = (((_356 * hit._m0.x) + (_264 * _583)) + (_448 * hit._m0.y)) * 0.00048828125;
    float _710 = (((_357 * hit._m0.x) + (_265 * _583)) + (_449 * hit._m0.y)) * 0.00048828125;
    float _711 = (((_361 * hit._m0.x) + (_269 * _583)) + (_453 * hit._m0.y)) * 0.00048828125;
    float _712 = (((_362 * hit._m0.x) + (_270 * _583)) + (_454 * hit._m0.y)) * 0.00048828125;
    float _716 = (((float(_206) * _583) + (-127.0)) + (float(_303) * hit._m0.x)) + (float(_395) * hit._m0.y);
    float _719 = (((float(_207) * _583) + (-127.0)) + (float(_304) * hit._m0.x)) + (float(_396) * hit._m0.y);
    float _722 = (((float(_208) * _583) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_397) * hit._m0.y);
    float _723 = _716 * 0.0078740157186985015869140625;
    float _725 = _719 * 0.0078740157186985015869140625;
    float _726 = _722 * 0.0078740157186985015869140625;
    float _739 = ((((float(_218 & 255u) * _583) + (-127.0)) + (float(_313 & 255u) * hit._m0.x)) + (float(_405 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _740 = ((((float((_218 >> 8u) & 255u) * _583) + (-127.0)) + (float((_313 >> 8u) & 255u) * hit._m0.x)) + (float((_405 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _741 = ((((float((_218 >> 16u) & 255u) * _583) + (-127.0)) + (float((_313 >> 16u) & 255u) * hit._m0.x)) + (float((_405 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _742 = ((((float(_218 >> 24u) * _583) + (-127.0)) + (float(_313 >> 24u) * hit._m0.x)) + (float(_405 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _752 = ((((float(_235 & 255u) * _583) + (-127.0)) + (float(_328 & 255u) * hit._m0.x)) + (float(_420 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _753 = ((((float((_235 >> 8u) & 255u) * _583) + (-127.0)) + (float((_328 >> 8u) & 255u) * hit._m0.x)) + (float((_420 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _754 = ((((float((_235 >> 16u) & 255u) * _583) + (-127.0)) + (float((_328 >> 16u) & 255u) * hit._m0.x)) + (float((_420 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _764 = ((_740 * _726) - (_741 * _725)) * _742;
    float _765 = ((_741 * _723) - (_739 * _726)) * _742;
    float _766 = ((_739 * _725) - (_740 * _723)) * _742;
    float _770 = inversesqrt(dot(vec3(_764, _765, _766), vec3(_764, _765, _766)));
    float _771 = _770 * _764;
    float _772 = _770 * _765;
    float _773 = _770 * _766;
    uvec2 _810 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_4, int(0u)));
    bool _815 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _868;
    if (_815)
    {
        float _826 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _832 = (_708 * _693) - (_705 * _696);
        float _835 = (_702 * _696) - (_708 * _690);
        float _838 = (_705 * _690) - (_702 * _693);
        float _865 = ((log2((((float(_810.y) * 0.5) * float(_810.x)) * abs((_655 * _649) - (_654 * _651))) / (sqrt(((_835 * _835) + (_838 * _838)) + (_832 * _832)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_826 * gl_WorldRayDirectionEXT.x, _826 * gl_WorldRayDirectionEXT.y, _826 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _868 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    }
    else
    {
        _868 = 0.0;
    }
    vec4 _872 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _709) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _710) + cbTextureTilingScale._m0[5u].w), _868);
    float _882 = 1.0 - ((1.0 - _872.x) * 1.39999997615814208984375);
    float _2124 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _883 = isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0));
    float _890 = (_883 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x;
    float _891 = (_883 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[15u].y)) + cbMtdParam._m0[15u].y;
    float _892 = (_883 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z;
    float _894 = 1.0 - ((1.0 - _872.y) * 1.39999997615814208984375);
    float _2135 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _895 = isnan(1.0) ? _2135 : (isnan(_2135) ? 1.0 : min(_2135, 1.0));
    float _902 = (_895 * (cbMtdParam._m0[13u].x - _890)) + _890;
    float _903 = (_895 * (cbMtdParam._m0[13u].y - _891)) + _891;
    float _904 = (_895 * (cbMtdParam._m0[13u].z - _892)) + _892;
    float _906 = 1.0 - ((1.0 - _872.z) * 1.39999997615814208984375);
    float _2146 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _907 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
    uvec2 _932 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_3, int(0u)));
    float _983;
    if (_815)
    {
        float _943 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _949 = (_708 * _693) - (_705 * _696);
        float _952 = (_702 * _696) - (_708 * _690);
        float _955 = (_705 * _690) - (_702 * _693);
        float _981 = ((log2((((float(_932.y) * 0.5) * float(_932.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_952 * _952) + (_955 * _955)) + (_949 * _949)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_943 * gl_WorldRayDirectionEXT.x, _943 * gl_WorldRayDirectionEXT.y, _943 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _983 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    }
    else
    {
        _983 = 0.0;
    }
    float _988 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _711) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _712) + cbTextureTilingScale._m0[4u].w), _983).x * cbMtdParam._m0[19u].z;
    float _1003 = ((cbMtdParam._m0[18u].y * (-1.39999997615814208984375)) * ((_646 - _988) + (cbMtdParam._m0[17u].w * _646))) + 1.0;
    float _2162 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1005 = 1.0 - (isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0)));
    float _1006 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1007 = isnan(1.0) ? _1006 : (isnan(_1006) ? 1.0 : min(_1006, 1.0));
    float _1015 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * ((_642 - _988) + (cbMtdParam._m0[17u].z * _642))) + 1.0;
    float _2183 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1017 = 1.0 - (isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0)));
    float _1018 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _1019 = isnan(1.0) ? _1018 : (isnan(_1018) ? 1.0 : min(_1018, 1.0));
    uvec2 _1036 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_13, int(0u)));
    float _1087;
    if (_815)
    {
        float _1047 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1053 = (_708 * _693) - (_705 * _696);
        float _1056 = (_702 * _696) - (_708 * _690);
        float _1059 = (_705 * _690) - (_702 * _693);
        float _1085 = ((log2((((float(_1036.y) * 0.5) * float(_1036.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_1056 * _1056) + (_1059 * _1059)) + (_1053 * _1053)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1047 * gl_WorldRayDirectionEXT.x, _1047 * gl_WorldRayDirectionEXT.y, _1047 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _1087 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    }
    else
    {
        _1087 = 0.0;
    }
    vec4 _1090 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _711) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _712) + cbTextureTilingScale._m0[2u].w), _1087);
    float _1092 = _1090.x;
    float _1093 = _1090.y;
    float _1094 = _1090.z;
    float _1095 = cbMtdParam._m0[12u].x * _1019;
    float _1097 = cbMtdParam._m0[12u].y * _1019;
    float _1099 = cbMtdParam._m0[12u].z * _1019;
    float _1119 = _1017 + _1005;
    float _1120 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _1121 = isnan(1.0) ? _1120 : (isnan(_1120) ? 1.0 : min(_1120, 1.0));
    uvec2 _1139 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_1, int(0u)));
    float _1190;
    if (_815)
    {
        float _1150 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1156 = (_708 * _693) - (_705 * _696);
        float _1159 = (_702 * _696) - (_708 * _690);
        float _1162 = (_705 * _690) - (_702 * _693);
        float _1188 = ((log2((((float(_1139.y) * 0.5) * float(_1139.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_1159 * _1159) + (_1162 * _1162)) + (_1156 * _1156)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1150 * gl_WorldRayDirectionEXT.x, _1150 * gl_WorldRayDirectionEXT.y, _1150 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _1190 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
    }
    else
    {
        _1190 = 0.0;
    }
    vec4 _1192 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _711) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _712) + cbTextureTilingScale._m0[0u].w), _1190);
    float _1197 = _1192.x * cbMtdParam._m0[10u].x;
    float _1198 = _1192.y * cbMtdParam._m0[10u].y;
    float _1199 = _1192.z * cbMtdParam._m0[10u].z;
    float _1219 = ((_1197 - (_1121 * _1197)) + ((((((_1092 * (cbMtdParam._m0[11u].x - _1095)) * _1007) + (_1095 * _1092)) * 4.55000019073486328125) * _1121) * _1197)) * ((_907 * (cbMtdParam._m0[14u].x - _902)) + _902);
    float _1220 = ((((((((_1093 * (cbMtdParam._m0[11u].y - _1097)) * _1007) + (_1097 * _1093)) * 4.55000019073486328125) * _1121) * _1198) + _1198) - (_1121 * _1198)) * ((_907 * (cbMtdParam._m0[14u].y - _903)) + _903);
    float _1221 = ((((((((_1094 * (cbMtdParam._m0[11u].z - _1099)) * _1007) + (_1099 * _1094)) * 4.55000019073486328125) * _1121) * _1199) + _1199) - (_1121 * _1199)) * ((_907 * (cbMtdParam._m0[14u].z - _904)) + _904);
    uvec2 _1236 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_9, int(0u)));
    float _1287;
    if (_815)
    {
        float _1247 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1253 = (_708 * _693) - (_705 * _696);
        float _1256 = (_702 * _696) - (_708 * _690);
        float _1259 = (_705 * _690) - (_702 * _693);
        float _1285 = ((log2((((float(_1236.y) * 0.5) * float(_1236.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_1256 * _1256) + (_1259 * _1259)) + (_1253 * _1253)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1247 * gl_WorldRayDirectionEXT.x, _1247 * gl_WorldRayDirectionEXT.y, _1247 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _1287 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
    }
    else
    {
        _1287 = 0.0;
    }
    vec4 _1290 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _711) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _712) + cbTextureTilingScale._m0[8u].w), _1287);
    float _1294 = _1290.z;
    float _1297 = (_1290.x * 2.0) + (-1.0);
    float _1299 = (_1290.y * 2.0) + (-1.0);
    float _1300 = dot(vec2(_1297, _1299), vec2(_1297, _1299));
    float _2229 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
    float _1305 = sqrt(1.0 - (isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0))));
    float _1307 = fma(_1305, _723, fma(_1299, _752, 0.0));
    float _1309 = fma(_1305, _725, fma(_1299, _753, 0.0));
    float _1311 = fma(_1305, _726, fma(_1299, _754, 0.0));
    float _1315 = inversesqrt(dot(vec3(_1307, _1309, _1311), vec3(_1307, _1309, _1311)));
    float _1316 = _1315 * _1307;
    float _1317 = _1315 * _1309;
    float _1318 = _1315 * _1311;
    uvec2 _1330 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_2, int(0u)));
    float _1381;
    if (_815)
    {
        float _1341 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1347 = (_708 * _693) - (_705 * _696);
        float _1350 = (_702 * _696) - (_708 * _690);
        float _1353 = (_705 * _690) - (_702 * _693);
        float _1379 = ((log2((((float(_1330.y) * 0.5) * float(_1330.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_1350 * _1350) + (_1353 * _1353)) + (_1347 * _1347)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1341 * gl_WorldRayDirectionEXT.x, _1341 * gl_WorldRayDirectionEXT.y, _1341 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _1381 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
    }
    else
    {
        _1381 = 0.0;
    }
    vec4 _1383 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _711) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _712) + cbTextureTilingScale._m0[3u].w), _1381);
    float _1389 = (_1383.x * 2.0) + (-1.0);
    float _1390 = (_1383.y * 2.0) + (-1.0);
    float _1391 = dot(vec2(_1389, _1390), vec2(_1389, _1390));
    float _2245 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
    float _1396 = sqrt(1.0 - (isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0))));
    float _1398 = fma(_1396, _723, fma(_1390, _752, 0.0));
    float _1400 = fma(_1396, _725, fma(_1390, _753, 0.0));
    float _1402 = fma(_1396, _726, fma(_1390, _754, 0.0));
    float _1406 = inversesqrt(dot(vec3(_1398, _1400, _1402), vec3(_1398, _1400, _1402)));
    float _1407 = _1406 * _1398;
    float _1408 = _1406 * _1400;
    float _1409 = _1406 * _1402;
    float _1412 = fma(_1409, _773, fma(_1408, _772, _1407 * _771));
    float _1415 = fma(_1409, _741, fma(_1408, _740, _1407 * _739));
    float _1418 = fma(_1409, _726, fma(_1408, _725, _1407 * _723));
    float _1422 = inversesqrt(dot(vec3(_1412, _1415, _1418), vec3(_1412, _1415, _1418)));
    float _1426 = fma(_1318, _773, fma(_1317, _772, _1316 * _771));
    float _1429 = fma(_1318, _741, fma(_1317, _740, _1316 * _739));
    float _1432 = fma(_1318, _726, fma(_1317, _725, _1316 * _723));
    float _1436 = inversesqrt(dot(vec3(_1426, _1429, _1432), vec3(_1426, _1429, _1432)));
    uvec2 _1451 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_5, int(0u)));
    float _1502;
    if (_815)
    {
        float _1462 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1468 = (_708 * _693) - (_705 * _696);
        float _1471 = (_702 * _696) - (_708 * _690);
        float _1474 = (_705 * _690) - (_702 * _693);
        float _1500 = ((log2((((float(_1451.y) * 0.5) * float(_1451.x)) * abs((_655 * _649) - (_654 * _651))) / (sqrt(((_1471 * _1471) + (_1474 * _1474)) + (_1468 * _1468)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1462 * gl_WorldRayDirectionEXT.x, _1462 * gl_WorldRayDirectionEXT.y, _1462 * gl_WorldRayDirectionEXT.z), vec3(_723, _725, _726))));
        _1502 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
    }
    else
    {
        _1502 = 0.0;
    }
    vec4 _1504 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _709) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _710) + cbTextureTilingScale._m0[6u].w), _1502);
    float _1510 = (_1504.x * 2.0) + (-1.0);
    float _1511 = (_1504.y * 2.0) + (-1.0);
    float _1512 = dot(vec2(_1510, _1511), vec2(_1510, _1511));
    float _2261 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
    float _1517 = sqrt(1.0 - (isnan(1.0) ? _2261 : (isnan(_2261) ? 1.0 : min(_2261, 1.0))));
    uvec2 _1531 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_7, int(0u)));
    float _1535 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1536 = _1535 * gl_WorldRayDirectionEXT.x;
    float _1537 = _1535 * gl_WorldRayDirectionEXT.y;
    float _1538 = _1535 * gl_WorldRayDirectionEXT.z;
    float _1582;
    if (_815)
    {
        float _1548 = (_708 * _693) - (_705 * _696);
        float _1551 = (_702 * _696) - (_708 * _690);
        float _1554 = (_705 * _690) - (_702 * _693);
        float _1580 = ((log2((((float(_1531.y) * 0.5) * float(_1531.x)) * abs((_663 * _658) - (_662 * _659))) / (sqrt(((_1551 * _1551) + (_1554 * _1554)) + (_1548 * _1548)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1536, _1537, _1538), vec3(_723, _725, _726))));
        _1582 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
    }
    else
    {
        _1582 = 0.0;
    }
    vec4 _1584 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _711) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _712) + cbTextureTilingScale._m0[7u].w), _1582);
    float _1590 = (_1584.x * 2.0) + (-1.0);
    float _1591 = (_1584.y * 2.0) + (-1.0);
    float _1592 = dot(vec2(_1590, _1591), vec2(_1590, _1591));
    float _2277 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    float _1597 = sqrt(1.0 - (isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0))));
    float _1599 = fma(_1597, _723, fma(_1591, _752, 0.0));
    float _1601 = fma(_1597, _725, fma(_1591, _753, 0.0));
    float _1603 = fma(_1597, _726, fma(_1591, _754, 0.0));
    float _1607 = inversesqrt(dot(vec3(_1599, _1601, _1603), vec3(_1599, _1601, _1603)));
    float _1608 = _1607 * _1599;
    float _1609 = _1607 * _1601;
    float _1610 = _1607 * _1603;
    float _1613 = fma(_1610, _773, fma(_1609, _772, _1608 * _771));
    float _1616 = fma(_1610, _741, fma(_1609, _740, _1608 * _739));
    float _1619 = fma(_1610, _726, fma(_1609, _725, _1608 * _723));
    float _1623 = inversesqrt(dot(vec3(_1613, _1616, _1619), vec3(_1613, _1616, _1619)));
    float _1639 = ((((_1436 * _1426) * cbMtdParam._m0[19u].x) + (((_1412 * _1007) * _1422) * cbMtdParam._m0[18u].z)) + _1510) + (((_1613 * _1019) * _1623) * cbMtdParam._m0[18u].w);
    float _1642 = ((((_1436 * _1429) * cbMtdParam._m0[19u].x) + (((_1415 * _1007) * _1422) * cbMtdParam._m0[18u].z)) + _1511) + (((_1616 * _1019) * _1623) * cbMtdParam._m0[18u].w);
    float _1645 = fma(_1517, _723, fma(_1642, _739, _1639 * _771));
    float _1648 = fma(_1517, _725, fma(_1642, _740, _1639 * _772));
    float _1651 = fma(_1517, _726, fma(_1642, _741, _1639 * _773));
    float _1655 = inversesqrt(dot(vec3(_1645, _1648, _1651), vec3(_1645, _1648, _1651)));
    float _1656 = _1655 * _1645;
    float _1657 = _1655 * _1648;
    float _1658 = _1655 * _1651;
    float _1670 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1671 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1672 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1673 = (-0.0) - _1536;
    float _1675 = (-0.0) - _1537;
    float _1676 = (-0.0) - _1538;
    float _1682 = float(gl_LaunchIDEXT.x);
    float _1683 = float(gl_LaunchIDEXT.y);
    float _1686 = float(gl_LaunchSizeEXT.x);
    float _1700 = fract(fract(sin(dot(vec2(_1682 / _1686, _1683 / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1713 = fract(fract(sin(dot(vec2((_1682 + 128.0) / _1686, (_1683 + 128.0) / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1714 = 1.0 - cbMtdParam._m0[20u].x;
    float _1715 = _1714 * _1219;
    float _1716 = _1220 * _1714;
    float _1717 = _1221 * _1714;
    float _1722 = (_1219 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].x;
    float _1723 = (_1220 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].x;
    float _1724 = (_1221 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].x;
    float _1725 = _1722 + 0.039999999105930328369140625;
    float _1727 = _1723 + 0.039999999105930328369140625;
    float _1728 = _1724 + 0.039999999105930328369140625;
    _68._m0 = 1u;
    uvec4 _1738 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1739 = _1738.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1739, _1738.w, _1739, vec3(_1670, _1671, _1672), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1853;
    float _1854;
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    if (_68._m0 == 0u)
    {
        float _1759 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1656, _1657, _1658));
        float _2288 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
        float _1762 = isnan(1.0) ? _2288 : (isnan(_2288) ? 1.0 : min(_2288, 1.0));
        float _1781 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1294) * 0.949999988079071044921875);
        float _1782 = _1781 * _1781;
        float _1783 = g_sceneCB._m0[4u].x - _1536;
        float _1784 = g_sceneCB._m0[4u].y - _1537;
        float _1785 = g_sceneCB._m0[4u].z - _1538;
        float _1789 = inversesqrt(dot(vec3(_1783, _1784, _1785), vec3(_1783, _1784, _1785)));
        float _1790 = _1789 * _1783;
        float _1791 = _1789 * _1784;
        float _1792 = _1789 * _1785;
        float _1793 = dot(vec3(_1656, _1657, _1658), vec3(g_sceneCB._m0[4u].xyz));
        float _2299 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
        float _1796 = isnan(1.0) ? _2299 : (isnan(_2299) ? 1.0 : min(_2299, 1.0));
        float _1797 = dot(vec3(_1656, _1657, _1658), vec3(_1673, _1675, _1676));
        float _2310 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
        float _1800 = isnan(1.0) ? _2310 : (isnan(_2310) ? 1.0 : min(_2310, 1.0));
        float _1801 = dot(vec3(_1656, _1657, _1658), vec3(_1790, _1791, _1792));
        float _2321 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1804 = isnan(1.0) ? _2321 : (isnan(_2321) ? 1.0 : min(_2321, 1.0));
        float _1805 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1790, _1791, _1792));
        float _2332 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1809 = _1782 * _1782;
        float _1813 = ((_1804 * _1804) * (_1809 + (-1.0))) + 1.0;
        float _1822 = exp2(log2(1.0 - (isnan(1.0) ? _2332 : (isnan(_2332) ? 1.0 : min(_2332, 1.0)))) * 5.0);
        float _1833 = 1.0 - _1782;
        float _1844 = (0.5 / (((_1800 * ((_1796 * _1833) + _1782)) + 9.9999999392252902907785028219223e-09) + (((_1800 * _1833) + _1782) * _1796))) * _1796;
        float _2343 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
        float _1846 = (isnan(1.0) ? _2343 : (isnan(_2343) ? 1.0 : min(_2343, 1.0))) * (_1809 / ((_1813 * _1813) * 3.141590118408203125));
        _1853 = ((_1715 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1762;
        _1854 = ((_1716 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1762;
        _1855 = ((_1717 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1762;
        _1856 = (((_1822 * (0.959999978542327880859375 - _1722)) + _1725) * g_sceneCB._m0[5u].x) * _1846;
        _1857 = (((_1822 * (0.959999978542327880859375 - _1723)) + _1727) * g_sceneCB._m0[5u].y) * _1846;
        _1858 = (((_1822 * (0.959999978542327880859375 - _1724)) + _1728) * g_sceneCB._m0[5u].z) * _1846;
    }
    else
    {
        _1853 = 0.0;
        _1854 = 0.0;
        _1855 = 0.0;
        _1856 = 0.0;
        _1857 = 0.0;
        _1858 = 0.0;
    }
    bool _1860 = abs(_1657) < 0.89999997615814208984375;
    float _1862 = float(_1860);
    float _1863 = _1860 ? 0.0 : 1.0;
    float _1866 = (_1862 * _1658) - (_1863 * _1657);
    float _1867 = _1863 * _1656;
    float _1869 = (-0.0) - (_1656 * _1862);
    float _1873 = inversesqrt(dot(vec3(_1866, _1867, _1869), vec3(_1866, _1867, _1869)));
    float _1874 = _1866 * _1873;
    float _1875 = _1867 * _1873;
    float _1876 = _1873 * _1869;
    float _1879 = (_1875 * _1658) - (_1876 * _1657);
    float _1882 = (_1876 * _1656) - (_1874 * _1658);
    float _1885 = (_1874 * _1657) - (_1875 * _1656);
    float _1887;
    float _1895;
    float _1886 = 0.0;
    uint _1888 = 0u;
    float _1892;
    bool _1894;
    for (;;)
    {
        _1892 = (float(_1888) + _1700) * 0.03125;
        _1894 = _1888 == 0u;
        float frontier_phi_55_pred;
        if (_1894)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _2036;
            float _2037;
            uint _2039;
            _2036 = 0.0;
            _2037 = 0.5;
            _2039 = _1888;
            float _1896;
            for (;;)
            {
                _1896 = ((_2039 & 1u) != 0u) ? (_2037 + _2036) : _2036;
                uint _2040 = _2039 >> 1u;
                if (_2040 == 0u)
                {
                    break;
                }
                else
                {
                    _2036 = _1896;
                    _2037 *= 0.5;
                    _2039 = _2040;
                }
            }
            frontier_phi_55_pred = _1896;
        }
        _1895 = frontier_phi_55_pred;
        float _1897 = _1895 + _1713;
        float _1901 = sqrt(_1892);
        float _1902 = ((_1897 > 1.0) ? (_1897 + (-1.0)) : _1897) * 6.283185482025146484375;
        float _1905 = cos(_1902) * _1901;
        float _1907 = sin(_1902) * _1901;
        float _1909 = sqrt(1.0 - _1892);
        float _1922 = ((_1909 * _1656) + (_1905 * _1879)) + (_1907 * _1874);
        float _1923 = ((_1909 * _1657) + (_1905 * _1882)) + (_1907 * _1875);
        float _1924 = ((_1909 * _1658) + (_1905 * _1885)) + (_1907 * _1876);
        _67._m0 = 1u;
        uvec4 _1928 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1929 = _1928.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1929, _1928.w, _1929, vec3(_1670, _1671, _1672), 9.9999997473787516355514526367188e-05, vec3(_1922, _1923, _1924), 10000.0, 1);
        float _1935 = dot(vec3(_1656, _1657, _1658), vec3(_1922, _1923, _1924));
        float _2354 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _1938 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
        _1887 = ((float(_67._m0 == 0u) * _1938) / (_1938 * 0.3183098733425140380859375)) + _1886;
        uint _1889 = _1888 + 1u;
        if (_1889 == 32u)
        {
            break;
        }
        else
        {
            _1886 = _1887;
            _1888 = _1889;
            continue;
        }
    }
    float _1946 = _1887 * 0.009947183541953563690185546875;
    float _1951 = dot(vec3(_1536, _1537, _1538), vec3(_1656, _1657, _1658)) * 2.0;
    vec4 _1965 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1536 - (_1951 * _1656), _1537 - (_1951 * _1657), _1538 - (_1951 * _1658)), 4.0 - (_1294 * 4.0));
    float _1970 = dot(vec3(_1673, _1675, _1676), vec3(_1656, _1657, _1658));
    float _2365 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
    float _1980 = exp2(log2(1.0 - (isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0)))) * 5.0);
    vec4 _1992 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1656, _1657, _1658), 0.0);
    float _2003 = (_1856 + _1853) + (((_1992.x * _1715) + (((_1980 * (0.959999978542327880859375 - _1722)) + _1725) * _1965.x)) * _1946);
    float _2007 = (_1857 + _1854) + (((_1992.y * _1716) + (((_1980 * (0.959999978542327880859375 - _1723)) + _1727) * _1965.y)) * _1946);
    float _2011 = (_1858 + _1855) + (((_1992.z * _1717) + (((_1980 * (0.959999978542327880859375 - _1724)) + _1728) * _1965.z)) * _1946);
    float _2376 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
    float _2387 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
    float _2398 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
    bool _2019 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2030;
    _2030.x = _2019 ? ((_716 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2376 : (isnan(_2376) ? 1.0 : min(_2376, 1.0)));
    _2030.y = _2019 ? ((_719 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2387 : (isnan(_2387) ? 1.0 : min(_2387, 1.0)));
    _2030.z = _2019 ? ((_722 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0)));
    payload._m0 = _2030;
}


