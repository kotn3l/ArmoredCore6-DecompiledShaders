#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Glass_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_Glass_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _1240;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _153 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _154 >> 16u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        _159 = frontier_phi_3_2_ladder_2;
        _161 = frontier_phi_3_2_ladder_1;
        _162 = frontier_phi_3_2_ladder;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _166.z;
    bool _169 = _168 != 0u;
    bool _171 = _118.w == 0u;
    bool _172 = _169 || _171;
    uint _173 = _167 * _159;
    uint _174 = _173 + 12u;
    uint _198;
    uint _199;
    uint _200;
    uint _201;
    if (_172)
    {
        uvec4 _177 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _178 = _177.x;
        _198 = _178 & 255u;
        _199 = (_178 >> 8u) & 255u;
        _200 = (_178 >> 16u) & 255u;
        _201 = 16u;
    }
    else
    {
        uint _186 = _174 >> 2u;
        uvec2 _192 = uvec2(texelFetch(l_geomAttrib_0, int(_186)).x, texelFetch(l_geomAttrib_0, int(_186 + 1u)).x);
        uint _193 = _192.x;
        _198 = _193 & 65535u;
        _199 = _193 >> 16u;
        _200 = _192.y & 65535u;
        _201 = 20u;
    }
    uvec4 _209 = texelFetch(l_geomAttrib_0, int((_201 + _173) >> 2u));
    uint _210 = _209.x;
    bool _224 = _168 == 0u;
    uint _225;
    if (_224)
    {
        _225 = _201 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_171)
        {
            frontier_phi_9_10_ladder = _201 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _201 + 12u;
        }
        _225 = frontier_phi_9_10_ladder;
    }
    uint _229 = _169 ? (_225 + 4u) : _225;
    uvec4 _233 = texelFetch(l_geomAttrib_0, int(((_173 + 4u) + _229) >> 2u));
    uint _234 = _233.x;
    float _238 = float(int(uint(int(_234 << 16u) >> int(16u))));
    float _239 = float(int(uint(int(_234) >> int(16u))));
    uvec4 _243 = texelFetch(l_geomAttrib_0, int(((_173 + 8u) + _229) >> 2u));
    uint _244 = _243.x;
    uint _250 = _167 * _161;
    uint _251 = _250 + 12u;
    uint _272;
    uint _273;
    uint _274;
    uint _275;
    if (_172)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
        _275 = 16u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
        _275 = 20u;
    }
    uvec4 _281 = texelFetch(l_geomAttrib_0, int((_275 + _250) >> 2u));
    uint _282 = _281.x;
    uint _294;
    if (_224)
    {
        _294 = _275 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_171)
        {
            frontier_phi_16_17_ladder = _275 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _275 + 12u;
        }
        _294 = frontier_phi_16_17_ladder;
    }
    uint _298 = _169 ? (_294 + 4u) : _294;
    uvec4 _302 = texelFetch(l_geomAttrib_0, int(((_250 + 4u) + _298) >> 2u));
    uint _303 = _302.x;
    float _307 = float(int(uint(int(_303 << 16u) >> int(16u))));
    float _308 = float(int(uint(int(_303) >> int(16u))));
    uvec4 _312 = texelFetch(l_geomAttrib_0, int(((_250 + 8u) + _298) >> 2u));
    uint _313 = _312.x;
    uint _319 = _167 * _162;
    uint _320 = _319 + 12u;
    uint _341;
    uint _342;
    uint _343;
    uint _344;
    if (_172)
    {
        uvec4 _322 = texelFetch(l_geomAttrib_0, int(_320 >> 2u));
        uint _323 = _322.x;
        _341 = _323 & 255u;
        _342 = (_323 >> 8u) & 255u;
        _343 = (_323 >> 16u) & 255u;
        _344 = 16u;
    }
    else
    {
        uint _329 = _320 >> 2u;
        uvec2 _335 = uvec2(texelFetch(l_geomAttrib_0, int(_329)).x, texelFetch(l_geomAttrib_0, int(_329 + 1u)).x);
        uint _336 = _335.x;
        _341 = _336 & 65535u;
        _342 = _336 >> 16u;
        _343 = _335.y & 65535u;
        _344 = 20u;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int((_344 + _319) >> 2u));
    uint _351 = _350.x;
    uint _363;
    if (_224)
    {
        _363 = _344 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_171)
        {
            frontier_phi_23_24_ladder = _344 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _344 + 12u;
        }
        _363 = frontier_phi_23_24_ladder;
    }
    uint _367 = _169 ? (_363 + 4u) : _363;
    uvec4 _371 = texelFetch(l_geomAttrib_0, int(((_319 + 4u) + _367) >> 2u));
    uint _372 = _371.x;
    float _376 = float(int(uint(int(_372 << 16u) >> int(16u))));
    float _377 = float(int(uint(int(_372) >> int(16u))));
    uvec4 _381 = texelFetch(l_geomAttrib_0, int(((_319 + 8u) + _367) >> 2u));
    uint _382 = _381.x;
    bool _389 = _118.z == 0u;
    float _425;
    float _426;
    float _427;
    if (_389)
    {
        uint _392 = _159 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _159 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_389)
    {
        uint _430 = _161 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _161 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_389)
    {
        uint _468 = _162 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _162 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _506 = (1.0 - hit._m0.x) - hit._m0.y;
    float _553 = (_307 - _238) * 0.00048828125;
    float _555 = (_308 - _239) * 0.00048828125;
    float _558 = (_376 - _238) * 0.00048828125;
    float _559 = (_377 - _239) * 0.00048828125;
    float _581 = _463 - _425;
    float _582 = _464 - _426;
    float _583 = _465 - _427;
    float _586 = fma(_583, gl_ObjectToWorldEXT[2u].x, fma(_582, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _581));
    float _589 = fma(_583, gl_ObjectToWorldEXT[2u].y, fma(_582, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _581));
    float _592 = fma(_583, gl_ObjectToWorldEXT[2u].z, fma(_582, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _581));
    float _593 = _501 - _425;
    float _594 = _502 - _426;
    float _595 = _503 - _427;
    float _598 = fma(_595, gl_ObjectToWorldEXT[2u].x, fma(_594, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _593));
    float _601 = fma(_595, gl_ObjectToWorldEXT[2u].y, fma(_594, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _593));
    float _604 = fma(_595, gl_ObjectToWorldEXT[2u].z, fma(_594, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _593));
    float _605 = (((_307 * hit._m0.x) + (_238 * _506)) + (_376 * hit._m0.y)) * 0.00048828125;
    float _606 = (((_308 * hit._m0.x) + (_239 * _506)) + (_377 * hit._m0.y)) * 0.00048828125;
    float _610 = (((float(_198) * _506) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _613 = (((float(_199) * _506) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _616 = (((float(_200) * _506) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_343) * hit._m0.y);
    float _617 = _610 * 0.0078740157186985015869140625;
    float _619 = _613 * 0.0078740157186985015869140625;
    float _620 = _616 * 0.0078740157186985015869140625;
    float _633 = ((((float(_210 & 255u) * _506) + (-127.0)) + (float(_282 & 255u) * hit._m0.x)) + (float(_351 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _634 = ((((float((_210 >> 8u) & 255u) * _506) + (-127.0)) + (float((_282 >> 8u) & 255u) * hit._m0.x)) + (float((_351 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _635 = ((((float((_210 >> 16u) & 255u) * _506) + (-127.0)) + (float((_282 >> 16u) & 255u) * hit._m0.x)) + (float((_351 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _636 = ((((float(_210 >> 24u) * _506) + (-127.0)) + (float(_282 >> 24u) * hit._m0.x)) + (float(_351 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _646 = ((_634 * _620) - (_635 * _619)) * _636;
    float _647 = ((_635 * _617) - (_633 * _620)) * _636;
    float _648 = ((_633 * _619) - (_634 * _617)) * _636;
    float _652 = inversesqrt(dot(vec3(_646, _647, _648), vec3(_646, _647, _648)));
    uvec2 _681 = uvec2(textureSize(P_ACParts_Glass_snp_0_Texture2D_7, int(0u)));
    bool _686 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _739;
    if (_686)
    {
        float _697 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _703 = (_604 * _589) - (_601 * _592);
        float _706 = (_598 * _592) - (_604 * _586);
        float _709 = (_601 * _586) - (_598 * _589);
        float _736 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_559 * _553) - (_558 * _555))) / (sqrt(((_706 * _706) + (_709 * _709)) + (_703 * _703)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_697 * gl_WorldRayDirectionEXT.x, _697 * gl_WorldRayDirectionEXT.y, _697 * gl_WorldRayDirectionEXT.z), vec3(_617, _619, _620))));
        _739 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    }
    else
    {
        _739 = 0.0;
    }
    vec4 _743 = textureLod(sampler2D(P_ACParts_Glass_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _605) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _606) + cbTextureTilingScale._m0[0u].w), _739);
    float _750 = (_743.x * 2.0) + (-1.0);
    float _752 = (_743.y * 2.0) + (-1.0);
    float _753 = dot(vec2(_750, _752), vec2(_750, _752));
    float _1321 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _758 = sqrt(1.0 - (isnan(1.0) ? _1321 : (isnan(_1321) ? 1.0 : min(_1321, 1.0))));
    float _765 = ((cbMtdParam._m0[11u].z + _743.z) * 0.5) + cbMtdParam._m0[10u].x;
    float _770 = exp2(log2(cbMtdParam._m0[10u].z) * cbMtdParam._m0[10u].w);
    uvec2 _782 = uvec2(textureSize(P_ACParts_Glass_snp_0_Texture2D_8, int(0u)));
    float _786 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _787 = _786 * gl_WorldRayDirectionEXT.x;
    float _788 = _786 * gl_WorldRayDirectionEXT.y;
    float _789 = _786 * gl_WorldRayDirectionEXT.z;
    float _833;
    if (_686)
    {
        float _799 = (_604 * _589) - (_601 * _592);
        float _802 = (_598 * _592) - (_604 * _586);
        float _805 = (_601 * _586) - (_598 * _589);
        float _831 = ((log2((((float(_782.y) * 0.5) * float(_782.x)) * abs((_559 * _553) - (_558 * _555))) / (sqrt(((_802 * _802) + (_805 * _805)) + (_799 * _799)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_787, _788, _789), vec3(_617, _619, _620))));
        _833 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    }
    else
    {
        _833 = 0.0;
    }
    vec4 _835 = textureLod(sampler2D(P_ACParts_Glass_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _605) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _606) + cbTextureTilingScale._m0[1u].w), _833);
    float _849 = (((((((float(_313 & 255u) * hit._m0.x) + (float(_244 & 255u) * _506)) + (float(_382 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[10u].y) * _770) * ((_835.x * 2.0) + (-1.0))) + _750;
    float _850 = (((((((float((_313 >> 8u) & 255u) * hit._m0.x) + (float((_244 >> 8u) & 255u) * _506)) + (float((_382 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[10u].y) * _770) * ((_835.y * 2.0) + (-1.0))) + _752;
    float _853 = fma(_758, _617, fma(_850, _633, (_652 * _646) * _849));
    float _856 = fma(_758, _619, fma(_850, _634, (_652 * _647) * _849));
    float _859 = fma(_758, _620, fma(_850, _635, (_652 * _648) * _849));
    float _863 = inversesqrt(dot(vec3(_853, _856, _859), vec3(_853, _856, _859)));
    float _864 = _863 * _853;
    float _865 = _863 * _856;
    float _866 = _863 * _859;
    float _878 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _879 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _880 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _881 = (-0.0) - _787;
    float _883 = (-0.0) - _788;
    float _884 = (-0.0) - _789;
    float _890 = float(gl_LaunchIDEXT.x);
    float _891 = float(gl_LaunchIDEXT.y);
    float _894 = float(gl_LaunchSizeEXT.x);
    float _908 = fract(fract(sin(dot(vec2(_890 / _894, _891 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _921 = fract(fract(sin(dot(vec2((_890 + 128.0) / _894, (_891 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _922 = 1.0 - cbMtdParam._m0[12u].x;
    float _923 = _922 * cbMtdParam._m0[9u].x;
    float _924 = _922 * cbMtdParam._m0[9u].y;
    float _925 = _922 * cbMtdParam._m0[9u].z;
    float _930 = cbMtdParam._m0[12u].x * (cbMtdParam._m0[9u].x + (-0.039999999105930328369140625));
    float _931 = cbMtdParam._m0[12u].x * (cbMtdParam._m0[9u].y + (-0.039999999105930328369140625));
    float _932 = cbMtdParam._m0[12u].x * (cbMtdParam._m0[9u].z + (-0.039999999105930328369140625));
    float _933 = _930 + 0.039999999105930328369140625;
    float _935 = _931 + 0.039999999105930328369140625;
    float _936 = _932 + 0.039999999105930328369140625;
    _60._m0 = 1u;
    uvec4 _946 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _947 = _946.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _947, _946.w, _947, vec3(_878, _879, _880), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    if (_60._m0 == 0u)
    {
        float _968 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_864, _865, _866));
        float _1337 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
        float _971 = isnan(1.0) ? _1337 : (isnan(_1337) ? 1.0 : min(_1337, 1.0));
        float _990 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _765) * 0.949999988079071044921875);
        float _991 = _990 * _990;
        float _992 = g_sceneCB._m0[4u].x - _787;
        float _993 = g_sceneCB._m0[4u].y - _788;
        float _994 = g_sceneCB._m0[4u].z - _789;
        float _998 = inversesqrt(dot(vec3(_992, _993, _994), vec3(_992, _993, _994)));
        float _999 = _998 * _992;
        float _1000 = _998 * _993;
        float _1001 = _998 * _994;
        float _1002 = dot(vec3(_864, _865, _866), vec3(g_sceneCB._m0[4u].xyz));
        float _1348 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
        float _1005 = isnan(1.0) ? _1348 : (isnan(_1348) ? 1.0 : min(_1348, 1.0));
        float _1006 = dot(vec3(_864, _865, _866), vec3(_881, _883, _884));
        float _1359 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1009 = isnan(1.0) ? _1359 : (isnan(_1359) ? 1.0 : min(_1359, 1.0));
        float _1010 = dot(vec3(_864, _865, _866), vec3(_999, _1000, _1001));
        float _1370 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
        float _1013 = isnan(1.0) ? _1370 : (isnan(_1370) ? 1.0 : min(_1370, 1.0));
        float _1014 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_999, _1000, _1001));
        float _1381 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
        float _1018 = _991 * _991;
        float _1022 = ((_1013 * _1013) * (_1018 + (-1.0))) + 1.0;
        float _1031 = exp2(log2(1.0 - (isnan(1.0) ? _1381 : (isnan(_1381) ? 1.0 : min(_1381, 1.0)))) * 5.0);
        float _1042 = 1.0 - _991;
        float _1053 = (0.5 / (((_1009 * ((_1005 * _1042) + _991)) + 9.9999999392252902907785028219223e-09) + (((_1009 * _1042) + _991) * _1005))) * _1005;
        float _1392 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
        float _1055 = (isnan(1.0) ? _1392 : (isnan(_1392) ? 1.0 : min(_1392, 1.0))) * (_1018 / ((_1022 * _1022) * 3.141590118408203125));
        _1062 = ((_923 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _971;
        _1063 = ((_924 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _971;
        _1064 = ((_925 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _971;
        _1065 = (((_1031 * (0.959999978542327880859375 - _930)) + _933) * g_sceneCB._m0[5u].x) * _1055;
        _1066 = (((_1031 * (0.959999978542327880859375 - _931)) + _935) * g_sceneCB._m0[5u].y) * _1055;
        _1067 = (((_1031 * (0.959999978542327880859375 - _932)) + _936) * g_sceneCB._m0[5u].z) * _1055;
    }
    else
    {
        _1062 = 0.0;
        _1063 = 0.0;
        _1064 = 0.0;
        _1065 = 0.0;
        _1066 = 0.0;
        _1067 = 0.0;
    }
    bool _1069 = abs(_865) < 0.89999997615814208984375;
    float _1071 = float(_1069);
    float _1072 = _1069 ? 0.0 : 1.0;
    float _1075 = (_1071 * _866) - (_1072 * _865);
    float _1076 = _1072 * _864;
    float _1078 = (-0.0) - (_864 * _1071);
    float _1082 = inversesqrt(dot(vec3(_1075, _1076, _1078), vec3(_1075, _1076, _1078)));
    float _1083 = _1075 * _1082;
    float _1084 = _1076 * _1082;
    float _1085 = _1082 * _1078;
    float _1088 = (_1084 * _866) - (_1085 * _865);
    float _1091 = (_1085 * _864) - (_1083 * _866);
    float _1094 = (_1083 * _865) - (_1084 * _864);
    float _1096;
    float _1104;
    float _1095 = 0.0;
    uint _1097 = 0u;
    float _1101;
    bool _1103;
    for (;;)
    {
        _1101 = (float(_1097) + _908) * 0.03125;
        _1103 = _1097 == 0u;
        float frontier_phi_43_pred;
        if (_1103)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1245;
            float _1246;
            uint _1248;
            _1245 = 0.0;
            _1246 = 0.5;
            _1248 = _1097;
            float _1105;
            for (;;)
            {
                _1105 = ((_1248 & 1u) != 0u) ? (_1246 + _1245) : _1245;
                uint _1249 = _1248 >> 1u;
                if (_1249 == 0u)
                {
                    break;
                }
                else
                {
                    _1245 = _1105;
                    _1246 *= 0.5;
                    _1248 = _1249;
                }
            }
            frontier_phi_43_pred = _1105;
        }
        _1104 = frontier_phi_43_pred;
        float _1106 = _1104 + _921;
        float _1110 = sqrt(_1101);
        float _1111 = ((_1106 > 1.0) ? (_1106 + (-1.0)) : _1106) * 6.283185482025146484375;
        float _1114 = cos(_1111) * _1110;
        float _1116 = sin(_1111) * _1110;
        float _1118 = sqrt(1.0 - _1101);
        float _1131 = ((_1118 * _864) + (_1114 * _1088)) + (_1116 * _1083);
        float _1132 = ((_1118 * _865) + (_1114 * _1091)) + (_1116 * _1084);
        float _1133 = ((_1118 * _866) + (_1114 * _1094)) + (_1116 * _1085);
        _59._m0 = 1u;
        uvec4 _1137 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1138 = _1137.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1138, _1137.w, _1138, vec3(_878, _879, _880), 9.9999997473787516355514526367188e-05, vec3(_1131, _1132, _1133), 10000.0, 1);
        float _1144 = dot(vec3(_864, _865, _866), vec3(_1131, _1132, _1133));
        float _1403 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1147 = isnan(1.0) ? _1403 : (isnan(_1403) ? 1.0 : min(_1403, 1.0));
        _1096 = ((float(_59._m0 == 0u) * _1147) / (_1147 * 0.3183098733425140380859375)) + _1095;
        uint _1098 = _1097 + 1u;
        if (_1098 == 32u)
        {
            break;
        }
        else
        {
            _1095 = _1096;
            _1097 = _1098;
            continue;
        }
    }
    float _1155 = _1096 * 0.009947183541953563690185546875;
    float _1160 = dot(vec3(_787, _788, _789), vec3(_864, _865, _866)) * 2.0;
    vec4 _1174 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_787 - (_1160 * _864), _788 - (_1160 * _865), _789 - (_1160 * _866)), 4.0 - (_765 * 4.0));
    float _1179 = dot(vec3(_881, _883, _884), vec3(_864, _865, _866));
    float _1414 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    float _1189 = exp2(log2(1.0 - (isnan(1.0) ? _1414 : (isnan(_1414) ? 1.0 : min(_1414, 1.0)))) * 5.0);
    vec4 _1201 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_864, _865, _866), 0.0);
    float _1212 = (_1065 + _1062) + (((_1201.x * _923) + (((_1189 * (0.959999978542327880859375 - _930)) + _933) * _1174.x)) * _1155);
    float _1216 = (_1066 + _1063) + (((_1201.y * _924) + (((_1189 * (0.959999978542327880859375 - _931)) + _935) * _1174.y)) * _1155);
    float _1220 = (_1067 + _1064) + (((_1201.z * _925) + (((_1189 * (0.959999978542327880859375 - _932)) + _936) * _1174.z)) * _1155);
    float _1425 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _1436 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1447 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
    bool _1228 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1239;
    _1239.x = _1228 ? ((_610 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0)));
    _1239.y = _1228 ? ((_613 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1436 : (isnan(_1436) ? 1.0 : min(_1436, 1.0)));
    _1239.z = _1228 ? ((_616 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1447 : (isnan(_1447) ? 1.0 : min(_1447, 1.0)));
    payload._m0 = _1239;
}


