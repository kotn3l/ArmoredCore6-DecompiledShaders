#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _41
{
    vec3 _m0;
};

struct _45
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _41 payload;
hitAttributeEXT _45 hit;

void main()
{
    vec3 _51 = payload._m0;
    float _88 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _89 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _90 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _108 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _109 = _108.y;
    uint _148;
    uint _150;
    uint _151;
    if (_108.x == 0u)
    {
        uint _116 = (_109 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _125 = uvec3(texelFetch(l_geomIndexBuffer, int(_116)).x, texelFetch(l_geomIndexBuffer, int(_116 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_116 + 2u)).x);
        _148 = _125.x;
        _150 = _125.y;
        _151 = _125.z;
    }
    else
    {
        uint _129 = uint(gl_PrimitiveID) * 6u;
        uint _131 = _129 & 4294967292u;
        uint _134 = (_109 + _131) >> 2u;
        uvec2 _141 = uvec2(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x);
        uint _142 = _141.x;
        uint _143 = _141.y;
        uint _145 = _142 >> 16u;
        uint _146 = _143 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_131 == _129)
        {
            frontier_phi_3_2_ladder = _142 & 65535u;
            frontier_phi_3_2_ladder_1 = _145;
            frontier_phi_3_2_ladder_2 = _146;
        }
        else
        {
            frontier_phi_3_2_ladder = _145;
            frontier_phi_3_2_ladder_1 = _146;
            frontier_phi_3_2_ladder_2 = _143 >> 16u;
        }
        _148 = frontier_phi_3_2_ladder;
        _150 = frontier_phi_3_2_ladder_1;
        _151 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _155 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _156 = _155.x;
    uint _157 = _155.z;
    bool _158 = _157 != 0u;
    uint _159 = _108.w;
    bool _161 = _158 || (_159 == 0u);
    uint _163 = (_156 * _148) + 12u;
    uint _187;
    uint _188;
    uint _189;
    if (_161)
    {
        uvec4 _166 = texelFetch(l_geomAttrib_0, int(_163 >> 2u));
        uint _167 = _166.x;
        _187 = _167 & 255u;
        _188 = (_167 >> 8u) & 255u;
        _189 = (_167 >> 16u) & 255u;
    }
    else
    {
        uint _175 = _163 >> 2u;
        uvec2 _181 = uvec2(texelFetch(l_geomAttrib_0, int(_175)).x, texelFetch(l_geomAttrib_0, int(_175 + 1u)).x);
        uint _182 = _181.x;
        _187 = _182 & 65535u;
        _188 = _182 >> 16u;
        _189 = _181.y & 65535u;
    }
    uint _193 = _155.y;
    bool _194 = _157 == 0u;
    uint _197 = _194 ? 4u : ((_159 != 0u) ? 12u : 8u);
    uvec4 _206 = texelFetch(l_geomAttrib_1, int((((_193 * _148) + 4u) + (_158 ? (_197 + 4u) : _197)) >> 2u));
    uint _207 = _206.x;
    float _211 = float(int(uint(int(_207 << 16u) >> int(16u))));
    float _212 = float(int(uint(int(_207) >> int(16u))));
    uint _214 = (_156 * _150) + 12u;
    uint _236;
    uint _237;
    uint _238;
    if (_161)
    {
        uvec4 _217 = texelFetch(l_geomAttrib_0, int(_214 >> 2u));
        uint _218 = _217.x;
        _236 = _218 & 255u;
        _237 = (_218 >> 8u) & 255u;
        _238 = (_218 >> 16u) & 255u;
    }
    else
    {
        uint _224 = _214 >> 2u;
        uvec2 _230 = uvec2(texelFetch(l_geomAttrib_0, int(_224)).x, texelFetch(l_geomAttrib_0, int(_224 + 1u)).x);
        uint _231 = _230.x;
        _236 = _231 & 65535u;
        _237 = _231 >> 16u;
        _238 = _230.y & 65535u;
    }
    uint _244 = _194 ? 4u : ((_159 != 0u) ? 12u : 8u);
    uvec4 _251 = texelFetch(l_geomAttrib_1, int((((_193 * _150) + 4u) + (_158 ? (_244 + 4u) : _244)) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uint _259 = (_156 * _151) + 12u;
    uint _281;
    uint _282;
    uint _283;
    if (_161)
    {
        uvec4 _262 = texelFetch(l_geomAttrib_0, int(_259 >> 2u));
        uint _263 = _262.x;
        _281 = _263 & 255u;
        _282 = (_263 >> 8u) & 255u;
        _283 = (_263 >> 16u) & 255u;
    }
    else
    {
        uint _269 = _259 >> 2u;
        uvec2 _275 = uvec2(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x);
        uint _276 = _275.x;
        _281 = _276 & 65535u;
        _282 = _276 >> 16u;
        _283 = _275.y & 65535u;
    }
    uint _289 = _194 ? 4u : ((_159 != 0u) ? 12u : 8u);
    uvec4 _296 = texelFetch(l_geomAttrib_1, int((((_193 * _151) + 4u) + (_158 ? (_289 + 4u) : _289)) >> 2u));
    uint _297 = _296.x;
    float _301 = float(int(uint(int(_297 << 16u) >> int(16u))));
    float _302 = float(int(uint(int(_297) >> int(16u))));
    bool _304 = _108.z == 0u;
    float _340;
    float _341;
    float _342;
    if (_304)
    {
        uint _307 = _148 * 3u;
        uvec3 _316 = uvec3(texelFetch(l_geomPositionBuffer, int(_307)).x, texelFetch(l_geomPositionBuffer, int(_307 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_307 + 2u)).x);
        _340 = uintBitsToFloat(_316.x);
        _341 = uintBitsToFloat(_316.y);
        _342 = uintBitsToFloat(_316.z);
    }
    else
    {
        uint _324 = _148 * 2u;
        uvec2 _330 = uvec2(texelFetch(l_geomPositionBuffer, int(_324)).x, texelFetch(l_geomPositionBuffer, int(_324 + 1u)).x);
        uint _331 = _330.x;
        _340 = unpackHalf2x16(_331).x;
        _341 = unpackHalf2x16(_331 >> 16u).x;
        _342 = unpackHalf2x16(_330.y).x;
    }
    float _378;
    float _379;
    float _380;
    if (_304)
    {
        uint _345 = _150 * 3u;
        uvec3 _354 = uvec3(texelFetch(l_geomPositionBuffer, int(_345)).x, texelFetch(l_geomPositionBuffer, int(_345 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_345 + 2u)).x);
        _378 = uintBitsToFloat(_354.x);
        _379 = uintBitsToFloat(_354.y);
        _380 = uintBitsToFloat(_354.z);
    }
    else
    {
        uint _362 = _150 * 2u;
        uvec2 _368 = uvec2(texelFetch(l_geomPositionBuffer, int(_362)).x, texelFetch(l_geomPositionBuffer, int(_362 + 1u)).x);
        uint _369 = _368.x;
        _378 = unpackHalf2x16(_369).x;
        _379 = unpackHalf2x16(_369 >> 16u).x;
        _380 = unpackHalf2x16(_368.y).x;
    }
    float _416;
    float _417;
    float _418;
    if (_304)
    {
        uint _383 = _151 * 3u;
        uvec3 _392 = uvec3(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_383 + 2u)).x);
        _416 = uintBitsToFloat(_392.x);
        _417 = uintBitsToFloat(_392.y);
        _418 = uintBitsToFloat(_392.z);
    }
    else
    {
        uint _400 = _151 * 2u;
        uvec2 _406 = uvec2(texelFetch(l_geomPositionBuffer, int(_400)).x, texelFetch(l_geomPositionBuffer, int(_400 + 1u)).x);
        uint _407 = _406.x;
        _416 = unpackHalf2x16(_407).x;
        _417 = unpackHalf2x16(_407 >> 16u).x;
        _418 = unpackHalf2x16(_406.y).x;
    }
    float _421 = (1.0 - hit._m0.x) - hit._m0.y;
    float _453 = _378 - _340;
    float _454 = _379 - _341;
    float _455 = _380 - _342;
    float _458 = fma(_455, gl_ObjectToWorldEXT[2u].x, fma(_454, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _453));
    float _461 = fma(_455, gl_ObjectToWorldEXT[2u].y, fma(_454, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _453));
    float _464 = fma(_455, gl_ObjectToWorldEXT[2u].z, fma(_454, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _453));
    float _465 = _416 - _340;
    float _466 = _417 - _341;
    float _467 = _418 - _342;
    float _470 = fma(_467, gl_ObjectToWorldEXT[2u].x, fma(_466, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _465));
    float _473 = fma(_467, gl_ObjectToWorldEXT[2u].y, fma(_466, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _465));
    float _476 = fma(_467, gl_ObjectToWorldEXT[2u].z, fma(_466, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _465));
    uvec2 _491 = uvec2(textureSize(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, int(0u)));
    float _578;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _534 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _540 = (_476 * _461) - (_473 * _464);
        float _543 = (_470 * _464) - (_476 * _458);
        float _546 = (_473 * _458) - (_470 * _461);
        float _573 = log2(abs(sqrt(((_89 * _89) + (_88 * _88)) + (_90 * _90)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))))) / abs(dot(vec3(_534 * gl_WorldRayDirectionEXT.x, _534 * gl_WorldRayDirectionEXT.y, _534 * gl_WorldRayDirectionEXT.z), vec3(((((float(_187) * _421) + (-127.0)) + (float(_236) * hit._m0.x)) + (float(_281) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_188) * _421) + (-127.0)) + (float(_237) * hit._m0.x)) + (float(_282) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_189) * _421) + (-127.0)) + (float(_238) * hit._m0.x)) + (float(_283) * hit._m0.y)) * 0.0078740157186985015869140625))));
        float _575 = ((log2((((float(_491.y) * 0.5) * float(_491.x)) * abs((((_302 - _212) * (_256 - _211)) - ((_301 - _211) * (_257 - _212))) * 2.384185791015625e-07)) / (sqrt(((_543 * _543) + (_546 * _546)) + (_540 * _540)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + _573;
        _578 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    }
    else
    {
        _578 = 0.0;
    }
    if (textureLod(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_256 * hit._m0.x) + (_211 * _421)) + (_301 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_257 * hit._m0.x) + (_212 * _421)) + (_302 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _578).z < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _51;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _51;
        return;
    }
}


