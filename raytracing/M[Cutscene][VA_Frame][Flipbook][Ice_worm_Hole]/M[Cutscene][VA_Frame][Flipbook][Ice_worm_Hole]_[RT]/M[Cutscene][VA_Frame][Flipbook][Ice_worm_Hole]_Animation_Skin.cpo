#version 460
#extension GL_EXT_samplerless_texture_functions : require
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;
layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;

void main()
{
    uvec4 _51 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _56 = (((_51.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_56 < _51.x)
    {
        uint _64 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _56;
        uint _65 = _64 >> 2u;
        uvec3 _75 = uvec3(texelFetch(l_geomAttrib_0, int(_65)).x, texelFetch(l_geomAttrib_0, int(_65 + 1u)).x, texelFetch(l_geomAttrib_0, int(_65 + 2u)).x);
        float _79 = uintBitsToFloat(_75.x);
        float _80 = uintBitsToFloat(_75.y);
        float _81 = uintBitsToFloat(_75.z);
        uint _84 = _64 + 20u;
        uint _114;
        uint _115;
        uint _116;
        uint _117;
        uint _118;
        if (_51.y == 0u)
        {
            uvec4 _87 = texelFetch(l_geomAttrib_0, int(_84 >> 2u));
            uint _88 = _87.x;
            _114 = _88 & 255u;
            _115 = (_88 >> 8u) & 255u;
            _116 = (_88 >> 16u) & 255u;
            _117 = _88 >> 24u;
            _118 = 24u;
        }
        else
        {
            uint _99 = _84 >> 2u;
            uvec2 _106 = uvec2(texelFetch(l_geomAttrib_0, int(_99)).x, texelFetch(l_geomAttrib_0, int(_99 + 1u)).x);
            uint _107 = _106.x;
            uint _108 = _106.y;
            _114 = _107 & 65535u;
            _115 = _107 >> 16u;
            _116 = _108 & 65535u;
            _117 = _108 >> 16u;
            _118 = 28u;
        }
        uvec4 _122 = texelFetch(l_geomAttrib_0, int((_118 + _64) >> 2u));
        uint _123 = _122.x;
        float _134 = float(_123 & 255u) * 0.0039215688593685626983642578125;
        float _136 = float((_123 >> 8u) & 255u) * 0.0039215688593685626983642578125;
        float _137 = float((_123 >> 16u) & 255u) * 0.0039215688593685626983642578125;
        float _138 = float(_123 >> 24u) * 0.0039215688593685626983642578125;
        uvec4 _142 = texelFetch(l_geomAttrib_0, int(((_64 + 28u) + _118) >> 2u));
        uint _143 = _142.x;
        float _152 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
        float _465 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
        float _162 = _152 * (isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0)));
        float _168 = floor(_162);
        float _169 = _168 + 1.0;
        float _171 = fract(_162);
        uint _172 = uint(int((float(_143 & 255u) + 0.5) + (float((_143 >> 8u) & 255u) * 256.0)));
        vec4 _174 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_172, uint(int(_168)))), int(0u));
        float _176 = _174.x;
        float _177 = _174.y;
        float _178 = _174.z;
        vec4 _180 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_172, uint(int(isnan(_152) ? _169 : (isnan(_169) ? _152 : min(_169, _152)))))), int(0u));
        float _191 = dot(vec4(1.0), vec4(_134, _136, _137, _138));
        float _194 = isnan(_191) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _191 : max(0.001000000047497451305389404296875, _191));
        float _196 = _134 / _194;
        float _197 = _136 / _194;
        float _198 = _137 / _194;
        float _199 = _138 / _194;
        uint _200 = _114 * 3u;
        uint _207 = _200 + 1u;
        uint _214 = _200 + 2u;
        uint _233 = _115 * 3u;
        uint _240 = _233 + 1u;
        uint _247 = _233 + 2u;
        uint _275 = _116 * 3u;
        uint _282 = _275 + 1u;
        uint _289 = _275 + 2u;
        uint _317 = _117 * 3u;
        uint _324 = _317 + 1u;
        uint _331 = _317 + 2u;
        float _373 = (((((((_180.x - _176) * _171) + _176) + (cbObjMatrix._m0[_200].w * _196)) + (cbObjMatrix._m0[_233].w * _197)) + (cbObjMatrix._m0[_275].w * _198)) + (cbObjMatrix._m0[_317].w * _199)) + fma(_81, (((cbObjMatrix._m0[_233].z * _197) + (cbObjMatrix._m0[_200].z * _196)) + (cbObjMatrix._m0[_275].z * _198)) + (cbObjMatrix._m0[_317].z * _199), fma(_80, (((cbObjMatrix._m0[_233].y * _197) + (cbObjMatrix._m0[_200].y * _196)) + (cbObjMatrix._m0[_275].y * _198)) + (cbObjMatrix._m0[_317].y * _199), ((((cbObjMatrix._m0[_233].x * _197) + (cbObjMatrix._m0[_200].x * _196)) + (cbObjMatrix._m0[_275].x * _198)) + (cbObjMatrix._m0[_317].x * _199)) * _79));
        float _379 = (((((((_180.y - _177) * _171) + _177) + (cbObjMatrix._m0[_207].w * _196)) + (cbObjMatrix._m0[_240].w * _197)) + (cbObjMatrix._m0[_282].w * _198)) + (cbObjMatrix._m0[_324].w * _199)) + fma(_81, (((cbObjMatrix._m0[_240].z * _197) + (cbObjMatrix._m0[_207].z * _196)) + (cbObjMatrix._m0[_282].z * _198)) + (cbObjMatrix._m0[_324].z * _199), fma(_80, (((cbObjMatrix._m0[_240].y * _197) + (cbObjMatrix._m0[_207].y * _196)) + (cbObjMatrix._m0[_282].y * _198)) + (cbObjMatrix._m0[_324].y * _199), ((((cbObjMatrix._m0[_240].x * _197) + (cbObjMatrix._m0[_207].x * _196)) + (cbObjMatrix._m0[_282].x * _198)) + (cbObjMatrix._m0[_324].x * _199)) * _79));
        float _385 = (((((((_180.z - _178) * _171) + _178) + (cbObjMatrix._m0[_214].w * _196)) + (cbObjMatrix._m0[_247].w * _197)) + (cbObjMatrix._m0[_289].w * _198)) + (cbObjMatrix._m0[_331].w * _199)) + fma(_81, (((cbObjMatrix._m0[_247].z * _197) + (cbObjMatrix._m0[_214].z * _196)) + (cbObjMatrix._m0[_289].z * _198)) + (cbObjMatrix._m0[_331].z * _199), fma(_80, (((cbObjMatrix._m0[_247].y * _197) + (cbObjMatrix._m0[_214].y * _196)) + (cbObjMatrix._m0[_289].y * _198)) + (cbObjMatrix._m0[_331].y * _199), ((((cbObjMatrix._m0[_247].x * _197) + (cbObjMatrix._m0[_214].x * _196)) + (cbObjMatrix._m0[_289].x * _198)) + (cbObjMatrix._m0[_331].x * _199)) * _79));
        float _409 = fma(_385, CB_CS_ANIMATION._m0[5u].z, fma(_379, CB_CS_ANIMATION._m0[5u].y, CB_CS_ANIMATION._m0[5u].x * _373)) + CB_CS_ANIMATION._m0[5u].w;
        float _413 = fma(_385, CB_CS_ANIMATION._m0[6u].z, fma(_379, CB_CS_ANIMATION._m0[6u].y, CB_CS_ANIMATION._m0[6u].x * _373)) + CB_CS_ANIMATION._m0[6u].w;
        float _417 = fma(_385, CB_CS_ANIMATION._m0[7u].z, fma(_379, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _373)) + CB_CS_ANIMATION._m0[7u].w;
        if (_51.w == 0u)
        {
            uint _431 = _56 * 3u;
            imageStore(outPositionBuffer, int(_431), uvec4(uint(float(floatBitsToUint(_409)))));
            imageStore(outPositionBuffer, int(_431 + 1u), uvec4(uint(float(floatBitsToUint(_413)))));
            imageStore(outPositionBuffer, int(_431 + 2u), uvec4(uint(float(floatBitsToUint(_417)))));
        }
        else
        {
            uint _451 = _56 * 2u;
            imageStore(outPositionBuffer, int(_451), uvec4((packHalf2x16(vec2(_413, 0.0)) << 16u) | packHalf2x16(vec2(_409, 0.0))));
            imageStore(outPositionBuffer, int(_451 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_417, 0.0))));
        }
    }
}


