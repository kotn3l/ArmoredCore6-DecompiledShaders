#version 460
#extension GL_EXT_samplerless_texture_functions : require
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4;
layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;

uint _92;

void main()
{
    uvec4 _51 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _56 = (((_51.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_56 < _51.x)
    {
        uint _64 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _56;
        uint _65 = _64 >> 2u;
        uvec3 _75 = uvec3(texelFetch(l_geomAttrib_0, int(_65)).x, texelFetch(l_geomAttrib_0, int(_65 + 1u)).x, texelFetch(l_geomAttrib_0, int(_65 + 2u)).x);
        float _79 = uintBitsToFloat(_75.x);
        float _80 = uintBitsToFloat(_75.y);
        float _81 = uintBitsToFloat(_75.z);
        uint _84 = _64 + 12u;
        uint _101;
        uint _102;
        if (_51.y == 0u)
        {
            _101 = texelFetch(l_geomAttrib_0, int(_84 >> 2u)).x >> 24u;
            _102 = 36u;
        }
        else
        {
            _101 = uvec2(_92, texelFetch(l_geomAttrib_0, int((_84 >> 2u) + 1u)).x).y >> 16u;
            _102 = 40u;
        }
        uvec4 _108 = texelFetch(l_geomAttrib_0, int((_102 + _64) >> 2u));
        uint _109 = _108.x;
        float _120 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
        float _277 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
        float _130 = _120 * (isnan(1.0) ? _277 : (isnan(_277) ? 1.0 : min(_277, 1.0)));
        float _136 = floor(_130);
        float _137 = _136 + 1.0;
        float _139 = fract(_130);
        uint _140 = uint(int((float(_109 & 255u) + 0.5) + (float((_109 >> 8u) & 255u) * 256.0)));
        vec4 _142 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_140, uint(int(_136)))), int(0u));
        float _144 = _142.x;
        float _145 = _142.y;
        float _146 = _142.z;
        vec4 _148 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_4, ivec2(uvec2(_140, uint(int(isnan(_120) ? _137 : (isnan(_137) ? _120 : min(_137, _120)))))), int(0u));
        uint _160 = uint(float(_101)) * 3u;
        uint _167 = _160 + 1u;
        uint _174 = _160 + 2u;
        float _192 = ((cbObjMatrix._m0[_160].w + _144) + ((_148.x - _144) * _139)) + fma(_81, cbObjMatrix._m0[_160].z, fma(_80, cbObjMatrix._m0[_160].y, cbObjMatrix._m0[_160].x * _79));
        float _195 = ((((_148.y - _145) * _139) + _145) + cbObjMatrix._m0[_167].w) + fma(_81, cbObjMatrix._m0[_167].z, fma(_80, cbObjMatrix._m0[_167].y, cbObjMatrix._m0[_167].x * _79));
        float _198 = ((((_148.z - _146) * _139) + _146) + cbObjMatrix._m0[_174].w) + fma(_81, cbObjMatrix._m0[_174].z, fma(_80, cbObjMatrix._m0[_174].y, cbObjMatrix._m0[_174].x * _79));
        float _222 = fma(_198, CB_CS_ANIMATION._m0[5u].z, fma(_195, CB_CS_ANIMATION._m0[5u].y, CB_CS_ANIMATION._m0[5u].x * _192)) + CB_CS_ANIMATION._m0[5u].w;
        float _226 = fma(_198, CB_CS_ANIMATION._m0[6u].z, fma(_195, CB_CS_ANIMATION._m0[6u].y, CB_CS_ANIMATION._m0[6u].x * _192)) + CB_CS_ANIMATION._m0[6u].w;
        float _230 = fma(_198, CB_CS_ANIMATION._m0[7u].z, fma(_195, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _192)) + CB_CS_ANIMATION._m0[7u].w;
        if (_51.w == 0u)
        {
            uint _243 = _56 * 3u;
            imageStore(outPositionBuffer, int(_243), uvec4(uint(float(floatBitsToUint(_222)))));
            imageStore(outPositionBuffer, int(_243 + 1u), uvec4(uint(float(floatBitsToUint(_226)))));
            imageStore(outPositionBuffer, int(_243 + 2u), uvec4(uint(float(floatBitsToUint(_230)))));
        }
        else
        {
            uint _263 = _56 * 2u;
            imageStore(outPositionBuffer, int(_263), uvec4((packHalf2x16(vec2(_226, 0.0)) << 16u) | packHalf2x16(vec2(_222, 0.0))));
            imageStore(outPositionBuffer, int(_263 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_230, 0.0))));
        }
    }
}


