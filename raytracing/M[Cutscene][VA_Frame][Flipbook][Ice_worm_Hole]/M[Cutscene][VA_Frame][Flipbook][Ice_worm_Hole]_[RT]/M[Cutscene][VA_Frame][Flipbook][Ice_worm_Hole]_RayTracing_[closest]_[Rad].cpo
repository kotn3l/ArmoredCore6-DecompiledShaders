#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1533;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _159 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _160 >> 16u;
        }
        _165 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
        _168 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    bool _230 = _174 == 0u;
    uint _231;
    if (_230)
    {
        _231 = _207 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _207 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _207 + 12u;
        }
        _231 = frontier_phi_9_10_ladder;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + (_175 ? (_231 + 4u) : _231)) >> 2u));
    uint _240 = _239.x;
    float _244 = float(int(uint(int(_240 << 16u) >> int(16u))));
    float _245 = float(int(uint(int(_240) >> int(16u))));
    uint _246 = _173 * _167;
    uint _247 = _246 + 12u;
    uint _268;
    uint _269;
    uint _270;
    uint _271;
    if (_178)
    {
        uvec4 _249 = texelFetch(l_geomAttrib_0, int(_247 >> 2u));
        uint _250 = _249.x;
        _268 = _250 & 255u;
        _269 = (_250 >> 8u) & 255u;
        _270 = (_250 >> 16u) & 255u;
        _271 = 16u;
    }
    else
    {
        uint _256 = _247 >> 2u;
        uvec2 _262 = uvec2(texelFetch(l_geomAttrib_0, int(_256)).x, texelFetch(l_geomAttrib_0, int(_256 + 1u)).x);
        uint _263 = _262.x;
        _268 = _263 & 65535u;
        _269 = _263 >> 16u;
        _270 = _262.y & 65535u;
        _271 = 20u;
    }
    uvec4 _277 = texelFetch(l_geomAttrib_0, int((_271 + _246) >> 2u));
    uint _278 = _277.x;
    uint _290;
    if (_230)
    {
        _290 = _271 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _271 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _271 + 12u;
        }
        _290 = frontier_phi_16_17_ladder;
    }
    uvec4 _298 = texelFetch(l_geomAttrib_0, int(((_246 + 4u) + (_175 ? (_290 + 4u) : _290)) >> 2u));
    uint _299 = _298.x;
    float _303 = float(int(uint(int(_299 << 16u) >> int(16u))));
    float _304 = float(int(uint(int(_299) >> int(16u))));
    uint _305 = _173 * _168;
    uint _306 = _305 + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_178)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 16u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 20u;
    }
    uvec4 _336 = texelFetch(l_geomAttrib_0, int((_330 + _305) >> 2u));
    uint _337 = _336.x;
    uint _349;
    if (_230)
    {
        _349 = _330 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _330 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _330 + 12u;
        }
        _349 = frontier_phi_23_24_ladder;
    }
    uvec4 _357 = texelFetch(l_geomAttrib_0, int(((_305 + 4u) + (_175 ? (_349 + 4u) : _349)) >> 2u));
    uint _358 = _357.x;
    float _362 = float(int(uint(int(_358 << 16u) >> int(16u))));
    float _363 = float(int(uint(int(_358) >> int(16u))));
    bool _365 = _124.z == 0u;
    float _401;
    float _402;
    float _403;
    if (_365)
    {
        uint _368 = _165 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _165 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_365)
    {
        uint _406 = _167 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _167 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_365)
    {
        uint _444 = _168 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _168 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _482 = (1.0 - hit._m0.x) - hit._m0.y;
    float _516 = (_303 - _244) * 0.00048828125;
    float _518 = (_304 - _245) * 0.00048828125;
    float _521 = (_362 - _244) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _544 = _439 - _401;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _549 = fma(_546, gl_ObjectToWorldEXT[2u].x, fma(_545, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _544));
    float _552 = fma(_546, gl_ObjectToWorldEXT[2u].y, fma(_545, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _544));
    float _555 = fma(_546, gl_ObjectToWorldEXT[2u].z, fma(_545, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _544));
    float _556 = _477 - _401;
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _561 = fma(_558, gl_ObjectToWorldEXT[2u].x, fma(_557, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _556));
    float _564 = fma(_558, gl_ObjectToWorldEXT[2u].y, fma(_557, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _556));
    float _567 = fma(_558, gl_ObjectToWorldEXT[2u].z, fma(_557, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _556));
    float _568 = (((_303 * hit._m0.x) + (_244 * _482)) + (_362 * hit._m0.y)) * 0.00048828125;
    float _569 = (((_304 * hit._m0.x) + (_245 * _482)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _573 = (((float(_204) * _482) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _576 = (((float(_205) * _482) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _579 = (((float(_206) * _482) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = _573 * 0.0078740157186985015869140625;
    float _582 = _576 * 0.0078740157186985015869140625;
    float _583 = _579 * 0.0078740157186985015869140625;
    float _596 = ((((float(_216 & 255u) * _482) + (-127.0)) + (float(_278 & 255u) * hit._m0.x)) + (float(_337 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float((_216 >> 8u) & 255u) * _482) + (-127.0)) + (float((_278 >> 8u) & 255u) * hit._m0.x)) + (float((_337 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_216 >> 16u) & 255u) * _482) + (-127.0)) + (float((_278 >> 16u) & 255u) * hit._m0.x)) + (float((_337 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float(_216 >> 24u) * _482) + (-127.0)) + (float(_278 >> 24u) * hit._m0.x)) + (float(_337 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((_597 * _583) - (_598 * _582)) * _599;
    float _610 = ((_598 * _580) - (_596 * _583)) * _599;
    float _611 = ((_596 * _582) - (_597 * _580)) * _599;
    float _615 = inversesqrt(dot(vec3(_609, _610, _611), vec3(_609, _610, _611)));
    float _633 = cbMtdParam._m0[15u].y + _568;
    float _634 = cbMtdParam._m0[15u].z + _569;
    uvec2 _646 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0, int(0u)));
    bool _651 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _704;
    if (_651)
    {
        float _662 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _668 = (_567 * _552) - (_564 * _555);
        float _671 = (_561 * _555) - (_567 * _549);
        float _674 = (_564 * _549) - (_561 * _552);
        float _701 = ((log2((((float(_646.y) * 0.5) * float(_646.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_671 * _671) + (_674 * _674)) + (_668 * _668)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_662 * gl_WorldRayDirectionEXT.x, _662 * gl_WorldRayDirectionEXT.y, _662 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _704 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    }
    else
    {
        _704 = 0.0;
    }
    vec4 _708 = textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _633) + cbTextureTilingScale._m0[0u].z, (_634 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _704);
    float _713 = _708.x * cbMtdParam._m0[9u].w;
    float _714 = _708.y * cbMtdParam._m0[10u].x;
    float _715 = _708.z * cbMtdParam._m0[10u].y;
    float _729 = cbMtdParam._m0[17u].y + _568;
    float _730 = cbMtdParam._m0[17u].z + _569;
    uvec2 _743 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5, int(0u)));
    float _794;
    if (_651)
    {
        float _754 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _760 = (_567 * _552) - (_564 * _555);
        float _763 = (_561 * _555) - (_567 * _549);
        float _766 = (_564 * _549) - (_561 * _552);
        float _792 = ((log2((((float(_743.y) * 0.5) * float(_743.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_763 * _763) + (_766 * _766)) + (_760 * _760)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_754 * gl_WorldRayDirectionEXT.x, _754 * gl_WorldRayDirectionEXT.y, _754 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _794 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    }
    else
    {
        _794 = 0.0;
    }
    vec4 _796 = textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _729) + cbTextureTilingScale._m0[5u].z, (_730 * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _794);
    float _808 = log2(0.0);
    float _810 = exp2(_808 * cbMtdParam._m0[13u].y);
    float _1627 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _811 = isnan(1.0) ? _1627 : (isnan(_1627) ? 1.0 : min(_1627, 1.0));
    float _818 = (_811 * ((_796.x * cbMtdParam._m0[11u].w) - _713)) + _713;
    float _819 = (_811 * ((_796.y * cbMtdParam._m0[12u].x) - _714)) + _714;
    float _820 = (_811 * ((_796.z * cbMtdParam._m0[12u].y) - _715)) + _715;
    uvec2 _833 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2, int(0u)));
    float _884;
    if (_651)
    {
        float _844 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _850 = (_567 * _552) - (_564 * _555);
        float _853 = (_561 * _555) - (_567 * _549);
        float _856 = (_564 * _549) - (_561 * _552);
        float _882 = ((log2((((float(_833.y) * 0.5) * float(_833.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_853 * _853) + (_856 * _856)) + (_850 * _850)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_844 * gl_WorldRayDirectionEXT.x, _844 * gl_WorldRayDirectionEXT.y, _844 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _884 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    }
    else
    {
        _884 = 0.0;
    }
    float _890 = textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _633) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _634) + cbTextureTilingScale._m0[2u].w), _884).x + cbMtdParam._m0[12u].w;
    uvec2 _906 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6, int(0u)));
    float _957;
    if (_651)
    {
        float _917 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _923 = (_567 * _552) - (_564 * _555);
        float _926 = (_561 * _555) - (_567 * _549);
        float _929 = (_564 * _549) - (_561 * _552);
        float _955 = ((log2((((float(_906.y) * 0.5) * float(_906.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_926 * _926) + (_929 * _929)) + (_923 * _923)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_917 * gl_WorldRayDirectionEXT.x, _917 * gl_WorldRayDirectionEXT.y, _917 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _957 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    }
    else
    {
        _957 = 0.0;
    }
    float _965 = (((cbMtdParam._m0[14u].z - _890) + textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _729) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _730) + cbTextureTilingScale._m0[6u].w), _957).x) * _811) + _890;
    uvec2 _977 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1, int(0u)));
    float _1028;
    if (_651)
    {
        float _988 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _994 = (_567 * _552) - (_564 * _555);
        float _997 = (_561 * _555) - (_567 * _549);
        float _1000 = (_564 * _549) - (_561 * _552);
        float _1026 = ((log2((((float(_977.y) * 0.5) * float(_977.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_997 * _997) + (_1000 * _1000)) + (_994 * _994)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_988 * gl_WorldRayDirectionEXT.x, _988 * gl_WorldRayDirectionEXT.y, _988 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _1028 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    }
    else
    {
        _1028 = 0.0;
    }
    vec4 _1031 = textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _633) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _634) + cbTextureTilingScale._m0[1u].w), _1028);
    float _1033 = _1031.x;
    float _1034 = _1031.y;
    float _1035 = _1031.z;
    uvec2 _1047 = uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7, int(0u)));
    float _1051 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1052 = _1051 * gl_WorldRayDirectionEXT.x;
    float _1053 = _1051 * gl_WorldRayDirectionEXT.y;
    float _1054 = _1051 * gl_WorldRayDirectionEXT.z;
    float _1098;
    if (_651)
    {
        float _1064 = (_567 * _552) - (_564 * _555);
        float _1067 = (_561 * _555) - (_567 * _549);
        float _1070 = (_564 * _549) - (_561 * _552);
        float _1096 = ((log2((((float(_1047.y) * 0.5) * float(_1047.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_1067 * _1067) + (_1070 * _1070)) + (_1064 * _1064)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1052, _1053, _1054), vec3(_580, _582, _583))));
        _1098 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    }
    else
    {
        _1098 = 0.0;
    }
    vec4 _1100 = textureLod(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_Hole_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _729) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _730) + cbTextureTilingScale._m0[7u].w), _1098);
    float _1113 = ((_1100.z - _1035) * _811) + _1035;
    float _1116 = ((((_1100.x - _1033) * _811) + _1033) * 2.0) + (-1.0);
    float _1118 = ((((_1100.y - _1034) * _811) + _1034) * 2.0) + (-1.0);
    float _1119 = dot(vec2(_1116, _1118), vec2(_1116, _1118));
    float _1658 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _1124 = sqrt(1.0 - (isnan(1.0) ? _1658 : (isnan(_1658) ? 1.0 : min(_1658, 1.0))));
    bool _1129 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _1144 = fma(_1124, _580, fma(_1118, _596, (_615 * _609) * _1116));
    float _1147 = fma(_1124, _582, fma(_1118, _597, (_615 * _610) * _1116));
    float _1150 = fma(_1124, _583, fma(_1118, _598, (_615 * _611) * _1116));
    float _1154 = inversesqrt(dot(vec3(_1144, _1147, _1150), vec3(_1144, _1147, _1150)));
    float _1155 = _1154 * _1144;
    float _1156 = _1154 * _1147;
    float _1157 = _1154 * _1150;
    float _1169 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1170 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1171 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1172 = (-0.0) - _1052;
    float _1174 = (-0.0) - _1053;
    float _1175 = (-0.0) - _1054;
    float _1181 = float(gl_LaunchIDEXT.x);
    float _1182 = float(gl_LaunchIDEXT.y);
    float _1185 = float(gl_LaunchSizeEXT.x);
    float _1199 = fract(fract(sin(dot(vec2(_1181 / _1185, _1182 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1212 = fract(fract(sin(dot(vec2((_1181 + 128.0) / _1185, (_1182 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1213 = 1.0 - _965;
    float _1214 = _1213 * _818;
    float _1215 = _1213 * _819;
    float _1216 = _1213 * _820;
    float _1221 = _965 * (_818 + (-0.039999999105930328369140625));
    float _1222 = _965 * (_819 + (-0.039999999105930328369140625));
    float _1223 = _965 * (_820 + (-0.039999999105930328369140625));
    float _1224 = _1221 + 0.039999999105930328369140625;
    float _1226 = _1222 + 0.039999999105930328369140625;
    float _1227 = _1223 + 0.039999999105930328369140625;
    _66._m0 = 1u;
    uvec4 _1237 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1238 = _1237.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1238, _1237.w, _1238, vec3(_1169, _1170, _1171), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    if (_66._m0 == 0u)
    {
        float _1258 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1155, _1156, _1157));
        float _1669 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1261 = isnan(1.0) ? _1669 : (isnan(_1669) ? 1.0 : min(_1669, 1.0));
        float _1280 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1113) * 0.949999988079071044921875);
        float _1281 = _1280 * _1280;
        float _1282 = g_sceneCB._m0[4u].x - _1052;
        float _1283 = g_sceneCB._m0[4u].y - _1053;
        float _1284 = g_sceneCB._m0[4u].z - _1054;
        float _1288 = inversesqrt(dot(vec3(_1282, _1283, _1284), vec3(_1282, _1283, _1284)));
        float _1289 = _1288 * _1282;
        float _1290 = _1288 * _1283;
        float _1291 = _1288 * _1284;
        float _1292 = dot(vec3(_1155, _1156, _1157), vec3(g_sceneCB._m0[4u].xyz));
        float _1680 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1295 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
        float _1296 = dot(vec3(_1155, _1156, _1157), vec3(_1172, _1174, _1175));
        float _1691 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1299 = isnan(1.0) ? _1691 : (isnan(_1691) ? 1.0 : min(_1691, 1.0));
        float _1300 = dot(vec3(_1155, _1156, _1157), vec3(_1289, _1290, _1291));
        float _1702 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1303 = isnan(1.0) ? _1702 : (isnan(_1702) ? 1.0 : min(_1702, 1.0));
        float _1304 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1289, _1290, _1291));
        float _1713 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1308 = _1281 * _1281;
        float _1312 = ((_1303 * _1303) * (_1308 + (-1.0))) + 1.0;
        float _1321 = exp2(log2(1.0 - (isnan(1.0) ? _1713 : (isnan(_1713) ? 1.0 : min(_1713, 1.0)))) * 5.0);
        float _1332 = 1.0 - _1281;
        float _1343 = (0.5 / (((_1299 * ((_1295 * _1332) + _1281)) + 9.9999999392252902907785028219223e-09) + (((_1299 * _1332) + _1281) * _1295))) * _1295;
        float _1724 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1345 = (isnan(1.0) ? _1724 : (isnan(_1724) ? 1.0 : min(_1724, 1.0))) * (_1308 / ((_1312 * _1312) * 3.141590118408203125));
        _1352 = ((_1214 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1261;
        _1353 = ((_1215 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1261;
        _1354 = ((_1216 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1261;
        _1355 = (((_1321 * (0.959999978542327880859375 - _1221)) + _1224) * g_sceneCB._m0[5u].x) * _1345;
        _1356 = (((_1321 * (0.959999978542327880859375 - _1222)) + _1226) * g_sceneCB._m0[5u].y) * _1345;
        _1357 = (((_1321 * (0.959999978542327880859375 - _1223)) + _1227) * g_sceneCB._m0[5u].z) * _1345;
    }
    else
    {
        _1352 = 0.0;
        _1353 = 0.0;
        _1354 = 0.0;
        _1355 = 0.0;
        _1356 = 0.0;
        _1357 = 0.0;
    }
    bool _1359 = abs(_1156) < 0.89999997615814208984375;
    float _1361 = float(_1359);
    float _1362 = _1359 ? 0.0 : 1.0;
    float _1365 = (_1361 * _1157) - (_1362 * _1156);
    float _1366 = _1362 * _1155;
    float _1368 = (-0.0) - (_1155 * _1361);
    float _1372 = inversesqrt(dot(vec3(_1365, _1366, _1368), vec3(_1365, _1366, _1368)));
    float _1373 = _1365 * _1372;
    float _1374 = _1366 * _1372;
    float _1375 = _1372 * _1368;
    float _1378 = (_1374 * _1157) - (_1375 * _1156);
    float _1381 = (_1375 * _1155) - (_1373 * _1157);
    float _1384 = (_1373 * _1156) - (_1374 * _1155);
    float _1386;
    float _1394;
    float _1385 = 0.0;
    uint _1387 = 0u;
    float _1391;
    bool _1393;
    for (;;)
    {
        _1391 = (float(_1387) + _1199) * 0.03125;
        _1393 = _1387 == 0u;
        float frontier_phi_51_pred;
        if (_1393)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1538;
            float _1539;
            uint _1541;
            _1538 = 0.0;
            _1539 = 0.5;
            _1541 = _1387;
            float _1395;
            for (;;)
            {
                _1395 = ((_1541 & 1u) != 0u) ? (_1539 + _1538) : _1538;
                uint _1542 = _1541 >> 1u;
                if (_1542 == 0u)
                {
                    break;
                }
                else
                {
                    _1538 = _1395;
                    _1539 *= 0.5;
                    _1541 = _1542;
                }
            }
            frontier_phi_51_pred = _1395;
        }
        _1394 = frontier_phi_51_pred;
        float _1396 = _1394 + _1212;
        float _1400 = sqrt(_1391);
        float _1401 = ((_1396 > 1.0) ? (_1396 + (-1.0)) : _1396) * 6.283185482025146484375;
        float _1404 = cos(_1401) * _1400;
        float _1406 = sin(_1401) * _1400;
        float _1408 = sqrt(1.0 - _1391);
        float _1421 = ((_1408 * _1155) + (_1404 * _1378)) + (_1406 * _1373);
        float _1422 = ((_1408 * _1156) + (_1404 * _1381)) + (_1406 * _1374);
        float _1423 = ((_1408 * _1157) + (_1404 * _1384)) + (_1406 * _1375);
        _65._m0 = 1u;
        uvec4 _1427 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1428 = _1427.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1428, _1427.w, _1428, vec3(_1169, _1170, _1171), 9.9999997473787516355514526367188e-05, vec3(_1421, _1422, _1423), 10000.0, 1);
        float _1434 = dot(vec3(_1155, _1156, _1157), vec3(_1421, _1422, _1423));
        float _1735 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1437 = isnan(1.0) ? _1735 : (isnan(_1735) ? 1.0 : min(_1735, 1.0));
        _1386 = ((float(_65._m0 == 0u) * _1437) / (_1437 * 0.3183098733425140380859375)) + _1385;
        uint _1388 = _1387 + 1u;
        if (_1388 == 32u)
        {
            break;
        }
        else
        {
            _1385 = _1386;
            _1387 = _1388;
            continue;
        }
    }
    float _1445 = _1386 * 0.009947183541953563690185546875;
    float _1450 = dot(vec3(_1052, _1053, _1054), vec3(_1155, _1156, _1157)) * 2.0;
    vec4 _1464 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1052 - (_1450 * _1155), _1053 - (_1450 * _1156), _1054 - (_1450 * _1157)), 4.0 - (_1113 * 4.0));
    float _1469 = dot(vec3(_1172, _1174, _1175), vec3(_1155, _1156, _1157));
    float _1746 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    float _1479 = exp2(log2(1.0 - (isnan(1.0) ? _1746 : (isnan(_1746) ? 1.0 : min(_1746, 1.0)))) * 5.0);
    vec4 _1491 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1155, _1156, _1157), 0.0);
    float _1503 = ((_1352 + (_1129 ? cbMtdParam._m0[17u].w : cbMtdParam._m0[10u].w)) + _1355) + (((_1491.x * _1214) + (((_1479 * (0.959999978542327880859375 - _1221)) + _1224) * _1464.x)) * _1445);
    float _1508 = ((_1353 + (_1129 ? cbMtdParam._m0[18u].x : cbMtdParam._m0[11u].x)) + _1356) + (((_1491.y * _1215) + (((_1479 * (0.959999978542327880859375 - _1222)) + _1226) * _1464.y)) * _1445);
    float _1513 = ((_1354 + (_1129 ? cbMtdParam._m0[18u].y : cbMtdParam._m0[11u].y)) + _1357) + (((_1491.z * _1216) + (((_1479 * (0.959999978542327880859375 - _1223)) + _1227) * _1464.z)) * _1445);
    float _1757 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
    float _1768 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    float _1779 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    bool _1521 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1532;
    _1532.x = _1521 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1757 : (isnan(_1757) ? 1.0 : min(_1757, 1.0)));
    _1532.y = _1521 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1768 : (isnan(_1768) ? 1.0 : min(_1768, 1.0)));
    _1532.z = _1521 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1779 : (isnan(_1779) ? 1.0 : min(_1779, 1.0)));
    payload._m0 = _1532;
}


