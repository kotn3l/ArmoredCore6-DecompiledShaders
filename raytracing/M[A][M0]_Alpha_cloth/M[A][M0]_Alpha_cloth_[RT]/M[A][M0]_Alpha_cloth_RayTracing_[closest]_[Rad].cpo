#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _929;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _153 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _154 >> 16u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        _159 = frontier_phi_3_2_ladder_2;
        _161 = frontier_phi_3_2_ladder_1;
        _162 = frontier_phi_3_2_ladder;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _166.z;
    bool _169 = _168 != 0u;
    uint _170 = _118.w;
    bool _172 = _169 || (_170 == 0u);
    uint _174 = (_167 * _159) + 12u;
    uint _198;
    uint _199;
    uint _200;
    if (_172)
    {
        uvec4 _177 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _178 = _177.x;
        _198 = _178 & 255u;
        _199 = (_178 >> 8u) & 255u;
        _200 = (_178 >> 16u) & 255u;
    }
    else
    {
        uint _186 = _174 >> 2u;
        uvec2 _192 = uvec2(texelFetch(l_geomAttrib_0, int(_186)).x, texelFetch(l_geomAttrib_0, int(_186 + 1u)).x);
        uint _193 = _192.x;
        _198 = _193 & 65535u;
        _199 = _193 >> 16u;
        _200 = _192.y & 65535u;
    }
    uint _204 = _166.y;
    bool _205 = _168 == 0u;
    uint _208 = _205 ? 4u : ((_170 != 0u) ? 12u : 8u);
    uvec4 _217 = texelFetch(l_geomAttrib_1, int((((_204 * _159) + 4u) + (_169 ? (_208 + 4u) : _208)) >> 2u));
    uint _218 = _217.x;
    float _222 = float(int(uint(int(_218 << 16u) >> int(16u))));
    float _223 = float(int(uint(int(_218) >> int(16u))));
    uint _225 = (_167 * _161) + 12u;
    uint _247;
    uint _248;
    uint _249;
    if (_172)
    {
        uvec4 _228 = texelFetch(l_geomAttrib_0, int(_225 >> 2u));
        uint _229 = _228.x;
        _247 = _229 & 255u;
        _248 = (_229 >> 8u) & 255u;
        _249 = (_229 >> 16u) & 255u;
    }
    else
    {
        uint _235 = _225 >> 2u;
        uvec2 _241 = uvec2(texelFetch(l_geomAttrib_0, int(_235)).x, texelFetch(l_geomAttrib_0, int(_235 + 1u)).x);
        uint _242 = _241.x;
        _247 = _242 & 65535u;
        _248 = _242 >> 16u;
        _249 = _241.y & 65535u;
    }
    uint _255 = _205 ? 4u : ((_170 != 0u) ? 12u : 8u);
    uvec4 _262 = texelFetch(l_geomAttrib_1, int((((_204 * _161) + 4u) + (_169 ? (_255 + 4u) : _255)) >> 2u));
    uint _263 = _262.x;
    float _267 = float(int(uint(int(_263 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_263) >> int(16u))));
    uint _270 = (_167 * _162) + 12u;
    uint _292;
    uint _293;
    uint _294;
    if (_172)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_270 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
    }
    else
    {
        uint _280 = _270 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
    }
    uint _300 = _205 ? 4u : ((_170 != 0u) ? 12u : 8u);
    uvec4 _307 = texelFetch(l_geomAttrib_1, int((((_204 * _162) + 4u) + (_169 ? (_300 + 4u) : _300)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    bool _315 = _118.z == 0u;
    float _351;
    float _352;
    float _353;
    if (_315)
    {
        uint _318 = _159 * 3u;
        uvec3 _327 = uvec3(texelFetch(l_geomPositionBuffer, int(_318)).x, texelFetch(l_geomPositionBuffer, int(_318 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_318 + 2u)).x);
        _351 = uintBitsToFloat(_327.x);
        _352 = uintBitsToFloat(_327.y);
        _353 = uintBitsToFloat(_327.z);
    }
    else
    {
        uint _335 = _159 * 2u;
        uvec2 _341 = uvec2(texelFetch(l_geomPositionBuffer, int(_335)).x, texelFetch(l_geomPositionBuffer, int(_335 + 1u)).x);
        uint _342 = _341.x;
        _351 = unpackHalf2x16(_342).x;
        _352 = unpackHalf2x16(_342 >> 16u).x;
        _353 = unpackHalf2x16(_341.y).x;
    }
    float _389;
    float _390;
    float _391;
    if (_315)
    {
        uint _356 = _161 * 3u;
        uvec3 _365 = uvec3(texelFetch(l_geomPositionBuffer, int(_356)).x, texelFetch(l_geomPositionBuffer, int(_356 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_356 + 2u)).x);
        _389 = uintBitsToFloat(_365.x);
        _390 = uintBitsToFloat(_365.y);
        _391 = uintBitsToFloat(_365.z);
    }
    else
    {
        uint _373 = _161 * 2u;
        uvec2 _379 = uvec2(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x);
        uint _380 = _379.x;
        _389 = unpackHalf2x16(_380).x;
        _390 = unpackHalf2x16(_380 >> 16u).x;
        _391 = unpackHalf2x16(_379.y).x;
    }
    float _427;
    float _428;
    float _429;
    if (_315)
    {
        uint _394 = _162 * 3u;
        uvec3 _403 = uvec3(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_394 + 2u)).x);
        _427 = uintBitsToFloat(_403.x);
        _428 = uintBitsToFloat(_403.y);
        _429 = uintBitsToFloat(_403.z);
    }
    else
    {
        uint _411 = _162 * 2u;
        uvec2 _417 = uvec2(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x);
        uint _418 = _417.x;
        _427 = unpackHalf2x16(_418).x;
        _428 = unpackHalf2x16(_418 >> 16u).x;
        _429 = unpackHalf2x16(_417.y).x;
    }
    float _432 = (1.0 - hit._m0.x) - hit._m0.y;
    float _473 = _389 - _351;
    float _474 = _390 - _352;
    float _475 = _391 - _353;
    float _478 = fma(_475, gl_ObjectToWorldEXT[2u].x, fma(_474, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _473));
    float _481 = fma(_475, gl_ObjectToWorldEXT[2u].y, fma(_474, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _473));
    float _484 = fma(_475, gl_ObjectToWorldEXT[2u].z, fma(_474, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _473));
    float _485 = _427 - _351;
    float _486 = _428 - _352;
    float _487 = _429 - _353;
    float _490 = fma(_487, gl_ObjectToWorldEXT[2u].x, fma(_486, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _485));
    float _493 = fma(_487, gl_ObjectToWorldEXT[2u].y, fma(_486, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _485));
    float _496 = fma(_487, gl_ObjectToWorldEXT[2u].z, fma(_486, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _485));
    float _503 = (((float(_198) * _432) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _506 = (((float(_199) * _432) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _509 = (((float(_200) * _432) + (-127.0)) + (float(_249) * hit._m0.x)) + (float(_294) * hit._m0.y);
    float _510 = _503 * 0.0078740157186985015869140625;
    float _512 = _506 * 0.0078740157186985015869140625;
    float _513 = _509 * 0.0078740157186985015869140625;
    uvec2 _531 = uvec2(textureSize(M_A_M0_Alpha_snp_0_Texture2D_0, int(0u)));
    float _540 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _541 = _540 * gl_WorldRayDirectionEXT.x;
    float _542 = _540 * gl_WorldRayDirectionEXT.y;
    float _543 = _540 * gl_WorldRayDirectionEXT.z;
    float _595;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _557 = (_496 * _481) - (_493 * _484);
        float _560 = (_490 * _484) - (_496 * _478);
        float _563 = (_493 * _478) - (_490 * _481);
        float _592 = ((log2((((float(_531.y) * 0.5) * float(_531.x)) * abs((((_313 - _223) * (_267 - _222)) - ((_312 - _222) * (_268 - _223))) * 2.384185791015625e-07)) / (sqrt(((_560 * _560) + (_563 * _563)) + (_557 * _557)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))))) / abs(dot(vec3(_541, _542, _543), vec3(_510, _512, _513))));
        _595 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    }
    else
    {
        _595 = 0.0;
    }
    vec4 _599 = textureLod(sampler2D(M_A_M0_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_267 * hit._m0.x) + (_222 * _432)) + (_312 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_268 * hit._m0.x) + (_223 * _432)) + (_313 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _595);
    float _604 = _599.x * cbMtdParam._m0[9u].x;
    float _605 = _599.y * cbMtdParam._m0[9u].y;
    float _606 = _599.z * cbMtdParam._m0[9u].z;
    float _610 = inversesqrt(dot(vec3(_510, _512, _513), vec3(_510, _512, _513)));
    float _611 = _610 * _510;
    float _612 = _610 * _512;
    float _613 = _610 * _513;
    float _625 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _626 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _627 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _628 = (-0.0) - _541;
    float _630 = (-0.0) - _542;
    float _631 = (-0.0) - _543;
    float _637 = float(gl_LaunchIDEXT.x);
    float _638 = float(gl_LaunchIDEXT.y);
    float _641 = float(gl_LaunchSizeEXT.x);
    float _655 = fract(fract(sin(dot(vec2(_637 / _641, _638 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _668 = fract(fract(sin(dot(vec2((_637 + 128.0) / _641, (_638 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _60._m0 = 1u;
    uvec4 _678 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _679 = _678.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _679, _678.w, _679, vec3(_625, _626, _627), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _759;
    float _760;
    float _761;
    float _762;
    float _763;
    float _764;
    if (_60._m0 == 0u)
    {
        float _700 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_611, _612, _613));
        float _990 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
        float _703 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
        float _714 = g_sceneCB._m0[4u].x - _541;
        float _715 = g_sceneCB._m0[4u].y - _542;
        float _716 = g_sceneCB._m0[4u].z - _543;
        float _720 = inversesqrt(dot(vec3(_714, _715, _716), vec3(_714, _715, _716)));
        float _724 = dot(vec3(_611, _612, _613), vec3(g_sceneCB._m0[4u].xyz));
        float _1001 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
        float _727 = isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0));
        float _728 = dot(vec3(_611, _612, _613), vec3(_628, _630, _631));
        float _1012 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
        float _732 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_714 * _720, _715 * _720, _716 * _720));
        float _1023 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        float _743 = (exp2(log2(1.0 - (isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _749 = (0.5 / ((_727 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1012 : (isnan(_1012) ? 1.0 : min(_1012, 1.0))))) * _727;
        float _1034 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
        float _751 = (isnan(1.0) ? _1034 : (isnan(_1034) ? 1.0 : min(_1034, 1.0))) * 0.31831014156341552734375;
        _759 = ((_604 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _703;
        _760 = ((_605 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _703;
        _761 = ((_606 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _703;
        _762 = (_743 * g_sceneCB._m0[5u].x) * _751;
        _763 = (_743 * g_sceneCB._m0[5u].y) * _751;
        _764 = (_743 * g_sceneCB._m0[5u].z) * _751;
    }
    else
    {
        _759 = 0.0;
        _760 = 0.0;
        _761 = 0.0;
        _762 = 0.0;
        _763 = 0.0;
        _764 = 0.0;
    }
    bool _766 = abs(_612) < 0.89999997615814208984375;
    float _768 = float(_766);
    float _769 = _766 ? 0.0 : 1.0;
    float _772 = (_768 * _613) - (_769 * _612);
    float _773 = _769 * _611;
    float _775 = (-0.0) - (_611 * _768);
    float _779 = inversesqrt(dot(vec3(_772, _773, _775), vec3(_772, _773, _775)));
    float _780 = _772 * _779;
    float _781 = _773 * _779;
    float _782 = _779 * _775;
    float _785 = (_781 * _613) - (_782 * _612);
    float _788 = (_782 * _611) - (_780 * _613);
    float _791 = (_780 * _612) - (_781 * _611);
    float _793;
    float _801;
    float _792 = 0.0;
    uint _794 = 0u;
    float _798;
    bool _800;
    for (;;)
    {
        _798 = (float(_794) + _655) * 0.03125;
        _800 = _794 == 0u;
        float frontier_phi_29_pred;
        if (_800)
        {
            frontier_phi_29_pred = 0.0;
        }
        else
        {
            float _934;
            float _935;
            uint _937;
            _934 = 0.0;
            _935 = 0.5;
            _937 = _794;
            float _802;
            for (;;)
            {
                _802 = ((_937 & 1u) != 0u) ? (_935 + _934) : _934;
                uint _938 = _937 >> 1u;
                if (_938 == 0u)
                {
                    break;
                }
                else
                {
                    _934 = _802;
                    _935 *= 0.5;
                    _937 = _938;
                }
            }
            frontier_phi_29_pred = _802;
        }
        _801 = frontier_phi_29_pred;
        float _803 = _801 + _668;
        float _808 = sqrt(_798);
        float _809 = ((_803 > 1.0) ? (_803 + (-1.0)) : _803) * 6.283185482025146484375;
        float _812 = cos(_809) * _808;
        float _814 = sin(_809) * _808;
        float _816 = sqrt(1.0 - _798);
        float _829 = ((_816 * _611) + (_812 * _785)) + (_814 * _780);
        float _830 = ((_816 * _612) + (_812 * _788)) + (_814 * _781);
        float _831 = ((_816 * _613) + (_812 * _791)) + (_814 * _782);
        _59._m0 = 1u;
        uvec4 _835 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _836 = _835.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _836, _835.w, _836, vec3(_625, _626, _627), 9.9999997473787516355514526367188e-05, vec3(_829, _830, _831), 10000.0, 1);
        float _842 = dot(vec3(_611, _612, _613), vec3(_829, _830, _831));
        float _1045 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _845 = isnan(1.0) ? _1045 : (isnan(_1045) ? 1.0 : min(_1045, 1.0));
        _793 = ((float(_59._m0 == 0u) * _845) / (_845 * 0.3183098733425140380859375)) + _792;
        uint _795 = _794 + 1u;
        if (_795 == 32u)
        {
            break;
        }
        else
        {
            _792 = _793;
            _794 = _795;
            continue;
        }
    }
    float _853 = _793 * 0.009947183541953563690185546875;
    float _858 = dot(vec3(_541, _542, _543), vec3(_611, _612, _613)) * 2.0;
    vec4 _870 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_541 - (_858 * _611), _542 - (_858 * _612), _543 - (_858 * _613)), 4.0);
    float _875 = dot(vec3(_628, _630, _631), vec3(_611, _612, _613));
    float _1056 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _884 = (exp2(log2(1.0 - (isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _890 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_611, _612, _613), 0.0);
    float _901 = (_762 + _759) + (((_890.x * _604) + (_884 * _870.x)) * _853);
    float _905 = (_763 + _760) + (((_890.y * _605) + (_884 * _870.y)) * _853);
    float _909 = (_764 + _761) + (((_890.z * _606) + (_884 * _870.z)) * _853);
    float _1067 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _1078 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _1089 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    bool _917 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _928;
    _928.x = _917 ? ((_503 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0)));
    _928.y = _917 ? ((_506 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1078 : (isnan(_1078) ? 1.0 : min(_1078, 1.0)));
    _928.z = _917 ? ((_509 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1089 : (isnan(_1089) ? 1.0 : min(_1089, 1.0)));
    payload._m0 = _928;
}


