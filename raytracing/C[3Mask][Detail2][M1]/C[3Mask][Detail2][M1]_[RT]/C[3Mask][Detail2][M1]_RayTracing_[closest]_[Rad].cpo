#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2275;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + (_183 ? (_239 + 4u) : _239)) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _254 = _181 * _175;
    uint _255 = _254 + 12u;
    uint _276;
    uint _277;
    uint _278;
    uint _279;
    if (_186)
    {
        uvec4 _257 = texelFetch(l_geomAttrib_0, int(_255 >> 2u));
        uint _258 = _257.x;
        _276 = _258 & 255u;
        _277 = (_258 >> 8u) & 255u;
        _278 = (_258 >> 16u) & 255u;
        _279 = 16u;
    }
    else
    {
        uint _264 = _255 >> 2u;
        uvec2 _270 = uvec2(texelFetch(l_geomAttrib_0, int(_264)).x, texelFetch(l_geomAttrib_0, int(_264 + 1u)).x);
        uint _271 = _270.x;
        _276 = _271 & 65535u;
        _277 = _271 >> 16u;
        _278 = _270.y & 65535u;
        _279 = 20u;
    }
    uvec4 _285 = texelFetch(l_geomAttrib_0, int((_279 + _254) >> 2u));
    uint _286 = _285.x;
    uint _298;
    if (_238)
    {
        _298 = _279 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _279 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _279 + 12u;
        }
        _298 = frontier_phi_16_17_ladder;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + (_183 ? (_298 + 4u) : _298)) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    uint _313 = _181 * _176;
    uint _314 = _313 + 12u;
    uint _335;
    uint _336;
    uint _337;
    uint _338;
    if (_186)
    {
        uvec4 _316 = texelFetch(l_geomAttrib_0, int(_314 >> 2u));
        uint _317 = _316.x;
        _335 = _317 & 255u;
        _336 = (_317 >> 8u) & 255u;
        _337 = (_317 >> 16u) & 255u;
        _338 = 16u;
    }
    else
    {
        uint _323 = _314 >> 2u;
        uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
        uint _330 = _329.x;
        _335 = _330 & 65535u;
        _336 = _330 >> 16u;
        _337 = _329.y & 65535u;
        _338 = 20u;
    }
    uvec4 _344 = texelFetch(l_geomAttrib_0, int((_338 + _313) >> 2u));
    uint _345 = _344.x;
    uint _357;
    if (_238)
    {
        _357 = _338 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _338 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _338 + 12u;
        }
        _357 = frontier_phi_23_24_ladder;
    }
    uvec4 _365 = texelFetch(l_geomAttrib_0, int(((_313 + 4u) + (_183 ? (_357 + 4u) : _357)) >> 2u));
    uint _366 = _365.x;
    float _370 = float(int(uint(int(_366 << 16u) >> int(16u))));
    float _371 = float(int(uint(int(_366) >> int(16u))));
    bool _373 = _132.z == 0u;
    float _409;
    float _410;
    float _411;
    if (_373)
    {
        uint _376 = _173 * 3u;
        uvec3 _385 = uvec3(texelFetch(l_geomPositionBuffer, int(_376)).x, texelFetch(l_geomPositionBuffer, int(_376 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_376 + 2u)).x);
        _409 = uintBitsToFloat(_385.x);
        _410 = uintBitsToFloat(_385.y);
        _411 = uintBitsToFloat(_385.z);
    }
    else
    {
        uint _393 = _173 * 2u;
        uvec2 _399 = uvec2(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x);
        uint _400 = _399.x;
        _409 = unpackHalf2x16(_400).x;
        _410 = unpackHalf2x16(_400 >> 16u).x;
        _411 = unpackHalf2x16(_399.y).x;
    }
    float _447;
    float _448;
    float _449;
    if (_373)
    {
        uint _414 = _175 * 3u;
        uvec3 _423 = uvec3(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_414 + 2u)).x);
        _447 = uintBitsToFloat(_423.x);
        _448 = uintBitsToFloat(_423.y);
        _449 = uintBitsToFloat(_423.z);
    }
    else
    {
        uint _431 = _175 * 2u;
        uvec2 _437 = uvec2(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x);
        uint _438 = _437.x;
        _447 = unpackHalf2x16(_438).x;
        _448 = unpackHalf2x16(_438 >> 16u).x;
        _449 = unpackHalf2x16(_437.y).x;
    }
    float _485;
    float _486;
    float _487;
    if (_373)
    {
        uint _452 = _176 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _176 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _490 = (1.0 - hit._m0.x) - hit._m0.y;
    float _524 = (_311 - _252) * 0.00048828125;
    float _526 = (_312 - _253) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _530 = (_371 - _253) * 0.00048828125;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _554 = _449 - _411;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _566 = _487 - _411;
    float _569 = fma(_566, gl_ObjectToWorldEXT[2u].x, fma(_565, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _564));
    float _572 = fma(_566, gl_ObjectToWorldEXT[2u].y, fma(_565, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _564));
    float _575 = fma(_566, gl_ObjectToWorldEXT[2u].z, fma(_565, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _564));
    float _576 = (((_311 * hit._m0.x) + (_252 * _490)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _577 = (((_312 * hit._m0.x) + (_253 * _490)) + (_371 * hit._m0.y)) * 0.00048828125;
    float _581 = (((float(_212) * _490) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _584 = (((float(_213) * _490) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = (((float(_214) * _490) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _588 = _581 * 0.0078740157186985015869140625;
    float _590 = _584 * 0.0078740157186985015869140625;
    float _591 = _587 * 0.0078740157186985015869140625;
    float _604 = ((((float(_224 & 255u) * _490) + (-127.0)) + (float(_286 & 255u) * hit._m0.x)) + (float(_345 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_224 >> 8u) & 255u) * _490) + (-127.0)) + (float((_286 >> 8u) & 255u) * hit._m0.x)) + (float((_345 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float((_224 >> 16u) & 255u) * _490) + (-127.0)) + (float((_286 >> 16u) & 255u) * hit._m0.x)) + (float((_345 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float(_224 >> 24u) * _490) + (-127.0)) + (float(_286 >> 24u) * hit._m0.x)) + (float(_345 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _617 = ((_605 * _591) - (_606 * _590)) * _607;
    float _618 = ((_606 * _588) - (_604 * _591)) * _607;
    float _619 = ((_604 * _590) - (_605 * _588)) * _607;
    float _623 = inversesqrt(dot(vec3(_617, _618, _619), vec3(_617, _618, _619)));
    uvec2 _644 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_1, int(0u)));
    bool _649 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _702;
    if (_649)
    {
        float _660 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _666 = (_575 * _560) - (_572 * _563);
        float _669 = (_569 * _563) - (_575 * _557);
        float _672 = (_572 * _557) - (_569 * _560);
        float _699 = ((log2((((float(_644.y) * 0.5) * float(_644.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_669 * _669) + (_672 * _672)) + (_666 * _666)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_660 * gl_WorldRayDirectionEXT.x, _660 * gl_WorldRayDirectionEXT.y, _660 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _702 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    }
    else
    {
        _702 = 0.0;
    }
    vec4 _706 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _576) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _577) + cbTextureTilingScale._m0[1u].w), _702);
    float _711 = _706.x * cbMtdParam._m0[10u].x;
    float _712 = _706.y * cbMtdParam._m0[10u].y;
    float _713 = _706.z * cbMtdParam._m0[10u].z;
    uvec2 _731 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_2, int(0u)));
    float _782;
    if (_649)
    {
        float _742 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _748 = (_575 * _560) - (_572 * _563);
        float _751 = (_569 * _563) - (_575 * _557);
        float _754 = (_572 * _557) - (_569 * _560);
        float _780 = ((log2((((float(_731.y) * 0.5) * float(_731.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_751 * _751) + (_754 * _754)) + (_748 * _748)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_742 * gl_WorldRayDirectionEXT.x, _742 * gl_WorldRayDirectionEXT.y, _742 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _782 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    }
    else
    {
        _782 = 0.0;
    }
    vec4 _784 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _576) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _577) + cbTextureTilingScale._m0[11u].w), _782);
    uvec2 _810 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_0, int(0u)));
    float _861;
    if (_649)
    {
        float _821 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _827 = (_575 * _560) - (_572 * _563);
        float _830 = (_569 * _563) - (_575 * _557);
        float _833 = (_572 * _557) - (_569 * _560);
        float _859 = ((log2((((float(_810.y) * 0.5) * float(_810.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_830 * _830) + (_833 * _833)) + (_827 * _827)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_821 * gl_WorldRayDirectionEXT.x, _821 * gl_WorldRayDirectionEXT.y, _821 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _861 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    }
    else
    {
        _861 = 0.0;
    }
    uvec2 _882 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_3, int(0u)));
    float _933;
    if (_649)
    {
        float _893 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _899 = (_575 * _560) - (_572 * _563);
        float _902 = (_569 * _563) - (_575 * _557);
        float _905 = (_572 * _557) - (_569 * _560);
        float _931 = ((log2((((float(_882.y) * 0.5) * float(_882.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_902 * _902) + (_905 * _905)) + (_899 * _899)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_893 * gl_WorldRayDirectionEXT.x, _893 * gl_WorldRayDirectionEXT.y, _893 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _933 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    }
    else
    {
        _933 = 0.0;
    }
    float _938 = cbMtdParam._m0[20u].z * textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * _576) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _577) + cbTextureTilingScale._m0[16u].w), _933).x;
    float _947 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * _576) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * _577) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _861).x) * 2.0) - _938)) + 1.0;
    float _2399 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    float _948 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
    float _955 = (_948 * ((_784.x * cbMtdParam._m0[11u].x) - _711)) + _711;
    float _956 = (_948 * ((_784.y * cbMtdParam._m0[11u].y) - _712)) + _712;
    float _957 = (_948 * ((_784.z * cbMtdParam._m0[11u].z) - _713)) + _713;
    uvec2 _974 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_8, int(0u)));
    float _1025;
    if (_649)
    {
        float _985 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _991 = (_575 * _560) - (_572 * _563);
        float _994 = (_569 * _563) - (_575 * _557);
        float _997 = (_572 * _557) - (_569 * _560);
        float _1023 = ((log2((((float(_974.y) * 0.5) * float(_974.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_994 * _994) + (_997 * _997)) + (_991 * _991)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_985 * gl_WorldRayDirectionEXT.x, _985 * gl_WorldRayDirectionEXT.y, _985 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1025 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    }
    else
    {
        _1025 = 0.0;
    }
    vec4 _1027 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * _576) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _577) + cbTextureTilingScale._m0[20u].w), _1025);
    float _1096;
    if (_649)
    {
        float _1056 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1062 = (_575 * _560) - (_572 * _563);
        float _1065 = (_569 * _563) - (_575 * _557);
        float _1068 = (_572 * _557) - (_569 * _560);
        float _1094 = ((log2((((float(_810.y) * 0.5) * float(_810.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1065 * _1065) + (_1068 * _1068)) + (_1062 * _1062)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1056 * gl_WorldRayDirectionEXT.x, _1056 * gl_WorldRayDirectionEXT.y, _1056 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1096 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    }
    else
    {
        _1096 = 0.0;
    }
    float _1110 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * _576) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * _577) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1096).y) * 2.0) - _938)) + 1.0;
    float _2420 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    float _1111 = isnan(1.0) ? _2420 : (isnan(_2420) ? 1.0 : min(_2420, 1.0));
    float _1118 = (_1111 * ((_1027.x * cbMtdParam._m0[12u].x) - _955)) + _955;
    float _1119 = (_1111 * ((_1027.y * cbMtdParam._m0[12u].y) - _956)) + _956;
    float _1120 = (_1111 * ((_1027.z * cbMtdParam._m0[12u].z) - _957)) + _957;
    uvec2 _1138 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_11, int(0u)));
    float _1189;
    if (_649)
    {
        float _1149 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1155 = (_575 * _560) - (_572 * _563);
        float _1158 = (_569 * _563) - (_575 * _557);
        float _1161 = (_572 * _557) - (_569 * _560);
        float _1187 = ((log2((((float(_1138.y) * 0.5) * float(_1138.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1158 * _1158) + (_1161 * _1161)) + (_1155 * _1155)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1149 * gl_WorldRayDirectionEXT.x, _1149 * gl_WorldRayDirectionEXT.y, _1149 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1189 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
    }
    else
    {
        _1189 = 0.0;
    }
    vec4 _1191 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _576) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _577) + cbTextureTilingScale._m0[2u].w), _1189);
    float _1257;
    if (_649)
    {
        float _1217 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1223 = (_575 * _560) - (_572 * _563);
        float _1226 = (_569 * _563) - (_575 * _557);
        float _1229 = (_572 * _557) - (_569 * _560);
        float _1255 = ((log2((((float(_810.y) * 0.5) * float(_810.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1226 * _1226) + (_1229 * _1229)) + (_1223 * _1223)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1217 * gl_WorldRayDirectionEXT.x, _1217 * gl_WorldRayDirectionEXT.y, _1217 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    float _1268 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * _576) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * _577) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1257).z) * 2.0) - _938)) + 1.0;
    float _2441 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
    float _1269 = isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0));
    float _1276 = (_1269 * ((_1191.x * cbMtdParam._m0[13u].x) - _1118)) + _1118;
    float _1277 = (_1269 * ((_1191.y * cbMtdParam._m0[13u].y) - _1119)) + _1119;
    float _1278 = (_1269 * ((_1191.z * cbMtdParam._m0[13u].z) - _1120)) + _1120;
    uvec2 _1291 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_14, int(0u)));
    float _1342;
    if (_649)
    {
        float _1302 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1308 = (_575 * _560) - (_572 * _563);
        float _1311 = (_569 * _563) - (_575 * _557);
        float _1314 = (_572 * _557) - (_569 * _560);
        float _1340 = ((log2((((float(_1291.y) * 0.5) * float(_1291.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1311 * _1311) + (_1314 * _1314)) + (_1308 * _1308)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1302 * gl_WorldRayDirectionEXT.x, _1302 * gl_WorldRayDirectionEXT.y, _1302 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1342 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
    }
    else
    {
        _1342 = 0.0;
    }
    vec4 _1344 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _576) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _577) + cbTextureTilingScale._m0[5u].w), _1342);
    float _1346 = _1344.x;
    uvec2 _1358 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_17, int(0u)));
    float _1409;
    if (_649)
    {
        float _1369 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1375 = (_575 * _560) - (_572 * _563);
        float _1378 = (_569 * _563) - (_575 * _557);
        float _1381 = (_572 * _557) - (_569 * _560);
        float _1407 = ((log2((((float(_1358.y) * 0.5) * float(_1358.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1378 * _1378) + (_1381 * _1381)) + (_1375 * _1375)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1369 * gl_WorldRayDirectionEXT.x, _1369 * gl_WorldRayDirectionEXT.y, _1369 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1409 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
    }
    else
    {
        _1409 = 0.0;
    }
    float _1416 = ((textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _576) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _577) + cbTextureTilingScale._m0[8u].w), _1409).x - _1346) * _948) + _1346;
    uvec2 _1429 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_18, int(0u)));
    float _1480;
    if (_649)
    {
        float _1440 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1446 = (_575 * _560) - (_572 * _563);
        float _1449 = (_569 * _563) - (_575 * _557);
        float _1452 = (_572 * _557) - (_569 * _560);
        float _1478 = ((log2((((float(_1429.y) * 0.5) * float(_1429.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1449 * _1449) + (_1452 * _1452)) + (_1446 * _1446)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1440 * gl_WorldRayDirectionEXT.x, _1440 * gl_WorldRayDirectionEXT.y, _1440 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1480 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    }
    else
    {
        _1480 = 0.0;
    }
    float _1487 = ((textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _576) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _577) + cbTextureTilingScale._m0[9u].w), _1480).x - _1416) * _1111) + _1416;
    uvec2 _1499 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_19, int(0u)));
    float _1550;
    if (_649)
    {
        float _1510 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1516 = (_575 * _560) - (_572 * _563);
        float _1519 = (_569 * _563) - (_575 * _557);
        float _1522 = (_572 * _557) - (_569 * _560);
        float _1548 = ((log2((((float(_1499.y) * 0.5) * float(_1499.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1519 * _1519) + (_1522 * _1522)) + (_1516 * _1516)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1510 * gl_WorldRayDirectionEXT.x, _1510 * gl_WorldRayDirectionEXT.y, _1510 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1550 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    }
    else
    {
        _1550 = 0.0;
    }
    float _1557 = ((textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _576) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _577) + cbTextureTilingScale._m0[10u].w), _1550).x - _1487) * _1269) + _1487;
    uvec2 _1570 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_5, int(0u)));
    float _1621;
    if (_649)
    {
        float _1581 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1587 = (_575 * _560) - (_572 * _563);
        float _1590 = (_569 * _563) - (_575 * _557);
        float _1593 = (_572 * _557) - (_569 * _560);
        float _1619 = ((log2((((float(_1570.y) * 0.5) * float(_1570.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1590 * _1590) + (_1593 * _1593)) + (_1587 * _1587)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1581 * gl_WorldRayDirectionEXT.x, _1581 * gl_WorldRayDirectionEXT.y, _1581 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1621 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
    }
    else
    {
        _1621 = 0.0;
    }
    vec4 _1624 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _576) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _577) + cbTextureTilingScale._m0[17u].w), _1621);
    float _1626 = _1624.x;
    float _1627 = _1624.y;
    float _1633 = cbMtdParam._m0[18u].y * _1624.z;
    uvec2 _1645 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_6, int(0u)));
    float _1696;
    if (_649)
    {
        float _1656 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1662 = (_575 * _560) - (_572 * _563);
        float _1665 = (_569 * _563) - (_575 * _557);
        float _1668 = (_572 * _557) - (_569 * _560);
        float _1694 = ((log2((((float(_1645.y) * 0.5) * float(_1645.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1665 * _1665) + (_1668 * _1668)) + (_1662 * _1662)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1656 * gl_WorldRayDirectionEXT.x, _1656 * gl_WorldRayDirectionEXT.y, _1656 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1696 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
    }
    else
    {
        _1696 = 0.0;
    }
    vec4 _1698 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _576) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _577) + cbTextureTilingScale._m0[18u].w), _1696);
    float _1707 = (((cbMtdParam._m0[18u].x * _1698.z) - _1633) * _948) + _1633;
    uvec2 _1719 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_15, int(0u)));
    float _1770;
    if (_649)
    {
        float _1730 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1736 = (_575 * _560) - (_572 * _563);
        float _1739 = (_569 * _563) - (_575 * _557);
        float _1742 = (_572 * _557) - (_569 * _560);
        float _1768 = ((log2((((float(_1719.y) * 0.5) * float(_1719.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1739 * _1739) + (_1742 * _1742)) + (_1736 * _1736)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1730 * gl_WorldRayDirectionEXT.x, _1730 * gl_WorldRayDirectionEXT.y, _1730 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1770 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
    }
    else
    {
        _1770 = 0.0;
    }
    vec4 _1772 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _576) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _577) + cbTextureTilingScale._m0[6u].w), _1770);
    float _1783 = (((cbMtdParam._m0[17u].w * _1772.z) - _1707) * _1111) + _1707;
    uvec2 _1795 = uvec2(textureSize(C_3Mask_Detail2_M1_snp_0_Texture2D_16, int(0u)));
    float _1799 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1800 = _1799 * gl_WorldRayDirectionEXT.x;
    float _1801 = _1799 * gl_WorldRayDirectionEXT.y;
    float _1802 = _1799 * gl_WorldRayDirectionEXT.z;
    float _1846;
    if (_649)
    {
        float _1812 = (_575 * _560) - (_572 * _563);
        float _1815 = (_569 * _563) - (_575 * _557);
        float _1818 = (_572 * _557) - (_569 * _560);
        float _1844 = ((log2((((float(_1795.y) * 0.5) * float(_1795.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1815 * _1815) + (_1818 * _1818)) + (_1812 * _1812)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1800, _1801, _1802), vec3(_588, _590, _591))));
        _1846 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
    }
    else
    {
        _1846 = 0.0;
    }
    vec4 _1848 = textureLod(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _576) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _577) + cbTextureTilingScale._m0[7u].w), _1846);
    float _1857 = (((cbMtdParam._m0[17u].z * _1848.z) - _1783) * _1269) + _1783;
    float _1862 = ((_1698.x - _1626) * _948) + _1626;
    float _1863 = ((_1698.y - _1627) * _948) + _1627;
    float _1868 = ((_1772.x - _1862) * _1111) + _1862;
    float _1869 = ((_1772.y - _1863) * _1111) + _1863;
    float _1878 = ((((_1848.x - _1868) * _1269) + _1868) * 2.0) + (-1.0);
    float _1880 = ((((_1848.y - _1869) * _1269) + _1869) * 2.0) + (-1.0);
    float _1881 = dot(vec2(_1878, _1880), vec2(_1878, _1880));
    float _2492 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
    float _1886 = sqrt(1.0 - (isnan(1.0) ? _2492 : (isnan(_2492) ? 1.0 : min(_2492, 1.0))));
    float _1889 = fma(_1886, _588, fma(_1880, _604, (_623 * _617) * _1878));
    float _1892 = fma(_1886, _590, fma(_1880, _605, (_623 * _618) * _1878));
    float _1895 = fma(_1886, _591, fma(_1880, _606, (_623 * _619) * _1878));
    float _1899 = inversesqrt(dot(vec3(_1889, _1892, _1895), vec3(_1889, _1892, _1895)));
    float _1900 = _1899 * _1889;
    float _1901 = _1899 * _1892;
    float _1902 = _1899 * _1895;
    float _1914 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1915 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1916 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1917 = (-0.0) - _1800;
    float _1919 = (-0.0) - _1801;
    float _1920 = (-0.0) - _1802;
    float _1926 = float(gl_LaunchIDEXT.x);
    float _1927 = float(gl_LaunchIDEXT.y);
    float _1930 = float(gl_LaunchSizeEXT.x);
    float _1944 = fract(fract(sin(dot(vec2(_1926 / _1930, _1927 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1957 = fract(fract(sin(dot(vec2((_1926 + 128.0) / _1930, (_1927 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1958 = 1.0 - _1557;
    float _1959 = _1958 * _1276;
    float _1960 = _1958 * _1277;
    float _1961 = _1958 * _1278;
    float _1966 = _1557 * (_1276 + (-0.039999999105930328369140625));
    float _1967 = _1557 * (_1277 + (-0.039999999105930328369140625));
    float _1968 = _1557 * (_1278 + (-0.039999999105930328369140625));
    float _1969 = _1966 + 0.039999999105930328369140625;
    float _1971 = _1967 + 0.039999999105930328369140625;
    float _1972 = _1968 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1982 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1983 = _1982.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1983, _1982.w, _1983, vec3(_1914, _1915, _1916), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2097;
    float _2098;
    float _2099;
    float _2100;
    float _2101;
    float _2102;
    if (_74._m0 == 0u)
    {
        float _2003 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1900, _1901, _1902));
        float _2503 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
        float _2006 = isnan(1.0) ? _2503 : (isnan(_2503) ? 1.0 : min(_2503, 1.0));
        float _2025 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1857) * 0.949999988079071044921875);
        float _2026 = _2025 * _2025;
        float _2027 = g_sceneCB._m0[4u].x - _1800;
        float _2028 = g_sceneCB._m0[4u].y - _1801;
        float _2029 = g_sceneCB._m0[4u].z - _1802;
        float _2033 = inversesqrt(dot(vec3(_2027, _2028, _2029), vec3(_2027, _2028, _2029)));
        float _2034 = _2033 * _2027;
        float _2035 = _2033 * _2028;
        float _2036 = _2033 * _2029;
        float _2037 = dot(vec3(_1900, _1901, _1902), vec3(g_sceneCB._m0[4u].xyz));
        float _2514 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
        float _2040 = isnan(1.0) ? _2514 : (isnan(_2514) ? 1.0 : min(_2514, 1.0));
        float _2041 = dot(vec3(_1900, _1901, _1902), vec3(_1917, _1919, _1920));
        float _2525 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2044 = isnan(1.0) ? _2525 : (isnan(_2525) ? 1.0 : min(_2525, 1.0));
        float _2045 = dot(vec3(_1900, _1901, _1902), vec3(_2034, _2035, _2036));
        float _2536 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _2048 = isnan(1.0) ? _2536 : (isnan(_2536) ? 1.0 : min(_2536, 1.0));
        float _2049 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2034, _2035, _2036));
        float _2547 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2053 = _2026 * _2026;
        float _2057 = ((_2048 * _2048) * (_2053 + (-1.0))) + 1.0;
        float _2066 = exp2(log2(1.0 - (isnan(1.0) ? _2547 : (isnan(_2547) ? 1.0 : min(_2547, 1.0)))) * 5.0);
        float _2077 = 1.0 - _2026;
        float _2088 = (0.5 / (((_2044 * ((_2040 * _2077) + _2026)) + 9.9999999392252902907785028219223e-09) + (((_2044 * _2077) + _2026) * _2040))) * _2040;
        float _2558 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
        float _2090 = (isnan(1.0) ? _2558 : (isnan(_2558) ? 1.0 : min(_2558, 1.0))) * (_2053 / ((_2057 * _2057) * 3.141590118408203125));
        _2097 = ((_1959 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2006;
        _2098 = ((_1960 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2006;
        _2099 = ((_1961 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2006;
        _2100 = (((_2066 * (0.959999978542327880859375 - _1966)) + _1969) * g_sceneCB._m0[5u].x) * _2090;
        _2101 = (((_2066 * (0.959999978542327880859375 - _1967)) + _1971) * g_sceneCB._m0[5u].y) * _2090;
        _2102 = (((_2066 * (0.959999978542327880859375 - _1968)) + _1972) * g_sceneCB._m0[5u].z) * _2090;
    }
    else
    {
        _2097 = 0.0;
        _2098 = 0.0;
        _2099 = 0.0;
        _2100 = 0.0;
        _2101 = 0.0;
        _2102 = 0.0;
    }
    bool _2104 = abs(_1901) < 0.89999997615814208984375;
    float _2106 = float(_2104);
    float _2107 = _2104 ? 0.0 : 1.0;
    float _2110 = (_2106 * _1902) - (_2107 * _1901);
    float _2111 = _2107 * _1900;
    float _2113 = (-0.0) - (_1900 * _2106);
    float _2117 = inversesqrt(dot(vec3(_2110, _2111, _2113), vec3(_2110, _2111, _2113)));
    float _2118 = _2110 * _2117;
    float _2119 = _2111 * _2117;
    float _2120 = _2117 * _2113;
    float _2123 = (_2119 * _1902) - (_2120 * _1901);
    float _2126 = (_2120 * _1900) - (_2118 * _1902);
    float _2129 = (_2118 * _1901) - (_2119 * _1900);
    float _2131;
    float _2139;
    float _2130 = 0.0;
    uint _2132 = 0u;
    float _2136;
    bool _2138;
    for (;;)
    {
        _2136 = (float(_2132) + _1944) * 0.03125;
        _2138 = _2132 == 0u;
        float frontier_phi_71_pred;
        if (_2138)
        {
            frontier_phi_71_pred = 0.0;
        }
        else
        {
            float _2280;
            float _2281;
            uint _2283;
            _2280 = 0.0;
            _2281 = 0.5;
            _2283 = _2132;
            float _2140;
            for (;;)
            {
                _2140 = ((_2283 & 1u) != 0u) ? (_2281 + _2280) : _2280;
                uint _2284 = _2283 >> 1u;
                if (_2284 == 0u)
                {
                    break;
                }
                else
                {
                    _2280 = _2140;
                    _2281 *= 0.5;
                    _2283 = _2284;
                }
            }
            frontier_phi_71_pred = _2140;
        }
        _2139 = frontier_phi_71_pred;
        float _2141 = _2139 + _1957;
        float _2145 = sqrt(_2136);
        float _2146 = ((_2141 > 1.0) ? (_2141 + (-1.0)) : _2141) * 6.283185482025146484375;
        float _2149 = cos(_2146) * _2145;
        float _2151 = sin(_2146) * _2145;
        float _2153 = sqrt(1.0 - _2136);
        float _2166 = ((_2153 * _1900) + (_2149 * _2123)) + (_2151 * _2118);
        float _2167 = ((_2153 * _1901) + (_2149 * _2126)) + (_2151 * _2119);
        float _2168 = ((_2153 * _1902) + (_2149 * _2129)) + (_2151 * _2120);
        _73._m0 = 1u;
        uvec4 _2172 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2173 = _2172.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2173, _2172.w, _2173, vec3(_1914, _1915, _1916), 9.9999997473787516355514526367188e-05, vec3(_2166, _2167, _2168), 10000.0, 1);
        float _2179 = dot(vec3(_1900, _1901, _1902), vec3(_2166, _2167, _2168));
        float _2569 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
        float _2182 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        _2131 = ((float(_73._m0 == 0u) * _2182) / (_2182 * 0.3183098733425140380859375)) + _2130;
        uint _2133 = _2132 + 1u;
        if (_2133 == 32u)
        {
            break;
        }
        else
        {
            _2130 = _2131;
            _2132 = _2133;
            continue;
        }
    }
    float _2190 = _2131 * 0.009947183541953563690185546875;
    float _2195 = dot(vec3(_1800, _1801, _1802), vec3(_1900, _1901, _1902)) * 2.0;
    vec4 _2209 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1800 - (_2195 * _1900), _1801 - (_2195 * _1901), _1802 - (_2195 * _1902)), 4.0 - (_1857 * 4.0));
    float _2214 = dot(vec3(_1917, _1919, _1920), vec3(_1900, _1901, _1902));
    float _2580 = isnan(0.0) ? _2214 : (isnan(_2214) ? 0.0 : max(_2214, 0.0));
    float _2224 = exp2(log2(1.0 - (isnan(1.0) ? _2580 : (isnan(_2580) ? 1.0 : min(_2580, 1.0)))) * 5.0);
    vec4 _2236 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1900, _1901, _1902), 0.0);
    float _2247 = (_2100 + _2097) + (((_2236.x * _1959) + (((_2224 * (0.959999978542327880859375 - _1966)) + _1969) * _2209.x)) * _2190);
    float _2251 = (_2101 + _2098) + (((_2236.y * _1960) + (((_2224 * (0.959999978542327880859375 - _1967)) + _1971) * _2209.y)) * _2190);
    float _2255 = (_2102 + _2099) + (((_2236.z * _1961) + (((_2224 * (0.959999978542327880859375 - _1968)) + _1972) * _2209.z)) * _2190);
    float _2591 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _2602 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
    float _2613 = isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0));
    bool _2263 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2274;
    _2274.x = _2263 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2591 : (isnan(_2591) ? 1.0 : min(_2591, 1.0)));
    _2274.y = _2263 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2602 : (isnan(_2602) ? 1.0 : min(_2602, 1.0)));
    _2274.z = _2263 ? ((_587 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0)));
    payload._m0 = _2274;
}


