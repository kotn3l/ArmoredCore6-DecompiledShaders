#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Plasma_spinner_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _961;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _161 >> 16u;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _164;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder_2;
        _169 = frontier_phi_3_2_ladder;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _181 = (_174 * _166) + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 20u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 24u;
    }
    bool _214 = _175 == 0u;
    uint _215;
    if (_214)
    {
        _215 = _208;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 8u;
        }
        _215 = frontier_phi_9_10_ladder;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((((_174 * _166) + 4u) + (_176 ? (_215 + 4u) : _215)) >> 2u));
    uint _227 = _226.x;
    float _231 = float(int(uint(int(_227 << 16u) >> int(16u))));
    float _232 = float(int(uint(int(_227) >> int(16u))));
    uint _234 = (_174 * _168) + 12u;
    uint _255;
    uint _256;
    uint _257;
    uint _258;
    if (_179)
    {
        uvec4 _236 = texelFetch(l_geomAttrib_0, int(_234 >> 2u));
        uint _237 = _236.x;
        _255 = _237 & 255u;
        _256 = (_237 >> 8u) & 255u;
        _257 = (_237 >> 16u) & 255u;
        _258 = 20u;
    }
    else
    {
        uint _243 = _234 >> 2u;
        uvec2 _249 = uvec2(texelFetch(l_geomAttrib_0, int(_243)).x, texelFetch(l_geomAttrib_0, int(_243 + 1u)).x);
        uint _250 = _249.x;
        _255 = _250 & 65535u;
        _256 = _250 >> 16u;
        _257 = _249.y & 65535u;
        _258 = 24u;
    }
    uint _262;
    if (_214)
    {
        _262 = _258;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _258 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _258 + 8u;
        }
        _262 = frontier_phi_16_17_ladder;
    }
    uvec4 _271 = texelFetch(l_geomAttrib_0, int((((_174 * _168) + 4u) + (_176 ? (_262 + 4u) : _262)) >> 2u));
    uint _272 = _271.x;
    float _276 = float(int(uint(int(_272 << 16u) >> int(16u))));
    float _277 = float(int(uint(int(_272) >> int(16u))));
    uint _279 = (_174 * _169) + 12u;
    uint _300;
    uint _301;
    uint _302;
    uint _303;
    if (_179)
    {
        uvec4 _281 = texelFetch(l_geomAttrib_0, int(_279 >> 2u));
        uint _282 = _281.x;
        _300 = _282 & 255u;
        _301 = (_282 >> 8u) & 255u;
        _302 = (_282 >> 16u) & 255u;
        _303 = 20u;
    }
    else
    {
        uint _288 = _279 >> 2u;
        uvec2 _294 = uvec2(texelFetch(l_geomAttrib_0, int(_288)).x, texelFetch(l_geomAttrib_0, int(_288 + 1u)).x);
        uint _295 = _294.x;
        _300 = _295 & 65535u;
        _301 = _295 >> 16u;
        _302 = _294.y & 65535u;
        _303 = 24u;
    }
    uint _307;
    if (_214)
    {
        _307 = _303;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _303 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _303 + 8u;
        }
        _307 = frontier_phi_23_24_ladder;
    }
    uvec4 _316 = texelFetch(l_geomAttrib_0, int((((_174 * _169) + 4u) + (_176 ? (_307 + 4u) : _307)) >> 2u));
    uint _317 = _316.x;
    float _321 = float(int(uint(int(_317 << 16u) >> int(16u))));
    float _322 = float(int(uint(int(_317) >> int(16u))));
    bool _324 = _125.z == 0u;
    float _360;
    float _361;
    float _362;
    if (_324)
    {
        uint _327 = _166 * 3u;
        uvec3 _336 = uvec3(texelFetch(l_geomPositionBuffer, int(_327)).x, texelFetch(l_geomPositionBuffer, int(_327 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_327 + 2u)).x);
        _360 = uintBitsToFloat(_336.x);
        _361 = uintBitsToFloat(_336.y);
        _362 = uintBitsToFloat(_336.z);
    }
    else
    {
        uint _344 = _166 * 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomPositionBuffer, int(_344)).x, texelFetch(l_geomPositionBuffer, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _360 = unpackHalf2x16(_351).x;
        _361 = unpackHalf2x16(_351 >> 16u).x;
        _362 = unpackHalf2x16(_350.y).x;
    }
    float _398;
    float _399;
    float _400;
    if (_324)
    {
        uint _365 = _168 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _168 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_324)
    {
        uint _403 = _169 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _169 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _441 = (1.0 - hit._m0.x) - hit._m0.y;
    float _482 = _398 - _360;
    float _483 = _399 - _361;
    float _484 = _400 - _362;
    float _487 = fma(_484, gl_ObjectToWorldEXT[2u].x, fma(_483, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _482));
    float _490 = fma(_484, gl_ObjectToWorldEXT[2u].y, fma(_483, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _482));
    float _493 = fma(_484, gl_ObjectToWorldEXT[2u].z, fma(_483, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _482));
    float _494 = _436 - _360;
    float _495 = _437 - _361;
    float _496 = _438 - _362;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _512 = (((float(_205) * _441) + (-127.0)) + (float(_255) * hit._m0.x)) + (float(_300) * hit._m0.y);
    float _515 = (((float(_206) * _441) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _518 = (((float(_207) * _441) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _519 = _512 * 0.0078740157186985015869140625;
    float _521 = _515 * 0.0078740157186985015869140625;
    float _522 = _518 * 0.0078740157186985015869140625;
    uvec2 _552 = uvec2(textureSize(P_ACParts_Plasma_spinner_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _561 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _562 = _561 * gl_WorldRayDirectionEXT.x;
    float _563 = _561 * gl_WorldRayDirectionEXT.y;
    float _564 = _561 * gl_WorldRayDirectionEXT.z;
    float _616;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _578 = (_505 * _490) - (_502 * _493);
        float _581 = (_499 * _493) - (_505 * _487);
        float _584 = (_502 * _487) - (_499 * _490);
        float _613 = ((log2((((float(_552.y) * 0.5) * float(_552.x)) * abs((((_322 - _232) * (_276 - _231)) - ((_321 - _231) * (_277 - _232))) * 2.384185791015625e-07)) / (sqrt(((_581 * _581) + (_584 * _584)) + (_578 * _578)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))))) / abs(dot(vec3(_562, _563, _564), vec3(_519, _521, _522))));
        _616 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    }
    else
    {
        _616 = 0.0;
    }
    vec4 _620 = textureLod(sampler2D(P_ACParts_Plasma_spinner_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + ((((_276 * hit._m0.x) + (_231 * _441)) + (_321 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + ((((_277 * hit._m0.x) + (_232 * _441)) + (_322 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _616);
    float _648 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_519, _521, _522, 0.0)) - cbMtdParam._m0[11u].y;
    float _1040 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _655 = exp2(log2(1.0 - (isnan(1.0) ? _1040 : (isnan(_1040) ? 1.0 : min(_1040, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].z : (isnan(cbMtdParam._m0[11u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].z, 0.001000000047497451305389404296875))));
    float _665 = inversesqrt(dot(vec3(_519, _521, _522), vec3(_519, _521, _522)));
    float _666 = _665 * _519;
    float _667 = _665 * _521;
    float _668 = _665 * _522;
    float _680 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _681 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _682 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _683 = (-0.0) - _562;
    float _685 = (-0.0) - _563;
    float _686 = (-0.0) - _564;
    float _692 = float(gl_LaunchIDEXT.x);
    float _693 = float(gl_LaunchIDEXT.y);
    float _696 = float(gl_LaunchSizeEXT.x);
    float _710 = fract(fract(sin(dot(vec2(_692 / _696, _693 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _723 = fract(fract(sin(dot(vec2((_692 + 128.0) / _696, (_693 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _733 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _734 = _733.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _734, _733.w, _734, vec3(_680, _681, _682), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _800;
    float _801;
    float _802;
    if (_63._m0 == 0u)
    {
        float _755 = g_sceneCB._m0[4u].x - _562;
        float _756 = g_sceneCB._m0[4u].y - _563;
        float _757 = g_sceneCB._m0[4u].z - _564;
        float _761 = inversesqrt(dot(vec3(_755, _756, _757), vec3(_755, _756, _757)));
        float _765 = dot(vec3(_666, _667, _668), vec3(g_sceneCB._m0[4u].xyz));
        float _1056 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _768 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
        float _769 = dot(vec3(_666, _667, _668), vec3(_683, _685, _686));
        float _1067 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
        float _773 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_755 * _761, _756 * _761, _757 * _761));
        float _1078 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
        float _784 = (exp2(log2(1.0 - (isnan(1.0) ? _1078 : (isnan(_1078) ? 1.0 : min(_1078, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _790 = (0.5 / ((_768 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0))))) * _768;
        float _1089 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
        float _792 = (isnan(1.0) ? _1089 : (isnan(_1089) ? 1.0 : min(_1089, 1.0))) * 0.31831014156341552734375;
        _800 = (_784 * g_sceneCB._m0[5u].x) * _792;
        _801 = (_784 * g_sceneCB._m0[5u].y) * _792;
        _802 = (_784 * g_sceneCB._m0[5u].z) * _792;
    }
    else
    {
        _800 = 0.0;
        _801 = 0.0;
        _802 = 0.0;
    }
    bool _804 = abs(_667) < 0.89999997615814208984375;
    float _806 = float(_804);
    float _807 = _804 ? 0.0 : 1.0;
    float _810 = (_806 * _668) - (_807 * _667);
    float _811 = _807 * _666;
    float _813 = (-0.0) - (_666 * _806);
    float _817 = inversesqrt(dot(vec3(_810, _811, _813), vec3(_810, _811, _813)));
    float _818 = _810 * _817;
    float _819 = _811 * _817;
    float _820 = _817 * _813;
    float _823 = (_819 * _668) - (_820 * _667);
    float _826 = (_820 * _666) - (_818 * _668);
    float _829 = (_818 * _667) - (_819 * _666);
    float _831;
    float _839;
    float _830 = 0.0;
    uint _832 = 0u;
    float _836;
    bool _838;
    for (;;)
    {
        _836 = (float(_832) + _710) * 0.03125;
        _838 = _832 == 0u;
        float frontier_phi_41_pred;
        if (_838)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _966;
            float _967;
            uint _969;
            _966 = 0.0;
            _967 = 0.5;
            _969 = _832;
            float _840;
            for (;;)
            {
                _840 = ((_969 & 1u) != 0u) ? (_967 + _966) : _966;
                uint _970 = _969 >> 1u;
                if (_970 == 0u)
                {
                    break;
                }
                else
                {
                    _966 = _840;
                    _967 *= 0.5;
                    _969 = _970;
                }
            }
            frontier_phi_41_pred = _840;
        }
        _839 = frontier_phi_41_pred;
        float _841 = _839 + _723;
        float _846 = sqrt(_836);
        float _847 = ((_841 > 1.0) ? (_841 + (-1.0)) : _841) * 6.283185482025146484375;
        float _850 = cos(_847) * _846;
        float _852 = sin(_847) * _846;
        float _854 = sqrt(1.0 - _836);
        float _867 = ((_854 * _666) + (_850 * _823)) + (_852 * _818);
        float _868 = ((_854 * _667) + (_850 * _826)) + (_852 * _819);
        float _869 = ((_854 * _668) + (_850 * _829)) + (_852 * _820);
        _62._m0 = 1u;
        uvec4 _873 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _874 = _873.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _874, _873.w, _874, vec3(_680, _681, _682), 9.9999997473787516355514526367188e-05, vec3(_867, _868, _869), 10000.0, 1);
        float _880 = dot(vec3(_666, _667, _668), vec3(_867, _868, _869));
        float _1100 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
        float _883 = isnan(1.0) ? _1100 : (isnan(_1100) ? 1.0 : min(_1100, 1.0));
        _831 = ((float(_62._m0 == 0u) * _883) / (_883 * 0.3183098733425140380859375)) + _830;
        uint _833 = _832 + 1u;
        if (_833 == 32u)
        {
            break;
        }
        else
        {
            _830 = _831;
            _832 = _833;
            continue;
        }
    }
    float _892 = _831 * 0.009947183541953563690185546875;
    float _897 = dot(vec3(_562, _563, _564), vec3(_666, _667, _668)) * 2.0;
    vec4 _909 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_562 - (_897 * _666), _563 - (_897 * _667), _564 - (_897 * _668)), 4.0);
    float _914 = dot(vec3(_683, _685, _686), vec3(_666, _667, _668));
    float _1111 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _923 = (exp2(log2(1.0 - (isnan(1.0) ? _1111 : (isnan(_1111) ? 1.0 : min(_1111, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _933 = (((((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].x) * _620.x) + cbMtdParam._m0[12u].x) + (_655 * ((cbMtdParam._m0[11u].w * cbMtdParam._m0[10u].x) - cbMtdParam._m0[12u].x))) + _800) + ((_909.x * _892) * _923);
    float _937 = (((((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].y) * _620.y) + cbMtdParam._m0[12u].x) + (_655 * ((cbMtdParam._m0[11u].w * cbMtdParam._m0[10u].y) - cbMtdParam._m0[12u].x))) + _801) + ((_909.y * _892) * _923);
    float _941 = (((((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].z) * _620.z) + cbMtdParam._m0[12u].x) + (_655 * ((cbMtdParam._m0[11u].w * cbMtdParam._m0[10u].z) - cbMtdParam._m0[12u].x))) + _802) + ((_909.z * _892) * _923);
    float _1122 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _1133 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _1144 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    bool _949 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _960;
    _960.x = _949 ? ((_512 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1122 : (isnan(_1122) ? 1.0 : min(_1122, 1.0)));
    _960.y = _949 ? ((_515 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1133 : (isnan(_1133) ? 1.0 : min(_1133, 1.0)));
    _960.z = _949 ? ((_518 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1144 : (isnan(_1144) ? 1.0 : min(_1144, 1.0)));
    payload._m0 = _960;
}


