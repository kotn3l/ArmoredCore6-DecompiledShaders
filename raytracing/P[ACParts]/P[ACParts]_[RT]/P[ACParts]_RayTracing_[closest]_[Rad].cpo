#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_snp_0_Texture2D_2;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D P_ACParts_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D P_ACParts_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D P_ACParts_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_snp_0_Texture2D_10;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_snp_0_Texture2D_12;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_snp_0_Texture2D_13;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2159;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + (_183 ? (_239 + 4u) : _239)) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _254 = _181 * _175;
    uint _255 = _254 + 12u;
    uint _276;
    uint _277;
    uint _278;
    uint _279;
    if (_186)
    {
        uvec4 _257 = texelFetch(l_geomAttrib_0, int(_255 >> 2u));
        uint _258 = _257.x;
        _276 = _258 & 255u;
        _277 = (_258 >> 8u) & 255u;
        _278 = (_258 >> 16u) & 255u;
        _279 = 16u;
    }
    else
    {
        uint _264 = _255 >> 2u;
        uvec2 _270 = uvec2(texelFetch(l_geomAttrib_0, int(_264)).x, texelFetch(l_geomAttrib_0, int(_264 + 1u)).x);
        uint _271 = _270.x;
        _276 = _271 & 65535u;
        _277 = _271 >> 16u;
        _278 = _270.y & 65535u;
        _279 = 20u;
    }
    uvec4 _285 = texelFetch(l_geomAttrib_0, int((_279 + _254) >> 2u));
    uint _286 = _285.x;
    uint _298;
    if (_238)
    {
        _298 = _279 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _279 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _279 + 12u;
        }
        _298 = frontier_phi_16_17_ladder;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + (_183 ? (_298 + 4u) : _298)) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    uint _313 = _181 * _176;
    uint _314 = _313 + 12u;
    uint _335;
    uint _336;
    uint _337;
    uint _338;
    if (_186)
    {
        uvec4 _316 = texelFetch(l_geomAttrib_0, int(_314 >> 2u));
        uint _317 = _316.x;
        _335 = _317 & 255u;
        _336 = (_317 >> 8u) & 255u;
        _337 = (_317 >> 16u) & 255u;
        _338 = 16u;
    }
    else
    {
        uint _323 = _314 >> 2u;
        uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
        uint _330 = _329.x;
        _335 = _330 & 65535u;
        _336 = _330 >> 16u;
        _337 = _329.y & 65535u;
        _338 = 20u;
    }
    uvec4 _344 = texelFetch(l_geomAttrib_0, int((_338 + _313) >> 2u));
    uint _345 = _344.x;
    uint _357;
    if (_238)
    {
        _357 = _338 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _338 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _338 + 12u;
        }
        _357 = frontier_phi_23_24_ladder;
    }
    uvec4 _365 = texelFetch(l_geomAttrib_0, int(((_313 + 4u) + (_183 ? (_357 + 4u) : _357)) >> 2u));
    uint _366 = _365.x;
    float _370 = float(int(uint(int(_366 << 16u) >> int(16u))));
    float _371 = float(int(uint(int(_366) >> int(16u))));
    bool _373 = _132.z == 0u;
    float _409;
    float _410;
    float _411;
    if (_373)
    {
        uint _376 = _173 * 3u;
        uvec3 _385 = uvec3(texelFetch(l_geomPositionBuffer, int(_376)).x, texelFetch(l_geomPositionBuffer, int(_376 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_376 + 2u)).x);
        _409 = uintBitsToFloat(_385.x);
        _410 = uintBitsToFloat(_385.y);
        _411 = uintBitsToFloat(_385.z);
    }
    else
    {
        uint _393 = _173 * 2u;
        uvec2 _399 = uvec2(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x);
        uint _400 = _399.x;
        _409 = unpackHalf2x16(_400).x;
        _410 = unpackHalf2x16(_400 >> 16u).x;
        _411 = unpackHalf2x16(_399.y).x;
    }
    float _447;
    float _448;
    float _449;
    if (_373)
    {
        uint _414 = _175 * 3u;
        uvec3 _423 = uvec3(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_414 + 2u)).x);
        _447 = uintBitsToFloat(_423.x);
        _448 = uintBitsToFloat(_423.y);
        _449 = uintBitsToFloat(_423.z);
    }
    else
    {
        uint _431 = _175 * 2u;
        uvec2 _437 = uvec2(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x);
        uint _438 = _437.x;
        _447 = unpackHalf2x16(_438).x;
        _448 = unpackHalf2x16(_438 >> 16u).x;
        _449 = unpackHalf2x16(_437.y).x;
    }
    float _485;
    float _486;
    float _487;
    if (_373)
    {
        uint _452 = _176 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _176 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _490 = (1.0 - hit._m0.x) - hit._m0.y;
    float _524 = (_311 - _252) * 0.00048828125;
    float _526 = (_312 - _253) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _530 = (_371 - _253) * 0.00048828125;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _554 = _449 - _411;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _566 = _487 - _411;
    float _569 = fma(_566, gl_ObjectToWorldEXT[2u].x, fma(_565, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _564));
    float _572 = fma(_566, gl_ObjectToWorldEXT[2u].y, fma(_565, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _564));
    float _575 = fma(_566, gl_ObjectToWorldEXT[2u].z, fma(_565, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _564));
    float _576 = (((_311 * hit._m0.x) + (_252 * _490)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _577 = (((_312 * hit._m0.x) + (_253 * _490)) + (_371 * hit._m0.y)) * 0.00048828125;
    float _581 = (((float(_212) * _490) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _584 = (((float(_213) * _490) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = (((float(_214) * _490) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _588 = _581 * 0.0078740157186985015869140625;
    float _590 = _584 * 0.0078740157186985015869140625;
    float _591 = _587 * 0.0078740157186985015869140625;
    float _604 = ((((float(_224 & 255u) * _490) + (-127.0)) + (float(_286 & 255u) * hit._m0.x)) + (float(_345 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_224 >> 8u) & 255u) * _490) + (-127.0)) + (float((_286 >> 8u) & 255u) * hit._m0.x)) + (float((_345 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float((_224 >> 16u) & 255u) * _490) + (-127.0)) + (float((_286 >> 16u) & 255u) * hit._m0.x)) + (float((_345 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float(_224 >> 24u) * _490) + (-127.0)) + (float(_286 >> 24u) * hit._m0.x)) + (float(_345 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _617 = ((_605 * _591) - (_606 * _590)) * _607;
    float _618 = ((_606 * _588) - (_604 * _591)) * _607;
    float _619 = ((_604 * _590) - (_605 * _588)) * _607;
    float _623 = inversesqrt(dot(vec3(_617, _618, _619), vec3(_617, _618, _619)));
    uvec2 _641 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_0, int(0u)));
    bool _646 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _699;
    if (_646)
    {
        float _657 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _663 = (_575 * _560) - (_572 * _563);
        float _666 = (_569 * _563) - (_575 * _557);
        float _669 = (_572 * _557) - (_569 * _560);
        float _696 = ((log2((((float(_641.y) * 0.5) * float(_641.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_666 * _666) + (_669 * _669)) + (_663 * _663)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_657 * gl_WorldRayDirectionEXT.x, _657 * gl_WorldRayDirectionEXT.y, _657 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _699 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    }
    else
    {
        _699 = 0.0;
    }
    vec4 _703 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _576) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _577) + cbTextureTilingScale._m0[2u].w), _699);
    float _707 = _703.z;
    float _708 = _703.w;
    float _716 = exp2(log2(_707 * cbMtdParam._m0[20u].w) * cbMtdParam._m0[19u].y);
    float _717 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _718 = isnan(1.0) ? _717 : (isnan(_717) ? 1.0 : min(_717, 1.0));
    float _723 = exp2(log2(1.0 - _708) * cbMtdParam._m0[20u].y);
    uvec2 _735 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_3, int(0u)));
    float _786;
    if (_646)
    {
        float _746 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _752 = (_575 * _560) - (_572 * _563);
        float _755 = (_569 * _563) - (_575 * _557);
        float _758 = (_572 * _557) - (_569 * _560);
        float _784 = ((log2((((float(_735.y) * 0.5) * float(_735.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_755 * _755) + (_758 * _758)) + (_752 * _752)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_746 * gl_WorldRayDirectionEXT.x, _746 * gl_WorldRayDirectionEXT.y, _746 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _786 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    }
    else
    {
        _786 = 0.0;
    }
    vec4 _789 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _576) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _577) + cbTextureTilingScale._m0[0u].w), _786);
    uvec2 _814 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_1, int(0u)));
    float _865;
    if (_646)
    {
        float _825 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _831 = (_575 * _560) - (_572 * _563);
        float _834 = (_569 * _563) - (_575 * _557);
        float _837 = (_572 * _557) - (_569 * _560);
        float _863 = ((log2((((float(_814.y) * 0.5) * float(_814.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_834 * _834) + (_837 * _837)) + (_831 * _831)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_825 * gl_WorldRayDirectionEXT.x, _825 * gl_WorldRayDirectionEXT.y, _825 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _865 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    }
    else
    {
        _865 = 0.0;
    }
    vec4 _867 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _576) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _577) + cbTextureTilingScale._m0[3u].w), _865);
    float _878 = cbMtdParam._m0[9u].x * _867.x;
    float _879 = cbMtdParam._m0[9u].y * _867.y;
    float _880 = cbMtdParam._m0[9u].z * _867.z;
    float _887 = (((cbMtdParam._m0[10u].x * _789.x) - _878) * _723) + _878;
    float _888 = (((cbMtdParam._m0[10u].y * _789.y) - _879) * _723) + _879;
    float _889 = (((cbMtdParam._m0[10u].z * _789.z) - _880) * _723) + _880;
    float _896 = exp2(log2(_708) * cbMtdParam._m0[21u].y);
    uvec2 _908 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_2, int(0u)));
    float _959;
    if (_646)
    {
        float _919 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _925 = (_575 * _560) - (_572 * _563);
        float _928 = (_569 * _563) - (_575 * _557);
        float _931 = (_572 * _557) - (_569 * _560);
        float _957 = ((log2((((float(_908.y) * 0.5) * float(_908.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_928 * _928) + (_931 * _931)) + (_925 * _925)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_919 * gl_WorldRayDirectionEXT.x, _919 * gl_WorldRayDirectionEXT.y, _919 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _959 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    }
    else
    {
        _959 = 0.0;
    }
    vec4 _961 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _576) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _577) + cbTextureTilingScale._m0[10u].w), _959);
    uvec2 _996 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_4, int(0u)));
    float _1047;
    if (_646)
    {
        float _1007 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1013 = (_575 * _560) - (_572 * _563);
        float _1016 = (_569 * _563) - (_575 * _557);
        float _1019 = (_572 * _557) - (_569 * _560);
        float _1045 = ((log2((((float(_996.y) * 0.5) * float(_996.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1016 * _1016) + (_1019 * _1019)) + (_1013 * _1013)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1007 * gl_WorldRayDirectionEXT.x, _1007 * gl_WorldRayDirectionEXT.y, _1007 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1047 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
    }
    else
    {
        _1047 = 0.0;
    }
    vec4 _1049 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _576) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _577) + cbTextureTilingScale._m0[11u].w), _1047);
    float _1060 = cbMtdParam._m0[18u].x * _1049.x;
    float _1061 = cbMtdParam._m0[18u].y * _1049.y;
    float _1062 = cbMtdParam._m0[18u].z * _1049.z;
    uvec2 _1083 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_7, int(0u)));
    float _1134;
    if (_646)
    {
        float _1094 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1100 = (_575 * _560) - (_572 * _563);
        float _1103 = (_569 * _563) - (_575 * _557);
        float _1106 = (_572 * _557) - (_569 * _560);
        float _1132 = ((log2((((float(_1083.y) * 0.5) * float(_1083.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1103 * _1103) + (_1106 * _1106)) + (_1100 * _1100)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1094 * gl_WorldRayDirectionEXT.x, _1094 * gl_WorldRayDirectionEXT.y, _1094 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1134 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    }
    else
    {
        _1134 = 0.0;
    }
    vec4 _1136 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _576) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _577) + cbTextureTilingScale._m0[1u].w), _1134);
    float _1143 = ((((((((cbMtdParam._m0[17u].x * _961.x) - _887) * _896) + _887) - _1060) * _718) + _1060) * 4.55000019073486328125) * _1136.x;
    float _1145 = ((((((((cbMtdParam._m0[17u].y * _961.y) - _888) * _896) + _888) - _1061) * _718) + _1061) * 4.55000019073486328125) * _1136.y;
    float _1147 = ((((((((cbMtdParam._m0[17u].z * _961.z) - _889) * _896) + _889) - _1062) * _718) + _1062) * 4.55000019073486328125) * _1136.z;
    uvec2 _1160 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_11, int(0u)));
    float _1211;
    if (_646)
    {
        float _1171 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1177 = (_575 * _560) - (_572 * _563);
        float _1180 = (_569 * _563) - (_575 * _557);
        float _1183 = (_572 * _557) - (_569 * _560);
        float _1209 = ((log2((((float(_1160.y) * 0.5) * float(_1160.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1180 * _1180) + (_1183 * _1183)) + (_1177 * _1177)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1171 * gl_WorldRayDirectionEXT.x, _1171 * gl_WorldRayDirectionEXT.y, _1171 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1211 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    }
    else
    {
        _1211 = 0.0;
    }
    vec4 _1214 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _576) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _577) + cbTextureTilingScale._m0[5u].w), _1211);
    float _1216 = _1214.x;
    uvec2 _1228 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_10, int(0u)));
    float _1279;
    if (_646)
    {
        float _1239 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1245 = (_575 * _560) - (_572 * _563);
        float _1248 = (_569 * _563) - (_575 * _557);
        float _1251 = (_572 * _557) - (_569 * _560);
        float _1277 = ((log2((((float(_1228.y) * 0.5) * float(_1228.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1248 * _1248) + (_1251 * _1251)) + (_1245 * _1245)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1239 * gl_WorldRayDirectionEXT.x, _1239 * gl_WorldRayDirectionEXT.y, _1239 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1279 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
    }
    else
    {
        _1279 = 0.0;
    }
    float _1287 = (((1.0 - _1216) + textureLod(sampler2D(P_ACParts_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _576) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _577) + cbTextureTilingScale._m0[4u].w), _1279).x) * _718) + _1216;
    uvec2 _1299 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_12, int(0u)));
    float _1350;
    if (_646)
    {
        float _1310 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1316 = (_575 * _560) - (_572 * _563);
        float _1319 = (_569 * _563) - (_575 * _557);
        float _1322 = (_572 * _557) - (_569 * _560);
        float _1348 = ((log2((((float(_1299.y) * 0.5) * float(_1299.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1319 * _1319) + (_1322 * _1322)) + (_1316 * _1316)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1310 * gl_WorldRayDirectionEXT.x, _1310 * gl_WorldRayDirectionEXT.y, _1310 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1350 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
    }
    else
    {
        _1350 = 0.0;
    }
    float _1359 = (((textureLod(sampler2D(P_ACParts_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _576) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _577) + cbTextureTilingScale._m0[6u].w), _1350).x - _1287) + cbMtdParam._m0[20u].z) * _723) + _1287;
    uvec2 _1371 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_13, int(0u)));
    float _1422;
    if (_646)
    {
        float _1382 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1388 = (_575 * _560) - (_572 * _563);
        float _1391 = (_569 * _563) - (_575 * _557);
        float _1394 = (_572 * _557) - (_569 * _560);
        float _1420 = ((log2((((float(_1371.y) * 0.5) * float(_1371.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1391 * _1391) + (_1394 * _1394)) + (_1388 * _1388)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1382 * gl_WorldRayDirectionEXT.x, _1382 * gl_WorldRayDirectionEXT.y, _1382 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1422 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
    }
    else
    {
        _1422 = 0.0;
    }
    float _1434 = (((textureLod(sampler2D(P_ACParts_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _576) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _577) + cbTextureTilingScale._m0[7u].w), _1422).x - _1359) + cbMtdParam._m0[22u].y) * _896) + _1359;
    uvec2 _1446 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_5, int(0u)));
    float _1497;
    if (_646)
    {
        float _1457 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1463 = (_575 * _560) - (_572 * _563);
        float _1466 = (_569 * _563) - (_575 * _557);
        float _1469 = (_572 * _557) - (_569 * _560);
        float _1495 = ((log2((((float(_1446.y) * 0.5) * float(_1446.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1466 * _1466) + (_1469 * _1469)) + (_1463 * _1463)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1457 * gl_WorldRayDirectionEXT.x, _1457 * gl_WorldRayDirectionEXT.y, _1457 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1497 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
    }
    else
    {
        _1497 = 0.0;
    }
    vec4 _1499 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _576) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _577) + cbTextureTilingScale._m0[12u].w), _1497);
    uvec2 _1518 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_6, int(0u)));
    float _1569;
    if (_646)
    {
        float _1529 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1535 = (_575 * _560) - (_572 * _563);
        float _1538 = (_569 * _563) - (_575 * _557);
        float _1541 = (_572 * _557) - (_569 * _560);
        float _1567 = ((log2((((float(_1518.y) * 0.5) * float(_1518.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1538 * _1538) + (_1541 * _1541)) + (_1535 * _1535)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1529 * gl_WorldRayDirectionEXT.x, _1529 * gl_WorldRayDirectionEXT.y, _1529 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1569 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
    }
    else
    {
        _1569 = 0.0;
    }
    vec4 _1571 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _576) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _577) + cbTextureTilingScale._m0[13u].w), _1569);
    float _1573 = _1571.x;
    float _1574 = _1571.y;
    float _1577 = cbMtdParam._m0[19u].x + _1571.z;
    float _1580 = (((cbMtdParam._m0[20u].x + _1499.z) - _1577) * _723) + _1577;
    uvec2 _1593 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_8, int(0u)));
    float _1644;
    if (_646)
    {
        float _1604 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1610 = (_575 * _560) - (_572 * _563);
        float _1613 = (_569 * _563) - (_575 * _557);
        float _1616 = (_572 * _557) - (_569 * _560);
        float _1642 = ((log2((((float(_1593.y) * 0.5) * float(_1593.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1613 * _1613) + (_1616 * _1616)) + (_1610 * _1610)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1604 * gl_WorldRayDirectionEXT.x, _1604 * gl_WorldRayDirectionEXT.y, _1604 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1644 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
    }
    else
    {
        _1644 = 0.0;
    }
    vec4 _1646 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _576) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _577) + cbTextureTilingScale._m0[14u].w), _1644);
    uvec2 _1670 = uvec2(textureSize(P_ACParts_snp_0_Texture2D_9, int(0u)));
    float _1674 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1675 = _1674 * gl_WorldRayDirectionEXT.x;
    float _1676 = _1674 * gl_WorldRayDirectionEXT.y;
    float _1677 = _1674 * gl_WorldRayDirectionEXT.z;
    float _1721;
    if (_646)
    {
        float _1687 = (_575 * _560) - (_572 * _563);
        float _1690 = (_569 * _563) - (_575 * _557);
        float _1693 = (_572 * _557) - (_569 * _560);
        float _1719 = ((log2((((float(_1670.y) * 0.5) * float(_1670.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1690 * _1690) + (_1693 * _1693)) + (_1687 * _1687)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1675, _1676, _1677), vec3(_588, _590, _591))));
        _1721 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
    }
    else
    {
        _1721 = 0.0;
    }
    vec4 _1723 = textureLod(sampler2D(P_ACParts_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _576) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _577) + cbTextureTilingScale._m0[15u].w), _1721);
    float _1725 = _1723.x;
    float _1726 = _1723.y;
    float _1729 = cbMtdParam._m0[21u].x + _1723.z;
    float _1732 = ((((_707 * 2.0) * ((((_1646.z - _1580) + cbMtdParam._m0[22u].x) * _896) + _1580)) - _1729) * _718) + _1729;
    float _1743 = ((_1499.x - _1573) * _723) + _1573;
    float _1744 = ((_1499.y - _1574) * _723) + _1574;
    float _1759 = (((((((_1646.x - _1743) * _896) + _1743) - _1725) * _718) + _1725) * 2.0) + (-1.0);
    float _1760 = (((((((_1646.y - _1744) * _896) + _1744) - _1726) * _718) + _1726) * 2.0) + (-1.0);
    float _1761 = dot(vec2(_1759, _1760), vec2(_1759, _1760));
    float _2339 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
    float _1766 = sqrt(1.0 - (isnan(1.0) ? _2339 : (isnan(_2339) ? 1.0 : min(_2339, 1.0))));
    float _1769 = _1759 + (cbMtdParam._m0[21u].w * ((_703.x * 2.0) + (-1.0)));
    float _1770 = _1760 + (cbMtdParam._m0[21u].w * ((_703.y * 2.0) + (-1.0)));
    float _1773 = fma(_1766, _588, fma(_1770, _604, (_623 * _617) * _1769));
    float _1776 = fma(_1766, _590, fma(_1770, _605, (_623 * _618) * _1769));
    float _1779 = fma(_1766, _591, fma(_1770, _606, (_623 * _619) * _1769));
    float _1783 = inversesqrt(dot(vec3(_1773, _1776, _1779), vec3(_1773, _1776, _1779)));
    float _1784 = _1783 * _1773;
    float _1785 = _1783 * _1776;
    float _1786 = _1783 * _1779;
    float _1798 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1799 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1800 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1801 = (-0.0) - _1675;
    float _1803 = (-0.0) - _1676;
    float _1804 = (-0.0) - _1677;
    float _1810 = float(gl_LaunchIDEXT.x);
    float _1811 = float(gl_LaunchIDEXT.y);
    float _1814 = float(gl_LaunchSizeEXT.x);
    float _1828 = fract(fract(sin(dot(vec2(_1810 / _1814, _1811 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1841 = fract(fract(sin(dot(vec2((_1810 + 128.0) / _1814, (_1811 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1842 = 1.0 - _1434;
    float _1843 = _1842 * _1143;
    float _1844 = _1842 * _1145;
    float _1845 = _1842 * _1147;
    float _1850 = _1434 * (_1143 + (-0.039999999105930328369140625));
    float _1851 = _1434 * (_1145 + (-0.039999999105930328369140625));
    float _1852 = _1434 * (_1147 + (-0.039999999105930328369140625));
    float _1853 = _1850 + 0.039999999105930328369140625;
    float _1855 = _1851 + 0.039999999105930328369140625;
    float _1856 = _1852 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1866 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1867 = _1866.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1867, _1866.w, _1867, vec3(_1798, _1799, _1800), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1981;
    float _1982;
    float _1983;
    float _1984;
    float _1985;
    float _1986;
    if (_74._m0 == 0u)
    {
        float _1887 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1784, _1785, _1786));
        float _2350 = isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0));
        float _1890 = isnan(1.0) ? _2350 : (isnan(_2350) ? 1.0 : min(_2350, 1.0));
        float _1909 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1732) * 0.949999988079071044921875);
        float _1910 = _1909 * _1909;
        float _1911 = g_sceneCB._m0[4u].x - _1675;
        float _1912 = g_sceneCB._m0[4u].y - _1676;
        float _1913 = g_sceneCB._m0[4u].z - _1677;
        float _1917 = inversesqrt(dot(vec3(_1911, _1912, _1913), vec3(_1911, _1912, _1913)));
        float _1918 = _1917 * _1911;
        float _1919 = _1917 * _1912;
        float _1920 = _1917 * _1913;
        float _1921 = dot(vec3(_1784, _1785, _1786), vec3(g_sceneCB._m0[4u].xyz));
        float _2361 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
        float _1924 = isnan(1.0) ? _2361 : (isnan(_2361) ? 1.0 : min(_2361, 1.0));
        float _1925 = dot(vec3(_1784, _1785, _1786), vec3(_1801, _1803, _1804));
        float _2372 = isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0));
        float _1928 = isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0));
        float _1929 = dot(vec3(_1784, _1785, _1786), vec3(_1918, _1919, _1920));
        float _2383 = isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0));
        float _1932 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
        float _1933 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1918, _1919, _1920));
        float _2394 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1937 = _1910 * _1910;
        float _1941 = ((_1932 * _1932) * (_1937 + (-1.0))) + 1.0;
        float _1950 = exp2(log2(1.0 - (isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0)))) * 5.0);
        float _1961 = 1.0 - _1910;
        float _1972 = (0.5 / (((_1928 * ((_1924 * _1961) + _1910)) + 9.9999999392252902907785028219223e-09) + (((_1928 * _1961) + _1910) * _1924))) * _1924;
        float _2405 = isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0));
        float _1974 = (isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0))) * (_1937 / ((_1941 * _1941) * 3.141590118408203125));
        _1981 = ((_1843 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1890;
        _1982 = ((_1844 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1890;
        _1983 = ((_1845 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1890;
        _1984 = (((_1950 * (0.959999978542327880859375 - _1850)) + _1853) * g_sceneCB._m0[5u].x) * _1974;
        _1985 = (((_1950 * (0.959999978542327880859375 - _1851)) + _1855) * g_sceneCB._m0[5u].y) * _1974;
        _1986 = (((_1950 * (0.959999978542327880859375 - _1852)) + _1856) * g_sceneCB._m0[5u].z) * _1974;
    }
    else
    {
        _1981 = 0.0;
        _1982 = 0.0;
        _1983 = 0.0;
        _1984 = 0.0;
        _1985 = 0.0;
        _1986 = 0.0;
    }
    bool _1988 = abs(_1785) < 0.89999997615814208984375;
    float _1990 = float(_1988);
    float _1991 = _1988 ? 0.0 : 1.0;
    float _1994 = (_1990 * _1786) - (_1991 * _1785);
    float _1995 = _1991 * _1784;
    float _1997 = (-0.0) - (_1784 * _1990);
    float _2001 = inversesqrt(dot(vec3(_1994, _1995, _1997), vec3(_1994, _1995, _1997)));
    float _2002 = _1994 * _2001;
    float _2003 = _1995 * _2001;
    float _2004 = _2001 * _1997;
    float _2007 = (_2003 * _1786) - (_2004 * _1785);
    float _2010 = (_2004 * _1784) - (_2002 * _1786);
    float _2013 = (_2002 * _1785) - (_2003 * _1784);
    float _2015;
    float _2023;
    float _2014 = 0.0;
    uint _2016 = 0u;
    float _2020;
    bool _2022;
    for (;;)
    {
        _2020 = (float(_2016) + _1828) * 0.03125;
        _2022 = _2016 == 0u;
        float frontier_phi_67_pred;
        if (_2022)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2164;
            float _2165;
            uint _2167;
            _2164 = 0.0;
            _2165 = 0.5;
            _2167 = _2016;
            float _2024;
            for (;;)
            {
                _2024 = ((_2167 & 1u) != 0u) ? (_2165 + _2164) : _2164;
                uint _2168 = _2167 >> 1u;
                if (_2168 == 0u)
                {
                    break;
                }
                else
                {
                    _2164 = _2024;
                    _2165 *= 0.5;
                    _2167 = _2168;
                }
            }
            frontier_phi_67_pred = _2024;
        }
        _2023 = frontier_phi_67_pred;
        float _2025 = _2023 + _1841;
        float _2029 = sqrt(_2020);
        float _2030 = ((_2025 > 1.0) ? (_2025 + (-1.0)) : _2025) * 6.283185482025146484375;
        float _2033 = cos(_2030) * _2029;
        float _2035 = sin(_2030) * _2029;
        float _2037 = sqrt(1.0 - _2020);
        float _2050 = ((_2037 * _1784) + (_2033 * _2007)) + (_2035 * _2002);
        float _2051 = ((_2037 * _1785) + (_2033 * _2010)) + (_2035 * _2003);
        float _2052 = ((_2037 * _1786) + (_2033 * _2013)) + (_2035 * _2004);
        _73._m0 = 1u;
        uvec4 _2056 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2057 = _2056.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2057, _2056.w, _2057, vec3(_1798, _1799, _1800), 9.9999997473787516355514526367188e-05, vec3(_2050, _2051, _2052), 10000.0, 1);
        float _2063 = dot(vec3(_1784, _1785, _1786), vec3(_2050, _2051, _2052));
        float _2416 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
        float _2066 = isnan(1.0) ? _2416 : (isnan(_2416) ? 1.0 : min(_2416, 1.0));
        _2015 = ((float(_73._m0 == 0u) * _2066) / (_2066 * 0.3183098733425140380859375)) + _2014;
        uint _2017 = _2016 + 1u;
        if (_2017 == 32u)
        {
            break;
        }
        else
        {
            _2014 = _2015;
            _2016 = _2017;
            continue;
        }
    }
    float _2074 = _2015 * 0.009947183541953563690185546875;
    float _2079 = dot(vec3(_1675, _1676, _1677), vec3(_1784, _1785, _1786)) * 2.0;
    vec4 _2093 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1675 - (_2079 * _1784), _1676 - (_2079 * _1785), _1677 - (_2079 * _1786)), 4.0 - (_1732 * 4.0));
    float _2098 = dot(vec3(_1801, _1803, _1804), vec3(_1784, _1785, _1786));
    float _2427 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
    float _2108 = exp2(log2(1.0 - (isnan(1.0) ? _2427 : (isnan(_2427) ? 1.0 : min(_2427, 1.0)))) * 5.0);
    vec4 _2120 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1784, _1785, _1786), 0.0);
    float _2131 = (_1984 + _1981) + (((_2120.x * _1843) + (((_2108 * (0.959999978542327880859375 - _1850)) + _1853) * _2093.x)) * _2074);
    float _2135 = (_1985 + _1982) + (((_2120.y * _1844) + (((_2108 * (0.959999978542327880859375 - _1851)) + _1855) * _2093.y)) * _2074);
    float _2139 = (_1986 + _1983) + (((_2120.z * _1845) + (((_2108 * (0.959999978542327880859375 - _1852)) + _1856) * _2093.z)) * _2074);
    float _2438 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
    float _2449 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
    float _2460 = isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0));
    bool _2147 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2158;
    _2158.x = _2147 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2438 : (isnan(_2438) ? 1.0 : min(_2438, 1.0)));
    _2158.y = _2147 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2449 : (isnan(_2449) ? 1.0 : min(_2449, 1.0)));
    _2158.z = _2147 ? ((_587 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2460 : (isnan(_2460) ? 1.0 : min(_2460, 1.0)));
    payload._m0 = _2158;
}


