#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _51
{
    vec3 _m0;
};

struct _55
{
    vec2 _m0;
};

struct _58
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _51 payload;
hitAttributeEXT _55 hit;
layout(location = 1) rayPayloadEXT _58 _60;
layout(location = 2) rayPayloadEXT _58 _61;

vec3 _1175;

void main()
{
    float _69 = float(gl_LaunchSizeEXT.y);
    float _99 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _108 = sqrt(((_100 * _100) + (_99 * _99)) + (_101 * _101)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _69)))));
    uvec4 _119 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _120 = _119.y;
    uint _160;
    uint _162;
    uint _163;
    if (_119.x == 0u)
    {
        uint _128 = (_120 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _137 = uvec3(texelFetch(l_geomIndexBuffer, int(_128)).x, texelFetch(l_geomIndexBuffer, int(_128 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_128 + 2u)).x);
        _160 = _137.x;
        _162 = _137.y;
        _163 = _137.z;
    }
    else
    {
        uint _141 = uint(gl_PrimitiveID) * 6u;
        uint _143 = _141 & 4294967292u;
        uint _146 = (_120 + _143) >> 2u;
        uvec2 _153 = uvec2(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x);
        uint _154 = _153.x;
        uint _155 = _153.y;
        uint _157 = _154 >> 16u;
        uint _158 = _155 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_143 == _141)
        {
            frontier_phi_3_2_ladder = _158;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _154 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _155 >> 16u;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _157;
        }
        _160 = frontier_phi_3_2_ladder_2;
        _162 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder;
    }
    uvec4 _167 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _168 = _167.x;
    uint _169 = _167.z;
    bool _170 = _169 != 0u;
    bool _172 = _119.w == 0u;
    bool _173 = _170 || _172;
    uint _174 = _168 * _160;
    uint _175 = _174 + 12u;
    uint _199;
    uint _200;
    uint _201;
    uint _202;
    if (_173)
    {
        uvec4 _178 = texelFetch(l_geomAttrib_0, int(_175 >> 2u));
        uint _179 = _178.x;
        _199 = _179 & 255u;
        _200 = (_179 >> 8u) & 255u;
        _201 = (_179 >> 16u) & 255u;
        _202 = 16u;
    }
    else
    {
        uint _187 = _175 >> 2u;
        uvec2 _193 = uvec2(texelFetch(l_geomAttrib_0, int(_187)).x, texelFetch(l_geomAttrib_0, int(_187 + 1u)).x);
        uint _194 = _193.x;
        _199 = _194 & 65535u;
        _200 = _194 >> 16u;
        _201 = _193.y & 65535u;
        _202 = 20u;
    }
    uvec4 _210 = texelFetch(l_geomAttrib_0, int((_202 + _174) >> 2u));
    uint _211 = _210.x;
    bool _225 = _169 == 0u;
    uint _226;
    if (_225)
    {
        _226 = _202 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_172)
        {
            frontier_phi_9_10_ladder = _202 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _202 + 12u;
        }
        _226 = frontier_phi_9_10_ladder;
    }
    uvec4 _234 = texelFetch(l_geomAttrib_0, int(((_174 + 4u) + (_170 ? (_226 + 4u) : _226)) >> 2u));
    uint _235 = _234.x;
    float _239 = float(int(uint(int(_235 << 16u) >> int(16u))));
    float _240 = float(int(uint(int(_235) >> int(16u))));
    uint _241 = _168 * _162;
    uint _242 = _241 + 12u;
    uint _263;
    uint _264;
    uint _265;
    uint _266;
    if (_173)
    {
        uvec4 _244 = texelFetch(l_geomAttrib_0, int(_242 >> 2u));
        uint _245 = _244.x;
        _263 = _245 & 255u;
        _264 = (_245 >> 8u) & 255u;
        _265 = (_245 >> 16u) & 255u;
        _266 = 16u;
    }
    else
    {
        uint _251 = _242 >> 2u;
        uvec2 _257 = uvec2(texelFetch(l_geomAttrib_0, int(_251)).x, texelFetch(l_geomAttrib_0, int(_251 + 1u)).x);
        uint _258 = _257.x;
        _263 = _258 & 65535u;
        _264 = _258 >> 16u;
        _265 = _257.y & 65535u;
        _266 = 20u;
    }
    uvec4 _272 = texelFetch(l_geomAttrib_0, int((_266 + _241) >> 2u));
    uint _273 = _272.x;
    uint _285;
    if (_225)
    {
        _285 = _266 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_172)
        {
            frontier_phi_16_17_ladder = _266 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _266 + 12u;
        }
        _285 = frontier_phi_16_17_ladder;
    }
    uvec4 _293 = texelFetch(l_geomAttrib_0, int(((_241 + 4u) + (_170 ? (_285 + 4u) : _285)) >> 2u));
    uint _294 = _293.x;
    float _298 = float(int(uint(int(_294 << 16u) >> int(16u))));
    float _299 = float(int(uint(int(_294) >> int(16u))));
    uint _300 = _168 * _163;
    uint _301 = _300 + 12u;
    uint _322;
    uint _323;
    uint _324;
    uint _325;
    if (_173)
    {
        uvec4 _303 = texelFetch(l_geomAttrib_0, int(_301 >> 2u));
        uint _304 = _303.x;
        _322 = _304 & 255u;
        _323 = (_304 >> 8u) & 255u;
        _324 = (_304 >> 16u) & 255u;
        _325 = 16u;
    }
    else
    {
        uint _310 = _301 >> 2u;
        uvec2 _316 = uvec2(texelFetch(l_geomAttrib_0, int(_310)).x, texelFetch(l_geomAttrib_0, int(_310 + 1u)).x);
        uint _317 = _316.x;
        _322 = _317 & 65535u;
        _323 = _317 >> 16u;
        _324 = _316.y & 65535u;
        _325 = 20u;
    }
    uvec4 _331 = texelFetch(l_geomAttrib_0, int((_325 + _300) >> 2u));
    uint _332 = _331.x;
    uint _344;
    if (_225)
    {
        _344 = _325 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_172)
        {
            frontier_phi_23_24_ladder = _325 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _325 + 12u;
        }
        _344 = frontier_phi_23_24_ladder;
    }
    uvec4 _352 = texelFetch(l_geomAttrib_0, int(((_300 + 4u) + (_170 ? (_344 + 4u) : _344)) >> 2u));
    uint _353 = _352.x;
    float _357 = float(int(uint(int(_353 << 16u) >> int(16u))));
    float _358 = float(int(uint(int(_353) >> int(16u))));
    bool _360 = _119.z == 0u;
    float _396;
    float _397;
    float _398;
    if (_360)
    {
        uint _363 = _160 * 3u;
        uvec3 _372 = uvec3(texelFetch(l_geomPositionBuffer, int(_363)).x, texelFetch(l_geomPositionBuffer, int(_363 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_363 + 2u)).x);
        _396 = uintBitsToFloat(_372.x);
        _397 = uintBitsToFloat(_372.y);
        _398 = uintBitsToFloat(_372.z);
    }
    else
    {
        uint _380 = _160 * 2u;
        uvec2 _386 = uvec2(texelFetch(l_geomPositionBuffer, int(_380)).x, texelFetch(l_geomPositionBuffer, int(_380 + 1u)).x);
        uint _387 = _386.x;
        _396 = unpackHalf2x16(_387).x;
        _397 = unpackHalf2x16(_387 >> 16u).x;
        _398 = unpackHalf2x16(_386.y).x;
    }
    float _434;
    float _435;
    float _436;
    if (_360)
    {
        uint _401 = _162 * 3u;
        uvec3 _410 = uvec3(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_401 + 2u)).x);
        _434 = uintBitsToFloat(_410.x);
        _435 = uintBitsToFloat(_410.y);
        _436 = uintBitsToFloat(_410.z);
    }
    else
    {
        uint _418 = _162 * 2u;
        uvec2 _424 = uvec2(texelFetch(l_geomPositionBuffer, int(_418)).x, texelFetch(l_geomPositionBuffer, int(_418 + 1u)).x);
        uint _425 = _424.x;
        _434 = unpackHalf2x16(_425).x;
        _435 = unpackHalf2x16(_425 >> 16u).x;
        _436 = unpackHalf2x16(_424.y).x;
    }
    float _472;
    float _473;
    float _474;
    if (_360)
    {
        uint _439 = _163 * 3u;
        uvec3 _448 = uvec3(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_439 + 2u)).x);
        _472 = uintBitsToFloat(_448.x);
        _473 = uintBitsToFloat(_448.y);
        _474 = uintBitsToFloat(_448.z);
    }
    else
    {
        uint _456 = _163 * 2u;
        uvec2 _462 = uvec2(texelFetch(l_geomPositionBuffer, int(_456)).x, texelFetch(l_geomPositionBuffer, int(_456 + 1u)).x);
        uint _463 = _462.x;
        _472 = unpackHalf2x16(_463).x;
        _473 = unpackHalf2x16(_463 >> 16u).x;
        _474 = unpackHalf2x16(_462.y).x;
    }
    float _477 = (1.0 - hit._m0.x) - hit._m0.y;
    float _511 = (_298 - _239) * 0.00048828125;
    float _513 = (_299 - _240) * 0.00048828125;
    float _516 = (_357 - _239) * 0.00048828125;
    float _517 = (_358 - _240) * 0.00048828125;
    float _539 = _434 - _396;
    float _540 = _435 - _397;
    float _541 = _436 - _398;
    float _544 = fma(_541, gl_ObjectToWorldEXT[2u].x, fma(_540, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _539));
    float _547 = fma(_541, gl_ObjectToWorldEXT[2u].y, fma(_540, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _539));
    float _550 = fma(_541, gl_ObjectToWorldEXT[2u].z, fma(_540, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _539));
    float _551 = _472 - _396;
    float _552 = _473 - _397;
    float _553 = _474 - _398;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = (((_298 * hit._m0.x) + (_239 * _477)) + (_357 * hit._m0.y)) * 0.00048828125;
    float _564 = (((_299 * hit._m0.x) + (_240 * _477)) + (_358 * hit._m0.y)) * 0.00048828125;
    float _568 = (((float(_199) * _477) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _571 = (((float(_200) * _477) + (-127.0)) + (float(_264) * hit._m0.x)) + (float(_323) * hit._m0.y);
    float _574 = (((float(_201) * _477) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _575 = _568 * 0.0078740157186985015869140625;
    float _577 = _571 * 0.0078740157186985015869140625;
    float _578 = _574 * 0.0078740157186985015869140625;
    float _591 = ((((float(_211 & 255u) * _477) + (-127.0)) + (float(_273 & 255u) * hit._m0.x)) + (float(_332 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _592 = ((((float((_211 >> 8u) & 255u) * _477) + (-127.0)) + (float((_273 >> 8u) & 255u) * hit._m0.x)) + (float((_332 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _593 = ((((float((_211 >> 16u) & 255u) * _477) + (-127.0)) + (float((_273 >> 16u) & 255u) * hit._m0.x)) + (float((_332 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float(_211 >> 24u) * _477) + (-127.0)) + (float(_273 >> 24u) * hit._m0.x)) + (float(_332 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((_592 * _578) - (_593 * _577)) * _594;
    float _605 = ((_593 * _575) - (_591 * _578)) * _594;
    float _606 = ((_591 * _577) - (_592 * _575)) * _594;
    float _610 = inversesqrt(dot(vec3(_604, _605, _606), vec3(_604, _605, _606)));
    uvec2 _631 = uvec2(textureSize(P_AMSN_Scroll_snp_0_Texture2D_0, int(0u)));
    bool _636 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _689;
    if (_636)
    {
        float _647 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _653 = (_562 * _547) - (_559 * _550);
        float _656 = (_556 * _550) - (_562 * _544);
        float _659 = (_559 * _544) - (_556 * _547);
        float _686 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_656 * _656) + (_659 * _659)) + (_653 * _653)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_647 * gl_WorldRayDirectionEXT.x, _647 * gl_WorldRayDirectionEXT.y, _647 * gl_WorldRayDirectionEXT.z), vec3(_575, _577, _578))));
        _689 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    }
    else
    {
        _689 = 0.0;
    }
    vec4 _693 = textureLod(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _563) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _564) + cbTextureTilingScale._m0[0u].w), _689);
    float _698 = _693.x * cbMtdParam._m0[9u].x;
    float _699 = _693.y * cbMtdParam._m0[9u].y;
    float _700 = _693.z * cbMtdParam._m0[9u].z;
    uvec2 _716 = uvec2(textureSize(P_AMSN_Scroll_snp_0_Texture2D_1, int(0u)));
    float _720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _721 = _720 * gl_WorldRayDirectionEXT.x;
    float _722 = _720 * gl_WorldRayDirectionEXT.y;
    float _723 = _720 * gl_WorldRayDirectionEXT.z;
    float _767;
    if (_636)
    {
        float _733 = (_562 * _547) - (_559 * _550);
        float _736 = (_556 * _550) - (_562 * _544);
        float _739 = (_559 * _544) - (_556 * _547);
        float _765 = ((log2((((float(_716.y) * 0.5) * float(_716.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_736 * _736) + (_739 * _739)) + (_733 * _733)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_721, _722, _723), vec3(_575, _577, _578))));
        _767 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    }
    else
    {
        _767 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _563) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _564) + cbTextureTilingScale._m0[1u].w), _767);
    float _774 = _770.z;
    float _777 = (_770.x * 2.0) + (-1.0);
    float _779 = (_770.y * 2.0) + (-1.0);
    float _780 = dot(vec2(_777, _779), vec2(_777, _779));
    float _1261 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _785 = sqrt(1.0 - (isnan(1.0) ? _1261 : (isnan(_1261) ? 1.0 : min(_1261, 1.0))));
    float _788 = fma(_785, _575, fma(_779, _591, (_610 * _604) * _777));
    float _791 = fma(_785, _577, fma(_779, _592, (_610 * _605) * _777));
    float _794 = fma(_785, _578, fma(_779, _593, (_610 * _606) * _777));
    float _798 = inversesqrt(dot(vec3(_788, _791, _794), vec3(_788, _791, _794)));
    float _799 = _798 * _788;
    float _800 = _798 * _791;
    float _801 = _798 * _794;
    float _813 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _814 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _815 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _816 = (-0.0) - _721;
    float _818 = (-0.0) - _722;
    float _819 = (-0.0) - _723;
    float _825 = float(gl_LaunchIDEXT.x);
    float _826 = float(gl_LaunchIDEXT.y);
    float _829 = float(gl_LaunchSizeEXT.x);
    float _843 = fract(fract(sin(dot(vec2(_825 / _829, _826 / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _856 = fract(fract(sin(dot(vec2((_825 + 128.0) / _829, (_826 + 128.0) / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _857 = 1.0 - cbMtdParam._m0[10u].x;
    float _858 = _857 * _698;
    float _859 = _857 * _699;
    float _860 = _857 * _700;
    float _865 = (_698 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _866 = (_699 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _867 = (_700 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _868 = _865 + 0.039999999105930328369140625;
    float _870 = _866 + 0.039999999105930328369140625;
    float _871 = _867 + 0.039999999105930328369140625;
    _61._m0 = 1u;
    uvec4 _881 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _882 = _881.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _882, _881.w, _882, vec3(_813, _814, _815), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _997;
    float _998;
    float _999;
    float _1000;
    float _1001;
    float _1002;
    if (_61._m0 == 0u)
    {
        float _903 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_799, _800, _801));
        float _1272 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
        float _906 = isnan(1.0) ? _1272 : (isnan(_1272) ? 1.0 : min(_1272, 1.0));
        float _925 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _774) * 0.949999988079071044921875);
        float _926 = _925 * _925;
        float _927 = g_sceneCB._m0[4u].x - _721;
        float _928 = g_sceneCB._m0[4u].y - _722;
        float _929 = g_sceneCB._m0[4u].z - _723;
        float _933 = inversesqrt(dot(vec3(_927, _928, _929), vec3(_927, _928, _929)));
        float _934 = _933 * _927;
        float _935 = _933 * _928;
        float _936 = _933 * _929;
        float _937 = dot(vec3(_799, _800, _801), vec3(g_sceneCB._m0[4u].xyz));
        float _1283 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
        float _940 = isnan(1.0) ? _1283 : (isnan(_1283) ? 1.0 : min(_1283, 1.0));
        float _941 = dot(vec3(_799, _800, _801), vec3(_816, _818, _819));
        float _1294 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
        float _944 = isnan(1.0) ? _1294 : (isnan(_1294) ? 1.0 : min(_1294, 1.0));
        float _945 = dot(vec3(_799, _800, _801), vec3(_934, _935, _936));
        float _1305 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
        float _948 = isnan(1.0) ? _1305 : (isnan(_1305) ? 1.0 : min(_1305, 1.0));
        float _949 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_934, _935, _936));
        float _1316 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _953 = _926 * _926;
        float _957 = ((_948 * _948) * (_953 + (-1.0))) + 1.0;
        float _966 = exp2(log2(1.0 - (isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0)))) * 5.0);
        float _977 = 1.0 - _926;
        float _988 = (0.5 / (((_944 * ((_940 * _977) + _926)) + 9.9999999392252902907785028219223e-09) + (((_944 * _977) + _926) * _940))) * _940;
        float _1327 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _990 = (isnan(1.0) ? _1327 : (isnan(_1327) ? 1.0 : min(_1327, 1.0))) * (_953 / ((_957 * _957) * 3.141590118408203125));
        _997 = ((_858 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _906;
        _998 = ((_859 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _906;
        _999 = ((_860 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _906;
        _1000 = (((_966 * (0.959999978542327880859375 - _865)) + _868) * g_sceneCB._m0[5u].x) * _990;
        _1001 = (((_966 * (0.959999978542327880859375 - _866)) + _870) * g_sceneCB._m0[5u].y) * _990;
        _1002 = (((_966 * (0.959999978542327880859375 - _867)) + _871) * g_sceneCB._m0[5u].z) * _990;
    }
    else
    {
        _997 = 0.0;
        _998 = 0.0;
        _999 = 0.0;
        _1000 = 0.0;
        _1001 = 0.0;
        _1002 = 0.0;
    }
    bool _1004 = abs(_800) < 0.89999997615814208984375;
    float _1006 = float(_1004);
    float _1007 = _1004 ? 0.0 : 1.0;
    float _1010 = (_1006 * _801) - (_1007 * _800);
    float _1011 = _1007 * _799;
    float _1013 = (-0.0) - (_799 * _1006);
    float _1017 = inversesqrt(dot(vec3(_1010, _1011, _1013), vec3(_1010, _1011, _1013)));
    float _1018 = _1010 * _1017;
    float _1019 = _1011 * _1017;
    float _1020 = _1017 * _1013;
    float _1023 = (_1019 * _801) - (_1020 * _800);
    float _1026 = (_1020 * _799) - (_1018 * _801);
    float _1029 = (_1018 * _800) - (_1019 * _799);
    float _1031;
    float _1039;
    float _1030 = 0.0;
    uint _1032 = 0u;
    float _1036;
    bool _1038;
    for (;;)
    {
        _1036 = (float(_1032) + _843) * 0.03125;
        _1038 = _1032 == 0u;
        float frontier_phi_43_pred;
        if (_1038)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1180;
            float _1181;
            uint _1183;
            _1180 = 0.0;
            _1181 = 0.5;
            _1183 = _1032;
            float _1040;
            for (;;)
            {
                _1040 = ((_1183 & 1u) != 0u) ? (_1181 + _1180) : _1180;
                uint _1184 = _1183 >> 1u;
                if (_1184 == 0u)
                {
                    break;
                }
                else
                {
                    _1180 = _1040;
                    _1181 *= 0.5;
                    _1183 = _1184;
                }
            }
            frontier_phi_43_pred = _1040;
        }
        _1039 = frontier_phi_43_pred;
        float _1041 = _1039 + _856;
        float _1045 = sqrt(_1036);
        float _1046 = ((_1041 > 1.0) ? (_1041 + (-1.0)) : _1041) * 6.283185482025146484375;
        float _1049 = cos(_1046) * _1045;
        float _1051 = sin(_1046) * _1045;
        float _1053 = sqrt(1.0 - _1036);
        float _1066 = ((_1053 * _799) + (_1049 * _1023)) + (_1051 * _1018);
        float _1067 = ((_1053 * _800) + (_1049 * _1026)) + (_1051 * _1019);
        float _1068 = ((_1053 * _801) + (_1049 * _1029)) + (_1051 * _1020);
        _60._m0 = 1u;
        uvec4 _1072 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1073 = _1072.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1073, _1072.w, _1073, vec3(_813, _814, _815), 9.9999997473787516355514526367188e-05, vec3(_1066, _1067, _1068), 10000.0, 1);
        float _1079 = dot(vec3(_799, _800, _801), vec3(_1066, _1067, _1068));
        float _1338 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1082 = isnan(1.0) ? _1338 : (isnan(_1338) ? 1.0 : min(_1338, 1.0));
        _1031 = ((float(_60._m0 == 0u) * _1082) / (_1082 * 0.3183098733425140380859375)) + _1030;
        uint _1033 = _1032 + 1u;
        if (_1033 == 32u)
        {
            break;
        }
        else
        {
            _1030 = _1031;
            _1032 = _1033;
            continue;
        }
    }
    float _1090 = _1031 * 0.009947183541953563690185546875;
    float _1095 = dot(vec3(_721, _722, _723), vec3(_799, _800, _801)) * 2.0;
    vec4 _1109 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_721 - (_1095 * _799), _722 - (_1095 * _800), _723 - (_1095 * _801)), 4.0 - (_774 * 4.0));
    float _1114 = dot(vec3(_816, _818, _819), vec3(_799, _800, _801));
    float _1349 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1124 = exp2(log2(1.0 - (isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0)))) * 5.0);
    vec4 _1136 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_799, _800, _801), 0.0);
    float _1147 = (_1000 + _997) + (((_1136.x * _858) + (((_1124 * (0.959999978542327880859375 - _865)) + _868) * _1109.x)) * _1090);
    float _1151 = (_1001 + _998) + (((_1136.y * _859) + (((_1124 * (0.959999978542327880859375 - _866)) + _870) * _1109.y)) * _1090);
    float _1155 = (_1002 + _999) + (((_1136.z * _860) + (((_1124 * (0.959999978542327880859375 - _867)) + _871) * _1109.z)) * _1090);
    float _1360 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
    float _1371 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    float _1382 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
    bool _1163 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1174;
    _1174.x = _1163 ? ((_568 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0)));
    _1174.y = _1163 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0)));
    _1174.z = _1163 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0)));
    payload._m0 = _1174;
}


