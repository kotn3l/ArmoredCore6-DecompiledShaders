#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1939;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _167 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _168 >> 16u;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _170;
        }
        _173 = frontier_phi_3_2_ladder_2;
        _175 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uvec4 _246 = texelFetch(l_geomAttrib_0, int((_243 + _187) >> 2u));
    uint _247 = _246.x;
    uvec4 _259 = texelFetch(l_geomAttrib_0, int(((_187 + 8u) + _243) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uvec4 _269 = texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _243) >> 2u));
    uint _270 = _269.x;
    uint _276 = _181 * _175;
    uint _277 = _276 + 12u;
    uint _298;
    uint _299;
    uint _300;
    uint _301;
    if (_186)
    {
        uvec4 _279 = texelFetch(l_geomAttrib_0, int(_277 >> 2u));
        uint _280 = _279.x;
        _298 = _280 & 255u;
        _299 = (_280 >> 8u) & 255u;
        _300 = (_280 >> 16u) & 255u;
        _301 = 16u;
    }
    else
    {
        uint _286 = _277 >> 2u;
        uvec2 _292 = uvec2(texelFetch(l_geomAttrib_0, int(_286)).x, texelFetch(l_geomAttrib_0, int(_286 + 1u)).x);
        uint _293 = _292.x;
        _298 = _293 & 65535u;
        _299 = _293 >> 16u;
        _300 = _292.y & 65535u;
        _301 = 20u;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int((_301 + _276) >> 2u));
    uint _308 = _307.x;
    uint _320;
    if (_238)
    {
        _320 = _301 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _301 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _301 + 12u;
        }
        _320 = frontier_phi_16_17_ladder;
    }
    uint _324 = _183 ? (_320 + 4u) : _320;
    uvec4 _327 = texelFetch(l_geomAttrib_0, int((_324 + _276) >> 2u));
    uint _328 = _327.x;
    uvec4 _340 = texelFetch(l_geomAttrib_0, int(((_276 + 8u) + _324) >> 2u));
    uint _341 = _340.x;
    float _345 = float(int(uint(int(_341 << 16u) >> int(16u))));
    float _346 = float(int(uint(int(_341) >> int(16u))));
    uvec4 _350 = texelFetch(l_geomAttrib_0, int(((_276 + 12u) + _324) >> 2u));
    uint _351 = _350.x;
    uint _357 = _181 * _176;
    uint _358 = _357 + 12u;
    uint _379;
    uint _380;
    uint _381;
    uint _382;
    if (_186)
    {
        uvec4 _360 = texelFetch(l_geomAttrib_0, int(_358 >> 2u));
        uint _361 = _360.x;
        _379 = _361 & 255u;
        _380 = (_361 >> 8u) & 255u;
        _381 = (_361 >> 16u) & 255u;
        _382 = 16u;
    }
    else
    {
        uint _367 = _358 >> 2u;
        uvec2 _373 = uvec2(texelFetch(l_geomAttrib_0, int(_367)).x, texelFetch(l_geomAttrib_0, int(_367 + 1u)).x);
        uint _374 = _373.x;
        _379 = _374 & 65535u;
        _380 = _374 >> 16u;
        _381 = _373.y & 65535u;
        _382 = 20u;
    }
    uvec4 _388 = texelFetch(l_geomAttrib_0, int((_382 + _357) >> 2u));
    uint _389 = _388.x;
    uint _401;
    if (_238)
    {
        _401 = _382 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _382 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _382 + 12u;
        }
        _401 = frontier_phi_23_24_ladder;
    }
    uint _405 = _183 ? (_401 + 4u) : _401;
    uvec4 _408 = texelFetch(l_geomAttrib_0, int((_405 + _357) >> 2u));
    uint _409 = _408.x;
    uvec4 _421 = texelFetch(l_geomAttrib_0, int(((_357 + 8u) + _405) >> 2u));
    uint _422 = _421.x;
    float _426 = float(int(uint(int(_422 << 16u) >> int(16u))));
    float _427 = float(int(uint(int(_422) >> int(16u))));
    uvec4 _431 = texelFetch(l_geomAttrib_0, int(((_357 + 12u) + _405) >> 2u));
    uint _432 = _431.x;
    bool _439 = _132.z == 0u;
    float _475;
    float _476;
    float _477;
    if (_439)
    {
        uint _442 = _173 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _173 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _513;
    float _514;
    float _515;
    if (_439)
    {
        uint _480 = _175 * 3u;
        uvec3 _489 = uvec3(texelFetch(l_geomPositionBuffer, int(_480)).x, texelFetch(l_geomPositionBuffer, int(_480 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_480 + 2u)).x);
        _513 = uintBitsToFloat(_489.x);
        _514 = uintBitsToFloat(_489.y);
        _515 = uintBitsToFloat(_489.z);
    }
    else
    {
        uint _497 = _175 * 2u;
        uvec2 _503 = uvec2(texelFetch(l_geomPositionBuffer, int(_497)).x, texelFetch(l_geomPositionBuffer, int(_497 + 1u)).x);
        uint _504 = _503.x;
        _513 = unpackHalf2x16(_504).x;
        _514 = unpackHalf2x16(_504 >> 16u).x;
        _515 = unpackHalf2x16(_503.y).x;
    }
    float _551;
    float _552;
    float _553;
    if (_439)
    {
        uint _518 = _176 * 3u;
        uvec3 _527 = uvec3(texelFetch(l_geomPositionBuffer, int(_518)).x, texelFetch(l_geomPositionBuffer, int(_518 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_518 + 2u)).x);
        _551 = uintBitsToFloat(_527.x);
        _552 = uintBitsToFloat(_527.y);
        _553 = uintBitsToFloat(_527.z);
    }
    else
    {
        uint _535 = _176 * 2u;
        uvec2 _541 = uvec2(texelFetch(l_geomPositionBuffer, int(_535)).x, texelFetch(l_geomPositionBuffer, int(_535 + 1u)).x);
        uint _542 = _541.x;
        _551 = unpackHalf2x16(_542).x;
        _552 = unpackHalf2x16(_542 >> 16u).x;
        _553 = unpackHalf2x16(_541.y).x;
    }
    float _556 = (1.0 - hit._m0.x) - hit._m0.y;
    float _612 = (_345 - _264) * 0.00048828125;
    float _614 = (_346 - _265) * 0.00048828125;
    float _617 = (_426 - _264) * 0.00048828125;
    float _618 = (_427 - _265) * 0.00048828125;
    float _640 = _513 - _475;
    float _641 = _514 - _476;
    float _642 = _515 - _477;
    float _645 = fma(_642, gl_ObjectToWorldEXT[2u].x, fma(_641, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _640));
    float _648 = fma(_642, gl_ObjectToWorldEXT[2u].y, fma(_641, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _640));
    float _651 = fma(_642, gl_ObjectToWorldEXT[2u].z, fma(_641, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _640));
    float _652 = _551 - _475;
    float _653 = _552 - _476;
    float _654 = _553 - _477;
    float _657 = fma(_654, gl_ObjectToWorldEXT[2u].x, fma(_653, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _652));
    float _660 = fma(_654, gl_ObjectToWorldEXT[2u].y, fma(_653, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _652));
    float _663 = fma(_654, gl_ObjectToWorldEXT[2u].z, fma(_653, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _652));
    float _664 = (((_345 * hit._m0.x) + (_264 * _556)) + (_426 * hit._m0.y)) * 0.00048828125;
    float _665 = (((_346 * hit._m0.x) + (_265 * _556)) + (_427 * hit._m0.y)) * 0.00048828125;
    float _669 = (((float(_212) * _556) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _672 = (((float(_213) * _556) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _675 = (((float(_214) * _556) + (-127.0)) + (float(_300) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _676 = _669 * 0.0078740157186985015869140625;
    float _678 = _672 * 0.0078740157186985015869140625;
    float _679 = _675 * 0.0078740157186985015869140625;
    float _692 = ((((float(_224 & 255u) * _556) + (-127.0)) + (float(_308 & 255u) * hit._m0.x)) + (float(_389 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _693 = ((((float((_224 >> 8u) & 255u) * _556) + (-127.0)) + (float((_308 >> 8u) & 255u) * hit._m0.x)) + (float((_389 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _694 = ((((float((_224 >> 16u) & 255u) * _556) + (-127.0)) + (float((_308 >> 16u) & 255u) * hit._m0.x)) + (float((_389 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _695 = ((((float(_224 >> 24u) * _556) + (-127.0)) + (float(_308 >> 24u) * hit._m0.x)) + (float(_389 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _705 = ((_693 * _679) - (_694 * _678)) * _695;
    float _706 = ((_694 * _676) - (_692 * _679)) * _695;
    float _707 = ((_692 * _678) - (_693 * _676)) * _695;
    float _711 = inversesqrt(dot(vec3(_705, _706, _707), vec3(_705, _706, _707)));
    float _712 = _711 * _705;
    float _713 = _711 * _706;
    float _714 = _711 * _707;
    float _729 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    float _732 = (_729 * cbMtdParam._m0[22u].y) + _664;
    float _733 = (_729 * cbMtdParam._m0[22u].z) + _665;
    float _757 = (cbTextureTilingScale._m0[3u].x * ((_729 * cbMtdParam._m0[22u].w) + _664)) + cbTextureTilingScale._m0[3u].z;
    float _758 = (((_729 * cbMtdParam._m0[23u].x) + _665) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w;
    uvec2 _760 = uvec2(textureSize(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    bool _765 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _818;
    if (_765)
    {
        float _776 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _782 = (_663 * _648) - (_660 * _651);
        float _785 = (_657 * _651) - (_663 * _645);
        float _788 = (_660 * _645) - (_657 * _648);
        float _815 = ((log2((((float(_760.y) * 0.5) * float(_760.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_785 * _785) + (_788 * _788)) + (_782 * _782)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_776 * gl_WorldRayDirectionEXT.x, _776 * gl_WorldRayDirectionEXT.y, _776 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _818 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    }
    else
    {
        _818 = 0.0;
    }
    vec4 _822 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2(_757, _758), _818);
    float _828 = (_822.x * 2.0) + (-1.0);
    float _830 = (_822.y * 2.0) + (-1.0);
    float _834 = 1.0 - dot(vec2(_828, _830), vec2(_828, _830));
    float _2026 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _836 = sqrt(isnan(1.0) ? _2026 : (isnan(_2026) ? 1.0 : min(_2026, 1.0)));
    float _839 = fma(_836, _676, fma(_830, _692, _828 * _712));
    float _842 = fma(_836, _678, fma(_830, _693, _828 * _713));
    float _845 = fma(_836, _679, fma(_830, _694, _828 * _714));
    float _849 = inversesqrt(dot(vec3(_839, _842, _845), vec3(_839, _842, _845)));
    float _851 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[18u].x;
    float _852 = _851 * cbMtdParam._m0[16u].x;
    float _860 = (((_842 * 0.5) * _849) + (-0.25)) * cbMtdParam._m0[15u].w;
    float _862 = (-0.0) - (cbMtdParam._m0[15u].w * (((_839 * 0.5) * _849) + (-0.25)));
    float _864 = fract(_852);
    float _866 = fract(_852 + 0.5);
    float _877 = abs((_864 * 2.0) + (-1.0));
    vec4 _895 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_864 * _862) + _732) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_860 * _864) + _733) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _897 = _895.x;
    float _898 = _895.y;
    float _899 = _895.z;
    vec4 _900 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_866 * _862) + _732) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_860 * _866) + _733) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _920 = cbMtdParam._m0[20u].z * ((((float((_351 >> 8u) & 255u) * hit._m0.x) + (float((_270 >> 8u) & 255u) * _556)) + (float((_432 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _933 = (_729 * cbMtdParam._m0[23u].w) + _664;
    float _934 = (_729 * cbMtdParam._m0[24u].x) + _665;
    float _990;
    if (_765)
    {
        float _950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _956 = (_663 * _648) - (_660 * _651);
        float _959 = (_657 * _651) - (_663 * _645);
        float _962 = (_660 * _645) - (_657 * _648);
        float _988 = ((log2((((float(_760.y) * 0.5) * float(_760.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_959 * _959) + (_962 * _962)) + (_956 * _956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_950 * gl_WorldRayDirectionEXT.x, _950 * gl_WorldRayDirectionEXT.y, _950 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _990 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    }
    else
    {
        _990 = 0.0;
    }
    vec4 _992 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2(_757, _758), _990);
    float _998 = (_992.x * 2.0) + (-1.0);
    float _999 = (_992.y * 2.0) + (-1.0);
    float _1003 = 1.0 - dot(vec2(_998, _999), vec2(_998, _999));
    float _2042 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1005 = sqrt(isnan(1.0) ? _2042 : (isnan(_2042) ? 1.0 : min(_2042, 1.0)));
    float _1008 = fma(_1005, _676, fma(_999, _692, _998 * _712));
    float _1011 = fma(_1005, _678, fma(_999, _693, _998 * _713));
    float _1014 = fma(_1005, _679, fma(_999, _694, _998 * _714));
    float _1018 = inversesqrt(dot(vec3(_1008, _1011, _1014), vec3(_1008, _1011, _1014)));
    float _1019 = _851 * cbMtdParam._m0[15u].y;
    float _1026 = (((_1011 * 0.5) * _1018) + (-0.25)) * cbMtdParam._m0[19u].z;
    float _1028 = (-0.0) - (cbMtdParam._m0[19u].z * (((_1008 * 0.5) * _1018) + (-0.25)));
    float _1029 = fract(_1019);
    float _1031 = fract(_1019 + 0.5);
    float _1042 = abs((_1029 * 2.0) + (-1.0));
    vec4 _1059 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_1029 * _1028) + _933) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1026 * _1029) + _934) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1061 = _1059.x;
    float _1062 = _1059.y;
    float _1063 = _1059.z;
    vec4 _1064 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_1031 * _1028) + _933) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1026 * _1031) + _934) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1094 = (_729 * cbMtdParam._m0[20u].w) + _664;
    float _1095 = (_729 * cbMtdParam._m0[21u].x) + _665;
    float _1148;
    if (_765)
    {
        float _1108 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1114 = (_663 * _648) - (_660 * _651);
        float _1117 = (_657 * _651) - (_663 * _645);
        float _1120 = (_660 * _645) - (_657 * _648);
        float _1146 = ((log2((((float(_760.y) * 0.5) * float(_760.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1117 * _1117) + (_1120 * _1120)) + (_1114 * _1114)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1108 * gl_WorldRayDirectionEXT.x, _1108 * gl_WorldRayDirectionEXT.y, _1108 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1148 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    }
    else
    {
        _1148 = 0.0;
    }
    vec4 _1150 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2(_757, _758), _1148);
    float _1156 = (_1150.x * 2.0) + (-1.0);
    float _1157 = (_1150.y * 2.0) + (-1.0);
    float _1161 = 1.0 - dot(vec2(_1156, _1157), vec2(_1156, _1157));
    float _2058 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
    float _1163 = sqrt(isnan(1.0) ? _2058 : (isnan(_2058) ? 1.0 : min(_2058, 1.0)));
    float _1166 = fma(_1163, _676, fma(_1157, _692, _1156 * _712));
    float _1169 = fma(_1163, _678, fma(_1157, _693, _1156 * _713));
    float _1172 = fma(_1163, _679, fma(_1157, _694, _1156 * _714));
    float _1176 = inversesqrt(dot(vec3(_1166, _1169, _1172), vec3(_1166, _1169, _1172)));
    float _1177 = _851 * cbMtdParam._m0[19u].x;
    float _1184 = (((_1169 * 0.5) * _1176) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _1186 = (-0.0) - (cbMtdParam._m0[19u].y * (((_1166 * 0.5) * _1176) + (-0.25)));
    float _1187 = fract(_1177);
    float _1189 = fract(_1177 + 0.5);
    float _1200 = abs((_1187 * 2.0) + (-1.0));
    vec4 _1217 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1187 * _1186) + _1094) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1184 * _1187) + _1095) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1219 = _1217.x;
    float _1220 = _1217.y;
    float _1221 = _1217.z;
    vec4 _1222 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1189 * _1186) + _1094) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1184 * _1189) + _1095) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1251 = (_729 * cbMtdParam._m0[21u].w) + _664;
    float _1252 = (_729 * cbMtdParam._m0[22u].x) + _665;
    float _1305;
    if (_765)
    {
        float _1265 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1271 = (_663 * _648) - (_660 * _651);
        float _1274 = (_657 * _651) - (_663 * _645);
        float _1277 = (_660 * _645) - (_657 * _648);
        float _1303 = ((log2((((float(_760.y) * 0.5) * float(_760.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1274 * _1274) + (_1277 * _1277)) + (_1271 * _1271)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1265 * gl_WorldRayDirectionEXT.x, _1265 * gl_WorldRayDirectionEXT.y, _1265 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1305 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
    }
    else
    {
        _1305 = 0.0;
    }
    vec4 _1307 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2(_757, _758), _1305);
    float _1313 = (_1307.x * 2.0) + (-1.0);
    float _1314 = (_1307.y * 2.0) + (-1.0);
    float _1318 = 1.0 - dot(vec2(_1313, _1314), vec2(_1313, _1314));
    float _2074 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
    float _1320 = sqrt(isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0)));
    float _1323 = fma(_1320, _676, fma(_1314, _692, _1313 * _712));
    float _1326 = fma(_1320, _678, fma(_1314, _693, _1313 * _713));
    float _1329 = fma(_1320, _679, fma(_1314, _694, _1313 * _714));
    float _1333 = inversesqrt(dot(vec3(_1323, _1326, _1329), vec3(_1323, _1326, _1329)));
    float _1334 = _851 * cbMtdParam._m0[18u].z;
    float _1341 = (((_1326 * 0.5) * _1333) + (-0.25)) * cbMtdParam._m0[18u].w;
    float _1343 = (-0.0) - (cbMtdParam._m0[18u].w * (((_1323 * 0.5) * _1333) + (-0.25)));
    float _1344 = fract(_1334);
    float _1346 = fract(_1334 + 0.5);
    float _1357 = abs((_1344 * 2.0) + (-1.0));
    vec4 _1375 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1344 * _1343) + _1251) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1341 * _1344) + _1252) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1377 = _1375.x;
    float _1378 = _1375.y;
    float _1379 = _1375.z;
    vec4 _1380 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1346 * _1343) + _1251) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1341 * _1346) + _1252) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1397 = (((((_1222.x - _1219) * _1200) + _1219) * cbMtdParam._m0[10u].x) + ((((_1064.x - _1061) * _1042) + _1061) * cbMtdParam._m0[9u].x)) + ((((_1380.x - _1377) * _1357) + _1377) * cbMtdParam._m0[12u].x);
    float _1398 = (((((_1222.y - _1220) * _1200) + _1220) * cbMtdParam._m0[10u].y) + ((((_1064.y - _1062) * _1042) + _1062) * cbMtdParam._m0[9u].y)) + ((((_1380.y - _1378) * _1357) + _1378) * cbMtdParam._m0[12u].y);
    float _1399 = (((((_1222.z - _1221) * _1200) + _1221) * cbMtdParam._m0[10u].z) + ((((_1064.z - _1063) * _1042) + _1063) * cbMtdParam._m0[9u].z)) + ((((_1380.z - _1379) * _1357) + _1379) * cbMtdParam._m0[12u].z);
    float _1410 = (_729 * cbMtdParam._m0[23u].y) + _664;
    float _1411 = (_729 * cbMtdParam._m0[23u].z) + _665;
    uvec2 _1431 = uvec2(textureSize(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_5, int(0u)));
    float _1435 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1436 = _1435 * gl_WorldRayDirectionEXT.x;
    float _1437 = _1435 * gl_WorldRayDirectionEXT.y;
    float _1438 = _1435 * gl_WorldRayDirectionEXT.z;
    float _1482;
    if (_765)
    {
        float _1448 = (_663 * _648) - (_660 * _651);
        float _1451 = (_657 * _651) - (_663 * _645);
        float _1454 = (_660 * _645) - (_657 * _648);
        float _1480 = ((log2((((float(_1431.y) * 0.5) * float(_1431.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1451 * _1451) + (_1454 * _1454)) + (_1448 * _1448)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1436, _1437, _1438), vec3(_676, _678, _679))));
        _1482 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
    }
    else
    {
        _1482 = 0.0;
    }
    vec4 _1484 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * ((_729 * cbMtdParam._m0[24u].y) + _664)) + cbTextureTilingScale._m0[4u].z, (((_729 * cbMtdParam._m0[24u].z) + _665) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1482);
    float _1490 = (_1484.x * 2.0) + (-1.0);
    float _1491 = (_1484.y * 2.0) + (-1.0);
    float _1495 = 1.0 - dot(vec2(_1490, _1491), vec2(_1490, _1491));
    float _2090 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
    float _1497 = sqrt(isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0)));
    float _1500 = fma(_1497, _676, fma(_1491, _692, _1490 * _712));
    float _1503 = fma(_1497, _678, fma(_1491, _693, _1490 * _713));
    float _1506 = fma(_1497, _679, fma(_1491, _694, _1490 * _714));
    float _1510 = inversesqrt(dot(vec3(_1500, _1503, _1506), vec3(_1500, _1503, _1506)));
    float _1511 = _851 * cbMtdParam._m0[20u].x;
    float _1518 = (((_1503 * 0.5) * _1510) + (-0.25)) * cbMtdParam._m0[19u].w;
    float _1520 = (-0.0) - (cbMtdParam._m0[19u].w * (((_1500 * 0.5) * _1510) + (-0.25)));
    float _1521 = fract(_1511);
    float _1523 = fract(_1511 + 0.5);
    float _1534 = abs((_1521 * 2.0) + (-1.0));
    vec4 _1551 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1521 * _1520) + _1410) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1518 * _1521) + _1411) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1553 = _1551.x;
    float _1554 = _1551.y;
    float _1555 = _1551.z;
    vec4 _1556 = textureLod(sampler2D(S_Laser_irradiation_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1523 * _1520) + _1410) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1518 * _1523) + _1411) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1574 = cbMtdParam._m0[15u].z * ((((float(_351 & 255u) * hit._m0.x) + (float(_270 & 255u) * _556)) + (float(_432 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1581 = (_1574 * (((((_1556.x - _1553) * _1534) + _1553) * cbMtdParam._m0[11u].x) - _1397)) + _1397;
    float _1582 = (_1574 * (((((_1556.y - _1554) * _1534) + _1554) * cbMtdParam._m0[11u].y) - _1398)) + _1398;
    float _1583 = (_1574 * (((((_1556.z - _1555) * _1534) + _1555) * cbMtdParam._m0[11u].z) - _1399)) + _1399;
    float _1629 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_676, _678, _679, 0.0)) - cbMtdParam._m0[16u].z;
    float _2101 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
    float _1636 = exp2(log2(1.0 - (isnan(1.0) ? _2101 : (isnan(_2101) ? 1.0 : min(_2101, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[16u].y : (isnan(cbMtdParam._m0[16u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[16u].y, 0.001000000047497451305389404296875))));
    float _1646 = inversesqrt(dot(vec3(_676, _678, _679), vec3(_676, _678, _679)));
    float _1647 = _1646 * _676;
    float _1648 = _1646 * _678;
    float _1649 = _1646 * _679;
    float _1661 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1662 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1663 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1664 = (-0.0) - _1436;
    float _1665 = (-0.0) - _1437;
    float _1666 = (-0.0) - _1438;
    float _1672 = float(gl_LaunchIDEXT.x);
    float _1673 = float(gl_LaunchIDEXT.y);
    float _1676 = float(gl_LaunchSizeEXT.x);
    float _1690 = fract(fract(sin(dot(vec2(_1672 / _1676, _1673 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1703 = fract(fract(sin(dot(vec2((_1672 + 128.0) / _1676, (_1673 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1713 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1714 = _1713.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1714, _1713.w, _1714, vec3(_1661, _1662, _1663), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1779;
    float _1780;
    float _1781;
    if (_70._m0 == 0u)
    {
        float _1734 = g_sceneCB._m0[4u].x - _1436;
        float _1735 = g_sceneCB._m0[4u].y - _1437;
        float _1736 = g_sceneCB._m0[4u].z - _1438;
        float _1740 = inversesqrt(dot(vec3(_1734, _1735, _1736), vec3(_1734, _1735, _1736)));
        float _1744 = dot(vec3(_1647, _1648, _1649), vec3(g_sceneCB._m0[4u].xyz));
        float _2117 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1747 = isnan(1.0) ? _2117 : (isnan(_2117) ? 1.0 : min(_2117, 1.0));
        float _1748 = dot(vec3(_1647, _1648, _1649), vec3(_1664, _1665, _1666));
        float _2128 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1752 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1734 * _1740, _1735 * _1740, _1736 * _1740));
        float _2139 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1763 = (exp2(log2(1.0 - (isnan(1.0) ? _2139 : (isnan(_2139) ? 1.0 : min(_2139, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1769 = (0.5 / ((_1747 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2128 : (isnan(_2128) ? 1.0 : min(_2128, 1.0))))) * _1747;
        float _2150 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1771 = (isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0))) * 0.31831014156341552734375;
        _1779 = (_1763 * g_sceneCB._m0[5u].x) * _1771;
        _1780 = (_1763 * g_sceneCB._m0[5u].y) * _1771;
        _1781 = (_1763 * g_sceneCB._m0[5u].z) * _1771;
    }
    else
    {
        _1779 = 0.0;
        _1780 = 0.0;
        _1781 = 0.0;
    }
    bool _1783 = abs(_1648) < 0.89999997615814208984375;
    float _1785 = float(_1783);
    float _1786 = _1783 ? 0.0 : 1.0;
    float _1789 = (_1785 * _1649) - (_1786 * _1648);
    float _1790 = _1786 * _1647;
    float _1792 = (-0.0) - (_1647 * _1785);
    float _1796 = inversesqrt(dot(vec3(_1789, _1790, _1792), vec3(_1789, _1790, _1792)));
    float _1797 = _1789 * _1796;
    float _1798 = _1790 * _1796;
    float _1799 = _1796 * _1792;
    float _1802 = (_1798 * _1649) - (_1799 * _1648);
    float _1805 = (_1799 * _1647) - (_1797 * _1649);
    float _1808 = (_1797 * _1648) - (_1798 * _1647);
    float _1810;
    float _1818;
    float _1809 = 0.0;
    uint _1811 = 0u;
    float _1815;
    bool _1817;
    for (;;)
    {
        _1815 = (float(_1811) + _1690) * 0.03125;
        _1817 = _1811 == 0u;
        float frontier_phi_49_pred;
        if (_1817)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1944;
            float _1945;
            uint _1947;
            _1944 = 0.0;
            _1945 = 0.5;
            _1947 = _1811;
            float _1819;
            for (;;)
            {
                _1819 = ((_1947 & 1u) != 0u) ? (_1945 + _1944) : _1944;
                uint _1948 = _1947 >> 1u;
                if (_1948 == 0u)
                {
                    break;
                }
                else
                {
                    _1944 = _1819;
                    _1945 *= 0.5;
                    _1947 = _1948;
                }
            }
            frontier_phi_49_pred = _1819;
        }
        _1818 = frontier_phi_49_pred;
        float _1820 = _1818 + _1703;
        float _1824 = sqrt(_1815);
        float _1825 = ((_1820 > 1.0) ? (_1820 + (-1.0)) : _1820) * 6.283185482025146484375;
        float _1828 = cos(_1825) * _1824;
        float _1830 = sin(_1825) * _1824;
        float _1832 = sqrt(1.0 - _1815);
        float _1845 = ((_1832 * _1647) + (_1828 * _1802)) + (_1830 * _1797);
        float _1846 = ((_1832 * _1648) + (_1828 * _1805)) + (_1830 * _1798);
        float _1847 = ((_1832 * _1649) + (_1828 * _1808)) + (_1830 * _1799);
        _69._m0 = 1u;
        uvec4 _1851 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1852 = _1851.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1852, _1851.w, _1852, vec3(_1661, _1662, _1663), 9.9999997473787516355514526367188e-05, vec3(_1845, _1846, _1847), 10000.0, 1);
        float _1858 = dot(vec3(_1647, _1648, _1649), vec3(_1845, _1846, _1847));
        float _2161 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _1861 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
        _1810 = ((float(_69._m0 == 0u) * _1861) / (_1861 * 0.3183098733425140380859375)) + _1809;
        uint _1812 = _1811 + 1u;
        if (_1812 == 32u)
        {
            break;
        }
        else
        {
            _1809 = _1810;
            _1811 = _1812;
            continue;
        }
    }
    float _1870 = _1810 * 0.009947183541953563690185546875;
    float _1875 = dot(vec3(_1436, _1437, _1438), vec3(_1647, _1648, _1649)) * 2.0;
    vec4 _1887 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1436 - (_1875 * _1647), _1437 - (_1875 * _1648), _1438 - (_1875 * _1649)), 4.0);
    float _1892 = dot(vec3(_1664, _1665, _1666), vec3(_1647, _1648, _1649));
    float _2172 = isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0));
    float _1901 = (exp2(log2(1.0 - (isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1911 = ((((cbMtdParam._m0[15u].x * (((_920 * (((((_900.x - _897) * _877) + _897) * cbMtdParam._m0[13u].x) - _1581)) + _1581) + ((((float(_328 & 255u) * hit._m0.x) + (float(_247 & 255u) * _556)) + (float(_409 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125))) + cbMtdParam._m0[17u].x) + (_1636 * ((cbMtdParam._m0[16u].w * cbMtdParam._m0[14u].x) - cbMtdParam._m0[17u].x))) + _1779) + ((_1887.x * _1870) * _1901);
    float _1915 = ((((cbMtdParam._m0[15u].x * (((_920 * (((((_900.y - _898) * _877) + _898) * cbMtdParam._m0[13u].y) - _1582)) + _1582) + ((((float((_328 >> 8u) & 255u) * hit._m0.x) + (float((_247 >> 8u) & 255u) * _556)) + (float((_409 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125))) + cbMtdParam._m0[17u].x) + (_1636 * ((cbMtdParam._m0[16u].w * cbMtdParam._m0[14u].y) - cbMtdParam._m0[17u].x))) + _1780) + ((_1887.y * _1870) * _1901);
    float _1919 = ((((cbMtdParam._m0[15u].x * (((_920 * (((((_900.z - _899) * _877) + _899) * cbMtdParam._m0[13u].z) - _1583)) + _1583) + ((((float((_328 >> 16u) & 255u) * hit._m0.x) + (float((_247 >> 16u) & 255u) * _556)) + (float((_409 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125))) + cbMtdParam._m0[17u].x) + (_1636 * ((cbMtdParam._m0[16u].w * cbMtdParam._m0[14u].z) - cbMtdParam._m0[17u].x))) + _1781) + ((_1887.z * _1870) * _1901);
    float _2183 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
    float _2194 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _2205 = isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0));
    bool _1927 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1938;
    _1938.x = _1927 ? ((_669 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0)));
    _1938.y = _1927 ? ((_672 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0)));
    _1938.z = _1927 ? ((_675 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2205 : (isnan(_2205) ? 1.0 : min(_2205, 1.0)));
    payload._m0 = _1938;
}


