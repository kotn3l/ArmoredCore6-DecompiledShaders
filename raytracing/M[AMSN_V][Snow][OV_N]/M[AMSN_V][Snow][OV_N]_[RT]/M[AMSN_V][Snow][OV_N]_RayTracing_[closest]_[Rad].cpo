#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Snow_OV_N_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1543;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _159 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _160 >> 16u;
        }
        _165 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
        _168 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    bool _230 = _174 == 0u;
    uint _231;
    if (_230)
    {
        _231 = _207 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _207 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _207 + 12u;
        }
        _231 = frontier_phi_9_10_ladder;
    }
    uint _235 = _175 ? (_231 + 4u) : _231;
    uvec4 _239 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + _235) >> 2u));
    uint _240 = _239.x;
    float _244 = float(int(uint(int(_240 << 16u) >> int(16u))));
    float _245 = float(int(uint(int(_240) >> int(16u))));
    uint _253 = _173 * _167;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_178)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_230)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uint _301 = _175 ? (_297 + 4u) : _297;
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + _301) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _319 = _173 * _168;
    uint _320 = _319 + 12u;
    uint _341;
    uint _342;
    uint _343;
    uint _344;
    if (_178)
    {
        uvec4 _322 = texelFetch(l_geomAttrib_0, int(_320 >> 2u));
        uint _323 = _322.x;
        _341 = _323 & 255u;
        _342 = (_323 >> 8u) & 255u;
        _343 = (_323 >> 16u) & 255u;
        _344 = 16u;
    }
    else
    {
        uint _329 = _320 >> 2u;
        uvec2 _335 = uvec2(texelFetch(l_geomAttrib_0, int(_329)).x, texelFetch(l_geomAttrib_0, int(_329 + 1u)).x);
        uint _336 = _335.x;
        _341 = _336 & 65535u;
        _342 = _336 >> 16u;
        _343 = _335.y & 65535u;
        _344 = 20u;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int((_344 + _319) >> 2u));
    uint _351 = _350.x;
    uint _363;
    if (_230)
    {
        _363 = _344 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _344 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _344 + 12u;
        }
        _363 = frontier_phi_23_24_ladder;
    }
    uint _367 = _175 ? (_363 + 4u) : _363;
    uvec4 _371 = texelFetch(l_geomAttrib_0, int(((_319 + 4u) + _367) >> 2u));
    uint _372 = _371.x;
    float _376 = float(int(uint(int(_372 << 16u) >> int(16u))));
    float _377 = float(int(uint(int(_372) >> int(16u))));
    bool _386 = _124.z == 0u;
    float _422;
    float _423;
    float _424;
    if (_386)
    {
        uint _389 = _165 * 3u;
        uvec3 _398 = uvec3(texelFetch(l_geomPositionBuffer, int(_389)).x, texelFetch(l_geomPositionBuffer, int(_389 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_389 + 2u)).x);
        _422 = uintBitsToFloat(_398.x);
        _423 = uintBitsToFloat(_398.y);
        _424 = uintBitsToFloat(_398.z);
    }
    else
    {
        uint _406 = _165 * 2u;
        uvec2 _412 = uvec2(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x);
        uint _413 = _412.x;
        _422 = unpackHalf2x16(_413).x;
        _423 = unpackHalf2x16(_413 >> 16u).x;
        _424 = unpackHalf2x16(_412.y).x;
    }
    float _460;
    float _461;
    float _462;
    if (_386)
    {
        uint _427 = _167 * 3u;
        uvec3 _436 = uvec3(texelFetch(l_geomPositionBuffer, int(_427)).x, texelFetch(l_geomPositionBuffer, int(_427 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_427 + 2u)).x);
        _460 = uintBitsToFloat(_436.x);
        _461 = uintBitsToFloat(_436.y);
        _462 = uintBitsToFloat(_436.z);
    }
    else
    {
        uint _444 = _167 * 2u;
        uvec2 _450 = uvec2(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x);
        uint _451 = _450.x;
        _460 = unpackHalf2x16(_451).x;
        _461 = unpackHalf2x16(_451 >> 16u).x;
        _462 = unpackHalf2x16(_450.y).x;
    }
    float _498;
    float _499;
    float _500;
    if (_386)
    {
        uint _465 = _168 * 3u;
        uvec3 _474 = uvec3(texelFetch(l_geomPositionBuffer, int(_465)).x, texelFetch(l_geomPositionBuffer, int(_465 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_465 + 2u)).x);
        _498 = uintBitsToFloat(_474.x);
        _499 = uintBitsToFloat(_474.y);
        _500 = uintBitsToFloat(_474.z);
    }
    else
    {
        uint _482 = _168 * 2u;
        uvec2 _488 = uvec2(texelFetch(l_geomPositionBuffer, int(_482)).x, texelFetch(l_geomPositionBuffer, int(_482 + 1u)).x);
        uint _489 = _488.x;
        _498 = unpackHalf2x16(_489).x;
        _499 = unpackHalf2x16(_489 >> 16u).x;
        _500 = unpackHalf2x16(_488.y).x;
    }
    float _503 = (1.0 - hit._m0.x) - hit._m0.y;
    float _544 = (_310 - _244) * 0.00048828125;
    float _546 = (_311 - _245) * 0.00048828125;
    float _549 = (_376 - _244) * 0.00048828125;
    float _550 = (_377 - _245) * 0.00048828125;
    float _572 = _460 - _422;
    float _573 = _461 - _423;
    float _574 = _462 - _424;
    float _577 = fma(_574, gl_ObjectToWorldEXT[2u].x, fma(_573, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _572));
    float _580 = fma(_574, gl_ObjectToWorldEXT[2u].y, fma(_573, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _572));
    float _583 = fma(_574, gl_ObjectToWorldEXT[2u].z, fma(_573, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _572));
    float _584 = _498 - _422;
    float _585 = _499 - _423;
    float _586 = _500 - _424;
    float _589 = fma(_586, gl_ObjectToWorldEXT[2u].x, fma(_585, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _584));
    float _592 = fma(_586, gl_ObjectToWorldEXT[2u].y, fma(_585, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _584));
    float _595 = fma(_586, gl_ObjectToWorldEXT[2u].z, fma(_585, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _584));
    float _596 = (((_310 * hit._m0.x) + (_244 * _503)) + (_376 * hit._m0.y)) * 0.00048828125;
    float _597 = (((_311 * hit._m0.x) + (_245 * _503)) + (_377 * hit._m0.y)) * 0.00048828125;
    float _601 = (((float(_204) * _503) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _604 = (((float(_205) * _503) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _607 = (((float(_206) * _503) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_343) * hit._m0.y);
    float _608 = _601 * 0.0078740157186985015869140625;
    float _610 = _604 * 0.0078740157186985015869140625;
    float _611 = _607 * 0.0078740157186985015869140625;
    float _624 = ((((float(_216 & 255u) * _503) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_351 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _625 = ((((float((_216 >> 8u) & 255u) * _503) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_351 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _626 = ((((float((_216 >> 16u) & 255u) * _503) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_351 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _627 = ((((float(_216 >> 24u) * _503) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_351 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _637 = ((_625 * _611) - (_626 * _610)) * _627;
    float _638 = ((_626 * _608) - (_624 * _611)) * _627;
    float _639 = ((_624 * _610) - (_625 * _608)) * _627;
    float _643 = inversesqrt(dot(vec3(_637, _638, _639), vec3(_637, _638, _639)));
    float _644 = _643 * _637;
    float _645 = _643 * _638;
    float _646 = _643 * _639;
    uvec2 _663 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_1, int(0u)));
    bool _668 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _721;
    if (_668)
    {
        float _679 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _685 = (_595 * _580) - (_592 * _583);
        float _688 = (_589 * _583) - (_595 * _577);
        float _691 = (_592 * _577) - (_589 * _580);
        float _718 = ((log2((((float(_663.y) * 0.5) * float(_663.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_688 * _688) + (_691 * _691)) + (_685 * _685)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_679 * gl_WorldRayDirectionEXT.x, _679 * gl_WorldRayDirectionEXT.y, _679 * gl_WorldRayDirectionEXT.z), vec3(_608, _610, _611))));
        _721 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    }
    else
    {
        _721 = 0.0;
    }
    vec4 _725 = textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _596) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _597) + cbTextureTilingScale._m0[1u].w), _721);
    float _729 = _725.z;
    float _732 = (_725.x * 2.0) + (-1.0);
    float _734 = (_725.y * 2.0) + (-1.0);
    float _735 = dot(vec2(_732, _734), vec2(_732, _734));
    float _1632 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _740 = sqrt(1.0 - (isnan(1.0) ? _1632 : (isnan(_1632) ? 1.0 : min(_1632, 1.0))));
    float _743 = fma(_740, _608, fma(_734, _624, _732 * _644));
    float _746 = fma(_740, _610, fma(_734, _625, _732 * _645));
    float _749 = fma(_740, _611, fma(_734, _626, _732 * _646));
    float _758 = exp2(log2(inversesqrt(dot(vec3(_743, _746, _749), vec3(_743, _746, _749))) * _746) * cbMtdParam._m0[11u].x) * cbMtdParam._m0[11u].y;
    float _1643 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    uvec2 _775 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_5, int(0u)));
    float _826;
    if (_668)
    {
        float _786 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _792 = (_595 * _580) - (_592 * _583);
        float _795 = (_589 * _583) - (_595 * _577);
        float _798 = (_592 * _577) - (_589 * _580);
        float _824 = ((log2((((float(_775.y) * 0.5) * float(_775.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_795 * _795) + (_798 * _798)) + (_792 * _792)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_786 * gl_WorldRayDirectionEXT.x, _786 * gl_WorldRayDirectionEXT.y, _786 * gl_WorldRayDirectionEXT.z), vec3(_608, _610, _611))));
        _826 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    }
    else
    {
        _826 = 0.0;
    }
    float _839 = ((cbMtdParam._m0[11u].w * (-1.39999997615814208984375)) * ((textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_5, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _596) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _597) + cbTextureTilingScale._m0[5u].w), _826).x + (-1.0)) + ((((1.0 - ((_503 * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_179 + 8u) + _235) >> 2u)).x & 255u))) - ((hit._m0.x * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_253 + 8u) + _301) >> 2u)).x & 255u))) - ((hit._m0.y * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_319 + 8u) + _367) >> 2u)).x & 255u))) * 2.0))) + 1.0;
    float _1659 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _846 = (((isnan(1.0) ? _1659 : (isnan(_1659) ? 1.0 : min(_1659, 1.0))) + 1.0) - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _1643 : (isnan(_1643) ? 1.0 : min(_1643, 1.0)));
    float _847 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _848 = isnan(1.0) ? _847 : (isnan(_847) ? 1.0 : min(_847, 1.0));
    uvec2 _860 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_0, int(0u)));
    float _911;
    if (_668)
    {
        float _871 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _877 = (_595 * _580) - (_592 * _583);
        float _880 = (_589 * _583) - (_595 * _577);
        float _883 = (_592 * _577) - (_589 * _580);
        float _909 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_880 * _880) + (_883 * _883)) + (_877 * _877)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_871 * gl_WorldRayDirectionEXT.x, _871 * gl_WorldRayDirectionEXT.y, _871 * gl_WorldRayDirectionEXT.z), vec3(_608, _610, _611))));
        _911 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    }
    else
    {
        _911 = 0.0;
    }
    vec4 _914 = textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _596) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _597) + cbTextureTilingScale._m0[0u].w), _911);
    uvec2 _939 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_2, int(0u)));
    float _990;
    if (_668)
    {
        float _950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _956 = (_595 * _580) - (_592 * _583);
        float _959 = (_589 * _583) - (_595 * _577);
        float _962 = (_592 * _577) - (_589 * _580);
        float _988 = ((log2((((float(_939.y) * 0.5) * float(_939.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_959 * _959) + (_962 * _962)) + (_956 * _956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_950 * gl_WorldRayDirectionEXT.x, _950 * gl_WorldRayDirectionEXT.y, _950 * gl_WorldRayDirectionEXT.z), vec3(_608, _610, _611))));
        _990 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    }
    else
    {
        _990 = 0.0;
    }
    vec4 _992 = textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _596) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _597) + cbTextureTilingScale._m0[2u].w), _990);
    float _1003 = cbMtdParam._m0[9u].x * _992.x;
    float _1004 = cbMtdParam._m0[9u].y * _992.y;
    float _1005 = cbMtdParam._m0[9u].z * _992.z;
    float _1012 = (((cbMtdParam._m0[10u].x * _914.x) - _1003) * _848) + _1003;
    float _1013 = (((cbMtdParam._m0[10u].y * _914.y) - _1004) * _848) + _1004;
    float _1014 = (((cbMtdParam._m0[10u].z * _914.z) - _1005) * _848) + _1005;
    uvec2 _1026 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_3, int(0u)));
    float _1077;
    if (_668)
    {
        float _1037 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1043 = (_595 * _580) - (_592 * _583);
        float _1046 = (_589 * _583) - (_595 * _577);
        float _1049 = (_592 * _577) - (_589 * _580);
        float _1075 = ((log2((((float(_1026.y) * 0.5) * float(_1026.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_1046 * _1046) + (_1049 * _1049)) + (_1043 * _1043)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1037 * gl_WorldRayDirectionEXT.x, _1037 * gl_WorldRayDirectionEXT.y, _1037 * gl_WorldRayDirectionEXT.z), vec3(_608, _610, _611))));
        _1077 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    }
    else
    {
        _1077 = 0.0;
    }
    vec4 _1079 = textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _596) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _597) + cbTextureTilingScale._m0[3u].w), _1077);
    float _1086 = (_1079.x * 2.0) + (-1.0);
    float _1087 = (_1079.y * 2.0) + (-1.0);
    float _1088 = dot(vec2(_1086, _1087), vec2(_1086, _1087));
    float _1695 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _1096 = ((_1079.z - _729) * _848) + _729;
    float _1105 = ((sqrt(1.0 - (isnan(1.0) ? _1695 : (isnan(_1695) ? 1.0 : min(_1695, 1.0)))) - _740) * _848) + _740;
    uvec2 _1118 = uvec2(textureSize(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_4, int(0u)));
    float _1122 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1123 = _1122 * gl_WorldRayDirectionEXT.x;
    float _1124 = _1122 * gl_WorldRayDirectionEXT.y;
    float _1125 = _1122 * gl_WorldRayDirectionEXT.z;
    float _1169;
    if (_668)
    {
        float _1135 = (_595 * _580) - (_592 * _583);
        float _1138 = (_589 * _583) - (_595 * _577);
        float _1141 = (_592 * _577) - (_589 * _580);
        float _1167 = ((log2((((float(_1118.y) * 0.5) * float(_1118.x)) * abs((_550 * _544) - (_549 * _546))) / (sqrt(((_1138 * _1138) + (_1141 * _1141)) + (_1135 * _1135)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1123, _1124, _1125), vec3(_608, _610, _611))));
        _1169 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
    }
    else
    {
        _1169 = 0.0;
    }
    vec4 _1171 = textureLod(sampler2D(M_AMSN_V_Snow_OV_N_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _596) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _597) + cbTextureTilingScale._m0[4u].w), _1169);
    float _1181 = (((_1086 - _732) * _848) + _732) + (((_1171.x * 2.0) + (-1.0)) * cbMtdParam._m0[11u].z);
    float _1182 = (((_1087 - _734) * _848) + _734) + (((_1171.y * 2.0) + (-1.0)) * cbMtdParam._m0[11u].z);
    float _1185 = fma(_1105, _608, fma(_1182, _624, _1181 * _644));
    float _1188 = fma(_1105, _610, fma(_1182, _625, _1181 * _645));
    float _1191 = fma(_1105, _611, fma(_1182, _626, _1181 * _646));
    float _1195 = inversesqrt(dot(vec3(_1185, _1188, _1191), vec3(_1185, _1188, _1191)));
    float _1196 = _1195 * _1185;
    float _1197 = _1195 * _1188;
    float _1198 = _1195 * _1191;
    float _1210 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1211 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1212 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1213 = (-0.0) - _1123;
    float _1215 = (-0.0) - _1124;
    float _1216 = (-0.0) - _1125;
    float _1222 = float(gl_LaunchIDEXT.x);
    float _1223 = float(gl_LaunchIDEXT.y);
    float _1226 = float(gl_LaunchSizeEXT.x);
    float _1240 = fract(fract(sin(dot(vec2(_1222 / _1226, _1223 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1253 = fract(fract(sin(dot(vec2((_1222 + 128.0) / _1226, (_1223 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _1263 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1264 = _1263.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1264, _1263.w, _1264, vec3(_1210, _1211, _1212), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    if (_66._m0 == 0u)
    {
        float _1284 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1196, _1197, _1198));
        float _1711 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1287 = isnan(1.0) ? _1711 : (isnan(_1711) ? 1.0 : min(_1711, 1.0));
        float _1306 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1096) * 0.949999988079071044921875);
        float _1307 = _1306 * _1306;
        float _1308 = g_sceneCB._m0[4u].x - _1123;
        float _1309 = g_sceneCB._m0[4u].y - _1124;
        float _1310 = g_sceneCB._m0[4u].z - _1125;
        float _1314 = inversesqrt(dot(vec3(_1308, _1309, _1310), vec3(_1308, _1309, _1310)));
        float _1315 = _1314 * _1308;
        float _1316 = _1314 * _1309;
        float _1317 = _1314 * _1310;
        float _1318 = dot(vec3(_1196, _1197, _1198), vec3(g_sceneCB._m0[4u].xyz));
        float _1722 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1321 = isnan(1.0) ? _1722 : (isnan(_1722) ? 1.0 : min(_1722, 1.0));
        float _1322 = dot(vec3(_1196, _1197, _1198), vec3(_1213, _1215, _1216));
        float _1733 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1325 = isnan(1.0) ? _1733 : (isnan(_1733) ? 1.0 : min(_1733, 1.0));
        float _1326 = dot(vec3(_1196, _1197, _1198), vec3(_1315, _1316, _1317));
        float _1744 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1329 = isnan(1.0) ? _1744 : (isnan(_1744) ? 1.0 : min(_1744, 1.0));
        float _1330 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1315, _1316, _1317));
        float _1755 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1334 = _1307 * _1307;
        float _1338 = ((_1329 * _1329) * (_1334 + (-1.0))) + 1.0;
        float _1350 = (exp2(log2(1.0 - (isnan(1.0) ? _1755 : (isnan(_1755) ? 1.0 : min(_1755, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1352 = 1.0 - _1307;
        float _1363 = (0.5 / (((_1325 * ((_1321 * _1352) + _1307)) + 9.9999999392252902907785028219223e-09) + (((_1325 * _1352) + _1307) * _1321))) * _1321;
        float _1766 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1365 = (isnan(1.0) ? _1766 : (isnan(_1766) ? 1.0 : min(_1766, 1.0))) * (_1334 / ((_1338 * _1338) * 3.141590118408203125));
        _1372 = ((_1012 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1287;
        _1373 = ((_1013 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1287;
        _1374 = ((_1014 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1287;
        _1375 = (_1350 * g_sceneCB._m0[5u].x) * _1365;
        _1376 = (_1350 * g_sceneCB._m0[5u].y) * _1365;
        _1377 = (_1350 * g_sceneCB._m0[5u].z) * _1365;
    }
    else
    {
        _1372 = 0.0;
        _1373 = 0.0;
        _1374 = 0.0;
        _1375 = 0.0;
        _1376 = 0.0;
        _1377 = 0.0;
    }
    bool _1379 = abs(_1197) < 0.89999997615814208984375;
    float _1381 = float(_1379);
    float _1382 = _1379 ? 0.0 : 1.0;
    float _1385 = (_1381 * _1198) - (_1382 * _1197);
    float _1386 = _1382 * _1196;
    float _1388 = (-0.0) - (_1196 * _1381);
    float _1392 = inversesqrt(dot(vec3(_1385, _1386, _1388), vec3(_1385, _1386, _1388)));
    float _1393 = _1385 * _1392;
    float _1394 = _1386 * _1392;
    float _1395 = _1392 * _1388;
    float _1398 = (_1394 * _1198) - (_1395 * _1197);
    float _1401 = (_1395 * _1196) - (_1393 * _1198);
    float _1404 = (_1393 * _1197) - (_1394 * _1196);
    float _1406;
    float _1414;
    float _1405 = 0.0;
    uint _1407 = 0u;
    float _1411;
    bool _1413;
    for (;;)
    {
        _1411 = (float(_1407) + _1240) * 0.03125;
        _1413 = _1407 == 0u;
        float frontier_phi_51_pred;
        if (_1413)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1548;
            float _1549;
            uint _1551;
            _1548 = 0.0;
            _1549 = 0.5;
            _1551 = _1407;
            float _1415;
            for (;;)
            {
                _1415 = ((_1551 & 1u) != 0u) ? (_1549 + _1548) : _1548;
                uint _1552 = _1551 >> 1u;
                if (_1552 == 0u)
                {
                    break;
                }
                else
                {
                    _1548 = _1415;
                    _1549 *= 0.5;
                    _1551 = _1552;
                }
            }
            frontier_phi_51_pred = _1415;
        }
        _1414 = frontier_phi_51_pred;
        float _1416 = _1414 + _1253;
        float _1420 = sqrt(_1411);
        float _1421 = ((_1416 > 1.0) ? (_1416 + (-1.0)) : _1416) * 6.283185482025146484375;
        float _1424 = cos(_1421) * _1420;
        float _1426 = sin(_1421) * _1420;
        float _1428 = sqrt(1.0 - _1411);
        float _1441 = ((_1428 * _1196) + (_1424 * _1398)) + (_1426 * _1393);
        float _1442 = ((_1428 * _1197) + (_1424 * _1401)) + (_1426 * _1394);
        float _1443 = ((_1428 * _1198) + (_1424 * _1404)) + (_1426 * _1395);
        _65._m0 = 1u;
        uvec4 _1447 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1448 = _1447.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1448, _1447.w, _1448, vec3(_1210, _1211, _1212), 9.9999997473787516355514526367188e-05, vec3(_1441, _1442, _1443), 10000.0, 1);
        float _1454 = dot(vec3(_1196, _1197, _1198), vec3(_1441, _1442, _1443));
        float _1777 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1457 = isnan(1.0) ? _1777 : (isnan(_1777) ? 1.0 : min(_1777, 1.0));
        _1406 = ((float(_65._m0 == 0u) * _1457) / (_1457 * 0.3183098733425140380859375)) + _1405;
        uint _1408 = _1407 + 1u;
        if (_1408 == 32u)
        {
            break;
        }
        else
        {
            _1405 = _1406;
            _1407 = _1408;
            continue;
        }
    }
    float _1465 = _1406 * 0.009947183541953563690185546875;
    float _1470 = dot(vec3(_1123, _1124, _1125), vec3(_1196, _1197, _1198)) * 2.0;
    vec4 _1484 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1123 - (_1470 * _1196), _1124 - (_1470 * _1197), _1125 - (_1470 * _1198)), 4.0 - (_1096 * 4.0));
    float _1489 = dot(vec3(_1213, _1215, _1216), vec3(_1196, _1197, _1198));
    float _1788 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
    float _1498 = (exp2(log2(1.0 - (isnan(1.0) ? _1788 : (isnan(_1788) ? 1.0 : min(_1788, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1504 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1196, _1197, _1198), 0.0);
    float _1515 = (_1375 + _1372) + (((_1504.x * _1012) + (_1498 * _1484.x)) * _1465);
    float _1519 = (_1376 + _1373) + (((_1504.y * _1013) + (_1498 * _1484.y)) * _1465);
    float _1523 = (_1377 + _1374) + (((_1504.z * _1014) + (_1498 * _1484.z)) * _1465);
    float _1799 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
    float _1810 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
    float _1821 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    bool _1531 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1542;
    _1542.x = _1531 ? ((_601 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1799 : (isnan(_1799) ? 1.0 : min(_1799, 1.0)));
    _1542.y = _1531 ? ((_604 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1810 : (isnan(_1810) ? 1.0 : min(_1810, 1.0)));
    _1542.z = _1531 ? ((_607 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1821 : (isnan(_1821) ? 1.0 : min(_1821, 1.0)));
    payload._m0 = _1542;
}


