#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_atmosphericentry_01_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1574;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _165 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _166 >> 16u;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _171 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _219 = _180 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uint _230 = (((_179 * _171) + 4u) + (_181 ? (_220 + 4u) : _220)) >> 2u;
    uvec2 _236 = uvec2(texelFetch(l_geomAttrib_0, int(_230)).x, texelFetch(l_geomAttrib_0, int(_230 + 1u)).x);
    uint _237 = _236.x;
    uint _238 = _236.y;
    float _242 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_237) >> int(16u))));
    uint _250 = (_179 * _173) + 12u;
    uint _271;
    uint _272;
    uint _273;
    uint _274;
    if (_184)
    {
        uvec4 _252 = texelFetch(l_geomAttrib_0, int(_250 >> 2u));
        uint _253 = _252.x;
        _271 = _253 & 255u;
        _272 = (_253 >> 8u) & 255u;
        _273 = (_253 >> 16u) & 255u;
        _274 = 20u;
    }
    else
    {
        uint _259 = _250 >> 2u;
        uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
        uint _266 = _265.x;
        _271 = _266 & 65535u;
        _272 = _266 >> 16u;
        _273 = _265.y & 65535u;
        _274 = 24u;
    }
    uint _278;
    if (_219)
    {
        _278 = _274;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _274 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _274 + 8u;
        }
        _278 = frontier_phi_16_17_ladder;
    }
    uint _286 = (((_179 * _173) + 4u) + (_181 ? (_278 + 4u) : _278)) >> 2u;
    uvec2 _292 = uvec2(texelFetch(l_geomAttrib_0, int(_286)).x, texelFetch(l_geomAttrib_0, int(_286 + 1u)).x);
    uint _293 = _292.x;
    uint _294 = _292.y;
    float _298 = float(int(uint(int(_293 << 16u) >> int(16u))));
    float _299 = float(int(uint(int(_293) >> int(16u))));
    uint _306 = (_179 * _174) + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_184)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 20u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 24u;
    }
    uint _334;
    if (_219)
    {
        _334 = _330;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _330 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _330 + 8u;
        }
        _334 = frontier_phi_23_24_ladder;
    }
    uint _342 = (((_179 * _174) + 4u) + (_181 ? (_334 + 4u) : _334)) >> 2u;
    uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
    uint _349 = _348.x;
    uint _350 = _348.y;
    float _354 = float(int(uint(int(_349 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_349) >> int(16u))));
    bool _362 = _130.z == 0u;
    float _398;
    float _399;
    float _400;
    if (_362)
    {
        uint _365 = _171 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _171 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_362)
    {
        uint _403 = _173 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _173 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_362)
    {
        uint _441 = _174 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _174 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _479 = (1.0 - hit._m0.x) - hit._m0.y;
    float _511 = (_298 - _242) * 0.00048828125;
    float _513 = (_299 - _243) * 0.00048828125;
    float _516 = (_354 - _242) * 0.00048828125;
    float _517 = (_355 - _243) * 0.00048828125;
    float _539 = _436 - _398;
    float _540 = _437 - _399;
    float _541 = _438 - _400;
    float _544 = fma(_541, gl_ObjectToWorldEXT[2u].x, fma(_540, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _539));
    float _547 = fma(_541, gl_ObjectToWorldEXT[2u].y, fma(_540, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _539));
    float _550 = fma(_541, gl_ObjectToWorldEXT[2u].z, fma(_540, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _539));
    float _551 = _474 - _398;
    float _552 = _475 - _399;
    float _553 = _476 - _400;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = (((_298 * hit._m0.x) + (_242 * _479)) + (_354 * hit._m0.y)) * 0.00048828125;
    float _564 = (((_299 * hit._m0.x) + (_243 * _479)) + (_355 * hit._m0.y)) * 0.00048828125;
    float _570 = (((float(_210) * _479) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _573 = (((float(_211) * _479) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _576 = (((float(_212) * _479) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _577 = _570 * 0.0078740157186985015869140625;
    float _579 = _573 * 0.0078740157186985015869140625;
    float _580 = _576 * 0.0078740157186985015869140625;
    float _586 = sin(cbMtdParam._m0[14u].w);
    float _587 = cos(cbMtdParam._m0[14u].w);
    float _588 = ((((float(int(uint(int(_294 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238 << 16u) >> int(16u)))) * _479)) + (float(int(uint(int(_350 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _589 = ((((float(int(uint(int(_294) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238) >> int(16u)))) * _479)) + (float(int(uint(int(_350) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _596 = fma(_589, (-0.0) - _586, _587 * _588) + cbMtdParam._m0[14u].z;
    float _597 = fma(_589, _587, _588 * _586) + cbMtdParam._m0[14u].z;
    float _621 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[20u].z * cbPerFrame._m0[22u].x) + _563)) + cbTextureTilingScale._m0[3u].z;
    float _622 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[20u].w * cbPerFrame._m0[22u].x) + _564)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _624 = uvec2(textureSize(M_atmosphericentry_01_snp_0_Texture2D_4, int(0u)));
    bool _629 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _682;
    if (_629)
    {
        float _640 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _646 = (_562 * _547) - (_559 * _550);
        float _649 = (_556 * _550) - (_562 * _544);
        float _652 = (_559 * _544) - (_556 * _547);
        float _679 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_649 * _649) + (_652 * _652)) + (_646 * _646)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_640 * gl_WorldRayDirectionEXT.x, _640 * gl_WorldRayDirectionEXT.y, _640 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _682 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    }
    else
    {
        _682 = 0.0;
    }
    vec4 _686 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_621, _622), _682);
    float _690 = cbPerFrame._m0[22u].x * 2.0;
    float _691 = _690 * cbMtdParam._m0[16u].x;
    float _697 = ((_686.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _699 = (-0.0) - (cbMtdParam._m0[15u].z * ((_686.x * 0.5) + (-0.25)));
    float _700 = fract(_691);
    float _702 = fract(_691 + 0.5);
    float _714 = abs((_700 * 2.0) + (-1.0));
    vec4 _733 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_700 * _699) + _596) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_697 * _700) + _597) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _735 = _733.x;
    float _758 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _761 = (_758 * cbMtdParam._m0[19u].x) + _563;
    float _762 = (_758 * cbMtdParam._m0[19u].y) + _564;
    float _813;
    if (_629)
    {
        float _773 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _779 = (_562 * _547) - (_559 * _550);
        float _782 = (_556 * _550) - (_562 * _544);
        float _785 = (_559 * _544) - (_556 * _547);
        float _811 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_782 * _782) + (_785 * _785)) + (_779 * _779)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_773 * gl_WorldRayDirectionEXT.x, _773 * gl_WorldRayDirectionEXT.y, _773 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _813 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    }
    else
    {
        _813 = 0.0;
    }
    vec4 _815 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_621, _622), _813);
    float _823 = ((_815.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _825 = (-0.0) - (cbMtdParam._m0[15u].z * ((_815.x * 0.5) + (-0.25)));
    vec4 _850 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_700 * _825) + _761) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_823 * _700) + _762) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _852 = _850.x;
    float _853 = _850.y;
    float _854 = _850.z;
    vec4 _855 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_702 * _825) + _761) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_823 * _702) + _762) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _882 = (cbMtdParam._m0[20u].x * _758) + _563;
    float _883 = (cbMtdParam._m0[20u].y * _758) + _564;
    float _934;
    if (_629)
    {
        float _894 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _900 = (_562 * _547) - (_559 * _550);
        float _903 = (_556 * _550) - (_562 * _544);
        float _906 = (_559 * _544) - (_556 * _547);
        float _932 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_903 * _903) + (_906 * _906)) + (_900 * _900)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_894 * gl_WorldRayDirectionEXT.x, _894 * gl_WorldRayDirectionEXT.y, _894 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _934 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    }
    else
    {
        _934 = 0.0;
    }
    vec4 _936 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_621, _622), _934);
    float _944 = ((_936.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _946 = (-0.0) - (cbMtdParam._m0[15u].z * ((_936.x * 0.5) + (-0.25)));
    vec4 _971 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_700 * _946) + _882) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_944 * _700) + _883) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _973 = _971.x;
    float _974 = _971.y;
    float _975 = _971.z;
    vec4 _976 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_702 * _946) + _882) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_944 * _702) + _883) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _993 = ((((_976.x - _973) * _714) + _973) * cbMtdParam._m0[13u].x) + ((((_855.x - _852) * _714) + _852) * cbMtdParam._m0[11u].x);
    float _994 = ((((_976.y - _974) * _714) + _974) * cbMtdParam._m0[13u].y) + ((((_855.y - _853) * _714) + _853) * cbMtdParam._m0[11u].y);
    float _995 = ((((_976.z - _975) * _714) + _975) * cbMtdParam._m0[13u].z) + ((((_855.z - _854) * _714) + _854) * cbMtdParam._m0[11u].z);
    float _1001 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1671 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1002 = isnan(1.0) ? _1671 : (isnan(_1671) ? 1.0 : min(_1671, 1.0));
    float _1009 = ((_1002 * _1002) * (3.0 - (_1002 * 2.0))) - cbMtdParam._m0[16u].y;
    float _1023 = (cbMtdParam._m0[21u].x * _758) + _563;
    float _1024 = (cbMtdParam._m0[21u].y * _758) + _564;
    float _1075;
    if (_629)
    {
        float _1035 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1041 = (_562 * _547) - (_559 * _550);
        float _1044 = (_556 * _550) - (_562 * _544);
        float _1047 = (_559 * _544) - (_556 * _547);
        float _1073 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_1044 * _1044) + (_1047 * _1047)) + (_1041 * _1041)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1035 * gl_WorldRayDirectionEXT.x, _1035 * gl_WorldRayDirectionEXT.y, _1035 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _1075 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    }
    else
    {
        _1075 = 0.0;
    }
    vec4 _1077 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_621, _622), _1075);
    float _1085 = ((_1077.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1087 = (-0.0) - (cbMtdParam._m0[15u].z * ((_1077.x * 0.5) + (-0.25)));
    vec4 _1112 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_700 * _1087) + _1023) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1085 * _700) + _1024) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1114 = _1112.x;
    float _1115 = _1112.y;
    float _1116 = _1112.z;
    vec4 _1117 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_702 * _1087) + _1023) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1085 * _702) + _1024) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1143 = (cbMtdParam._m0[19u].z * _758) + _563;
    float _1144 = (cbMtdParam._m0[19u].w * _758) + _564;
    float _1150 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1151 = _1150 * gl_WorldRayDirectionEXT.x;
    float _1152 = _1150 * gl_WorldRayDirectionEXT.y;
    float _1153 = _1150 * gl_WorldRayDirectionEXT.z;
    float _1197;
    if (_629)
    {
        float _1163 = (_562 * _547) - (_559 * _550);
        float _1166 = (_556 * _550) - (_562 * _544);
        float _1169 = (_559 * _544) - (_556 * _547);
        float _1195 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_1166 * _1166) + (_1169 * _1169)) + (_1163 * _1163)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1151, _1152, _1153), vec3(_577, _579, _580))));
        _1197 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    }
    else
    {
        _1197 = 0.0;
    }
    vec4 _1199 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_621, _622), _1197);
    float _1203 = _690 * cbMtdParam._m0[18u].w;
    float _1208 = ((_1199.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].z;
    float _1210 = (-0.0) - (cbMtdParam._m0[18u].z * ((_1199.x * 0.5) + (-0.25)));
    float _1211 = fract(_1203);
    float _1213 = fract(_1203 + 0.5);
    float _1224 = abs((_1211 * 2.0) + (-1.0));
    vec4 _1241 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1211 * _1210) + _1143) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1208 * _1211) + _1144) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1243 = _1241.x;
    float _1244 = _1241.y;
    float _1245 = _1241.z;
    vec4 _1246 = textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1213 * _1210) + _1143) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1208 * _1213) + _1144) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1270 = cbMtdParam._m0[14u].y * (((textureLod(sampler2D(M_atmosphericentry_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_702 * _699) + _596) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_697 * _702) + _597) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0).x - _735) * _714) + _735);
    float _1286 = inversesqrt(dot(vec3(_577, _579, _580), vec3(_577, _579, _580)));
    float _1287 = _1286 * _577;
    float _1288 = _1286 * _579;
    float _1289 = _1286 * _580;
    float _1301 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1302 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1303 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1304 = (-0.0) - _1151;
    float _1305 = (-0.0) - _1152;
    float _1306 = (-0.0) - _1153;
    float _1312 = float(gl_LaunchIDEXT.x);
    float _1313 = float(gl_LaunchIDEXT.y);
    float _1316 = float(gl_LaunchSizeEXT.x);
    float _1330 = fract(fract(sin(dot(vec2(_1312 / _1316, _1313 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1343 = fract(fract(sin(dot(vec2((_1312 + 128.0) / _1316, (_1313 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1353 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1354 = _1353.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1354, _1353.w, _1354, vec3(_1301, _1302, _1303), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1419;
    float _1420;
    float _1421;
    if (_69._m0 == 0u)
    {
        float _1374 = g_sceneCB._m0[4u].x - _1151;
        float _1375 = g_sceneCB._m0[4u].y - _1152;
        float _1376 = g_sceneCB._m0[4u].z - _1153;
        float _1380 = inversesqrt(dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376)));
        float _1384 = dot(vec3(_1287, _1288, _1289), vec3(g_sceneCB._m0[4u].xyz));
        float _1692 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1387 = isnan(1.0) ? _1692 : (isnan(_1692) ? 1.0 : min(_1692, 1.0));
        float _1388 = dot(vec3(_1287, _1288, _1289), vec3(_1304, _1305, _1306));
        float _1703 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1392 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1374 * _1380, _1375 * _1380, _1376 * _1380));
        float _1714 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1403 = (exp2(log2(1.0 - (isnan(1.0) ? _1714 : (isnan(_1714) ? 1.0 : min(_1714, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1409 = (0.5 / ((_1387 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1703 : (isnan(_1703) ? 1.0 : min(_1703, 1.0))))) * _1387;
        float _1725 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1411 = (isnan(1.0) ? _1725 : (isnan(_1725) ? 1.0 : min(_1725, 1.0))) * 0.31831014156341552734375;
        _1419 = (_1403 * g_sceneCB._m0[5u].x) * _1411;
        _1420 = (_1403 * g_sceneCB._m0[5u].y) * _1411;
        _1421 = (_1403 * g_sceneCB._m0[5u].z) * _1411;
    }
    else
    {
        _1419 = 0.0;
        _1420 = 0.0;
        _1421 = 0.0;
    }
    bool _1423 = abs(_1288) < 0.89999997615814208984375;
    float _1425 = float(_1423);
    float _1426 = _1423 ? 0.0 : 1.0;
    float _1429 = (_1425 * _1289) - (_1426 * _1288);
    float _1430 = _1426 * _1287;
    float _1432 = (-0.0) - (_1287 * _1425);
    float _1436 = inversesqrt(dot(vec3(_1429, _1430, _1432), vec3(_1429, _1430, _1432)));
    float _1437 = _1429 * _1436;
    float _1438 = _1430 * _1436;
    float _1439 = _1436 * _1432;
    float _1442 = (_1438 * _1289) - (_1439 * _1288);
    float _1445 = (_1439 * _1287) - (_1437 * _1289);
    float _1448 = (_1437 * _1288) - (_1438 * _1287);
    float _1450;
    float _1458;
    float _1449 = 0.0;
    uint _1451 = 0u;
    float _1455;
    bool _1457;
    for (;;)
    {
        _1455 = (float(_1451) + _1330) * 0.03125;
        _1457 = _1451 == 0u;
        float frontier_phi_49_pred;
        if (_1457)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1579;
            float _1580;
            uint _1582;
            _1579 = 0.0;
            _1580 = 0.5;
            _1582 = _1451;
            float _1459;
            for (;;)
            {
                _1459 = ((_1582 & 1u) != 0u) ? (_1580 + _1579) : _1579;
                uint _1583 = _1582 >> 1u;
                if (_1583 == 0u)
                {
                    break;
                }
                else
                {
                    _1579 = _1459;
                    _1580 *= 0.5;
                    _1582 = _1583;
                }
            }
            frontier_phi_49_pred = _1459;
        }
        _1458 = frontier_phi_49_pred;
        float _1460 = _1458 + _1343;
        float _1464 = sqrt(_1455);
        float _1465 = ((_1460 > 1.0) ? (_1460 + (-1.0)) : _1460) * 6.283185482025146484375;
        float _1468 = cos(_1465) * _1464;
        float _1470 = sin(_1465) * _1464;
        float _1472 = sqrt(1.0 - _1455);
        float _1485 = ((_1472 * _1287) + (_1468 * _1442)) + (_1470 * _1437);
        float _1486 = ((_1472 * _1288) + (_1468 * _1445)) + (_1470 * _1438);
        float _1487 = ((_1472 * _1289) + (_1468 * _1448)) + (_1470 * _1439);
        _68._m0 = 1u;
        uvec4 _1491 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1492 = _1491.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1492, _1491.w, _1492, vec3(_1301, _1302, _1303), 9.9999997473787516355514526367188e-05, vec3(_1485, _1486, _1487), 10000.0, 1);
        float _1498 = dot(vec3(_1287, _1288, _1289), vec3(_1485, _1486, _1487));
        float _1736 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1501 = isnan(1.0) ? _1736 : (isnan(_1736) ? 1.0 : min(_1736, 1.0));
        _1450 = ((float(_68._m0 == 0u) * _1501) / (_1501 * 0.3183098733425140380859375)) + _1449;
        uint _1452 = _1451 + 1u;
        if (_1452 == 32u)
        {
            break;
        }
        else
        {
            _1449 = _1450;
            _1451 = _1452;
            continue;
        }
    }
    float _1510 = _1450 * 0.009947183541953563690185546875;
    float _1515 = dot(vec3(_1151, _1152, _1153), vec3(_1287, _1288, _1289)) * 2.0;
    vec4 _1527 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1151 - (_1515 * _1287), _1152 - (_1515 * _1288), _1153 - (_1515 * _1289)), 4.0);
    float _1532 = dot(vec3(_1304, _1305, _1306), vec3(_1287, _1288, _1289));
    float _1747 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
    float _1541 = (exp2(log2(1.0 - (isnan(1.0) ? _1747 : (isnan(_1747) ? 1.0 : min(_1747, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1549 = (_1419 + (((_1270 * (((((((_1246.x - _1243) * _1224) + _1243) * cbMtdParam._m0[12u].x) + ((((_1117.x - _1114) * _714) + _1114) * cbMtdParam._m0[9u].x)) * _1009) - _993)) + _993) * cbMtdParam._m0[18u].x)) + ((_1527.x * _1510) * _1541);
    float _1551 = (_1420 + (((_1270 * (((((((_1246.y - _1244) * _1224) + _1244) * cbMtdParam._m0[12u].y) + ((((_1117.y - _1115) * _714) + _1115) * cbMtdParam._m0[9u].y)) * _1009) - _994)) + _994) * cbMtdParam._m0[18u].x)) + ((_1527.y * _1510) * _1541);
    float _1553 = (_1421 + (((_1270 * (((((((_1246.z - _1245) * _1224) + _1245) * cbMtdParam._m0[12u].z) + ((((_1117.z - _1116) * _714) + _1116) * cbMtdParam._m0[9u].z)) * _1009) - _995)) + _995) * cbMtdParam._m0[18u].x)) + ((_1527.z * _1510) * _1541);
    float _1758 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    float _1769 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    float _1780 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
    bool _1562 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1573;
    _1573.x = _1562 ? ((_570 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1758 : (isnan(_1758) ? 1.0 : min(_1758, 1.0)));
    _1573.y = _1562 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1769 : (isnan(_1769) ? 1.0 : min(_1769, 1.0)));
    _1573.z = _1562 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1780 : (isnan(_1780) ? 1.0 : min(_1780, 1.0)));
    payload._m0 = _1573;
}


