#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Ice_Ov_N_ContactFade_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Ice_Ov_N_ContactFade_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Ice_Ov_N_ContactFade_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Ice_Ov_N_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Ice_Ov_N_ContactFade_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1614;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _162;
    uint _164;
    uint _165;
    if (_121.x == 0u)
    {
        uint _130 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _139 = uvec3(texelFetch(l_geomIndexBuffer, int(_130)).x, texelFetch(l_geomIndexBuffer, int(_130 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_130 + 2u)).x);
        _162 = _139.x;
        _164 = _139.y;
        _165 = _139.z;
    }
    else
    {
        uint _143 = uint(gl_PrimitiveID) * 6u;
        uint _145 = _143 & 4294967292u;
        uint _148 = (_122 + _145) >> 2u;
        uvec2 _155 = uvec2(texelFetch(l_geomIndexBuffer, int(_148)).x, texelFetch(l_geomIndexBuffer, int(_148 + 1u)).x);
        uint _156 = _155.x;
        uint _157 = _155.y;
        uint _159 = _156 >> 16u;
        uint _160 = _157 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_145 == _143)
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _156 & 65535u;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _159;
            frontier_phi_3_2_ladder_2 = _157 >> 16u;
        }
        _162 = frontier_phi_3_2_ladder_1;
        _164 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _169 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _170 = _169.x;
    uint _171 = _170 * _162;
    uint _173 = _171 >> 2u;
    uvec3 _182 = uvec3(texelFetch(l_geomAttrib_0, int(_173)).x, texelFetch(l_geomAttrib_0, int(_173 + 1u)).x, texelFetch(l_geomAttrib_0, int(_173 + 2u)).x);
    uint _189 = _169.z;
    bool _190 = _189 != 0u;
    bool _192 = _121.w == 0u;
    bool _193 = _190 || _192;
    uint _194 = _171 + 12u;
    uint _217;
    uint _218;
    uint _219;
    uint _220;
    if (_193)
    {
        uvec4 _196 = texelFetch(l_geomAttrib_0, int(_194 >> 2u));
        uint _197 = _196.x;
        _217 = _197 & 255u;
        _218 = (_197 >> 8u) & 255u;
        _219 = (_197 >> 16u) & 255u;
        _220 = 16u;
    }
    else
    {
        uint _205 = _194 >> 2u;
        uvec2 _211 = uvec2(texelFetch(l_geomAttrib_0, int(_205)).x, texelFetch(l_geomAttrib_0, int(_205 + 1u)).x);
        uint _212 = _211.x;
        _217 = _212 & 65535u;
        _218 = _212 >> 16u;
        _219 = _211.y & 65535u;
        _220 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_220 + _171) >> 2u));
    uint _228 = _227.x;
    bool _242 = _189 == 0u;
    uint _243;
    if (_242)
    {
        _243 = _220 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_192)
        {
            frontier_phi_9_10_ladder = _220 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _220 + 12u;
        }
        _243 = frontier_phi_9_10_ladder;
    }
    uint _247 = _190 ? (_243 + 4u) : _243;
    uvec4 _251 = texelFetch(l_geomAttrib_0, int(((_171 + 4u) + _247) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uint _265 = _170 * _164;
    uint _266 = _265 >> 2u;
    uvec3 _275 = uvec3(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x, texelFetch(l_geomAttrib_0, int(_266 + 2u)).x);
    uint _282 = _265 + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_193)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 16u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 20u;
    }
    uvec4 _312 = texelFetch(l_geomAttrib_0, int((_306 + _265) >> 2u));
    uint _313 = _312.x;
    uint _325;
    if (_242)
    {
        _325 = _306 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_192)
        {
            frontier_phi_16_17_ladder = _306 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _306 + 12u;
        }
        _325 = frontier_phi_16_17_ladder;
    }
    uint _329 = _190 ? (_325 + 4u) : _325;
    uvec4 _333 = texelFetch(l_geomAttrib_0, int(((_265 + 4u) + _329) >> 2u));
    uint _334 = _333.x;
    float _338 = float(int(uint(int(_334 << 16u) >> int(16u))));
    float _339 = float(int(uint(int(_334) >> int(16u))));
    uint _347 = _170 * _165;
    uint _348 = _347 >> 2u;
    uvec3 _357 = uvec3(texelFetch(l_geomAttrib_0, int(_348)).x, texelFetch(l_geomAttrib_0, int(_348 + 1u)).x, texelFetch(l_geomAttrib_0, int(_348 + 2u)).x);
    uint _364 = _347 + 12u;
    uint _385;
    uint _386;
    uint _387;
    uint _388;
    if (_193)
    {
        uvec4 _366 = texelFetch(l_geomAttrib_0, int(_364 >> 2u));
        uint _367 = _366.x;
        _385 = _367 & 255u;
        _386 = (_367 >> 8u) & 255u;
        _387 = (_367 >> 16u) & 255u;
        _388 = 16u;
    }
    else
    {
        uint _373 = _364 >> 2u;
        uvec2 _379 = uvec2(texelFetch(l_geomAttrib_0, int(_373)).x, texelFetch(l_geomAttrib_0, int(_373 + 1u)).x);
        uint _380 = _379.x;
        _385 = _380 & 65535u;
        _386 = _380 >> 16u;
        _387 = _379.y & 65535u;
        _388 = 20u;
    }
    uvec4 _394 = texelFetch(l_geomAttrib_0, int((_388 + _347) >> 2u));
    uint _395 = _394.x;
    uint _407;
    if (_242)
    {
        _407 = _388 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_192)
        {
            frontier_phi_23_24_ladder = _388 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _388 + 12u;
        }
        _407 = frontier_phi_23_24_ladder;
    }
    uint _411 = _190 ? (_407 + 4u) : _407;
    uvec4 _415 = texelFetch(l_geomAttrib_0, int(((_347 + 4u) + _411) >> 2u));
    uint _416 = _415.x;
    float _420 = float(int(uint(int(_416 << 16u) >> int(16u))));
    float _421 = float(int(uint(int(_416) >> int(16u))));
    bool _430 = _121.z == 0u;
    float _466;
    float _467;
    float _468;
    if (_430)
    {
        uint _433 = _162 * 3u;
        uvec3 _442 = uvec3(texelFetch(l_geomPositionBuffer, int(_433)).x, texelFetch(l_geomPositionBuffer, int(_433 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_433 + 2u)).x);
        _466 = uintBitsToFloat(_442.x);
        _467 = uintBitsToFloat(_442.y);
        _468 = uintBitsToFloat(_442.z);
    }
    else
    {
        uint _450 = _162 * 2u;
        uvec2 _456 = uvec2(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x);
        uint _457 = _456.x;
        _466 = unpackHalf2x16(_457).x;
        _467 = unpackHalf2x16(_457 >> 16u).x;
        _468 = unpackHalf2x16(_456.y).x;
    }
    float _504;
    float _505;
    float _506;
    if (_430)
    {
        uint _471 = _164 * 3u;
        uvec3 _480 = uvec3(texelFetch(l_geomPositionBuffer, int(_471)).x, texelFetch(l_geomPositionBuffer, int(_471 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_471 + 2u)).x);
        _504 = uintBitsToFloat(_480.x);
        _505 = uintBitsToFloat(_480.y);
        _506 = uintBitsToFloat(_480.z);
    }
    else
    {
        uint _488 = _164 * 2u;
        uvec2 _494 = uvec2(texelFetch(l_geomPositionBuffer, int(_488)).x, texelFetch(l_geomPositionBuffer, int(_488 + 1u)).x);
        uint _495 = _494.x;
        _504 = unpackHalf2x16(_495).x;
        _505 = unpackHalf2x16(_495 >> 16u).x;
        _506 = unpackHalf2x16(_494.y).x;
    }
    float _542;
    float _543;
    float _544;
    if (_430)
    {
        uint _509 = _165 * 3u;
        uvec3 _518 = uvec3(texelFetch(l_geomPositionBuffer, int(_509)).x, texelFetch(l_geomPositionBuffer, int(_509 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_509 + 2u)).x);
        _542 = uintBitsToFloat(_518.x);
        _543 = uintBitsToFloat(_518.y);
        _544 = uintBitsToFloat(_518.z);
    }
    else
    {
        uint _526 = _165 * 2u;
        uvec2 _532 = uvec2(texelFetch(l_geomPositionBuffer, int(_526)).x, texelFetch(l_geomPositionBuffer, int(_526 + 1u)).x);
        uint _533 = _532.x;
        _542 = unpackHalf2x16(_533).x;
        _543 = unpackHalf2x16(_533 >> 16u).x;
        _544 = unpackHalf2x16(_532.y).x;
    }
    float _547 = (1.0 - hit._m0.x) - hit._m0.y;
    float _603 = (_338 - _256) * 0.00048828125;
    float _605 = (_339 - _257) * 0.00048828125;
    float _608 = (_420 - _256) * 0.00048828125;
    float _609 = (_421 - _257) * 0.00048828125;
    float _631 = _504 - _466;
    float _632 = _505 - _467;
    float _633 = _506 - _468;
    float _636 = fma(_633, gl_ObjectToWorldEXT[2u].x, fma(_632, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _631));
    float _639 = fma(_633, gl_ObjectToWorldEXT[2u].y, fma(_632, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _631));
    float _642 = fma(_633, gl_ObjectToWorldEXT[2u].z, fma(_632, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _631));
    float _643 = _542 - _466;
    float _644 = _543 - _467;
    float _645 = _544 - _468;
    float _648 = fma(_645, gl_ObjectToWorldEXT[2u].x, fma(_644, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _643));
    float _651 = fma(_645, gl_ObjectToWorldEXT[2u].y, fma(_644, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _643));
    float _654 = fma(_645, gl_ObjectToWorldEXT[2u].z, fma(_644, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _643));
    float _655 = (((_338 * hit._m0.x) + (_256 * _547)) + (_420 * hit._m0.y)) * 0.00048828125;
    float _656 = (((_339 * hit._m0.x) + (_257 * _547)) + (_421 * hit._m0.y)) * 0.00048828125;
    float _660 = (((float(_217) * _547) + (-127.0)) + (float(_303) * hit._m0.x)) + (float(_385) * hit._m0.y);
    float _663 = (((float(_218) * _547) + (-127.0)) + (float(_304) * hit._m0.x)) + (float(_386) * hit._m0.y);
    float _666 = (((float(_219) * _547) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_387) * hit._m0.y);
    float _667 = _660 * 0.0078740157186985015869140625;
    float _669 = _663 * 0.0078740157186985015869140625;
    float _670 = _666 * 0.0078740157186985015869140625;
    float _683 = ((((float(_228 & 255u) * _547) + (-127.0)) + (float(_313 & 255u) * hit._m0.x)) + (float(_395 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _684 = ((((float((_228 >> 8u) & 255u) * _547) + (-127.0)) + (float((_313 >> 8u) & 255u) * hit._m0.x)) + (float((_395 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _685 = ((((float((_228 >> 16u) & 255u) * _547) + (-127.0)) + (float((_313 >> 16u) & 255u) * hit._m0.x)) + (float((_395 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _686 = ((((float(_228 >> 24u) * _547) + (-127.0)) + (float(_313 >> 24u) * hit._m0.x)) + (float(_395 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _696 = ((_684 * _670) - (_685 * _669)) * _686;
    float _697 = ((_685 * _667) - (_683 * _670)) * _686;
    float _698 = ((_683 * _669) - (_684 * _667)) * _686;
    float _702 = inversesqrt(dot(vec3(_696, _697, _698), vec3(_696, _697, _698)));
    float _703 = _702 * _696;
    float _704 = _702 * _697;
    float _705 = _702 * _698;
    float _724 = inversesqrt(dot(vec3(_667, _669, _670), vec3(_667, _669, _670)));
    float _728 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_724 * _667, _724 * _669, _724 * _670, 0.0));
    float _1700 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _737 = exp2(log2(1.0 - (isnan(1.0) ? _1700 : (isnan(_1700) ? 1.0 : min(_1700, 1.0)))) * cbMtdParam._m0[12u].z);
    float _1711 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _738 = isnan(1.0) ? _1711 : (isnan(_1711) ? 1.0 : min(_1711, 1.0));
    float _745 = (_738 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x;
    float _746 = (_738 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y;
    float _747 = (_738 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z;
    uvec2 _768 = uvec2(textureSize(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_10, int(0u)));
    bool _773 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _825;
    if (_773)
    {
        float _784 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _790 = (_654 * _639) - (_651 * _642);
        float _793 = (_648 * _642) - (_654 * _636);
        float _796 = (_651 * _636) - (_648 * _639);
        float _823 = ((log2((((float(_768.y) * 0.5) * float(_768.x)) * abs((_609 * _603) - (_608 * _605))) / (sqrt(((_793 * _793) + (_796 * _796)) + (_790 * _790)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_784 * gl_WorldRayDirectionEXT.x, _784 * gl_WorldRayDirectionEXT.y, _784 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _825 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    }
    else
    {
        _825 = 0.0;
    }
    vec4 _829 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _655) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _656) + cbTextureTilingScale._m0[2u].w), _825);
    float _835 = (_829.x * 2.0) + (-1.0);
    float _837 = (_829.y * 2.0) + (-1.0);
    float _838 = dot(vec2(_835, _837), vec2(_835, _837));
    float _1727 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _843 = sqrt(1.0 - (isnan(1.0) ? _1727 : (isnan(_1727) ? 1.0 : min(_1727, 1.0))));
    float _846 = fma(_843, _667, fma(_837, _683, _835 * _703));
    float _849 = fma(_843, _669, fma(_837, _684, _835 * _704));
    float _852 = fma(_843, _670, fma(_837, _685, _835 * _705));
    float _856 = inversesqrt(dot(vec3(_846, _849, _852), vec3(_846, _849, _852)));
    float _867 = cbMtdParam._m0[13u].z + dot(vec4(_856 * _846, _856 * _849, _856 * _852, 0.0), vec4(cbMtdParam._m0[14u].zw, cbMtdParam._m0[15u].x, 0.0));
    float _1738 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _869 = (isnan(1.0) ? _1738 : (isnan(_1738) ? 1.0 : min(_1738, 1.0))) * ((((float(texelFetch(l_geomAttrib_0, int(((_265 + 8u) + _329) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_171 + 8u) + _247) >> 2u)).x & 255u) * _547)) + (float(texelFetch(l_geomAttrib_0, int(((_347 + 8u) + _411) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1749 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _870 = isnan(1.0) ? _1749 : (isnan(_1749) ? 1.0 : min(_1749, 1.0));
    uvec2 _882 = uvec2(textureSize(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_2, int(0u)));
    float _933;
    if (_773)
    {
        float _893 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _899 = (_654 * _639) - (_651 * _642);
        float _902 = (_648 * _642) - (_654 * _636);
        float _905 = (_651 * _636) - (_648 * _639);
        float _931 = ((log2((((float(_882.y) * 0.5) * float(_882.x)) * abs((_609 * _603) - (_608 * _605))) / (sqrt(((_902 * _902) + (_905 * _905)) + (_899 * _899)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_893 * gl_WorldRayDirectionEXT.x, _893 * gl_WorldRayDirectionEXT.y, _893 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _933 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    }
    else
    {
        _933 = 0.0;
    }
    vec4 _936 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _655) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _656) + cbTextureTilingScale._m0[3u].w), _933);
    float _956 = (((cbMtdParam._m0[9u].x * _936.x) - _745) * _870) + _745;
    float _957 = (((cbMtdParam._m0[9u].y * _936.y) - _746) * _870) + _746;
    float _958 = (((cbMtdParam._m0[9u].z * _936.z) - _747) * _870) + _747;
    float _963 = ((cbMtdParam._m0[14u].y - cbMtdParam._m0[12u].x) * _870) + cbMtdParam._m0[12u].x;
    float _965 = abs(_667);
    float _966 = abs(_669);
    float _967 = abs(_670);
    float _968 = _965 * _965;
    float _969 = _966 * _966;
    float _970 = _967 * _967;
    float _973 = (((uintBitsToFloat(_275.y) * hit._m0.x) + (uintBitsToFloat(_182.y) * _547)) + (uintBitsToFloat(_357.y) * hit._m0.y)) * 0.0500000007450580596923828125;
    float _983 = (cbTextureTilingScale._m0[4u].x * ((((uintBitsToFloat(_275.x) * hit._m0.x) + (uintBitsToFloat(_182.x) * _547)) + (uintBitsToFloat(_357.x) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[4u].z;
    float _1007;
    if (_773)
    {
        float _991 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _999 = log2(0.0);
        float _1005 = ((_999 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_991 * gl_WorldRayDirectionEXT.x, _991 * gl_WorldRayDirectionEXT.y, _991 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _1007 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    }
    else
    {
        _1007 = 0.0;
    }
    vec4 _1010 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_9, SS_BumpMap), vec2(_983, (cbTextureTilingScale._m0[4u].y * _973) + cbTextureTilingScale._m0[4u].w), _1007);
    float _1017 = (cbTextureTilingScale._m0[4u].y * ((((uintBitsToFloat(_275.z) * hit._m0.x) + (uintBitsToFloat(_182.z) * _547)) + (uintBitsToFloat(_357.z) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[4u].w;
    float _1040;
    if (_773)
    {
        float _1024 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1032 = log2(0.0);
        float _1038 = ((_1032 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1024 * gl_WorldRayDirectionEXT.x, _1024 * gl_WorldRayDirectionEXT.y, _1024 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _1040 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    }
    else
    {
        _1040 = 0.0;
    }
    vec4 _1042 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_9, SS_BumpMap), vec2(_983, _1017), _1040);
    float _1074;
    if (_773)
    {
        float _1058 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1066 = log2(0.0);
        float _1072 = ((_1066 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1058 * gl_WorldRayDirectionEXT.x, _1058 * gl_WorldRayDirectionEXT.y, _1058 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _1074 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    }
    else
    {
        _1074 = 0.0;
    }
    vec4 _1076 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _973) + cbTextureTilingScale._m0[4u].z, _1017), _1074);
    uvec2 _1103 = uvec2(textureSize(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_1, int(0u)));
    float _1154;
    if (_773)
    {
        float _1114 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1120 = (_654 * _639) - (_651 * _642);
        float _1123 = (_648 * _642) - (_654 * _636);
        float _1126 = (_651 * _636) - (_648 * _639);
        float _1152 = ((log2((((float(_1103.y) * 0.5) * float(_1103.x)) * abs((_609 * _603) - (_608 * _605))) / (sqrt(((_1123 * _1123) + (_1126 * _1126)) + (_1120 * _1120)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1114 * gl_WorldRayDirectionEXT.x, _1114 * gl_WorldRayDirectionEXT.y, _1114 * gl_WorldRayDirectionEXT.z), vec3(_667, _669, _670))));
        _1154 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    }
    else
    {
        _1154 = 0.0;
    }
    vec4 _1156 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _655) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _656) + cbTextureTilingScale._m0[1u].w), _1154);
    uvec2 _1175 = uvec2(textureSize(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_0, int(0u)));
    float _1179 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1180 = _1179 * gl_WorldRayDirectionEXT.x;
    float _1181 = _1179 * gl_WorldRayDirectionEXT.y;
    float _1182 = _1179 * gl_WorldRayDirectionEXT.z;
    float _1226;
    if (_773)
    {
        float _1192 = (_654 * _639) - (_651 * _642);
        float _1195 = (_648 * _642) - (_654 * _636);
        float _1198 = (_651 * _636) - (_648 * _639);
        float _1224 = ((log2((((float(_1175.y) * 0.5) * float(_1175.x)) * abs((_609 * _603) - (_608 * _605))) / (sqrt(((_1195 * _1195) + (_1198 * _1198)) + (_1192 * _1192)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1180, _1181, _1182), vec3(_667, _669, _670))));
        _1226 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    }
    else
    {
        _1226 = 0.0;
    }
    vec4 _1228 = textureLod(sampler2D(M_Ice_Ov_N_ContactFade_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _655) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _656) + cbTextureTilingScale._m0[0u].w), _1226);
    float _1234 = (_1228.x * 2.0) + (-1.0);
    float _1235 = (_1228.y * 2.0) + (-1.0);
    float _1790 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _1236 = isnan(1.0) ? _1790 : (isnan(_1790) ? 1.0 : min(_1790, 1.0));
    float _1241 = (_1236 * _1236) * (3.0 - (_1236 * 2.0));
    float _1251 = (((((((_1042.x * _969) + (_1010.x * _970)) + (_1076.x * _968)) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].y) + _835) + (((_1241 * (((_1156.x * 2.0) + (-1.0)) - _1234)) + _1234) * cbMtdParam._m0[12u].y);
    float _1252 = (((((((_1042.y * _969) + (_1010.y * _970)) + (_1076.y * _968)) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].y) + _837) + (((_1241 * (((_1156.y * 2.0) + (-1.0)) - _1235)) + _1235) * cbMtdParam._m0[12u].y);
    float _1255 = fma(_843, _667, fma(_1252, _683, _1251 * _703));
    float _1258 = fma(_843, _669, fma(_1252, _684, _1251 * _704));
    float _1261 = fma(_843, _670, fma(_1252, _685, _1251 * _705));
    float _1265 = inversesqrt(dot(vec3(_1255, _1258, _1261), vec3(_1255, _1258, _1261)));
    float _1266 = _1265 * _1255;
    float _1267 = _1265 * _1258;
    float _1268 = _1265 * _1261;
    float _1280 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1281 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1282 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1283 = (-0.0) - _1180;
    float _1285 = (-0.0) - _1181;
    float _1286 = (-0.0) - _1182;
    float _1292 = float(gl_LaunchIDEXT.x);
    float _1293 = float(gl_LaunchIDEXT.y);
    float _1296 = float(gl_LaunchSizeEXT.x);
    float _1310 = fract(fract(sin(dot(vec2(_1292 / _1296, _1293 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1323 = fract(fract(sin(dot(vec2((_1292 + 128.0) / _1296, (_1293 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _1333 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1334 = _1333.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1334, _1333.w, _1334, vec3(_1280, _1281, _1282), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    if (_63._m0 == 0u)
    {
        float _1355 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1266, _1267, _1268));
        float _1801 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1358 = isnan(1.0) ? _1801 : (isnan(_1801) ? 1.0 : min(_1801, 1.0));
        float _1377 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _963) * 0.949999988079071044921875);
        float _1378 = _1377 * _1377;
        float _1379 = g_sceneCB._m0[4u].x - _1180;
        float _1380 = g_sceneCB._m0[4u].y - _1181;
        float _1381 = g_sceneCB._m0[4u].z - _1182;
        float _1385 = inversesqrt(dot(vec3(_1379, _1380, _1381), vec3(_1379, _1380, _1381)));
        float _1386 = _1385 * _1379;
        float _1387 = _1385 * _1380;
        float _1388 = _1385 * _1381;
        float _1389 = dot(vec3(_1266, _1267, _1268), vec3(g_sceneCB._m0[4u].xyz));
        float _1812 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1392 = isnan(1.0) ? _1812 : (isnan(_1812) ? 1.0 : min(_1812, 1.0));
        float _1393 = dot(vec3(_1266, _1267, _1268), vec3(_1283, _1285, _1286));
        float _1823 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1396 = isnan(1.0) ? _1823 : (isnan(_1823) ? 1.0 : min(_1823, 1.0));
        float _1397 = dot(vec3(_1266, _1267, _1268), vec3(_1386, _1387, _1388));
        float _1834 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1400 = isnan(1.0) ? _1834 : (isnan(_1834) ? 1.0 : min(_1834, 1.0));
        float _1401 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1386, _1387, _1388));
        float _1845 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1405 = _1378 * _1378;
        float _1409 = ((_1400 * _1400) * (_1405 + (-1.0))) + 1.0;
        float _1421 = (exp2(log2(1.0 - (isnan(1.0) ? _1845 : (isnan(_1845) ? 1.0 : min(_1845, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1423 = 1.0 - _1378;
        float _1434 = (0.5 / (((_1396 * ((_1392 * _1423) + _1378)) + 9.9999999392252902907785028219223e-09) + (((_1396 * _1423) + _1378) * _1392))) * _1392;
        float _1856 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1436 = (isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0))) * (_1405 / ((_1409 * _1409) * 3.141590118408203125));
        _1443 = ((_956 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1358;
        _1444 = ((_957 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1358;
        _1445 = ((_958 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1358;
        _1446 = (_1421 * g_sceneCB._m0[5u].x) * _1436;
        _1447 = (_1421 * g_sceneCB._m0[5u].y) * _1436;
        _1448 = (_1421 * g_sceneCB._m0[5u].z) * _1436;
    }
    else
    {
        _1443 = 0.0;
        _1444 = 0.0;
        _1445 = 0.0;
        _1446 = 0.0;
        _1447 = 0.0;
        _1448 = 0.0;
    }
    bool _1450 = abs(_1267) < 0.89999997615814208984375;
    float _1452 = float(_1450);
    float _1453 = _1450 ? 0.0 : 1.0;
    float _1456 = (_1452 * _1268) - (_1453 * _1267);
    float _1457 = _1453 * _1266;
    float _1459 = (-0.0) - (_1266 * _1452);
    float _1463 = inversesqrt(dot(vec3(_1456, _1457, _1459), vec3(_1456, _1457, _1459)));
    float _1464 = _1456 * _1463;
    float _1465 = _1457 * _1463;
    float _1466 = _1463 * _1459;
    float _1469 = (_1465 * _1268) - (_1466 * _1267);
    float _1472 = (_1466 * _1266) - (_1464 * _1268);
    float _1475 = (_1464 * _1267) - (_1465 * _1266);
    float _1477;
    float _1485;
    float _1476 = 0.0;
    uint _1478 = 0u;
    float _1482;
    bool _1484;
    for (;;)
    {
        _1482 = (float(_1478) + _1310) * 0.03125;
        _1484 = _1478 == 0u;
        float frontier_phi_53_pred;
        if (_1484)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1619;
            float _1620;
            uint _1622;
            _1619 = 0.0;
            _1620 = 0.5;
            _1622 = _1478;
            float _1486;
            for (;;)
            {
                _1486 = ((_1622 & 1u) != 0u) ? (_1620 + _1619) : _1619;
                uint _1623 = _1622 >> 1u;
                if (_1623 == 0u)
                {
                    break;
                }
                else
                {
                    _1619 = _1486;
                    _1620 *= 0.5;
                    _1622 = _1623;
                }
            }
            frontier_phi_53_pred = _1486;
        }
        _1485 = frontier_phi_53_pred;
        float _1487 = _1485 + _1323;
        float _1491 = sqrt(_1482);
        float _1492 = ((_1487 > 1.0) ? (_1487 + (-1.0)) : _1487) * 6.283185482025146484375;
        float _1495 = cos(_1492) * _1491;
        float _1497 = sin(_1492) * _1491;
        float _1499 = sqrt(1.0 - _1482);
        float _1512 = ((_1499 * _1266) + (_1495 * _1469)) + (_1497 * _1464);
        float _1513 = ((_1499 * _1267) + (_1495 * _1472)) + (_1497 * _1465);
        float _1514 = ((_1499 * _1268) + (_1495 * _1475)) + (_1497 * _1466);
        _62._m0 = 1u;
        uvec4 _1518 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1519 = _1518.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1519, _1518.w, _1519, vec3(_1280, _1281, _1282), 9.9999997473787516355514526367188e-05, vec3(_1512, _1513, _1514), 10000.0, 1);
        float _1525 = dot(vec3(_1266, _1267, _1268), vec3(_1512, _1513, _1514));
        float _1867 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1528 = isnan(1.0) ? _1867 : (isnan(_1867) ? 1.0 : min(_1867, 1.0));
        _1477 = ((float(_62._m0 == 0u) * _1528) / (_1528 * 0.3183098733425140380859375)) + _1476;
        uint _1479 = _1478 + 1u;
        if (_1479 == 32u)
        {
            break;
        }
        else
        {
            _1476 = _1477;
            _1478 = _1479;
            continue;
        }
    }
    float _1536 = _1477 * 0.009947183541953563690185546875;
    float _1541 = dot(vec3(_1180, _1181, _1182), vec3(_1266, _1267, _1268)) * 2.0;
    vec4 _1555 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1180 - (_1541 * _1266), _1181 - (_1541 * _1267), _1182 - (_1541 * _1268)), 4.0 - (_963 * 4.0));
    float _1560 = dot(vec3(_1283, _1285, _1286), vec3(_1266, _1267, _1268));
    float _1878 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
    float _1569 = (exp2(log2(1.0 - (isnan(1.0) ? _1878 : (isnan(_1878) ? 1.0 : min(_1878, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1575 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1266, _1267, _1268), 0.0);
    float _1586 = (_1446 + _1443) + (((_1575.x * _956) + (_1569 * _1555.x)) * _1536);
    float _1590 = (_1447 + _1444) + (((_1575.y * _957) + (_1569 * _1555.y)) * _1536);
    float _1594 = (_1448 + _1445) + (((_1575.z * _958) + (_1569 * _1555.z)) * _1536);
    float _1889 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
    float _1900 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
    float _1911 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
    bool _1602 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1613;
    _1613.x = _1602 ? ((_660 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1889 : (isnan(_1889) ? 1.0 : min(_1889, 1.0)));
    _1613.y = _1602 ? ((_663 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1900 : (isnan(_1900) ? 1.0 : min(_1900, 1.0)));
    _1613.z = _1602 ? ((_666 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1911 : (isnan(_1911) ? 1.0 : min(_1911, 1.0)));
    payload._m0 = _1613;
}


