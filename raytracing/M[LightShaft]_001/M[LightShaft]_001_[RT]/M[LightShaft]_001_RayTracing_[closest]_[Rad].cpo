#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _48
{
    vec3 _m0;
};

struct _52
{
    vec2 _m0;
};

struct _55
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_LightShaft_001_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _48 payload;
hitAttributeEXT _52 hit;
layout(location = 1) rayPayloadEXT _55 _57;
layout(location = 2) rayPayloadEXT _55 _58;

vec3 _962;

void main()
{
    float _66 = float(gl_LaunchSizeEXT.y);
    float _96 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _97 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _116 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _117 = _116.y;
    uint _156;
    uint _158;
    uint _159;
    if (_116.x == 0u)
    {
        uint _124 = (_117 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _133 = uvec3(texelFetch(l_geomIndexBuffer, int(_124)).x, texelFetch(l_geomIndexBuffer, int(_124 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_124 + 2u)).x);
        _156 = _133.x;
        _158 = _133.y;
        _159 = _133.z;
    }
    else
    {
        uint _137 = uint(gl_PrimitiveID) * 6u;
        uint _139 = _137 & 4294967292u;
        uint _142 = (_117 + _139) >> 2u;
        uvec2 _149 = uvec2(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x);
        uint _150 = _149.x;
        uint _151 = _149.y;
        uint _153 = _150 >> 16u;
        uint _154 = _151 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_139 == _137)
        {
            frontier_phi_3_2_ladder = _154;
            frontier_phi_3_2_ladder_1 = _150 & 65535u;
            frontier_phi_3_2_ladder_2 = _153;
        }
        else
        {
            frontier_phi_3_2_ladder = _151 >> 16u;
            frontier_phi_3_2_ladder_1 = _153;
            frontier_phi_3_2_ladder_2 = _154;
        }
        _156 = frontier_phi_3_2_ladder_1;
        _158 = frontier_phi_3_2_ladder_2;
        _159 = frontier_phi_3_2_ladder;
    }
    uvec4 _163 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _164 = _163.x;
    uint _165 = _163.z;
    bool _166 = _165 != 0u;
    bool _168 = _116.w == 0u;
    bool _169 = _166 || _168;
    uint _171 = (_164 * _156) + 12u;
    uint _195;
    uint _196;
    uint _197;
    uint _198;
    if (_169)
    {
        uvec4 _174 = texelFetch(l_geomAttrib_0, int(_171 >> 2u));
        uint _175 = _174.x;
        _195 = _175 & 255u;
        _196 = (_175 >> 8u) & 255u;
        _197 = (_175 >> 16u) & 255u;
        _198 = 20u;
    }
    else
    {
        uint _183 = _171 >> 2u;
        uvec2 _189 = uvec2(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x);
        uint _190 = _189.x;
        _195 = _190 & 65535u;
        _196 = _190 >> 16u;
        _197 = _189.y & 65535u;
        _198 = 24u;
    }
    bool _204 = _165 == 0u;
    uint _205;
    if (_204)
    {
        _205 = _198;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_168)
        {
            frontier_phi_9_10_ladder = _198 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _198 + 8u;
        }
        _205 = frontier_phi_9_10_ladder;
    }
    uint _210 = _166 ? (_205 + 4u) : _205;
    uint _211 = _164 * _156;
    uvec4 _222 = texelFetch(l_geomAttrib_0, int(((_211 + 4u) + _210) >> 2u));
    uint _223 = _222.x;
    float _227 = float(int(uint(int(_223 << 16u) >> int(16u))));
    float _228 = float(int(uint(int(_223) >> int(16u))));
    uint _230 = (_164 * _158) + 12u;
    uint _251;
    uint _252;
    uint _253;
    uint _254;
    if (_169)
    {
        uvec4 _232 = texelFetch(l_geomAttrib_0, int(_230 >> 2u));
        uint _233 = _232.x;
        _251 = _233 & 255u;
        _252 = (_233 >> 8u) & 255u;
        _253 = (_233 >> 16u) & 255u;
        _254 = 20u;
    }
    else
    {
        uint _239 = _230 >> 2u;
        uvec2 _245 = uvec2(texelFetch(l_geomAttrib_0, int(_239)).x, texelFetch(l_geomAttrib_0, int(_239 + 1u)).x);
        uint _246 = _245.x;
        _251 = _246 & 65535u;
        _252 = _246 >> 16u;
        _253 = _245.y & 65535u;
        _254 = 24u;
    }
    uint _258;
    if (_204)
    {
        _258 = _254;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_168)
        {
            frontier_phi_16_17_ladder = _254 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _254 + 8u;
        }
        _258 = frontier_phi_16_17_ladder;
    }
    uint _262 = _166 ? (_258 + 4u) : _258;
    uint _263 = _164 * _158;
    uvec4 _273 = texelFetch(l_geomAttrib_0, int(((_263 + 4u) + _262) >> 2u));
    uint _274 = _273.x;
    float _278 = float(int(uint(int(_274 << 16u) >> int(16u))));
    float _279 = float(int(uint(int(_274) >> int(16u))));
    uint _281 = (_164 * _159) + 12u;
    uint _302;
    uint _303;
    uint _304;
    uint _305;
    if (_169)
    {
        uvec4 _283 = texelFetch(l_geomAttrib_0, int(_281 >> 2u));
        uint _284 = _283.x;
        _302 = _284 & 255u;
        _303 = (_284 >> 8u) & 255u;
        _304 = (_284 >> 16u) & 255u;
        _305 = 20u;
    }
    else
    {
        uint _290 = _281 >> 2u;
        uvec2 _296 = uvec2(texelFetch(l_geomAttrib_0, int(_290)).x, texelFetch(l_geomAttrib_0, int(_290 + 1u)).x);
        uint _297 = _296.x;
        _302 = _297 & 65535u;
        _303 = _297 >> 16u;
        _304 = _296.y & 65535u;
        _305 = 24u;
    }
    uint _309;
    if (_204)
    {
        _309 = _305;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_168)
        {
            frontier_phi_23_24_ladder = _305 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _305 + 8u;
        }
        _309 = frontier_phi_23_24_ladder;
    }
    uint _313 = _166 ? (_309 + 4u) : _309;
    uint _314 = _164 * _159;
    uvec4 _324 = texelFetch(l_geomAttrib_0, int(((_314 + 4u) + _313) >> 2u));
    uint _325 = _324.x;
    float _329 = float(int(uint(int(_325 << 16u) >> int(16u))));
    float _330 = float(int(uint(int(_325) >> int(16u))));
    bool _332 = _116.z == 0u;
    float _368;
    float _369;
    float _370;
    if (_332)
    {
        uint _335 = _156 * 3u;
        uvec3 _344 = uvec3(texelFetch(l_geomPositionBuffer, int(_335)).x, texelFetch(l_geomPositionBuffer, int(_335 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_335 + 2u)).x);
        _368 = uintBitsToFloat(_344.x);
        _369 = uintBitsToFloat(_344.y);
        _370 = uintBitsToFloat(_344.z);
    }
    else
    {
        uint _352 = _156 * 2u;
        uvec2 _358 = uvec2(texelFetch(l_geomPositionBuffer, int(_352)).x, texelFetch(l_geomPositionBuffer, int(_352 + 1u)).x);
        uint _359 = _358.x;
        _368 = unpackHalf2x16(_359).x;
        _369 = unpackHalf2x16(_359 >> 16u).x;
        _370 = unpackHalf2x16(_358.y).x;
    }
    float _406;
    float _407;
    float _408;
    if (_332)
    {
        uint _373 = _158 * 3u;
        uvec3 _382 = uvec3(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_373 + 2u)).x);
        _406 = uintBitsToFloat(_382.x);
        _407 = uintBitsToFloat(_382.y);
        _408 = uintBitsToFloat(_382.z);
    }
    else
    {
        uint _390 = _158 * 2u;
        uvec2 _396 = uvec2(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x);
        uint _397 = _396.x;
        _406 = unpackHalf2x16(_397).x;
        _407 = unpackHalf2x16(_397 >> 16u).x;
        _408 = unpackHalf2x16(_396.y).x;
    }
    float _444;
    float _445;
    float _446;
    if (_332)
    {
        uint _411 = _159 * 3u;
        uvec3 _420 = uvec3(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_411 + 2u)).x);
        _444 = uintBitsToFloat(_420.x);
        _445 = uintBitsToFloat(_420.y);
        _446 = uintBitsToFloat(_420.z);
    }
    else
    {
        uint _428 = _159 * 2u;
        uvec2 _434 = uvec2(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x);
        uint _435 = _434.x;
        _444 = unpackHalf2x16(_435).x;
        _445 = unpackHalf2x16(_435 >> 16u).x;
        _446 = unpackHalf2x16(_434.y).x;
    }
    float _449 = (1.0 - hit._m0.x) - hit._m0.y;
    float _497 = _406 - _368;
    float _498 = _407 - _369;
    float _499 = _408 - _370;
    float _502 = fma(_499, gl_ObjectToWorldEXT[2u].x, fma(_498, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _497));
    float _505 = fma(_499, gl_ObjectToWorldEXT[2u].y, fma(_498, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _497));
    float _508 = fma(_499, gl_ObjectToWorldEXT[2u].z, fma(_498, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _497));
    float _509 = _444 - _368;
    float _510 = _445 - _369;
    float _511 = _446 - _370;
    float _514 = fma(_511, gl_ObjectToWorldEXT[2u].x, fma(_510, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _509));
    float _517 = fma(_511, gl_ObjectToWorldEXT[2u].y, fma(_510, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _509));
    float _520 = fma(_511, gl_ObjectToWorldEXT[2u].z, fma(_510, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _509));
    float _527 = (((float(_195) * _449) + (-127.0)) + (float(_251) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _530 = (((float(_196) * _449) + (-127.0)) + (float(_252) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _533 = (((float(_197) * _449) + (-127.0)) + (float(_253) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _534 = _527 * 0.0078740157186985015869140625;
    float _536 = _530 * 0.0078740157186985015869140625;
    float _537 = _533 * 0.0078740157186985015869140625;
    bool _543 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    uvec2 _555 = uvec2(textureSize(M_LightShaft_001_snp_0_Texture2D_1, int(0u)));
    float _564 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _565 = _564 * gl_WorldRayDirectionEXT.x;
    float _566 = _564 * gl_WorldRayDirectionEXT.y;
    float _567 = _564 * gl_WorldRayDirectionEXT.z;
    float _619;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _581 = (_520 * _505) - (_517 * _508);
        float _584 = (_514 * _508) - (_520 * _502);
        float _587 = (_517 * _502) - (_514 * _505);
        float _616 = ((log2((((float(_555.y) * 0.5) * float(_555.x)) * abs((((_330 - _228) * (_278 - _227)) - ((_329 - _227) * (_279 - _228))) * 2.384185791015625e-07)) / (sqrt(((_584 * _584) + (_587 * _587)) + (_581 * _581)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_97 * _97) + (_96 * _96)) + (_98 * _98)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _66)))))) / abs(dot(vec3(_565, _566, _567), vec3(_534, _536, _537))));
        _619 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    }
    else
    {
        _619 = 0.0;
    }
    float _626 = textureLod(sampler2D(M_LightShaft_001_snp_0_Texture2D_1, SS_WrapLinear), vec2((((((_278 * hit._m0.x) + (_227 * _449)) + (_329 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_279 * hit._m0.x) + (_228 * _449)) + (_330 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _619).x * ((((float(texelFetch(l_geomAttrib_0, int((_262 + _263) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_210 + _211) >> 2u)).x >> 24u) * _449)) + (float(texelFetch(l_geomAttrib_0, int((_313 + _314) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _642 = _626 * (cbMtdParam._m0[9u].y - (cbMtdParam._m0[11u].z * cbMtdParam._m0[9u].y));
    float _643 = _626 * (cbMtdParam._m0[9u].z - (cbMtdParam._m0[11u].z * cbMtdParam._m0[9u].z));
    float _644 = _626 * (cbMtdParam._m0[9u].w - (cbMtdParam._m0[11u].z * cbMtdParam._m0[9u].w));
    float _651 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_534, _536, _537, 0.0)) - cbMtdParam._m0[11u].y;
    float _1041 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _658 = exp2(log2(1.0 - (isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].x : (isnan(cbMtdParam._m0[11u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].x, 0.001000000047497451305389404296875))));
    float _671 = inversesqrt(dot(vec3(_534, _536, _537), vec3(_534, _536, _537)));
    float _672 = _671 * _534;
    float _673 = _671 * _536;
    float _674 = _671 * _537;
    float _686 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _687 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _688 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _689 = (-0.0) - _565;
    float _691 = (-0.0) - _566;
    float _692 = (-0.0) - _567;
    float _698 = float(gl_LaunchIDEXT.x);
    float _699 = float(gl_LaunchIDEXT.y);
    float _702 = float(gl_LaunchSizeEXT.x);
    float _716 = fract(fract(sin(dot(vec2(_698 / _702, _699 / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _729 = fract(fract(sin(dot(vec2((_698 + 128.0) / _702, (_699 + 128.0) / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _58._m0 = 1u;
    uvec4 _739 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _740 = _739.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _740, _739.w, _740, vec3(_686, _687, _688), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _806;
    float _807;
    float _808;
    if (_58._m0 == 0u)
    {
        float _761 = g_sceneCB._m0[4u].x - _565;
        float _762 = g_sceneCB._m0[4u].y - _566;
        float _763 = g_sceneCB._m0[4u].z - _567;
        float _767 = inversesqrt(dot(vec3(_761, _762, _763), vec3(_761, _762, _763)));
        float _771 = dot(vec3(_672, _673, _674), vec3(g_sceneCB._m0[4u].xyz));
        float _1057 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        float _774 = isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0));
        float _775 = dot(vec3(_672, _673, _674), vec3(_689, _691, _692));
        float _1068 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
        float _779 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_761 * _767, _762 * _767, _763 * _767));
        float _1079 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
        float _790 = (exp2(log2(1.0 - (isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _796 = (0.5 / ((_774 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0))))) * _774;
        float _1090 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
        float _798 = (isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0))) * 0.31831014156341552734375;
        _806 = (_790 * g_sceneCB._m0[5u].x) * _798;
        _807 = (_790 * g_sceneCB._m0[5u].y) * _798;
        _808 = (_790 * g_sceneCB._m0[5u].z) * _798;
    }
    else
    {
        _806 = 0.0;
        _807 = 0.0;
        _808 = 0.0;
    }
    bool _810 = abs(_673) < 0.89999997615814208984375;
    float _812 = float(_810);
    float _813 = _810 ? 0.0 : 1.0;
    float _816 = (_812 * _674) - (_813 * _673);
    float _817 = _813 * _672;
    float _819 = (-0.0) - (_672 * _812);
    float _823 = inversesqrt(dot(vec3(_816, _817, _819), vec3(_816, _817, _819)));
    float _824 = _816 * _823;
    float _825 = _817 * _823;
    float _826 = _823 * _819;
    float _829 = (_825 * _674) - (_826 * _673);
    float _832 = (_826 * _672) - (_824 * _674);
    float _835 = (_824 * _673) - (_825 * _672);
    float _837;
    float _845;
    float _836 = 0.0;
    uint _838 = 0u;
    float _842;
    bool _844;
    for (;;)
    {
        _842 = (float(_838) + _716) * 0.03125;
        _844 = _838 == 0u;
        float frontier_phi_41_pred;
        if (_844)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _967;
            float _968;
            uint _970;
            _967 = 0.0;
            _968 = 0.5;
            _970 = _838;
            float _846;
            for (;;)
            {
                _846 = ((_970 & 1u) != 0u) ? (_968 + _967) : _967;
                uint _971 = _970 >> 1u;
                if (_971 == 0u)
                {
                    break;
                }
                else
                {
                    _967 = _846;
                    _968 *= 0.5;
                    _970 = _971;
                }
            }
            frontier_phi_41_pred = _846;
        }
        _845 = frontier_phi_41_pred;
        float _847 = _845 + _729;
        float _852 = sqrt(_842);
        float _853 = ((_847 > 1.0) ? (_847 + (-1.0)) : _847) * 6.283185482025146484375;
        float _856 = cos(_853) * _852;
        float _858 = sin(_853) * _852;
        float _860 = sqrt(1.0 - _842);
        float _873 = ((_860 * _672) + (_856 * _829)) + (_858 * _824);
        float _874 = ((_860 * _673) + (_856 * _832)) + (_858 * _825);
        float _875 = ((_860 * _674) + (_856 * _835)) + (_858 * _826);
        _57._m0 = 1u;
        uvec4 _879 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _880 = _879.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _880, _879.w, _880, vec3(_686, _687, _688), 9.9999997473787516355514526367188e-05, vec3(_873, _874, _875), 10000.0, 1);
        float _886 = dot(vec3(_672, _673, _674), vec3(_873, _874, _875));
        float _1101 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _889 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
        _837 = ((float(_57._m0 == 0u) * _889) / (_889 * 0.3183098733425140380859375)) + _836;
        uint _839 = _838 + 1u;
        if (_839 == 32u)
        {
            break;
        }
        else
        {
            _836 = _837;
            _838 = _839;
            continue;
        }
    }
    float _898 = _837 * 0.009947183541953563690185546875;
    float _903 = dot(vec3(_565, _566, _567), vec3(_672, _673, _674)) * 2.0;
    vec4 _915 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_565 - (_903 * _672), _566 - (_903 * _673), _567 - (_903 * _674)), 4.0);
    float _920 = dot(vec3(_689, _691, _692), vec3(_672, _673, _674));
    float _1112 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _929 = (exp2(log2(1.0 - (isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _937 = (_806 + (_543 ? (_642 - (_658 * _642)) : _642)) + ((_915.x * _898) * _929);
    float _939 = (_807 + (_543 ? (_643 - (_658 * _643)) : _643)) + ((_915.y * _898) * _929);
    float _941 = (_808 + (_543 ? (_644 - (_658 * _644)) : _644)) + ((_915.z * _898) * _929);
    float _1123 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _1134 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _1145 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    bool _950 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _961;
    _961.x = _950 ? ((_527 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0)));
    _961.y = _950 ? ((_530 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0)));
    _961.z = _950 ? ((_533 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0)));
    payload._m0 = _961;
}


