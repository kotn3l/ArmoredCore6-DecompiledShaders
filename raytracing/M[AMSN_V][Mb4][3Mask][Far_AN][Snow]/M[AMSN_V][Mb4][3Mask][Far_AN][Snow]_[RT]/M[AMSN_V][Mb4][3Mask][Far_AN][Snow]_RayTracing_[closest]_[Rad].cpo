#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2251;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + _243) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uvec4 _257 = texelFetch(l_geomAttrib_0, int(((_187 + 8u) + _243) >> 2u));
    uint _258 = _257.x;
    uint _267 = _181 * _175;
    uint _268 = _267 + 12u;
    uint _289;
    uint _290;
    uint _291;
    uint _292;
    if (_186)
    {
        uvec4 _270 = texelFetch(l_geomAttrib_0, int(_268 >> 2u));
        uint _271 = _270.x;
        _289 = _271 & 255u;
        _290 = (_271 >> 8u) & 255u;
        _291 = (_271 >> 16u) & 255u;
        _292 = 16u;
    }
    else
    {
        uint _277 = _268 >> 2u;
        uvec2 _283 = uvec2(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x);
        uint _284 = _283.x;
        _289 = _284 & 65535u;
        _290 = _284 >> 16u;
        _291 = _283.y & 65535u;
        _292 = 20u;
    }
    uvec4 _298 = texelFetch(l_geomAttrib_0, int((_292 + _267) >> 2u));
    uint _299 = _298.x;
    uint _311;
    if (_238)
    {
        _311 = _292 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _292 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _292 + 12u;
        }
        _311 = frontier_phi_16_17_ladder;
    }
    uint _315 = _183 ? (_311 + 4u) : _311;
    uvec4 _319 = texelFetch(l_geomAttrib_0, int(((_267 + 4u) + _315) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    uvec4 _329 = texelFetch(l_geomAttrib_0, int(((_267 + 8u) + _315) >> 2u));
    uint _330 = _329.x;
    uint _339 = _181 * _176;
    uint _340 = _339 + 12u;
    uint _361;
    uint _362;
    uint _363;
    uint _364;
    if (_186)
    {
        uvec4 _342 = texelFetch(l_geomAttrib_0, int(_340 >> 2u));
        uint _343 = _342.x;
        _361 = _343 & 255u;
        _362 = (_343 >> 8u) & 255u;
        _363 = (_343 >> 16u) & 255u;
        _364 = 16u;
    }
    else
    {
        uint _349 = _340 >> 2u;
        uvec2 _355 = uvec2(texelFetch(l_geomAttrib_0, int(_349)).x, texelFetch(l_geomAttrib_0, int(_349 + 1u)).x);
        uint _356 = _355.x;
        _361 = _356 & 65535u;
        _362 = _356 >> 16u;
        _363 = _355.y & 65535u;
        _364 = 20u;
    }
    uvec4 _370 = texelFetch(l_geomAttrib_0, int((_364 + _339) >> 2u));
    uint _371 = _370.x;
    uint _383;
    if (_238)
    {
        _383 = _364 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _364 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _364 + 12u;
        }
        _383 = frontier_phi_23_24_ladder;
    }
    uint _387 = _183 ? (_383 + 4u) : _383;
    uvec4 _391 = texelFetch(l_geomAttrib_0, int(((_339 + 4u) + _387) >> 2u));
    uint _392 = _391.x;
    float _396 = float(int(uint(int(_392 << 16u) >> int(16u))));
    float _397 = float(int(uint(int(_392) >> int(16u))));
    uvec4 _401 = texelFetch(l_geomAttrib_0, int(((_339 + 8u) + _387) >> 2u));
    uint _402 = _401.x;
    bool _412 = _132.z == 0u;
    float _448;
    float _449;
    float _450;
    if (_412)
    {
        uint _415 = _173 * 3u;
        uvec3 _424 = uvec3(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_415 + 2u)).x);
        _448 = uintBitsToFloat(_424.x);
        _449 = uintBitsToFloat(_424.y);
        _450 = uintBitsToFloat(_424.z);
    }
    else
    {
        uint _432 = _173 * 2u;
        uvec2 _438 = uvec2(texelFetch(l_geomPositionBuffer, int(_432)).x, texelFetch(l_geomPositionBuffer, int(_432 + 1u)).x);
        uint _439 = _438.x;
        _448 = unpackHalf2x16(_439).x;
        _449 = unpackHalf2x16(_439 >> 16u).x;
        _450 = unpackHalf2x16(_438.y).x;
    }
    float _486;
    float _487;
    float _488;
    if (_412)
    {
        uint _453 = _175 * 3u;
        uvec3 _462 = uvec3(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_453 + 2u)).x);
        _486 = uintBitsToFloat(_462.x);
        _487 = uintBitsToFloat(_462.y);
        _488 = uintBitsToFloat(_462.z);
    }
    else
    {
        uint _470 = _175 * 2u;
        uvec2 _476 = uvec2(texelFetch(l_geomPositionBuffer, int(_470)).x, texelFetch(l_geomPositionBuffer, int(_470 + 1u)).x);
        uint _477 = _476.x;
        _486 = unpackHalf2x16(_477).x;
        _487 = unpackHalf2x16(_477 >> 16u).x;
        _488 = unpackHalf2x16(_476.y).x;
    }
    float _524;
    float _525;
    float _526;
    if (_412)
    {
        uint _491 = _176 * 3u;
        uvec3 _500 = uvec3(texelFetch(l_geomPositionBuffer, int(_491)).x, texelFetch(l_geomPositionBuffer, int(_491 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_491 + 2u)).x);
        _524 = uintBitsToFloat(_500.x);
        _525 = uintBitsToFloat(_500.y);
        _526 = uintBitsToFloat(_500.z);
    }
    else
    {
        uint _508 = _176 * 2u;
        uvec2 _514 = uvec2(texelFetch(l_geomPositionBuffer, int(_508)).x, texelFetch(l_geomPositionBuffer, int(_508 + 1u)).x);
        uint _515 = _514.x;
        _524 = unpackHalf2x16(_515).x;
        _525 = unpackHalf2x16(_515 >> 16u).x;
        _526 = unpackHalf2x16(_514.y).x;
    }
    float _529 = (1.0 - hit._m0.x) - hit._m0.y;
    float _561 = _529 * 0.0039215688593685626983642578125;
    float _566 = hit._m0.x * 0.0039215688593685626983642578125;
    float _570 = hit._m0.y * 0.0039215688593685626983642578125;
    float _576 = (_324 - _252) * 0.00048828125;
    float _578 = (_325 - _253) * 0.00048828125;
    float _581 = (_396 - _252) * 0.00048828125;
    float _582 = (_397 - _253) * 0.00048828125;
    float _604 = _486 - _448;
    float _605 = _487 - _449;
    float _606 = _488 - _450;
    float _609 = fma(_606, gl_ObjectToWorldEXT[2u].x, fma(_605, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _604));
    float _612 = fma(_606, gl_ObjectToWorldEXT[2u].y, fma(_605, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _604));
    float _615 = fma(_606, gl_ObjectToWorldEXT[2u].z, fma(_605, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _604));
    float _616 = _524 - _448;
    float _617 = _525 - _449;
    float _618 = _526 - _450;
    float _621 = fma(_618, gl_ObjectToWorldEXT[2u].x, fma(_617, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _616));
    float _624 = fma(_618, gl_ObjectToWorldEXT[2u].y, fma(_617, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _616));
    float _627 = fma(_618, gl_ObjectToWorldEXT[2u].z, fma(_617, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _616));
    float _628 = (((_324 * hit._m0.x) + (_252 * _529)) + (_396 * hit._m0.y)) * 0.00048828125;
    float _629 = (((_325 * hit._m0.x) + (_253 * _529)) + (_397 * hit._m0.y)) * 0.00048828125;
    float _633 = (((float(_212) * _529) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _636 = (((float(_213) * _529) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_362) * hit._m0.y);
    float _639 = (((float(_214) * _529) + (-127.0)) + (float(_291) * hit._m0.x)) + (float(_363) * hit._m0.y);
    float _640 = _633 * 0.0078740157186985015869140625;
    float _642 = _636 * 0.0078740157186985015869140625;
    float _643 = _639 * 0.0078740157186985015869140625;
    float _656 = ((((float(_224 & 255u) * _529) + (-127.0)) + (float(_299 & 255u) * hit._m0.x)) + (float(_371 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float((_224 >> 8u) & 255u) * _529) + (-127.0)) + (float((_299 >> 8u) & 255u) * hit._m0.x)) + (float((_371 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _658 = ((((float((_224 >> 16u) & 255u) * _529) + (-127.0)) + (float((_299 >> 16u) & 255u) * hit._m0.x)) + (float((_371 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _659 = ((((float(_224 >> 24u) * _529) + (-127.0)) + (float(_299 >> 24u) * hit._m0.x)) + (float(_371 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _669 = ((_657 * _643) - (_658 * _642)) * _659;
    float _670 = ((_658 * _640) - (_656 * _643)) * _659;
    float _671 = ((_656 * _642) - (_657 * _640)) * _659;
    float _675 = inversesqrt(dot(vec3(_669, _670, _671), vec3(_669, _670, _671)));
    float _676 = _675 * _669;
    float _677 = _675 * _670;
    float _678 = _675 * _671;
    uvec2 _702 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_13, int(0u)));
    bool _707 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _760;
    if (_707)
    {
        float _718 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _724 = (_627 * _612) - (_624 * _615);
        float _727 = (_621 * _615) - (_627 * _609);
        float _730 = (_624 * _609) - (_621 * _612);
        float _757 = ((log2((((float(_702.y) * 0.5) * float(_702.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_727 * _727) + (_730 * _730)) + (_724 * _724)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_718 * gl_WorldRayDirectionEXT.x, _718 * gl_WorldRayDirectionEXT.y, _718 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _760 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    }
    else
    {
        _760 = 0.0;
    }
    vec4 _764 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _628) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _629) + cbTextureTilingScale._m0[3u].w), _760);
    float _766 = _764.x;
    float _767 = _764.y;
    float _768 = _764.z;
    float _781 = (1.0 - cbMtdParam._m0[16u].x) * (1.0 / cbMtdParam._m0[14u].y);
    float _2354 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _782 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
    uvec2 _794 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_1, int(0u)));
    float _845;
    if (_707)
    {
        float _805 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _811 = (_627 * _612) - (_624 * _615);
        float _814 = (_621 * _615) - (_627 * _609);
        float _817 = (_624 * _609) - (_621 * _612);
        float _843 = ((log2((((float(_794.y) * 0.5) * float(_794.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_814 * _814) + (_817 * _817)) + (_811 * _811)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_805 * gl_WorldRayDirectionEXT.x, _805 * gl_WorldRayDirectionEXT.y, _805 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _845 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    }
    else
    {
        _845 = 0.0;
    }
    vec4 _847 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _628) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _629) + cbTextureTilingScale._m0[1u].w), _845);
    float _849 = _847.x;
    float _850 = _847.y;
    float _851 = _847.z;
    float _858 = (((_766 * cbMtdParam._m0[13u].x) - _849) * _782) + _849;
    float _859 = (((_767 * cbMtdParam._m0[13u].y) - _850) * _782) + _850;
    float _860 = (((_768 * cbMtdParam._m0[13u].z) - _851) * _782) + _851;
    uvec2 _881 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_2, int(0u)));
    float _932;
    if (_707)
    {
        float _892 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _898 = (_627 * _612) - (_624 * _615);
        float _901 = (_621 * _615) - (_627 * _609);
        float _904 = (_624 * _609) - (_621 * _612);
        float _930 = ((log2((((float(_881.y) * 0.5) * float(_881.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_901 * _901) + (_904 * _904)) + (_898 * _898)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_892 * gl_WorldRayDirectionEXT.x, _892 * gl_WorldRayDirectionEXT.y, _892 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _932 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    }
    else
    {
        _932 = 0.0;
    }
    vec4 _934 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _628) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _629) + cbTextureTilingScale._m0[6u].w), _932);
    float _936 = _934.x;
    float _937 = _934.y;
    float _938 = _934.z;
    uvec2 _956 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_0, int(0u)));
    float _1007;
    if (_707)
    {
        float _967 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _973 = (_627 * _612) - (_624 * _615);
        float _976 = (_621 * _615) - (_627 * _609);
        float _979 = (_624 * _609) - (_621 * _612);
        float _1005 = ((log2((((float(_956.y) * 0.5) * float(_956.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_976 * _976) + (_979 * _979)) + (_973 * _973)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_967 * gl_WorldRayDirectionEXT.x, _967 * gl_WorldRayDirectionEXT.y, _967 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1007 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    }
    else
    {
        _1007 = 0.0;
    }
    vec4 _1010 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * _628) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _629) + cbTextureTilingScale._m0[0u].w), _1007);
    uvec2 _1042 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_3, int(0u)));
    float _1093;
    if (_707)
    {
        float _1053 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1059 = (_627 * _612) - (_624 * _615);
        float _1062 = (_621 * _615) - (_627 * _609);
        float _1065 = (_624 * _609) - (_621 * _612);
        float _1091 = ((log2((((float(_1042.y) * 0.5) * float(_1042.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1062 * _1062) + (_1065 * _1065)) + (_1059 * _1059)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1053 * gl_WorldRayDirectionEXT.x, _1053 * gl_WorldRayDirectionEXT.y, _1053 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1093 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    }
    else
    {
        _1093 = 0.0;
    }
    float _1099 = cbMtdParam._m0[15u].w * textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _628) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _629) + cbTextureTilingScale._m0[7u].w), _1093).x;
    float _1106 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * ((((((1.0 - (_561 * float(_258 & 255u))) - (_566 * float(_330 & 255u))) - (_570 * float(_402 & 255u))) - _1010.x) * 2.0) - _1099)) + 1.0;
    float _2385 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1107 = isnan(1.0) ? _2385 : (isnan(_2385) ? 1.0 : min(_2385, 1.0));
    float _1117 = (_1107 * ((_936 - _858) + (((cbMtdParam._m0[11u].x * _766) - _936) * _782))) + _858;
    float _1118 = (_1107 * ((_937 - _859) + (((cbMtdParam._m0[11u].y * _767) - _937) * _782))) + _859;
    float _1119 = (_1107 * ((_938 - _860) + (((cbMtdParam._m0[11u].z * _768) - _938) * _782))) + _860;
    uvec2 _1140 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_8, int(0u)));
    float _1191;
    if (_707)
    {
        float _1151 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1157 = (_627 * _612) - (_624 * _615);
        float _1160 = (_621 * _615) - (_627 * _609);
        float _1163 = (_624 * _609) - (_621 * _612);
        float _1189 = ((log2((((float(_1140.y) * 0.5) * float(_1140.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1160 * _1160) + (_1163 * _1163)) + (_1157 * _1157)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1151 * gl_WorldRayDirectionEXT.x, _1151 * gl_WorldRayDirectionEXT.y, _1151 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1191 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
    }
    else
    {
        _1191 = 0.0;
    }
    vec4 _1193 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _628) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _629) + cbTextureTilingScale._m0[12u].w), _1191);
    float _1195 = _1193.x;
    float _1196 = _1193.y;
    float _1197 = _1193.z;
    float _1209 = ((((((((1.0 - (_561 * float((_258 >> 8u) & 255u))) - (_566 * float((_330 >> 8u) & 255u))) - (_570 * float((_402 >> 8u) & 255u))) - _1010.y) * 2.0) - _1099) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _2401 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _1210 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
    float _1220 = (((_1195 - _1117) + (((cbMtdParam._m0[10u].x * _766) - _1195) * _782)) * _1210) + _1117;
    float _1221 = (((_1196 - _1118) + (((cbMtdParam._m0[10u].y * _767) - _1196) * _782)) * _1210) + _1118;
    float _1222 = (_1210 * ((_1197 - _1119) + (((cbMtdParam._m0[10u].z * _768) - _1197) * _782))) + _1119;
    uvec2 _1242 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_11, int(0u)));
    float _1293;
    if (_707)
    {
        float _1253 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1259 = (_627 * _612) - (_624 * _615);
        float _1262 = (_621 * _615) - (_627 * _609);
        float _1265 = (_624 * _609) - (_621 * _612);
        float _1291 = ((log2((((float(_1242.y) * 0.5) * float(_1242.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1262 * _1262) + (_1265 * _1265)) + (_1259 * _1259)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1253 * gl_WorldRayDirectionEXT.x, _1253 * gl_WorldRayDirectionEXT.y, _1253 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1293 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
    }
    else
    {
        _1293 = 0.0;
    }
    vec4 _1295 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _628) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _629) + cbTextureTilingScale._m0[2u].w), _1293);
    float _1297 = _1295.x;
    float _1298 = _1295.y;
    float _1299 = _1295.z;
    float _1311 = ((((((((1.0 - (_561 * float((_258 >> 16u) & 255u))) - (_566 * float((_330 >> 16u) & 255u))) - (_570 * float((_402 >> 16u) & 255u))) - _1010.z) * 2.0) - _1099) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _2417 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
    float _1312 = isnan(1.0) ? _2417 : (isnan(_2417) ? 1.0 : min(_2417, 1.0));
    float _1322 = (((_1297 - _1220) + (((cbMtdParam._m0[12u].x * _766) - _1297) * _782)) * _1312) + _1220;
    float _1323 = (((_1298 - _1221) + (((cbMtdParam._m0[12u].y * _767) - _1298) * _782)) * _1312) + _1221;
    float _1324 = (_1312 * ((_1299 - _1222) + (((cbMtdParam._m0[12u].z * _768) - _1299) * _782))) + _1222;
    uvec2 _1339 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_16, int(0u)));
    float _1390;
    if (_707)
    {
        float _1350 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1356 = (_627 * _612) - (_624 * _615);
        float _1359 = (_621 * _615) - (_627 * _609);
        float _1362 = (_624 * _609) - (_621 * _612);
        float _1388 = ((log2((((float(_1339.y) * 0.5) * float(_1339.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1359 * _1359) + (_1362 * _1362)) + (_1356 * _1356)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1350 * gl_WorldRayDirectionEXT.x, _1350 * gl_WorldRayDirectionEXT.y, _1350 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1390 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
    }
    else
    {
        _1390 = 0.0;
    }
    vec4 _1393 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _628) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _629) + cbTextureTilingScale._m0[5u].w), _1390);
    float _1395 = _1393.x;
    float _1396 = _1393.y;
    float _1397 = _1393.z;
    uvec2 _1409 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_7, int(0u)));
    float _1460;
    if (_707)
    {
        float _1420 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1426 = (_627 * _612) - (_624 * _615);
        float _1429 = (_621 * _615) - (_627 * _609);
        float _1432 = (_624 * _609) - (_621 * _612);
        float _1458 = ((log2((((float(_1409.y) * 0.5) * float(_1409.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1429 * _1429) + (_1432 * _1432)) + (_1426 * _1426)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1420 * gl_WorldRayDirectionEXT.x, _1420 * gl_WorldRayDirectionEXT.y, _1420 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1460 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
    }
    else
    {
        _1460 = 0.0;
    }
    vec4 _1462 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _628) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _629) + cbTextureTilingScale._m0[11u].w), _1460);
    float _1464 = _1462.x;
    float _1465 = _1462.y;
    float _1466 = _1462.z;
    uvec2 _1487 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_15, int(0u)));
    float _1538;
    if (_707)
    {
        float _1498 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1504 = (_627 * _612) - (_624 * _615);
        float _1507 = (_621 * _615) - (_627 * _609);
        float _1510 = (_624 * _609) - (_621 * _612);
        float _1536 = ((log2((((float(_1487.y) * 0.5) * float(_1487.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1507 * _1507) + (_1510 * _1510)) + (_1504 * _1504)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1498 * gl_WorldRayDirectionEXT.x, _1498 * gl_WorldRayDirectionEXT.y, _1498 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1538 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
    }
    else
    {
        _1538 = 0.0;
    }
    vec4 _1540 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _628) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _629) + cbTextureTilingScale._m0[4u].w), _1538);
    float _1542 = _1540.x;
    float _1543 = _1540.y;
    float _1544 = _1540.z;
    uvec2 _1565 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_6, int(0u)));
    float _1616;
    if (_707)
    {
        float _1576 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1582 = (_627 * _612) - (_624 * _615);
        float _1585 = (_621 * _615) - (_627 * _609);
        float _1588 = (_624 * _609) - (_621 * _612);
        float _1614 = ((log2((((float(_1565.y) * 0.5) * float(_1565.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1585 * _1585) + (_1588 * _1588)) + (_1582 * _1582)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1576 * gl_WorldRayDirectionEXT.x, _1576 * gl_WorldRayDirectionEXT.y, _1576 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1616 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
    }
    else
    {
        _1616 = 0.0;
    }
    vec4 _1618 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _628) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _629) + cbTextureTilingScale._m0[10u].w), _1616);
    float _1620 = _1618.x;
    float _1621 = _1618.y;
    float _1622 = _1618.z;
    uvec2 _1643 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_5, int(0u)));
    float _1694;
    if (_707)
    {
        float _1654 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1660 = (_627 * _612) - (_624 * _615);
        float _1663 = (_621 * _615) - (_627 * _609);
        float _1666 = (_624 * _609) - (_621 * _612);
        float _1692 = ((log2((((float(_1643.y) * 0.5) * float(_1643.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1663 * _1663) + (_1666 * _1666)) + (_1660 * _1660)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1654 * gl_WorldRayDirectionEXT.x, _1654 * gl_WorldRayDirectionEXT.y, _1654 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1694 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
    }
    else
    {
        _1694 = 0.0;
    }
    vec4 _1696 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _628) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _629) + cbTextureTilingScale._m0[9u].w), _1694);
    float _1698 = _1696.x;
    float _1699 = _1696.y;
    float _1700 = _1696.z;
    float _1707 = ((_1464 - _1698) * _782) + _1698;
    float _1708 = ((_1465 - _1699) * _782) + _1699;
    float _1709 = ((_1466 - _1700) * _782) + _1700;
    float _1716 = (((((_1464 - _1620) * _782) + _1620) - _1707) * _1107) + _1707;
    float _1717 = (((((_1465 - _1621) * _782) + _1621) - _1708) * _1107) + _1708;
    float _1718 = (((((_1466 - _1622) * _782) + _1622) - _1709) * _1107) + _1709;
    float _1725 = (((((_1464 - _1542) * _782) + _1542) - _1716) * _1210) + _1716;
    float _1726 = (((((_1465 - _1543) * _782) + _1543) - _1717) * _1210) + _1717;
    float _1727 = (((((_1466 - _1544) * _782) + _1544) - _1718) * _1210) + _1718;
    float _1739 = (((((((_1464 - _1395) * _782) + _1395) - _1725) * _1312) + _1725) * 2.0) + (-1.0);
    float _1741 = (((((((_1465 - _1396) * _782) + _1396) - _1726) * _1312) + _1726) * 2.0) + (-1.0);
    float _1742 = dot(vec2(_1739, _1741), vec2(_1739, _1741));
    float _2453 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
    float _1747 = sqrt(1.0 - (isnan(1.0) ? _2453 : (isnan(_2453) ? 1.0 : min(_2453, 1.0))));
    float _1750 = fma(_1747, _640, fma(_1741, _656, _1739 * _676));
    float _1753 = fma(_1747, _642, fma(_1741, _657, _1739 * _677));
    float _1756 = fma(_1747, _643, fma(_1741, _658, _1739 * _678));
    float _1765 = exp2(log2(inversesqrt(dot(vec3(_1750, _1753, _1756), vec3(_1750, _1753, _1756))) * _1753) * cbMtdParam._m0[15u].z) * cbMtdParam._m0[14u].z;
    float _2464 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
    float _1766 = isnan(1.0) ? _2464 : (isnan(_2464) ? 1.0 : min(_2464, 1.0));
    float _2475 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
    float _1767 = isnan(1.0) ? _2475 : (isnan(_2475) ? 1.0 : min(_2475, 1.0));
    float _1769 = 3.0 - (_1767 * 2.0);
    float _1774 = _1767 * _1767;
    float _1781 = ((_1774 * (cbMtdParam._m0[9u].x - _1322)) * _1769) + _1322;
    float _1782 = ((_1774 * (cbMtdParam._m0[9u].y - _1323)) * _1769) + _1323;
    float _1783 = ((_1774 * (cbMtdParam._m0[9u].z - _1324)) * _1769) + _1324;
    float _1785 = ((((((_1466 - _1397) * _782) + _1397) - _1727) * _1312) + _1727) + cbMtdParam._m0[14u].w;
    float _1798 = (((cbMtdParam._m0[16u].y * _1739) - _1739) * _782) + _1739;
    float _1799 = (((cbMtdParam._m0[16u].z * _1741) - _1741) * _782) + _1741;
    float _1800 = (((cbMtdParam._m0[16u].w * _1747) - _1747) * _782) + _1747;
    uvec2 _1812 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_4, int(0u)));
    float _1816 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1817 = _1816 * gl_WorldRayDirectionEXT.x;
    float _1818 = _1816 * gl_WorldRayDirectionEXT.y;
    float _1819 = _1816 * gl_WorldRayDirectionEXT.z;
    float _1863;
    if (_707)
    {
        float _1829 = (_627 * _612) - (_624 * _615);
        float _1832 = (_621 * _615) - (_627 * _609);
        float _1835 = (_624 * _609) - (_621 * _612);
        float _1861 = ((log2((((float(_1812.y) * 0.5) * float(_1812.x)) * abs((_582 * _576) - (_581 * _578))) / (sqrt(((_1832 * _1832) + (_1835 * _1835)) + (_1829 * _1829)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1817, _1818, _1819), vec3(_640, _642, _643))));
        _1863 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
    }
    else
    {
        _1863 = 0.0;
    }
    vec4 _1865 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _628) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _629) + cbTextureTilingScale._m0[8u].w), _1863);
    float _1871 = (_1865.x * 2.0) + (-1.0);
    float _1872 = (_1865.y * 2.0) + (-1.0);
    float _1873 = dot(vec2(_1871, _1872), vec2(_1871, _1872));
    float _2491 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
    float _1888 = ((_1774 * (_1871 - _1798)) * _1769) + _1798;
    float _1889 = ((_1774 * (_1872 - _1799)) * _1769) + _1799;
    float _1890 = ((_1774 * (sqrt(1.0 - (isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0)))) - _1800)) * _1769) + _1800;
    float _1893 = fma(_1890, _640, fma(_1889, _656, _1888 * _676));
    float _1896 = fma(_1890, _642, fma(_1889, _657, _1888 * _677));
    float _1899 = fma(_1890, _643, fma(_1889, _658, _1888 * _678));
    float _1903 = inversesqrt(dot(vec3(_1893, _1896, _1899), vec3(_1893, _1896, _1899)));
    float _1904 = _1903 * _1893;
    float _1905 = _1903 * _1896;
    float _1906 = _1903 * _1899;
    float _1918 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1919 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1920 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1921 = (-0.0) - _1817;
    float _1923 = (-0.0) - _1818;
    float _1924 = (-0.0) - _1819;
    float _1930 = float(gl_LaunchIDEXT.x);
    float _1931 = float(gl_LaunchIDEXT.y);
    float _1934 = float(gl_LaunchSizeEXT.x);
    float _1948 = fract(fract(sin(dot(vec2(_1930 / _1934, _1931 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1961 = fract(fract(sin(dot(vec2((_1930 + 128.0) / _1934, (_1931 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _74._m0 = 1u;
    uvec4 _1971 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1972 = _1971.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1972, _1971.w, _1972, vec3(_1918, _1919, _1920), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2080;
    float _2081;
    float _2082;
    float _2083;
    float _2084;
    float _2085;
    if (_74._m0 == 0u)
    {
        float _1992 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1904, _1905, _1906));
        float _2502 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _1995 = isnan(1.0) ? _2502 : (isnan(_2502) ? 1.0 : min(_2502, 1.0));
        float _2014 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1785) * 0.949999988079071044921875);
        float _2015 = _2014 * _2014;
        float _2016 = g_sceneCB._m0[4u].x - _1817;
        float _2017 = g_sceneCB._m0[4u].y - _1818;
        float _2018 = g_sceneCB._m0[4u].z - _1819;
        float _2022 = inversesqrt(dot(vec3(_2016, _2017, _2018), vec3(_2016, _2017, _2018)));
        float _2023 = _2022 * _2016;
        float _2024 = _2022 * _2017;
        float _2025 = _2022 * _2018;
        float _2026 = dot(vec3(_1904, _1905, _1906), vec3(g_sceneCB._m0[4u].xyz));
        float _2513 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
        float _2029 = isnan(1.0) ? _2513 : (isnan(_2513) ? 1.0 : min(_2513, 1.0));
        float _2030 = dot(vec3(_1904, _1905, _1906), vec3(_1921, _1923, _1924));
        float _2524 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
        float _2033 = isnan(1.0) ? _2524 : (isnan(_2524) ? 1.0 : min(_2524, 1.0));
        float _2034 = dot(vec3(_1904, _1905, _1906), vec3(_2023, _2024, _2025));
        float _2535 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
        float _2037 = isnan(1.0) ? _2535 : (isnan(_2535) ? 1.0 : min(_2535, 1.0));
        float _2038 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2023, _2024, _2025));
        float _2546 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
        float _2042 = _2015 * _2015;
        float _2046 = ((_2037 * _2037) * (_2042 + (-1.0))) + 1.0;
        float _2058 = (exp2(log2(1.0 - (isnan(1.0) ? _2546 : (isnan(_2546) ? 1.0 : min(_2546, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2060 = 1.0 - _2015;
        float _2071 = (0.5 / (((_2033 * ((_2029 * _2060) + _2015)) + 9.9999999392252902907785028219223e-09) + (((_2033 * _2060) + _2015) * _2029))) * _2029;
        float _2557 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
        float _2073 = (isnan(1.0) ? _2557 : (isnan(_2557) ? 1.0 : min(_2557, 1.0))) * (_2042 / ((_2046 * _2046) * 3.141590118408203125));
        _2080 = ((_1781 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1995;
        _2081 = ((_1782 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1995;
        _2082 = ((_1783 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1995;
        _2083 = (_2058 * g_sceneCB._m0[5u].x) * _2073;
        _2084 = (_2058 * g_sceneCB._m0[5u].y) * _2073;
        _2085 = (_2058 * g_sceneCB._m0[5u].z) * _2073;
    }
    else
    {
        _2080 = 0.0;
        _2081 = 0.0;
        _2082 = 0.0;
        _2083 = 0.0;
        _2084 = 0.0;
        _2085 = 0.0;
    }
    bool _2087 = abs(_1905) < 0.89999997615814208984375;
    float _2089 = float(_2087);
    float _2090 = _2087 ? 0.0 : 1.0;
    float _2093 = (_2089 * _1906) - (_2090 * _1905);
    float _2094 = _2090 * _1904;
    float _2096 = (-0.0) - (_1904 * _2089);
    float _2100 = inversesqrt(dot(vec3(_2093, _2094, _2096), vec3(_2093, _2094, _2096)));
    float _2101 = _2093 * _2100;
    float _2102 = _2094 * _2100;
    float _2103 = _2100 * _2096;
    float _2106 = (_2102 * _1906) - (_2103 * _1905);
    float _2109 = (_2103 * _1904) - (_2101 * _1906);
    float _2112 = (_2101 * _1905) - (_2102 * _1904);
    float _2114;
    float _2122;
    float _2113 = 0.0;
    uint _2115 = 0u;
    float _2119;
    bool _2121;
    for (;;)
    {
        _2119 = (float(_2115) + _1948) * 0.03125;
        _2121 = _2115 == 0u;
        float frontier_phi_65_pred;
        if (_2121)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2256;
            float _2257;
            uint _2259;
            _2256 = 0.0;
            _2257 = 0.5;
            _2259 = _2115;
            float _2123;
            for (;;)
            {
                _2123 = ((_2259 & 1u) != 0u) ? (_2257 + _2256) : _2256;
                uint _2260 = _2259 >> 1u;
                if (_2260 == 0u)
                {
                    break;
                }
                else
                {
                    _2256 = _2123;
                    _2257 *= 0.5;
                    _2259 = _2260;
                }
            }
            frontier_phi_65_pred = _2123;
        }
        _2122 = frontier_phi_65_pred;
        float _2124 = _2122 + _1961;
        float _2128 = sqrt(_2119);
        float _2129 = ((_2124 > 1.0) ? (_2124 + (-1.0)) : _2124) * 6.283185482025146484375;
        float _2132 = cos(_2129) * _2128;
        float _2134 = sin(_2129) * _2128;
        float _2136 = sqrt(1.0 - _2119);
        float _2149 = ((_2136 * _1904) + (_2132 * _2106)) + (_2134 * _2101);
        float _2150 = ((_2136 * _1905) + (_2132 * _2109)) + (_2134 * _2102);
        float _2151 = ((_2136 * _1906) + (_2132 * _2112)) + (_2134 * _2103);
        _73._m0 = 1u;
        uvec4 _2155 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2156 = _2155.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2156, _2155.w, _2156, vec3(_1918, _1919, _1920), 9.9999997473787516355514526367188e-05, vec3(_2149, _2150, _2151), 10000.0, 1);
        float _2162 = dot(vec3(_1904, _1905, _1906), vec3(_2149, _2150, _2151));
        float _2568 = isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0));
        float _2165 = isnan(1.0) ? _2568 : (isnan(_2568) ? 1.0 : min(_2568, 1.0));
        _2114 = ((float(_73._m0 == 0u) * _2165) / (_2165 * 0.3183098733425140380859375)) + _2113;
        uint _2116 = _2115 + 1u;
        if (_2116 == 32u)
        {
            break;
        }
        else
        {
            _2113 = _2114;
            _2115 = _2116;
            continue;
        }
    }
    float _2173 = _2114 * 0.009947183541953563690185546875;
    float _2178 = dot(vec3(_1817, _1818, _1819), vec3(_1904, _1905, _1906)) * 2.0;
    vec4 _2192 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1817 - (_2178 * _1904), _1818 - (_2178 * _1905), _1819 - (_2178 * _1906)), 4.0 - (_1785 * 4.0));
    float _2197 = dot(vec3(_1921, _1923, _1924), vec3(_1904, _1905, _1906));
    float _2579 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _2206 = (exp2(log2(1.0 - (isnan(1.0) ? _2579 : (isnan(_2579) ? 1.0 : min(_2579, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2212 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1904, _1905, _1906), 0.0);
    float _2223 = (_2083 + _2080) + (((_2212.x * _1781) + (_2206 * _2192.x)) * _2173);
    float _2227 = (_2084 + _2081) + (((_2212.y * _1782) + (_2206 * _2192.y)) * _2173);
    float _2231 = (_2085 + _2082) + (((_2212.z * _1783) + (_2206 * _2192.z)) * _2173);
    float _2590 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _2601 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
    float _2612 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
    bool _2239 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2250;
    _2250.x = _2239 ? ((_633 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2590 : (isnan(_2590) ? 1.0 : min(_2590, 1.0)));
    _2250.y = _2239 ? ((_636 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2601 : (isnan(_2601) ? 1.0 : min(_2601, 1.0)));
    _2250.z = _2239 ? ((_639 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2612 : (isnan(_2612) ? 1.0 : min(_2612, 1.0)));
    payload._m0 = _2250;
}


