#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _72
{
    vec3 _m0;
};

struct _76
{
    vec2 _m0;
};

struct _90
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _72 payload;
hitAttributeEXT _76 hit;
layout(location = 1) rayPayloadEXT _90 _92;
layout(location = 2) rayPayloadEXT _90 _93;

vec3 _2319;

void main()
{
    float _107 = float(gl_LaunchSizeEXT.y);
    float _135 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _136 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _137 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _144 = sqrt(((_136 * _136) + (_135 * _135)) + (_137 * _137)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _107)))));
    uvec4 _155 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _156 = _155.y;
    uint _195;
    uint _197;
    uint _198;
    if (_155.x == 0u)
    {
        uint _164 = (_156 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _173 = uvec3(texelFetch(l_geomIndexBuffer, int(_164)).x, texelFetch(l_geomIndexBuffer, int(_164 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_164 + 2u)).x);
        _195 = _173.x;
        _197 = _173.y;
        _198 = _173.z;
    }
    else
    {
        uint _177 = uint(gl_PrimitiveID) * 6u;
        uint _178 = _177 & 4294967292u;
        uint _181 = (_156 + _178) >> 2u;
        uvec2 _188 = uvec2(texelFetch(l_geomIndexBuffer, int(_181)).x, texelFetch(l_geomIndexBuffer, int(_181 + 1u)).x);
        uint _189 = _188.x;
        uint _190 = _188.y;
        uint _192 = _189 >> 16u;
        uint _193 = _190 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_178 == _177)
        {
            frontier_phi_3_2_ladder = _192;
            frontier_phi_3_2_ladder_1 = _189 & 65535u;
            frontier_phi_3_2_ladder_2 = _193;
        }
        else
        {
            frontier_phi_3_2_ladder = _193;
            frontier_phi_3_2_ladder_1 = _192;
            frontier_phi_3_2_ladder_2 = _190 >> 16u;
        }
        _195 = frontier_phi_3_2_ladder_1;
        _197 = frontier_phi_3_2_ladder;
        _198 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _202 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _203 = _202.x;
    uint _204 = _203 * _195;
    uint _206 = _204 >> 2u;
    uvec2 _212 = uvec2(texelFetch(l_geomAttrib_0, int(_206)).x, texelFetch(l_geomAttrib_0, int(_206 + 1u)).x);
    uint _217 = _202.z;
    bool _218 = _217 != 0u;
    bool _220 = _155.w == 0u;
    bool _221 = _218 || _220;
    uint _222 = _204 + 12u;
    uint _245;
    uint _246;
    uint _247;
    uint _248;
    if (_221)
    {
        uvec4 _224 = texelFetch(l_geomAttrib_0, int(_222 >> 2u));
        uint _225 = _224.x;
        _245 = _225 & 255u;
        _246 = (_225 >> 8u) & 255u;
        _247 = (_225 >> 16u) & 255u;
        _248 = 16u;
    }
    else
    {
        uint _233 = _222 >> 2u;
        uvec2 _239 = uvec2(texelFetch(l_geomAttrib_0, int(_233)).x, texelFetch(l_geomAttrib_0, int(_233 + 1u)).x);
        uint _240 = _239.x;
        _245 = _240 & 65535u;
        _246 = _240 >> 16u;
        _247 = _239.y & 65535u;
        _248 = 20u;
    }
    uvec4 _255 = texelFetch(l_geomAttrib_0, int((_248 + _204) >> 2u));
    uint _256 = _255.x;
    bool _270 = _217 == 0u;
    uint _271;
    if (_270)
    {
        _271 = _248 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_220)
        {
            frontier_phi_9_10_ladder = _248 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _248 + 12u;
        }
        _271 = frontier_phi_9_10_ladder;
    }
    uint _275 = _218 ? (_271 + 4u) : _271;
    uvec4 _279 = texelFetch(l_geomAttrib_0, int(((_204 + 4u) + _275) >> 2u));
    uint _280 = _279.x;
    float _284 = float(int(uint(int(_280 << 16u) >> int(16u))));
    float _285 = float(int(uint(int(_280) >> int(16u))));
    uvec4 _289 = texelFetch(l_geomAttrib_0, int(((_204 + 12u) + _275) >> 2u));
    uint _290 = _289.x;
    uint _299 = _203 * _197;
    uint _300 = _299 >> 2u;
    uvec2 _306 = uvec2(texelFetch(l_geomAttrib_0, int(_300)).x, texelFetch(l_geomAttrib_0, int(_300 + 1u)).x);
    uint _311 = _299 + 12u;
    uint _332;
    uint _333;
    uint _334;
    uint _335;
    if (_221)
    {
        uvec4 _313 = texelFetch(l_geomAttrib_0, int(_311 >> 2u));
        uint _314 = _313.x;
        _332 = _314 & 255u;
        _333 = (_314 >> 8u) & 255u;
        _334 = (_314 >> 16u) & 255u;
        _335 = 16u;
    }
    else
    {
        uint _320 = _311 >> 2u;
        uvec2 _326 = uvec2(texelFetch(l_geomAttrib_0, int(_320)).x, texelFetch(l_geomAttrib_0, int(_320 + 1u)).x);
        uint _327 = _326.x;
        _332 = _327 & 65535u;
        _333 = _327 >> 16u;
        _334 = _326.y & 65535u;
        _335 = 20u;
    }
    uvec4 _341 = texelFetch(l_geomAttrib_0, int((_335 + _299) >> 2u));
    uint _342 = _341.x;
    uint _354;
    if (_270)
    {
        _354 = _335 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_220)
        {
            frontier_phi_16_17_ladder = _335 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _335 + 12u;
        }
        _354 = frontier_phi_16_17_ladder;
    }
    uint _358 = _218 ? (_354 + 4u) : _354;
    uvec4 _362 = texelFetch(l_geomAttrib_0, int(((_299 + 4u) + _358) >> 2u));
    uint _363 = _362.x;
    float _367 = float(int(uint(int(_363 << 16u) >> int(16u))));
    float _368 = float(int(uint(int(_363) >> int(16u))));
    uvec4 _372 = texelFetch(l_geomAttrib_0, int(((_299 + 12u) + _358) >> 2u));
    uint _373 = _372.x;
    uint _382 = _203 * _198;
    uint _383 = _382 >> 2u;
    uvec2 _389 = uvec2(texelFetch(l_geomAttrib_0, int(_383)).x, texelFetch(l_geomAttrib_0, int(_383 + 1u)).x);
    uint _394 = _382 + 12u;
    uint _415;
    uint _416;
    uint _417;
    uint _418;
    if (_221)
    {
        uvec4 _396 = texelFetch(l_geomAttrib_0, int(_394 >> 2u));
        uint _397 = _396.x;
        _415 = _397 & 255u;
        _416 = (_397 >> 8u) & 255u;
        _417 = (_397 >> 16u) & 255u;
        _418 = 16u;
    }
    else
    {
        uint _403 = _394 >> 2u;
        uvec2 _409 = uvec2(texelFetch(l_geomAttrib_0, int(_403)).x, texelFetch(l_geomAttrib_0, int(_403 + 1u)).x);
        uint _410 = _409.x;
        _415 = _410 & 65535u;
        _416 = _410 >> 16u;
        _417 = _409.y & 65535u;
        _418 = 20u;
    }
    uvec4 _424 = texelFetch(l_geomAttrib_0, int((_418 + _382) >> 2u));
    uint _425 = _424.x;
    uint _437;
    if (_270)
    {
        _437 = _418 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_220)
        {
            frontier_phi_23_24_ladder = _418 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _418 + 12u;
        }
        _437 = frontier_phi_23_24_ladder;
    }
    uint _441 = _218 ? (_437 + 4u) : _437;
    uvec4 _445 = texelFetch(l_geomAttrib_0, int(((_382 + 4u) + _441) >> 2u));
    uint _446 = _445.x;
    float _450 = float(int(uint(int(_446 << 16u) >> int(16u))));
    float _451 = float(int(uint(int(_446) >> int(16u))));
    uvec4 _455 = texelFetch(l_geomAttrib_0, int(((_382 + 12u) + _441) >> 2u));
    uint _456 = _455.x;
    bool _466 = _155.z == 0u;
    float _502;
    float _503;
    float _504;
    if (_466)
    {
        uint _469 = _195 * 3u;
        uvec3 _478 = uvec3(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_469 + 2u)).x);
        _502 = uintBitsToFloat(_478.x);
        _503 = uintBitsToFloat(_478.y);
        _504 = uintBitsToFloat(_478.z);
    }
    else
    {
        uint _486 = _195 * 2u;
        uvec2 _492 = uvec2(texelFetch(l_geomPositionBuffer, int(_486)).x, texelFetch(l_geomPositionBuffer, int(_486 + 1u)).x);
        uint _493 = _492.x;
        _502 = unpackHalf2x16(_493).x;
        _503 = unpackHalf2x16(_493 >> 16u).x;
        _504 = unpackHalf2x16(_492.y).x;
    }
    float _540;
    float _541;
    float _542;
    if (_466)
    {
        uint _507 = _197 * 3u;
        uvec3 _516 = uvec3(texelFetch(l_geomPositionBuffer, int(_507)).x, texelFetch(l_geomPositionBuffer, int(_507 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_507 + 2u)).x);
        _540 = uintBitsToFloat(_516.x);
        _541 = uintBitsToFloat(_516.y);
        _542 = uintBitsToFloat(_516.z);
    }
    else
    {
        uint _524 = _197 * 2u;
        uvec2 _530 = uvec2(texelFetch(l_geomPositionBuffer, int(_524)).x, texelFetch(l_geomPositionBuffer, int(_524 + 1u)).x);
        uint _531 = _530.x;
        _540 = unpackHalf2x16(_531).x;
        _541 = unpackHalf2x16(_531 >> 16u).x;
        _542 = unpackHalf2x16(_530.y).x;
    }
    float _578;
    float _579;
    float _580;
    if (_466)
    {
        uint _545 = _198 * 3u;
        uvec3 _554 = uvec3(texelFetch(l_geomPositionBuffer, int(_545)).x, texelFetch(l_geomPositionBuffer, int(_545 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_545 + 2u)).x);
        _578 = uintBitsToFloat(_554.x);
        _579 = uintBitsToFloat(_554.y);
        _580 = uintBitsToFloat(_554.z);
    }
    else
    {
        uint _562 = _198 * 2u;
        uvec2 _568 = uvec2(texelFetch(l_geomPositionBuffer, int(_562)).x, texelFetch(l_geomPositionBuffer, int(_562 + 1u)).x);
        uint _569 = _568.x;
        _578 = unpackHalf2x16(_569).x;
        _579 = unpackHalf2x16(_569 >> 16u).x;
        _580 = unpackHalf2x16(_568.y).x;
    }
    float _583 = (1.0 - hit._m0.x) - hit._m0.y;
    float _593 = ((uintBitsToFloat(_306.y) * hit._m0.x) + (uintBitsToFloat(_212.y) * _583)) + (uintBitsToFloat(_389.y) * hit._m0.y);
    float _646 = (_367 - _284) * 0.00048828125;
    float _648 = (_368 - _285) * 0.00048828125;
    float _651 = (_450 - _284) * 0.00048828125;
    float _652 = (_451 - _285) * 0.00048828125;
    float _674 = _540 - _502;
    float _675 = _541 - _503;
    float _676 = _542 - _504;
    float _679 = fma(_676, gl_ObjectToWorldEXT[2u].x, fma(_675, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _674));
    float _682 = fma(_676, gl_ObjectToWorldEXT[2u].y, fma(_675, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _674));
    float _685 = fma(_676, gl_ObjectToWorldEXT[2u].z, fma(_675, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _674));
    float _686 = _578 - _502;
    float _687 = _579 - _503;
    float _688 = _580 - _504;
    float _691 = fma(_688, gl_ObjectToWorldEXT[2u].x, fma(_687, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _686));
    float _694 = fma(_688, gl_ObjectToWorldEXT[2u].y, fma(_687, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _686));
    float _697 = fma(_688, gl_ObjectToWorldEXT[2u].z, fma(_687, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _686));
    float _698 = (((_367 * hit._m0.x) + (_284 * _583)) + (_450 * hit._m0.y)) * 0.00048828125;
    float _699 = (((_368 * hit._m0.x) + (_285 * _583)) + (_451 * hit._m0.y)) * 0.00048828125;
    float _703 = (((float(_245) * _583) + (-127.0)) + (float(_332) * hit._m0.x)) + (float(_415) * hit._m0.y);
    float _706 = (((float(_246) * _583) + (-127.0)) + (float(_333) * hit._m0.x)) + (float(_416) * hit._m0.y);
    float _709 = (((float(_247) * _583) + (-127.0)) + (float(_334) * hit._m0.x)) + (float(_417) * hit._m0.y);
    float _710 = _703 * 0.0078740157186985015869140625;
    float _712 = _706 * 0.0078740157186985015869140625;
    float _713 = _709 * 0.0078740157186985015869140625;
    float _726 = ((((float(_256 & 255u) * _583) + (-127.0)) + (float(_342 & 255u) * hit._m0.x)) + (float(_425 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _727 = ((((float((_256 >> 8u) & 255u) * _583) + (-127.0)) + (float((_342 >> 8u) & 255u) * hit._m0.x)) + (float((_425 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _728 = ((((float((_256 >> 16u) & 255u) * _583) + (-127.0)) + (float((_342 >> 16u) & 255u) * hit._m0.x)) + (float((_425 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _729 = ((((float(_256 >> 24u) * _583) + (-127.0)) + (float(_342 >> 24u) * hit._m0.x)) + (float(_425 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _739 = ((_727 * _713) - (_728 * _712)) * _729;
    float _740 = ((_728 * _710) - (_726 * _713)) * _729;
    float _741 = ((_726 * _712) - (_727 * _710)) * _729;
    float _745 = inversesqrt(dot(vec3(_739, _740, _741), vec3(_739, _740, _741)));
    uvec2 _768 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, int(0u)));
    bool _773 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _826;
    if (_773)
    {
        float _784 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _790 = (_697 * _682) - (_694 * _685);
        float _793 = (_691 * _685) - (_697 * _679);
        float _796 = (_694 * _679) - (_691 * _682);
        float _823 = ((log2((((float(_768.y) * 0.5) * float(_768.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_793 * _793) + (_796 * _796)) + (_790 * _790)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_784 * gl_WorldRayDirectionEXT.x, _784 * gl_WorldRayDirectionEXT.y, _784 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _826 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    }
    else
    {
        _826 = 0.0;
    }
    vec4 _830 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _698) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _699) + cbTextureTilingScale._m0[10u].w), _826);
    float _836 = log2(0.0);
    float _838 = exp2(_836 * cbMtdParam._m0[31u].z);
    float _842 = _838 - ((((((float(_373 & 255u) * hit._m0.x) + (float(_290 & 255u) * _583)) + (float(_456 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[31u].x) * _838);
    float _843 = _838 - ((((((float((_373 >> 8u) & 255u) * hit._m0.x) + (float((_290 >> 8u) & 255u) * _583)) + (float((_456 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[31u].x) * _838);
    float _844 = _838 - ((((((float((_373 >> 16u) & 255u) * hit._m0.x) + (float((_290 >> 16u) & 255u) * _583)) + (float((_456 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[31u].x) * _838);
    float _845 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _846 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _847 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _848 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
    float _849 = isnan(1.0) ? _846 : (isnan(_846) ? 1.0 : min(_846, 1.0));
    float _850 = isnan(1.0) ? _847 : (isnan(_847) ? 1.0 : min(_847, 1.0));
    uvec2 _866 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, int(0u)));
    float _917;
    if (_773)
    {
        float _877 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _883 = (_697 * _682) - (_694 * _685);
        float _886 = (_691 * _685) - (_697 * _679);
        float _889 = (_694 * _679) - (_691 * _682);
        float _915 = ((log2((((float(_866.y) * 0.5) * float(_866.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_886 * _886) + (_889 * _889)) + (_883 * _883)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_877 * gl_WorldRayDirectionEXT.x, _877 * gl_WorldRayDirectionEXT.y, _877 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _917 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    }
    else
    {
        _917 = 0.0;
    }
    vec4 _920 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _698) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _699) + cbTextureTilingScale._m0[0u].w), _917);
    float _924 = _920.z;
    float _925 = _920.w;
    float _926 = 1.0 - _925;
    float _933 = exp2(log2((1.0 - (_926 * _924)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _934 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _935 = isnan(1.0) ? _934 : (isnan(_934) ? 1.0 : min(_934, 1.0));
    float _947 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_926 * _926) * _924))) * cbMtdParam._m0[34u].w);
    float _948 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    uvec2 _961 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, int(0u)));
    float _1012;
    if (_773)
    {
        float _972 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _978 = (_697 * _682) - (_694 * _685);
        float _981 = (_691 * _685) - (_697 * _679);
        float _984 = (_694 * _679) - (_691 * _682);
        float _1010 = ((log2((((float(_961.y) * 0.5) * float(_961.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_981 * _981) + (_984 * _984)) + (_978 * _978)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_972 * gl_WorldRayDirectionEXT.x, _972 * gl_WorldRayDirectionEXT.y, _972 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1012 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    }
    else
    {
        _1012 = 0.0;
    }
    vec4 _1015 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _698) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _699) + cbTextureTilingScale._m0[3u].w), _1012);
    float _1018 = _1015.y;
    float _1021 = (_1018 * ((isnan(1.0) ? _948 : (isnan(_948) ? 1.0 : min(_948, 1.0))) - _925)) + _925;
    uvec2 _1033 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, int(0u)));
    float _1084;
    if (_773)
    {
        float _1044 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1050 = (_697 * _682) - (_694 * _685);
        float _1053 = (_691 * _685) - (_697 * _679);
        float _1056 = (_694 * _679) - (_691 * _682);
        float _1082 = ((log2((((float(_1033.y) * 0.5) * float(_1033.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1053 * _1053) + (_1056 * _1056)) + (_1050 * _1050)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1044 * gl_WorldRayDirectionEXT.x, _1044 * gl_WorldRayDirectionEXT.y, _1044 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1084 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    }
    else
    {
        _1084 = 0.0;
    }
    vec4 _1086 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _698) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _699) + cbTextureTilingScale._m0[2u].w), _1084);
    float _1098 = (_1015.x + (-0.02500000037252902984619140625)) * 8.0;
    float _1100 = roundEven(_1098);
    float _1101 = cbMtdParam._m0[10u].x * _1086.x;
    float _1102 = cbMtdParam._m0[10u].y * _1086.y;
    float _1103 = cbMtdParam._m0[10u].z * _1086.z;
    uvec2 _1115 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, int(0u)));
    float _1166;
    if (_773)
    {
        float _1126 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1132 = (_697 * _682) - (_694 * _685);
        float _1135 = (_691 * _685) - (_697 * _679);
        float _1138 = (_694 * _679) - (_691 * _682);
        float _1164 = ((log2((((float(_1115.y) * 0.5) * float(_1115.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1135 * _1135) + (_1138 * _1138)) + (_1132 * _1132)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1126 * gl_WorldRayDirectionEXT.x, _1126 * gl_WorldRayDirectionEXT.y, _1126 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1166 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
    }
    else
    {
        _1166 = 0.0;
    }
    vec4 _1168 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _698) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _699) + cbTextureTilingScale._m0[1u].w), _1166);
    float _1188 = (((cbMtdParam._m0[9u].x * _1168.x) - _1101) * _1021) + _1101;
    float _1189 = (((cbMtdParam._m0[9u].y * _1168.y) - _1102) * _1021) + _1102;
    float _1190 = (((cbMtdParam._m0[9u].z * _1168.z) - _1103) * _1021) + _1103;
    uvec2 _1202 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, int(0u)));
    float _1253;
    if (_773)
    {
        float _1213 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1219 = (_697 * _682) - (_694 * _685);
        float _1222 = (_691 * _685) - (_697 * _679);
        float _1225 = (_694 * _679) - (_691 * _682);
        float _1251 = ((log2((((float(_1202.y) * 0.5) * float(_1202.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1222 * _1222) + (_1225 * _1225)) + (_1219 * _1219)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1213 * gl_WorldRayDirectionEXT.x, _1213 * gl_WorldRayDirectionEXT.y, _1213 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1253 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
    }
    else
    {
        _1253 = 0.0;
    }
    vec4 _1255 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _698) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _699) + cbTextureTilingScale._m0[5u].w), _1253);
    float _1274 = (((cbMtdParam._m0[20u].x * _1255.x) - _1188) * _935) + _1188;
    float _1275 = (((cbMtdParam._m0[20u].y * _1255.y) - _1189) * _935) + _1189;
    float _1276 = (((cbMtdParam._m0[20u].z * _1255.z) - _1190) * _935) + _1190;
    uvec2 _1288 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, int(0u)));
    float _1339;
    if (_773)
    {
        float _1299 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1305 = (_697 * _682) - (_694 * _685);
        float _1308 = (_691 * _685) - (_697 * _679);
        float _1311 = (_694 * _679) - (_691 * _682);
        float _1337 = ((log2((((float(_1288.y) * 0.5) * float(_1288.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1308 * _1308) + (_1311 * _1311)) + (_1305 * _1305)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1299 * gl_WorldRayDirectionEXT.x, _1299 * gl_WorldRayDirectionEXT.y, _1299 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1339 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
    }
    else
    {
        _1339 = 0.0;
    }
    vec4 _1341 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _698) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _699) + cbTextureTilingScale._m0[7u].w), _1339);
    float _87[6];
    float _88[6];
    float _89[6];
    _87[0u] = cbMtdParam._m0[24u].x;
    _88[0u] = cbMtdParam._m0[24u].y;
    _89[0u] = cbMtdParam._m0[24u].z;
    _87[1u] = cbMtdParam._m0[25u].x;
    _88[1u] = cbMtdParam._m0[25u].y;
    _89[1u] = cbMtdParam._m0[25u].z;
    _87[2u] = cbMtdParam._m0[26u].x;
    _88[2u] = cbMtdParam._m0[26u].y;
    _89[2u] = cbMtdParam._m0[26u].z;
    _87[3u] = cbMtdParam._m0[27u].x;
    _88[3u] = cbMtdParam._m0[27u].y;
    _89[3u] = cbMtdParam._m0[27u].z;
    _87[4u] = cbMtdParam._m0[28u].x;
    _88[4u] = cbMtdParam._m0[28u].y;
    _89[4u] = cbMtdParam._m0[28u].z;
    _87[5u] = cbMtdParam._m0[29u].x;
    _88[5u] = cbMtdParam._m0[29u].y;
    _89[5u] = cbMtdParam._m0[29u].z;
    float _1424 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    uint _1427 = uint(int(isnan(5.0) ? _1424 : (isnan(_1424) ? 5.0 : min(_1424, 5.0))));
    float _1434 = _87[_1427] * _1018;
    float _1435 = _88[_1427] * _1018;
    float _1436 = _89[_1427] * _1018;
    float _1437 = _1434 + ((_830.x * 4.5) * ((((cbMtdParam._m0[30u].x * _1341.x) - _1274) * _848) + _1274));
    float _1438 = _1435 + ((_830.y * 4.5) * ((((cbMtdParam._m0[30u].y * _1341.y) - _1275) * _849) + _1275));
    float _1439 = _1436 + ((_830.z * 4.5) * ((((cbMtdParam._m0[30u].z * _1341.z) - _1276) * _850) + _1276));
    float _82[5];
    float _83[5];
    _82[0u] = cbMtdParam._m0[35u].y;
    _83[0u] = cbMtdParam._m0[35u].z;
    _82[1u] = cbMtdParam._m0[36u].w;
    _83[1u] = cbMtdParam._m0[37u].x;
    _82[2u] = cbMtdParam._m0[37u].y;
    _83[2u] = cbMtdParam._m0[37u].z;
    _82[3u] = cbMtdParam._m0[37u].w;
    _83[3u] = cbMtdParam._m0[38u].x;
    _82[4u] = cbMtdParam._m0[38u].y;
    _83[4u] = cbMtdParam._m0[38u].z;
    float _1470 = roundEven(5.0 - _1098);
    float _1471 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
    float _1472 = isnan(4.0) ? _1471 : (isnan(_1471) ? 4.0 : min(_1471, 4.0));
    float _1474 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
    uint _1476 = uint(int(isnan(4.0) ? _1474 : (isnan(_1474) ? 4.0 : min(_1474, 4.0))));
    float _1488 = ((cbMtdParam._m0[39u].z - _83[_1476]) * _1021) + _83[_1476];
    float _1496 = ((cbMtdParam._m0[40u].x - _1488) * _935) + _1488;
    float _1501 = ((cbMtdParam._m0[40u].z - _1496) * _848) + _1496;
    uvec2 _1517 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, int(0u)));
    float _1568;
    if (_773)
    {
        float _1528 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1534 = (_697 * _682) - (_694 * _685);
        float _1537 = (_691 * _685) - (_697 * _679);
        float _1540 = (_694 * _679) - (_691 * _682);
        float _1566 = ((log2((((float(_1517.y) * 0.5) * float(_1517.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1537 * _1537) + (_1540 * _1540)) + (_1534 * _1534)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1528 * gl_WorldRayDirectionEXT.x, _1528 * gl_WorldRayDirectionEXT.y, _1528 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1568 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
    }
    else
    {
        _1568 = 0.0;
    }
    vec4 _1570 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _698) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _699) + cbTextureTilingScale._m0[8u].w), _1568);
    float _1572 = _1570.x;
    float _1573 = _1570.y;
    float _1575 = _1570.z + _82[_1476];
    uvec2 _1587 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, int(0u)));
    float _1638;
    if (_773)
    {
        float _1598 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1604 = (_697 * _682) - (_694 * _685);
        float _1607 = (_691 * _685) - (_697 * _679);
        float _1610 = (_694 * _679) - (_691 * _682);
        float _1636 = ((log2((((float(_1587.y) * 0.5) * float(_1587.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1607 * _1607) + (_1610 * _1610)) + (_1604 * _1604)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1598 * gl_WorldRayDirectionEXT.x, _1598 * gl_WorldRayDirectionEXT.y, _1598 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1638 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
    }
    else
    {
        _1638 = 0.0;
    }
    vec4 _1640 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _698) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _699) + cbTextureTilingScale._m0[9u].w), _1638);
    float _1648 = (((cbMtdParam._m0[39u].y - _1575) + _1640.z) * _1021) + _1575;
    uvec2 _1661 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, int(0u)));
    float _1712;
    if (_773)
    {
        float _1672 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1678 = (_697 * _682) - (_694 * _685);
        float _1681 = (_691 * _685) - (_697 * _679);
        float _1684 = (_694 * _679) - (_691 * _682);
        float _1710 = ((log2((((float(_1661.y) * 0.5) * float(_1661.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1681 * _1681) + (_1684 * _1684)) + (_1678 * _1678)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1672 * gl_WorldRayDirectionEXT.x, _1672 * gl_WorldRayDirectionEXT.y, _1672 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1712 = isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0));
    }
    else
    {
        _1712 = 0.0;
    }
    vec4 _1714 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _698) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _699) + cbTextureTilingScale._m0[11u].w), _1712);
    float _1722 = (((cbMtdParam._m0[39u].w - _1648) + _1714.z) * _935) + _1648;
    float _1727 = ((((_924 * 2.0) * _1722) - _1722) * cbMtdParam._m0[33u].w) + _1722;
    uvec2 _1739 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, int(0u)));
    float _1790;
    if (_773)
    {
        float _1750 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1756 = (_697 * _682) - (_694 * _685);
        float _1759 = (_691 * _685) - (_697 * _679);
        float _1762 = (_694 * _679) - (_691 * _682);
        float _1788 = ((log2((((float(_1739.y) * 0.5) * float(_1739.x)) * abs((_652 * _646) - (_651 * _648))) / (sqrt(((_1759 * _1759) + (_1762 * _1762)) + (_1756 * _1756)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1750 * gl_WorldRayDirectionEXT.x, _1750 * gl_WorldRayDirectionEXT.y, _1750 * gl_WorldRayDirectionEXT.z), vec3(_710, _712, _713))));
        _1790 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
    }
    else
    {
        _1790 = 0.0;
    }
    vec4 _1792 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _698) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _699) + cbTextureTilingScale._m0[12u].w), _1790);
    float _1800 = (((cbMtdParam._m0[40u].y - _1727) + _1792.z) * _850) + _1727;
    float _1840 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1841 = _1840 * gl_WorldRayDirectionEXT.x;
    float _1842 = _1840 * gl_WorldRayDirectionEXT.y;
    float _1843 = _1840 * gl_WorldRayDirectionEXT.z;
    float _1858;
    if (_773)
    {
        float _1856 = ((_836 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_144) / abs(dot(vec3(_1841, _1842, _1843), vec3(_710, _712, _713))));
        _1858 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
    }
    else
    {
        _1858 = 0.0;
    }
    vec4 _1861 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * (((((uintBitsToFloat(_306.x) * hit._m0.x) + (uintBitsToFloat(_212.x) * _583)) + (uintBitsToFloat(_389.x) * hit._m0.y)) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_593 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _1858);
    float _1876 = (-0.0) - ((_593 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _1880 = (_593 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _1881 = isnan(_1880) ? _1876 : (isnan(_1876) ? _1880 : min(_1876, _1880));
    float _2560 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
    float _1882 = isnan(1.0) ? _2560 : (isnan(_2560) ? 1.0 : min(_2560, 1.0));
    float _1902 = ((_1640.x - _1572) * _1021) + _1572;
    float _1903 = ((_1640.y - _1573) * _1021) + _1573;
    float _1908 = ((_1714.x - _1902) * _935) + _1902;
    float _1909 = ((_1714.y - _1903) * _935) + _1903;
    float _1918 = ((((_1792.x - _1908) * _848) + _1908) * 2.0) + (-1.0);
    float _1919 = ((((_1792.y - _1909) * _849) + _1909) * 2.0) + (-1.0);
    float _1920 = dot(vec2(_1918, _1919), vec2(_1918, _1919));
    float _2571 = isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0));
    float _1925 = sqrt(1.0 - (isnan(1.0) ? _2571 : (isnan(_2571) ? 1.0 : min(_2571, 1.0))));
    float _1928 = (cbMtdParam._m0[34u].x * ((_920.x * 2.0) + (-1.0))) + _1918;
    float _1929 = (cbMtdParam._m0[34u].x * ((_920.y * 2.0) + (-1.0))) + _1919;
    float _1932 = fma(_1925, _710, fma(_1929, _726, (_745 * _739) * _1928));
    float _1935 = fma(_1925, _712, fma(_1929, _727, (_745 * _740) * _1928));
    float _1938 = fma(_1925, _713, fma(_1929, _728, (_745 * _741) * _1928));
    float _1942 = inversesqrt(dot(vec3(_1932, _1935, _1938), vec3(_1932, _1935, _1938)));
    float _1943 = _1942 * _1932;
    float _1944 = _1942 * _1935;
    float _1945 = _1942 * _1938;
    float _1957 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1958 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1959 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1960 = (-0.0) - _1841;
    float _1961 = (-0.0) - _1842;
    float _1962 = (-0.0) - _1843;
    float _1968 = float(gl_LaunchIDEXT.x);
    float _1969 = float(gl_LaunchIDEXT.y);
    float _1972 = float(gl_LaunchSizeEXT.x);
    float _1986 = fract(fract(sin(dot(vec2(_1968 / _1972, _1969 / _107), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1999 = fract(fract(sin(dot(vec2((_1968 + 128.0) / _1972, (_1969 + 128.0) / _107), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2000 = 1.0 - _1501;
    float _2001 = _2000 * _1437;
    float _2002 = _2000 * _1438;
    float _2003 = _2000 * _1439;
    float _2008 = _1501 * (_1437 + (-0.039999999105930328369140625));
    float _2009 = _1501 * (_1438 + (-0.039999999105930328369140625));
    float _2010 = _1501 * (_1439 + (-0.039999999105930328369140625));
    float _2011 = _2008 + 0.039999999105930328369140625;
    float _2013 = _2009 + 0.039999999105930328369140625;
    float _2014 = _2010 + 0.039999999105930328369140625;
    _93._m0 = 1u;
    uvec4 _2024 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2025 = _2024.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2025, _2024.w, _2025, vec3(_1957, _1958, _1959), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2137;
    float _2138;
    float _2139;
    float _2140;
    float _2141;
    float _2142;
    if (_93._m0 == 0u)
    {
        float _2044 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1943, _1944, _1945));
        float _2582 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
        float _2047 = isnan(1.0) ? _2582 : (isnan(_2582) ? 1.0 : min(_2582, 1.0));
        float _2066 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1800) * 0.949999988079071044921875);
        float _2067 = _2066 * _2066;
        float _2068 = g_sceneCB._m0[4u].x - _1841;
        float _2069 = g_sceneCB._m0[4u].y - _1842;
        float _2070 = g_sceneCB._m0[4u].z - _1843;
        float _2074 = inversesqrt(dot(vec3(_2068, _2069, _2070), vec3(_2068, _2069, _2070)));
        float _2075 = _2074 * _2068;
        float _2076 = _2074 * _2069;
        float _2077 = _2074 * _2070;
        float _2078 = dot(vec3(_1943, _1944, _1945), vec3(g_sceneCB._m0[4u].xyz));
        float _2593 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2081 = isnan(1.0) ? _2593 : (isnan(_2593) ? 1.0 : min(_2593, 1.0));
        float _2082 = dot(vec3(_1943, _1944, _1945), vec3(_1960, _1961, _1962));
        float _2604 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2085 = isnan(1.0) ? _2604 : (isnan(_2604) ? 1.0 : min(_2604, 1.0));
        float _2086 = dot(vec3(_1943, _1944, _1945), vec3(_2075, _2076, _2077));
        float _2615 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2089 = isnan(1.0) ? _2615 : (isnan(_2615) ? 1.0 : min(_2615, 1.0));
        float _2090 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2075, _2076, _2077));
        float _2626 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2094 = _2067 * _2067;
        float _2098 = ((_2089 * _2089) * (_2094 + (-1.0))) + 1.0;
        float _2106 = exp2(log2(1.0 - (isnan(1.0) ? _2626 : (isnan(_2626) ? 1.0 : min(_2626, 1.0)))) * 5.0);
        float _2117 = 1.0 - _2067;
        float _2128 = (0.5 / (((_2085 * ((_2081 * _2117) + _2067)) + 9.9999999392252902907785028219223e-09) + (((_2085 * _2117) + _2067) * _2081))) * _2081;
        float _2637 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
        float _2130 = (isnan(1.0) ? _2637 : (isnan(_2637) ? 1.0 : min(_2637, 1.0))) * (_2094 / ((_2098 * _2098) * 3.141590118408203125));
        _2137 = ((_2001 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2047;
        _2138 = ((_2002 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2047;
        _2139 = ((_2003 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2047;
        _2140 = (((_2106 * (0.959999978542327880859375 - _2008)) + _2011) * g_sceneCB._m0[5u].x) * _2130;
        _2141 = (((_2106 * (0.959999978542327880859375 - _2009)) + _2013) * g_sceneCB._m0[5u].y) * _2130;
        _2142 = (((_2106 * (0.959999978542327880859375 - _2010)) + _2014) * g_sceneCB._m0[5u].z) * _2130;
    }
    else
    {
        _2137 = 0.0;
        _2138 = 0.0;
        _2139 = 0.0;
        _2140 = 0.0;
        _2141 = 0.0;
        _2142 = 0.0;
    }
    bool _2144 = abs(_1944) < 0.89999997615814208984375;
    float _2146 = float(_2144);
    float _2147 = _2144 ? 0.0 : 1.0;
    float _2150 = (_2146 * _1945) - (_2147 * _1944);
    float _2151 = _2147 * _1943;
    float _2153 = (-0.0) - (_1943 * _2146);
    float _2157 = inversesqrt(dot(vec3(_2150, _2151, _2153), vec3(_2150, _2151, _2153)));
    float _2158 = _2150 * _2157;
    float _2159 = _2151 * _2157;
    float _2160 = _2157 * _2153;
    float _2163 = (_2159 * _1945) - (_2160 * _1944);
    float _2166 = (_2160 * _1943) - (_2158 * _1945);
    float _2169 = (_2158 * _1944) - (_2159 * _1943);
    float _2171;
    float _2179;
    float _2170 = 0.0;
    uint _2172 = 0u;
    float _2176;
    bool _2178;
    for (;;)
    {
        _2176 = (float(_2172) + _1986) * 0.03125;
        _2178 = _2172 == 0u;
        float frontier_phi_63_pred;
        if (_2178)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _2324;
            float _2325;
            uint _2327;
            _2324 = 0.0;
            _2325 = 0.5;
            _2327 = _2172;
            float _2180;
            for (;;)
            {
                _2180 = ((_2327 & 1u) != 0u) ? (_2325 + _2324) : _2324;
                uint _2328 = _2327 >> 1u;
                if (_2328 == 0u)
                {
                    break;
                }
                else
                {
                    _2324 = _2180;
                    _2325 *= 0.5;
                    _2327 = _2328;
                }
            }
            frontier_phi_63_pred = _2180;
        }
        _2179 = frontier_phi_63_pred;
        float _2181 = _2179 + _1999;
        float _2185 = sqrt(_2176);
        float _2186 = ((_2181 > 1.0) ? (_2181 + (-1.0)) : _2181) * 6.283185482025146484375;
        float _2189 = cos(_2186) * _2185;
        float _2191 = sin(_2186) * _2185;
        float _2193 = sqrt(1.0 - _2176);
        float _2206 = ((_2193 * _1943) + (_2189 * _2163)) + (_2191 * _2158);
        float _2207 = ((_2193 * _1944) + (_2189 * _2166)) + (_2191 * _2159);
        float _2208 = ((_2193 * _1945) + (_2189 * _2169)) + (_2191 * _2160);
        _92._m0 = 1u;
        uvec4 _2212 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2213 = _2212.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2213, _2212.w, _2213, vec3(_1957, _1958, _1959), 9.9999997473787516355514526367188e-05, vec3(_2206, _2207, _2208), 10000.0, 1);
        float _2219 = dot(vec3(_1943, _1944, _1945), vec3(_2206, _2207, _2208));
        float _2648 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
        float _2222 = isnan(1.0) ? _2648 : (isnan(_2648) ? 1.0 : min(_2648, 1.0));
        _2171 = ((float(_92._m0 == 0u) * _2222) / (_2222 * 0.3183098733425140380859375)) + _2170;
        uint _2173 = _2172 + 1u;
        if (_2173 == 32u)
        {
            break;
        }
        else
        {
            _2170 = _2171;
            _2172 = _2173;
            continue;
        }
    }
    float _2229 = _2171 * 0.009947183541953563690185546875;
    float _2234 = dot(vec3(_1841, _1842, _1843), vec3(_1943, _1944, _1945)) * 2.0;
    vec4 _2247 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1841 - (_2234 * _1943), _1842 - (_2234 * _1944), _1843 - (_2234 * _1945)), 4.0 - (_1800 * 4.0));
    float _2252 = dot(vec3(_1960, _1961, _1962), vec3(_1943, _1944, _1945));
    float _2659 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _2262 = exp2(log2(1.0 - (isnan(1.0) ? _2659 : (isnan(_2659) ? 1.0 : min(_2659, 1.0)))) * 5.0);
    vec4 _2274 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1943, _1944, _1945), 0.0);
    float _2287 = ((((((cbMtdParam._m0[22u].x * _1861.x) * cbMtdParam._m0[32u].x) * _1882) + _1434) + _2137) + _2140) + (((_2274.x * _2001) + (((_2262 * (0.959999978542327880859375 - _2008)) + _2011) * _2247.x)) * _2229);
    float _2293 = ((((((cbMtdParam._m0[22u].y * _1861.y) * cbMtdParam._m0[32u].x) * _1882) + _1435) + _2138) + _2141) + (((_2274.y * _2002) + (((_2262 * (0.959999978542327880859375 - _2009)) + _2013) * _2247.y)) * _2229);
    float _2299 = ((((((cbMtdParam._m0[22u].z * _1861.z) * cbMtdParam._m0[32u].x) * _1882) + _1436) + _2139) + _2142) + (((_2274.z * _2003) + (((_2262 * (0.959999978542327880859375 - _2010)) + _2014) * _2247.z)) * _2229);
    float _2670 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _2681 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
    float _2692 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
    bool _2307 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2318;
    _2318.x = _2307 ? ((_703 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2670 : (isnan(_2670) ? 1.0 : min(_2670, 1.0)));
    _2318.y = _2307 ? ((_706 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2681 : (isnan(_2681) ? 1.0 : min(_2681, 1.0)));
    _2318.z = _2307 ? ((_709 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2692 : (isnan(_2692) ? 1.0 : min(_2692, 1.0)));
    payload._m0 = _2318;
}


