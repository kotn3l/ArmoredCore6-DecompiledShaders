#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _38
{
    vec3 _m0;
};

struct _42
{
    vec2 _m0;
};

struct _45
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(location = 0) rayPayloadInEXT _38 payload;
hitAttributeEXT _42 hit;
layout(location = 1) rayPayloadEXT _45 _47;
layout(location = 2) rayPayloadEXT _45 _48;

vec3 _750;

void main()
{
    uvec4 _62 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _63 = _62.y;
    uint _105;
    uint _107;
    uint _108;
    if (_62.x == 0u)
    {
        uint _71 = (_63 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _82 = uvec3(texelFetch(l_geomIndexBuffer, int(_71)).x, texelFetch(l_geomIndexBuffer, int(_71 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_71 + 2u)).x);
        _105 = _82.x;
        _107 = _82.y;
        _108 = _82.z;
    }
    else
    {
        uint _86 = uint(gl_PrimitiveID) * 6u;
        uint _88 = _86 & 4294967292u;
        uint _91 = (_63 + _88) >> 2u;
        uvec2 _98 = uvec2(texelFetch(l_geomIndexBuffer, int(_91)).x, texelFetch(l_geomIndexBuffer, int(_91 + 1u)).x);
        uint _99 = _98.x;
        uint _100 = _98.y;
        uint _102 = _99 >> 16u;
        uint _103 = _100 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_88 == _86)
        {
            frontier_phi_3_2_ladder = _99 & 65535u;
            frontier_phi_3_2_ladder_1 = _102;
            frontier_phi_3_2_ladder_2 = _103;
        }
        else
        {
            frontier_phi_3_2_ladder = _102;
            frontier_phi_3_2_ladder_1 = _103;
            frontier_phi_3_2_ladder_2 = _100 >> 16u;
        }
        _105 = frontier_phi_3_2_ladder;
        _107 = frontier_phi_3_2_ladder_1;
        _108 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _112 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _113 = _112.x;
    uint _114 = _113 * _105;
    uint _116 = _114 >> 2u;
    uvec3 _125 = uvec3(texelFetch(l_geomAttrib_0, int(_116)).x, texelFetch(l_geomAttrib_0, int(_116 + 1u)).x, texelFetch(l_geomAttrib_0, int(_116 + 2u)).x);
    bool _136 = (_112.z != 0u) || (_62.w == 0u);
    uint _137 = _114 + 12u;
    uint _160;
    uint _161;
    uint _162;
    if (_136)
    {
        uvec4 _139 = texelFetch(l_geomAttrib_0, int(_137 >> 2u));
        uint _140 = _139.x;
        _160 = _140 & 255u;
        _161 = (_140 >> 8u) & 255u;
        _162 = (_140 >> 16u) & 255u;
    }
    else
    {
        uint _148 = _137 >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomAttrib_0, int(_148)).x, texelFetch(l_geomAttrib_0, int(_148 + 1u)).x);
        uint _155 = _154.x;
        _160 = _155 & 65535u;
        _161 = _155 >> 16u;
        _162 = _154.y & 65535u;
    }
    uint _166 = _113 * _107;
    uint _167 = _166 >> 2u;
    uvec3 _176 = uvec3(texelFetch(l_geomAttrib_0, int(_167)).x, texelFetch(l_geomAttrib_0, int(_167 + 1u)).x, texelFetch(l_geomAttrib_0, int(_167 + 2u)).x);
    uint _183 = _166 + 12u;
    uint _204;
    uint _205;
    uint _206;
    if (_136)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _186 = _185.x;
        _204 = _186 & 255u;
        _205 = (_186 >> 8u) & 255u;
        _206 = (_186 >> 16u) & 255u;
    }
    else
    {
        uint _192 = _183 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
    }
    uint _210 = _113 * _108;
    uint _211 = _210 >> 2u;
    uvec3 _220 = uvec3(texelFetch(l_geomAttrib_0, int(_211)).x, texelFetch(l_geomAttrib_0, int(_211 + 1u)).x, texelFetch(l_geomAttrib_0, int(_211 + 2u)).x);
    uint _227 = _210 + 12u;
    uint _248;
    uint _249;
    uint _250;
    if (_136)
    {
        uvec4 _229 = texelFetch(l_geomAttrib_0, int(_227 >> 2u));
        uint _230 = _229.x;
        _248 = _230 & 255u;
        _249 = (_230 >> 8u) & 255u;
        _250 = (_230 >> 16u) & 255u;
    }
    else
    {
        uint _236 = _227 >> 2u;
        uvec2 _242 = uvec2(texelFetch(l_geomAttrib_0, int(_236)).x, texelFetch(l_geomAttrib_0, int(_236 + 1u)).x);
        uint _243 = _242.x;
        _248 = _243 & 65535u;
        _249 = _243 >> 16u;
        _250 = _242.y & 65535u;
    }
    float _256 = (1.0 - hit._m0.x) - hit._m0.y;
    float _269 = ((uintBitsToFloat(_176.x) * hit._m0.x) + (uintBitsToFloat(_125.x) * _256)) + (uintBitsToFloat(_220.x) * hit._m0.y);
    float _270 = ((uintBitsToFloat(_176.y) * hit._m0.x) + (uintBitsToFloat(_125.y) * _256)) + (uintBitsToFloat(_220.y) * hit._m0.y);
    float _271 = ((uintBitsToFloat(_176.z) * hit._m0.x) + (uintBitsToFloat(_125.z) * _256)) + (uintBitsToFloat(_220.z) * hit._m0.y);
    float _284 = (((float(_160) * _256) + (-127.0)) + (float(_204) * hit._m0.x)) + (float(_248) * hit._m0.y);
    float _287 = (((float(_161) * _256) + (-127.0)) + (float(_205) * hit._m0.x)) + (float(_249) * hit._m0.y);
    float _290 = (((float(_162) * _256) + (-127.0)) + (float(_206) * hit._m0.x)) + (float(_250) * hit._m0.y);
    float _291 = _284 * 0.0078740157186985015869140625;
    float _293 = _287 * 0.0078740157186985015869140625;
    float _294 = _290 * 0.0078740157186985015869140625;
    float _303 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_291, _293, _294, 0.0));
    float _308 = _303 - cbMtdParam._m0[13u].x;
    float _795 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
    float _317 = exp2(log2(exp2(log2(1.0 - (isnan(1.0) ? _795 : (isnan(_795) ? 1.0 : min(_795, 1.0))))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _806 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _325 = _303 - cbMtdParam._m0[12u].y;
    float _817 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _334 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _817 : (isnan(_817) ? 1.0 : min(_817, 1.0)))))) * cbMtdParam._m0[11u].w) * cbMtdParam._m0[12u].x);
    float _828 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _336 = (isnan(1.0) ? _828 : (isnan(_828) ? 1.0 : min(_828, 1.0))) * (isnan(1.0) ? _806 : (isnan(_806) ? 1.0 : min(_806, 1.0)));
    float _356 = inversesqrt(dot(vec3(cbMtdParam._m0[13u].yzw), vec3(cbMtdParam._m0[13u].yzw)));
    float _373 = (((_356 * cbMtdParam._m0[13u].y) - g_sceneCB._m0[4u].x) * cbMtdParam._m0[11u].x) + g_sceneCB._m0[4u].x;
    float _374 = (((_356 * cbMtdParam._m0[13u].z) - g_sceneCB._m0[4u].y) * cbMtdParam._m0[11u].x) + g_sceneCB._m0[4u].y;
    float _375 = (((_356 * cbMtdParam._m0[13u].w) - g_sceneCB._m0[4u].z) * cbMtdParam._m0[11u].x) + g_sceneCB._m0[4u].z;
    float _379 = inversesqrt(dot(vec3(_373, _374, _375), vec3(_373, _374, _375)));
    float _380 = _373 * _379;
    float _381 = _374 * _379;
    float _382 = _375 * _379;
    float _386 = inversesqrt(dot(vec3(_380, _381, _382), vec3(_380, _381, _382)));
    float _393 = inversesqrt(dot(vec3(_269, _270, _271), vec3(_269, _270, _271)));
    float _409 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_393 * _269, _393 * _270, _393 * _271, 0.0), vec4(_380 * _386, _381 * _386, _382 * _386, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _839 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _411 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
    float _417 = exp2(log2(_411 * 6.5) * 7.0);
    float _850 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _424 = exp2(log2(cbMtdParam._m0[11u].y * ((isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0))) + _411)) * cbMtdParam._m0[11u].z);
    float _861 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _425 = isnan(1.0) ? _861 : (isnan(_861) ? 1.0 : min(_861, 1.0));
    float _872 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _426 = isnan(1.0) ? _872 : (isnan(_872) ? 1.0 : min(_872, 1.0));
    float _442 = inversesqrt(dot(vec3(_291, _293, _294), vec3(_291, _293, _294)));
    float _443 = _442 * _291;
    float _444 = _442 * _293;
    float _445 = _442 * _294;
    float _467 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _468 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _469 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _473 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _474 = _473 * gl_WorldRayDirectionEXT.x;
    float _475 = _473 * gl_WorldRayDirectionEXT.y;
    float _476 = _473 * gl_WorldRayDirectionEXT.z;
    float _477 = (-0.0) - _474;
    float _479 = (-0.0) - _475;
    float _480 = (-0.0) - _476;
    float _487 = float(gl_LaunchIDEXT.x);
    float _488 = float(gl_LaunchIDEXT.y);
    float _494 = float(gl_LaunchSizeEXT.x);
    float _495 = float(gl_LaunchSizeEXT.y);
    float _509 = fract(fract(sin(dot(vec2(_487 / _494, _488 / _495), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _522 = fract(fract(sin(dot(vec2((_487 + 128.0) / _494, (_488 + 128.0) / _495), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _48._m0 = 1u;
    uvec4 _527 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _528 = _527.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _528, _527.w, _528, vec3(_467, _468, _469), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _594;
    float _595;
    float _596;
    if (_48._m0 == 0u)
    {
        float _549 = g_sceneCB._m0[4u].x - _474;
        float _550 = g_sceneCB._m0[4u].y - _475;
        float _551 = g_sceneCB._m0[4u].z - _476;
        float _555 = inversesqrt(dot(vec3(_549, _550, _551), vec3(_549, _550, _551)));
        float _559 = dot(vec3(_443, _444, _445), vec3(g_sceneCB._m0[4u].xyz));
        float _883 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
        float _562 = isnan(1.0) ? _883 : (isnan(_883) ? 1.0 : min(_883, 1.0));
        float _563 = dot(vec3(_443, _444, _445), vec3(_477, _479, _480));
        float _894 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
        float _567 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_549 * _555, _550 * _555, _551 * _555));
        float _905 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
        float _578 = (exp2(log2(1.0 - (isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _584 = (0.5 / ((_562 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _894 : (isnan(_894) ? 1.0 : min(_894, 1.0))))) * _562;
        float _916 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
        float _586 = (isnan(1.0) ? _916 : (isnan(_916) ? 1.0 : min(_916, 1.0))) * 0.31831014156341552734375;
        _594 = (_578 * g_sceneCB._m0[5u].x) * _586;
        _595 = (_578 * g_sceneCB._m0[5u].y) * _586;
        _596 = (_578 * g_sceneCB._m0[5u].z) * _586;
    }
    else
    {
        _594 = 0.0;
        _595 = 0.0;
        _596 = 0.0;
    }
    bool _598 = abs(_444) < 0.89999997615814208984375;
    float _600 = float(_598);
    float _601 = _598 ? 0.0 : 1.0;
    float _604 = (_600 * _445) - (_601 * _444);
    float _605 = _601 * _443;
    float _607 = (-0.0) - (_443 * _600);
    float _611 = inversesqrt(dot(vec3(_604, _605, _607), vec3(_604, _605, _607)));
    float _612 = _604 * _611;
    float _613 = _605 * _611;
    float _614 = _611 * _607;
    float _617 = (_613 * _445) - (_614 * _444);
    float _620 = (_614 * _443) - (_612 * _445);
    float _623 = (_612 * _444) - (_613 * _443);
    float _625;
    float _633;
    float _624 = 0.0;
    uint _626 = 0u;
    float _630;
    bool _632;
    for (;;)
    {
        _630 = (float(_626) + _509) * 0.03125;
        _632 = _626 == 0u;
        float frontier_phi_18_pred;
        if (_632)
        {
            frontier_phi_18_pred = 0.0;
        }
        else
        {
            float _755;
            float _756;
            uint _758;
            _755 = 0.0;
            _756 = 0.5;
            _758 = _626;
            float _634;
            for (;;)
            {
                _634 = ((_758 & 1u) != 0u) ? (_756 + _755) : _755;
                uint _759 = _758 >> 1u;
                if (_759 == 0u)
                {
                    break;
                }
                else
                {
                    _755 = _634;
                    _756 *= 0.5;
                    _758 = _759;
                }
            }
            frontier_phi_18_pred = _634;
        }
        _633 = frontier_phi_18_pred;
        float _635 = _633 + _522;
        float _640 = sqrt(_630);
        float _641 = ((_635 > 1.0) ? (_635 + (-1.0)) : _635) * 6.283185482025146484375;
        float _644 = cos(_641) * _640;
        float _646 = sin(_641) * _640;
        float _648 = sqrt(1.0 - _630);
        float _661 = ((_648 * _443) + (_644 * _617)) + (_646 * _612);
        float _662 = ((_648 * _444) + (_644 * _620)) + (_646 * _613);
        float _663 = ((_648 * _445) + (_644 * _623)) + (_646 * _614);
        _47._m0 = 1u;
        uvec4 _667 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _668 = _667.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _668, _667.w, _668, vec3(_467, _468, _469), 9.9999997473787516355514526367188e-05, vec3(_661, _662, _663), 10000.0, 1);
        float _674 = dot(vec3(_443, _444, _445), vec3(_661, _662, _663));
        float _927 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
        float _677 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
        _625 = ((float(_47._m0 == 0u) * _677) / (_677 * 0.3183098733425140380859375)) + _624;
        uint _627 = _626 + 1u;
        if (_627 == 32u)
        {
            break;
        }
        else
        {
            _624 = _625;
            _626 = _627;
            continue;
        }
    }
    float _686 = _625 * 0.009947183541953563690185546875;
    float _691 = dot(vec3(_474, _475, _476), vec3(_443, _444, _445)) * 2.0;
    vec4 _704 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_474 - (_691 * _443), _475 - (_691 * _444), _476 - (_691 * _445)), 4.0);
    float _709 = dot(vec3(_477, _479, _480), vec3(_443, _444, _445));
    float _938 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _718 = (exp2(log2(1.0 - (isnan(1.0) ? _938 : (isnan(_938) ? 1.0 : min(_938, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _726 = (_594 + (_336 * ((_426 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x))) + ((_704.x * _686) * _718);
    float _728 = (_595 + (_336 * ((_426 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y))) + ((_704.y * _686) * _718);
    float _730 = (_596 + (_336 * ((_426 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z))) + ((_704.z * _686) * _718);
    float _949 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _960 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _971 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    bool _738 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _749;
    _749.x = _738 ? ((_284 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _949 : (isnan(_949) ? 1.0 : min(_949, 1.0)));
    _749.y = _738 ? ((_287 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _960 : (isnan(_960) ? 1.0 : min(_960, 1.0)));
    _749.z = _738 ? ((_290 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _971 : (isnan(_971) ? 1.0 : min(_971, 1.0)));
    payload._m0 = _749;
}


