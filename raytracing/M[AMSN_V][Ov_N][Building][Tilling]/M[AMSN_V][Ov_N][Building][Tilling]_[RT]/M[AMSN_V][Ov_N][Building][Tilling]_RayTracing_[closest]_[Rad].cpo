#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_13;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

uint _251;
uint _336;
uint _421;
vec3 _1768;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _159 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _160 >> 16u;
        }
        _165 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
        _168 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    uint _228 = _179 + 4u;
    uvec4 _232 = texelFetch(l_geomAttrib_0, int((_228 + _207) >> 2u));
    uint _233 = _232.x;
    uint _242 = _207 | 8u;
    bool _243 = _174 == 0u;
    uint _244;
    if (_243)
    {
        _244 = _242;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _242 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _242 + 8u;
        }
        _244 = frontier_phi_9_10_ladder;
    }
    uint _248 = _175 ? (_244 + 4u) : _244;
    uvec2 _255 = uvec2(_251, texelFetch(l_geomAttrib_0, int(((_228 + _248) >> 2u) + 1u)).x);
    uint _256 = _255.y;
    float _260 = float(int(uint(int(_256 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_256) >> int(16u))));
    uvec4 _265 = texelFetch(l_geomAttrib_0, int(((_179 + 12u) + _248) >> 2u));
    uint _266 = _265.x;
    uint _272 = _173 * _167;
    uint _273 = _272 + 12u;
    uint _294;
    uint _295;
    uint _296;
    uint _297;
    if (_178)
    {
        uvec4 _275 = texelFetch(l_geomAttrib_0, int(_273 >> 2u));
        uint _276 = _275.x;
        _294 = _276 & 255u;
        _295 = (_276 >> 8u) & 255u;
        _296 = (_276 >> 16u) & 255u;
        _297 = 16u;
    }
    else
    {
        uint _282 = _273 >> 2u;
        uvec2 _288 = uvec2(texelFetch(l_geomAttrib_0, int(_282)).x, texelFetch(l_geomAttrib_0, int(_282 + 1u)).x);
        uint _289 = _288.x;
        _294 = _289 & 65535u;
        _295 = _289 >> 16u;
        _296 = _288.y & 65535u;
        _297 = 20u;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int((_297 + _272) >> 2u));
    uint _304 = _303.x;
    uint _315 = _272 + 4u;
    uvec4 _318 = texelFetch(l_geomAttrib_0, int((_315 + _297) >> 2u));
    uint _319 = _318.x;
    uint _328 = _297 | 8u;
    uint _329;
    if (_243)
    {
        _329 = _328;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _328 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _328 + 8u;
        }
        _329 = frontier_phi_16_17_ladder;
    }
    uint _333 = _175 ? (_329 + 4u) : _329;
    uvec2 _340 = uvec2(_336, texelFetch(l_geomAttrib_0, int(((_315 + _333) >> 2u) + 1u)).x);
    uint _341 = _340.y;
    float _345 = float(int(uint(int(_341 << 16u) >> int(16u))));
    float _346 = float(int(uint(int(_341) >> int(16u))));
    uvec4 _350 = texelFetch(l_geomAttrib_0, int(((_272 + 12u) + _333) >> 2u));
    uint _351 = _350.x;
    uint _357 = _173 * _168;
    uint _358 = _357 + 12u;
    uint _379;
    uint _380;
    uint _381;
    uint _382;
    if (_178)
    {
        uvec4 _360 = texelFetch(l_geomAttrib_0, int(_358 >> 2u));
        uint _361 = _360.x;
        _379 = _361 & 255u;
        _380 = (_361 >> 8u) & 255u;
        _381 = (_361 >> 16u) & 255u;
        _382 = 16u;
    }
    else
    {
        uint _367 = _358 >> 2u;
        uvec2 _373 = uvec2(texelFetch(l_geomAttrib_0, int(_367)).x, texelFetch(l_geomAttrib_0, int(_367 + 1u)).x);
        uint _374 = _373.x;
        _379 = _374 & 65535u;
        _380 = _374 >> 16u;
        _381 = _373.y & 65535u;
        _382 = 20u;
    }
    uvec4 _388 = texelFetch(l_geomAttrib_0, int((_382 + _357) >> 2u));
    uint _389 = _388.x;
    uint _400 = _357 + 4u;
    uvec4 _403 = texelFetch(l_geomAttrib_0, int((_400 + _382) >> 2u));
    uint _404 = _403.x;
    uint _413 = _382 | 8u;
    uint _414;
    if (_243)
    {
        _414 = _413;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _413 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _413 + 8u;
        }
        _414 = frontier_phi_23_24_ladder;
    }
    uint _418 = _175 ? (_414 + 4u) : _414;
    uvec2 _425 = uvec2(_421, texelFetch(l_geomAttrib_0, int(((_400 + _418) >> 2u) + 1u)).x);
    uint _426 = _425.y;
    float _430 = float(int(uint(int(_426 << 16u) >> int(16u))));
    float _431 = float(int(uint(int(_426) >> int(16u))));
    uvec4 _435 = texelFetch(l_geomAttrib_0, int(((_357 + 12u) + _418) >> 2u));
    uint _436 = _435.x;
    bool _443 = _124.z == 0u;
    float _479;
    float _480;
    float _481;
    if (_443)
    {
        uint _446 = _165 * 3u;
        uvec3 _455 = uvec3(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_446 + 2u)).x);
        _479 = uintBitsToFloat(_455.x);
        _480 = uintBitsToFloat(_455.y);
        _481 = uintBitsToFloat(_455.z);
    }
    else
    {
        uint _463 = _165 * 2u;
        uvec2 _469 = uvec2(texelFetch(l_geomPositionBuffer, int(_463)).x, texelFetch(l_geomPositionBuffer, int(_463 + 1u)).x);
        uint _470 = _469.x;
        _479 = unpackHalf2x16(_470).x;
        _480 = unpackHalf2x16(_470 >> 16u).x;
        _481 = unpackHalf2x16(_469.y).x;
    }
    float _517;
    float _518;
    float _519;
    if (_443)
    {
        uint _484 = _167 * 3u;
        uvec3 _493 = uvec3(texelFetch(l_geomPositionBuffer, int(_484)).x, texelFetch(l_geomPositionBuffer, int(_484 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_484 + 2u)).x);
        _517 = uintBitsToFloat(_493.x);
        _518 = uintBitsToFloat(_493.y);
        _519 = uintBitsToFloat(_493.z);
    }
    else
    {
        uint _501 = _167 * 2u;
        uvec2 _507 = uvec2(texelFetch(l_geomPositionBuffer, int(_501)).x, texelFetch(l_geomPositionBuffer, int(_501 + 1u)).x);
        uint _508 = _507.x;
        _517 = unpackHalf2x16(_508).x;
        _518 = unpackHalf2x16(_508 >> 16u).x;
        _519 = unpackHalf2x16(_507.y).x;
    }
    float _555;
    float _556;
    float _557;
    if (_443)
    {
        uint _522 = _168 * 3u;
        uvec3 _531 = uvec3(texelFetch(l_geomPositionBuffer, int(_522)).x, texelFetch(l_geomPositionBuffer, int(_522 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_522 + 2u)).x);
        _555 = uintBitsToFloat(_531.x);
        _556 = uintBitsToFloat(_531.y);
        _557 = uintBitsToFloat(_531.z);
    }
    else
    {
        uint _539 = _168 * 2u;
        uvec2 _545 = uvec2(texelFetch(l_geomPositionBuffer, int(_539)).x, texelFetch(l_geomPositionBuffer, int(_539 + 1u)).x);
        uint _546 = _545.x;
        _555 = unpackHalf2x16(_546).x;
        _556 = unpackHalf2x16(_546 >> 16u).x;
        _557 = unpackHalf2x16(_545.y).x;
    }
    float _560 = (1.0 - hit._m0.x) - hit._m0.y;
    float _609 = (((float(_351 & 255u) * hit._m0.x) + (float(_266 & 255u) * _560)) + (float(_436 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _613 = (((float((_351 >> 8u) & 255u) * hit._m0.x) + (float((_266 >> 8u) & 255u) * _560)) + (float((_436 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _616 = (_345 - _260) * 0.00048828125;
    float _618 = (_346 - _261) * 0.00048828125;
    float _621 = (_430 - _260) * 0.00048828125;
    float _622 = (_431 - _261) * 0.00048828125;
    float _644 = _517 - _479;
    float _645 = _518 - _480;
    float _646 = _519 - _481;
    float _649 = fma(_646, gl_ObjectToWorldEXT[2u].x, fma(_645, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _644));
    float _652 = fma(_646, gl_ObjectToWorldEXT[2u].y, fma(_645, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _644));
    float _655 = fma(_646, gl_ObjectToWorldEXT[2u].z, fma(_645, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _644));
    float _656 = _555 - _479;
    float _657 = _556 - _480;
    float _658 = _557 - _481;
    float _661 = fma(_658, gl_ObjectToWorldEXT[2u].x, fma(_657, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _656));
    float _664 = fma(_658, gl_ObjectToWorldEXT[2u].y, fma(_657, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _656));
    float _667 = fma(_658, gl_ObjectToWorldEXT[2u].z, fma(_657, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _656));
    float _668 = (((_345 * hit._m0.x) + (_260 * _560)) + (_430 * hit._m0.y)) * 0.00048828125;
    float _669 = (((_346 * hit._m0.x) + (_261 * _560)) + (_431 * hit._m0.y)) * 0.00048828125;
    float _673 = (((float(_204) * _560) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _676 = (((float(_205) * _560) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _679 = (((float(_206) * _560) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _680 = _673 * 0.0078740157186985015869140625;
    float _682 = _676 * 0.0078740157186985015869140625;
    float _683 = _679 * 0.0078740157186985015869140625;
    float _696 = ((((float(_216 & 255u) * _560) + (-127.0)) + (float(_304 & 255u) * hit._m0.x)) + (float(_389 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((((float((_216 >> 8u) & 255u) * _560) + (-127.0)) + (float((_304 >> 8u) & 255u) * hit._m0.x)) + (float((_389 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((((float((_216 >> 16u) & 255u) * _560) + (-127.0)) + (float((_304 >> 16u) & 255u) * hit._m0.x)) + (float((_389 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _699 = ((((float(_216 >> 24u) * _560) + (-127.0)) + (float(_304 >> 24u) * hit._m0.x)) + (float(_389 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _709 = ((((float(_233 & 255u) * _560) + (-127.0)) + (float(_319 & 255u) * hit._m0.x)) + (float(_404 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _710 = ((((float((_233 >> 8u) & 255u) * _560) + (-127.0)) + (float((_319 >> 8u) & 255u) * hit._m0.x)) + (float((_404 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _711 = ((((float((_233 >> 16u) & 255u) * _560) + (-127.0)) + (float((_319 >> 16u) & 255u) * hit._m0.x)) + (float((_404 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _721 = ((_697 * _683) - (_698 * _682)) * _699;
    float _722 = ((_698 * _680) - (_696 * _683)) * _699;
    float _723 = ((_696 * _682) - (_697 * _680)) * _699;
    float _727 = inversesqrt(dot(vec3(_721, _722, _723), vec3(_721, _722, _723)));
    float _728 = _727 * _721;
    float _729 = _727 * _722;
    float _730 = _727 * _723;
    uvec2 _745 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_3, int(0u)));
    bool _750 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _803;
    if (_750)
    {
        float _761 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _767 = (_667 * _652) - (_664 * _655);
        float _770 = (_661 * _655) - (_667 * _649);
        float _773 = (_664 * _649) - (_661 * _652);
        float _800 = ((log2((((float(_745.y) * 0.5) * float(_745.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_770 * _770) + (_773 * _773)) + (_767 * _767)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_761 * gl_WorldRayDirectionEXT.x, _761 * gl_WorldRayDirectionEXT.y, _761 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _803 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    }
    else
    {
        _803 = 0.0;
    }
    float _810 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _668) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _669) + cbTextureTilingScale._m0[3u].w), _803).x * cbMtdParam._m0[12u].y;
    float _822 = ((cbMtdParam._m0[13u].y * (-1.39999997615814208984375)) * ((_613 - _810) + (cbMtdParam._m0[12u].w * _613))) + 1.0;
    float _1857 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _824 = 1.0 - (isnan(1.0) ? _1857 : (isnan(_1857) ? 1.0 : min(_1857, 1.0)));
    float _825 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _826 = isnan(1.0) ? _825 : (isnan(_825) ? 1.0 : min(_825, 1.0));
    float _834 = ((cbMtdParam._m0[13u].x * (-1.39999997615814208984375)) * ((_609 - _810) + (cbMtdParam._m0[12u].z * _609))) + 1.0;
    float _1878 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _836 = 1.0 - (isnan(1.0) ? _1878 : (isnan(_1878) ? 1.0 : min(_1878, 1.0)));
    float _837 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _838 = isnan(1.0) ? _837 : (isnan(_837) ? 1.0 : min(_837, 1.0));
    uvec2 _856 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_13, int(0u)));
    float _907;
    if (_750)
    {
        float _867 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _873 = (_667 * _652) - (_664 * _655);
        float _876 = (_661 * _655) - (_667 * _649);
        float _879 = (_664 * _649) - (_661 * _652);
        float _905 = ((log2((((float(_856.y) * 0.5) * float(_856.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_876 * _876) + (_879 * _879)) + (_873 * _873)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_867 * gl_WorldRayDirectionEXT.x, _867 * gl_WorldRayDirectionEXT.y, _867 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _907 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    }
    else
    {
        _907 = 0.0;
    }
    vec4 _910 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _668) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _669) + cbTextureTilingScale._m0[1u].w), _907);
    float _912 = _910.x;
    float _913 = _910.y;
    float _914 = _910.z;
    float _915 = cbMtdParam._m0[11u].x * _838;
    float _917 = cbMtdParam._m0[11u].y * _838;
    float _919 = cbMtdParam._m0[11u].z * _838;
    float _939 = _836 + _824;
    float _940 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _941 = isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0));
    uvec2 _959 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_1, int(0u)));
    float _1010;
    if (_750)
    {
        float _970 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _976 = (_667 * _652) - (_664 * _655);
        float _979 = (_661 * _655) - (_667 * _649);
        float _982 = (_664 * _649) - (_661 * _652);
        float _1008 = ((log2((((float(_959.y) * 0.5) * float(_959.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_979 * _979) + (_982 * _982)) + (_976 * _976)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_970 * gl_WorldRayDirectionEXT.x, _970 * gl_WorldRayDirectionEXT.y, _970 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1010 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    }
    else
    {
        _1010 = 0.0;
    }
    vec4 _1012 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _668) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _669) + cbTextureTilingScale._m0[0u].w), _1010);
    float _1017 = _1012.x * cbMtdParam._m0[10u].x;
    float _1018 = _1012.y * cbMtdParam._m0[10u].y;
    float _1019 = _1012.z * cbMtdParam._m0[10u].z;
    float _1036 = (_1017 - (_941 * _1017)) + ((((((_912 * (cbMtdParam._m0[9u].x - _915)) * _826) + (_915 * _912)) * 4.55000019073486328125) * _941) * _1017);
    float _1037 = (_1018 - (_941 * _1018)) + ((((((_913 * (cbMtdParam._m0[9u].y - _917)) * _826) + (_917 * _913)) * 4.55000019073486328125) * _941) * _1018);
    float _1038 = (_1019 - (_941 * _1019)) + ((((((_914 * (cbMtdParam._m0[9u].z - _919)) * _826) + (_919 * _914)) * 4.55000019073486328125) * _941) * _1019);
    uvec2 _1054 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_5, int(0u)));
    float _1105;
    if (_750)
    {
        float _1065 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1071 = (_667 * _652) - (_664 * _655);
        float _1074 = (_661 * _655) - (_667 * _649);
        float _1077 = (_664 * _649) - (_661 * _652);
        float _1103 = ((log2((((float(_1054.y) * 0.5) * float(_1054.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1074 * _1074) + (_1077 * _1077)) + (_1071 * _1071)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1065 * gl_WorldRayDirectionEXT.x, _1065 * gl_WorldRayDirectionEXT.y, _1065 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1105 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    }
    else
    {
        _1105 = 0.0;
    }
    vec4 _1108 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _668) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _669) + cbTextureTilingScale._m0[4u].w), _1105);
    float _1112 = _1108.z;
    float _1115 = (_1108.x * 2.0) + (-1.0);
    float _1117 = (_1108.y * 2.0) + (-1.0);
    float _1118 = dot(vec2(_1115, _1117), vec2(_1115, _1117));
    float _1924 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    float _1123 = sqrt(1.0 - (isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0))));
    float _1125 = fma(_1123, _680, fma(_1117, _709, 0.0));
    float _1127 = fma(_1123, _682, fma(_1117, _710, 0.0));
    float _1129 = fma(_1123, _683, fma(_1117, _711, 0.0));
    float _1133 = inversesqrt(dot(vec3(_1125, _1127, _1129), vec3(_1125, _1127, _1129)));
    float _1134 = _1133 * _1125;
    float _1135 = _1133 * _1127;
    float _1136 = _1133 * _1129;
    uvec2 _1148 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_2, int(0u)));
    float _1199;
    if (_750)
    {
        float _1159 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1165 = (_667 * _652) - (_664 * _655);
        float _1168 = (_661 * _655) - (_667 * _649);
        float _1171 = (_664 * _649) - (_661 * _652);
        float _1197 = ((log2((((float(_1148.y) * 0.5) * float(_1148.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1168 * _1168) + (_1171 * _1171)) + (_1165 * _1165)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1159 * gl_WorldRayDirectionEXT.x, _1159 * gl_WorldRayDirectionEXT.y, _1159 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1199 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    }
    else
    {
        _1199 = 0.0;
    }
    vec4 _1201 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _668) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _669) + cbTextureTilingScale._m0[2u].w), _1199);
    float _1207 = (_1201.x * 2.0) + (-1.0);
    float _1208 = (_1201.y * 2.0) + (-1.0);
    float _1209 = dot(vec2(_1207, _1208), vec2(_1207, _1208));
    float _1940 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _1214 = sqrt(1.0 - (isnan(1.0) ? _1940 : (isnan(_1940) ? 1.0 : min(_1940, 1.0))));
    float _1216 = fma(_1214, _680, fma(_1208, _709, 0.0));
    float _1218 = fma(_1214, _682, fma(_1208, _710, 0.0));
    float _1220 = fma(_1214, _683, fma(_1208, _711, 0.0));
    float _1224 = inversesqrt(dot(vec3(_1216, _1218, _1220), vec3(_1216, _1218, _1220)));
    float _1225 = _1224 * _1216;
    float _1226 = _1224 * _1218;
    float _1227 = _1224 * _1220;
    float _1230 = fma(_1227, _730, fma(_1226, _729, _1225 * _728));
    float _1233 = fma(_1227, _698, fma(_1226, _697, _1225 * _696));
    float _1236 = fma(_1227, _683, fma(_1226, _682, _1225 * _680));
    float _1240 = inversesqrt(dot(vec3(_1230, _1233, _1236), vec3(_1230, _1233, _1236)));
    float _1244 = fma(_1136, _730, fma(_1135, _729, _1134 * _728));
    float _1247 = fma(_1136, _698, fma(_1135, _697, _1134 * _696));
    float _1250 = fma(_1136, _683, fma(_1135, _682, _1134 * _680));
    float _1254 = inversesqrt(dot(vec3(_1244, _1247, _1250), vec3(_1244, _1247, _1250)));
    float _1257 = _1254 * _1250;
    uvec2 _1270 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_7, int(0u)));
    float _1274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1275 = _1274 * gl_WorldRayDirectionEXT.x;
    float _1276 = _1274 * gl_WorldRayDirectionEXT.y;
    float _1277 = _1274 * gl_WorldRayDirectionEXT.z;
    float _1321;
    if (_750)
    {
        float _1287 = (_667 * _652) - (_664 * _655);
        float _1290 = (_661 * _655) - (_667 * _649);
        float _1293 = (_664 * _649) - (_661 * _652);
        float _1319 = ((log2((((float(_1270.y) * 0.5) * float(_1270.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1290 * _1290) + (_1293 * _1293)) + (_1287 * _1287)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1275, _1276, _1277), vec3(_680, _682, _683))));
        _1321 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
    }
    else
    {
        _1321 = 0.0;
    }
    vec4 _1323 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Tilling_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _668) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _669) + cbTextureTilingScale._m0[5u].w), _1321);
    float _1329 = (_1323.x * 2.0) + (-1.0);
    float _1330 = (_1323.y * 2.0) + (-1.0);
    float _1331 = dot(vec2(_1329, _1330), vec2(_1329, _1330));
    float _1956 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
    float _1336 = sqrt(1.0 - (isnan(1.0) ? _1956 : (isnan(_1956) ? 1.0 : min(_1956, 1.0))));
    float _1338 = fma(_1336, _680, fma(_1330, _709, 0.0));
    float _1340 = fma(_1336, _682, fma(_1330, _710, 0.0));
    float _1342 = fma(_1336, _683, fma(_1330, _711, 0.0));
    float _1346 = inversesqrt(dot(vec3(_1338, _1340, _1342), vec3(_1338, _1340, _1342)));
    float _1347 = _1346 * _1338;
    float _1348 = _1346 * _1340;
    float _1349 = _1346 * _1342;
    float _1352 = fma(_1349, _730, fma(_1348, _729, _1347 * _728));
    float _1355 = fma(_1349, _698, fma(_1348, _697, _1347 * _696));
    float _1358 = fma(_1349, _683, fma(_1348, _682, _1347 * _680));
    float _1362 = inversesqrt(dot(vec3(_1352, _1355, _1358), vec3(_1352, _1355, _1358)));
    float _1377 = ((_1254 * _1244) + (((_1230 * _826) * _1240) * cbMtdParam._m0[13u].w)) + (((_1352 * _838) * _1362) * cbMtdParam._m0[13u].z);
    float _1379 = ((_1254 * _1247) + (((_1233 * _826) * _1240) * cbMtdParam._m0[13u].w)) + (((_1355 * _838) * _1362) * cbMtdParam._m0[13u].z);
    float _1382 = fma(_1257, _680, fma(_1379, _696, _1377 * _728));
    float _1385 = fma(_1257, _682, fma(_1379, _697, _1377 * _729));
    float _1388 = fma(_1257, _683, fma(_1379, _698, _1377 * _730));
    float _1392 = inversesqrt(dot(vec3(_1382, _1385, _1388), vec3(_1382, _1385, _1388)));
    float _1393 = _1392 * _1382;
    float _1394 = _1392 * _1385;
    float _1395 = _1392 * _1388;
    float _1407 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1408 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1409 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1410 = (-0.0) - _1275;
    float _1412 = (-0.0) - _1276;
    float _1413 = (-0.0) - _1277;
    float _1419 = float(gl_LaunchIDEXT.x);
    float _1420 = float(gl_LaunchIDEXT.y);
    float _1423 = float(gl_LaunchSizeEXT.x);
    float _1437 = fract(fract(sin(dot(vec2(_1419 / _1423, _1420 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1450 = fract(fract(sin(dot(vec2((_1419 + 128.0) / _1423, (_1420 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1451 = 1.0 - cbMtdParam._m0[14u].x;
    float _1452 = _1451 * _1036;
    float _1453 = _1451 * _1037;
    float _1454 = _1038 * _1451;
    float _1459 = cbMtdParam._m0[14u].x * (_1036 + (-0.039999999105930328369140625));
    float _1460 = (_1037 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1461 = (_1038 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1462 = _1459 + 0.039999999105930328369140625;
    float _1464 = _1460 + 0.039999999105930328369140625;
    float _1465 = _1461 + 0.039999999105930328369140625;
    _66._m0 = 1u;
    uvec4 _1475 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1476 = _1475.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1476, _1475.w, _1476, vec3(_1407, _1408, _1409), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    if (_66._m0 == 0u)
    {
        float _1496 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1393, _1394, _1395));
        float _1967 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1499 = isnan(1.0) ? _1967 : (isnan(_1967) ? 1.0 : min(_1967, 1.0));
        float _1518 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1112) * 0.949999988079071044921875);
        float _1519 = _1518 * _1518;
        float _1520 = g_sceneCB._m0[4u].x - _1275;
        float _1521 = g_sceneCB._m0[4u].y - _1276;
        float _1522 = g_sceneCB._m0[4u].z - _1277;
        float _1526 = inversesqrt(dot(vec3(_1520, _1521, _1522), vec3(_1520, _1521, _1522)));
        float _1527 = _1526 * _1520;
        float _1528 = _1526 * _1521;
        float _1529 = _1526 * _1522;
        float _1530 = dot(vec3(_1393, _1394, _1395), vec3(g_sceneCB._m0[4u].xyz));
        float _1978 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1533 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
        float _1534 = dot(vec3(_1393, _1394, _1395), vec3(_1410, _1412, _1413));
        float _1989 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1537 = isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0));
        float _1538 = dot(vec3(_1393, _1394, _1395), vec3(_1527, _1528, _1529));
        float _2000 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1541 = isnan(1.0) ? _2000 : (isnan(_2000) ? 1.0 : min(_2000, 1.0));
        float _1542 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1527, _1528, _1529));
        float _2011 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1546 = _1519 * _1519;
        float _1550 = ((_1541 * _1541) * (_1546 + (-1.0))) + 1.0;
        float _1559 = exp2(log2(1.0 - (isnan(1.0) ? _2011 : (isnan(_2011) ? 1.0 : min(_2011, 1.0)))) * 5.0);
        float _1570 = 1.0 - _1519;
        float _1581 = (0.5 / (((_1537 * ((_1533 * _1570) + _1519)) + 9.9999999392252902907785028219223e-09) + (((_1537 * _1570) + _1519) * _1533))) * _1533;
        float _2022 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
        float _1583 = (isnan(1.0) ? _2022 : (isnan(_2022) ? 1.0 : min(_2022, 1.0))) * (_1546 / ((_1550 * _1550) * 3.141590118408203125));
        _1590 = ((_1452 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1499;
        _1591 = ((_1453 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1499;
        _1592 = ((_1454 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1499;
        _1593 = (((_1559 * (0.959999978542327880859375 - _1459)) + _1462) * g_sceneCB._m0[5u].x) * _1583;
        _1594 = (((_1559 * (0.959999978542327880859375 - _1460)) + _1464) * g_sceneCB._m0[5u].y) * _1583;
        _1595 = (((_1559 * (0.959999978542327880859375 - _1461)) + _1465) * g_sceneCB._m0[5u].z) * _1583;
    }
    else
    {
        _1590 = 0.0;
        _1591 = 0.0;
        _1592 = 0.0;
        _1593 = 0.0;
        _1594 = 0.0;
        _1595 = 0.0;
    }
    bool _1597 = abs(_1394) < 0.89999997615814208984375;
    float _1599 = float(_1597);
    float _1600 = _1597 ? 0.0 : 1.0;
    float _1603 = (_1599 * _1395) - (_1600 * _1394);
    float _1604 = _1600 * _1393;
    float _1606 = (-0.0) - (_1393 * _1599);
    float _1610 = inversesqrt(dot(vec3(_1603, _1604, _1606), vec3(_1603, _1604, _1606)));
    float _1611 = _1603 * _1610;
    float _1612 = _1604 * _1610;
    float _1613 = _1610 * _1606;
    float _1616 = (_1612 * _1395) - (_1613 * _1394);
    float _1619 = (_1613 * _1393) - (_1611 * _1395);
    float _1622 = (_1611 * _1394) - (_1612 * _1393);
    float _1624;
    float _1632;
    float _1623 = 0.0;
    uint _1625 = 0u;
    float _1629;
    bool _1631;
    for (;;)
    {
        _1629 = (float(_1625) + _1437) * 0.03125;
        _1631 = _1625 == 0u;
        float frontier_phi_51_pred;
        if (_1631)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1773;
            float _1774;
            uint _1776;
            _1773 = 0.0;
            _1774 = 0.5;
            _1776 = _1625;
            float _1633;
            for (;;)
            {
                _1633 = ((_1776 & 1u) != 0u) ? (_1774 + _1773) : _1773;
                uint _1777 = _1776 >> 1u;
                if (_1777 == 0u)
                {
                    break;
                }
                else
                {
                    _1773 = _1633;
                    _1774 *= 0.5;
                    _1776 = _1777;
                }
            }
            frontier_phi_51_pred = _1633;
        }
        _1632 = frontier_phi_51_pred;
        float _1634 = _1632 + _1450;
        float _1638 = sqrt(_1629);
        float _1639 = ((_1634 > 1.0) ? (_1634 + (-1.0)) : _1634) * 6.283185482025146484375;
        float _1642 = cos(_1639) * _1638;
        float _1644 = sin(_1639) * _1638;
        float _1646 = sqrt(1.0 - _1629);
        float _1659 = ((_1646 * _1393) + (_1642 * _1616)) + (_1644 * _1611);
        float _1660 = ((_1646 * _1394) + (_1642 * _1619)) + (_1644 * _1612);
        float _1661 = ((_1646 * _1395) + (_1642 * _1622)) + (_1644 * _1613);
        _65._m0 = 1u;
        uvec4 _1665 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1666 = _1665.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1666, _1665.w, _1666, vec3(_1407, _1408, _1409), 9.9999997473787516355514526367188e-05, vec3(_1659, _1660, _1661), 10000.0, 1);
        float _1672 = dot(vec3(_1393, _1394, _1395), vec3(_1659, _1660, _1661));
        float _2033 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1675 = isnan(1.0) ? _2033 : (isnan(_2033) ? 1.0 : min(_2033, 1.0));
        _1624 = ((float(_65._m0 == 0u) * _1675) / (_1675 * 0.3183098733425140380859375)) + _1623;
        uint _1626 = _1625 + 1u;
        if (_1626 == 32u)
        {
            break;
        }
        else
        {
            _1623 = _1624;
            _1625 = _1626;
            continue;
        }
    }
    float _1683 = _1624 * 0.009947183541953563690185546875;
    float _1688 = dot(vec3(_1275, _1276, _1277), vec3(_1393, _1394, _1395)) * 2.0;
    vec4 _1702 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1275 - (_1688 * _1393), _1276 - (_1688 * _1394), _1277 - (_1688 * _1395)), 4.0 - (_1112 * 4.0));
    float _1707 = dot(vec3(_1410, _1412, _1413), vec3(_1393, _1394, _1395));
    float _2044 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
    float _1717 = exp2(log2(1.0 - (isnan(1.0) ? _2044 : (isnan(_2044) ? 1.0 : min(_2044, 1.0)))) * 5.0);
    vec4 _1729 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1393, _1394, _1395), 0.0);
    float _1740 = (_1593 + _1590) + (((_1729.x * _1452) + (((_1717 * (0.959999978542327880859375 - _1459)) + _1462) * _1702.x)) * _1683);
    float _1744 = (_1594 + _1591) + (((_1729.y * _1453) + (((_1717 * (0.959999978542327880859375 - _1460)) + _1464) * _1702.y)) * _1683);
    float _1748 = (_1595 + _1592) + (((_1729.z * _1454) + (((_1717 * (0.959999978542327880859375 - _1461)) + _1465) * _1702.z)) * _1683);
    float _2055 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
    float _2066 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
    float _2077 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
    bool _1756 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1767;
    _1767.x = _1756 ? ((_673 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2055 : (isnan(_2055) ? 1.0 : min(_2055, 1.0)));
    _1767.y = _1756 ? ((_676 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2066 : (isnan(_2066) ? 1.0 : min(_2066, 1.0)));
    _1767.z = _1756 ? ((_679 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0)));
    payload._m0 = _1767;
}


