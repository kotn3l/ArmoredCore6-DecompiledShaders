#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1413;

void main()
{
    float _73 = float(gl_LaunchSizeEXT.y);
    float _103 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _112 = sqrt(((_104 * _104) + (_103 * _103)) + (_105 * _105)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _73)))));
    uvec4 _123 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _124 = _123.y;
    uint _164;
    uint _166;
    uint _167;
    if (_123.x == 0u)
    {
        uint _132 = (_124 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _141 = uvec3(texelFetch(l_geomIndexBuffer, int(_132)).x, texelFetch(l_geomIndexBuffer, int(_132 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_132 + 2u)).x);
        _164 = _141.x;
        _166 = _141.y;
        _167 = _141.z;
    }
    else
    {
        uint _145 = uint(gl_PrimitiveID) * 6u;
        uint _147 = _145 & 4294967292u;
        uint _150 = (_124 + _147) >> 2u;
        uvec2 _157 = uvec2(texelFetch(l_geomIndexBuffer, int(_150)).x, texelFetch(l_geomIndexBuffer, int(_150 + 1u)).x);
        uint _158 = _157.x;
        uint _159 = _157.y;
        uint _161 = _158 >> 16u;
        uint _162 = _159 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_147 == _145)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _158 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _159 >> 16u;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _161;
        }
        _164 = frontier_phi_3_2_ladder_2;
        _166 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
    }
    uvec4 _171 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _172 = _171.x;
    uint _173 = _171.z;
    bool _174 = _173 != 0u;
    uint _175 = _123.w;
    bool _177 = _174 || (_175 == 0u);
    uint _178 = _172 * _164;
    uint _179 = _178 + 12u;
    uint _203;
    uint _204;
    uint _205;
    uint _206;
    if (_177)
    {
        uvec4 _182 = texelFetch(l_geomAttrib_0, int(_179 >> 2u));
        uint _183 = _182.x;
        _203 = _183 & 255u;
        _204 = (_183 >> 8u) & 255u;
        _205 = (_183 >> 16u) & 255u;
        _206 = 16u;
    }
    else
    {
        uint _191 = _179 >> 2u;
        uvec2 _197 = uvec2(texelFetch(l_geomAttrib_0, int(_191)).x, texelFetch(l_geomAttrib_0, int(_191 + 1u)).x);
        uint _198 = _197.x;
        _203 = _198 & 65535u;
        _204 = _198 >> 16u;
        _205 = _197.y & 65535u;
        _206 = 20u;
    }
    uvec4 _214 = texelFetch(l_geomAttrib_0, int((_206 + _178) >> 2u));
    uint _215 = _214.x;
    uint _227 = _171.y;
    bool _228 = _173 == 0u;
    uint _231 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _240 = texelFetch(l_geomAttrib_1, int((((_227 * _164) + 4u) + (_174 ? (_231 + 4u) : _231)) >> 2u));
    uint _241 = _240.x;
    float _245 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_241) >> int(16u))));
    uint _247 = _172 * _166;
    uint _248 = _247 + 12u;
    uint _269;
    uint _270;
    uint _271;
    uint _272;
    if (_177)
    {
        uvec4 _250 = texelFetch(l_geomAttrib_0, int(_248 >> 2u));
        uint _251 = _250.x;
        _269 = _251 & 255u;
        _270 = (_251 >> 8u) & 255u;
        _271 = (_251 >> 16u) & 255u;
        _272 = 16u;
    }
    else
    {
        uint _257 = _248 >> 2u;
        uvec2 _263 = uvec2(texelFetch(l_geomAttrib_0, int(_257)).x, texelFetch(l_geomAttrib_0, int(_257 + 1u)).x);
        uint _264 = _263.x;
        _269 = _264 & 65535u;
        _270 = _264 >> 16u;
        _271 = _263.y & 65535u;
        _272 = 20u;
    }
    uvec4 _278 = texelFetch(l_geomAttrib_0, int((_272 + _247) >> 2u));
    uint _279 = _278.x;
    uint _292 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _299 = texelFetch(l_geomAttrib_1, int((((_227 * _166) + 4u) + (_174 ? (_292 + 4u) : _292)) >> 2u));
    uint _300 = _299.x;
    float _304 = float(int(uint(int(_300 << 16u) >> int(16u))));
    float _305 = float(int(uint(int(_300) >> int(16u))));
    uint _306 = _172 * _167;
    uint _307 = _306 + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_177)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 16u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 20u;
    }
    uvec4 _337 = texelFetch(l_geomAttrib_0, int((_331 + _306) >> 2u));
    uint _338 = _337.x;
    uint _351 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _358 = texelFetch(l_geomAttrib_1, int((((_227 * _167) + 4u) + (_174 ? (_351 + 4u) : _351)) >> 2u));
    uint _359 = _358.x;
    float _363 = float(int(uint(int(_359 << 16u) >> int(16u))));
    float _364 = float(int(uint(int(_359) >> int(16u))));
    bool _366 = _123.z == 0u;
    float _402;
    float _403;
    float _404;
    if (_366)
    {
        uint _369 = _164 * 3u;
        uvec3 _378 = uvec3(texelFetch(l_geomPositionBuffer, int(_369)).x, texelFetch(l_geomPositionBuffer, int(_369 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_369 + 2u)).x);
        _402 = uintBitsToFloat(_378.x);
        _403 = uintBitsToFloat(_378.y);
        _404 = uintBitsToFloat(_378.z);
    }
    else
    {
        uint _386 = _164 * 2u;
        uvec2 _392 = uvec2(texelFetch(l_geomPositionBuffer, int(_386)).x, texelFetch(l_geomPositionBuffer, int(_386 + 1u)).x);
        uint _393 = _392.x;
        _402 = unpackHalf2x16(_393).x;
        _403 = unpackHalf2x16(_393 >> 16u).x;
        _404 = unpackHalf2x16(_392.y).x;
    }
    float _440;
    float _441;
    float _442;
    if (_366)
    {
        uint _407 = _166 * 3u;
        uvec3 _416 = uvec3(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_407 + 2u)).x);
        _440 = uintBitsToFloat(_416.x);
        _441 = uintBitsToFloat(_416.y);
        _442 = uintBitsToFloat(_416.z);
    }
    else
    {
        uint _424 = _166 * 2u;
        uvec2 _430 = uvec2(texelFetch(l_geomPositionBuffer, int(_424)).x, texelFetch(l_geomPositionBuffer, int(_424 + 1u)).x);
        uint _431 = _430.x;
        _440 = unpackHalf2x16(_431).x;
        _441 = unpackHalf2x16(_431 >> 16u).x;
        _442 = unpackHalf2x16(_430.y).x;
    }
    float _478;
    float _479;
    float _480;
    if (_366)
    {
        uint _445 = _167 * 3u;
        uvec3 _454 = uvec3(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_445 + 2u)).x);
        _478 = uintBitsToFloat(_454.x);
        _479 = uintBitsToFloat(_454.y);
        _480 = uintBitsToFloat(_454.z);
    }
    else
    {
        uint _462 = _167 * 2u;
        uvec2 _468 = uvec2(texelFetch(l_geomPositionBuffer, int(_462)).x, texelFetch(l_geomPositionBuffer, int(_462 + 1u)).x);
        uint _469 = _468.x;
        _478 = unpackHalf2x16(_469).x;
        _479 = unpackHalf2x16(_469 >> 16u).x;
        _480 = unpackHalf2x16(_468.y).x;
    }
    float _483 = (1.0 - hit._m0.x) - hit._m0.y;
    float _517 = (_304 - _245) * 0.00048828125;
    float _519 = (_305 - _246) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _523 = (_364 - _246) * 0.00048828125;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _547 = _442 - _404;
    float _550 = fma(_547, gl_ObjectToWorldEXT[2u].x, fma(_546, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _545));
    float _553 = fma(_547, gl_ObjectToWorldEXT[2u].y, fma(_546, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _545));
    float _556 = fma(_547, gl_ObjectToWorldEXT[2u].z, fma(_546, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _545));
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _559 = _480 - _404;
    float _562 = fma(_559, gl_ObjectToWorldEXT[2u].x, fma(_558, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _557));
    float _565 = fma(_559, gl_ObjectToWorldEXT[2u].y, fma(_558, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _557));
    float _568 = fma(_559, gl_ObjectToWorldEXT[2u].z, fma(_558, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _557));
    float _569 = (((_304 * hit._m0.x) + (_245 * _483)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _570 = (((_305 * hit._m0.x) + (_246 * _483)) + (_364 * hit._m0.y)) * 0.00048828125;
    float _574 = (((float(_203) * _483) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _577 = (((float(_204) * _483) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = (((float(_205) * _483) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _581 = _574 * 0.0078740157186985015869140625;
    float _583 = _577 * 0.0078740157186985015869140625;
    float _584 = _580 * 0.0078740157186985015869140625;
    float _597 = ((((float(_215 & 255u) * _483) + (-127.0)) + (float(_279 & 255u) * hit._m0.x)) + (float(_338 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_215 >> 8u) & 255u) * _483) + (-127.0)) + (float((_279 >> 8u) & 255u) * hit._m0.x)) + (float((_338 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float((_215 >> 16u) & 255u) * _483) + (-127.0)) + (float((_279 >> 16u) & 255u) * hit._m0.x)) + (float((_338 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float(_215 >> 24u) * _483) + (-127.0)) + (float(_279 >> 24u) * hit._m0.x)) + (float(_338 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((_598 * _584) - (_599 * _583)) * _600;
    float _611 = ((_599 * _581) - (_597 * _584)) * _600;
    float _612 = ((_597 * _583) - (_598 * _581)) * _600;
    float _616 = inversesqrt(dot(vec3(_610, _611, _612), vec3(_610, _611, _612)));
    uvec2 _631 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_0, int(0u)));
    bool _636 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _689;
    if (_636)
    {
        float _647 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _653 = (_568 * _553) - (_565 * _556);
        float _656 = (_562 * _556) - (_568 * _550);
        float _659 = (_565 * _550) - (_562 * _553);
        float _686 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_656 * _656) + (_659 * _659)) + (_653 * _653)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_647 * gl_WorldRayDirectionEXT.x, _647 * gl_WorldRayDirectionEXT.y, _647 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _689 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    }
    else
    {
        _689 = 0.0;
    }
    vec4 _693 = textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _569) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _570) + cbTextureTilingScale._m0[2u].w), _689);
    uvec2 _709 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_1, int(0u)));
    float _760;
    if (_636)
    {
        float _720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _726 = (_568 * _553) - (_565 * _556);
        float _729 = (_562 * _556) - (_568 * _550);
        float _732 = (_565 * _550) - (_562 * _553);
        float _758 = ((log2((((float(_709.y) * 0.5) * float(_709.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_729 * _729) + (_732 * _732)) + (_726 * _726)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_720 * gl_WorldRayDirectionEXT.x, _720 * gl_WorldRayDirectionEXT.y, _720 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _760 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    }
    else
    {
        _760 = 0.0;
    }
    vec4 _763 = textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _569) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _570) + cbTextureTilingScale._m0[0u].w), _760);
    uvec2 _785 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_7, int(0u)));
    float _836;
    if (_636)
    {
        float _796 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _802 = (_568 * _553) - (_565 * _556);
        float _805 = (_562 * _556) - (_568 * _550);
        float _808 = (_565 * _550) - (_562 * _553);
        float _834 = ((log2((((float(_785.y) * 0.5) * float(_785.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_805 * _805) + (_808 * _808)) + (_802 * _802)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_796 * gl_WorldRayDirectionEXT.x, _796 * gl_WorldRayDirectionEXT.y, _796 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _836 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    }
    else
    {
        _836 = 0.0;
    }
    vec4 _838 = textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _569) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _570) + cbTextureTilingScale._m0[1u].w), _836);
    float _846 = ((_763.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _838.x;
    float _849 = ((_763.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _838.y;
    float _852 = ((_763.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _838.z;
    uvec2 _864 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_3, int(0u)));
    float _915;
    if (_636)
    {
        float _875 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _881 = (_568 * _553) - (_565 * _556);
        float _884 = (_562 * _556) - (_568 * _550);
        float _887 = (_565 * _550) - (_562 * _553);
        float _913 = ((log2((((float(_864.y) * 0.5) * float(_864.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_884 * _884) + (_887 * _887)) + (_881 * _881)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_875 * gl_WorldRayDirectionEXT.x, _875 * gl_WorldRayDirectionEXT.y, _875 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _915 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    }
    else
    {
        _915 = 0.0;
    }
    float _925 = cbMtdParam._m0[14u].z + textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _569) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _570) + cbTextureTilingScale._m0[6u].w), _915).x;
    uvec2 _937 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_6, int(0u)));
    float _941 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _942 = _941 * gl_WorldRayDirectionEXT.x;
    float _943 = _941 * gl_WorldRayDirectionEXT.y;
    float _944 = _941 * gl_WorldRayDirectionEXT.z;
    float _988;
    if (_636)
    {
        float _954 = (_568 * _553) - (_565 * _556);
        float _957 = (_562 * _556) - (_568 * _550);
        float _960 = (_565 * _550) - (_562 * _553);
        float _986 = ((log2((((float(_937.y) * 0.5) * float(_937.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_957 * _957) + (_960 * _960)) + (_954 * _954)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_942, _943, _944), vec3(_581, _583, _584))));
        _988 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    }
    else
    {
        _988 = 0.0;
    }
    vec4 _990 = textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _569) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _570) + cbTextureTilingScale._m0[9u].w), _988);
    float _1000 = (cbMtdParam._m0[13u].x + _990.z) * _693.z;
    float _1004 = (_693.x * 2.0) + (-1.0);
    float _1006 = (_693.y * 2.0) + (-1.0);
    float _1007 = dot(vec2(_1004, _1006), vec2(_1004, _1006));
    float _1502 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
    float _1012 = sqrt(1.0 - (isnan(1.0) ? _1502 : (isnan(_1502) ? 1.0 : min(_1502, 1.0))));
    float _1019 = (((_990.x * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _1004;
    float _1020 = (((_990.y * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _1006;
    float _1023 = fma(_1012, _581, fma(_1020, _597, (_616 * _610) * _1019));
    float _1026 = fma(_1012, _583, fma(_1020, _598, (_616 * _611) * _1019));
    float _1029 = fma(_1012, _584, fma(_1020, _599, (_616 * _612) * _1019));
    float _1033 = inversesqrt(dot(vec3(_1023, _1026, _1029), vec3(_1023, _1026, _1029)));
    float _1034 = _1033 * _1023;
    float _1035 = _1033 * _1026;
    float _1036 = _1033 * _1029;
    float _1048 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1049 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1050 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1051 = (-0.0) - _942;
    float _1053 = (-0.0) - _943;
    float _1054 = (-0.0) - _944;
    float _1060 = float(gl_LaunchIDEXT.x);
    float _1061 = float(gl_LaunchIDEXT.y);
    float _1064 = float(gl_LaunchSizeEXT.x);
    float _1078 = fract(fract(sin(dot(vec2(_1060 / _1064, _1061 / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1091 = fract(fract(sin(dot(vec2((_1060 + 128.0) / _1064, (_1061 + 128.0) / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1092 = 1.0 - _925;
    float _1093 = _1092 * _846;
    float _1094 = _1092 * _849;
    float _1095 = _1092 * _852;
    float _1100 = _925 * (_846 + (-0.039999999105930328369140625));
    float _1101 = _925 * (_849 + (-0.039999999105930328369140625));
    float _1102 = _925 * (_852 + (-0.039999999105930328369140625));
    float _1103 = _1100 + 0.039999999105930328369140625;
    float _1105 = _1101 + 0.039999999105930328369140625;
    float _1106 = _1102 + 0.039999999105930328369140625;
    _65._m0 = 1u;
    uvec4 _1116 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1117 = _1116.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1117, _1116.w, _1117, vec3(_1048, _1049, _1050), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    if (_65._m0 == 0u)
    {
        float _1139 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1034, _1035, _1036));
        float _1513 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1142 = isnan(1.0) ? _1513 : (isnan(_1513) ? 1.0 : min(_1513, 1.0));
        float _1161 = 1.0 - (sqrt((_1000 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1162 = _1161 * _1161;
        float _1163 = g_sceneCB._m0[4u].x - _942;
        float _1164 = g_sceneCB._m0[4u].y - _943;
        float _1165 = g_sceneCB._m0[4u].z - _944;
        float _1169 = inversesqrt(dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165)));
        float _1170 = _1169 * _1163;
        float _1171 = _1169 * _1164;
        float _1172 = _1169 * _1165;
        float _1173 = dot(vec3(_1034, _1035, _1036), vec3(g_sceneCB._m0[4u].xyz));
        float _1524 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1176 = isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0));
        float _1177 = dot(vec3(_1034, _1035, _1036), vec3(_1051, _1053, _1054));
        float _1535 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1180 = isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0));
        float _1181 = dot(vec3(_1034, _1035, _1036), vec3(_1170, _1171, _1172));
        float _1546 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1184 = isnan(1.0) ? _1546 : (isnan(_1546) ? 1.0 : min(_1546, 1.0));
        float _1185 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1170, _1171, _1172));
        float _1557 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1189 = _1162 * _1162;
        float _1193 = ((_1184 * _1184) * (_1189 + (-1.0))) + 1.0;
        float _1202 = exp2(log2(1.0 - (isnan(1.0) ? _1557 : (isnan(_1557) ? 1.0 : min(_1557, 1.0)))) * 5.0);
        float _1213 = 1.0 - _1162;
        float _1224 = (0.5 / (((_1180 * ((_1176 * _1213) + _1162)) + 9.9999999392252902907785028219223e-09) + (((_1180 * _1213) + _1162) * _1176))) * _1176;
        float _1568 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1226 = (isnan(1.0) ? _1568 : (isnan(_1568) ? 1.0 : min(_1568, 1.0))) * (_1189 / ((_1193 * _1193) * 3.141590118408203125));
        _1233 = ((_1093 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1142;
        _1234 = ((_1094 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1142;
        _1235 = ((_1095 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1142;
        _1236 = (((_1202 * (0.959999978542327880859375 - _1100)) + _1103) * g_sceneCB._m0[5u].x) * _1226;
        _1237 = (((_1202 * (0.959999978542327880859375 - _1101)) + _1105) * g_sceneCB._m0[5u].y) * _1226;
        _1238 = (((_1202 * (0.959999978542327880859375 - _1102)) + _1106) * g_sceneCB._m0[5u].z) * _1226;
    }
    else
    {
        _1233 = 0.0;
        _1234 = 0.0;
        _1235 = 0.0;
        _1236 = 0.0;
        _1237 = 0.0;
        _1238 = 0.0;
    }
    bool _1240 = abs(_1035) < 0.89999997615814208984375;
    float _1242 = float(_1240);
    float _1243 = _1240 ? 0.0 : 1.0;
    float _1246 = (_1242 * _1036) - (_1243 * _1035);
    float _1247 = _1243 * _1034;
    float _1249 = (-0.0) - (_1034 * _1242);
    float _1253 = inversesqrt(dot(vec3(_1246, _1247, _1249), vec3(_1246, _1247, _1249)));
    float _1254 = _1246 * _1253;
    float _1255 = _1247 * _1253;
    float _1256 = _1253 * _1249;
    float _1259 = (_1255 * _1036) - (_1256 * _1035);
    float _1262 = (_1256 * _1034) - (_1254 * _1036);
    float _1265 = (_1254 * _1035) - (_1255 * _1034);
    float _1267;
    float _1275;
    float _1266 = 0.0;
    uint _1268 = 0u;
    float _1272;
    bool _1274;
    for (;;)
    {
        _1272 = (float(_1268) + _1078) * 0.03125;
        _1274 = _1268 == 0u;
        float frontier_phi_37_pred;
        if (_1274)
        {
            frontier_phi_37_pred = 0.0;
        }
        else
        {
            float _1418;
            float _1419;
            uint _1421;
            _1418 = 0.0;
            _1419 = 0.5;
            _1421 = _1268;
            float _1276;
            for (;;)
            {
                _1276 = ((_1421 & 1u) != 0u) ? (_1419 + _1418) : _1418;
                uint _1422 = _1421 >> 1u;
                if (_1422 == 0u)
                {
                    break;
                }
                else
                {
                    _1418 = _1276;
                    _1419 *= 0.5;
                    _1421 = _1422;
                }
            }
            frontier_phi_37_pred = _1276;
        }
        _1275 = frontier_phi_37_pred;
        float _1277 = _1275 + _1091;
        float _1281 = sqrt(_1272);
        float _1282 = ((_1277 > 1.0) ? (_1277 + (-1.0)) : _1277) * 6.283185482025146484375;
        float _1285 = cos(_1282) * _1281;
        float _1287 = sin(_1282) * _1281;
        float _1289 = sqrt(1.0 - _1272);
        float _1302 = ((_1289 * _1034) + (_1285 * _1259)) + (_1287 * _1254);
        float _1303 = ((_1289 * _1035) + (_1285 * _1262)) + (_1287 * _1255);
        float _1304 = ((_1289 * _1036) + (_1285 * _1265)) + (_1287 * _1256);
        _64._m0 = 1u;
        uvec4 _1308 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1309 = _1308.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1309, _1308.w, _1309, vec3(_1048, _1049, _1050), 9.9999997473787516355514526367188e-05, vec3(_1302, _1303, _1304), 10000.0, 1);
        float _1315 = dot(vec3(_1034, _1035, _1036), vec3(_1302, _1303, _1304));
        float _1579 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1318 = isnan(1.0) ? _1579 : (isnan(_1579) ? 1.0 : min(_1579, 1.0));
        _1267 = ((float(_64._m0 == 0u) * _1318) / (_1318 * 0.3183098733425140380859375)) + _1266;
        uint _1269 = _1268 + 1u;
        if (_1269 == 32u)
        {
            break;
        }
        else
        {
            _1266 = _1267;
            _1268 = _1269;
            continue;
        }
    }
    float _1326 = _1267 * 0.009947183541953563690185546875;
    float _1331 = dot(vec3(_942, _943, _944), vec3(_1034, _1035, _1036)) * 2.0;
    vec4 _1346 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_942 - (_1331 * _1034), _943 - (_1331 * _1035), _944 - (_1331 * _1036)), 4.0 - (_1000 * 8.0));
    float _1351 = dot(vec3(_1051, _1053, _1054), vec3(_1034, _1035, _1036));
    float _1590 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
    float _1361 = exp2(log2(1.0 - (isnan(1.0) ? _1590 : (isnan(_1590) ? 1.0 : min(_1590, 1.0)))) * 5.0);
    vec4 _1373 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1034, _1035, _1036), 0.0);
    float _1384 = (_1236 + _1233) + (((_1373.x * _1093) + (((_1361 * (0.959999978542327880859375 - _1100)) + _1103) * _1346.x)) * _1326);
    float _1388 = (_1237 + _1234) + (((_1373.y * _1094) + (((_1361 * (0.959999978542327880859375 - _1101)) + _1105) * _1346.y)) * _1326);
    float _1392 = (_1238 + _1235) + (((_1373.z * _1095) + (((_1361 * (0.959999978542327880859375 - _1102)) + _1106) * _1346.z)) * _1326);
    float _1601 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
    float _1612 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
    float _1623 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
    bool _1401 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1412;
    _1412.x = _1401 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1601 : (isnan(_1601) ? 1.0 : min(_1601, 1.0)));
    _1412.y = _1401 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0)));
    _1412.z = _1401 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1623 : (isnan(_1623) ? 1.0 : min(_1623, 1.0)));
    payload._m0 = _1412;
}


