#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _41
{
    vec3 _m0;
};

struct _45
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _41 payload;
hitAttributeEXT _45 hit;

void main()
{
    vec3 _51 = payload._m0;
    float _88 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _89 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _90 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _97 = sqrt(((_89 * _89) + (_88 * _88)) + (_90 * _90)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))));
    uvec4 _108 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _109 = _108.y;
    uint _149;
    uint _151;
    uint _152;
    if (_108.x == 0u)
    {
        uint _117 = (_109 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _126 = uvec3(texelFetch(l_geomIndexBuffer, int(_117)).x, texelFetch(l_geomIndexBuffer, int(_117 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_117 + 2u)).x);
        _149 = _126.x;
        _151 = _126.y;
        _152 = _126.z;
    }
    else
    {
        uint _130 = uint(gl_PrimitiveID) * 6u;
        uint _132 = _130 & 4294967292u;
        uint _135 = (_109 + _132) >> 2u;
        uvec2 _142 = uvec2(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x);
        uint _143 = _142.x;
        uint _144 = _142.y;
        uint _146 = _143 >> 16u;
        uint _147 = _144 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_132 == _130)
        {
            frontier_phi_3_2_ladder = _143 & 65535u;
            frontier_phi_3_2_ladder_1 = _146;
            frontier_phi_3_2_ladder_2 = _147;
        }
        else
        {
            frontier_phi_3_2_ladder = _146;
            frontier_phi_3_2_ladder_1 = _147;
            frontier_phi_3_2_ladder_2 = _144 >> 16u;
        }
        _149 = frontier_phi_3_2_ladder;
        _151 = frontier_phi_3_2_ladder_1;
        _152 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _156 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _157 = _156.x;
    uint _158 = _156.z;
    bool _159 = _158 != 0u;
    uint _160 = _108.w;
    bool _162 = _159 || (_160 == 0u);
    uint _164 = (_157 * _149) + 12u;
    uint _188;
    uint _189;
    uint _190;
    if (_162)
    {
        uvec4 _167 = texelFetch(l_geomAttrib_0, int(_164 >> 2u));
        uint _168 = _167.x;
        _188 = _168 & 255u;
        _189 = (_168 >> 8u) & 255u;
        _190 = (_168 >> 16u) & 255u;
    }
    else
    {
        uint _176 = _164 >> 2u;
        uvec2 _182 = uvec2(texelFetch(l_geomAttrib_0, int(_176)).x, texelFetch(l_geomAttrib_0, int(_176 + 1u)).x);
        uint _183 = _182.x;
        _188 = _183 & 65535u;
        _189 = _183 >> 16u;
        _190 = _182.y & 65535u;
    }
    uint _194 = _156.y;
    bool _195 = _158 == 0u;
    uint _198 = _195 ? 4u : ((_160 != 0u) ? 12u : 8u);
    uvec4 _207 = texelFetch(l_geomAttrib_1, int((((_194 * _149) + 4u) + (_159 ? (_198 + 4u) : _198)) >> 2u));
    uint _208 = _207.x;
    float _212 = float(int(uint(int(_208 << 16u) >> int(16u))));
    float _213 = float(int(uint(int(_208) >> int(16u))));
    uint _215 = (_157 * _151) + 12u;
    uint _237;
    uint _238;
    uint _239;
    if (_162)
    {
        uvec4 _218 = texelFetch(l_geomAttrib_0, int(_215 >> 2u));
        uint _219 = _218.x;
        _237 = _219 & 255u;
        _238 = (_219 >> 8u) & 255u;
        _239 = (_219 >> 16u) & 255u;
    }
    else
    {
        uint _225 = _215 >> 2u;
        uvec2 _231 = uvec2(texelFetch(l_geomAttrib_0, int(_225)).x, texelFetch(l_geomAttrib_0, int(_225 + 1u)).x);
        uint _232 = _231.x;
        _237 = _232 & 65535u;
        _238 = _232 >> 16u;
        _239 = _231.y & 65535u;
    }
    uint _245 = _195 ? 4u : ((_160 != 0u) ? 12u : 8u);
    uvec4 _252 = texelFetch(l_geomAttrib_1, int((((_194 * _151) + 4u) + (_159 ? (_245 + 4u) : _245)) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uint _260 = (_157 * _152) + 12u;
    uint _282;
    uint _283;
    uint _284;
    if (_162)
    {
        uvec4 _263 = texelFetch(l_geomAttrib_0, int(_260 >> 2u));
        uint _264 = _263.x;
        _282 = _264 & 255u;
        _283 = (_264 >> 8u) & 255u;
        _284 = (_264 >> 16u) & 255u;
    }
    else
    {
        uint _270 = _260 >> 2u;
        uvec2 _276 = uvec2(texelFetch(l_geomAttrib_0, int(_270)).x, texelFetch(l_geomAttrib_0, int(_270 + 1u)).x);
        uint _277 = _276.x;
        _282 = _277 & 65535u;
        _283 = _277 >> 16u;
        _284 = _276.y & 65535u;
    }
    uint _290 = _195 ? 4u : ((_160 != 0u) ? 12u : 8u);
    uvec4 _297 = texelFetch(l_geomAttrib_1, int((((_194 * _152) + 4u) + (_159 ? (_290 + 4u) : _290)) >> 2u));
    uint _298 = _297.x;
    float _302 = float(int(uint(int(_298 << 16u) >> int(16u))));
    float _303 = float(int(uint(int(_298) >> int(16u))));
    bool _305 = _108.z == 0u;
    float _341;
    float _342;
    float _343;
    if (_305)
    {
        uint _308 = _149 * 3u;
        uvec3 _317 = uvec3(texelFetch(l_geomPositionBuffer, int(_308)).x, texelFetch(l_geomPositionBuffer, int(_308 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_308 + 2u)).x);
        _341 = uintBitsToFloat(_317.x);
        _342 = uintBitsToFloat(_317.y);
        _343 = uintBitsToFloat(_317.z);
    }
    else
    {
        uint _325 = _149 * 2u;
        uvec2 _331 = uvec2(texelFetch(l_geomPositionBuffer, int(_325)).x, texelFetch(l_geomPositionBuffer, int(_325 + 1u)).x);
        uint _332 = _331.x;
        _341 = unpackHalf2x16(_332).x;
        _342 = unpackHalf2x16(_332 >> 16u).x;
        _343 = unpackHalf2x16(_331.y).x;
    }
    float _379;
    float _380;
    float _381;
    if (_305)
    {
        uint _346 = _151 * 3u;
        uvec3 _355 = uvec3(texelFetch(l_geomPositionBuffer, int(_346)).x, texelFetch(l_geomPositionBuffer, int(_346 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_346 + 2u)).x);
        _379 = uintBitsToFloat(_355.x);
        _380 = uintBitsToFloat(_355.y);
        _381 = uintBitsToFloat(_355.z);
    }
    else
    {
        uint _363 = _151 * 2u;
        uvec2 _369 = uvec2(texelFetch(l_geomPositionBuffer, int(_363)).x, texelFetch(l_geomPositionBuffer, int(_363 + 1u)).x);
        uint _370 = _369.x;
        _379 = unpackHalf2x16(_370).x;
        _380 = unpackHalf2x16(_370 >> 16u).x;
        _381 = unpackHalf2x16(_369.y).x;
    }
    float _417;
    float _418;
    float _419;
    if (_305)
    {
        uint _384 = _152 * 3u;
        uvec3 _393 = uvec3(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_384 + 2u)).x);
        _417 = uintBitsToFloat(_393.x);
        _418 = uintBitsToFloat(_393.y);
        _419 = uintBitsToFloat(_393.z);
    }
    else
    {
        uint _401 = _152 * 2u;
        uvec2 _407 = uvec2(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x);
        uint _408 = _407.x;
        _417 = unpackHalf2x16(_408).x;
        _418 = unpackHalf2x16(_408 >> 16u).x;
        _419 = unpackHalf2x16(_407.y).x;
    }
    float _422 = (1.0 - hit._m0.x) - hit._m0.y;
    float _444 = (_257 - _212) * 0.00048828125;
    float _446 = (_258 - _213) * 0.00048828125;
    float _449 = (_302 - _212) * 0.00048828125;
    float _450 = (_303 - _213) * 0.00048828125;
    float _472 = _379 - _341;
    float _473 = _380 - _342;
    float _474 = _381 - _343;
    float _477 = fma(_474, gl_ObjectToWorldEXT[2u].x, fma(_473, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _472));
    float _480 = fma(_474, gl_ObjectToWorldEXT[2u].y, fma(_473, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _472));
    float _483 = fma(_474, gl_ObjectToWorldEXT[2u].z, fma(_473, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _472));
    float _484 = _417 - _341;
    float _485 = _418 - _342;
    float _486 = _419 - _343;
    float _489 = fma(_486, gl_ObjectToWorldEXT[2u].x, fma(_485, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _484));
    float _492 = fma(_486, gl_ObjectToWorldEXT[2u].y, fma(_485, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _484));
    float _495 = fma(_486, gl_ObjectToWorldEXT[2u].z, fma(_485, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _484));
    float _496 = (((_257 * hit._m0.x) + (_212 * _422)) + (_302 * hit._m0.y)) * 0.00048828125;
    float _497 = (((_258 * hit._m0.x) + (_213 * _422)) + (_303 * hit._m0.y)) * 0.00048828125;
    float _508 = ((((float(_188) * _422) + (-127.0)) + (float(_237) * hit._m0.x)) + (float(_282) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _510 = ((((float(_189) * _422) + (-127.0)) + (float(_238) * hit._m0.x)) + (float(_283) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _511 = ((((float(_190) * _422) + (-127.0)) + (float(_239) * hit._m0.x)) + (float(_284) * hit._m0.y)) * 0.0078740157186985015869140625;
    uvec2 _523 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_1, int(0u)));
    bool _528 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _581;
    if (_528)
    {
        float _539 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _545 = (_495 * _480) - (_492 * _483);
        float _548 = (_489 * _483) - (_495 * _477);
        float _551 = (_492 * _477) - (_489 * _480);
        float _578 = ((log2((((float(_523.y) * 0.5) * float(_523.x)) * abs((_450 * _444) - (_449 * _446))) / (sqrt(((_548 * _548) + (_551 * _551)) + (_545 * _545)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_97) / abs(dot(vec3(_539 * gl_WorldRayDirectionEXT.x, _539 * gl_WorldRayDirectionEXT.y, _539 * gl_WorldRayDirectionEXT.z), vec3(_508, _510, _511))));
        _581 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    }
    else
    {
        _581 = 0.0;
    }
    uvec2 _599 = uvec2(textureSize(C_DetailBlend_SSS_snp_0_Texture2D_7, int(0u)));
    float _650;
    if (_528)
    {
        float _610 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _616 = (_495 * _480) - (_492 * _483);
        float _619 = (_489 * _483) - (_495 * _477);
        float _622 = (_492 * _477) - (_489 * _480);
        float _648 = ((log2((((float(_599.y) * 0.5) * float(_599.x)) * abs((_450 * _444) - (_449 * _446))) / (sqrt(((_619 * _619) + (_622 * _622)) + (_616 * _616)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_97) / abs(dot(vec3(_610 * gl_WorldRayDirectionEXT.x, _610 * gl_WorldRayDirectionEXT.y, _610 * gl_WorldRayDirectionEXT.z), vec3(_508, _510, _511))));
        _650 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    }
    else
    {
        _650 = 0.0;
    }
    if ((textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _496) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _497) + cbTextureTilingScale._m0[1u].w), _650).w * textureLod(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _496) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _497) + cbTextureTilingScale._m0[0u].w), _581).w) < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _51;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _51;
        return;
    }
}


