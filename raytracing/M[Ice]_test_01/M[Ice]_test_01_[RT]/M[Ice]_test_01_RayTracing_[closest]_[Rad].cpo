#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Ice_test_01_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Ice_test_01_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _1356;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _153 & 65535u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        else
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _154 >> 16u;
            frontier_phi_3_2_ladder_2 = _157;
        }
        _159 = frontier_phi_3_2_ladder;
        _161 = frontier_phi_3_2_ladder_2;
        _162 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _167 * _159;
    uint _170 = _168 >> 2u;
    uvec3 _179 = uvec3(texelFetch(l_geomAttrib_0, int(_170)).x, texelFetch(l_geomAttrib_0, int(_170 + 1u)).x, texelFetch(l_geomAttrib_0, int(_170 + 2u)).x);
    uint _186 = _166.z;
    bool _187 = _186 != 0u;
    bool _189 = _118.w == 0u;
    bool _190 = _187 || _189;
    uint _191 = _168 + 12u;
    uint _214;
    uint _215;
    uint _216;
    uint _217;
    if (_190)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _194 = _193.x;
        _214 = _194 & 255u;
        _215 = (_194 >> 8u) & 255u;
        _216 = (_194 >> 16u) & 255u;
        _217 = 16u;
    }
    else
    {
        uint _202 = _191 >> 2u;
        uvec2 _208 = uvec2(texelFetch(l_geomAttrib_0, int(_202)).x, texelFetch(l_geomAttrib_0, int(_202 + 1u)).x);
        uint _209 = _208.x;
        _214 = _209 & 65535u;
        _215 = _209 >> 16u;
        _216 = _208.y & 65535u;
        _217 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_217 + _168) >> 2u));
    uint _225 = _224.x;
    bool _239 = _186 == 0u;
    uint _240;
    if (_239)
    {
        _240 = _217 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_189)
        {
            frontier_phi_9_10_ladder = _217 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _217 + 12u;
        }
        _240 = frontier_phi_9_10_ladder;
    }
    uint _244 = _187 ? (_240 + 4u) : _240;
    uvec4 _248 = texelFetch(l_geomAttrib_0, int(((_168 + 4u) + _244) >> 2u));
    uint _249 = _248.x;
    float _253 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _254 = float(int(uint(int(_249) >> int(16u))));
    uint _262 = _167 * _161;
    uint _263 = _262 >> 2u;
    uvec3 _272 = uvec3(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x, texelFetch(l_geomAttrib_0, int(_263 + 2u)).x);
    uint _279 = _262 + 12u;
    uint _300;
    uint _301;
    uint _302;
    uint _303;
    if (_190)
    {
        uvec4 _281 = texelFetch(l_geomAttrib_0, int(_279 >> 2u));
        uint _282 = _281.x;
        _300 = _282 & 255u;
        _301 = (_282 >> 8u) & 255u;
        _302 = (_282 >> 16u) & 255u;
        _303 = 16u;
    }
    else
    {
        uint _288 = _279 >> 2u;
        uvec2 _294 = uvec2(texelFetch(l_geomAttrib_0, int(_288)).x, texelFetch(l_geomAttrib_0, int(_288 + 1u)).x);
        uint _295 = _294.x;
        _300 = _295 & 65535u;
        _301 = _295 >> 16u;
        _302 = _294.y & 65535u;
        _303 = 20u;
    }
    uvec4 _309 = texelFetch(l_geomAttrib_0, int((_303 + _262) >> 2u));
    uint _310 = _309.x;
    uint _322;
    if (_239)
    {
        _322 = _303 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_189)
        {
            frontier_phi_16_17_ladder = _303 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _303 + 12u;
        }
        _322 = frontier_phi_16_17_ladder;
    }
    uint _326 = _187 ? (_322 + 4u) : _322;
    uvec4 _330 = texelFetch(l_geomAttrib_0, int(((_262 + 4u) + _326) >> 2u));
    uint _331 = _330.x;
    float _335 = float(int(uint(int(_331 << 16u) >> int(16u))));
    float _336 = float(int(uint(int(_331) >> int(16u))));
    uint _344 = _167 * _162;
    uint _345 = _344 >> 2u;
    uvec3 _354 = uvec3(texelFetch(l_geomAttrib_0, int(_345)).x, texelFetch(l_geomAttrib_0, int(_345 + 1u)).x, texelFetch(l_geomAttrib_0, int(_345 + 2u)).x);
    uint _361 = _344 + 12u;
    uint _382;
    uint _383;
    uint _384;
    uint _385;
    if (_190)
    {
        uvec4 _363 = texelFetch(l_geomAttrib_0, int(_361 >> 2u));
        uint _364 = _363.x;
        _382 = _364 & 255u;
        _383 = (_364 >> 8u) & 255u;
        _384 = (_364 >> 16u) & 255u;
        _385 = 16u;
    }
    else
    {
        uint _370 = _361 >> 2u;
        uvec2 _376 = uvec2(texelFetch(l_geomAttrib_0, int(_370)).x, texelFetch(l_geomAttrib_0, int(_370 + 1u)).x);
        uint _377 = _376.x;
        _382 = _377 & 65535u;
        _383 = _377 >> 16u;
        _384 = _376.y & 65535u;
        _385 = 20u;
    }
    uvec4 _391 = texelFetch(l_geomAttrib_0, int((_385 + _344) >> 2u));
    uint _392 = _391.x;
    uint _404;
    if (_239)
    {
        _404 = _385 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_189)
        {
            frontier_phi_23_24_ladder = _385 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _385 + 12u;
        }
        _404 = frontier_phi_23_24_ladder;
    }
    uint _408 = _187 ? (_404 + 4u) : _404;
    uvec4 _412 = texelFetch(l_geomAttrib_0, int(((_344 + 4u) + _408) >> 2u));
    uint _413 = _412.x;
    float _417 = float(int(uint(int(_413 << 16u) >> int(16u))));
    float _418 = float(int(uint(int(_413) >> int(16u))));
    bool _427 = _118.z == 0u;
    float _463;
    float _464;
    float _465;
    if (_427)
    {
        uint _430 = _159 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _159 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_427)
    {
        uint _468 = _161 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _161 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _539;
    float _540;
    float _541;
    if (_427)
    {
        uint _506 = _162 * 3u;
        uvec3 _515 = uvec3(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_506 + 2u)).x);
        _539 = uintBitsToFloat(_515.x);
        _540 = uintBitsToFloat(_515.y);
        _541 = uintBitsToFloat(_515.z);
    }
    else
    {
        uint _523 = _162 * 2u;
        uvec2 _529 = uvec2(texelFetch(l_geomPositionBuffer, int(_523)).x, texelFetch(l_geomPositionBuffer, int(_523 + 1u)).x);
        uint _530 = _529.x;
        _539 = unpackHalf2x16(_530).x;
        _540 = unpackHalf2x16(_530 >> 16u).x;
        _541 = unpackHalf2x16(_529.y).x;
    }
    float _544 = (1.0 - hit._m0.x) - hit._m0.y;
    float _619 = _501 - _463;
    float _620 = _502 - _464;
    float _621 = _503 - _465;
    float _624 = fma(_621, gl_ObjectToWorldEXT[2u].x, fma(_620, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _619));
    float _627 = fma(_621, gl_ObjectToWorldEXT[2u].y, fma(_620, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _619));
    float _630 = fma(_621, gl_ObjectToWorldEXT[2u].z, fma(_620, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _619));
    float _631 = _539 - _463;
    float _632 = _540 - _464;
    float _633 = _541 - _465;
    float _636 = fma(_633, gl_ObjectToWorldEXT[2u].x, fma(_632, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _631));
    float _639 = fma(_633, gl_ObjectToWorldEXT[2u].y, fma(_632, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _631));
    float _642 = fma(_633, gl_ObjectToWorldEXT[2u].z, fma(_632, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _631));
    float _649 = (((float(_214) * _544) + (-127.0)) + (float(_300) * hit._m0.x)) + (float(_382) * hit._m0.y);
    float _652 = (((float(_215) * _544) + (-127.0)) + (float(_301) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _655 = (((float(_216) * _544) + (-127.0)) + (float(_302) * hit._m0.x)) + (float(_384) * hit._m0.y);
    float _656 = _649 * 0.0078740157186985015869140625;
    float _658 = _652 * 0.0078740157186985015869140625;
    float _659 = _655 * 0.0078740157186985015869140625;
    float _672 = ((((float(_225 & 255u) * _544) + (-127.0)) + (float(_310 & 255u) * hit._m0.x)) + (float(_392 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _673 = ((((float((_225 >> 8u) & 255u) * _544) + (-127.0)) + (float((_310 >> 8u) & 255u) * hit._m0.x)) + (float((_392 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _674 = ((((float((_225 >> 16u) & 255u) * _544) + (-127.0)) + (float((_310 >> 16u) & 255u) * hit._m0.x)) + (float((_392 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _675 = ((((float(_225 >> 24u) * _544) + (-127.0)) + (float(_310 >> 24u) * hit._m0.x)) + (float(_392 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _685 = ((_673 * _659) - (_674 * _658)) * _675;
    float _686 = ((_674 * _656) - (_672 * _659)) * _675;
    float _687 = ((_672 * _658) - (_673 * _656)) * _675;
    float _691 = inversesqrt(dot(vec3(_685, _686, _687), vec3(_685, _686, _687)));
    float _719 = inversesqrt(dot(vec3(_656, _658, _659), vec3(_656, _658, _659)));
    float _723 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_719 * _656, _719 * _658, _719 * _659, 0.0));
    float _1436 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _732 = exp2(log2(1.0 - (isnan(1.0) ? _1436 : (isnan(_1436) ? 1.0 : min(_1436, 1.0)))) * cbMtdParam._m0[12u].y);
    float _1447 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _733 = isnan(1.0) ? _1447 : (isnan(_1447) ? 1.0 : min(_1447, 1.0));
    float _740 = (_733 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x;
    float _741 = (_733 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y;
    float _742 = (_733 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z;
    uvec2 _761 = uvec2(textureSize(M_Ice_test_01_snp_0_Texture2D_10, int(0u)));
    bool _766 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _824;
    if (_766)
    {
        float _781 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _787 = (_642 * _627) - (_639 * _630);
        float _790 = (_636 * _630) - (_642 * _624);
        float _793 = (_639 * _624) - (_636 * _627);
        float _822 = ((log2((((float(_761.y) * 0.5) * float(_761.x)) * abs((((_418 - _254) * (_335 - _253)) - ((_417 - _253) * (_336 - _254))) * 2.384185791015625e-07)) / (sqrt(((_790 * _790) + (_793 * _793)) + (_787 * _787)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_781 * gl_WorldRayDirectionEXT.x, _781 * gl_WorldRayDirectionEXT.y, _781 * gl_WorldRayDirectionEXT.z), vec3(_656, _658, _659))));
        _824 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    }
    else
    {
        _824 = 0.0;
    }
    vec4 _828 = textureLod(sampler2D(M_Ice_test_01_snp_0_Texture2D_10, SS_BumpMap), vec2((((((_335 * hit._m0.x) + (_253 * _544)) + (_417 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_336 * hit._m0.x) + (_254 * _544)) + (_418 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _824);
    float _834 = (_828.x * 2.0) + (-1.0);
    float _836 = (_828.y * 2.0) + (-1.0);
    float _837 = dot(vec2(_834, _836), vec2(_834, _836));
    float _1463 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _842 = sqrt(1.0 - (isnan(1.0) ? _1463 : (isnan(_1463) ? 1.0 : min(_1463, 1.0))));
    float _843 = abs(_656);
    float _844 = abs(_658);
    float _845 = abs(_659);
    float _846 = _843 * _843;
    float _847 = _844 * _844;
    float _848 = _845 * _845;
    float _851 = (((uintBitsToFloat(_272.y) * hit._m0.x) + (uintBitsToFloat(_179.y) * _544)) + (uintBitsToFloat(_354.y) * hit._m0.y)) * 0.0500000007450580596923828125;
    float _861 = (cbTextureTilingScale._m0[1u].x * ((((uintBitsToFloat(_272.x) * hit._m0.x) + (uintBitsToFloat(_179.x) * _544)) + (uintBitsToFloat(_354.x) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].z;
    float _885;
    if (_766)
    {
        float _869 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _877 = log2(0.0);
        float _883 = ((_877 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_869 * gl_WorldRayDirectionEXT.x, _869 * gl_WorldRayDirectionEXT.y, _869 * gl_WorldRayDirectionEXT.z), vec3(_656, _658, _659))));
        _885 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    }
    else
    {
        _885 = 0.0;
    }
    vec4 _888 = textureLod(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_861, (cbTextureTilingScale._m0[1u].y * _851) + cbTextureTilingScale._m0[1u].w), _885);
    float _895 = (cbTextureTilingScale._m0[1u].y * ((((uintBitsToFloat(_272.z) * hit._m0.x) + (uintBitsToFloat(_179.z) * _544)) + (uintBitsToFloat(_354.z) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].w;
    float _918;
    if (_766)
    {
        float _902 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _910 = log2(0.0);
        float _916 = ((_910 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_902 * gl_WorldRayDirectionEXT.x, _902 * gl_WorldRayDirectionEXT.y, _902 * gl_WorldRayDirectionEXT.z), vec3(_656, _658, _659))));
        _918 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    }
    else
    {
        _918 = 0.0;
    }
    vec4 _920 = textureLod(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_861, _895), _918);
    float _933 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _934 = _933 * gl_WorldRayDirectionEXT.x;
    float _935 = _933 * gl_WorldRayDirectionEXT.y;
    float _936 = _933 * gl_WorldRayDirectionEXT.z;
    float _952;
    if (_766)
    {
        float _944 = log2(0.0);
        float _950 = ((_944 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_934, _935, _936), vec3(_656, _658, _659))));
        _952 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    }
    else
    {
        _952 = 0.0;
    }
    vec4 _954 = textureLod(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _851) + cbTextureTilingScale._m0[1u].z, _895), _952);
    float _968 = ((((((_920.x * _847) + (_888.x * _848)) + (_954.x * _846)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _834;
    float _969 = ((((((_920.y * _847) + (_888.y * _848)) + (_954.y * _846)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _836;
    float _972 = fma(_842, _656, fma(_969, _672, _968 * (_691 * _685)));
    float _975 = fma(_842, _658, fma(_969, _673, _968 * (_691 * _686)));
    float _978 = fma(_842, _659, fma(_969, _674, _968 * (_691 * _687)));
    float _982 = inversesqrt(dot(vec3(_972, _975, _978), vec3(_972, _975, _978)));
    float _983 = _982 * _972;
    float _984 = _982 * _975;
    float _985 = _982 * _978;
    float _993 = cbMtdParam._m0[13u].x + dot(vec4(_983, _984, _985, 0.0), vec4(cbMtdParam._m0[14u].xyz, 0.0));
    float _1489 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _995 = (isnan(1.0) ? _1489 : (isnan(_1489) ? 1.0 : min(_1489, 1.0))) * ((((float(texelFetch(l_geomAttrib_0, int(((_262 + 8u) + _326) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_168 + 8u) + _244) >> 2u)).x & 255u) * _544)) + (float(texelFetch(l_geomAttrib_0, int(((_344 + 8u) + _408) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1500 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _996 = isnan(1.0) ? _1500 : (isnan(_1500) ? 1.0 : min(_1500, 1.0));
    float _1003 = (_996 * (cbMtdParam._m0[9u].x - _740)) + _740;
    float _1004 = (_996 * (cbMtdParam._m0[9u].y - _741)) + _741;
    float _1005 = (_996 * (cbMtdParam._m0[9u].z - _742)) + _742;
    float _1010 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * _996) + cbMtdParam._m0[12u].x;
    float _1022 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1023 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1024 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1025 = (-0.0) - _934;
    float _1027 = (-0.0) - _935;
    float _1028 = (-0.0) - _936;
    float _1034 = float(gl_LaunchIDEXT.x);
    float _1035 = float(gl_LaunchIDEXT.y);
    float _1038 = float(gl_LaunchSizeEXT.x);
    float _1052 = fract(fract(sin(dot(vec2(_1034 / _1038, _1035 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1065 = fract(fract(sin(dot(vec2((_1034 + 128.0) / _1038, (_1035 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _60._m0 = 1u;
    uvec4 _1075 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1076 = _1075.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1076, _1075.w, _1076, vec3(_1022, _1023, _1024), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    if (_60._m0 == 0u)
    {
        float _1097 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_983, _984, _985));
        float _1511 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1100 = isnan(1.0) ? _1511 : (isnan(_1511) ? 1.0 : min(_1511, 1.0));
        float _1119 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1010) * 0.949999988079071044921875);
        float _1120 = _1119 * _1119;
        float _1121 = g_sceneCB._m0[4u].x - _934;
        float _1122 = g_sceneCB._m0[4u].y - _935;
        float _1123 = g_sceneCB._m0[4u].z - _936;
        float _1127 = inversesqrt(dot(vec3(_1121, _1122, _1123), vec3(_1121, _1122, _1123)));
        float _1128 = _1127 * _1121;
        float _1129 = _1127 * _1122;
        float _1130 = _1127 * _1123;
        float _1131 = dot(vec3(_983, _984, _985), vec3(g_sceneCB._m0[4u].xyz));
        float _1522 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1134 = isnan(1.0) ? _1522 : (isnan(_1522) ? 1.0 : min(_1522, 1.0));
        float _1135 = dot(vec3(_983, _984, _985), vec3(_1025, _1027, _1028));
        float _1533 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1138 = isnan(1.0) ? _1533 : (isnan(_1533) ? 1.0 : min(_1533, 1.0));
        float _1139 = dot(vec3(_983, _984, _985), vec3(_1128, _1129, _1130));
        float _1544 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1142 = isnan(1.0) ? _1544 : (isnan(_1544) ? 1.0 : min(_1544, 1.0));
        float _1143 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1128, _1129, _1130));
        float _1555 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1147 = _1120 * _1120;
        float _1151 = ((_1142 * _1142) * (_1147 + (-1.0))) + 1.0;
        float _1163 = (exp2(log2(1.0 - (isnan(1.0) ? _1555 : (isnan(_1555) ? 1.0 : min(_1555, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1165 = 1.0 - _1120;
        float _1176 = (0.5 / (((_1138 * ((_1134 * _1165) + _1120)) + 9.9999999392252902907785028219223e-09) + (((_1138 * _1165) + _1120) * _1134))) * _1134;
        float _1566 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1178 = (isnan(1.0) ? _1566 : (isnan(_1566) ? 1.0 : min(_1566, 1.0))) * (_1147 / ((_1151 * _1151) * 3.141590118408203125));
        _1185 = ((_1003 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1100;
        _1186 = ((_1004 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1100;
        _1187 = ((_1005 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1100;
        _1188 = (_1163 * g_sceneCB._m0[5u].x) * _1178;
        _1189 = (_1163 * g_sceneCB._m0[5u].y) * _1178;
        _1190 = (_1163 * g_sceneCB._m0[5u].z) * _1178;
    }
    else
    {
        _1185 = 0.0;
        _1186 = 0.0;
        _1187 = 0.0;
        _1188 = 0.0;
        _1189 = 0.0;
        _1190 = 0.0;
    }
    bool _1192 = abs(_984) < 0.89999997615814208984375;
    float _1194 = float(_1192);
    float _1195 = _1192 ? 0.0 : 1.0;
    float _1198 = (_1194 * _985) - (_1195 * _984);
    float _1199 = _1195 * _983;
    float _1201 = (-0.0) - (_983 * _1194);
    float _1205 = inversesqrt(dot(vec3(_1198, _1199, _1201), vec3(_1198, _1199, _1201)));
    float _1206 = _1198 * _1205;
    float _1207 = _1199 * _1205;
    float _1208 = _1205 * _1201;
    float _1211 = (_1207 * _985) - (_1208 * _984);
    float _1214 = (_1208 * _983) - (_1206 * _985);
    float _1217 = (_1206 * _984) - (_1207 * _983);
    float _1219;
    float _1227;
    float _1218 = 0.0;
    uint _1220 = 0u;
    float _1224;
    bool _1226;
    for (;;)
    {
        _1224 = (float(_1220) + _1052) * 0.03125;
        _1226 = _1220 == 0u;
        float frontier_phi_47_pred;
        if (_1226)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1361;
            float _1362;
            uint _1364;
            _1361 = 0.0;
            _1362 = 0.5;
            _1364 = _1220;
            float _1228;
            for (;;)
            {
                _1228 = ((_1364 & 1u) != 0u) ? (_1362 + _1361) : _1361;
                uint _1365 = _1364 >> 1u;
                if (_1365 == 0u)
                {
                    break;
                }
                else
                {
                    _1361 = _1228;
                    _1362 *= 0.5;
                    _1364 = _1365;
                }
            }
            frontier_phi_47_pred = _1228;
        }
        _1227 = frontier_phi_47_pred;
        float _1229 = _1227 + _1065;
        float _1233 = sqrt(_1224);
        float _1234 = ((_1229 > 1.0) ? (_1229 + (-1.0)) : _1229) * 6.283185482025146484375;
        float _1237 = cos(_1234) * _1233;
        float _1239 = sin(_1234) * _1233;
        float _1241 = sqrt(1.0 - _1224);
        float _1254 = ((_1241 * _983) + (_1237 * _1211)) + (_1239 * _1206);
        float _1255 = ((_1241 * _984) + (_1237 * _1214)) + (_1239 * _1207);
        float _1256 = ((_1241 * _985) + (_1237 * _1217)) + (_1239 * _1208);
        _59._m0 = 1u;
        uvec4 _1260 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1261 = _1260.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1261, _1260.w, _1261, vec3(_1022, _1023, _1024), 9.9999997473787516355514526367188e-05, vec3(_1254, _1255, _1256), 10000.0, 1);
        float _1267 = dot(vec3(_983, _984, _985), vec3(_1254, _1255, _1256));
        float _1577 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1270 = isnan(1.0) ? _1577 : (isnan(_1577) ? 1.0 : min(_1577, 1.0));
        _1219 = ((float(_59._m0 == 0u) * _1270) / (_1270 * 0.3183098733425140380859375)) + _1218;
        uint _1221 = _1220 + 1u;
        if (_1221 == 32u)
        {
            break;
        }
        else
        {
            _1218 = _1219;
            _1220 = _1221;
            continue;
        }
    }
    float _1278 = _1219 * 0.009947183541953563690185546875;
    float _1283 = dot(vec3(_934, _935, _936), vec3(_983, _984, _985)) * 2.0;
    vec4 _1297 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_934 - (_1283 * _983), _935 - (_1283 * _984), _936 - (_1283 * _985)), 4.0 - (_1010 * 4.0));
    float _1302 = dot(vec3(_1025, _1027, _1028), vec3(_983, _984, _985));
    float _1588 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
    float _1311 = (exp2(log2(1.0 - (isnan(1.0) ? _1588 : (isnan(_1588) ? 1.0 : min(_1588, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1317 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_983, _984, _985), 0.0);
    float _1328 = (_1188 + _1185) + (((_1317.x * _1003) + (_1311 * _1297.x)) * _1278);
    float _1332 = (_1189 + _1186) + (((_1317.y * _1004) + (_1311 * _1297.y)) * _1278);
    float _1336 = (_1190 + _1187) + (((_1317.z * _1005) + (_1311 * _1297.z)) * _1278);
    float _1599 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
    float _1610 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
    float _1621 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
    bool _1344 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1355;
    _1355.x = _1344 ? ((_649 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1599 : (isnan(_1599) ? 1.0 : min(_1599, 1.0)));
    _1355.y = _1344 ? ((_652 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1610 : (isnan(_1610) ? 1.0 : min(_1610, 1.0)));
    _1355.z = _1344 ? ((_655 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1621 : (isnan(_1621) ? 1.0 : min(_1621, 1.0)));
    payload._m0 = _1355;
}


