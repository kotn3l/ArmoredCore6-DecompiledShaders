#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _2816;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uint _246 = ((_187 + 4u) + _243) >> 2u;
    uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
    uint _253 = _252.x;
    uint _254 = _252.y;
    float _258 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_253) >> int(16u))));
    float _263 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_254) >> int(16u))));
    uvec4 _268 = texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _243) >> 2u));
    uint _269 = _268.x;
    uvec4 _281 = texelFetch(l_geomAttrib_0, int(((_187 + 16u) + _243) >> 2u));
    uint _282 = _281.x;
    uint _291 = _181 * _175;
    uint _292 = _291 + 12u;
    uint _313;
    uint _314;
    uint _315;
    uint _316;
    if (_186)
    {
        uvec4 _294 = texelFetch(l_geomAttrib_0, int(_292 >> 2u));
        uint _295 = _294.x;
        _313 = _295 & 255u;
        _314 = (_295 >> 8u) & 255u;
        _315 = (_295 >> 16u) & 255u;
        _316 = 16u;
    }
    else
    {
        uint _301 = _292 >> 2u;
        uvec2 _307 = uvec2(texelFetch(l_geomAttrib_0, int(_301)).x, texelFetch(l_geomAttrib_0, int(_301 + 1u)).x);
        uint _308 = _307.x;
        _313 = _308 & 65535u;
        _314 = _308 >> 16u;
        _315 = _307.y & 65535u;
        _316 = 20u;
    }
    uvec4 _322 = texelFetch(l_geomAttrib_0, int((_316 + _291) >> 2u));
    uint _323 = _322.x;
    uint _335;
    if (_238)
    {
        _335 = _316 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _316 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _316 + 12u;
        }
        _335 = frontier_phi_16_17_ladder;
    }
    uint _339 = _183 ? (_335 + 4u) : _335;
    uint _342 = ((_291 + 4u) + _339) >> 2u;
    uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
    uint _349 = _348.x;
    uint _350 = _348.y;
    float _354 = float(int(uint(int(_349 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_349) >> int(16u))));
    float _359 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_350) >> int(16u))));
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_291 + 12u) + _339) >> 2u));
    uint _365 = _364.x;
    uvec4 _377 = texelFetch(l_geomAttrib_0, int(((_291 + 16u) + _339) >> 2u));
    uint _378 = _377.x;
    uint _387 = _181 * _176;
    uint _388 = _387 + 12u;
    uint _409;
    uint _410;
    uint _411;
    uint _412;
    if (_186)
    {
        uvec4 _390 = texelFetch(l_geomAttrib_0, int(_388 >> 2u));
        uint _391 = _390.x;
        _409 = _391 & 255u;
        _410 = (_391 >> 8u) & 255u;
        _411 = (_391 >> 16u) & 255u;
        _412 = 16u;
    }
    else
    {
        uint _397 = _388 >> 2u;
        uvec2 _403 = uvec2(texelFetch(l_geomAttrib_0, int(_397)).x, texelFetch(l_geomAttrib_0, int(_397 + 1u)).x);
        uint _404 = _403.x;
        _409 = _404 & 65535u;
        _410 = _404 >> 16u;
        _411 = _403.y & 65535u;
        _412 = 20u;
    }
    uvec4 _418 = texelFetch(l_geomAttrib_0, int((_412 + _387) >> 2u));
    uint _419 = _418.x;
    uint _431;
    if (_238)
    {
        _431 = _412 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _412 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _412 + 12u;
        }
        _431 = frontier_phi_23_24_ladder;
    }
    uint _435 = _183 ? (_431 + 4u) : _431;
    uint _438 = ((_387 + 4u) + _435) >> 2u;
    uvec2 _444 = uvec2(texelFetch(l_geomAttrib_0, int(_438)).x, texelFetch(l_geomAttrib_0, int(_438 + 1u)).x);
    uint _445 = _444.x;
    uint _446 = _444.y;
    float _450 = float(int(uint(int(_445 << 16u) >> int(16u))));
    float _451 = float(int(uint(int(_445) >> int(16u))));
    float _455 = float(int(uint(int(_446 << 16u) >> int(16u))));
    float _456 = float(int(uint(int(_446) >> int(16u))));
    uvec4 _460 = texelFetch(l_geomAttrib_0, int(((_387 + 12u) + _435) >> 2u));
    uint _461 = _460.x;
    uvec4 _473 = texelFetch(l_geomAttrib_0, int(((_387 + 16u) + _435) >> 2u));
    uint _474 = _473.x;
    bool _484 = _132.z == 0u;
    float _520;
    float _521;
    float _522;
    if (_484)
    {
        uint _487 = _173 * 3u;
        uvec3 _496 = uvec3(texelFetch(l_geomPositionBuffer, int(_487)).x, texelFetch(l_geomPositionBuffer, int(_487 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_487 + 2u)).x);
        _520 = uintBitsToFloat(_496.x);
        _521 = uintBitsToFloat(_496.y);
        _522 = uintBitsToFloat(_496.z);
    }
    else
    {
        uint _504 = _173 * 2u;
        uvec2 _510 = uvec2(texelFetch(l_geomPositionBuffer, int(_504)).x, texelFetch(l_geomPositionBuffer, int(_504 + 1u)).x);
        uint _511 = _510.x;
        _520 = unpackHalf2x16(_511).x;
        _521 = unpackHalf2x16(_511 >> 16u).x;
        _522 = unpackHalf2x16(_510.y).x;
    }
    float _558;
    float _559;
    float _560;
    if (_484)
    {
        uint _525 = _175 * 3u;
        uvec3 _534 = uvec3(texelFetch(l_geomPositionBuffer, int(_525)).x, texelFetch(l_geomPositionBuffer, int(_525 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_525 + 2u)).x);
        _558 = uintBitsToFloat(_534.x);
        _559 = uintBitsToFloat(_534.y);
        _560 = uintBitsToFloat(_534.z);
    }
    else
    {
        uint _542 = _175 * 2u;
        uvec2 _548 = uvec2(texelFetch(l_geomPositionBuffer, int(_542)).x, texelFetch(l_geomPositionBuffer, int(_542 + 1u)).x);
        uint _549 = _548.x;
        _558 = unpackHalf2x16(_549).x;
        _559 = unpackHalf2x16(_549 >> 16u).x;
        _560 = unpackHalf2x16(_548.y).x;
    }
    float _596;
    float _597;
    float _598;
    if (_484)
    {
        uint _563 = _176 * 3u;
        uvec3 _572 = uvec3(texelFetch(l_geomPositionBuffer, int(_563)).x, texelFetch(l_geomPositionBuffer, int(_563 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_563 + 2u)).x);
        _596 = uintBitsToFloat(_572.x);
        _597 = uintBitsToFloat(_572.y);
        _598 = uintBitsToFloat(_572.z);
    }
    else
    {
        uint _580 = _176 * 2u;
        uvec2 _586 = uvec2(texelFetch(l_geomPositionBuffer, int(_580)).x, texelFetch(l_geomPositionBuffer, int(_580 + 1u)).x);
        uint _587 = _586.x;
        _596 = unpackHalf2x16(_587).x;
        _597 = unpackHalf2x16(_587 >> 16u).x;
        _598 = unpackHalf2x16(_586.y).x;
    }
    float _601 = (1.0 - hit._m0.x) - hit._m0.y;
    float _654 = (((float(_365 & 255u) * hit._m0.x) + (float(_269 & 255u) * _601)) + (float(_461 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _657 = ((float((_365 >> 8u) & 255u) * hit._m0.x) + (float((_269 >> 8u) & 255u) * _601)) + (float((_461 >> 8u) & 255u) * hit._m0.y);
    float _658 = _657 * 0.0039215688593685626983642578125;
    float _660 = ((float((_365 >> 16u) & 255u) * hit._m0.x) + (float((_269 >> 16u) & 255u) * _601)) + (float((_461 >> 16u) & 255u) * hit._m0.y);
    float _661 = _660 * 0.0039215688593685626983642578125;
    float _682 = (_354 - _258) * 0.00048828125;
    float _684 = (_355 - _259) * 0.00048828125;
    float _687 = (_450 - _258) * 0.00048828125;
    float _688 = (_451 - _259) * 0.00048828125;
    float _714 = _558 - _520;
    float _715 = _559 - _521;
    float _716 = _560 - _522;
    float _719 = fma(_716, gl_ObjectToWorldEXT[2u].x, fma(_715, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _714));
    float _722 = fma(_716, gl_ObjectToWorldEXT[2u].y, fma(_715, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _714));
    float _725 = fma(_716, gl_ObjectToWorldEXT[2u].z, fma(_715, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _714));
    float _726 = _596 - _520;
    float _727 = _597 - _521;
    float _728 = _598 - _522;
    float _731 = fma(_728, gl_ObjectToWorldEXT[2u].x, fma(_727, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _726));
    float _734 = fma(_728, gl_ObjectToWorldEXT[2u].y, fma(_727, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _726));
    float _737 = fma(_728, gl_ObjectToWorldEXT[2u].z, fma(_727, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _726));
    float _738 = (((_354 * hit._m0.x) + (_258 * _601)) + (_450 * hit._m0.y)) * 0.00048828125;
    float _739 = (((_355 * hit._m0.x) + (_259 * _601)) + (_451 * hit._m0.y)) * 0.00048828125;
    float _745 = (((float(_212) * _601) + (-127.0)) + (float(_313) * hit._m0.x)) + (float(_409) * hit._m0.y);
    float _748 = (((float(_213) * _601) + (-127.0)) + (float(_314) * hit._m0.x)) + (float(_410) * hit._m0.y);
    float _751 = (((float(_214) * _601) + (-127.0)) + (float(_315) * hit._m0.x)) + (float(_411) * hit._m0.y);
    float _752 = _745 * 0.0078740157186985015869140625;
    float _754 = _748 * 0.0078740157186985015869140625;
    float _755 = _751 * 0.0078740157186985015869140625;
    float _768 = ((((float(_224 & 255u) * _601) + (-127.0)) + (float(_323 & 255u) * hit._m0.x)) + (float(_419 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _769 = ((((float((_224 >> 8u) & 255u) * _601) + (-127.0)) + (float((_323 >> 8u) & 255u) * hit._m0.x)) + (float((_419 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _770 = ((((float((_224 >> 16u) & 255u) * _601) + (-127.0)) + (float((_323 >> 16u) & 255u) * hit._m0.x)) + (float((_419 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _771 = ((((float(_224 >> 24u) * _601) + (-127.0)) + (float(_323 >> 24u) * hit._m0.x)) + (float(_419 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _781 = ((_769 * _755) - (_770 * _754)) * _771;
    float _782 = ((_770 * _752) - (_768 * _755)) * _771;
    float _783 = ((_768 * _754) - (_769 * _752)) * _771;
    float _787 = inversesqrt(dot(vec3(_781, _782, _783), vec3(_781, _782, _783)));
    float _809 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    uvec2 _825 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, int(0u)));
    bool _830 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _883;
    if (_830)
    {
        float _841 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _847 = (_737 * _722) - (_734 * _725);
        float _850 = (_731 * _725) - (_737 * _719);
        float _853 = (_734 * _719) - (_731 * _722);
        float _880 = ((log2((((float(_825.y) * 0.5) * float(_825.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_850 * _850) + (_853 * _853)) + (_847 * _847)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_841 * gl_WorldRayDirectionEXT.x, _841 * gl_WorldRayDirectionEXT.y, _841 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _883 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    }
    else
    {
        _883 = 0.0;
    }
    vec4 _887 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_809 * cbMtdParam._m0[26u].w) + _738) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_809 * cbMtdParam._m0[27u].x) + _739) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _883);
    float _889 = _887.x;
    float _890 = _887.y;
    float _891 = _887.z;
    float _892 = _887.w;
    float _900 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _903 = ((-0.0) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _900 : (isnan(_900) ? 0.001000000047497451305389404296875 : max(_900, 0.001000000047497451305389404296875)));
    float _904 = _903 + 0.180000007152557373046875;
    float _906 = _904 * 12.0;
    float _2930 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _909 = _904 * 7.0;
    float _2941 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _911 = isnan(1.0) ? _2941 : (isnan(_2941) ? 1.0 : min(_2941, 1.0));
    float _922 = (_891 * 0.00200000009499490261077880859375) + _738;
    float _923 = (_891 * 0.00999999977648258209228515625) + _739;
    uvec2 _937 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, int(0u)));
    float _988;
    if (_830)
    {
        float _948 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _954 = (_737 * _722) - (_734 * _725);
        float _957 = (_731 * _725) - (_737 * _719);
        float _960 = (_734 * _719) - (_731 * _722);
        float _986 = ((log2((((float(_937.y) * 0.5) * float(_937.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_957 * _957) + (_960 * _960)) + (_954 * _954)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_948 * gl_WorldRayDirectionEXT.x, _948 * gl_WorldRayDirectionEXT.y, _948 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _988 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    }
    else
    {
        _988 = 0.0;
    }
    vec4 _991 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _809) + _922) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _809) + _923) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _988);
    float _993 = _991.x;
    float _1060;
    if (_830)
    {
        float _1020 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1026 = (_737 * _722) - (_734 * _725);
        float _1029 = (_731 * _725) - (_737 * _719);
        float _1032 = (_734 * _719) - (_731 * _722);
        float _1058 = ((log2((((float(_937.y) * 0.5) * float(_937.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1029 * _1029) + (_1032 * _1032)) + (_1026 * _1026)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1020 * gl_WorldRayDirectionEXT.x, _1020 * gl_WorldRayDirectionEXT.y, _1020 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1060 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    }
    else
    {
        _1060 = 0.0;
    }
    float _1065 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _922) + (cbMtdParam._m0[26u].y * _809)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _923) + (cbMtdParam._m0[26u].z * _809)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1060).x + (-0.0500000007450580596923828125);
    float _1068 = (isnan(_1065) ? _993 : (isnan(_993) ? _1065 : max(_993, _1065))) - _911;
    float _2967 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1069 = isnan(1.0) ? _2967 : (isnan(_2967) ? 1.0 : min(_2967, 1.0));
    float _1070 = _911 + 0.5;
    float _2978 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _1084 = cbMtdParam._m0[17u].x * _809;
    float _1085 = cos(_1084);
    float _1086 = sin(_1084);
    uvec2 _1113 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, int(0u)));
    float _1164;
    if (_830)
    {
        float _1124 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1130 = (_737 * _722) - (_734 * _725);
        float _1133 = (_731 * _725) - (_737 * _719);
        float _1136 = (_734 * _719) - (_731 * _722);
        float _1162 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1133 * _1133) + (_1136 * _1136)) + (_1130 * _1130)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1124 * gl_WorldRayDirectionEXT.x, _1124 * gl_WorldRayDirectionEXT.y, _1124 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1164 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    }
    else
    {
        _1164 = 0.0;
    }
    vec4 _1166 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_1086 * cbMtdParam._m0[30u].w) + _738) + (cbMtdParam._m0[21u].w * _809)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_1085 * cbMtdParam._m0[31u].x) + _739) + (cbMtdParam._m0[22u].x * _809)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1164);
    float _1170 = _1166.z;
    float _1232;
    if (_830)
    {
        float _1192 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1198 = (_737 * _722) - (_734 * _725);
        float _1201 = (_731 * _725) - (_737 * _719);
        float _1204 = (_734 * _719) - (_731 * _722);
        float _1230 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1201 * _1201) + (_1204 * _1204)) + (_1198 * _1198)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1192 * gl_WorldRayDirectionEXT.x, _1192 * gl_WorldRayDirectionEXT.y, _1192 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1232 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
    }
    else
    {
        _1232 = 0.0;
    }
    vec4 _1234 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _809) + _738) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _809) + _739) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1232);
    float _1238 = _1234.z;
    float _1241 = (isnan(_1238) ? _1170 : (isnan(_1170) ? _1238 : max(_1170, _1238))) * (isnan(1.0) ? _2978 : (isnan(_2978) ? 1.0 : min(_2978, 1.0)));
    float _3004 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1242 = isnan(1.0) ? _3004 : (isnan(_3004) ? 1.0 : min(_3004, 1.0));
    float _1245 = (0.5 - _892) + (isnan(_1242) ? _1069 : (isnan(_1069) ? _1242 : max(_1069, _1242)));
    float _3020 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
    float _1246 = isnan(1.0) ? _3020 : (isnan(_3020) ? 1.0 : min(_3020, 1.0));
    float _1247 = _1246 * 0.5;
    float _3031 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _1257 = isnan(1.0) ? _3031 : (isnan(_3031) ? 1.0 : min(_3031, 1.0));
    float _1258 = _891 - _1257;
    float _3042 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
    float _1259 = isnan(1.0) ? _3042 : (isnan(_3042) ? 1.0 : min(_3042, 1.0));
    float _1359;
    if (_830)
    {
        float _1319 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1325 = (_737 * _722) - (_734 * _725);
        float _1328 = (_731 * _725) - (_737 * _719);
        float _1331 = (_734 * _719) - (_731 * _722);
        float _1357 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1328 * _1328) + (_1331 * _1331)) + (_1325 * _1325)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1319 * gl_WorldRayDirectionEXT.x, _1319 * gl_WorldRayDirectionEXT.y, _1319 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1359 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
    }
    else
    {
        _1359 = 0.0;
    }
    vec4 _1361 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _809) + (cbMtdParam._m0[30u].y * _1086)) + (cbMtdParam._m0[34u].y * _738)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _809) + (cbMtdParam._m0[30u].z * _1085)) + (cbMtdParam._m0[34u].z * _739)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1359);
    float _1386 = cbMtdParam._m0[37u].z * _654;
    uvec2 _1411 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, int(0u)));
    float _1462;
    if (_830)
    {
        float _1422 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1428 = (_737 * _722) - (_734 * _725);
        float _1431 = (_731 * _725) - (_737 * _719);
        float _1434 = (_734 * _719) - (_731 * _722);
        float _1460 = ((log2((((float(_1411.y) * 0.5) * float(_1411.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1431 * _1431) + (_1434 * _1434)) + (_1428 * _1428)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1422 * gl_WorldRayDirectionEXT.x, _1422 * gl_WorldRayDirectionEXT.y, _1422 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1462 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    }
    else
    {
        _1462 = 0.0;
    }
    float _1538;
    if (_830)
    {
        float _1498 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1504 = (_737 * _722) - (_734 * _725);
        float _1507 = (_731 * _725) - (_737 * _719);
        float _1510 = (_734 * _719) - (_731 * _722);
        float _1536 = ((log2((((float(_1411.y) * 0.5) * float(_1411.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1507 * _1507) + (_1510 * _1510)) + (_1504 * _1504)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1498 * gl_WorldRayDirectionEXT.x, _1498 * gl_WorldRayDirectionEXT.y, _1498 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1538 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
    }
    else
    {
        _1538 = 0.0;
    }
    float _1550 = ((((((_1361.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_1166.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_1234.w + (-0.5)))) + (((_1386 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _809)) * (textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * _738) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * _739) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1462).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _809) * (cbMtdParam._m0[40u].z + _1386)) * (textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * _738) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * _739) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1538).y + (-0.5)))) * (1.0 - _658);
    float _1623;
    if (_830)
    {
        float _1583 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1589 = (_737 * _722) - (_734 * _725);
        float _1592 = (_731 * _725) - (_737 * _719);
        float _1595 = (_734 * _719) - (_731 * _722);
        float _1621 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1592 * _1592) + (_1595 * _1595)) + (_1589 * _1589)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1583 * gl_WorldRayDirectionEXT.x, _1583 * gl_WorldRayDirectionEXT.y, _1583 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1623 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
    }
    else
    {
        _1623 = 0.0;
    }
    float _1634 = 1.0 - _892;
    float _1639 = ((isnan(0.550000011920928955078125) ? _1634 : (isnan(_1634) ? 0.550000011920928955078125 : max(_1634, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _1643 = ((_657 * (-0.00196078442968428134918212890625)) * _1639) + _1639;
    float _1647 = ((_660 * (-0.00274509820155799388885498046875)) * _1643) + _1643;
    float _1661 = ((((_1550 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * _658)) * _891)) + ((textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * _738) + (cbMtdParam._m0[22u].y * _809)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * _739) + (cbMtdParam._m0[22u].z * _809)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1623).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _809) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? _661 : (isnan(_661) ? 0.300000011920928955078125 : max(_661, 0.300000011920928955078125))))) + _1647) + cbMtdParam._m0[20u].z;
    float _1663 = _1661 * cbMtdParam._m0[20u].w;
    float _3083 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
    float _1664 = isnan(1.0) ? _3083 : (isnan(_3083) ? 1.0 : min(_3083, 1.0));
    float _1670 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_752, _754, _755, 0.0));
    float _3094 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
    float _1679 = exp2(log2((1.0 - (isnan(1.0) ? _3094 : (isnan(_3094) ? 1.0 : min(_3094, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _3105 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
    float _1680 = isnan(1.0) ? _3105 : (isnan(_3105) ? 1.0 : min(_3105, 1.0));
    float _1684 = ((_1247 + cbMtdParam._m0[9u].x) + (_1259 * cbMtdParam._m0[10u].x)) + ((_1664 * cbMtdParam._m0[11u].x) * _1680);
    float _1685 = ((_1247 + cbMtdParam._m0[9u].y) + (_1259 * cbMtdParam._m0[10u].y)) + ((_1664 * cbMtdParam._m0[11u].y) * _1680);
    float _1686 = ((_1247 + cbMtdParam._m0[9u].z) + (_1259 * cbMtdParam._m0[10u].z)) + ((_1664 * cbMtdParam._m0[11u].z) * _1680);
    float _1695 = 0.5 - ((isnan(1.0) ? _2930 : (isnan(_2930) ? 1.0 : min(_2930, 1.0))) * 0.439999997615814208984375);
    float _1697 = (_1684 + _1695) + ((0.5 - _1684) * _1257);
    float _1699 = (_1685 + _1695) + ((0.5 - _1685) * _1257);
    float _1701 = (_1686 + _1695) + ((0.5 - _1686) * _1257);
    float _1702 = _891 * 0.01200000010430812835693359375;
    float _1772;
    if (_830)
    {
        float _1732 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1738 = (_737 * _722) - (_734 * _725);
        float _1741 = (_731 * _725) - (_737 * _719);
        float _1744 = (_734 * _719) - (_731 * _722);
        float _1770 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1741 * _1741) + (_1744 * _1744)) + (_1738 * _1738)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1732 * gl_WorldRayDirectionEXT.x, _1732 * gl_WorldRayDirectionEXT.y, _1732 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1772 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
    }
    else
    {
        _1772 = 0.0;
    }
    float _1778 = (_891 * 0.300000011920928955078125) * textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _809) + _1702) + (cbMtdParam._m0[23u].w * _738)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _809) + _1702) + (cbMtdParam._m0[24u].x * _739)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1772).z;
    float _3121 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
    float _1779 = isnan(1.0) ? _3121 : (isnan(_3121) ? 1.0 : min(_3121, 1.0));
    float _1789 = (((1.0 - _1697) * _654) * _1779) + _1697;
    float _1790 = (((1.0 - _1699) * _654) * _1779) + _1699;
    float _1791 = (((1.0 - _1701) * _654) * _1779) + _1701;
    uvec2 _1825 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, int(0u)));
    float _1876;
    if (_830)
    {
        float _1836 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1842 = (_737 * _722) - (_734 * _725);
        float _1845 = (_731 * _725) - (_737 * _719);
        float _1848 = (_734 * _719) - (_731 * _722);
        float _1874 = ((log2((((float(_1825.y) * 0.5) * float(_1825.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1845 * _1845) + (_1848 * _1848)) + (_1842 * _1842)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1836 * gl_WorldRayDirectionEXT.x, _1836 * gl_WorldRayDirectionEXT.y, _1836 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1876 = isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0));
    }
    else
    {
        _1876 = 0.0;
    }
    vec4 _1878 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _809) + (cbMtdParam._m0[29u].w * _1086)) + (cbMtdParam._m0[28u].w * _922)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _809) + (cbMtdParam._m0[30u].x * _1085)) + (cbMtdParam._m0[29u].x * _923)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1876);
    float _1881 = _1878.y;
    float _1887 = (_1878.x * ((((float(_378 & 255u) * hit._m0.x) + (float(_282 & 255u) * _601)) + (float(_474 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) * cbMtdParam._m0[18u].w;
    float _1893 = _1881 * ((((float((_378 >> 8u) & 255u) * hit._m0.x) + (float((_282 >> 8u) & 255u) * _601)) + (float((_474 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1896 = ((isnan(cbMtdParam._m0[19u].y) ? _1893 : (isnan(_1893) ? cbMtdParam._m0[19u].y : max(_1893, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _1897 = isnan(_1896) ? _1887 : (isnan(_1887) ? _1896 : max(_1887, _1896));
    float _3147 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
    float _1898 = isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0));
    float _1905 = (_1898 * (1.0 - _1789)) + _1789;
    float _1906 = (_1898 * (1.0 - _1790)) + _1790;
    float _1907 = (_1898 * (1.0 - _1791)) + _1791;
    float _1979;
    if (_830)
    {
        float _1939 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1945 = (_737 * _722) - (_734 * _725);
        float _1948 = (_731 * _725) - (_737 * _719);
        float _1951 = (_734 * _719) - (_731 * _722);
        float _1977 = ((log2((((float(_1825.y) * 0.5) * float(_1825.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1948 * _1948) + (_1951 * _1951)) + (_1945 * _1945)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1939 * gl_WorldRayDirectionEXT.x, _1939 * gl_WorldRayDirectionEXT.y, _1939 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1979 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
    }
    else
    {
        _1979 = 0.0;
    }
    float _1992 = exp2(log2(cbMtdParam._m0[15u].z * _1634) * cbMtdParam._m0[17u].y);
    float _3163 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
    float _1993 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
    float _1994 = _1993 * textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _809) + (cbMtdParam._m0[28u].y * _1634)) + (cbMtdParam._m0[29u].y * _922)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _809) + (cbMtdParam._m0[28u].z * _1634)) + (cbMtdParam._m0[29u].z * _923)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1979).z;
    float _1997 = ((_1993 - _1994) * cbMtdParam._m0[18u].x) + _1994;
    float _2001 = _911 * ((((float((_378 >> 16u) & 255u) * hit._m0.x) + (float((_282 >> 16u) & 255u) * _601)) + (float((_474 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _2008 = ((_2001 * (1.0 - _1905)) * _1997) + _1905;
    float _2009 = ((_2001 * (1.0 - _1906)) * _1997) + _1906;
    float _2010 = ((_2001 * (1.0 - _1907)) * _1997) + _1907;
    float _2012 = cbMtdParam._m0[18u].z * _1881;
    float _2019 = (_2012 * (1.0 - _2008)) + _2008;
    float _2020 = (_2012 * (1.0 - _2009)) + _2009;
    float _2021 = (_2012 * (1.0 - _2010)) + _2010;
    float _2025 = _903 + 0.20000000298023223876953125;
    float _2027 = _2025 * 9.0;
    float _3174 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
    float _2032 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3174 : (isnan(_3174) ? 1.0 : min(_3174, 1.0)))) + cbMtdParam._m0[12u].x;
    float _2035 = (_903 + 0.099999986588954925537109375) * 2.5;
    float _3185 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
    float _2040 = ((cbMtdParam._m0[14u].z - _2032) * (isnan(1.0) ? _3185 : (isnan(_3185) ? 1.0 : min(_3185, 1.0)))) + _2032;
    float _2041 = _2019 + _1246;
    float _3196 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
    float _2046 = ((0.3499999940395355224609375 - _2040) * (isnan(1.0) ? _3196 : (isnan(_3196) ? 1.0 : min(_3196, 1.0)))) + _2040;
    float _2047 = _660 * 0.00196078442968428134918212890625;
    float _2060 = (_903 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3207 = isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0));
    float _2065 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _3207 : (isnan(_3207) ? 1.0 : min(_3207, 1.0)))) + cbMtdParam._m0[20u].y;
    float _2070 = (_2065 * (_889 + (-0.5))) + 0.5;
    float _2071 = (_2065 * (_890 + (-0.5))) + 0.5;
    float _3218 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _2072 = isnan(1.0) ? _3218 : (isnan(_3218) ? 1.0 : min(_3218, 1.0));
    uvec2 _2100 = uvec2(textureSize(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, int(0u)));
    float _2153;
    if (_830)
    {
        float _2111 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2117 = (_737 * _722) - (_734 * _725);
        float _2120 = (_731 * _725) - (_737 * _719);
        float _2123 = (_734 * _719) - (_731 * _722);
        float _2151 = ((log2((((float(_2100.y) * 0.5) * float(_2100.x)) * abs((((_456 - _264) * (_359 - _263)) - ((_455 - _263) * (_360 - _264))) * 2.384185791015625e-07)) / (sqrt(((_2120 * _2120) + (_2123 * _2123)) + (_2117 * _2117)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2111 * gl_WorldRayDirectionEXT.x, _2111 * gl_WorldRayDirectionEXT.y, _2111 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2153 = isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0));
    }
    else
    {
        _2153 = 0.0;
    }
    vec4 _2155 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((((((_359 * hit._m0.x) + (_263 * _601)) + (_455 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[25u].w) + (cbMtdParam._m0[31u].w * _809)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((((_360 * hit._m0.x) + (_264 * _601)) + (_456 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[26u].x) + (cbMtdParam._m0[32u].x * _809)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _2153);
    float _2163 = ((_1234.x + (-0.5)) * 0.5) + _1166.x;
    float _2164 = ((_1234.y + (-0.5)) * 0.5) + _1166.y;
    float _2236;
    if (_830)
    {
        float _2196 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2202 = (_737 * _722) - (_734 * _725);
        float _2205 = (_731 * _725) - (_737 * _719);
        float _2208 = (_734 * _719) - (_731 * _722);
        float _2234 = ((log2((((float(_2100.y) * 0.5) * float(_2100.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2205 * _2205) + (_2208 * _2208)) + (_2202 * _2202)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2196 * gl_WorldRayDirectionEXT.x, _2196 * gl_WorldRayDirectionEXT.y, _2196 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2236 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
    }
    else
    {
        _2236 = 0.0;
    }
    vec4 _2238 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * _738) + (cbMtdParam._m0[24u].w * _809)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * _739) + (cbMtdParam._m0[25u].x * _809)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _2236);
    float _2245 = _2025 * 12.0;
    float _3239 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2247 = 1.0 - (isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0)));
    float _2261 = cbMtdParam._m0[33u].y * _738;
    float _2262 = cbMtdParam._m0[33u].z * _739;
    float _2319;
    if (_830)
    {
        float _2279 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2285 = (_737 * _722) - (_734 * _725);
        float _2288 = (_731 * _725) - (_737 * _719);
        float _2291 = (_734 * _719) - (_731 * _722);
        float _2317 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2288 * _2288) + (_2291 * _2291)) + (_2285 * _2285)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2279 * gl_WorldRayDirectionEXT.x, _2279 * gl_WorldRayDirectionEXT.y, _2279 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2319 = isnan(0.0) ? _2317 : (isnan(_2317) ? 0.0 : max(_2317, 0.0));
    }
    else
    {
        _2319 = 0.0;
    }
    vec4 _2321 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_2261 + (cbMtdParam._m0[32u].w * _809)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_2262 + (cbMtdParam._m0[33u].x * _809)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2319);
    float _2345 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2346 = _2345 * gl_WorldRayDirectionEXT.x;
    float _2347 = _2345 * gl_WorldRayDirectionEXT.y;
    float _2348 = _2345 * gl_WorldRayDirectionEXT.z;
    float _2392;
    if (_830)
    {
        float _2358 = (_737 * _722) - (_734 * _725);
        float _2361 = (_731 * _725) - (_737 * _719);
        float _2364 = (_734 * _719) - (_731 * _722);
        float _2390 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2361 * _2361) + (_2364 * _2364)) + (_2358 * _2358)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2346, _2347, _2348), vec3(_752, _754, _755))));
        _2392 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
    }
    else
    {
        _2392 = 0.0;
    }
    vec4 _2394 = textureLod(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_2261 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _1259)) + (cbMtdParam._m0[33u].w * _809)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_2262 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _1259)) + (cbMtdParam._m0[34u].x * _809)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2392);
    float _2408 = (((0.5 - _2163) * 0.10999999940395355224609375) + _2163) + (((((((_2238.z + (-0.5)) * cbMtdParam._m0[15u].w) * _2247) + (-1.0)) + _2321.x) + _2394.x) * cbMtdParam._m0[15u].y);
    float _2409 = (((0.5 - _2164) * 0.10999999940395355224609375) + _2164) + (((((((_2238.w + (-0.5)) * cbMtdParam._m0[15u].w) * _2247) + (-1.0)) + _2321.y) + _2394.y) * cbMtdParam._m0[15u].y);
    float _2414 = ((_2155.x - _2408) * _903) + _2408;
    float _2415 = ((_2155.y - _2409) * _903) + _2409;
    float _2416 = _903 * 0.5;
    float _3260 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2417 = isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0));
    float _2428 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _1647);
    float _2435 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * _658);
    float _2437 = _2435 - (_2435 * _2417);
    float _2441 = (((((((0.5 - _889) * 0.60000002384185791015625) + _889) - _2070) * _2072) + _2070) + (_2437 * (_1361.x + (-0.5)))) + (((_2414 + (-0.5)) + ((0.5 - _2414) * _2417)) * _2428);
    float _2443 = (((((((0.5 - _890) * 0.60000002384185791015625) + _890) - _2071) * _2072) + _2071) + (_2437 * (_1361.y + (-0.5)))) + (((_2415 + (-0.5)) + ((0.5 - _2415) * _2417)) * _2428);
    float _2452 = (((_2047 * (0.5 - _2441)) + _2441) * 2.0) + (-1.0);
    float _2453 = (((_2047 * (0.5 - _2443)) + _2443) * 2.0) + (-1.0);
    float _2454 = dot(vec2(_2452, _2453), vec2(_2452, _2453));
    float _3271 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2459 = sqrt(1.0 - (isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0))));
    float _2462 = fma(_2459, _752, fma(_2453, _768, (_787 * _781) * _2452));
    float _2465 = fma(_2459, _754, fma(_2453, _769, (_787 * _782) * _2452));
    float _2468 = fma(_2459, _755, fma(_2453, _770, (_787 * _783) * _2452));
    float _2472 = inversesqrt(dot(vec3(_2462, _2465, _2468), vec3(_2462, _2465, _2468)));
    float _2473 = _2472 * _2462;
    float _2474 = _2472 * _2465;
    float _2475 = _2472 * _2468;
    float _2487 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2488 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2489 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2490 = (-0.0) - _2346;
    float _2491 = (-0.0) - _2347;
    float _2492 = (-0.0) - _2348;
    float _2498 = float(gl_LaunchIDEXT.x);
    float _2499 = float(gl_LaunchIDEXT.y);
    float _2502 = float(gl_LaunchSizeEXT.x);
    float _2516 = fract(fract(sin(dot(vec2(_2498 / _2502, _2499 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2529 = fract(fract(sin(dot(vec2((_2498 + 128.0) / _2502, (_2499 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _2539 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2540 = _2539.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2540, _2539.w, _2540, vec3(_2487, _2488, _2489), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2647;
    float _2648;
    float _2649;
    float _2650;
    float _2651;
    float _2652;
    if (_70._m0 == 0u)
    {
        float _2559 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2473, _2474, _2475));
        float _3282 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2562 = isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0));
        float _2581 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2046) * 0.949999988079071044921875);
        float _2582 = _2581 * _2581;
        float _2583 = g_sceneCB._m0[4u].x - _2346;
        float _2584 = g_sceneCB._m0[4u].y - _2347;
        float _2585 = g_sceneCB._m0[4u].z - _2348;
        float _2589 = inversesqrt(dot(vec3(_2583, _2584, _2585), vec3(_2583, _2584, _2585)));
        float _2590 = _2589 * _2583;
        float _2591 = _2589 * _2584;
        float _2592 = _2589 * _2585;
        float _2593 = dot(vec3(_2473, _2474, _2475), vec3(g_sceneCB._m0[4u].xyz));
        float _3293 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
        float _2596 = isnan(1.0) ? _3293 : (isnan(_3293) ? 1.0 : min(_3293, 1.0));
        float _2597 = dot(vec3(_2473, _2474, _2475), vec3(_2490, _2491, _2492));
        float _3304 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2600 = isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0));
        float _2601 = dot(vec3(_2473, _2474, _2475), vec3(_2590, _2591, _2592));
        float _3315 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
        float _2604 = isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0));
        float _2605 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2590, _2591, _2592));
        float _3326 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
        float _2609 = _2582 * _2582;
        float _2613 = ((_2604 * _2604) * (_2609 + (-1.0))) + 1.0;
        float _2625 = (exp2(log2(1.0 - (isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2627 = 1.0 - _2582;
        float _2638 = (0.5 / (((_2600 * ((_2596 * _2627) + _2582)) + 9.9999999392252902907785028219223e-09) + (((_2600 * _2627) + _2582) * _2596))) * _2596;
        float _3337 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
        float _2640 = (isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0))) * (_2609 / ((_2613 * _2613) * 3.141590118408203125));
        _2647 = ((_2019 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2562;
        _2648 = ((_2020 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2562;
        _2649 = ((_2021 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2562;
        _2650 = (_2625 * g_sceneCB._m0[5u].x) * _2640;
        _2651 = (_2625 * g_sceneCB._m0[5u].y) * _2640;
        _2652 = (_2625 * g_sceneCB._m0[5u].z) * _2640;
    }
    else
    {
        _2647 = 0.0;
        _2648 = 0.0;
        _2649 = 0.0;
        _2650 = 0.0;
        _2651 = 0.0;
        _2652 = 0.0;
    }
    bool _2654 = abs(_2474) < 0.89999997615814208984375;
    float _2655 = float(_2654);
    float _2656 = _2654 ? 0.0 : 1.0;
    float _2659 = (_2655 * _2475) - (_2656 * _2474);
    float _2660 = _2656 * _2473;
    float _2662 = (-0.0) - (_2473 * _2655);
    float _2666 = inversesqrt(dot(vec3(_2659, _2660, _2662), vec3(_2659, _2660, _2662)));
    float _2667 = _2659 * _2666;
    float _2668 = _2660 * _2666;
    float _2669 = _2666 * _2662;
    float _2672 = (_2668 * _2475) - (_2669 * _2474);
    float _2675 = (_2669 * _2473) - (_2667 * _2475);
    float _2678 = (_2667 * _2474) - (_2668 * _2473);
    float _2680;
    float _2688;
    float _2679 = 0.0;
    uint _2681 = 0u;
    float _2685;
    bool _2687;
    for (;;)
    {
        _2685 = (float(_2681) + _2516) * 0.03125;
        _2687 = _2681 == 0u;
        float frontier_phi_71_pred;
        if (_2687)
        {
            frontier_phi_71_pred = 0.0;
        }
        else
        {
            float _2821;
            float _2822;
            uint _2824;
            _2821 = 0.0;
            _2822 = 0.5;
            _2824 = _2681;
            float _2689;
            for (;;)
            {
                _2689 = ((_2824 & 1u) != 0u) ? (_2822 + _2821) : _2821;
                uint _2825 = _2824 >> 1u;
                if (_2825 == 0u)
                {
                    break;
                }
                else
                {
                    _2821 = _2689;
                    _2822 *= 0.5;
                    _2824 = _2825;
                }
            }
            frontier_phi_71_pred = _2689;
        }
        _2688 = frontier_phi_71_pred;
        float _2690 = _2688 + _2529;
        float _2694 = sqrt(_2685);
        float _2695 = ((_2690 > 1.0) ? (_2690 + (-1.0)) : _2690) * 6.283185482025146484375;
        float _2698 = cos(_2695) * _2694;
        float _2700 = sin(_2695) * _2694;
        float _2702 = sqrt(1.0 - _2685);
        float _2715 = ((_2702 * _2473) + (_2698 * _2672)) + (_2700 * _2667);
        float _2716 = ((_2702 * _2474) + (_2698 * _2675)) + (_2700 * _2668);
        float _2717 = ((_2702 * _2475) + (_2698 * _2678)) + (_2700 * _2669);
        _69._m0 = 1u;
        uvec4 _2721 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2722 = _2721.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2722, _2721.w, _2722, vec3(_2487, _2488, _2489), 9.9999997473787516355514526367188e-05, vec3(_2715, _2716, _2717), 10000.0, 1);
        float _2728 = dot(vec3(_2473, _2474, _2475), vec3(_2715, _2716, _2717));
        float _3348 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
        float _2731 = isnan(1.0) ? _3348 : (isnan(_3348) ? 1.0 : min(_3348, 1.0));
        _2680 = ((float(_69._m0 == 0u) * _2731) / (_2731 * 0.3183098733425140380859375)) + _2679;
        uint _2682 = _2681 + 1u;
        if (_2682 == 32u)
        {
            break;
        }
        else
        {
            _2679 = _2680;
            _2681 = _2682;
            continue;
        }
    }
    float _2738 = _2680 * 0.009947183541953563690185546875;
    float _2743 = dot(vec3(_2346, _2347, _2348), vec3(_2473, _2474, _2475)) * 2.0;
    vec4 _2757 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2346 - (_2743 * _2473), _2347 - (_2743 * _2474), _2348 - (_2743 * _2475)), 4.0 - (_2046 * 4.0));
    float _2762 = dot(vec3(_2490, _2491, _2492), vec3(_2473, _2474, _2475));
    float _3359 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
    float _2771 = (exp2(log2(1.0 - (isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2777 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2473, _2474, _2475), 0.0);
    float _2788 = (_2650 + _2647) + (((_2777.x * _2019) + (_2771 * _2757.x)) * _2738);
    float _2792 = (_2651 + _2648) + (((_2777.y * _2020) + (_2771 * _2757.y)) * _2738);
    float _2796 = (_2652 + _2649) + (((_2777.z * _2021) + (_2771 * _2757.z)) * _2738);
    float _3370 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
    float _3381 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
    float _3392 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
    bool _2804 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2815;
    _2815.x = _2804 ? ((_745 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0)));
    _2815.y = _2804 ? ((_748 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0)));
    _2815.z = _2804 ? ((_751 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3392 : (isnan(_3392) ? 1.0 : min(_3392, 1.0)));
    payload._m0 = _2815;
}


