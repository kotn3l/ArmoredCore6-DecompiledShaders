#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1816;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _163 >> 16u;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _182 = _176 * _168;
    uint _183 = _182 + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 16u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_210 + _182) >> 2u));
    uint _219 = _218.x;
    bool _233 = _177 == 0u;
    uint _234;
    if (_233)
    {
        _234 = _210 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 12u;
        }
        _234 = frontier_phi_9_10_ladder;
    }
    uint _238 = _178 ? (_234 + 4u) : _234;
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_182 + 4u) + _238) >> 2u));
    uint _243 = _242.x;
    float _247 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_243) >> int(16u))));
    uint _256 = _176 * _170;
    uint _257 = _256 + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_181)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 16u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 20u;
    }
    uvec4 _287 = texelFetch(l_geomAttrib_0, int((_281 + _256) >> 2u));
    uint _288 = _287.x;
    uint _300;
    if (_233)
    {
        _300 = _281 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _281 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _281 + 12u;
        }
        _300 = frontier_phi_16_17_ladder;
    }
    uint _304 = _178 ? (_300 + 4u) : _300;
    uvec4 _308 = texelFetch(l_geomAttrib_0, int(((_256 + 4u) + _304) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _322 = _176 * _171;
    uint _323 = _322 + 12u;
    uint _344;
    uint _345;
    uint _346;
    uint _347;
    if (_181)
    {
        uvec4 _325 = texelFetch(l_geomAttrib_0, int(_323 >> 2u));
        uint _326 = _325.x;
        _344 = _326 & 255u;
        _345 = (_326 >> 8u) & 255u;
        _346 = (_326 >> 16u) & 255u;
        _347 = 16u;
    }
    else
    {
        uint _332 = _323 >> 2u;
        uvec2 _338 = uvec2(texelFetch(l_geomAttrib_0, int(_332)).x, texelFetch(l_geomAttrib_0, int(_332 + 1u)).x);
        uint _339 = _338.x;
        _344 = _339 & 65535u;
        _345 = _339 >> 16u;
        _346 = _338.y & 65535u;
        _347 = 20u;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int((_347 + _322) >> 2u));
    uint _354 = _353.x;
    uint _366;
    if (_233)
    {
        _366 = _347 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _347 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _347 + 12u;
        }
        _366 = frontier_phi_23_24_ladder;
    }
    uint _370 = _178 ? (_366 + 4u) : _366;
    uvec4 _374 = texelFetch(l_geomAttrib_0, int(((_322 + 4u) + _370) >> 2u));
    uint _375 = _374.x;
    float _379 = float(int(uint(int(_375 << 16u) >> int(16u))));
    float _380 = float(int(uint(int(_375) >> int(16u))));
    bool _389 = _127.z == 0u;
    float _425;
    float _426;
    float _427;
    if (_389)
    {
        uint _392 = _168 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _168 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_389)
    {
        uint _430 = _170 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _170 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_389)
    {
        uint _468 = _171 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _171 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _506 = (1.0 - hit._m0.x) - hit._m0.y;
    float _547 = (_313 - _247) * 0.00048828125;
    float _549 = (_314 - _248) * 0.00048828125;
    float _552 = (_379 - _247) * 0.00048828125;
    float _553 = (_380 - _248) * 0.00048828125;
    float _575 = _463 - _425;
    float _576 = _464 - _426;
    float _577 = _465 - _427;
    float _580 = fma(_577, gl_ObjectToWorldEXT[2u].x, fma(_576, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _575));
    float _583 = fma(_577, gl_ObjectToWorldEXT[2u].y, fma(_576, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _575));
    float _586 = fma(_577, gl_ObjectToWorldEXT[2u].z, fma(_576, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _575));
    float _587 = _501 - _425;
    float _588 = _502 - _426;
    float _589 = _503 - _427;
    float _592 = fma(_589, gl_ObjectToWorldEXT[2u].x, fma(_588, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _587));
    float _595 = fma(_589, gl_ObjectToWorldEXT[2u].y, fma(_588, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _587));
    float _598 = fma(_589, gl_ObjectToWorldEXT[2u].z, fma(_588, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _587));
    float _599 = (((_313 * hit._m0.x) + (_247 * _506)) + (_379 * hit._m0.y)) * 0.00048828125;
    float _600 = (((_314 * hit._m0.x) + (_248 * _506)) + (_380 * hit._m0.y)) * 0.00048828125;
    float _604 = (((float(_207) * _506) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _607 = (((float(_208) * _506) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_345) * hit._m0.y);
    float _610 = (((float(_209) * _506) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _611 = _604 * 0.0078740157186985015869140625;
    float _613 = _607 * 0.0078740157186985015869140625;
    float _614 = _610 * 0.0078740157186985015869140625;
    float _627 = ((((float(_219 & 255u) * _506) + (-127.0)) + (float(_288 & 255u) * hit._m0.x)) + (float(_354 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _628 = ((((float((_219 >> 8u) & 255u) * _506) + (-127.0)) + (float((_288 >> 8u) & 255u) * hit._m0.x)) + (float((_354 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float((_219 >> 16u) & 255u) * _506) + (-127.0)) + (float((_288 >> 16u) & 255u) * hit._m0.x)) + (float((_354 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float(_219 >> 24u) * _506) + (-127.0)) + (float(_288 >> 24u) * hit._m0.x)) + (float(_354 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _640 = ((_628 * _614) - (_629 * _613)) * _630;
    float _641 = ((_629 * _611) - (_627 * _614)) * _630;
    float _642 = ((_627 * _613) - (_628 * _611)) * _630;
    float _646 = inversesqrt(dot(vec3(_640, _641, _642), vec3(_640, _641, _642)));
    float _647 = _646 * _640;
    float _648 = _646 * _641;
    float _649 = _646 * _642;
    uvec2 _671 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4, int(0u)));
    bool _676 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _729;
    if (_676)
    {
        float _687 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _693 = (_598 * _583) - (_595 * _586);
        float _696 = (_592 * _586) - (_598 * _580);
        float _699 = (_595 * _580) - (_592 * _583);
        float _726 = ((log2((((float(_671.y) * 0.5) * float(_671.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_696 * _696) + (_699 * _699)) + (_693 * _693)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_687 * gl_WorldRayDirectionEXT.x, _687 * gl_WorldRayDirectionEXT.y, _687 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _729 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    }
    else
    {
        _729 = 0.0;
    }
    float _746 = ((cbMtdParam._m0[12u].x * (-1.39999997615814208984375)) * ((textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _599) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _600) + cbTextureTilingScale._m0[5u].w), _729).x + (-1.0)) + ((((1.0 - ((_506 * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_182 + 8u) + _238) >> 2u)).x & 255u))) - ((hit._m0.x * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_256 + 8u) + _304) >> 2u)).x & 255u))) - ((hit._m0.y * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_322 + 8u) + _370) >> 2u)).x & 255u))) * 2.0))) + 1.0;
    float _1911 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _747 = isnan(1.0) ? _1911 : (isnan(_1911) ? 1.0 : min(_1911, 1.0));
    float _761 = (1.0 - cbMtdParam._m0[12u].y) * (1.0 / cbMtdParam._m0[13u].y);
    float _1922 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _762 = isnan(1.0) ? _1922 : (isnan(_1922) ? 1.0 : min(_1922, 1.0));
    uvec2 _774 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_10, int(0u)));
    float _825;
    if (_676)
    {
        float _785 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _791 = (_598 * _583) - (_595 * _586);
        float _794 = (_592 * _586) - (_598 * _580);
        float _797 = (_595 * _580) - (_592 * _583);
        float _823 = ((log2((((float(_774.y) * 0.5) * float(_774.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_794 * _794) + (_797 * _797)) + (_791 * _791)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_785 * gl_WorldRayDirectionEXT.x, _785 * gl_WorldRayDirectionEXT.y, _785 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _825 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    }
    else
    {
        _825 = 0.0;
    }
    vec4 _828 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _599) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _600) + cbTextureTilingScale._m0[2u].w), _825);
    uvec2 _844 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_3, int(0u)));
    float _895;
    if (_676)
    {
        float _855 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _861 = (_598 * _583) - (_595 * _586);
        float _864 = (_592 * _586) - (_598 * _580);
        float _867 = (_595 * _580) - (_592 * _583);
        float _893 = ((log2((((float(_844.y) * 0.5) * float(_844.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_864 * _864) + (_867 * _867)) + (_861 * _861)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_855 * gl_WorldRayDirectionEXT.x, _855 * gl_WorldRayDirectionEXT.y, _855 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _895 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    }
    else
    {
        _895 = 0.0;
    }
    vec4 _897 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _599) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _600) + cbTextureTilingScale._m0[4u].w), _895);
    float _899 = _897.x;
    float _900 = _897.y;
    float _901 = _897.z;
    uvec2 _931 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2, int(0u)));
    float _982;
    if (_676)
    {
        float _942 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _948 = (_598 * _583) - (_595 * _586);
        float _951 = (_592 * _586) - (_598 * _580);
        float _954 = (_595 * _580) - (_592 * _583);
        float _980 = ((log2((((float(_931.y) * 0.5) * float(_931.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_951 * _951) + (_954 * _954)) + (_948 * _948)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_942 * gl_WorldRayDirectionEXT.x, _942 * gl_WorldRayDirectionEXT.y, _942 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _982 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    }
    else
    {
        _982 = 0.0;
    }
    vec4 _984 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _599) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _600) + cbTextureTilingScale._m0[3u].w), _982);
    float _986 = _984.x;
    float _987 = _984.y;
    float _988 = _984.z;
    uvec2 _1000 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9, int(0u)));
    float _1051;
    if (_676)
    {
        float _1011 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1017 = (_598 * _583) - (_595 * _586);
        float _1020 = (_592 * _586) - (_598 * _580);
        float _1023 = (_595 * _580) - (_592 * _583);
        float _1049 = ((log2((((float(_1000.y) * 0.5) * float(_1000.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1020 * _1020) + (_1023 * _1023)) + (_1017 * _1017)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1011 * gl_WorldRayDirectionEXT.x, _1011 * gl_WorldRayDirectionEXT.y, _1011 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1051 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    }
    else
    {
        _1051 = 0.0;
    }
    vec4 _1053 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _599) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _600) + cbTextureTilingScale._m0[9u].w), _1051);
    float _1067 = (((_1053.x - _986) * _762) + _986) * cbMtdParam._m0[10u].x;
    float _1068 = (((_1053.y - _987) * _762) + _987) * cbMtdParam._m0[10u].y;
    float _1069 = (((_1053.z - _988) * _762) + _988) * cbMtdParam._m0[10u].z;
    float _1076 = ((((((_828.x - _899) * _762) + _899) * cbMtdParam._m0[11u].x) - _1067) * _747) + _1067;
    float _1077 = ((((((_828.y - _900) * _762) + _900) * cbMtdParam._m0[11u].y) - _1068) * _747) + _1068;
    float _1078 = ((((((_828.z - _901) * _762) + _901) * cbMtdParam._m0[11u].z) - _1069) * _747) + _1069;
    uvec2 _1096 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0, int(0u)));
    float _1147;
    if (_676)
    {
        float _1107 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1113 = (_598 * _583) - (_595 * _586);
        float _1116 = (_592 * _586) - (_598 * _580);
        float _1119 = (_595 * _580) - (_592 * _583);
        float _1145 = ((log2((((float(_1096.y) * 0.5) * float(_1096.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1116 * _1116) + (_1119 * _1119)) + (_1113 * _1113)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1107 * gl_WorldRayDirectionEXT.x, _1107 * gl_WorldRayDirectionEXT.y, _1107 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1147 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    }
    else
    {
        _1147 = 0.0;
    }
    vec4 _1150 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _599) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _600) + cbTextureTilingScale._m0[0u].w), _1147);
    float _1152 = _1150.x;
    float _1153 = _1150.y;
    float _1154 = _1150.z;
    uvec2 _1166 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7, int(0u)));
    float _1217;
    if (_676)
    {
        float _1177 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1183 = (_598 * _583) - (_595 * _586);
        float _1186 = (_592 * _586) - (_598 * _580);
        float _1189 = (_595 * _580) - (_592 * _583);
        float _1215 = ((log2((((float(_1166.y) * 0.5) * float(_1166.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1186 * _1186) + (_1189 * _1189)) + (_1183 * _1183)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1177 * gl_WorldRayDirectionEXT.x, _1177 * gl_WorldRayDirectionEXT.y, _1177 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1217 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    }
    else
    {
        _1217 = 0.0;
    }
    vec4 _1219 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _599) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _600) + cbTextureTilingScale._m0[7u].w), _1217);
    float _1230 = ((_1219.x - _1152) * _762) + _1152;
    float _1231 = ((_1219.y - _1153) * _762) + _1153;
    float _1232 = ((_1219.z - _1154) * _762) + _1154;
    uvec2 _1244 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1, int(0u)));
    float _1295;
    if (_676)
    {
        float _1255 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1261 = (_598 * _583) - (_595 * _586);
        float _1264 = (_592 * _586) - (_598 * _580);
        float _1267 = (_595 * _580) - (_592 * _583);
        float _1293 = ((log2((((float(_1244.y) * 0.5) * float(_1244.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1264 * _1264) + (_1267 * _1267)) + (_1261 * _1261)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1255 * gl_WorldRayDirectionEXT.x, _1255 * gl_WorldRayDirectionEXT.y, _1255 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1295 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
    }
    else
    {
        _1295 = 0.0;
    }
    vec4 _1297 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _599) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _600) + cbTextureTilingScale._m0[1u].w), _1295);
    float _1308 = ((_1297.x - _1230) * _747) + _1230;
    float _1309 = ((_1297.y - _1231) * _747) + _1231;
    float _1313 = (_1308 * 2.0) + (-1.0);
    float _1314 = (_1309 * 2.0) + (-1.0);
    float _1315 = dot(vec2(_1313, _1314), vec2(_1313, _1314));
    float _1968 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
    float _1320 = sqrt(1.0 - (isnan(1.0) ? _1968 : (isnan(_1968) ? 1.0 : min(_1968, 1.0))));
    float _1323 = fma(_1320, _611, fma(_1314, _627, _1313 * _647));
    float _1326 = fma(_1320, _613, fma(_1314, _628, _1313 * _648));
    float _1329 = fma(_1320, _614, fma(_1314, _629, _1313 * _649));
    float _1333 = inversesqrt(dot(vec3(_1323, _1326, _1329), vec3(_1323, _1326, _1329)));
    float _1341 = cbMtdParam._m0[13u].x + dot(vec4(_1333 * _1323, _1333 * _1326, _1333 * _1329, 0.0), vec4(cbMtdParam._m0[14u].yzw, 0.0));
    float _1979 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
    float _1342 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    float _1349 = (_1342 * (cbMtdParam._m0[9u].x - _1076)) + _1076;
    float _1350 = (_1342 * (cbMtdParam._m0[9u].y - _1077)) + _1077;
    float _1351 = (_1342 * (cbMtdParam._m0[9u].z - _1078)) + _1078;
    float _1353 = (((_1297.z - _1232) * _747) + _1232) + cbMtdParam._m0[12u].w;
    float _1362 = (((cbMtdParam._m0[13u].z * _1308) - _1308) * _762) + _1308;
    float _1363 = (((cbMtdParam._m0[13u].w * _1309) - _1309) * _762) + _1309;
    uvec2 _1382 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5, int(0u)));
    float _1386 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1387 = _1386 * gl_WorldRayDirectionEXT.x;
    float _1388 = _1386 * gl_WorldRayDirectionEXT.y;
    float _1389 = _1386 * gl_WorldRayDirectionEXT.z;
    float _1433;
    if (_676)
    {
        float _1399 = (_598 * _583) - (_595 * _586);
        float _1402 = (_592 * _586) - (_598 * _580);
        float _1405 = (_595 * _580) - (_592 * _583);
        float _1431 = ((log2((((float(_1382.y) * 0.5) * float(_1382.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1402 * _1402) + (_1405 * _1405)) + (_1399 * _1399)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1387, _1388, _1389), vec3(_611, _613, _614))));
        _1433 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
    }
    else
    {
        _1433 = 0.0;
    }
    vec4 _1435 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _599) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _600) + cbTextureTilingScale._m0[6u].w), _1433);
    float _1448 = (((((_1230 - _1362) * _1342) + _1362) + ((_1435.x + (-0.5)) * cbMtdParam._m0[12u].z)) * 2.0) + (-1.0);
    float _1449 = (((((_1231 - _1363) * _1342) + _1363) + ((_1435.y + (-0.5)) * cbMtdParam._m0[12u].z)) * 2.0) + (-1.0);
    float _1450 = dot(vec2(_1448, _1449), vec2(_1448, _1449));
    float _1995 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
    float _1455 = sqrt(1.0 - (isnan(1.0) ? _1995 : (isnan(_1995) ? 1.0 : min(_1995, 1.0))));
    float _1458 = fma(_1455, _611, fma(_1449, _627, _1448 * _647));
    float _1461 = fma(_1455, _613, fma(_1449, _628, _1448 * _648));
    float _1464 = fma(_1455, _614, fma(_1449, _629, _1448 * _649));
    float _1468 = inversesqrt(dot(vec3(_1458, _1461, _1464), vec3(_1458, _1461, _1464)));
    float _1469 = _1468 * _1458;
    float _1470 = _1468 * _1461;
    float _1471 = _1468 * _1464;
    float _1483 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1484 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1485 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1486 = (-0.0) - _1387;
    float _1488 = (-0.0) - _1388;
    float _1489 = (-0.0) - _1389;
    float _1495 = float(gl_LaunchIDEXT.x);
    float _1496 = float(gl_LaunchIDEXT.y);
    float _1499 = float(gl_LaunchSizeEXT.x);
    float _1513 = fract(fract(sin(dot(vec2(_1495 / _1499, _1496 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1526 = fract(fract(sin(dot(vec2((_1495 + 128.0) / _1499, (_1496 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1536 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1537 = _1536.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1537, _1536.w, _1537, vec3(_1483, _1484, _1485), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1645;
    float _1646;
    float _1647;
    float _1648;
    float _1649;
    float _1650;
    if (_69._m0 == 0u)
    {
        float _1557 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1469, _1470, _1471));
        float _2006 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1560 = isnan(1.0) ? _2006 : (isnan(_2006) ? 1.0 : min(_2006, 1.0));
        float _1579 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1353) * 0.949999988079071044921875);
        float _1580 = _1579 * _1579;
        float _1581 = g_sceneCB._m0[4u].x - _1387;
        float _1582 = g_sceneCB._m0[4u].y - _1388;
        float _1583 = g_sceneCB._m0[4u].z - _1389;
        float _1587 = inversesqrt(dot(vec3(_1581, _1582, _1583), vec3(_1581, _1582, _1583)));
        float _1588 = _1587 * _1581;
        float _1589 = _1587 * _1582;
        float _1590 = _1587 * _1583;
        float _1591 = dot(vec3(_1469, _1470, _1471), vec3(g_sceneCB._m0[4u].xyz));
        float _2017 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1594 = isnan(1.0) ? _2017 : (isnan(_2017) ? 1.0 : min(_2017, 1.0));
        float _1595 = dot(vec3(_1469, _1470, _1471), vec3(_1486, _1488, _1489));
        float _2028 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1598 = isnan(1.0) ? _2028 : (isnan(_2028) ? 1.0 : min(_2028, 1.0));
        float _1599 = dot(vec3(_1469, _1470, _1471), vec3(_1588, _1589, _1590));
        float _2039 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1602 = isnan(1.0) ? _2039 : (isnan(_2039) ? 1.0 : min(_2039, 1.0));
        float _1603 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1588, _1589, _1590));
        float _2050 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0));
        float _1607 = _1580 * _1580;
        float _1611 = ((_1602 * _1602) * (_1607 + (-1.0))) + 1.0;
        float _1623 = (exp2(log2(1.0 - (isnan(1.0) ? _2050 : (isnan(_2050) ? 1.0 : min(_2050, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1625 = 1.0 - _1580;
        float _1636 = (0.5 / (((_1598 * ((_1594 * _1625) + _1580)) + 9.9999999392252902907785028219223e-09) + (((_1598 * _1625) + _1580) * _1594))) * _1594;
        float _2061 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1638 = (isnan(1.0) ? _2061 : (isnan(_2061) ? 1.0 : min(_2061, 1.0))) * (_1607 / ((_1611 * _1611) * 3.141590118408203125));
        _1645 = ((_1349 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1560;
        _1646 = ((_1350 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1560;
        _1647 = ((_1351 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1560;
        _1648 = (_1623 * g_sceneCB._m0[5u].x) * _1638;
        _1649 = (_1623 * g_sceneCB._m0[5u].y) * _1638;
        _1650 = (_1623 * g_sceneCB._m0[5u].z) * _1638;
    }
    else
    {
        _1645 = 0.0;
        _1646 = 0.0;
        _1647 = 0.0;
        _1648 = 0.0;
        _1649 = 0.0;
        _1650 = 0.0;
    }
    bool _1652 = abs(_1470) < 0.89999997615814208984375;
    float _1654 = float(_1652);
    float _1655 = _1652 ? 0.0 : 1.0;
    float _1658 = (_1654 * _1471) - (_1655 * _1470);
    float _1659 = _1655 * _1469;
    float _1661 = (-0.0) - (_1469 * _1654);
    float _1665 = inversesqrt(dot(vec3(_1658, _1659, _1661), vec3(_1658, _1659, _1661)));
    float _1666 = _1658 * _1665;
    float _1667 = _1659 * _1665;
    float _1668 = _1665 * _1661;
    float _1671 = (_1667 * _1471) - (_1668 * _1470);
    float _1674 = (_1668 * _1469) - (_1666 * _1471);
    float _1677 = (_1666 * _1470) - (_1667 * _1469);
    float _1679;
    float _1687;
    float _1678 = 0.0;
    uint _1680 = 0u;
    float _1684;
    bool _1686;
    for (;;)
    {
        _1684 = (float(_1680) + _1513) * 0.03125;
        _1686 = _1680 == 0u;
        float frontier_phi_57_pred;
        if (_1686)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1821;
            float _1822;
            uint _1824;
            _1821 = 0.0;
            _1822 = 0.5;
            _1824 = _1680;
            float _1688;
            for (;;)
            {
                _1688 = ((_1824 & 1u) != 0u) ? (_1822 + _1821) : _1821;
                uint _1825 = _1824 >> 1u;
                if (_1825 == 0u)
                {
                    break;
                }
                else
                {
                    _1821 = _1688;
                    _1822 *= 0.5;
                    _1824 = _1825;
                }
            }
            frontier_phi_57_pred = _1688;
        }
        _1687 = frontier_phi_57_pred;
        float _1689 = _1687 + _1526;
        float _1693 = sqrt(_1684);
        float _1694 = ((_1689 > 1.0) ? (_1689 + (-1.0)) : _1689) * 6.283185482025146484375;
        float _1697 = cos(_1694) * _1693;
        float _1699 = sin(_1694) * _1693;
        float _1701 = sqrt(1.0 - _1684);
        float _1714 = ((_1701 * _1469) + (_1697 * _1671)) + (_1699 * _1666);
        float _1715 = ((_1701 * _1470) + (_1697 * _1674)) + (_1699 * _1667);
        float _1716 = ((_1701 * _1471) + (_1697 * _1677)) + (_1699 * _1668);
        _68._m0 = 1u;
        uvec4 _1720 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1721 = _1720.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1721, _1720.w, _1721, vec3(_1483, _1484, _1485), 9.9999997473787516355514526367188e-05, vec3(_1714, _1715, _1716), 10000.0, 1);
        float _1727 = dot(vec3(_1469, _1470, _1471), vec3(_1714, _1715, _1716));
        float _2072 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1730 = isnan(1.0) ? _2072 : (isnan(_2072) ? 1.0 : min(_2072, 1.0));
        _1679 = ((float(_68._m0 == 0u) * _1730) / (_1730 * 0.3183098733425140380859375)) + _1678;
        uint _1681 = _1680 + 1u;
        if (_1681 == 32u)
        {
            break;
        }
        else
        {
            _1678 = _1679;
            _1680 = _1681;
            continue;
        }
    }
    float _1738 = _1679 * 0.009947183541953563690185546875;
    float _1743 = dot(vec3(_1387, _1388, _1389), vec3(_1469, _1470, _1471)) * 2.0;
    vec4 _1757 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1387 - (_1743 * _1469), _1388 - (_1743 * _1470), _1389 - (_1743 * _1471)), 4.0 - (_1353 * 4.0));
    float _1762 = dot(vec3(_1486, _1488, _1489), vec3(_1469, _1470, _1471));
    float _2083 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
    float _1771 = (exp2(log2(1.0 - (isnan(1.0) ? _2083 : (isnan(_2083) ? 1.0 : min(_2083, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1777 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1469, _1470, _1471), 0.0);
    float _1788 = (_1648 + _1645) + (((_1777.x * _1349) + (_1771 * _1757.x)) * _1738);
    float _1792 = (_1649 + _1646) + (((_1777.y * _1350) + (_1771 * _1757.y)) * _1738);
    float _1796 = (_1650 + _1647) + (((_1777.z * _1351) + (_1771 * _1757.z)) * _1738);
    float _2094 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
    float _2105 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
    float _2116 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
    bool _1804 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1815;
    _1815.x = _1804 ? ((_604 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2094 : (isnan(_2094) ? 1.0 : min(_2094, 1.0)));
    _1815.y = _1804 ? ((_607 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2105 : (isnan(_2105) ? 1.0 : min(_2105, 1.0)));
    _1815.z = _1804 ? ((_610 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2116 : (isnan(_2116) ? 1.0 : min(_2116, 1.0)));
    payload._m0 = _1815;
}


