#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D G_Sub_monitor_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _948;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _157;
    uint _159;
    uint _160;
    if (_117.x == 0u)
    {
        uint _125 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _134 = uvec3(texelFetch(l_geomIndexBuffer, int(_125)).x, texelFetch(l_geomIndexBuffer, int(_125 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_125 + 2u)).x);
        _157 = _134.x;
        _159 = _134.y;
        _160 = _134.z;
    }
    else
    {
        uint _138 = uint(gl_PrimitiveID) * 6u;
        uint _140 = _138 & 4294967292u;
        uint _143 = (_118 + _140) >> 2u;
        uvec2 _150 = uvec2(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x);
        uint _151 = _150.x;
        uint _152 = _150.y;
        uint _154 = _151 >> 16u;
        uint _155 = _152 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_140 == _138)
        {
            frontier_phi_3_2_ladder = _155;
            frontier_phi_3_2_ladder_1 = _154;
            frontier_phi_3_2_ladder_2 = _151 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _152 >> 16u;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _154;
        }
        _157 = frontier_phi_3_2_ladder_2;
        _159 = frontier_phi_3_2_ladder_1;
        _160 = frontier_phi_3_2_ladder;
    }
    uvec4 _164 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _165 = _164.x;
    uint _166 = _164.z;
    bool _167 = _166 != 0u;
    bool _169 = _117.w == 0u;
    bool _170 = _167 || _169;
    uint _172 = (_165 * _157) + 12u;
    uint _196;
    uint _197;
    uint _198;
    uint _199;
    if (_170)
    {
        uvec4 _175 = texelFetch(l_geomAttrib_0, int(_172 >> 2u));
        uint _176 = _175.x;
        _196 = _176 & 255u;
        _197 = (_176 >> 8u) & 255u;
        _198 = (_176 >> 16u) & 255u;
        _199 = 20u;
    }
    else
    {
        uint _184 = _172 >> 2u;
        uvec2 _190 = uvec2(texelFetch(l_geomAttrib_0, int(_184)).x, texelFetch(l_geomAttrib_0, int(_184 + 1u)).x);
        uint _191 = _190.x;
        _196 = _191 & 65535u;
        _197 = _191 >> 16u;
        _198 = _190.y & 65535u;
        _199 = 24u;
    }
    bool _205 = _166 == 0u;
    uint _206;
    if (_205)
    {
        _206 = _199;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_169)
        {
            frontier_phi_9_10_ladder = _199 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _199 + 8u;
        }
        _206 = frontier_phi_9_10_ladder;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((((_165 * _157) + 4u) + (_167 ? (_206 + 4u) : _206)) >> 2u));
    uint _218 = _217.x;
    float _222 = float(int(uint(int(_218 << 16u) >> int(16u))));
    float _223 = float(int(uint(int(_218) >> int(16u))));
    uint _225 = (_165 * _159) + 12u;
    uint _246;
    uint _247;
    uint _248;
    uint _249;
    if (_170)
    {
        uvec4 _227 = texelFetch(l_geomAttrib_0, int(_225 >> 2u));
        uint _228 = _227.x;
        _246 = _228 & 255u;
        _247 = (_228 >> 8u) & 255u;
        _248 = (_228 >> 16u) & 255u;
        _249 = 20u;
    }
    else
    {
        uint _234 = _225 >> 2u;
        uvec2 _240 = uvec2(texelFetch(l_geomAttrib_0, int(_234)).x, texelFetch(l_geomAttrib_0, int(_234 + 1u)).x);
        uint _241 = _240.x;
        _246 = _241 & 65535u;
        _247 = _241 >> 16u;
        _248 = _240.y & 65535u;
        _249 = 24u;
    }
    uint _253;
    if (_205)
    {
        _253 = _249;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_169)
        {
            frontier_phi_16_17_ladder = _249 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _249 + 8u;
        }
        _253 = frontier_phi_16_17_ladder;
    }
    uvec4 _262 = texelFetch(l_geomAttrib_0, int((((_165 * _159) + 4u) + (_167 ? (_253 + 4u) : _253)) >> 2u));
    uint _263 = _262.x;
    float _267 = float(int(uint(int(_263 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_263) >> int(16u))));
    uint _270 = (_165 * _160) + 12u;
    uint _291;
    uint _292;
    uint _293;
    uint _294;
    if (_170)
    {
        uvec4 _272 = texelFetch(l_geomAttrib_0, int(_270 >> 2u));
        uint _273 = _272.x;
        _291 = _273 & 255u;
        _292 = (_273 >> 8u) & 255u;
        _293 = (_273 >> 16u) & 255u;
        _294 = 20u;
    }
    else
    {
        uint _279 = _270 >> 2u;
        uvec2 _285 = uvec2(texelFetch(l_geomAttrib_0, int(_279)).x, texelFetch(l_geomAttrib_0, int(_279 + 1u)).x);
        uint _286 = _285.x;
        _291 = _286 & 65535u;
        _292 = _286 >> 16u;
        _293 = _285.y & 65535u;
        _294 = 24u;
    }
    uint _298;
    if (_205)
    {
        _298 = _294;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_169)
        {
            frontier_phi_23_24_ladder = _294 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _294 + 8u;
        }
        _298 = frontier_phi_23_24_ladder;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int((((_165 * _160) + 4u) + (_167 ? (_298 + 4u) : _298)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    bool _315 = _117.z == 0u;
    float _351;
    float _352;
    float _353;
    if (_315)
    {
        uint _318 = _157 * 3u;
        uvec3 _327 = uvec3(texelFetch(l_geomPositionBuffer, int(_318)).x, texelFetch(l_geomPositionBuffer, int(_318 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_318 + 2u)).x);
        _351 = uintBitsToFloat(_327.x);
        _352 = uintBitsToFloat(_327.y);
        _353 = uintBitsToFloat(_327.z);
    }
    else
    {
        uint _335 = _157 * 2u;
        uvec2 _341 = uvec2(texelFetch(l_geomPositionBuffer, int(_335)).x, texelFetch(l_geomPositionBuffer, int(_335 + 1u)).x);
        uint _342 = _341.x;
        _351 = unpackHalf2x16(_342).x;
        _352 = unpackHalf2x16(_342 >> 16u).x;
        _353 = unpackHalf2x16(_341.y).x;
    }
    float _389;
    float _390;
    float _391;
    if (_315)
    {
        uint _356 = _159 * 3u;
        uvec3 _365 = uvec3(texelFetch(l_geomPositionBuffer, int(_356)).x, texelFetch(l_geomPositionBuffer, int(_356 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_356 + 2u)).x);
        _389 = uintBitsToFloat(_365.x);
        _390 = uintBitsToFloat(_365.y);
        _391 = uintBitsToFloat(_365.z);
    }
    else
    {
        uint _373 = _159 * 2u;
        uvec2 _379 = uvec2(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x);
        uint _380 = _379.x;
        _389 = unpackHalf2x16(_380).x;
        _390 = unpackHalf2x16(_380 >> 16u).x;
        _391 = unpackHalf2x16(_379.y).x;
    }
    float _427;
    float _428;
    float _429;
    if (_315)
    {
        uint _394 = _160 * 3u;
        uvec3 _403 = uvec3(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_394 + 2u)).x);
        _427 = uintBitsToFloat(_403.x);
        _428 = uintBitsToFloat(_403.y);
        _429 = uintBitsToFloat(_403.z);
    }
    else
    {
        uint _411 = _160 * 2u;
        uvec2 _417 = uvec2(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x);
        uint _418 = _417.x;
        _427 = unpackHalf2x16(_418).x;
        _428 = unpackHalf2x16(_418 >> 16u).x;
        _429 = unpackHalf2x16(_417.y).x;
    }
    float _432 = (1.0 - hit._m0.x) - hit._m0.y;
    float _473 = _389 - _351;
    float _474 = _390 - _352;
    float _475 = _391 - _353;
    float _478 = fma(_475, gl_ObjectToWorldEXT[2u].x, fma(_474, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _473));
    float _481 = fma(_475, gl_ObjectToWorldEXT[2u].y, fma(_474, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _473));
    float _484 = fma(_475, gl_ObjectToWorldEXT[2u].z, fma(_474, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _473));
    float _485 = _427 - _351;
    float _486 = _428 - _352;
    float _487 = _429 - _353;
    float _490 = fma(_487, gl_ObjectToWorldEXT[2u].x, fma(_486, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _485));
    float _493 = fma(_487, gl_ObjectToWorldEXT[2u].y, fma(_486, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _485));
    float _496 = fma(_487, gl_ObjectToWorldEXT[2u].z, fma(_486, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _485));
    float _503 = (((float(_196) * _432) + (-127.0)) + (float(_246) * hit._m0.x)) + (float(_291) * hit._m0.y);
    float _506 = (((float(_197) * _432) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _509 = (((float(_198) * _432) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _510 = _503 * 0.0078740157186985015869140625;
    float _512 = _506 * 0.0078740157186985015869140625;
    float _513 = _509 * 0.0078740157186985015869140625;
    uvec2 _531 = uvec2(textureSize(G_Sub_monitor_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _540 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _541 = _540 * gl_WorldRayDirectionEXT.x;
    float _542 = _540 * gl_WorldRayDirectionEXT.y;
    float _543 = _540 * gl_WorldRayDirectionEXT.z;
    float _595;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _557 = (_496 * _481) - (_493 * _484);
        float _560 = (_490 * _484) - (_496 * _478);
        float _563 = (_493 * _478) - (_490 * _481);
        float _592 = ((log2((((float(_531.y) * 0.5) * float(_531.x)) * abs((((_313 - _223) * (_267 - _222)) - ((_312 - _222) * (_268 - _223))) * 2.384185791015625e-07)) / (sqrt(((_560 * _560) + (_563 * _563)) + (_557 * _557)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_541, _542, _543), vec3(_510, _512, _513))));
        _595 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    }
    else
    {
        _595 = 0.0;
    }
    vec4 _599 = textureLod(sampler2D(G_Sub_monitor_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_267 * hit._m0.x) + (_222 * _432)) + (_312 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_268 * hit._m0.x) + (_223 * _432)) + (_313 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _595);
    float _601 = _599.x;
    float _602 = _599.y;
    float _603 = _599.z;
    float _604 = _601 * cbMtdParam._m0[9u].x;
    float _605 = _602 * cbMtdParam._m0[9u].y;
    float _606 = _603 * cbMtdParam._m0[9u].z;
    float _626 = inversesqrt(dot(vec3(_510, _512, _513), vec3(_510, _512, _513)));
    float _627 = _626 * _510;
    float _628 = _626 * _512;
    float _629 = _626 * _513;
    float _641 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _642 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _643 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _644 = (-0.0) - _541;
    float _646 = (-0.0) - _542;
    float _647 = (-0.0) - _543;
    float _653 = float(gl_LaunchIDEXT.x);
    float _654 = float(gl_LaunchIDEXT.y);
    float _657 = float(gl_LaunchSizeEXT.x);
    float _671 = fract(fract(sin(dot(vec2(_653 / _657, _654 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _684 = fract(fract(sin(dot(vec2((_653 + 128.0) / _657, (_654 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _694 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _695 = _694.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _695, _694.w, _695, vec3(_641, _642, _643), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _775;
    float _776;
    float _777;
    float _778;
    float _779;
    float _780;
    if (_59._m0 == 0u)
    {
        float _716 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_627, _628, _629));
        float _1027 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
        float _719 = isnan(1.0) ? _1027 : (isnan(_1027) ? 1.0 : min(_1027, 1.0));
        float _730 = g_sceneCB._m0[4u].x - _541;
        float _731 = g_sceneCB._m0[4u].y - _542;
        float _732 = g_sceneCB._m0[4u].z - _543;
        float _736 = inversesqrt(dot(vec3(_730, _731, _732), vec3(_730, _731, _732)));
        float _740 = dot(vec3(_627, _628, _629), vec3(g_sceneCB._m0[4u].xyz));
        float _1038 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
        float _743 = isnan(1.0) ? _1038 : (isnan(_1038) ? 1.0 : min(_1038, 1.0));
        float _744 = dot(vec3(_627, _628, _629), vec3(_644, _646, _647));
        float _1049 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
        float _748 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_730 * _736, _731 * _736, _732 * _736));
        float _1060 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        float _759 = (exp2(log2(1.0 - (isnan(1.0) ? _1060 : (isnan(_1060) ? 1.0 : min(_1060, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _765 = (0.5 / ((_743 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1049 : (isnan(_1049) ? 1.0 : min(_1049, 1.0))))) * _743;
        float _1071 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _767 = (isnan(1.0) ? _1071 : (isnan(_1071) ? 1.0 : min(_1071, 1.0))) * 0.31831014156341552734375;
        _775 = ((_604 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _719;
        _776 = ((_605 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _719;
        _777 = ((_606 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _719;
        _778 = (_759 * g_sceneCB._m0[5u].x) * _767;
        _779 = (_759 * g_sceneCB._m0[5u].y) * _767;
        _780 = (_759 * g_sceneCB._m0[5u].z) * _767;
    }
    else
    {
        _775 = 0.0;
        _776 = 0.0;
        _777 = 0.0;
        _778 = 0.0;
        _779 = 0.0;
        _780 = 0.0;
    }
    bool _782 = abs(_628) < 0.89999997615814208984375;
    float _784 = float(_782);
    float _785 = _782 ? 0.0 : 1.0;
    float _788 = (_784 * _629) - (_785 * _628);
    float _789 = _785 * _627;
    float _791 = (-0.0) - (_627 * _784);
    float _795 = inversesqrt(dot(vec3(_788, _789, _791), vec3(_788, _789, _791)));
    float _796 = _788 * _795;
    float _797 = _789 * _795;
    float _798 = _795 * _791;
    float _801 = (_797 * _629) - (_798 * _628);
    float _804 = (_798 * _627) - (_796 * _629);
    float _807 = (_796 * _628) - (_797 * _627);
    float _809;
    float _817;
    float _808 = 0.0;
    uint _810 = 0u;
    float _814;
    bool _816;
    for (;;)
    {
        _814 = (float(_810) + _671) * 0.03125;
        _816 = _810 == 0u;
        float frontier_phi_41_pred;
        if (_816)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _953;
            float _954;
            uint _956;
            _953 = 0.0;
            _954 = 0.5;
            _956 = _810;
            float _818;
            for (;;)
            {
                _818 = ((_956 & 1u) != 0u) ? (_954 + _953) : _953;
                uint _957 = _956 >> 1u;
                if (_957 == 0u)
                {
                    break;
                }
                else
                {
                    _953 = _818;
                    _954 *= 0.5;
                    _956 = _957;
                }
            }
            frontier_phi_41_pred = _818;
        }
        _817 = frontier_phi_41_pred;
        float _819 = _817 + _684;
        float _824 = sqrt(_814);
        float _825 = ((_819 > 1.0) ? (_819 + (-1.0)) : _819) * 6.283185482025146484375;
        float _828 = cos(_825) * _824;
        float _830 = sin(_825) * _824;
        float _832 = sqrt(1.0 - _814);
        float _845 = ((_832 * _627) + (_828 * _801)) + (_830 * _796);
        float _846 = ((_832 * _628) + (_828 * _804)) + (_830 * _797);
        float _847 = ((_832 * _629) + (_828 * _807)) + (_830 * _798);
        _58._m0 = 1u;
        uvec4 _851 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _852 = _851.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _852, _851.w, _852, vec3(_641, _642, _643), 9.9999997473787516355514526367188e-05, vec3(_845, _846, _847), 10000.0, 1);
        float _858 = dot(vec3(_627, _628, _629), vec3(_845, _846, _847));
        float _1082 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
        float _861 = isnan(1.0) ? _1082 : (isnan(_1082) ? 1.0 : min(_1082, 1.0));
        _809 = ((float(_58._m0 == 0u) * _861) / (_861 * 0.3183098733425140380859375)) + _808;
        uint _811 = _810 + 1u;
        if (_811 == 32u)
        {
            break;
        }
        else
        {
            _808 = _809;
            _810 = _811;
            continue;
        }
    }
    float _869 = _809 * 0.009947183541953563690185546875;
    float _874 = dot(vec3(_541, _542, _543), vec3(_627, _628, _629)) * 2.0;
    vec4 _886 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_541 - (_874 * _627), _542 - (_874 * _628), _543 - (_874 * _629)), 4.0);
    float _891 = dot(vec3(_644, _646, _647), vec3(_627, _628, _629));
    float _1093 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _900 = (exp2(log2(1.0 - (isnan(1.0) ? _1093 : (isnan(_1093) ? 1.0 : min(_1093, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _906 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_627, _628, _629), 0.0);
    float _918 = ((_775 + ((cbMtdParam._m0[11u].x * _601) * cbMtdParam._m0[10u].x)) + _778) + (((_906.x * _604) + (_900 * _886.x)) * _869);
    float _923 = ((_776 + ((cbMtdParam._m0[11u].x * _602) * cbMtdParam._m0[10u].y)) + _779) + (((_906.y * _605) + (_900 * _886.y)) * _869);
    float _928 = ((_777 + ((cbMtdParam._m0[11u].x * _603) * cbMtdParam._m0[10u].z)) + _780) + (((_906.z * _606) + (_900 * _886.z)) * _869);
    float _1104 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _1115 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _1126 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    bool _936 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _947;
    _947.x = _936 ? ((_503 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1104 : (isnan(_1104) ? 1.0 : min(_1104, 1.0)));
    _947.y = _936 ? ((_506 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0)));
    _947.z = _936 ? ((_509 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0)));
    payload._m0 = _947;
}


