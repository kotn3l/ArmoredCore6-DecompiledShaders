#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_11;
layout(set = 0, binding = 2) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D M_Transiton_Hackingfield_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _1790;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _169 & 65535u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        else
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _170 >> 16u;
        }
        _175 = frontier_phi_3_2_ladder_1;
        _177 = frontier_phi_3_2_ladder;
        _178 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _182.z;
    bool _185 = _184 != 0u;
    bool _187 = _134.w == 0u;
    bool _188 = _185 || _187;
    uint _190 = (_183 * _175) + 12u;
    uint _214;
    uint _215;
    uint _216;
    uint _217;
    if (_188)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_190 >> 2u));
        uint _194 = _193.x;
        _214 = _194 & 255u;
        _215 = (_194 >> 8u) & 255u;
        _216 = (_194 >> 16u) & 255u;
        _217 = 20u;
    }
    else
    {
        uint _202 = _190 >> 2u;
        uvec2 _208 = uvec2(texelFetch(l_geomAttrib_0, int(_202)).x, texelFetch(l_geomAttrib_0, int(_202 + 1u)).x);
        uint _209 = _208.x;
        _214 = _209 & 65535u;
        _215 = _209 >> 16u;
        _216 = _208.y & 65535u;
        _217 = 24u;
    }
    bool _222 = _184 == 0u;
    uint _223;
    if (_222)
    {
        _223 = _217;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_187)
        {
            frontier_phi_9_10_ladder = _217 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _217 + 8u;
        }
        _223 = frontier_phi_9_10_ladder;
    }
    uint _228 = _185 ? (_223 + 4u) : _223;
    uint _229 = _183 * _175;
    uint _233 = ((_229 + 4u) + _228) >> 2u;
    uvec2 _239 = uvec2(texelFetch(l_geomAttrib_0, int(_233)).x, texelFetch(l_geomAttrib_0, int(_233 + 1u)).x);
    uint _240 = _239.x;
    uint _241 = _239.y;
    float _245 = float(int(uint(int(_240 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_240) >> int(16u))));
    float _250 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_241) >> int(16u))));
    uvec4 _255 = texelFetch(l_geomAttrib_0, int(((_229 + 12u) + _228) >> 2u));
    uint _256 = _255.x;
    float _260 = float(int(uint(int(_256 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_256) >> int(16u))));
    uint _263 = (_183 * _177) + 12u;
    uint _284;
    uint _285;
    uint _286;
    uint _287;
    if (_188)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_263 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
        _287 = 20u;
    }
    else
    {
        uint _272 = _263 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
        _287 = 24u;
    }
    uint _291;
    if (_222)
    {
        _291 = _287;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_187)
        {
            frontier_phi_16_17_ladder = _287 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _287 + 8u;
        }
        _291 = frontier_phi_16_17_ladder;
    }
    uint _295 = _185 ? (_291 + 4u) : _291;
    uint _296 = _183 * _177;
    uint _299 = ((_296 + 4u) + _295) >> 2u;
    uvec2 _305 = uvec2(texelFetch(l_geomAttrib_0, int(_299)).x, texelFetch(l_geomAttrib_0, int(_299 + 1u)).x);
    uint _306 = _305.x;
    uint _307 = _305.y;
    float _311 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_306) >> int(16u))));
    float _316 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _317 = float(int(uint(int(_307) >> int(16u))));
    uvec4 _321 = texelFetch(l_geomAttrib_0, int(((_296 + 12u) + _295) >> 2u));
    uint _322 = _321.x;
    float _326 = float(int(uint(int(_322 << 16u) >> int(16u))));
    float _327 = float(int(uint(int(_322) >> int(16u))));
    uint _329 = (_183 * _178) + 12u;
    uint _350;
    uint _351;
    uint _352;
    uint _353;
    if (_188)
    {
        uvec4 _331 = texelFetch(l_geomAttrib_0, int(_329 >> 2u));
        uint _332 = _331.x;
        _350 = _332 & 255u;
        _351 = (_332 >> 8u) & 255u;
        _352 = (_332 >> 16u) & 255u;
        _353 = 20u;
    }
    else
    {
        uint _338 = _329 >> 2u;
        uvec2 _344 = uvec2(texelFetch(l_geomAttrib_0, int(_338)).x, texelFetch(l_geomAttrib_0, int(_338 + 1u)).x);
        uint _345 = _344.x;
        _350 = _345 & 65535u;
        _351 = _345 >> 16u;
        _352 = _344.y & 65535u;
        _353 = 24u;
    }
    uint _357;
    if (_222)
    {
        _357 = _353;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_187)
        {
            frontier_phi_23_24_ladder = _353 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _353 + 8u;
        }
        _357 = frontier_phi_23_24_ladder;
    }
    uint _361 = _185 ? (_357 + 4u) : _357;
    uint _362 = _183 * _178;
    uint _365 = ((_362 + 4u) + _361) >> 2u;
    uvec2 _371 = uvec2(texelFetch(l_geomAttrib_0, int(_365)).x, texelFetch(l_geomAttrib_0, int(_365 + 1u)).x);
    uint _372 = _371.x;
    uint _373 = _371.y;
    float _377 = float(int(uint(int(_372 << 16u) >> int(16u))));
    float _378 = float(int(uint(int(_372) >> int(16u))));
    float _382 = float(int(uint(int(_373 << 16u) >> int(16u))));
    float _383 = float(int(uint(int(_373) >> int(16u))));
    uvec4 _387 = texelFetch(l_geomAttrib_0, int(((_362 + 12u) + _361) >> 2u));
    uint _388 = _387.x;
    float _392 = float(int(uint(int(_388 << 16u) >> int(16u))));
    float _393 = float(int(uint(int(_388) >> int(16u))));
    bool _395 = _134.z == 0u;
    float _431;
    float _432;
    float _433;
    if (_395)
    {
        uint _398 = _175 * 3u;
        uvec3 _407 = uvec3(texelFetch(l_geomPositionBuffer, int(_398)).x, texelFetch(l_geomPositionBuffer, int(_398 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_398 + 2u)).x);
        _431 = uintBitsToFloat(_407.x);
        _432 = uintBitsToFloat(_407.y);
        _433 = uintBitsToFloat(_407.z);
    }
    else
    {
        uint _415 = _175 * 2u;
        uvec2 _421 = uvec2(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x);
        uint _422 = _421.x;
        _431 = unpackHalf2x16(_422).x;
        _432 = unpackHalf2x16(_422 >> 16u).x;
        _433 = unpackHalf2x16(_421.y).x;
    }
    float _469;
    float _470;
    float _471;
    if (_395)
    {
        uint _436 = _177 * 3u;
        uvec3 _445 = uvec3(texelFetch(l_geomPositionBuffer, int(_436)).x, texelFetch(l_geomPositionBuffer, int(_436 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_436 + 2u)).x);
        _469 = uintBitsToFloat(_445.x);
        _470 = uintBitsToFloat(_445.y);
        _471 = uintBitsToFloat(_445.z);
    }
    else
    {
        uint _453 = _177 * 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _469 = unpackHalf2x16(_460).x;
        _470 = unpackHalf2x16(_460 >> 16u).x;
        _471 = unpackHalf2x16(_459.y).x;
    }
    float _507;
    float _508;
    float _509;
    if (_395)
    {
        uint _474 = _178 * 3u;
        uvec3 _483 = uvec3(texelFetch(l_geomPositionBuffer, int(_474)).x, texelFetch(l_geomPositionBuffer, int(_474 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_474 + 2u)).x);
        _507 = uintBitsToFloat(_483.x);
        _508 = uintBitsToFloat(_483.y);
        _509 = uintBitsToFloat(_483.z);
    }
    else
    {
        uint _491 = _178 * 2u;
        uvec2 _497 = uvec2(texelFetch(l_geomPositionBuffer, int(_491)).x, texelFetch(l_geomPositionBuffer, int(_491 + 1u)).x);
        uint _498 = _497.x;
        _507 = unpackHalf2x16(_498).x;
        _508 = unpackHalf2x16(_498 >> 16u).x;
        _509 = unpackHalf2x16(_497.y).x;
    }
    float _512 = (1.0 - hit._m0.x) - hit._m0.y;
    float _554 = (_311 - _245) * 0.00048828125;
    float _556 = (_312 - _246) * 0.00048828125;
    float _559 = (_377 - _245) * 0.00048828125;
    float _560 = (_378 - _246) * 0.00048828125;
    float _590 = _469 - _431;
    float _591 = _470 - _432;
    float _592 = _471 - _433;
    float _595 = fma(_592, gl_ObjectToWorldEXT[2u].x, fma(_591, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _590));
    float _598 = fma(_592, gl_ObjectToWorldEXT[2u].y, fma(_591, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _590));
    float _601 = fma(_592, gl_ObjectToWorldEXT[2u].z, fma(_591, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _590));
    float _602 = _507 - _431;
    float _603 = _508 - _432;
    float _604 = _509 - _433;
    float _607 = fma(_604, gl_ObjectToWorldEXT[2u].x, fma(_603, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _602));
    float _610 = fma(_604, gl_ObjectToWorldEXT[2u].y, fma(_603, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _602));
    float _613 = fma(_604, gl_ObjectToWorldEXT[2u].z, fma(_603, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _602));
    float _614 = (((_311 * hit._m0.x) + (_245 * _512)) + (_377 * hit._m0.y)) * 0.00048828125;
    float _615 = (((_312 * hit._m0.x) + (_246 * _512)) + (_378 * hit._m0.y)) * 0.00048828125;
    float _623 = (((float(_214) * _512) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _626 = (((float(_215) * _512) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _629 = (((float(_216) * _512) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_352) * hit._m0.y);
    float _630 = _623 * 0.0078740157186985015869140625;
    float _632 = _626 * 0.0078740157186985015869140625;
    float _633 = _629 * 0.0078740157186985015869140625;
    float _653 = cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x;
    float _656 = (_653 * cbMtdParam._m0[18u].z) + _614;
    float _657 = (_653 * cbMtdParam._m0[18u].w) + _615;
    float _674 = (cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + _614)) + cbTextureTilingScale._m0[7u].z;
    float _675 = (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _615)) + cbTextureTilingScale._m0[7u].w;
    uvec2 _677 = uvec2(textureSize(M_Transiton_Hackingfield_snp_0_Texture2D_9, int(0u)));
    bool _682 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _735;
    if (_682)
    {
        float _693 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _699 = (_613 * _598) - (_610 * _601);
        float _702 = (_607 * _601) - (_613 * _595);
        float _705 = (_610 * _595) - (_607 * _598);
        float _732 = ((log2((((float(_677.y) * 0.5) * float(_677.x)) * abs((_560 * _554) - (_559 * _556))) / (sqrt(((_702 * _702) + (_705 * _705)) + (_699 * _699)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_693 * gl_WorldRayDirectionEXT.x, _693 * gl_WorldRayDirectionEXT.y, _693 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _735 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    }
    else
    {
        _735 = 0.0;
    }
    vec4 _739 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_674, _675), _735);
    float _744 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[15u].z;
    float _750 = ((_739.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].w;
    float _752 = (-0.0) - (cbMtdParam._m0[15u].w * ((_739.x * 0.5) + (-0.25)));
    float _754 = fract(_744);
    float _756 = fract(_744 + 0.5);
    float _768 = abs((_754 * 2.0) + (-1.0));
    vec4 _786 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_754 * _752) + _656) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_750 * _754) + _657) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _788 = _786.x;
    float _789 = _786.y;
    float _790 = _786.z;
    vec4 _791 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_756 * _752) + _656) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_750 * _756) + _657) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _820 = (cbMtdParam._m0[19u].x * _653) + _614;
    float _821 = (cbMtdParam._m0[19u].y * _653) + _615;
    float _872;
    if (_682)
    {
        float _832 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _838 = (_613 * _598) - (_610 * _601);
        float _841 = (_607 * _601) - (_613 * _595);
        float _844 = (_610 * _595) - (_607 * _598);
        float _870 = ((log2((((float(_677.y) * 0.5) * float(_677.x)) * abs((_560 * _554) - (_559 * _556))) / (sqrt(((_841 * _841) + (_844 * _844)) + (_838 * _838)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_832 * gl_WorldRayDirectionEXT.x, _832 * gl_WorldRayDirectionEXT.y, _832 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _872 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    }
    else
    {
        _872 = 0.0;
    }
    vec4 _874 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_674, _675), _872);
    float _882 = ((_874.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].w;
    float _884 = (-0.0) - (cbMtdParam._m0[15u].w * ((_874.x * 0.5) + (-0.25)));
    vec4 _909 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_754 * _884) + _820) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_882 * _754) + _821) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _911 = _909.x;
    float _912 = _909.y;
    float _913 = _909.z;
    vec4 _914 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_756 * _884) + _820) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_882 * _756) + _821) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _928 = (((_914.x - _911) * _768) + _911) * cbMtdParam._m0[12u].x;
    float _929 = (((_914.y - _912) * _768) + _912) * cbMtdParam._m0[12u].y;
    float _930 = (((_914.z - _913) * _768) + _913) * cbMtdParam._m0[12u].z;
    float _938 = sin(cbMtdParam._m0[16u].x);
    float _939 = cos(cbMtdParam._m0[16u].x);
    float _940 = _614 - cbMtdParam._m0[16u].y;
    float _941 = _615 - cbMtdParam._m0[16u].y;
    float _947 = fma(_941, (-0.0) - _938, _939 * _940) + cbMtdParam._m0[16u].y;
    float _948 = fma(_941, _939, _940 * _938) + cbMtdParam._m0[16u].y;
    float _999;
    if (_682)
    {
        float _959 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _965 = (_613 * _598) - (_610 * _601);
        float _968 = (_607 * _601) - (_613 * _595);
        float _971 = (_610 * _595) - (_607 * _598);
        float _997 = ((log2((((float(_677.y) * 0.5) * float(_677.x)) * abs((_560 * _554) - (_559 * _556))) / (sqrt(((_968 * _968) + (_971 * _971)) + (_965 * _965)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_959 * gl_WorldRayDirectionEXT.x, _959 * gl_WorldRayDirectionEXT.y, _959 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _999 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    }
    else
    {
        _999 = 0.0;
    }
    vec4 _1001 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_674, _675), _999);
    float _1009 = ((_1001.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].w;
    float _1011 = (-0.0) - (cbMtdParam._m0[15u].w * ((_1001.x * 0.5) + (-0.25)));
    vec4 _1036 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_754 * _1011) + _947) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1009 * _754) + _948) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1038 = _1036.x;
    float _1044 = ((textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_756 * _1011) + _947) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1009 * _756) + _948) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0).x - _1038) * _768) + _1038;
    float _1047 = (cbMtdParam._m0[16u].w * (_928 + ((((_791.x - _788) * _768) + _788) * cbMtdParam._m0[11u].x))) * _1044;
    float _1049 = (cbMtdParam._m0[16u].w * (_929 + ((((_791.y - _789) * _768) + _789) * cbMtdParam._m0[11u].y))) * _1044;
    float _1051 = (cbMtdParam._m0[16u].w * (_930 + ((((_791.z - _790) * _768) + _790) * cbMtdParam._m0[11u].z))) * _1044;
    float _1053 = _1044 * cbMtdParam._m0[16u].z;
    float _1063 = ((_1053 * (_928 - _1047)) + _1047) * cbMtdParam._m0[15u].y;
    float _1064 = ((_1053 * (_929 - _1049)) + _1049) * cbMtdParam._m0[15u].y;
    float _1065 = ((_1053 * (_930 - _1051)) + _1051) * cbMtdParam._m0[15u].y;
    uvec2 _1077 = uvec2(textureSize(M_Transiton_Hackingfield_snp_0_Texture2D_5, int(0u)));
    float _1130;
    if (_682)
    {
        float _1088 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1094 = (_613 * _598) - (_610 * _601);
        float _1097 = (_607 * _601) - (_613 * _595);
        float _1100 = (_610 * _595) - (_607 * _598);
        float _1128 = ((log2((((float(_1077.y) * 0.5) * float(_1077.x)) * abs((((_383 - _251) * (_316 - _250)) - ((_382 - _250) * (_317 - _251))) * 2.384185791015625e-07)) / (sqrt(((_1097 * _1097) + (_1100 * _1100)) + (_1094 * _1094)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1088 * gl_WorldRayDirectionEXT.x, _1088 * gl_WorldRayDirectionEXT.y, _1088 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _1130 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    }
    else
    {
        _1130 = 0.0;
    }
    vec4 _1132 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_5, SS_WrapLinear), vec2((((((_316 * hit._m0.x) + (_250 * _512)) + (_382 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((((_317 * hit._m0.x) + (_251 * _512)) + (_383 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1130);
    float _1134 = _1132.x;
    float _1142 = (cbMtdParam._m0[17u].w * 0.16666667163372039794921875) * cbMtdParam._m0[17u].y;
    float _1146 = fract(abs(_1142));
    float _1154 = sin(cbMtdParam._m0[14u].z);
    float _1155 = cos(cbMtdParam._m0[14u].z);
    float _1156 = ((((_326 * hit._m0.x) + (_260 * _512)) + (_392 * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[17u].z;
    float _1157 = ((((_327 * hit._m0.x) + (_261 * _512)) + (_393 * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[17u].z;
    uvec2 _1176 = uvec2(textureSize(M_Transiton_Hackingfield_snp_0_Texture2D_14, int(0u)));
    float _1228;
    if (_682)
    {
        float _1187 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1193 = (_613 * _598) - (_610 * _601);
        float _1196 = (_607 * _601) - (_613 * _595);
        float _1199 = (_610 * _595) - (_607 * _598);
        float _1226 = ((log2((((float(_1176.y) * 0.5) * float(_1176.x)) * abs((((_393 - _261) * (_326 - _260)) - ((_392 - _260) * (_327 - _261))) * 2.384185791015625e-07)) / (sqrt(((_1196 * _1196) + (_1199 * _1199)) + (_1193 * _1193)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1187 * gl_WorldRayDirectionEXT.x, _1187 * gl_WorldRayDirectionEXT.y, _1187 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _1228 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    }
    else
    {
        _1228 = 0.0;
    }
    float _1233 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (fma(_1157, (-0.0) - _1154, _1156 * _1155) + cbMtdParam._m0[17u].z)) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_1157, _1155, _1156 * _1154) + cbMtdParam._m0[17u].z)) + cbTextureTilingScale._m0[2u].w), _1228).x - ((((_1142 >= ((-0.0) - _1142)) ? _1146 : ((-0.0) - _1146)) * 3.0) - _1134);
    float _1234 = ceil(_1233);
    float _1901 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
    float _1235 = isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0));
    float _1241 = sin(cbMtdParam._m0[13u].y);
    float _1242 = cos(cbMtdParam._m0[13u].y);
    float _1243 = _614 - cbMtdParam._m0[13u].x;
    float _1244 = _615 - cbMtdParam._m0[13u].x;
    uvec2 _1263 = uvec2(textureSize(M_Transiton_Hackingfield_snp_0_Texture2D_4, int(0u)));
    float _1314;
    if (_682)
    {
        float _1274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1280 = (_613 * _598) - (_610 * _601);
        float _1283 = (_607 * _601) - (_613 * _595);
        float _1286 = (_610 * _595) - (_607 * _598);
        float _1312 = ((log2((((float(_1263.y) * 0.5) * float(_1263.x)) * abs((_560 * _554) - (_559 * _556))) / (sqrt(((_1283 * _1283) + (_1286 * _1286)) + (_1280 * _1280)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1274 * gl_WorldRayDirectionEXT.x, _1274 * gl_WorldRayDirectionEXT.y, _1274 * gl_WorldRayDirectionEXT.z), vec3(_630, _632, _633))));
        _1314 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
    }
    else
    {
        _1314 = 0.0;
    }
    vec4 _1316 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (fma(_1244, (-0.0) - _1241, _1242 * _1243) + cbMtdParam._m0[13u].x)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (fma(_1244, _1242, _1243 * _1241) + cbMtdParam._m0[13u].x)) + cbTextureTilingScale._m0[3u].w), _1314);
    float _1329 = (cbMtdParam._m0[9u].x * _1316.x) * cbMtdParam._m0[15u].x;
    float _1331 = (cbMtdParam._m0[9u].y * _1316.y) * cbMtdParam._m0[15u].x;
    float _1333 = (cbMtdParam._m0[9u].z * _1316.z) * cbMtdParam._m0[15u].x;
    float _1340 = ((_1329 - _1063) * _1235) + _1063;
    float _1341 = ((_1331 - _1064) * _1235) + _1064;
    float _1342 = ((_1333 - _1065) * _1235) + _1065;
    float _1346 = abs(cbMtdParam._m0[13u].z * _1233);
    float _1350 = (((_1346 * cbMtdParam._m0[13u].w) - _1134) * _1346) + _1134;
    float _1917 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
    float _1351 = isnan(1.0) ? _1917 : (isnan(_1917) ? 1.0 : min(_1917, 1.0));
    uvec2 _1364 = uvec2(textureSize(M_Transiton_Hackingfield_snp_0_Texture2D_6, int(0u)));
    float _1368 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1369 = _1368 * gl_WorldRayDirectionEXT.x;
    float _1370 = _1368 * gl_WorldRayDirectionEXT.y;
    float _1371 = _1368 * gl_WorldRayDirectionEXT.z;
    float _1415;
    if (_682)
    {
        float _1381 = (_613 * _598) - (_610 * _601);
        float _1384 = (_607 * _601) - (_613 * _595);
        float _1387 = (_610 * _595) - (_607 * _598);
        float _1413 = ((log2((((float(_1364.y) * 0.5) * float(_1364.x)) * abs((_560 * _554) - (_559 * _556))) / (sqrt(((_1384 * _1384) + (_1387 * _1387)) + (_1381 * _1381)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1369, _1370, _1371), vec3(_630, _632, _633))));
        _1415 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    }
    else
    {
        _1415 = 0.0;
    }
    vec4 _1417 = textureLod(sampler2D(M_Transiton_Hackingfield_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _614) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _615) + cbTextureTilingScale._m0[5u].w), _1415);
    float _1429 = (_1417.x * cbMtdParam._m0[15u].x) * cbMtdParam._m0[10u].x;
    float _1431 = (_1417.y * cbMtdParam._m0[15u].x) * cbMtdParam._m0[10u].y;
    float _1433 = (_1417.z * cbMtdParam._m0[15u].x) * cbMtdParam._m0[10u].z;
    float _1434 = _1429 * _1351;
    float _1435 = _1431 * _1351;
    float _1436 = _1433 * _1351;
    float _1440 = exp2(log2(_1351) * cbMtdParam._m0[14u].y);
    float _1450 = (_1440 * ((_1429 - _1340) - _1434)) + _1340;
    float _1451 = (_1440 * ((_1431 - _1341) - _1435)) + _1341;
    float _1452 = (_1440 * ((_1433 - _1342) - _1436)) + _1342;
    float _1453 = _1329 * _1235;
    float _1454 = _1331 * _1235;
    float _1455 = _1333 * _1235;
    float _1468 = inversesqrt(dot(vec3(_630, _632, _633), vec3(_630, _632, _633)));
    float _1469 = _1468 * _630;
    float _1470 = _1468 * _632;
    float _1471 = _1468 * _633;
    float _1483 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1484 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1485 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1486 = (-0.0) - _1369;
    float _1487 = (-0.0) - _1370;
    float _1488 = (-0.0) - _1371;
    float _1494 = float(gl_LaunchIDEXT.x);
    float _1495 = float(gl_LaunchIDEXT.y);
    float _1498 = float(gl_LaunchSizeEXT.x);
    float _1512 = fract(fract(sin(dot(vec2(_1494 / _1498, _1495 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1525 = fract(fract(sin(dot(vec2((_1494 + 128.0) / _1498, (_1495 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _1535 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1536 = _1535.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1536, _1535.w, _1536, vec3(_1483, _1484, _1485), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    if (_72._m0 == 0u)
    {
        float _1556 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1469, _1470, _1471));
        float _1933 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1559 = isnan(1.0) ? _1933 : (isnan(_1933) ? 1.0 : min(_1933, 1.0));
        float _1570 = g_sceneCB._m0[4u].x - _1369;
        float _1571 = g_sceneCB._m0[4u].y - _1370;
        float _1572 = g_sceneCB._m0[4u].z - _1371;
        float _1576 = inversesqrt(dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572)));
        float _1580 = dot(vec3(_1469, _1470, _1471), vec3(g_sceneCB._m0[4u].xyz));
        float _1944 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1583 = isnan(1.0) ? _1944 : (isnan(_1944) ? 1.0 : min(_1944, 1.0));
        float _1584 = dot(vec3(_1469, _1470, _1471), vec3(_1486, _1487, _1488));
        float _1955 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1588 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1570 * _1576, _1571 * _1576, _1572 * _1576));
        float _1966 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1599 = (exp2(log2(1.0 - (isnan(1.0) ? _1966 : (isnan(_1966) ? 1.0 : min(_1966, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1605 = (0.5 / ((_1583 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1955 : (isnan(_1955) ? 1.0 : min(_1955, 1.0))))) * _1583;
        float _1977 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
        float _1607 = (isnan(1.0) ? _1977 : (isnan(_1977) ? 1.0 : min(_1977, 1.0))) * 0.31831014156341552734375;
        _1615 = ((_1450 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1559;
        _1616 = ((_1451 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1559;
        _1617 = ((_1452 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1559;
        _1618 = (_1599 * g_sceneCB._m0[5u].x) * _1607;
        _1619 = (_1599 * g_sceneCB._m0[5u].y) * _1607;
        _1620 = (_1599 * g_sceneCB._m0[5u].z) * _1607;
    }
    else
    {
        _1615 = 0.0;
        _1616 = 0.0;
        _1617 = 0.0;
        _1618 = 0.0;
        _1619 = 0.0;
        _1620 = 0.0;
    }
    bool _1622 = abs(_1470) < 0.89999997615814208984375;
    float _1624 = float(_1622);
    float _1625 = _1622 ? 0.0 : 1.0;
    float _1628 = (_1624 * _1471) - (_1625 * _1470);
    float _1629 = _1625 * _1469;
    float _1631 = (-0.0) - (_1469 * _1624);
    float _1635 = inversesqrt(dot(vec3(_1628, _1629, _1631), vec3(_1628, _1629, _1631)));
    float _1636 = _1628 * _1635;
    float _1637 = _1629 * _1635;
    float _1638 = _1635 * _1631;
    float _1641 = (_1637 * _1471) - (_1638 * _1470);
    float _1644 = (_1638 * _1469) - (_1636 * _1471);
    float _1647 = (_1636 * _1470) - (_1637 * _1469);
    float _1649;
    float _1657;
    float _1648 = 0.0;
    uint _1650 = 0u;
    float _1654;
    bool _1656;
    for (;;)
    {
        _1654 = (float(_1650) + _1512) * 0.03125;
        _1656 = _1650 == 0u;
        float frontier_phi_53_pred;
        if (_1656)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1795;
            float _1796;
            uint _1798;
            _1795 = 0.0;
            _1796 = 0.5;
            _1798 = _1650;
            float _1658;
            for (;;)
            {
                _1658 = ((_1798 & 1u) != 0u) ? (_1796 + _1795) : _1795;
                uint _1799 = _1798 >> 1u;
                if (_1799 == 0u)
                {
                    break;
                }
                else
                {
                    _1795 = _1658;
                    _1796 *= 0.5;
                    _1798 = _1799;
                }
            }
            frontier_phi_53_pred = _1658;
        }
        _1657 = frontier_phi_53_pred;
        float _1659 = _1657 + _1525;
        float _1663 = sqrt(_1654);
        float _1664 = ((_1659 > 1.0) ? (_1659 + (-1.0)) : _1659) * 6.283185482025146484375;
        float _1667 = cos(_1664) * _1663;
        float _1669 = sin(_1664) * _1663;
        float _1671 = sqrt(1.0 - _1654);
        float _1684 = ((_1671 * _1469) + (_1667 * _1641)) + (_1669 * _1636);
        float _1685 = ((_1671 * _1470) + (_1667 * _1644)) + (_1669 * _1637);
        float _1686 = ((_1671 * _1471) + (_1667 * _1647)) + (_1669 * _1638);
        _71._m0 = 1u;
        uvec4 _1690 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1691 = _1690.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1691, _1690.w, _1691, vec3(_1483, _1484, _1485), 9.9999997473787516355514526367188e-05, vec3(_1684, _1685, _1686), 10000.0, 1);
        float _1697 = dot(vec3(_1469, _1470, _1471), vec3(_1684, _1685, _1686));
        float _1988 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1700 = isnan(1.0) ? _1988 : (isnan(_1988) ? 1.0 : min(_1988, 1.0));
        _1649 = ((float(_71._m0 == 0u) * _1700) / (_1700 * 0.3183098733425140380859375)) + _1648;
        uint _1651 = _1650 + 1u;
        if (_1651 == 32u)
        {
            break;
        }
        else
        {
            _1648 = _1649;
            _1650 = _1651;
            continue;
        }
    }
    float _1708 = _1649 * 0.009947183541953563690185546875;
    float _1713 = dot(vec3(_1369, _1370, _1371), vec3(_1469, _1470, _1471)) * 2.0;
    vec4 _1725 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1369 - (_1713 * _1469), _1370 - (_1713 * _1470), _1371 - (_1713 * _1471)), 4.0);
    float _1730 = dot(vec3(_1486, _1487, _1488), vec3(_1469, _1470, _1471));
    float _1999 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
    float _1739 = (exp2(log2(1.0 - (isnan(1.0) ? _1999 : (isnan(_1999) ? 1.0 : min(_1999, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1745 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1469, _1470, _1471), 0.0);
    float _1758 = ((((_1440 * ((_1429 - _1453) - _1434)) + _1453) + _1615) + _1618) + (((_1745.x * _1450) + (_1739 * _1725.x)) * _1708);
    float _1764 = ((((_1440 * ((_1431 - _1454) - _1435)) + _1454) + _1616) + _1619) + (((_1745.y * _1451) + (_1739 * _1725.y)) * _1708);
    float _1770 = ((((_1440 * ((_1433 - _1455) - _1436)) + _1455) + _1617) + _1620) + (((_1745.z * _1452) + (_1739 * _1725.z)) * _1708);
    float _2010 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
    float _2021 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
    float _2032 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
    bool _1778 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1789;
    _1789.x = _1778 ? ((_623 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0)));
    _1789.y = _1778 ? ((_626 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2021 : (isnan(_2021) ? 1.0 : min(_2021, 1.0)));
    _1789.z = _1778 ? ((_629 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2032 : (isnan(_2032) ? 1.0 : min(_2032, 1.0)));
    payload._m0 = _1789;
}


