#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_21;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_23;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _1951;

void main()
{
    float _88 = float(gl_LaunchSizeEXT.y);
    float _116 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _125 = sqrt(((_117 * _117) + (_116 * _116)) + (_118 * _118)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _88)))));
    uvec4 _136 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _137 = _136.y;
    uint _177;
    uint _179;
    uint _180;
    if (_136.x == 0u)
    {
        uint _145 = (_137 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _154 = uvec3(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_145 + 2u)).x);
        _177 = _154.x;
        _179 = _154.y;
        _180 = _154.z;
    }
    else
    {
        uint _158 = uint(gl_PrimitiveID) * 6u;
        uint _160 = _158 & 4294967292u;
        uint _163 = (_137 + _160) >> 2u;
        uvec2 _170 = uvec2(texelFetch(l_geomIndexBuffer, int(_163)).x, texelFetch(l_geomIndexBuffer, int(_163 + 1u)).x);
        uint _171 = _170.x;
        uint _172 = _170.y;
        uint _174 = _171 >> 16u;
        uint _175 = _172 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_160 == _158)
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _171 & 65535u;
            frontier_phi_3_2_ladder_2 = _175;
        }
        else
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _174;
            frontier_phi_3_2_ladder_2 = _172 >> 16u;
        }
        _177 = frontier_phi_3_2_ladder_1;
        _179 = frontier_phi_3_2_ladder;
        _180 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _184 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _185 = _184.x;
    uint _186 = _184.z;
    bool _187 = _186 != 0u;
    bool _189 = _136.w == 0u;
    bool _190 = _187 || _189;
    uint _191 = _185 * _177;
    uint _192 = _191 + 12u;
    uint _216;
    uint _217;
    uint _218;
    uint _219;
    if (_190)
    {
        uvec4 _195 = texelFetch(l_geomAttrib_0, int(_192 >> 2u));
        uint _196 = _195.x;
        _216 = _196 & 255u;
        _217 = (_196 >> 8u) & 255u;
        _218 = (_196 >> 16u) & 255u;
        _219 = 16u;
    }
    else
    {
        uint _204 = _192 >> 2u;
        uvec2 _210 = uvec2(texelFetch(l_geomAttrib_0, int(_204)).x, texelFetch(l_geomAttrib_0, int(_204 + 1u)).x);
        uint _211 = _210.x;
        _216 = _211 & 65535u;
        _217 = _211 >> 16u;
        _218 = _210.y & 65535u;
        _219 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_219 + _191) >> 2u));
    uint _228 = _227.x;
    uint _240 = _219 | 8u;
    bool _241 = _186 == 0u;
    uint _242;
    if (_241)
    {
        _242 = _240;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_189)
        {
            frontier_phi_9_10_ladder = _240 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _240 + 8u;
        }
        _242 = frontier_phi_9_10_ladder;
    }
    uint _247 = _187 ? (_242 + 4u) : _242;
    uint _250 = ((_191 + 4u) + _247) >> 2u;
    uvec2 _256 = uvec2(texelFetch(l_geomAttrib_0, int(_250)).x, texelFetch(l_geomAttrib_0, int(_250 + 1u)).x);
    uint _257 = _256.x;
    uint _258 = _256.y;
    float _262 = float(int(uint(int(_257 << 16u) >> int(16u))));
    float _263 = float(int(uint(int(_257) >> int(16u))));
    float _267 = float(int(uint(int(_258 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_258) >> int(16u))));
    uint _283 = _185 * _179;
    uint _284 = _283 + 12u;
    uint _305;
    uint _306;
    uint _307;
    uint _308;
    if (_190)
    {
        uvec4 _286 = texelFetch(l_geomAttrib_0, int(_284 >> 2u));
        uint _287 = _286.x;
        _305 = _287 & 255u;
        _306 = (_287 >> 8u) & 255u;
        _307 = (_287 >> 16u) & 255u;
        _308 = 16u;
    }
    else
    {
        uint _293 = _284 >> 2u;
        uvec2 _299 = uvec2(texelFetch(l_geomAttrib_0, int(_293)).x, texelFetch(l_geomAttrib_0, int(_293 + 1u)).x);
        uint _300 = _299.x;
        _305 = _300 & 65535u;
        _306 = _300 >> 16u;
        _307 = _299.y & 65535u;
        _308 = 20u;
    }
    uvec4 _314 = texelFetch(l_geomAttrib_0, int((_308 + _283) >> 2u));
    uint _315 = _314.x;
    uint _326 = _308 | 8u;
    uint _327;
    if (_241)
    {
        _327 = _326;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_189)
        {
            frontier_phi_16_17_ladder = _326 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _326 + 8u;
        }
        _327 = frontier_phi_16_17_ladder;
    }
    uint _331 = _187 ? (_327 + 4u) : _327;
    uint _334 = ((_283 + 4u) + _331) >> 2u;
    uvec2 _340 = uvec2(texelFetch(l_geomAttrib_0, int(_334)).x, texelFetch(l_geomAttrib_0, int(_334 + 1u)).x);
    uint _341 = _340.x;
    uint _342 = _340.y;
    float _346 = float(int(uint(int(_341 << 16u) >> int(16u))));
    float _347 = float(int(uint(int(_341) >> int(16u))));
    float _351 = float(int(uint(int(_342 << 16u) >> int(16u))));
    float _352 = float(int(uint(int(_342) >> int(16u))));
    uint _367 = _185 * _180;
    uint _368 = _367 + 12u;
    uint _389;
    uint _390;
    uint _391;
    uint _392;
    if (_190)
    {
        uvec4 _370 = texelFetch(l_geomAttrib_0, int(_368 >> 2u));
        uint _371 = _370.x;
        _389 = _371 & 255u;
        _390 = (_371 >> 8u) & 255u;
        _391 = (_371 >> 16u) & 255u;
        _392 = 16u;
    }
    else
    {
        uint _377 = _368 >> 2u;
        uvec2 _383 = uvec2(texelFetch(l_geomAttrib_0, int(_377)).x, texelFetch(l_geomAttrib_0, int(_377 + 1u)).x);
        uint _384 = _383.x;
        _389 = _384 & 65535u;
        _390 = _384 >> 16u;
        _391 = _383.y & 65535u;
        _392 = 20u;
    }
    uvec4 _398 = texelFetch(l_geomAttrib_0, int((_392 + _367) >> 2u));
    uint _399 = _398.x;
    uint _410 = _392 | 8u;
    uint _411;
    if (_241)
    {
        _411 = _410;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_189)
        {
            frontier_phi_23_24_ladder = _410 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _410 + 8u;
        }
        _411 = frontier_phi_23_24_ladder;
    }
    uint _415 = _187 ? (_411 + 4u) : _411;
    uint _418 = ((_367 + 4u) + _415) >> 2u;
    uvec2 _424 = uvec2(texelFetch(l_geomAttrib_0, int(_418)).x, texelFetch(l_geomAttrib_0, int(_418 + 1u)).x);
    uint _425 = _424.x;
    uint _426 = _424.y;
    float _430 = float(int(uint(int(_425 << 16u) >> int(16u))));
    float _431 = float(int(uint(int(_425) >> int(16u))));
    float _435 = float(int(uint(int(_426 << 16u) >> int(16u))));
    float _436 = float(int(uint(int(_426) >> int(16u))));
    bool _452 = _136.z == 0u;
    float _488;
    float _489;
    float _490;
    if (_452)
    {
        uint _455 = _177 * 3u;
        uvec3 _464 = uvec3(texelFetch(l_geomPositionBuffer, int(_455)).x, texelFetch(l_geomPositionBuffer, int(_455 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_455 + 2u)).x);
        _488 = uintBitsToFloat(_464.x);
        _489 = uintBitsToFloat(_464.y);
        _490 = uintBitsToFloat(_464.z);
    }
    else
    {
        uint _472 = _177 * 2u;
        uvec2 _478 = uvec2(texelFetch(l_geomPositionBuffer, int(_472)).x, texelFetch(l_geomPositionBuffer, int(_472 + 1u)).x);
        uint _479 = _478.x;
        _488 = unpackHalf2x16(_479).x;
        _489 = unpackHalf2x16(_479 >> 16u).x;
        _490 = unpackHalf2x16(_478.y).x;
    }
    float _526;
    float _527;
    float _528;
    if (_452)
    {
        uint _493 = _179 * 3u;
        uvec3 _502 = uvec3(texelFetch(l_geomPositionBuffer, int(_493)).x, texelFetch(l_geomPositionBuffer, int(_493 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_493 + 2u)).x);
        _526 = uintBitsToFloat(_502.x);
        _527 = uintBitsToFloat(_502.y);
        _528 = uintBitsToFloat(_502.z);
    }
    else
    {
        uint _510 = _179 * 2u;
        uvec2 _516 = uvec2(texelFetch(l_geomPositionBuffer, int(_510)).x, texelFetch(l_geomPositionBuffer, int(_510 + 1u)).x);
        uint _517 = _516.x;
        _526 = unpackHalf2x16(_517).x;
        _527 = unpackHalf2x16(_517 >> 16u).x;
        _528 = unpackHalf2x16(_516.y).x;
    }
    float _564;
    float _565;
    float _566;
    if (_452)
    {
        uint _531 = _180 * 3u;
        uvec3 _540 = uvec3(texelFetch(l_geomPositionBuffer, int(_531)).x, texelFetch(l_geomPositionBuffer, int(_531 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_531 + 2u)).x);
        _564 = uintBitsToFloat(_540.x);
        _565 = uintBitsToFloat(_540.y);
        _566 = uintBitsToFloat(_540.z);
    }
    else
    {
        uint _548 = _180 * 2u;
        uvec2 _554 = uvec2(texelFetch(l_geomPositionBuffer, int(_548)).x, texelFetch(l_geomPositionBuffer, int(_548 + 1u)).x);
        uint _555 = _554.x;
        _564 = unpackHalf2x16(_555).x;
        _565 = unpackHalf2x16(_555 >> 16u).x;
        _566 = unpackHalf2x16(_554.y).x;
    }
    float _569 = (1.0 - hit._m0.x) - hit._m0.y;
    float _616 = (((float(texelFetch(l_geomAttrib_0, int(((_283 + 12u) + _331) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_191 + 12u) + _247) >> 2u)).x & 255u) * _569)) + (float(texelFetch(l_geomAttrib_0, int(((_367 + 12u) + _415) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _623 = (((float(texelFetch(l_geomAttrib_0, int(((_283 + 16u) + _331) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_191 + 16u) + _247) >> 2u)).x & 255u) * _569)) + (float(texelFetch(l_geomAttrib_0, int(((_367 + 16u) + _415) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _626 = (_346 - _262) * 0.00048828125;
    float _628 = (_347 - _263) * 0.00048828125;
    float _631 = (_430 - _262) * 0.00048828125;
    float _632 = (_431 - _263) * 0.00048828125;
    float _635 = (_351 - _267) * 0.00048828125;
    float _636 = (_352 - _268) * 0.00048828125;
    float _639 = (_435 - _267) * 0.00048828125;
    float _640 = (_436 - _268) * 0.00048828125;
    float _662 = _526 - _488;
    float _663 = _527 - _489;
    float _664 = _528 - _490;
    float _667 = fma(_664, gl_ObjectToWorldEXT[2u].x, fma(_663, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _662));
    float _670 = fma(_664, gl_ObjectToWorldEXT[2u].y, fma(_663, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _662));
    float _673 = fma(_664, gl_ObjectToWorldEXT[2u].z, fma(_663, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _662));
    float _674 = _564 - _488;
    float _675 = _565 - _489;
    float _676 = _566 - _490;
    float _679 = fma(_676, gl_ObjectToWorldEXT[2u].x, fma(_675, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _674));
    float _682 = fma(_676, gl_ObjectToWorldEXT[2u].y, fma(_675, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _674));
    float _685 = fma(_676, gl_ObjectToWorldEXT[2u].z, fma(_675, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _674));
    float _686 = (((_346 * hit._m0.x) + (_262 * _569)) + (_430 * hit._m0.y)) * 0.00048828125;
    float _687 = (((_347 * hit._m0.x) + (_263 * _569)) + (_431 * hit._m0.y)) * 0.00048828125;
    float _688 = (((_351 * hit._m0.x) + (_267 * _569)) + (_435 * hit._m0.y)) * 0.00048828125;
    float _689 = (((_352 * hit._m0.x) + (_268 * _569)) + (_436 * hit._m0.y)) * 0.00048828125;
    float _693 = (((float(_216) * _569) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_389) * hit._m0.y);
    float _696 = (((float(_217) * _569) + (-127.0)) + (float(_306) * hit._m0.x)) + (float(_390) * hit._m0.y);
    float _699 = (((float(_218) * _569) + (-127.0)) + (float(_307) * hit._m0.x)) + (float(_391) * hit._m0.y);
    float _700 = _693 * 0.0078740157186985015869140625;
    float _702 = _696 * 0.0078740157186985015869140625;
    float _703 = _699 * 0.0078740157186985015869140625;
    float _716 = ((((float(_228 & 255u) * _569) + (-127.0)) + (float(_315 & 255u) * hit._m0.x)) + (float(_399 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _717 = ((((float((_228 >> 8u) & 255u) * _569) + (-127.0)) + (float((_315 >> 8u) & 255u) * hit._m0.x)) + (float((_399 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _718 = ((((float((_228 >> 16u) & 255u) * _569) + (-127.0)) + (float((_315 >> 16u) & 255u) * hit._m0.x)) + (float((_399 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _719 = ((((float(_228 >> 24u) * _569) + (-127.0)) + (float(_315 >> 24u) * hit._m0.x)) + (float(_399 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _729 = ((_717 * _703) - (_718 * _702)) * _719;
    float _730 = ((_718 * _700) - (_716 * _703)) * _719;
    float _731 = ((_716 * _702) - (_717 * _700)) * _719;
    float _735 = inversesqrt(dot(vec3(_729, _730, _731), vec3(_729, _730, _731)));
    float _736 = _735 * _729;
    float _737 = _735 * _730;
    float _738 = _735 * _731;
    uvec2 _763 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_13, int(0u)));
    bool _768 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _821;
    if (_768)
    {
        float _779 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _785 = (_685 * _670) - (_682 * _673);
        float _788 = (_679 * _673) - (_685 * _667);
        float _791 = (_682 * _667) - (_679 * _670);
        float _818 = ((log2((((float(_763.y) * 0.5) * float(_763.x)) * abs((_632 * _626) - (_631 * _628))) / (sqrt(((_788 * _788) + (_791 * _791)) + (_785 * _785)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_779 * gl_WorldRayDirectionEXT.x, _779 * gl_WorldRayDirectionEXT.y, _779 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _821 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    }
    else
    {
        _821 = 0.0;
    }
    vec4 _825 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _686) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _687) + cbTextureTilingScale._m0[2u].w), _821);
    float _830 = _825.x * cbMtdParam._m0[9u].x;
    float _831 = _825.y * cbMtdParam._m0[9u].y;
    float _832 = _825.z * cbMtdParam._m0[9u].z;
    uvec2 _850 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_1, int(0u)));
    float _901;
    if (_768)
    {
        float _861 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _867 = (_685 * _670) - (_682 * _673);
        float _870 = (_679 * _673) - (_685 * _667);
        float _873 = (_682 * _667) - (_679 * _670);
        float _899 = ((log2((((float(_850.y) * 0.5) * float(_850.x)) * abs((_640 * _635) - (_639 * _636))) / (sqrt(((_870 * _870) + (_873 * _873)) + (_867 * _867)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_861 * gl_WorldRayDirectionEXT.x, _861 * gl_WorldRayDirectionEXT.y, _861 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _901 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    }
    else
    {
        _901 = 0.0;
    }
    vec4 _903 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _688) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _689) + cbTextureTilingScale._m0[0u].w), _901);
    uvec2 _923 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_21, int(0u)));
    float _974;
    if (_768)
    {
        float _934 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _940 = (_685 * _670) - (_682 * _673);
        float _943 = (_679 * _673) - (_685 * _667);
        float _946 = (_682 * _667) - (_679 * _670);
        float _972 = ((log2((((float(_923.y) * 0.5) * float(_923.x)) * abs((_640 * _635) - (_639 * _636))) / (sqrt(((_943 * _943) + (_946 * _946)) + (_940 * _940)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_934 * gl_WorldRayDirectionEXT.x, _934 * gl_WorldRayDirectionEXT.y, _934 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _974 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    }
    else
    {
        _974 = 0.0;
    }
    float _987 = (_616 - ((cbMtdParam._m0[15u].w * (1.0 - _616)) * (textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _688) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _689) + cbTextureTilingScale._m0[5u].w), _974).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _2054 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _988 = isnan(1.0) ? _2054 : (isnan(_2054) ? 1.0 : min(_2054, 1.0));
    float _995 = (_988 * ((_903.x * cbMtdParam._m0[10u].x) - _830)) + _830;
    float _996 = (_988 * ((_903.y * cbMtdParam._m0[10u].y) - _831)) + _831;
    float _997 = (_988 * ((_903.z * cbMtdParam._m0[10u].z) - _832)) + _832;
    uvec2 _1010 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_5, int(0u)));
    float _1061;
    if (_768)
    {
        float _1021 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1027 = (_685 * _670) - (_682 * _673);
        float _1030 = (_679 * _673) - (_685 * _667);
        float _1033 = (_682 * _667) - (_679 * _670);
        float _1059 = ((log2((((float(_1010.y) * 0.5) * float(_1010.x)) * abs((_640 * _635) - (_639 * _636))) / (sqrt(((_1030 * _1030) + (_1033 * _1033)) + (_1027 * _1027)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1021 * gl_WorldRayDirectionEXT.x, _1021 * gl_WorldRayDirectionEXT.y, _1021 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _1061 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    }
    else
    {
        _1061 = 0.0;
    }
    vec4 _1064 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _688) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _689) + cbTextureTilingScale._m0[8u].w), _1061);
    float _1071 = (_1064.x * 2.0) + (-1.0);
    float _1073 = (_1064.y * 2.0) + (-1.0);
    float _1074 = dot(vec2(_1071, _1073), vec2(_1071, _1073));
    float _2070 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    uvec2 _1092 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_7, int(0u)));
    float _1143;
    if (_768)
    {
        float _1103 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1109 = (_685 * _670) - (_682 * _673);
        float _1112 = (_679 * _673) - (_685 * _667);
        float _1115 = (_682 * _667) - (_679 * _670);
        float _1141 = ((log2((((float(_1092.y) * 0.5) * float(_1092.x)) * abs((_632 * _626) - (_631 * _628))) / (sqrt(((_1112 * _1112) + (_1115 * _1115)) + (_1109 * _1109)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1103 * gl_WorldRayDirectionEXT.x, _1103 * gl_WorldRayDirectionEXT.y, _1103 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _1143 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
    }
    else
    {
        _1143 = 0.0;
    }
    vec4 _1145 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _686) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _687) + cbTextureTilingScale._m0[9u].w), _1143);
    float _1149 = _1145.z;
    float _1152 = (_1145.x * 2.0) + (-1.0);
    float _1153 = (_1145.y * 2.0) + (-1.0);
    float _1154 = dot(vec2(_1152, _1153), vec2(_1152, _1153));
    float _2086 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    float _1159 = sqrt(1.0 - (isnan(1.0) ? _2086 : (isnan(_2086) ? 1.0 : min(_2086, 1.0))));
    float _1164 = ((((_1064.z * cbMtdParam._m0[16u].w) - _1149) * _616) * cbMtdParam._m0[16u].z) + _1149;
    float _1188 = (cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _688;
    float _1189 = (cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + _689;
    uvec2 _1212 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_9, int(0u)));
    float _1263;
    if (_768)
    {
        float _1223 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1229 = (_685 * _670) - (_682 * _673);
        float _1232 = (_679 * _673) - (_685 * _667);
        float _1235 = (_682 * _667) - (_679 * _670);
        float _1261 = ((log2((((float(_1212.y) * 0.5) * float(_1212.x)) * abs((_632 * _626) - (_631 * _628))) / (sqrt(((_1232 * _1232) + (_1235 * _1235)) + (_1229 * _1229)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1223 * gl_WorldRayDirectionEXT.x, _1223 * gl_WorldRayDirectionEXT.y, _1223 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _1263 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    }
    else
    {
        _1263 = 0.0;
    }
    vec4 _1265 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * ((cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _686)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * ((cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x) + _687)) + cbTextureTilingScale._m0[10u].w), _1263);
    float _1271 = (_1265.x * 2.0) + (-1.0);
    float _1272 = (_1265.y * 2.0) + (-1.0);
    float _1276 = 1.0 - dot(vec2(_1271, _1272), vec2(_1271, _1272));
    float _2102 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
    float _1278 = sqrt(isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0)));
    float _1281 = fma(_1278, _700, fma(_1272, _716, _1271 * _736));
    float _1284 = fma(_1278, _702, fma(_1272, _717, _1271 * _737));
    float _1287 = fma(_1278, _703, fma(_1272, _718, _1271 * _738));
    float _1291 = inversesqrt(dot(vec3(_1281, _1284, _1287), vec3(_1281, _1284, _1287)));
    float _1293 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[14u].z;
    float _1301 = (((_1284 * 0.5) * _1291) + (-0.25)) * cbMtdParam._m0[14u].w;
    float _1303 = (-0.0) - (cbMtdParam._m0[14u].w * (((_1281 * 0.5) * _1291) + (-0.25)));
    float _1305 = fract(_1293);
    float _1307 = fract(_1293 + 0.5);
    float _1318 = abs((_1305 * 2.0) + (-1.0));
    vec4 _1335 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1305 * _1303) + _1188) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1301 * _1305) + _1189) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1337 = _1335.x;
    float _1338 = _1335.y;
    float _1339 = _1335.z;
    vec4 _1340 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1307 * _1303) + _1188) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1301 * _1307) + _1189) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1360 = abs((fract(cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _2113 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
    float _1361 = isnan(1.0) ? _2113 : (isnan(_2113) ? 1.0 : min(_2113, 1.0));
    float _1369 = (((_1361 * _1361) * (3.0 - (_1361 * 2.0))) * cbMtdParam._m0[14u].x) - cbMtdParam._m0[14u].y;
    float _1377 = cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x;
    float _1385 = abs((fract(cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _2124 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
    float _1386 = isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0));
    float _1390 = (_1386 * _1386) * (3.0 - (_1386 * 2.0));
    float _1391 = _1390 * cbMtdParam._m0[17u].y;
    float _1392 = _1390 * cbMtdParam._m0[17u].z;
    float _1393 = sin(_1377);
    float _1394 = cos(_1377);
    float _1395 = _688 - _1391;
    float _1396 = _689 - _1392;
    uvec2 _1415 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_10, int(0u)));
    float _1466;
    if (_768)
    {
        float _1426 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1432 = (_685 * _670) - (_682 * _673);
        float _1435 = (_679 * _673) - (_685 * _667);
        float _1438 = (_682 * _667) - (_679 * _670);
        float _1464 = ((log2((((float(_1415.y) * 0.5) * float(_1415.x)) * abs((_640 * _635) - (_639 * _636))) / (sqrt(((_1435 * _1435) + (_1438 * _1438)) + (_1432 * _1432)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1426 * gl_WorldRayDirectionEXT.x, _1426 * gl_WorldRayDirectionEXT.y, _1426 * gl_WorldRayDirectionEXT.z), vec3(_700, _702, _703))));
        _1466 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
    }
    else
    {
        _1466 = 0.0;
    }
    vec4 _1468 = textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (_1391 + fma(_1396, (-0.0) - _1393, _1395 * _1394))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_1396, _1394, _1395 * _1393) + _1392)) + cbTextureTilingScale._m0[1u].w), _1466);
    float _1474 = (cbMtdParam._m0[12u].x * cbMtdParam._m0[13u].w) * _1468.x;
    float _1476 = (cbMtdParam._m0[12u].y * cbMtdParam._m0[13u].w) * _1468.y;
    float _1478 = (cbMtdParam._m0[12u].z * cbMtdParam._m0[13u].w) * _1468.z;
    uvec2 _1500 = uvec2(textureSize(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_23, int(0u)));
    float _1504 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1505 = _1504 * gl_WorldRayDirectionEXT.x;
    float _1506 = _1504 * gl_WorldRayDirectionEXT.y;
    float _1507 = _1504 * gl_WorldRayDirectionEXT.z;
    float _1551;
    if (_768)
    {
        float _1517 = (_685 * _670) - (_682 * _673);
        float _1520 = (_679 * _673) - (_685 * _667);
        float _1523 = (_682 * _667) - (_679 * _670);
        float _1549 = ((log2((((float(_1500.y) * 0.5) * float(_1500.x)) * abs((_640 * _635) - (_639 * _636))) / (sqrt(((_1520 * _1520) + (_1523 * _1523)) + (_1517 * _1517)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_125) / abs(dot(vec3(_1505, _1506, _1507), vec3(_700, _702, _703))));
        _1551 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    }
    else
    {
        _1551 = 0.0;
    }
    float _1562 = (_623 - ((cbMtdParam._m0[17u].x * (1.0 - _623)) * (textureLod(sampler2D(M_AMSN_M1_2Blend_Combustion_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _1188) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _1189) + cbTextureTilingScale._m0[6u].w), _1551).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[13u].x + 1.0);
    float _2145 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
    float _1563 = isnan(1.0) ? _2145 : (isnan(_2145) ? 1.0 : min(_2145, 1.0));
    float _1564 = cbMtdParam._m0[13u].y * cbMtdParam._m0[15u].z;
    float _1586 = (_988 * (_1071 - _1152)) + _1152;
    float _1587 = (_988 * (_1073 - _1153)) + _1153;
    float _1588 = (_988 * (sqrt(1.0 - (isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0)))) - _1159)) + _1159;
    float _1591 = fma(_1588, _700, fma(_1587, _716, _1586 * _736));
    float _1594 = fma(_1588, _702, fma(_1587, _717, _1586 * _737));
    float _1597 = fma(_1588, _703, fma(_1587, _718, _1586 * _738));
    float _1601 = inversesqrt(dot(vec3(_1591, _1594, _1597), vec3(_1591, _1594, _1597)));
    float _1602 = _1601 * _1591;
    float _1603 = _1601 * _1594;
    float _1604 = _1601 * _1597;
    float _1616 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1617 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1618 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1619 = (-0.0) - _1505;
    float _1620 = (-0.0) - _1506;
    float _1621 = (-0.0) - _1507;
    float _1627 = float(gl_LaunchIDEXT.x);
    float _1628 = float(gl_LaunchIDEXT.y);
    float _1631 = float(gl_LaunchSizeEXT.x);
    float _1645 = fract(fract(sin(dot(vec2(_1627 / _1631, _1628 / _88), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1658 = fract(fract(sin(dot(vec2((_1627 + 128.0) / _1631, (_1628 + 128.0) / _88), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _74._m0 = 1u;
    uvec4 _1668 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1669 = _1668.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1669, _1668.w, _1669, vec3(_1616, _1617, _1618), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    if (_74._m0 == 0u)
    {
        float _1689 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1602, _1603, _1604));
        float _2156 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1692 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        float _1711 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1164) * 0.949999988079071044921875);
        float _1712 = _1711 * _1711;
        float _1713 = g_sceneCB._m0[4u].x - _1505;
        float _1714 = g_sceneCB._m0[4u].y - _1506;
        float _1715 = g_sceneCB._m0[4u].z - _1507;
        float _1719 = inversesqrt(dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715)));
        float _1720 = _1719 * _1713;
        float _1721 = _1719 * _1714;
        float _1722 = _1719 * _1715;
        float _1723 = dot(vec3(_1602, _1603, _1604), vec3(g_sceneCB._m0[4u].xyz));
        float _2167 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
        float _1726 = isnan(1.0) ? _2167 : (isnan(_2167) ? 1.0 : min(_2167, 1.0));
        float _1727 = dot(vec3(_1602, _1603, _1604), vec3(_1619, _1620, _1621));
        float _2178 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1730 = isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0));
        float _1731 = dot(vec3(_1602, _1603, _1604), vec3(_1720, _1721, _1722));
        float _2189 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1734 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        float _1735 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1720, _1721, _1722));
        float _2200 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1739 = _1712 * _1712;
        float _1743 = ((_1734 * _1734) * (_1739 + (-1.0))) + 1.0;
        float _1755 = (exp2(log2(1.0 - (isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1757 = 1.0 - _1712;
        float _1768 = (0.5 / (((_1730 * ((_1726 * _1757) + _1712)) + 9.9999999392252902907785028219223e-09) + (((_1730 * _1757) + _1712) * _1726))) * _1726;
        float _2211 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1770 = (isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0))) * (_1739 / ((_1743 * _1743) * 3.141590118408203125));
        _1777 = ((_995 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1692;
        _1778 = ((_996 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1692;
        _1779 = ((_997 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1692;
        _1780 = (_1755 * g_sceneCB._m0[5u].x) * _1770;
        _1781 = (_1755 * g_sceneCB._m0[5u].y) * _1770;
        _1782 = (_1755 * g_sceneCB._m0[5u].z) * _1770;
    }
    else
    {
        _1777 = 0.0;
        _1778 = 0.0;
        _1779 = 0.0;
        _1780 = 0.0;
        _1781 = 0.0;
        _1782 = 0.0;
    }
    bool _1784 = abs(_1603) < 0.89999997615814208984375;
    float _1786 = float(_1784);
    float _1787 = _1784 ? 0.0 : 1.0;
    float _1790 = (_1786 * _1604) - (_1787 * _1603);
    float _1791 = _1787 * _1602;
    float _1793 = (-0.0) - (_1602 * _1786);
    float _1797 = inversesqrt(dot(vec3(_1790, _1791, _1793), vec3(_1790, _1791, _1793)));
    float _1798 = _1790 * _1797;
    float _1799 = _1791 * _1797;
    float _1800 = _1797 * _1793;
    float _1803 = (_1799 * _1604) - (_1800 * _1603);
    float _1806 = (_1800 * _1602) - (_1798 * _1604);
    float _1809 = (_1798 * _1603) - (_1799 * _1602);
    float _1811;
    float _1819;
    float _1810 = 0.0;
    uint _1812 = 0u;
    float _1816;
    bool _1818;
    for (;;)
    {
        _1816 = (float(_1812) + _1645) * 0.03125;
        _1818 = _1812 == 0u;
        float frontier_phi_55_pred;
        if (_1818)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1956;
            float _1957;
            uint _1959;
            _1956 = 0.0;
            _1957 = 0.5;
            _1959 = _1812;
            float _1820;
            for (;;)
            {
                _1820 = ((_1959 & 1u) != 0u) ? (_1957 + _1956) : _1956;
                uint _1960 = _1959 >> 1u;
                if (_1960 == 0u)
                {
                    break;
                }
                else
                {
                    _1956 = _1820;
                    _1957 *= 0.5;
                    _1959 = _1960;
                }
            }
            frontier_phi_55_pred = _1820;
        }
        _1819 = frontier_phi_55_pred;
        float _1821 = _1819 + _1658;
        float _1825 = sqrt(_1816);
        float _1826 = ((_1821 > 1.0) ? (_1821 + (-1.0)) : _1821) * 6.283185482025146484375;
        float _1829 = cos(_1826) * _1825;
        float _1831 = sin(_1826) * _1825;
        float _1833 = sqrt(1.0 - _1816);
        float _1846 = ((_1833 * _1602) + (_1829 * _1803)) + (_1831 * _1798);
        float _1847 = ((_1833 * _1603) + (_1829 * _1806)) + (_1831 * _1799);
        float _1848 = ((_1833 * _1604) + (_1829 * _1809)) + (_1831 * _1800);
        _73._m0 = 1u;
        uvec4 _1852 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1853 = _1852.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1853, _1852.w, _1853, vec3(_1616, _1617, _1618), 9.9999997473787516355514526367188e-05, vec3(_1846, _1847, _1848), 10000.0, 1);
        float _1859 = dot(vec3(_1602, _1603, _1604), vec3(_1846, _1847, _1848));
        float _2222 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1862 = isnan(1.0) ? _2222 : (isnan(_2222) ? 1.0 : min(_2222, 1.0));
        _1811 = ((float(_73._m0 == 0u) * _1862) / (_1862 * 0.3183098733425140380859375)) + _1810;
        uint _1813 = _1812 + 1u;
        if (_1813 == 32u)
        {
            break;
        }
        else
        {
            _1810 = _1811;
            _1812 = _1813;
            continue;
        }
    }
    float _1870 = _1811 * 0.009947183541953563690185546875;
    float _1875 = dot(vec3(_1505, _1506, _1507), vec3(_1602, _1603, _1604)) * 2.0;
    vec4 _1889 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1505 - (_1875 * _1602), _1506 - (_1875 * _1603), _1507 - (_1875 * _1604)), 4.0 - (_1164 * 4.0));
    float _1894 = dot(vec3(_1619, _1620, _1621), vec3(_1602, _1603, _1604));
    float _2233 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
    float _1903 = (exp2(log2(1.0 - (isnan(1.0) ? _2233 : (isnan(_2233) ? 1.0 : min(_2233, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1909 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1602, _1603, _1604), 0.0);
    float _1921 = ((_1777 + (((((_1564 * cbMtdParam._m0[11u].x) * (((_1340.x - _1337) * _1318) + _1337)) * _1369) * (((1.0 - _1474) * cbMtdParam._m0[16u].y) + _1474)) * _1563)) + _1780) + (((_1909.x * _995) + (_1903 * _1889.x)) * _1870);
    float _1926 = ((_1778 + (((((_1564 * cbMtdParam._m0[11u].y) * (((_1340.y - _1338) * _1318) + _1338)) * _1369) * (((1.0 - _1476) * cbMtdParam._m0[16u].y) + _1476)) * _1563)) + _1781) + (((_1909.y * _996) + (_1903 * _1889.y)) * _1870);
    float _1931 = ((_1779 + (((((_1564 * cbMtdParam._m0[11u].z) * (((_1340.z - _1339) * _1318) + _1339)) * _1369) * (((1.0 - _1478) * cbMtdParam._m0[16u].y) + _1478)) * _1563)) + _1782) + (((_1909.z * _997) + (_1903 * _1889.z)) * _1870);
    float _2244 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
    float _2255 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
    float _2266 = isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0));
    bool _1939 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1950;
    _1950.x = _1939 ? ((_693 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0)));
    _1950.y = _1939 ? ((_696 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0)));
    _1950.z = _1939 ? ((_699 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2266 : (isnan(_2266) ? 1.0 : min(_2266, 1.0)));
    payload._m0 = _1950;
}


