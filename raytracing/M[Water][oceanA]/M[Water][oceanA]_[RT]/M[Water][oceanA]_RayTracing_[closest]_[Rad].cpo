#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanA_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanA_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanA_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_oceanA_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_oceanA_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_oceanA_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _2813;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uint _246 = ((_187 + 4u) + _243) >> 2u;
    uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
    uint _253 = _252.x;
    uint _254 = _252.y;
    float _258 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_253) >> int(16u))));
    float _263 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_254) >> int(16u))));
    uvec4 _268 = texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _243) >> 2u));
    uint _269 = _268.x;
    uvec4 _281 = texelFetch(l_geomAttrib_0, int(((_187 + 16u) + _243) >> 2u));
    uint _282 = _281.x;
    uint _291 = _181 * _175;
    uint _292 = _291 + 12u;
    uint _313;
    uint _314;
    uint _315;
    uint _316;
    if (_186)
    {
        uvec4 _294 = texelFetch(l_geomAttrib_0, int(_292 >> 2u));
        uint _295 = _294.x;
        _313 = _295 & 255u;
        _314 = (_295 >> 8u) & 255u;
        _315 = (_295 >> 16u) & 255u;
        _316 = 16u;
    }
    else
    {
        uint _301 = _292 >> 2u;
        uvec2 _307 = uvec2(texelFetch(l_geomAttrib_0, int(_301)).x, texelFetch(l_geomAttrib_0, int(_301 + 1u)).x);
        uint _308 = _307.x;
        _313 = _308 & 65535u;
        _314 = _308 >> 16u;
        _315 = _307.y & 65535u;
        _316 = 20u;
    }
    uvec4 _322 = texelFetch(l_geomAttrib_0, int((_316 + _291) >> 2u));
    uint _323 = _322.x;
    uint _335;
    if (_238)
    {
        _335 = _316 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _316 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _316 + 12u;
        }
        _335 = frontier_phi_16_17_ladder;
    }
    uint _339 = _183 ? (_335 + 4u) : _335;
    uint _342 = ((_291 + 4u) + _339) >> 2u;
    uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
    uint _349 = _348.x;
    uint _350 = _348.y;
    float _354 = float(int(uint(int(_349 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_349) >> int(16u))));
    float _359 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_350) >> int(16u))));
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_291 + 12u) + _339) >> 2u));
    uint _365 = _364.x;
    uvec4 _377 = texelFetch(l_geomAttrib_0, int(((_291 + 16u) + _339) >> 2u));
    uint _378 = _377.x;
    uint _387 = _181 * _176;
    uint _388 = _387 + 12u;
    uint _409;
    uint _410;
    uint _411;
    uint _412;
    if (_186)
    {
        uvec4 _390 = texelFetch(l_geomAttrib_0, int(_388 >> 2u));
        uint _391 = _390.x;
        _409 = _391 & 255u;
        _410 = (_391 >> 8u) & 255u;
        _411 = (_391 >> 16u) & 255u;
        _412 = 16u;
    }
    else
    {
        uint _397 = _388 >> 2u;
        uvec2 _403 = uvec2(texelFetch(l_geomAttrib_0, int(_397)).x, texelFetch(l_geomAttrib_0, int(_397 + 1u)).x);
        uint _404 = _403.x;
        _409 = _404 & 65535u;
        _410 = _404 >> 16u;
        _411 = _403.y & 65535u;
        _412 = 20u;
    }
    uvec4 _418 = texelFetch(l_geomAttrib_0, int((_412 + _387) >> 2u));
    uint _419 = _418.x;
    uint _431;
    if (_238)
    {
        _431 = _412 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _412 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _412 + 12u;
        }
        _431 = frontier_phi_23_24_ladder;
    }
    uint _435 = _183 ? (_431 + 4u) : _431;
    uint _438 = ((_387 + 4u) + _435) >> 2u;
    uvec2 _444 = uvec2(texelFetch(l_geomAttrib_0, int(_438)).x, texelFetch(l_geomAttrib_0, int(_438 + 1u)).x);
    uint _445 = _444.x;
    uint _446 = _444.y;
    float _450 = float(int(uint(int(_445 << 16u) >> int(16u))));
    float _451 = float(int(uint(int(_445) >> int(16u))));
    float _455 = float(int(uint(int(_446 << 16u) >> int(16u))));
    float _456 = float(int(uint(int(_446) >> int(16u))));
    uvec4 _460 = texelFetch(l_geomAttrib_0, int(((_387 + 12u) + _435) >> 2u));
    uint _461 = _460.x;
    uvec4 _473 = texelFetch(l_geomAttrib_0, int(((_387 + 16u) + _435) >> 2u));
    uint _474 = _473.x;
    bool _484 = _132.z == 0u;
    float _520;
    float _521;
    float _522;
    if (_484)
    {
        uint _487 = _173 * 3u;
        uvec3 _496 = uvec3(texelFetch(l_geomPositionBuffer, int(_487)).x, texelFetch(l_geomPositionBuffer, int(_487 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_487 + 2u)).x);
        _520 = uintBitsToFloat(_496.x);
        _521 = uintBitsToFloat(_496.y);
        _522 = uintBitsToFloat(_496.z);
    }
    else
    {
        uint _504 = _173 * 2u;
        uvec2 _510 = uvec2(texelFetch(l_geomPositionBuffer, int(_504)).x, texelFetch(l_geomPositionBuffer, int(_504 + 1u)).x);
        uint _511 = _510.x;
        _520 = unpackHalf2x16(_511).x;
        _521 = unpackHalf2x16(_511 >> 16u).x;
        _522 = unpackHalf2x16(_510.y).x;
    }
    float _558;
    float _559;
    float _560;
    if (_484)
    {
        uint _525 = _175 * 3u;
        uvec3 _534 = uvec3(texelFetch(l_geomPositionBuffer, int(_525)).x, texelFetch(l_geomPositionBuffer, int(_525 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_525 + 2u)).x);
        _558 = uintBitsToFloat(_534.x);
        _559 = uintBitsToFloat(_534.y);
        _560 = uintBitsToFloat(_534.z);
    }
    else
    {
        uint _542 = _175 * 2u;
        uvec2 _548 = uvec2(texelFetch(l_geomPositionBuffer, int(_542)).x, texelFetch(l_geomPositionBuffer, int(_542 + 1u)).x);
        uint _549 = _548.x;
        _558 = unpackHalf2x16(_549).x;
        _559 = unpackHalf2x16(_549 >> 16u).x;
        _560 = unpackHalf2x16(_548.y).x;
    }
    float _596;
    float _597;
    float _598;
    if (_484)
    {
        uint _563 = _176 * 3u;
        uvec3 _572 = uvec3(texelFetch(l_geomPositionBuffer, int(_563)).x, texelFetch(l_geomPositionBuffer, int(_563 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_563 + 2u)).x);
        _596 = uintBitsToFloat(_572.x);
        _597 = uintBitsToFloat(_572.y);
        _598 = uintBitsToFloat(_572.z);
    }
    else
    {
        uint _580 = _176 * 2u;
        uvec2 _586 = uvec2(texelFetch(l_geomPositionBuffer, int(_580)).x, texelFetch(l_geomPositionBuffer, int(_580 + 1u)).x);
        uint _587 = _586.x;
        _596 = unpackHalf2x16(_587).x;
        _597 = unpackHalf2x16(_587 >> 16u).x;
        _598 = unpackHalf2x16(_586.y).x;
    }
    float _601 = (1.0 - hit._m0.x) - hit._m0.y;
    float _654 = (((float(_365 & 255u) * hit._m0.x) + (float(_269 & 255u) * _601)) + (float(_461 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _657 = ((float((_365 >> 8u) & 255u) * hit._m0.x) + (float((_269 >> 8u) & 255u) * _601)) + (float((_461 >> 8u) & 255u) * hit._m0.y);
    float _658 = _657 * 0.0039215688593685626983642578125;
    float _660 = ((float((_365 >> 16u) & 255u) * hit._m0.x) + (float((_269 >> 16u) & 255u) * _601)) + (float((_461 >> 16u) & 255u) * hit._m0.y);
    float _661 = _660 * 0.0039215688593685626983642578125;
    float _682 = (_354 - _258) * 0.00048828125;
    float _684 = (_355 - _259) * 0.00048828125;
    float _687 = (_450 - _258) * 0.00048828125;
    float _688 = (_451 - _259) * 0.00048828125;
    float _714 = _558 - _520;
    float _715 = _559 - _521;
    float _716 = _560 - _522;
    float _719 = fma(_716, gl_ObjectToWorldEXT[2u].x, fma(_715, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _714));
    float _722 = fma(_716, gl_ObjectToWorldEXT[2u].y, fma(_715, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _714));
    float _725 = fma(_716, gl_ObjectToWorldEXT[2u].z, fma(_715, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _714));
    float _726 = _596 - _520;
    float _727 = _597 - _521;
    float _728 = _598 - _522;
    float _731 = fma(_728, gl_ObjectToWorldEXT[2u].x, fma(_727, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _726));
    float _734 = fma(_728, gl_ObjectToWorldEXT[2u].y, fma(_727, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _726));
    float _737 = fma(_728, gl_ObjectToWorldEXT[2u].z, fma(_727, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _726));
    float _738 = (((_354 * hit._m0.x) + (_258 * _601)) + (_450 * hit._m0.y)) * 0.00048828125;
    float _739 = (((_355 * hit._m0.x) + (_259 * _601)) + (_451 * hit._m0.y)) * 0.00048828125;
    float _745 = (((float(_212) * _601) + (-127.0)) + (float(_313) * hit._m0.x)) + (float(_409) * hit._m0.y);
    float _748 = (((float(_213) * _601) + (-127.0)) + (float(_314) * hit._m0.x)) + (float(_410) * hit._m0.y);
    float _751 = (((float(_214) * _601) + (-127.0)) + (float(_315) * hit._m0.x)) + (float(_411) * hit._m0.y);
    float _752 = _745 * 0.0078740157186985015869140625;
    float _754 = _748 * 0.0078740157186985015869140625;
    float _755 = _751 * 0.0078740157186985015869140625;
    float _768 = ((((float(_224 & 255u) * _601) + (-127.0)) + (float(_323 & 255u) * hit._m0.x)) + (float(_419 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _769 = ((((float((_224 >> 8u) & 255u) * _601) + (-127.0)) + (float((_323 >> 8u) & 255u) * hit._m0.x)) + (float((_419 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _770 = ((((float((_224 >> 16u) & 255u) * _601) + (-127.0)) + (float((_323 >> 16u) & 255u) * hit._m0.x)) + (float((_419 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _771 = ((((float(_224 >> 24u) * _601) + (-127.0)) + (float(_323 >> 24u) * hit._m0.x)) + (float(_419 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _781 = ((_769 * _755) - (_770 * _754)) * _771;
    float _782 = ((_770 * _752) - (_768 * _755)) * _771;
    float _783 = ((_768 * _754) - (_769 * _752)) * _771;
    float _787 = inversesqrt(dot(vec3(_781, _782, _783), vec3(_781, _782, _783)));
    float _806 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    uvec2 _822 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_2, int(0u)));
    bool _827 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _880;
    if (_827)
    {
        float _838 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _844 = (_737 * _722) - (_734 * _725);
        float _847 = (_731 * _725) - (_737 * _719);
        float _850 = (_734 * _719) - (_731 * _722);
        float _877 = ((log2((((float(_822.y) * 0.5) * float(_822.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_847 * _847) + (_850 * _850)) + (_844 * _844)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_838 * gl_WorldRayDirectionEXT.x, _838 * gl_WorldRayDirectionEXT.y, _838 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _880 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    }
    else
    {
        _880 = 0.0;
    }
    vec4 _884 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_2, SS_BumpMap), vec2((((_806 * cbMtdParam._m0[27u].x) + _738) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_806 * cbMtdParam._m0[27u].y) + _739) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _880);
    float _886 = _884.x;
    float _887 = _884.y;
    float _888 = _884.z;
    float _889 = _884.w;
    float _897 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _900 = ((-0.0) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _897 : (isnan(_897) ? 0.001000000047497451305389404296875 : max(_897, 0.001000000047497451305389404296875)));
    float _901 = _900 + 0.180000007152557373046875;
    float _903 = _901 * 12.0;
    float _2927 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _906 = _901 * 7.0;
    float _2938 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _908 = isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0));
    float _919 = (_888 * 0.00200000009499490261077880859375) + _738;
    float _920 = (_888 * 0.00999999977648258209228515625) + _739;
    uvec2 _934 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_3, int(0u)));
    float _985;
    if (_827)
    {
        float _945 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _951 = (_737 * _722) - (_734 * _725);
        float _954 = (_731 * _725) - (_737 * _719);
        float _957 = (_734 * _719) - (_731 * _722);
        float _983 = ((log2((((float(_934.y) * 0.5) * float(_934.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_954 * _954) + (_957 * _957)) + (_951 * _951)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_945 * gl_WorldRayDirectionEXT.x, _945 * gl_WorldRayDirectionEXT.y, _945 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _985 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    }
    else
    {
        _985 = 0.0;
    }
    vec4 _988 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].z * _806) + _919) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].w * _806) + _920) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _985);
    float _990 = _988.x;
    float _1060;
    if (_827)
    {
        float _1020 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1026 = (_737 * _722) - (_734 * _725);
        float _1029 = (_731 * _725) - (_737 * _719);
        float _1032 = (_734 * _719) - (_731 * _722);
        float _1058 = ((log2((((float(_934.y) * 0.5) * float(_934.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1029 * _1029) + (_1032 * _1032)) + (_1026 * _1026)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1020 * gl_WorldRayDirectionEXT.x, _1020 * gl_WorldRayDirectionEXT.y, _1020 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1060 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    }
    else
    {
        _1060 = 0.0;
    }
    float _1065 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].z * _919) + (cbMtdParam._m0[26u].z * _806)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].w * _920) + (cbMtdParam._m0[26u].w * _806)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1060).x + (-0.0500000007450580596923828125);
    float _1068 = (isnan(_1065) ? _990 : (isnan(_990) ? _1065 : max(_990, _1065))) - _908;
    float _2964 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1069 = isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0));
    float _1070 = _908 + 0.5;
    float _2975 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _1080 = cbMtdParam._m0[16u].w * _806;
    float _1081 = cos(_1080);
    float _1082 = sin(_1080);
    uvec2 _1106 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_0, int(0u)));
    float _1157;
    if (_827)
    {
        float _1117 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1123 = (_737 * _722) - (_734 * _725);
        float _1126 = (_731 * _725) - (_737 * _719);
        float _1129 = (_734 * _719) - (_731 * _722);
        float _1155 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1126 * _1126) + (_1129 * _1129)) + (_1123 * _1123)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1117 * gl_WorldRayDirectionEXT.x, _1117 * gl_WorldRayDirectionEXT.y, _1117 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1157 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
    }
    else
    {
        _1157 = 0.0;
    }
    vec4 _1159 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_1082 * cbMtdParam._m0[31u].x) + _738) + (cbMtdParam._m0[22u].x * _806)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_1081 * cbMtdParam._m0[31u].y) + _739) + (cbMtdParam._m0[22u].y * _806)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1157);
    float _1163 = _1159.z;
    float _1228;
    if (_827)
    {
        float _1188 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1194 = (_737 * _722) - (_734 * _725);
        float _1197 = (_731 * _725) - (_737 * _719);
        float _1200 = (_734 * _719) - (_731 * _722);
        float _1226 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1197 * _1197) + (_1200 * _1200)) + (_1194 * _1194)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1188 * gl_WorldRayDirectionEXT.x, _1188 * gl_WorldRayDirectionEXT.y, _1188 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1228 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    }
    else
    {
        _1228 = 0.0;
    }
    vec4 _1230 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].z * _806) + _738) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].w * _806) + _739) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1228);
    float _1234 = _1230.z;
    float _1237 = (isnan(_1234) ? _1163 : (isnan(_1163) ? _1234 : max(_1163, _1234))) * (isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0)));
    float _3001 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1238 = isnan(1.0) ? _3001 : (isnan(_3001) ? 1.0 : min(_3001, 1.0));
    float _1241 = (0.5 - _889) + (isnan(_1238) ? _1069 : (isnan(_1069) ? _1238 : max(_1069, _1238)));
    float _3017 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1242 = isnan(1.0) ? _3017 : (isnan(_3017) ? 1.0 : min(_3017, 1.0));
    float _1243 = _1242 * 0.5;
    float _3028 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
    float _1253 = isnan(1.0) ? _3028 : (isnan(_3028) ? 1.0 : min(_3028, 1.0));
    float _1254 = _888 - _1253;
    float _3039 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
    float _1255 = isnan(1.0) ? _3039 : (isnan(_3039) ? 1.0 : min(_3039, 1.0));
    float _1358;
    if (_827)
    {
        float _1318 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1324 = (_737 * _722) - (_734 * _725);
        float _1327 = (_731 * _725) - (_737 * _719);
        float _1330 = (_734 * _719) - (_731 * _722);
        float _1356 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1327 * _1327) + (_1330 * _1330)) + (_1324 * _1324)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1318 * gl_WorldRayDirectionEXT.x, _1318 * gl_WorldRayDirectionEXT.y, _1318 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1358 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
    }
    else
    {
        _1358 = 0.0;
    }
    vec4 _1360 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].x * _806) + (cbMtdParam._m0[30u].z * _1082)) + (cbMtdParam._m0[34u].z * _738)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].y * _806) + (cbMtdParam._m0[30u].w * _1081)) + (cbMtdParam._m0[34u].w * _739)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1358);
    float _1385 = cbMtdParam._m0[37u].w * _654;
    uvec2 _1410 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_5, int(0u)));
    float _1461;
    if (_827)
    {
        float _1421 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1427 = (_737 * _722) - (_734 * _725);
        float _1430 = (_731 * _725) - (_737 * _719);
        float _1433 = (_734 * _719) - (_731 * _722);
        float _1459 = ((log2((((float(_1410.y) * 0.5) * float(_1410.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1430 * _1430) + (_1433 * _1433)) + (_1427 * _1427)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1421 * gl_WorldRayDirectionEXT.x, _1421 * gl_WorldRayDirectionEXT.y, _1421 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1461 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
    }
    else
    {
        _1461 = 0.0;
    }
    float _1532;
    if (_827)
    {
        float _1492 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1498 = (_737 * _722) - (_734 * _725);
        float _1501 = (_731 * _725) - (_737 * _719);
        float _1504 = (_734 * _719) - (_731 * _722);
        float _1530 = ((log2((((float(_1410.y) * 0.5) * float(_1410.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1501 * _1501) + (_1504 * _1504)) + (_1498 * _1498)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1492 * gl_WorldRayDirectionEXT.x, _1492 * gl_WorldRayDirectionEXT.y, _1492 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1532 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    }
    else
    {
        _1532 = 0.0;
    }
    float _1544 = ((((((_1360.w + (-0.5)) * cbMtdParam._m0[43u].w) + (cbMtdParam._m0[39u].y * (_1159.w + (-0.5)))) + (cbMtdParam._m0[40u].x * (_1230.w + (-0.5)))) + (((_1385 + cbMtdParam._m0[41u].z) * cos(cbMtdParam._m0[13u].y * _806)) * (textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].z * _738) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].w * _739) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1461).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _806) * (cbMtdParam._m0[40u].w + _1385)) * (textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].z * _738) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].w * _739) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1532).y + (-0.5)))) * (1.0 - _658);
    float _1617;
    if (_827)
    {
        float _1577 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1583 = (_737 * _722) - (_734 * _725);
        float _1586 = (_731 * _725) - (_737 * _719);
        float _1589 = (_734 * _719) - (_731 * _722);
        float _1615 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1586 * _1586) + (_1589 * _1589)) + (_1583 * _1583)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1577 * gl_WorldRayDirectionEXT.x, _1577 * gl_WorldRayDirectionEXT.y, _1577 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1617 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
    }
    else
    {
        _1617 = 0.0;
    }
    float _1626 = 1.0 - _889;
    float _1631 = ((isnan(0.550000011920928955078125) ? _1626 : (isnan(_1626) ? 0.550000011920928955078125 : max(_1626, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _1635 = ((_657 * (-0.00196078442968428134918212890625)) * _1631) + _1631;
    float _1639 = ((_660 * (-0.00274509820155799388885498046875)) * _1635) + _1635;
    float _1653 = ((((_1544 + ((cbMtdParam._m0[37u].x - (cbMtdParam._m0[37u].x * _658)) * _888)) + ((textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].z * _738) + (cbMtdParam._m0[22u].z * _806)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].w * _739) + (cbMtdParam._m0[22u].w * _806)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1617).w + (-0.5)) * cbMtdParam._m0[44u].z)) + ((sin(cbMtdParam._m0[21u].y * _806) * cbMtdParam._m0[38u].z) * (isnan(0.300000011920928955078125) ? _661 : (isnan(_661) ? 0.300000011920928955078125 : max(_661, 0.300000011920928955078125))))) + _1639) + cbMtdParam._m0[20u].z;
    float _1655 = _1653 * cbMtdParam._m0[20u].w;
    float _3080 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
    float _1656 = isnan(1.0) ? _3080 : (isnan(_3080) ? 1.0 : min(_3080, 1.0));
    float _1664 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_752, _754, _755, 0.0));
    float _3091 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
    float _1673 = exp2(log2((1.0 - (isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3102 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
    float _1674 = isnan(1.0) ? _3102 : (isnan(_3102) ? 1.0 : min(_3102, 1.0));
    float _1678 = ((_1243 + cbMtdParam._m0[9u].x) + (_1255 * cbMtdParam._m0[10u].x)) + ((_1656 * cbMtdParam._m0[11u].x) * _1674);
    float _1679 = ((_1243 + cbMtdParam._m0[9u].y) + (_1255 * cbMtdParam._m0[10u].y)) + ((_1656 * cbMtdParam._m0[11u].y) * _1674);
    float _1680 = ((_1243 + cbMtdParam._m0[9u].z) + (_1255 * cbMtdParam._m0[10u].z)) + ((_1656 * cbMtdParam._m0[11u].z) * _1674);
    float _1689 = 0.5 - ((isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0))) * 0.439999997615814208984375);
    float _1691 = (_1678 + _1689) + ((0.5 - _1678) * _1253);
    float _1693 = (_1679 + _1689) + ((0.5 - _1679) * _1253);
    float _1695 = (_1680 + _1689) + ((0.5 - _1680) * _1253);
    float _1696 = _888 * 0.01200000010430812835693359375;
    float _1766;
    if (_827)
    {
        float _1726 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1732 = (_737 * _722) - (_734 * _725);
        float _1735 = (_731 * _725) - (_737 * _719);
        float _1738 = (_734 * _719) - (_731 * _722);
        float _1764 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1735 * _1735) + (_1738 * _1738)) + (_1732 * _1732)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1726 * gl_WorldRayDirectionEXT.x, _1726 * gl_WorldRayDirectionEXT.y, _1726 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1766 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
    }
    else
    {
        _1766 = 0.0;
    }
    float _1772 = (_888 * 0.300000011920928955078125) * textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].x * _806) + _1696) + (cbMtdParam._m0[24u].x * _738)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].y * _806) + _1696) + (cbMtdParam._m0[24u].y * _739)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1766).z;
    float _3118 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
    float _1773 = isnan(1.0) ? _3118 : (isnan(_3118) ? 1.0 : min(_3118, 1.0));
    float _1783 = (((1.0 - _1691) * _654) * _1773) + _1691;
    float _1784 = (((1.0 - _1693) * _654) * _1773) + _1693;
    float _1785 = (((1.0 - _1695) * _654) * _1773) + _1695;
    uvec2 _1816 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_4, int(0u)));
    float _1867;
    if (_827)
    {
        float _1827 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1833 = (_737 * _722) - (_734 * _725);
        float _1836 = (_731 * _725) - (_737 * _719);
        float _1839 = (_734 * _719) - (_731 * _722);
        float _1865 = ((log2((((float(_1816.y) * 0.5) * float(_1816.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1836 * _1836) + (_1839 * _1839)) + (_1833 * _1833)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1827 * gl_WorldRayDirectionEXT.x, _1827 * gl_WorldRayDirectionEXT.y, _1827 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1867 = isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0));
    }
    else
    {
        _1867 = 0.0;
    }
    vec4 _1869 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].z * _806) + (cbMtdParam._m0[30u].x * _1082)) + (cbMtdParam._m0[29u].x * _919)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].w * _806) + (cbMtdParam._m0[30u].y * _1081)) + (cbMtdParam._m0[29u].y * _920)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1867);
    float _1872 = _1869.y;
    float _1878 = (_1869.x * ((((float(_378 & 255u) * hit._m0.x) + (float(_282 & 255u) * _601)) + (float(_474 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) * cbMtdParam._m0[18u].z;
    float _1884 = _1872 * ((((float((_378 >> 8u) & 255u) * hit._m0.x) + (float((_282 >> 8u) & 255u) * _601)) + (float((_474 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1887 = ((isnan(cbMtdParam._m0[19u].x) ? _1884 : (isnan(_1884) ? cbMtdParam._m0[19u].x : max(_1884, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _1888 = isnan(_1887) ? _1878 : (isnan(_1878) ? _1887 : max(_1878, _1887));
    float _3144 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
    float _1889 = isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0));
    float _1896 = (_1889 * (1.0 - _1783)) + _1783;
    float _1897 = (_1889 * (1.0 - _1784)) + _1784;
    float _1898 = (_1889 * (1.0 - _1785)) + _1785;
    float _1976;
    if (_827)
    {
        float _1936 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1942 = (_737 * _722) - (_734 * _725);
        float _1945 = (_731 * _725) - (_737 * _719);
        float _1948 = (_734 * _719) - (_731 * _722);
        float _1974 = ((log2((((float(_1816.y) * 0.5) * float(_1816.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_1945 * _1945) + (_1948 * _1948)) + (_1942 * _1942)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1936 * gl_WorldRayDirectionEXT.x, _1936 * gl_WorldRayDirectionEXT.y, _1936 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _1976 = isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0));
    }
    else
    {
        _1976 = 0.0;
    }
    float _1989 = exp2(log2(cbMtdParam._m0[15u].w * _1626) * cbMtdParam._m0[17u].x);
    float _3160 = isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0));
    float _1990 = isnan(1.0) ? _3160 : (isnan(_3160) ? 1.0 : min(_3160, 1.0));
    float _1991 = _1990 * textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].x * _806) + (cbMtdParam._m0[28u].z * _1626)) + (cbMtdParam._m0[29u].z * _919)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].y * _806) + (cbMtdParam._m0[28u].w * _1626)) + (cbMtdParam._m0[29u].w * _920)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1976).z;
    float _1994 = ((_1990 - _1991) * cbMtdParam._m0[17u].w) + _1991;
    float _1998 = _908 * ((((float((_378 >> 16u) & 255u) * hit._m0.x) + (float((_282 >> 16u) & 255u) * _601)) + (float((_474 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _2005 = ((_1998 * (1.0 - _1896)) * _1994) + _1896;
    float _2006 = ((_1998 * (1.0 - _1897)) * _1994) + _1897;
    float _2007 = ((_1998 * (1.0 - _1898)) * _1994) + _1898;
    float _2009 = cbMtdParam._m0[18u].y * _1872;
    float _2016 = (_2009 * (1.0 - _2005)) + _2005;
    float _2017 = (_2009 * (1.0 - _2006)) + _2006;
    float _2018 = (_2009 * (1.0 - _2007)) + _2007;
    float _2022 = _900 + 0.20000000298023223876953125;
    float _2024 = _2022 * 9.0;
    float _3171 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
    float _2029 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3171 : (isnan(_3171) ? 1.0 : min(_3171, 1.0)))) + cbMtdParam._m0[12u].x;
    float _2032 = (_900 + 0.099999986588954925537109375) * 2.5;
    float _3182 = isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0));
    float _2037 = ((cbMtdParam._m0[14u].z - _2029) * (isnan(1.0) ? _3182 : (isnan(_3182) ? 1.0 : min(_3182, 1.0)))) + _2029;
    float _2038 = _2016 + _1242;
    float _3193 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
    float _2043 = ((0.3499999940395355224609375 - _2037) * (isnan(1.0) ? _3193 : (isnan(_3193) ? 1.0 : min(_3193, 1.0)))) + _2037;
    float _2044 = _660 * 0.00196078442968428134918212890625;
    float _2057 = (_900 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3204 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
    float _2062 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _3204 : (isnan(_3204) ? 1.0 : min(_3204, 1.0)))) + cbMtdParam._m0[20u].x;
    float _2067 = (_2062 * (_886 + (-0.5))) + 0.5;
    float _2068 = (_2062 * (_887 + (-0.5))) + 0.5;
    float _3215 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _2069 = isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0));
    uvec2 _2097 = uvec2(textureSize(M_Water_oceanA_snp_0_Texture2D_1, int(0u)));
    float _2150;
    if (_827)
    {
        float _2108 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2114 = (_737 * _722) - (_734 * _725);
        float _2117 = (_731 * _725) - (_737 * _719);
        float _2120 = (_734 * _719) - (_731 * _722);
        float _2148 = ((log2((((float(_2097.y) * 0.5) * float(_2097.x)) * abs((((_456 - _264) * (_359 - _263)) - ((_455 - _263) * (_360 - _264))) * 2.384185791015625e-07)) / (sqrt(((_2117 * _2117) + (_2120 * _2120)) + (_2114 * _2114)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2108 * gl_WorldRayDirectionEXT.x, _2108 * gl_WorldRayDirectionEXT.y, _2108 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2150 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
    }
    else
    {
        _2150 = 0.0;
    }
    vec4 _2152 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((((((_359 * hit._m0.x) + (_263 * _601)) + (_455 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[26u].x) + (cbMtdParam._m0[32u].x * _806)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((((_360 * hit._m0.x) + (_264 * _601)) + (_456 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[26u].y) + (cbMtdParam._m0[32u].y * _806)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _2150);
    float _2160 = ((_1230.x + (-0.5)) * 0.5) + _1159.x;
    float _2161 = ((_1230.y + (-0.5)) * 0.5) + _1159.y;
    float _2233;
    if (_827)
    {
        float _2193 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2199 = (_737 * _722) - (_734 * _725);
        float _2202 = (_731 * _725) - (_737 * _719);
        float _2205 = (_734 * _719) - (_731 * _722);
        float _2231 = ((log2((((float(_2097.y) * 0.5) * float(_2097.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2202 * _2202) + (_2205 * _2205)) + (_2199 * _2199)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2193 * gl_WorldRayDirectionEXT.x, _2193 * gl_WorldRayDirectionEXT.y, _2193 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2233 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
    }
    else
    {
        _2233 = 0.0;
    }
    vec4 _2235 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].z * _738) + (cbMtdParam._m0[25u].x * _806)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].w * _739) + (cbMtdParam._m0[25u].y * _806)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _2233);
    float _2242 = _2022 * 12.0;
    float _3236 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _2244 = 1.0 - (isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0)));
    float _2258 = cbMtdParam._m0[33u].z * _738;
    float _2259 = cbMtdParam._m0[33u].w * _739;
    float _2316;
    if (_827)
    {
        float _2276 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2282 = (_737 * _722) - (_734 * _725);
        float _2285 = (_731 * _725) - (_737 * _719);
        float _2288 = (_734 * _719) - (_731 * _722);
        float _2314 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2285 * _2285) + (_2288 * _2288)) + (_2282 * _2282)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2276 * gl_WorldRayDirectionEXT.x, _2276 * gl_WorldRayDirectionEXT.y, _2276 * gl_WorldRayDirectionEXT.z), vec3(_752, _754, _755))));
        _2316 = isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0));
    }
    else
    {
        _2316 = 0.0;
    }
    vec4 _2318 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((_2258 + (cbMtdParam._m0[33u].x * _806)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_2259 + (cbMtdParam._m0[33u].y * _806)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2316);
    float _2342 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2343 = _2342 * gl_WorldRayDirectionEXT.x;
    float _2344 = _2342 * gl_WorldRayDirectionEXT.y;
    float _2345 = _2342 * gl_WorldRayDirectionEXT.z;
    float _2389;
    if (_827)
    {
        float _2355 = (_737 * _722) - (_734 * _725);
        float _2358 = (_731 * _725) - (_737 * _719);
        float _2361 = (_734 * _719) - (_731 * _722);
        float _2387 = ((log2((((float(_1106.y) * 0.5) * float(_1106.x)) * abs((_688 * _682) - (_687 * _684))) / (sqrt(((_2358 * _2358) + (_2361 * _2361)) + (_2355 * _2355)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_2343, _2344, _2345), vec3(_752, _754, _755))));
        _2389 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    }
    else
    {
        _2389 = 0.0;
    }
    vec4 _2391 = textureLod(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((_2258 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _1255)) + (cbMtdParam._m0[34u].x * _806)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_2259 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _1255)) + (cbMtdParam._m0[34u].y * _806)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2389);
    float _2405 = (((0.5 - _2160) * 0.10999999940395355224609375) + _2160) + (((((((_2235.z + (-0.5)) * cbMtdParam._m0[16u].x) * _2244) + (-1.0)) + _2318.x) + _2391.x) * cbMtdParam._m0[15u].z);
    float _2406 = (((0.5 - _2161) * 0.10999999940395355224609375) + _2161) + (((((((_2235.w + (-0.5)) * cbMtdParam._m0[16u].x) * _2244) + (-1.0)) + _2318.y) + _2391.y) * cbMtdParam._m0[15u].z);
    float _2411 = ((_2152.x - _2405) * _900) + _2405;
    float _2412 = ((_2152.y - _2406) * _900) + _2406;
    float _2413 = _900 * 0.5;
    float _3257 = isnan(0.0) ? _2413 : (isnan(_2413) ? 0.0 : max(_2413, 0.0));
    float _2414 = isnan(1.0) ? _3257 : (isnan(_3257) ? 1.0 : min(_3257, 1.0));
    float _2425 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _1639);
    float _2432 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * _658);
    float _2434 = _2432 - (_2432 * _2414);
    float _2438 = (((((((0.5 - _886) * 0.60000002384185791015625) + _886) - _2067) * _2069) + _2067) + (_2434 * (_1360.x + (-0.5)))) + (((_2411 + (-0.5)) + ((0.5 - _2411) * _2414)) * _2425);
    float _2440 = (((((((0.5 - _887) * 0.60000002384185791015625) + _887) - _2068) * _2069) + _2068) + (_2434 * (_1360.y + (-0.5)))) + (((_2412 + (-0.5)) + ((0.5 - _2412) * _2414)) * _2425);
    float _2449 = (((_2044 * (0.5 - _2438)) + _2438) * 2.0) + (-1.0);
    float _2450 = (((_2044 * (0.5 - _2440)) + _2440) * 2.0) + (-1.0);
    float _2451 = dot(vec2(_2449, _2450), vec2(_2449, _2450));
    float _3268 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2456 = sqrt(1.0 - (isnan(1.0) ? _3268 : (isnan(_3268) ? 1.0 : min(_3268, 1.0))));
    float _2459 = fma(_2456, _752, fma(_2450, _768, (_787 * _781) * _2449));
    float _2462 = fma(_2456, _754, fma(_2450, _769, (_787 * _782) * _2449));
    float _2465 = fma(_2456, _755, fma(_2450, _770, (_787 * _783) * _2449));
    float _2469 = inversesqrt(dot(vec3(_2459, _2462, _2465), vec3(_2459, _2462, _2465)));
    float _2470 = _2469 * _2459;
    float _2471 = _2469 * _2462;
    float _2472 = _2469 * _2465;
    float _2484 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2485 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2486 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2487 = (-0.0) - _2343;
    float _2488 = (-0.0) - _2344;
    float _2489 = (-0.0) - _2345;
    float _2495 = float(gl_LaunchIDEXT.x);
    float _2496 = float(gl_LaunchIDEXT.y);
    float _2499 = float(gl_LaunchSizeEXT.x);
    float _2513 = fract(fract(sin(dot(vec2(_2495 / _2499, _2496 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2526 = fract(fract(sin(dot(vec2((_2495 + 128.0) / _2499, (_2496 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _2536 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2537 = _2536.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2537, _2536.w, _2537, vec3(_2484, _2485, _2486), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2644;
    float _2645;
    float _2646;
    float _2647;
    float _2648;
    float _2649;
    if (_70._m0 == 0u)
    {
        float _2556 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2470, _2471, _2472));
        float _3279 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
        float _2559 = isnan(1.0) ? _3279 : (isnan(_3279) ? 1.0 : min(_3279, 1.0));
        float _2578 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2043) * 0.949999988079071044921875);
        float _2579 = _2578 * _2578;
        float _2580 = g_sceneCB._m0[4u].x - _2343;
        float _2581 = g_sceneCB._m0[4u].y - _2344;
        float _2582 = g_sceneCB._m0[4u].z - _2345;
        float _2586 = inversesqrt(dot(vec3(_2580, _2581, _2582), vec3(_2580, _2581, _2582)));
        float _2587 = _2586 * _2580;
        float _2588 = _2586 * _2581;
        float _2589 = _2586 * _2582;
        float _2590 = dot(vec3(_2470, _2471, _2472), vec3(g_sceneCB._m0[4u].xyz));
        float _3290 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
        float _2593 = isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0));
        float _2594 = dot(vec3(_2470, _2471, _2472), vec3(_2487, _2488, _2489));
        float _3301 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
        float _2597 = isnan(1.0) ? _3301 : (isnan(_3301) ? 1.0 : min(_3301, 1.0));
        float _2598 = dot(vec3(_2470, _2471, _2472), vec3(_2587, _2588, _2589));
        float _3312 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
        float _2601 = isnan(1.0) ? _3312 : (isnan(_3312) ? 1.0 : min(_3312, 1.0));
        float _2602 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2587, _2588, _2589));
        float _3323 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
        float _2606 = _2579 * _2579;
        float _2610 = ((_2601 * _2601) * (_2606 + (-1.0))) + 1.0;
        float _2622 = (exp2(log2(1.0 - (isnan(1.0) ? _3323 : (isnan(_3323) ? 1.0 : min(_3323, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2624 = 1.0 - _2579;
        float _2635 = (0.5 / (((_2597 * ((_2593 * _2624) + _2579)) + 9.9999999392252902907785028219223e-09) + (((_2597 * _2624) + _2579) * _2593))) * _2593;
        float _3334 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2637 = (isnan(1.0) ? _3334 : (isnan(_3334) ? 1.0 : min(_3334, 1.0))) * (_2606 / ((_2610 * _2610) * 3.141590118408203125));
        _2644 = ((_2016 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2559;
        _2645 = ((_2017 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2559;
        _2646 = ((_2018 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2559;
        _2647 = (_2622 * g_sceneCB._m0[5u].x) * _2637;
        _2648 = (_2622 * g_sceneCB._m0[5u].y) * _2637;
        _2649 = (_2622 * g_sceneCB._m0[5u].z) * _2637;
    }
    else
    {
        _2644 = 0.0;
        _2645 = 0.0;
        _2646 = 0.0;
        _2647 = 0.0;
        _2648 = 0.0;
        _2649 = 0.0;
    }
    bool _2651 = abs(_2471) < 0.89999997615814208984375;
    float _2652 = float(_2651);
    float _2653 = _2651 ? 0.0 : 1.0;
    float _2656 = (_2652 * _2472) - (_2653 * _2471);
    float _2657 = _2653 * _2470;
    float _2659 = (-0.0) - (_2470 * _2652);
    float _2663 = inversesqrt(dot(vec3(_2656, _2657, _2659), vec3(_2656, _2657, _2659)));
    float _2664 = _2656 * _2663;
    float _2665 = _2657 * _2663;
    float _2666 = _2663 * _2659;
    float _2669 = (_2665 * _2472) - (_2666 * _2471);
    float _2672 = (_2666 * _2470) - (_2664 * _2472);
    float _2675 = (_2664 * _2471) - (_2665 * _2470);
    float _2677;
    float _2685;
    float _2676 = 0.0;
    uint _2678 = 0u;
    float _2682;
    bool _2684;
    for (;;)
    {
        _2682 = (float(_2678) + _2513) * 0.03125;
        _2684 = _2678 == 0u;
        float frontier_phi_71_pred;
        if (_2684)
        {
            frontier_phi_71_pred = 0.0;
        }
        else
        {
            float _2818;
            float _2819;
            uint _2821;
            _2818 = 0.0;
            _2819 = 0.5;
            _2821 = _2678;
            float _2686;
            for (;;)
            {
                _2686 = ((_2821 & 1u) != 0u) ? (_2819 + _2818) : _2818;
                uint _2822 = _2821 >> 1u;
                if (_2822 == 0u)
                {
                    break;
                }
                else
                {
                    _2818 = _2686;
                    _2819 *= 0.5;
                    _2821 = _2822;
                }
            }
            frontier_phi_71_pred = _2686;
        }
        _2685 = frontier_phi_71_pred;
        float _2687 = _2685 + _2526;
        float _2691 = sqrt(_2682);
        float _2692 = ((_2687 > 1.0) ? (_2687 + (-1.0)) : _2687) * 6.283185482025146484375;
        float _2695 = cos(_2692) * _2691;
        float _2697 = sin(_2692) * _2691;
        float _2699 = sqrt(1.0 - _2682);
        float _2712 = ((_2699 * _2470) + (_2695 * _2669)) + (_2697 * _2664);
        float _2713 = ((_2699 * _2471) + (_2695 * _2672)) + (_2697 * _2665);
        float _2714 = ((_2699 * _2472) + (_2695 * _2675)) + (_2697 * _2666);
        _69._m0 = 1u;
        uvec4 _2718 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2719 = _2718.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2719, _2718.w, _2719, vec3(_2484, _2485, _2486), 9.9999997473787516355514526367188e-05, vec3(_2712, _2713, _2714), 10000.0, 1);
        float _2725 = dot(vec3(_2470, _2471, _2472), vec3(_2712, _2713, _2714));
        float _3345 = isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : max(_2725, 0.0));
        float _2728 = isnan(1.0) ? _3345 : (isnan(_3345) ? 1.0 : min(_3345, 1.0));
        _2677 = ((float(_69._m0 == 0u) * _2728) / (_2728 * 0.3183098733425140380859375)) + _2676;
        uint _2679 = _2678 + 1u;
        if (_2679 == 32u)
        {
            break;
        }
        else
        {
            _2676 = _2677;
            _2678 = _2679;
            continue;
        }
    }
    float _2735 = _2677 * 0.009947183541953563690185546875;
    float _2740 = dot(vec3(_2343, _2344, _2345), vec3(_2470, _2471, _2472)) * 2.0;
    vec4 _2754 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2343 - (_2740 * _2470), _2344 - (_2740 * _2471), _2345 - (_2740 * _2472)), 4.0 - (_2043 * 4.0));
    float _2759 = dot(vec3(_2487, _2488, _2489), vec3(_2470, _2471, _2472));
    float _3356 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2768 = (exp2(log2(1.0 - (isnan(1.0) ? _3356 : (isnan(_3356) ? 1.0 : min(_3356, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2774 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2470, _2471, _2472), 0.0);
    float _2785 = (_2647 + _2644) + (((_2774.x * _2016) + (_2768 * _2754.x)) * _2735);
    float _2789 = (_2648 + _2645) + (((_2774.y * _2017) + (_2768 * _2754.y)) * _2735);
    float _2793 = (_2649 + _2646) + (((_2774.z * _2018) + (_2768 * _2754.z)) * _2735);
    float _3367 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
    float _3378 = isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0));
    float _3389 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
    bool _2801 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2812;
    _2812.x = _2801 ? ((_745 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0)));
    _2812.y = _2801 ? ((_748 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0)));
    _2812.z = _2801 ? ((_751 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0)));
    payload._m0 = _2812;
}


