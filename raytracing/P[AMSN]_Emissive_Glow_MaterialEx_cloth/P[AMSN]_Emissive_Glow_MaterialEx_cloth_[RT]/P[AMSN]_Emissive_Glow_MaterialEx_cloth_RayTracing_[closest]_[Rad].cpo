#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1317;

void main()
{
    float _73 = float(gl_LaunchSizeEXT.y);
    float _103 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _112 = sqrt(((_104 * _104) + (_103 * _103)) + (_105 * _105)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _73)))));
    uvec4 _123 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _124 = _123.y;
    uint _164;
    uint _166;
    uint _167;
    if (_123.x == 0u)
    {
        uint _132 = (_124 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _141 = uvec3(texelFetch(l_geomIndexBuffer, int(_132)).x, texelFetch(l_geomIndexBuffer, int(_132 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_132 + 2u)).x);
        _164 = _141.x;
        _166 = _141.y;
        _167 = _141.z;
    }
    else
    {
        uint _145 = uint(gl_PrimitiveID) * 6u;
        uint _147 = _145 & 4294967292u;
        uint _150 = (_124 + _147) >> 2u;
        uvec2 _157 = uvec2(texelFetch(l_geomIndexBuffer, int(_150)).x, texelFetch(l_geomIndexBuffer, int(_150 + 1u)).x);
        uint _158 = _157.x;
        uint _159 = _157.y;
        uint _161 = _158 >> 16u;
        uint _162 = _159 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_147 == _145)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _158 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _159 >> 16u;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _161;
        }
        _164 = frontier_phi_3_2_ladder_2;
        _166 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
    }
    uvec4 _171 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _172 = _171.x;
    uint _173 = _171.z;
    bool _174 = _173 != 0u;
    uint _175 = _123.w;
    bool _177 = _174 || (_175 == 0u);
    uint _178 = _172 * _164;
    uint _179 = _178 + 12u;
    uint _203;
    uint _204;
    uint _205;
    uint _206;
    if (_177)
    {
        uvec4 _182 = texelFetch(l_geomAttrib_0, int(_179 >> 2u));
        uint _183 = _182.x;
        _203 = _183 & 255u;
        _204 = (_183 >> 8u) & 255u;
        _205 = (_183 >> 16u) & 255u;
        _206 = 16u;
    }
    else
    {
        uint _191 = _179 >> 2u;
        uvec2 _197 = uvec2(texelFetch(l_geomAttrib_0, int(_191)).x, texelFetch(l_geomAttrib_0, int(_191 + 1u)).x);
        uint _198 = _197.x;
        _203 = _198 & 65535u;
        _204 = _198 >> 16u;
        _205 = _197.y & 65535u;
        _206 = 20u;
    }
    uvec4 _214 = texelFetch(l_geomAttrib_0, int((_206 + _178) >> 2u));
    uint _215 = _214.x;
    uint _227 = _171.y;
    bool _228 = _173 == 0u;
    uint _231 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _240 = texelFetch(l_geomAttrib_1, int((((_227 * _164) + 4u) + (_174 ? (_231 + 4u) : _231)) >> 2u));
    uint _241 = _240.x;
    float _245 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_241) >> int(16u))));
    uint _247 = _172 * _166;
    uint _248 = _247 + 12u;
    uint _269;
    uint _270;
    uint _271;
    uint _272;
    if (_177)
    {
        uvec4 _250 = texelFetch(l_geomAttrib_0, int(_248 >> 2u));
        uint _251 = _250.x;
        _269 = _251 & 255u;
        _270 = (_251 >> 8u) & 255u;
        _271 = (_251 >> 16u) & 255u;
        _272 = 16u;
    }
    else
    {
        uint _257 = _248 >> 2u;
        uvec2 _263 = uvec2(texelFetch(l_geomAttrib_0, int(_257)).x, texelFetch(l_geomAttrib_0, int(_257 + 1u)).x);
        uint _264 = _263.x;
        _269 = _264 & 65535u;
        _270 = _264 >> 16u;
        _271 = _263.y & 65535u;
        _272 = 20u;
    }
    uvec4 _278 = texelFetch(l_geomAttrib_0, int((_272 + _247) >> 2u));
    uint _279 = _278.x;
    uint _292 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _299 = texelFetch(l_geomAttrib_1, int((((_227 * _166) + 4u) + (_174 ? (_292 + 4u) : _292)) >> 2u));
    uint _300 = _299.x;
    float _304 = float(int(uint(int(_300 << 16u) >> int(16u))));
    float _305 = float(int(uint(int(_300) >> int(16u))));
    uint _306 = _172 * _167;
    uint _307 = _306 + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_177)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 16u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 20u;
    }
    uvec4 _337 = texelFetch(l_geomAttrib_0, int((_331 + _306) >> 2u));
    uint _338 = _337.x;
    uint _351 = _228 ? 4u : ((_175 != 0u) ? 12u : 8u);
    uvec4 _358 = texelFetch(l_geomAttrib_1, int((((_227 * _167) + 4u) + (_174 ? (_351 + 4u) : _351)) >> 2u));
    uint _359 = _358.x;
    float _363 = float(int(uint(int(_359 << 16u) >> int(16u))));
    float _364 = float(int(uint(int(_359) >> int(16u))));
    bool _366 = _123.z == 0u;
    float _402;
    float _403;
    float _404;
    if (_366)
    {
        uint _369 = _164 * 3u;
        uvec3 _378 = uvec3(texelFetch(l_geomPositionBuffer, int(_369)).x, texelFetch(l_geomPositionBuffer, int(_369 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_369 + 2u)).x);
        _402 = uintBitsToFloat(_378.x);
        _403 = uintBitsToFloat(_378.y);
        _404 = uintBitsToFloat(_378.z);
    }
    else
    {
        uint _386 = _164 * 2u;
        uvec2 _392 = uvec2(texelFetch(l_geomPositionBuffer, int(_386)).x, texelFetch(l_geomPositionBuffer, int(_386 + 1u)).x);
        uint _393 = _392.x;
        _402 = unpackHalf2x16(_393).x;
        _403 = unpackHalf2x16(_393 >> 16u).x;
        _404 = unpackHalf2x16(_392.y).x;
    }
    float _440;
    float _441;
    float _442;
    if (_366)
    {
        uint _407 = _166 * 3u;
        uvec3 _416 = uvec3(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_407 + 2u)).x);
        _440 = uintBitsToFloat(_416.x);
        _441 = uintBitsToFloat(_416.y);
        _442 = uintBitsToFloat(_416.z);
    }
    else
    {
        uint _424 = _166 * 2u;
        uvec2 _430 = uvec2(texelFetch(l_geomPositionBuffer, int(_424)).x, texelFetch(l_geomPositionBuffer, int(_424 + 1u)).x);
        uint _431 = _430.x;
        _440 = unpackHalf2x16(_431).x;
        _441 = unpackHalf2x16(_431 >> 16u).x;
        _442 = unpackHalf2x16(_430.y).x;
    }
    float _478;
    float _479;
    float _480;
    if (_366)
    {
        uint _445 = _167 * 3u;
        uvec3 _454 = uvec3(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_445 + 2u)).x);
        _478 = uintBitsToFloat(_454.x);
        _479 = uintBitsToFloat(_454.y);
        _480 = uintBitsToFloat(_454.z);
    }
    else
    {
        uint _462 = _167 * 2u;
        uvec2 _468 = uvec2(texelFetch(l_geomPositionBuffer, int(_462)).x, texelFetch(l_geomPositionBuffer, int(_462 + 1u)).x);
        uint _469 = _468.x;
        _478 = unpackHalf2x16(_469).x;
        _479 = unpackHalf2x16(_469 >> 16u).x;
        _480 = unpackHalf2x16(_468.y).x;
    }
    float _483 = (1.0 - hit._m0.x) - hit._m0.y;
    float _517 = (_304 - _245) * 0.00048828125;
    float _519 = (_305 - _246) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _523 = (_364 - _246) * 0.00048828125;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _547 = _442 - _404;
    float _550 = fma(_547, gl_ObjectToWorldEXT[2u].x, fma(_546, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _545));
    float _553 = fma(_547, gl_ObjectToWorldEXT[2u].y, fma(_546, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _545));
    float _556 = fma(_547, gl_ObjectToWorldEXT[2u].z, fma(_546, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _545));
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _559 = _480 - _404;
    float _562 = fma(_559, gl_ObjectToWorldEXT[2u].x, fma(_558, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _557));
    float _565 = fma(_559, gl_ObjectToWorldEXT[2u].y, fma(_558, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _557));
    float _568 = fma(_559, gl_ObjectToWorldEXT[2u].z, fma(_558, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _557));
    float _569 = (((_304 * hit._m0.x) + (_245 * _483)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _570 = (((_305 * hit._m0.x) + (_246 * _483)) + (_364 * hit._m0.y)) * 0.00048828125;
    float _574 = (((float(_203) * _483) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _577 = (((float(_204) * _483) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = (((float(_205) * _483) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _581 = _574 * 0.0078740157186985015869140625;
    float _583 = _577 * 0.0078740157186985015869140625;
    float _584 = _580 * 0.0078740157186985015869140625;
    float _597 = ((((float(_215 & 255u) * _483) + (-127.0)) + (float(_279 & 255u) * hit._m0.x)) + (float(_338 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_215 >> 8u) & 255u) * _483) + (-127.0)) + (float((_279 >> 8u) & 255u) * hit._m0.x)) + (float((_338 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float((_215 >> 16u) & 255u) * _483) + (-127.0)) + (float((_279 >> 16u) & 255u) * hit._m0.x)) + (float((_338 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float(_215 >> 24u) * _483) + (-127.0)) + (float(_279 >> 24u) * hit._m0.x)) + (float(_338 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((_598 * _584) - (_599 * _583)) * _600;
    float _611 = ((_599 * _581) - (_597 * _584)) * _600;
    float _612 = ((_597 * _583) - (_598 * _581)) * _600;
    float _616 = inversesqrt(dot(vec3(_610, _611, _612), vec3(_610, _611, _612)));
    uvec2 _631 = uvec2(textureSize(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_0, int(0u)));
    bool _636 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _689;
    if (_636)
    {
        float _647 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _653 = (_568 * _553) - (_565 * _556);
        float _656 = (_562 * _556) - (_568 * _550);
        float _659 = (_565 * _550) - (_562 * _553);
        float _686 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_656 * _656) + (_659 * _659)) + (_653 * _653)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_647 * gl_WorldRayDirectionEXT.x, _647 * gl_WorldRayDirectionEXT.y, _647 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _689 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    }
    else
    {
        _689 = 0.0;
    }
    vec4 _693 = textureLod(sampler2D(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _569) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _570) + cbTextureTilingScale._m0[0u].w), _689);
    float _695 = _693.x;
    float _696 = _693.y;
    float _697 = _693.z;
    uvec2 _713 = uvec2(textureSize(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_2, int(0u)));
    float _764;
    if (_636)
    {
        float _724 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _730 = (_568 * _553) - (_565 * _556);
        float _733 = (_562 * _556) - (_568 * _550);
        float _736 = (_565 * _550) - (_562 * _553);
        float _762 = ((log2((((float(_713.y) * 0.5) * float(_713.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_733 * _733) + (_736 * _736)) + (_730 * _730)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_724 * gl_WorldRayDirectionEXT.x, _724 * gl_WorldRayDirectionEXT.y, _724 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _764 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    }
    else
    {
        _764 = 0.0;
    }
    float _770 = textureLod(sampler2D(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _569) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _570) + cbTextureTilingScale._m0[2u].w), _764).x + cbMtdParam._m0[9u].x;
    uvec2 _782 = uvec2(textureSize(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_1, int(0u)));
    float _833;
    if (_636)
    {
        float _793 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _799 = (_568 * _553) - (_565 * _556);
        float _802 = (_562 * _556) - (_568 * _550);
        float _805 = (_565 * _550) - (_562 * _553);
        float _831 = ((log2((((float(_782.y) * 0.5) * float(_782.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_802 * _802) + (_805 * _805)) + (_799 * _799)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_793 * gl_WorldRayDirectionEXT.x, _793 * gl_WorldRayDirectionEXT.y, _793 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _833 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    }
    else
    {
        _833 = 0.0;
    }
    vec4 _836 = textureLod(sampler2D(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _569) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _570) + cbTextureTilingScale._m0[1u].w), _833);
    float _840 = _836.z;
    float _843 = (_836.x * 2.0) + (-1.0);
    float _845 = (_836.y * 2.0) + (-1.0);
    float _846 = dot(vec2(_843, _845), vec2(_843, _845));
    float _1394 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _851 = sqrt(1.0 - (isnan(1.0) ? _1394 : (isnan(_1394) ? 1.0 : min(_1394, 1.0))));
    uvec2 _864 = uvec2(textureSize(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_3, int(0u)));
    float _868 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _869 = _868 * gl_WorldRayDirectionEXT.x;
    float _870 = _868 * gl_WorldRayDirectionEXT.y;
    float _871 = _868 * gl_WorldRayDirectionEXT.z;
    float _915;
    if (_636)
    {
        float _881 = (_568 * _553) - (_565 * _556);
        float _884 = (_562 * _556) - (_568 * _550);
        float _887 = (_565 * _550) - (_562 * _553);
        float _913 = ((log2((((float(_864.y) * 0.5) * float(_864.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_884 * _884) + (_887 * _887)) + (_881 * _881)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_869, _870, _871), vec3(_581, _583, _584))));
        _915 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    }
    else
    {
        _915 = 0.0;
    }
    vec4 _917 = textureLod(sampler2D(P_AMSN_Emissive_Glow_MaterialEx_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _569) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _570) + cbTextureTilingScale._m0[3u].w), _915);
    float _927 = fma(_851, _581, fma(_845, _597, (_616 * _610) * _843));
    float _930 = fma(_851, _583, fma(_845, _598, (_616 * _611) * _843));
    float _933 = fma(_851, _584, fma(_845, _599, (_616 * _612) * _843));
    float _937 = inversesqrt(dot(vec3(_927, _930, _933), vec3(_927, _930, _933)));
    float _938 = _937 * _927;
    float _939 = _937 * _930;
    float _940 = _937 * _933;
    float _952 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _953 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _954 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _955 = (-0.0) - _869;
    float _957 = (-0.0) - _870;
    float _958 = (-0.0) - _871;
    float _964 = float(gl_LaunchIDEXT.x);
    float _965 = float(gl_LaunchIDEXT.y);
    float _968 = float(gl_LaunchSizeEXT.x);
    float _982 = fract(fract(sin(dot(vec2(_964 / _968, _965 / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _995 = fract(fract(sin(dot(vec2((_964 + 128.0) / _968, (_965 + 128.0) / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _996 = 1.0 - _770;
    float _997 = _996 * _695;
    float _998 = _996 * _696;
    float _999 = _996 * _697;
    float _1004 = _770 * (_695 + (-0.039999999105930328369140625));
    float _1005 = _770 * (_696 + (-0.039999999105930328369140625));
    float _1006 = _770 * (_697 + (-0.039999999105930328369140625));
    float _1007 = _1004 + 0.039999999105930328369140625;
    float _1009 = _1005 + 0.039999999105930328369140625;
    float _1010 = _1006 + 0.039999999105930328369140625;
    _65._m0 = 1u;
    uvec4 _1020 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1021 = _1020.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1021, _1020.w, _1021, vec3(_952, _953, _954), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    if (_65._m0 == 0u)
    {
        float _1042 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_938, _939, _940));
        float _1410 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1045 = isnan(1.0) ? _1410 : (isnan(_1410) ? 1.0 : min(_1410, 1.0));
        float _1064 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _840) * 0.949999988079071044921875);
        float _1065 = _1064 * _1064;
        float _1066 = g_sceneCB._m0[4u].x - _869;
        float _1067 = g_sceneCB._m0[4u].y - _870;
        float _1068 = g_sceneCB._m0[4u].z - _871;
        float _1072 = inversesqrt(dot(vec3(_1066, _1067, _1068), vec3(_1066, _1067, _1068)));
        float _1073 = _1072 * _1066;
        float _1074 = _1072 * _1067;
        float _1075 = _1072 * _1068;
        float _1076 = dot(vec3(_938, _939, _940), vec3(g_sceneCB._m0[4u].xyz));
        float _1421 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1079 = isnan(1.0) ? _1421 : (isnan(_1421) ? 1.0 : min(_1421, 1.0));
        float _1080 = dot(vec3(_938, _939, _940), vec3(_955, _957, _958));
        float _1432 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1083 = isnan(1.0) ? _1432 : (isnan(_1432) ? 1.0 : min(_1432, 1.0));
        float _1084 = dot(vec3(_938, _939, _940), vec3(_1073, _1074, _1075));
        float _1443 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
        float _1087 = isnan(1.0) ? _1443 : (isnan(_1443) ? 1.0 : min(_1443, 1.0));
        float _1088 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1073, _1074, _1075));
        float _1454 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1092 = _1065 * _1065;
        float _1096 = ((_1087 * _1087) * (_1092 + (-1.0))) + 1.0;
        float _1105 = exp2(log2(1.0 - (isnan(1.0) ? _1454 : (isnan(_1454) ? 1.0 : min(_1454, 1.0)))) * 5.0);
        float _1116 = 1.0 - _1065;
        float _1127 = (0.5 / (((_1083 * ((_1079 * _1116) + _1065)) + 9.9999999392252902907785028219223e-09) + (((_1083 * _1116) + _1065) * _1079))) * _1079;
        float _1465 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1129 = (isnan(1.0) ? _1465 : (isnan(_1465) ? 1.0 : min(_1465, 1.0))) * (_1092 / ((_1096 * _1096) * 3.141590118408203125));
        _1136 = ((_997 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1045;
        _1137 = ((_998 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1045;
        _1138 = ((_999 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1045;
        _1139 = (((_1105 * (0.959999978542327880859375 - _1004)) + _1007) * g_sceneCB._m0[5u].x) * _1129;
        _1140 = (((_1105 * (0.959999978542327880859375 - _1005)) + _1009) * g_sceneCB._m0[5u].y) * _1129;
        _1141 = (((_1105 * (0.959999978542327880859375 - _1006)) + _1010) * g_sceneCB._m0[5u].z) * _1129;
    }
    else
    {
        _1136 = 0.0;
        _1137 = 0.0;
        _1138 = 0.0;
        _1139 = 0.0;
        _1140 = 0.0;
        _1141 = 0.0;
    }
    bool _1143 = abs(_939) < 0.89999997615814208984375;
    float _1145 = float(_1143);
    float _1146 = _1143 ? 0.0 : 1.0;
    float _1149 = (_1145 * _940) - (_1146 * _939);
    float _1150 = _1146 * _938;
    float _1152 = (-0.0) - (_938 * _1145);
    float _1156 = inversesqrt(dot(vec3(_1149, _1150, _1152), vec3(_1149, _1150, _1152)));
    float _1157 = _1149 * _1156;
    float _1158 = _1150 * _1156;
    float _1159 = _1156 * _1152;
    float _1162 = (_1158 * _940) - (_1159 * _939);
    float _1165 = (_1159 * _938) - (_1157 * _940);
    float _1168 = (_1157 * _939) - (_1158 * _938);
    float _1170;
    float _1178;
    float _1169 = 0.0;
    uint _1171 = 0u;
    float _1175;
    bool _1177;
    for (;;)
    {
        _1175 = (float(_1171) + _982) * 0.03125;
        _1177 = _1171 == 0u;
        float frontier_phi_35_pred;
        if (_1177)
        {
            frontier_phi_35_pred = 0.0;
        }
        else
        {
            float _1322;
            float _1323;
            uint _1325;
            _1322 = 0.0;
            _1323 = 0.5;
            _1325 = _1171;
            float _1179;
            for (;;)
            {
                _1179 = ((_1325 & 1u) != 0u) ? (_1323 + _1322) : _1322;
                uint _1326 = _1325 >> 1u;
                if (_1326 == 0u)
                {
                    break;
                }
                else
                {
                    _1322 = _1179;
                    _1323 *= 0.5;
                    _1325 = _1326;
                }
            }
            frontier_phi_35_pred = _1179;
        }
        _1178 = frontier_phi_35_pred;
        float _1180 = _1178 + _995;
        float _1184 = sqrt(_1175);
        float _1185 = ((_1180 > 1.0) ? (_1180 + (-1.0)) : _1180) * 6.283185482025146484375;
        float _1188 = cos(_1185) * _1184;
        float _1190 = sin(_1185) * _1184;
        float _1192 = sqrt(1.0 - _1175);
        float _1205 = ((_1192 * _938) + (_1188 * _1162)) + (_1190 * _1157);
        float _1206 = ((_1192 * _939) + (_1188 * _1165)) + (_1190 * _1158);
        float _1207 = ((_1192 * _940) + (_1188 * _1168)) + (_1190 * _1159);
        _64._m0 = 1u;
        uvec4 _1211 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1212 = _1211.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1212, _1211.w, _1212, vec3(_952, _953, _954), 9.9999997473787516355514526367188e-05, vec3(_1205, _1206, _1207), 10000.0, 1);
        float _1218 = dot(vec3(_938, _939, _940), vec3(_1205, _1206, _1207));
        float _1476 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1221 = isnan(1.0) ? _1476 : (isnan(_1476) ? 1.0 : min(_1476, 1.0));
        _1170 = ((float(_64._m0 == 0u) * _1221) / (_1221 * 0.3183098733425140380859375)) + _1169;
        uint _1172 = _1171 + 1u;
        if (_1172 == 32u)
        {
            break;
        }
        else
        {
            _1169 = _1170;
            _1171 = _1172;
            continue;
        }
    }
    float _1229 = _1170 * 0.009947183541953563690185546875;
    float _1234 = dot(vec3(_869, _870, _871), vec3(_938, _939, _940)) * 2.0;
    vec4 _1248 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_869 - (_1234 * _938), _870 - (_1234 * _939), _871 - (_1234 * _940)), 4.0 - (_840 * 4.0));
    float _1253 = dot(vec3(_955, _957, _958), vec3(_938, _939, _940));
    float _1487 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
    float _1263 = exp2(log2(1.0 - (isnan(1.0) ? _1487 : (isnan(_1487) ? 1.0 : min(_1487, 1.0)))) * 5.0);
    vec4 _1275 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_938, _939, _940), 0.0);
    float _1287 = ((_1136 + (_917.x * cbMtdParam._m0[9u].y)) + _1139) + (((_1275.x * _997) + (((_1263 * (0.959999978542327880859375 - _1004)) + _1007) * _1248.x)) * _1229);
    float _1292 = ((_1137 + (_917.y * cbMtdParam._m0[9u].y)) + _1140) + (((_1275.y * _998) + (((_1263 * (0.959999978542327880859375 - _1005)) + _1009) * _1248.y)) * _1229);
    float _1297 = ((_1138 + (_917.z * cbMtdParam._m0[9u].y)) + _1141) + (((_1275.z * _999) + (((_1263 * (0.959999978542327880859375 - _1006)) + _1010) * _1248.z)) * _1229);
    float _1498 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
    float _1509 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
    float _1520 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
    bool _1305 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1316;
    _1316.x = _1305 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1498 : (isnan(_1498) ? 1.0 : min(_1498, 1.0)));
    _1316.y = _1305 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1509 : (isnan(_1509) ? 1.0 : min(_1509, 1.0)));
    _1316.z = _1305 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1520 : (isnan(_1520) ? 1.0 : min(_1520, 1.0)));
    payload._m0 = _1316;
}


