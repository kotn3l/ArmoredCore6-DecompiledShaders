#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2118;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _178 * _170;
    uint _181 = _179 >> 2u;
    uvec3 _190 = uvec3(texelFetch(l_geomAttrib_0, int(_181)).x, texelFetch(l_geomAttrib_0, int(_181 + 1u)).x, texelFetch(l_geomAttrib_0, int(_181 + 2u)).x);
    uint _197 = _177.z;
    bool _198 = _197 != 0u;
    bool _200 = _129.w == 0u;
    bool _201 = _198 || _200;
    uint _202 = _179 + 12u;
    uint _225;
    uint _226;
    uint _227;
    uint _228;
    if (_201)
    {
        uvec4 _204 = texelFetch(l_geomAttrib_0, int(_202 >> 2u));
        uint _205 = _204.x;
        _225 = _205 & 255u;
        _226 = (_205 >> 8u) & 255u;
        _227 = (_205 >> 16u) & 255u;
        _228 = 16u;
    }
    else
    {
        uint _213 = _202 >> 2u;
        uvec2 _219 = uvec2(texelFetch(l_geomAttrib_0, int(_213)).x, texelFetch(l_geomAttrib_0, int(_213 + 1u)).x);
        uint _220 = _219.x;
        _225 = _220 & 65535u;
        _226 = _220 >> 16u;
        _227 = _219.y & 65535u;
        _228 = 20u;
    }
    uvec4 _235 = texelFetch(l_geomAttrib_0, int((_228 + _179) >> 2u));
    uint _236 = _235.x;
    bool _250 = _197 == 0u;
    uint _251;
    if (_250)
    {
        _251 = _228 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_200)
        {
            frontier_phi_9_10_ladder = _228 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _228 + 12u;
        }
        _251 = frontier_phi_9_10_ladder;
    }
    uvec4 _259 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + (_198 ? (_251 + 4u) : _251)) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uint _266 = _178 * _172;
    uint _267 = _266 >> 2u;
    uvec3 _276 = uvec3(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x, texelFetch(l_geomAttrib_0, int(_267 + 2u)).x);
    uint _283 = _266 + 12u;
    uint _304;
    uint _305;
    uint _306;
    uint _307;
    if (_201)
    {
        uvec4 _285 = texelFetch(l_geomAttrib_0, int(_283 >> 2u));
        uint _286 = _285.x;
        _304 = _286 & 255u;
        _305 = (_286 >> 8u) & 255u;
        _306 = (_286 >> 16u) & 255u;
        _307 = 16u;
    }
    else
    {
        uint _292 = _283 >> 2u;
        uvec2 _298 = uvec2(texelFetch(l_geomAttrib_0, int(_292)).x, texelFetch(l_geomAttrib_0, int(_292 + 1u)).x);
        uint _299 = _298.x;
        _304 = _299 & 65535u;
        _305 = _299 >> 16u;
        _306 = _298.y & 65535u;
        _307 = 20u;
    }
    uvec4 _313 = texelFetch(l_geomAttrib_0, int((_307 + _266) >> 2u));
    uint _314 = _313.x;
    uint _326;
    if (_250)
    {
        _326 = _307 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_200)
        {
            frontier_phi_16_17_ladder = _307 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _307 + 12u;
        }
        _326 = frontier_phi_16_17_ladder;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int(((_266 + 4u) + (_198 ? (_326 + 4u) : _326)) >> 2u));
    uint _335 = _334.x;
    float _339 = float(int(uint(int(_335 << 16u) >> int(16u))));
    float _340 = float(int(uint(int(_335) >> int(16u))));
    uint _341 = _178 * _173;
    uint _342 = _341 >> 2u;
    uvec3 _351 = uvec3(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x, texelFetch(l_geomAttrib_0, int(_342 + 2u)).x);
    uint _358 = _341 + 12u;
    uint _379;
    uint _380;
    uint _381;
    uint _382;
    if (_201)
    {
        uvec4 _360 = texelFetch(l_geomAttrib_0, int(_358 >> 2u));
        uint _361 = _360.x;
        _379 = _361 & 255u;
        _380 = (_361 >> 8u) & 255u;
        _381 = (_361 >> 16u) & 255u;
        _382 = 16u;
    }
    else
    {
        uint _367 = _358 >> 2u;
        uvec2 _373 = uvec2(texelFetch(l_geomAttrib_0, int(_367)).x, texelFetch(l_geomAttrib_0, int(_367 + 1u)).x);
        uint _374 = _373.x;
        _379 = _374 & 65535u;
        _380 = _374 >> 16u;
        _381 = _373.y & 65535u;
        _382 = 20u;
    }
    uvec4 _388 = texelFetch(l_geomAttrib_0, int((_382 + _341) >> 2u));
    uint _389 = _388.x;
    uint _401;
    if (_250)
    {
        _401 = _382 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_200)
        {
            frontier_phi_23_24_ladder = _382 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _382 + 12u;
        }
        _401 = frontier_phi_23_24_ladder;
    }
    uvec4 _409 = texelFetch(l_geomAttrib_0, int(((_341 + 4u) + (_198 ? (_401 + 4u) : _401)) >> 2u));
    uint _410 = _409.x;
    float _414 = float(int(uint(int(_410 << 16u) >> int(16u))));
    float _415 = float(int(uint(int(_410) >> int(16u))));
    bool _417 = _129.z == 0u;
    float _453;
    float _454;
    float _455;
    if (_417)
    {
        uint _420 = _170 * 3u;
        uvec3 _429 = uvec3(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_420 + 2u)).x);
        _453 = uintBitsToFloat(_429.x);
        _454 = uintBitsToFloat(_429.y);
        _455 = uintBitsToFloat(_429.z);
    }
    else
    {
        uint _437 = _170 * 2u;
        uvec2 _443 = uvec2(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x);
        uint _444 = _443.x;
        _453 = unpackHalf2x16(_444).x;
        _454 = unpackHalf2x16(_444 >> 16u).x;
        _455 = unpackHalf2x16(_443.y).x;
    }
    float _491;
    float _492;
    float _493;
    if (_417)
    {
        uint _458 = _172 * 3u;
        uvec3 _467 = uvec3(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_458 + 2u)).x);
        _491 = uintBitsToFloat(_467.x);
        _492 = uintBitsToFloat(_467.y);
        _493 = uintBitsToFloat(_467.z);
    }
    else
    {
        uint _475 = _172 * 2u;
        uvec2 _481 = uvec2(texelFetch(l_geomPositionBuffer, int(_475)).x, texelFetch(l_geomPositionBuffer, int(_475 + 1u)).x);
        uint _482 = _481.x;
        _491 = unpackHalf2x16(_482).x;
        _492 = unpackHalf2x16(_482 >> 16u).x;
        _493 = unpackHalf2x16(_481.y).x;
    }
    float _529;
    float _530;
    float _531;
    if (_417)
    {
        uint _496 = _173 * 3u;
        uvec3 _505 = uvec3(texelFetch(l_geomPositionBuffer, int(_496)).x, texelFetch(l_geomPositionBuffer, int(_496 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_496 + 2u)).x);
        _529 = uintBitsToFloat(_505.x);
        _530 = uintBitsToFloat(_505.y);
        _531 = uintBitsToFloat(_505.z);
    }
    else
    {
        uint _513 = _173 * 2u;
        uvec2 _519 = uvec2(texelFetch(l_geomPositionBuffer, int(_513)).x, texelFetch(l_geomPositionBuffer, int(_513 + 1u)).x);
        uint _520 = _519.x;
        _529 = unpackHalf2x16(_520).x;
        _530 = unpackHalf2x16(_520 >> 16u).x;
        _531 = unpackHalf2x16(_519.y).x;
    }
    float _534 = (1.0 - hit._m0.x) - hit._m0.y;
    float _547 = ((uintBitsToFloat(_276.x) * hit._m0.x) + (uintBitsToFloat(_190.x) * _534)) + (uintBitsToFloat(_351.x) * hit._m0.y);
    float _548 = ((uintBitsToFloat(_276.y) * hit._m0.x) + (uintBitsToFloat(_190.y) * _534)) + (uintBitsToFloat(_351.y) * hit._m0.y);
    float _549 = ((uintBitsToFloat(_276.z) * hit._m0.x) + (uintBitsToFloat(_190.z) * _534)) + (uintBitsToFloat(_351.z) * hit._m0.y);
    float _583 = (_339 - _264) * 0.00048828125;
    float _585 = (_340 - _265) * 0.00048828125;
    float _588 = (_414 - _264) * 0.00048828125;
    float _589 = (_415 - _265) * 0.00048828125;
    float _611 = _491 - _453;
    float _612 = _492 - _454;
    float _613 = _493 - _455;
    float _616 = fma(_613, gl_ObjectToWorldEXT[2u].x, fma(_612, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _611));
    float _619 = fma(_613, gl_ObjectToWorldEXT[2u].y, fma(_612, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _611));
    float _622 = fma(_613, gl_ObjectToWorldEXT[2u].z, fma(_612, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _611));
    float _623 = _529 - _453;
    float _624 = _530 - _454;
    float _625 = _531 - _455;
    float _628 = fma(_625, gl_ObjectToWorldEXT[2u].x, fma(_624, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _623));
    float _631 = fma(_625, gl_ObjectToWorldEXT[2u].y, fma(_624, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _623));
    float _634 = fma(_625, gl_ObjectToWorldEXT[2u].z, fma(_624, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _623));
    float _635 = (((_339 * hit._m0.x) + (_264 * _534)) + (_414 * hit._m0.y)) * 0.00048828125;
    float _636 = (((_340 * hit._m0.x) + (_265 * _534)) + (_415 * hit._m0.y)) * 0.00048828125;
    float _640 = (((float(_225) * _534) + (-127.0)) + (float(_304) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _643 = (((float(_226) * _534) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _646 = (((float(_227) * _534) + (-127.0)) + (float(_306) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _647 = _640 * 0.0078740157186985015869140625;
    float _649 = _643 * 0.0078740157186985015869140625;
    float _650 = _646 * 0.0078740157186985015869140625;
    float _663 = ((((float(_236 & 255u) * _534) + (-127.0)) + (float(_314 & 255u) * hit._m0.x)) + (float(_389 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _664 = ((((float((_236 >> 8u) & 255u) * _534) + (-127.0)) + (float((_314 >> 8u) & 255u) * hit._m0.x)) + (float((_389 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _665 = ((((float((_236 >> 16u) & 255u) * _534) + (-127.0)) + (float((_314 >> 16u) & 255u) * hit._m0.x)) + (float((_389 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _666 = ((((float(_236 >> 24u) * _534) + (-127.0)) + (float(_314 >> 24u) * hit._m0.x)) + (float(_389 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _676 = ((_664 * _650) - (_665 * _649)) * _666;
    float _677 = ((_665 * _647) - (_663 * _650)) * _666;
    float _678 = ((_663 * _649) - (_664 * _647)) * _666;
    float _682 = inversesqrt(dot(vec3(_676, _677, _678), vec3(_676, _677, _678)));
    uvec4 _689 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _691 = _689.z != 0u;
    uvec2 _708 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_0, int(0u)));
    bool _713 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _766;
    if (_713)
    {
        float _724 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _730 = (_634 * _619) - (_631 * _622);
        float _733 = (_628 * _622) - (_634 * _616);
        float _736 = (_631 * _616) - (_628 * _619);
        float _763 = ((log2((((float(_708.y) * 0.5) * float(_708.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_733 * _733) + (_736 * _736)) + (_730 * _730)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_724 * gl_WorldRayDirectionEXT.x, _724 * gl_WorldRayDirectionEXT.y, _724 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _766 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _635) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _636) + cbTextureTilingScale._m0[0u].w), _766);
    float _772 = _770.x;
    float _773 = _770.y;
    float _774 = _770.z;
    bool _795 = _689.x != 0u;
    uvec2 _813 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_8, int(0u)));
    float _864;
    if (_713)
    {
        float _824 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _830 = (_634 * _619) - (_631 * _622);
        float _833 = (_628 * _622) - (_634 * _616);
        float _836 = (_631 * _616) - (_628 * _619);
        float _862 = ((log2((((float(_813.y) * 0.5) * float(_813.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_833 * _833) + (_836 * _836)) + (_830 * _830)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_824 * gl_WorldRayDirectionEXT.x, _824 * gl_WorldRayDirectionEXT.y, _824 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _864 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    }
    else
    {
        _864 = 0.0;
    }
    vec4 _866 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _635) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _636) + cbTextureTilingScale._m0[9u].w), _864);
    float _868 = _866.x;
    float _869 = _866.y;
    float _870 = _866.z;
    float _887 = _795 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].x - _868)) + _868) : (_868 * cbMtdParam._m0[10u].x);
    float _888 = _795 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].y - _869)) + _869) : (_869 * cbMtdParam._m0[10u].y);
    float _889 = _795 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].z - _870)) + _870) : (_870 * cbMtdParam._m0[10u].z);
    bool _891 = _689.y != 0u;
    uvec2 _909 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_4, int(0u)));
    float _960;
    if (_713)
    {
        float _920 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _926 = (_634 * _619) - (_631 * _622);
        float _929 = (_628 * _622) - (_634 * _616);
        float _932 = (_631 * _616) - (_628 * _619);
        float _958 = ((log2((((float(_909.y) * 0.5) * float(_909.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_929 * _929) + (_932 * _932)) + (_926 * _926)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_920 * gl_WorldRayDirectionEXT.x, _920 * gl_WorldRayDirectionEXT.y, _920 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _960 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    }
    else
    {
        _960 = 0.0;
    }
    vec4 _962 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _635) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _636) + cbTextureTilingScale._m0[7u].w), _960);
    float _964 = _962.x;
    float _965 = _962.y;
    float _966 = _962.z;
    uvec2 _994 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_9, int(0u)));
    float _1045;
    if (_713)
    {
        float _1005 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1011 = (_634 * _619) - (_631 * _622);
        float _1014 = (_628 * _622) - (_634 * _616);
        float _1017 = (_631 * _616) - (_628 * _619);
        float _1043 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1014 * _1014) + (_1017 * _1017)) + (_1011 * _1011)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1005 * gl_WorldRayDirectionEXT.x, _1005 * gl_WorldRayDirectionEXT.y, _1005 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1045 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    }
    else
    {
        _1045 = 0.0;
    }
    vec4 _1048 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _635) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _636) + cbTextureTilingScale._m0[10u].w), _1045);
    float _1050 = _1048.x;
    float _1051 = _1048.y;
    float _1060 = ((cbMtdParam._m0[16u].w * (-1.39999997615814208984375)) * (1.0 - _1050)) + 1.0;
    float _2232 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1065 = (cbMtdParam._m0[16u].y * ((isnan(1.0) ? _2232 : (isnan(_2232) ? 1.0 : min(_2232, 1.0))) - _1050)) + _1050;
    float _1072 = (_1065 * ((_891 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].x - _964)) + _964) : (_964 * cbMtdParam._m0[11u].x)) - _887)) + _887;
    float _1073 = (_1065 * ((_891 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].y - _965)) + _965) : (_965 * cbMtdParam._m0[11u].y)) - _888)) + _888;
    float _1074 = (_1065 * ((_891 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].z - _966)) + _966) : (_966 * cbMtdParam._m0[11u].z)) - _889)) + _889;
    float _1078 = (((1.0 - _1051) * (-1.39999997615814208984375)) * cbMtdParam._m0[16u].z) + 1.0;
    float _2243 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1083 = (cbMtdParam._m0[14u].x * ((isnan(1.0) ? _2243 : (isnan(_2243) ? 1.0 : min(_2243, 1.0))) - _1051)) + _1051;
    float _1090 = (_1083 * ((_691 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].x - _772)) + _772) : (_772 * cbMtdParam._m0[12u].x)) - _1072)) + _1072;
    float _1091 = (_1083 * ((_691 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].y - _773)) + _773) : (_773 * cbMtdParam._m0[12u].y)) - _1073)) + _1073;
    float _1092 = (_1083 * ((_691 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].z - _774)) + _774) : (_774 * cbMtdParam._m0[12u].z)) - _1074)) + _1074;
    uvec2 _1104 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_11, int(0u)));
    float _1155;
    if (_713)
    {
        float _1115 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1121 = (_634 * _619) - (_631 * _622);
        float _1124 = (_628 * _622) - (_634 * _616);
        float _1127 = (_631 * _616) - (_628 * _619);
        float _1153 = ((log2((((float(_1104.y) * 0.5) * float(_1104.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1124 * _1124) + (_1127 * _1127)) + (_1121 * _1121)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1115 * gl_WorldRayDirectionEXT.x, _1115 * gl_WorldRayDirectionEXT.y, _1115 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1155 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    }
    else
    {
        _1155 = 0.0;
    }
    vec4 _1157 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _635) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _636) + cbTextureTilingScale._m0[3u].w), _1155);
    uvec2 _1174 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_13, int(0u)));
    float _1225;
    if (_713)
    {
        float _1185 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1191 = (_634 * _619) - (_631 * _622);
        float _1194 = (_628 * _622) - (_634 * _616);
        float _1197 = (_631 * _616) - (_628 * _619);
        float _1223 = ((log2((((float(_1174.y) * 0.5) * float(_1174.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1194 * _1194) + (_1197 * _1197)) + (_1191 * _1191)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1185 * gl_WorldRayDirectionEXT.x, _1185 * gl_WorldRayDirectionEXT.y, _1185 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1225 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    }
    else
    {
        _1225 = 0.0;
    }
    float _1234 = cbMtdParam._m0[15u].y * textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _635) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _636) + cbTextureTilingScale._m0[5u].w), _1225).x;
    float _1241 = (_1234 * (_1157.x - _1090)) + _1090;
    float _1242 = (_1234 * (_1157.y - _1091)) + _1091;
    float _1243 = (_1234 * (_1157.z - _1092)) + _1092;
    float _1258 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_647, _649, _650, 0.0)) - cbMtdParam._m0[15u].x;
    float _2264 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
    float _1268 = (exp2(log2(1.0 - (isnan(1.0) ? _2264 : (isnan(_2264) ? 1.0 : min(_2264, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[15u].w - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z;
    float _1278 = (((_1268 * cbMtdParam._m0[13u].x) - _1241) * _1268) + _1241;
    float _1279 = (((_1268 * cbMtdParam._m0[13u].y) - _1242) * _1268) + _1242;
    float _1280 = (((_1268 * cbMtdParam._m0[13u].z) - _1243) * _1268) + _1243;
    uvec2 _1292 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_1, int(0u)));
    float _1343;
    if (_713)
    {
        float _1303 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1309 = (_634 * _619) - (_631 * _622);
        float _1312 = (_628 * _622) - (_634 * _616);
        float _1315 = (_631 * _616) - (_628 * _619);
        float _1341 = ((log2((((float(_1292.y) * 0.5) * float(_1292.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1312 * _1312) + (_1315 * _1315)) + (_1309 * _1309)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1303 * gl_WorldRayDirectionEXT.x, _1303 * gl_WorldRayDirectionEXT.y, _1303 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1343 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
    }
    else
    {
        _1343 = 0.0;
    }
    vec4 _1346 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _635) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _636) + cbTextureTilingScale._m0[1u].w), _1343);
    uvec2 _1362 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_2, int(0u)));
    float _1413;
    if (_713)
    {
        float _1373 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1379 = (_634 * _619) - (_631 * _622);
        float _1382 = (_628 * _622) - (_634 * _616);
        float _1385 = (_631 * _616) - (_628 * _619);
        float _1411 = ((log2((((float(_1362.y) * 0.5) * float(_1362.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1382 * _1382) + (_1385 * _1385)) + (_1379 * _1379)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1373 * gl_WorldRayDirectionEXT.x, _1373 * gl_WorldRayDirectionEXT.y, _1373 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1413 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
    }
    else
    {
        _1413 = 0.0;
    }
    vec4 _1415 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _635) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _636) + cbTextureTilingScale._m0[6u].w), _1413);
    float _1417 = _1415.x;
    float _1418 = _1415.y;
    float _1419 = _1415.z;
    float _1426 = ((_1346.x - _1417) * _1065) + _1417;
    float _1427 = ((_1346.y - _1418) * _1065) + _1418;
    float _1428 = ((_1346.z - _1419) * _1065) + _1419;
    uvec2 _1440 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_6, int(0u)));
    float _1491;
    if (_713)
    {
        float _1451 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1457 = (_634 * _619) - (_631 * _622);
        float _1460 = (_628 * _622) - (_634 * _616);
        float _1463 = (_631 * _616) - (_628 * _619);
        float _1489 = ((log2((((float(_1440.y) * 0.5) * float(_1440.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1460 * _1460) + (_1463 * _1463)) + (_1457 * _1457)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1451 * gl_WorldRayDirectionEXT.x, _1451 * gl_WorldRayDirectionEXT.y, _1451 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1491 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
    }
    else
    {
        _1491 = 0.0;
    }
    vec4 _1493 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _635) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _636) + cbTextureTilingScale._m0[8u].w), _1491);
    uvec2 _1519 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_10, int(0u)));
    float _1570;
    if (_713)
    {
        float _1530 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1536 = (_634 * _619) - (_631 * _622);
        float _1539 = (_628 * _622) - (_634 * _616);
        float _1542 = (_631 * _616) - (_628 * _619);
        float _1568 = ((log2((((float(_1519.y) * 0.5) * float(_1519.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1539 * _1539) + (_1542 * _1542)) + (_1536 * _1536)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1530 * gl_WorldRayDirectionEXT.x, _1530 * gl_WorldRayDirectionEXT.y, _1530 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1570 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
    }
    else
    {
        _1570 = 0.0;
    }
    vec4 _1572 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _635) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _636) + cbTextureTilingScale._m0[2u].w), _1570);
    float _1584 = (((_1493.x - _1426) * _1083) + _1426) + ((_1572.x + (-0.5)) * cbMtdParam._m0[17u].x);
    float _1585 = (((_1493.y - _1427) * _1083) + _1427) + ((_1572.y + (-0.5)) * cbMtdParam._m0[17u].x);
    float _1586 = (((_1493.z - _1428) * _1083) + _1428) + ((_1572.z + (-0.5)) * cbMtdParam._m0[17u].x);
    uvec2 _1598 = uvec2(textureSize(M_Planet_GroundSurface_002_snp_0_Texture2D_12, int(0u)));
    float _1602 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1603 = _1602 * gl_WorldRayDirectionEXT.x;
    float _1604 = _1602 * gl_WorldRayDirectionEXT.y;
    float _1605 = _1602 * gl_WorldRayDirectionEXT.z;
    float _1649;
    if (_713)
    {
        float _1615 = (_634 * _619) - (_631 * _622);
        float _1618 = (_628 * _622) - (_634 * _616);
        float _1621 = (_631 * _616) - (_628 * _619);
        float _1647 = ((log2((((float(_1598.y) * 0.5) * float(_1598.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1618 * _1618) + (_1621 * _1621)) + (_1615 * _1615)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1603, _1604, _1605), vec3(_647, _649, _650))));
        _1649 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
    }
    else
    {
        _1649 = 0.0;
    }
    vec4 _1651 = textureLod(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _635) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _636) + cbTextureTilingScale._m0[4u].w), _1649);
    float _1662 = ((_1651.x - _1584) * _1234) + _1584;
    float _1663 = ((_1651.y - _1585) * _1234) + _1585;
    float _1664 = ((_1651.z - _1586) * _1234) + _1586;
    float _1674 = ((1.0 - _1664) * _1268) + _1664;
    float _1677 = ((((0.502016007900238037109375 - _1662) * _1268) + _1662) * 2.0) + (-1.0);
    float _1679 = ((((0.502016007900238037109375 - _1663) * _1268) + _1663) * 2.0) + (-1.0);
    float _1680 = dot(vec2(_1677, _1679), vec2(_1677, _1679));
    float _2305 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
    float _1685 = sqrt(1.0 - (isnan(1.0) ? _2305 : (isnan(_2305) ? 1.0 : min(_2305, 1.0))));
    float _1690 = inversesqrt(dot(vec3(_547, _548, _549), vec3(_547, _548, _549)));
    bool _1695 = _689.w != 0u;
    float _1705 = inversesqrt(dot(vec3(cbMtdParam._m0[17u].zw, cbMtdParam._m0[18u].x), vec3(cbMtdParam._m0[17u].zw, cbMtdParam._m0[18u].x)));
    float _1714 = _1695 ? g_sceneCB._m0[4u].x : (_1705 * cbMtdParam._m0[17u].z);
    float _1715 = _1695 ? g_sceneCB._m0[4u].y : (_1705 * cbMtdParam._m0[17u].w);
    float _1716 = _1695 ? g_sceneCB._m0[4u].z : (_1705 * cbMtdParam._m0[18u].x);
    float _1720 = inversesqrt(dot(vec3(_1714, _1715, _1716), vec3(_1714, _1715, _1716)));
    float _1721 = _1714 * _1720;
    float _1722 = _1715 * _1720;
    float _1723 = _1716 * _1720;
    float _1727 = inversesqrt(dot(vec3(_1721, _1722, _1723), vec3(_1721, _1722, _1723)));
    float _1742 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1690 * _547, _1690 * _548, _1690 * _549, 0.0), vec4(_1727 * _1721, _1727 * _1722, _1727 * _1723, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2316 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
    float _1744 = isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0));
    float _1750 = exp2(log2(_1744 * 6.5) * 7.0);
    float _2327 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
    float _1752 = (isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0))) + _1744;
    float _2338 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
    float _1753 = isnan(1.0) ? _2338 : (isnan(_2338) ? 1.0 : min(_2338, 1.0));
    float _1762 = fma(_1685, _647, fma(_1679, _663, (_682 * _676) * _1677));
    float _1765 = fma(_1685, _649, fma(_1679, _664, (_682 * _677) * _1677));
    float _1768 = fma(_1685, _650, fma(_1679, _665, (_682 * _678) * _1677));
    float _1772 = inversesqrt(dot(vec3(_1762, _1765, _1768), vec3(_1762, _1765, _1768)));
    float _1773 = _1772 * _1762;
    float _1774 = _1772 * _1765;
    float _1775 = _1772 * _1768;
    float _1787 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1788 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1789 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1790 = (-0.0) - _1603;
    float _1792 = (-0.0) - _1604;
    float _1793 = (-0.0) - _1605;
    float _1799 = float(gl_LaunchIDEXT.x);
    float _1800 = float(gl_LaunchIDEXT.y);
    float _1803 = float(gl_LaunchSizeEXT.x);
    float _1817 = fract(fract(sin(dot(vec2(_1799 / _1803, _1800 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1830 = fract(fract(sin(dot(vec2((_1799 + 128.0) / _1803, (_1800 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1835 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1836 = _1835.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1836, _1835.w, _1836, vec3(_1787, _1788, _1789), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1944;
    float _1945;
    float _1946;
    float _1947;
    float _1948;
    float _1949;
    if (_71._m0 == 0u)
    {
        float _1856 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1773, _1774, _1775));
        float _2349 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
        float _1859 = isnan(1.0) ? _2349 : (isnan(_2349) ? 1.0 : min(_2349, 1.0));
        float _1878 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1674) * 0.949999988079071044921875);
        float _1879 = _1878 * _1878;
        float _1880 = g_sceneCB._m0[4u].x - _1603;
        float _1881 = g_sceneCB._m0[4u].y - _1604;
        float _1882 = g_sceneCB._m0[4u].z - _1605;
        float _1886 = inversesqrt(dot(vec3(_1880, _1881, _1882), vec3(_1880, _1881, _1882)));
        float _1887 = _1886 * _1880;
        float _1888 = _1886 * _1881;
        float _1889 = _1886 * _1882;
        float _1890 = dot(vec3(_1773, _1774, _1775), vec3(g_sceneCB._m0[4u].xyz));
        float _2360 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1893 = isnan(1.0) ? _2360 : (isnan(_2360) ? 1.0 : min(_2360, 1.0));
        float _1894 = dot(vec3(_1773, _1774, _1775), vec3(_1790, _1792, _1793));
        float _2371 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
        float _1897 = isnan(1.0) ? _2371 : (isnan(_2371) ? 1.0 : min(_2371, 1.0));
        float _1898 = dot(vec3(_1773, _1774, _1775), vec3(_1887, _1888, _1889));
        float _2382 = isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0));
        float _1901 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        float _1902 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1887, _1888, _1889));
        float _2393 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
        float _1906 = _1879 * _1879;
        float _1910 = ((_1901 * _1901) * (_1906 + (-1.0))) + 1.0;
        float _1922 = (exp2(log2(1.0 - (isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1924 = 1.0 - _1879;
        float _1935 = (0.5 / (((_1897 * ((_1893 * _1924) + _1879)) + 9.9999999392252902907785028219223e-09) + (((_1897 * _1924) + _1879) * _1893))) * _1893;
        float _2404 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _1937 = (isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0))) * (_1906 / ((_1910 * _1910) * 3.141590118408203125));
        _1944 = ((_1278 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1859;
        _1945 = ((_1279 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1859;
        _1946 = ((_1280 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1859;
        _1947 = (_1922 * g_sceneCB._m0[5u].x) * _1937;
        _1948 = (_1922 * g_sceneCB._m0[5u].y) * _1937;
        _1949 = (_1922 * g_sceneCB._m0[5u].z) * _1937;
    }
    else
    {
        _1944 = 0.0;
        _1945 = 0.0;
        _1946 = 0.0;
        _1947 = 0.0;
        _1948 = 0.0;
        _1949 = 0.0;
    }
    bool _1951 = abs(_1774) < 0.89999997615814208984375;
    float _1953 = float(_1951);
    float _1954 = _1951 ? 0.0 : 1.0;
    float _1957 = (_1953 * _1775) - (_1954 * _1774);
    float _1958 = _1954 * _1773;
    float _1960 = (-0.0) - (_1773 * _1953);
    float _1964 = inversesqrt(dot(vec3(_1957, _1958, _1960), vec3(_1957, _1958, _1960)));
    float _1965 = _1957 * _1964;
    float _1966 = _1958 * _1964;
    float _1967 = _1964 * _1960;
    float _1970 = (_1966 * _1775) - (_1967 * _1774);
    float _1973 = (_1967 * _1773) - (_1965 * _1775);
    float _1976 = (_1965 * _1774) - (_1966 * _1773);
    float _1978;
    float _1986;
    float _1977 = 0.0;
    uint _1979 = 0u;
    float _1983;
    bool _1985;
    for (;;)
    {
        _1983 = (float(_1979) + _1817) * 0.03125;
        _1985 = _1979 == 0u;
        float frontier_phi_61_pred;
        if (_1985)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _2123;
            float _2124;
            uint _2126;
            _2123 = 0.0;
            _2124 = 0.5;
            _2126 = _1979;
            float _1987;
            for (;;)
            {
                _1987 = ((_2126 & 1u) != 0u) ? (_2124 + _2123) : _2123;
                uint _2127 = _2126 >> 1u;
                if (_2127 == 0u)
                {
                    break;
                }
                else
                {
                    _2123 = _1987;
                    _2124 *= 0.5;
                    _2126 = _2127;
                }
            }
            frontier_phi_61_pred = _1987;
        }
        _1986 = frontier_phi_61_pred;
        float _1988 = _1986 + _1830;
        float _1992 = sqrt(_1983);
        float _1993 = ((_1988 > 1.0) ? (_1988 + (-1.0)) : _1988) * 6.283185482025146484375;
        float _1996 = cos(_1993) * _1992;
        float _1998 = sin(_1993) * _1992;
        float _2000 = sqrt(1.0 - _1983);
        float _2013 = ((_2000 * _1773) + (_1996 * _1970)) + (_1998 * _1965);
        float _2014 = ((_2000 * _1774) + (_1996 * _1973)) + (_1998 * _1966);
        float _2015 = ((_2000 * _1775) + (_1996 * _1976)) + (_1998 * _1967);
        _70._m0 = 1u;
        uvec4 _2019 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2020 = _2019.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2020, _2019.w, _2020, vec3(_1787, _1788, _1789), 9.9999997473787516355514526367188e-05, vec3(_2013, _2014, _2015), 10000.0, 1);
        float _2026 = dot(vec3(_1773, _1774, _1775), vec3(_2013, _2014, _2015));
        float _2415 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
        float _2029 = isnan(1.0) ? _2415 : (isnan(_2415) ? 1.0 : min(_2415, 1.0));
        _1978 = ((float(_70._m0 == 0u) * _2029) / (_2029 * 0.3183098733425140380859375)) + _1977;
        uint _1980 = _1979 + 1u;
        if (_1980 == 32u)
        {
            break;
        }
        else
        {
            _1977 = _1978;
            _1979 = _1980;
            continue;
        }
    }
    float _2037 = _1978 * 0.009947183541953563690185546875;
    float _2042 = dot(vec3(_1603, _1604, _1605), vec3(_1773, _1774, _1775)) * 2.0;
    vec4 _2056 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1603 - (_2042 * _1773), _1604 - (_2042 * _1774), _1605 - (_2042 * _1775)), 4.0 - (_1674 * 4.0));
    float _2061 = dot(vec3(_1790, _1792, _1793), vec3(_1773, _1774, _1775));
    float _2426 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2070 = (exp2(log2(1.0 - (isnan(1.0) ? _2426 : (isnan(_2426) ? 1.0 : min(_2426, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2076 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1773, _1774, _1775), 0.0);
    float _2088 = ((_1944 + ((cbMtdParam._m0[16u].x * _1278) * _1753)) + _1947) + (((_2076.x * _1278) + (_2070 * _2056.x)) * _2037);
    float _2093 = ((_1945 + ((cbMtdParam._m0[16u].x * _1279) * _1753)) + _1948) + (((_2076.y * _1279) + (_2070 * _2056.y)) * _2037);
    float _2098 = ((_1946 + ((cbMtdParam._m0[16u].x * _1280) * _1753)) + _1949) + (((_2076.z * _1280) + (_2070 * _2056.z)) * _2037);
    float _2437 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2448 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
    float _2459 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
    bool _2106 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2117;
    _2117.x = _2106 ? ((_640 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2437 : (isnan(_2437) ? 1.0 : min(_2437, 1.0)));
    _2117.y = _2106 ? ((_643 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2448 : (isnan(_2448) ? 1.0 : min(_2448, 1.0)));
    _2117.z = _2106 ? ((_646 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2459 : (isnan(_2459) ? 1.0 : min(_2459, 1.0)));
    payload._m0 = _2117;
}


