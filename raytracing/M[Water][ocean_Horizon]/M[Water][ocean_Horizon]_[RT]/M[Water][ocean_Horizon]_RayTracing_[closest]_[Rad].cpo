#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _42
{
    vec3 _m0;
};

struct _46
{
    vec2 _m0;
};

struct _49
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _42 payload;
hitAttributeEXT _46 hit;
layout(location = 1) rayPayloadEXT _49 _51;
layout(location = 2) rayPayloadEXT _49 _52;

vec3 _795;

void main()
{
    float _60 = float(gl_LaunchSizeEXT.y);
    float _90 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _91 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _92 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _110 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _111 = _110.y;
    uint _151;
    uint _153;
    uint _154;
    if (_110.x == 0u)
    {
        uint _119 = (_111 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _128 = uvec3(texelFetch(l_geomIndexBuffer, int(_119)).x, texelFetch(l_geomIndexBuffer, int(_119 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_119 + 2u)).x);
        _151 = _128.x;
        _153 = _128.y;
        _154 = _128.z;
    }
    else
    {
        uint _132 = uint(gl_PrimitiveID) * 6u;
        uint _134 = _132 & 4294967292u;
        uint _137 = (_111 + _134) >> 2u;
        uvec2 _144 = uvec2(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x);
        uint _145 = _144.x;
        uint _146 = _144.y;
        uint _148 = _145 >> 16u;
        uint _149 = _146 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_134 == _132)
        {
            frontier_phi_3_2_ladder = _145 & 65535u;
            frontier_phi_3_2_ladder_1 = _148;
            frontier_phi_3_2_ladder_2 = _149;
        }
        else
        {
            frontier_phi_3_2_ladder = _148;
            frontier_phi_3_2_ladder_1 = _149;
            frontier_phi_3_2_ladder_2 = _146 >> 16u;
        }
        _151 = frontier_phi_3_2_ladder;
        _153 = frontier_phi_3_2_ladder_1;
        _154 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _158 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _159 = _158.x;
    bool _164 = (_158.z != 0u) || (_110.w == 0u);
    uint _165 = _159 * _151;
    uint _166 = _165 + 12u;
    uint _190;
    uint _191;
    uint _192;
    uint _193;
    if (_164)
    {
        uvec4 _169 = texelFetch(l_geomAttrib_0, int(_166 >> 2u));
        uint _170 = _169.x;
        _190 = _170 & 255u;
        _191 = (_170 >> 8u) & 255u;
        _192 = (_170 >> 16u) & 255u;
        _193 = 16u;
    }
    else
    {
        uint _178 = _166 >> 2u;
        uvec2 _184 = uvec2(texelFetch(l_geomAttrib_0, int(_178)).x, texelFetch(l_geomAttrib_0, int(_178 + 1u)).x);
        uint _185 = _184.x;
        _190 = _185 & 65535u;
        _191 = _185 >> 16u;
        _192 = _184.y & 65535u;
        _193 = 20u;
    }
    uvec4 _201 = texelFetch(l_geomAttrib_0, int((_193 + _165) >> 2u));
    uint _202 = _201.x;
    uint _214 = _159 * _153;
    uint _215 = _214 + 12u;
    uint _236;
    uint _237;
    uint _238;
    uint _239;
    if (_164)
    {
        uvec4 _217 = texelFetch(l_geomAttrib_0, int(_215 >> 2u));
        uint _218 = _217.x;
        _236 = _218 & 255u;
        _237 = (_218 >> 8u) & 255u;
        _238 = (_218 >> 16u) & 255u;
        _239 = 16u;
    }
    else
    {
        uint _224 = _215 >> 2u;
        uvec2 _230 = uvec2(texelFetch(l_geomAttrib_0, int(_224)).x, texelFetch(l_geomAttrib_0, int(_224 + 1u)).x);
        uint _231 = _230.x;
        _236 = _231 & 65535u;
        _237 = _231 >> 16u;
        _238 = _230.y & 65535u;
        _239 = 20u;
    }
    uvec4 _245 = texelFetch(l_geomAttrib_0, int((_239 + _214) >> 2u));
    uint _246 = _245.x;
    uint _257 = _159 * _154;
    uint _258 = _257 + 12u;
    uint _279;
    uint _280;
    uint _281;
    uint _282;
    if (_164)
    {
        uvec4 _260 = texelFetch(l_geomAttrib_0, int(_258 >> 2u));
        uint _261 = _260.x;
        _279 = _261 & 255u;
        _280 = (_261 >> 8u) & 255u;
        _281 = (_261 >> 16u) & 255u;
        _282 = 16u;
    }
    else
    {
        uint _267 = _258 >> 2u;
        uvec2 _273 = uvec2(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x);
        uint _274 = _273.x;
        _279 = _274 & 65535u;
        _280 = _274 >> 16u;
        _281 = _273.y & 65535u;
        _282 = 20u;
    }
    uvec4 _288 = texelFetch(l_geomAttrib_0, int((_282 + _257) >> 2u));
    uint _289 = _288.x;
    float _302 = (1.0 - hit._m0.x) - hit._m0.y;
    float _327 = (((float(_190) * _302) + (-127.0)) + (float(_236) * hit._m0.x)) + (float(_279) * hit._m0.y);
    float _330 = (((float(_191) * _302) + (-127.0)) + (float(_237) * hit._m0.x)) + (float(_280) * hit._m0.y);
    float _333 = (((float(_192) * _302) + (-127.0)) + (float(_238) * hit._m0.x)) + (float(_281) * hit._m0.y);
    float _334 = _327 * 0.0078740157186985015869140625;
    float _336 = _330 * 0.0078740157186985015869140625;
    float _337 = _333 * 0.0078740157186985015869140625;
    float _350 = ((((float(_202 & 255u) * _302) + (-127.0)) + (float(_246 & 255u) * hit._m0.x)) + (float(_289 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _351 = ((((float((_202 >> 8u) & 255u) * _302) + (-127.0)) + (float((_246 >> 8u) & 255u) * hit._m0.x)) + (float((_289 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _352 = ((((float((_202 >> 16u) & 255u) * _302) + (-127.0)) + (float((_246 >> 16u) & 255u) * hit._m0.x)) + (float((_289 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _353 = ((((float(_202 >> 24u) * _302) + (-127.0)) + (float(_246 >> 24u) * hit._m0.x)) + (float(_289 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _363 = ((_351 * _337) - (_352 * _336)) * _353;
    float _364 = ((_352 * _334) - (_350 * _337)) * _353;
    float _365 = ((_350 * _336) - (_351 * _334)) * _353;
    float _369 = inversesqrt(dot(vec3(_363, _364, _365), vec3(_363, _364, _365)));
    float _391 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _392 = _391 * gl_WorldRayDirectionEXT.x;
    float _393 = _391 * gl_WorldRayDirectionEXT.y;
    float _394 = _391 * gl_WorldRayDirectionEXT.z;
    float _412;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _402 = log2(0.0);
        float _410 = ((_402 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_91 * _91) + (_90 * _90)) + (_92 * _92)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _60)))))) / abs(dot(vec3(_392, _393, _394), vec3(_334, _336, _337))));
        _412 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    }
    else
    {
        _412 = 0.0;
    }
    vec4 _418 = textureLod(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(uintBitsToFloat(0x7fc00000u /* nan */)), _412);
    float _424 = (_418.x * 2.0) + (-1.0);
    float _426 = (_418.y * 2.0) + (-1.0);
    float _427 = dot(vec2(_424, _426), vec2(_424, _426));
    float _847 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _432 = sqrt(1.0 - (isnan(1.0) ? _847 : (isnan(_847) ? 1.0 : min(_847, 1.0))));
    float _435 = fma(_432, _334, fma(_426, _350, (_363 * _369) * _424));
    float _438 = fma(_432, _336, fma(_426, _351, (_364 * _369) * _424));
    float _441 = fma(_432, _337, fma(_426, _352, (_365 * _369) * _424));
    float _445 = inversesqrt(dot(vec3(_435, _438, _441), vec3(_435, _438, _441)));
    float _446 = _445 * _435;
    float _447 = _445 * _438;
    float _448 = _445 * _441;
    float _460 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _461 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _462 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _463 = (-0.0) - _392;
    float _465 = (-0.0) - _393;
    float _466 = (-0.0) - _394;
    float _472 = float(gl_LaunchIDEXT.x);
    float _473 = float(gl_LaunchIDEXT.y);
    float _476 = float(gl_LaunchSizeEXT.x);
    float _490 = fract(fract(sin(dot(vec2(_472 / _476, _473 / _60), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _503 = fract(fract(sin(dot(vec2((_472 + 128.0) / _476, (_473 + 128.0) / _60), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _52._m0 = 1u;
    uvec4 _514 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _515 = _514.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _515, _514.w, _515, vec3(_460, _461, _462), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _624;
    float _625;
    float _626;
    float _627;
    float _628;
    float _629;
    if (_52._m0 == 0u)
    {
        float _536 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_446, _447, _448));
        float _858 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
        float _539 = isnan(1.0) ? _858 : (isnan(_858) ? 1.0 : min(_858, 1.0));
        float _558 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[10u].z) * 0.949999988079071044921875);
        float _559 = _558 * _558;
        float _560 = g_sceneCB._m0[4u].x - _392;
        float _561 = g_sceneCB._m0[4u].y - _393;
        float _562 = g_sceneCB._m0[4u].z - _394;
        float _566 = inversesqrt(dot(vec3(_560, _561, _562), vec3(_560, _561, _562)));
        float _567 = _566 * _560;
        float _568 = _566 * _561;
        float _569 = _566 * _562;
        float _570 = dot(vec3(_446, _447, _448), vec3(g_sceneCB._m0[4u].xyz));
        float _869 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
        float _573 = isnan(1.0) ? _869 : (isnan(_869) ? 1.0 : min(_869, 1.0));
        float _574 = dot(vec3(_446, _447, _448), vec3(_463, _465, _466));
        float _880 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
        float _577 = isnan(1.0) ? _880 : (isnan(_880) ? 1.0 : min(_880, 1.0));
        float _578 = dot(vec3(_446, _447, _448), vec3(_567, _568, _569));
        float _891 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
        float _581 = isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0));
        float _582 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_567, _568, _569));
        float _902 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
        float _586 = _559 * _559;
        float _590 = ((_581 * _581) * (_586 + (-1.0))) + 1.0;
        float _602 = (exp2(log2(1.0 - (isnan(1.0) ? _902 : (isnan(_902) ? 1.0 : min(_902, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _604 = 1.0 - _559;
        float _615 = (0.5 / (((_577 * ((_573 * _604) + _559)) + 9.9999999392252902907785028219223e-09) + (((_577 * _604) + _559) * _573))) * _573;
        float _913 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
        float _617 = (isnan(1.0) ? _913 : (isnan(_913) ? 1.0 : min(_913, 1.0))) * (_586 / ((_590 * _590) * 3.141590118408203125));
        _624 = ((cbMtdParam._m0[9u].z * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _539;
        _625 = ((cbMtdParam._m0[9u].w * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _539;
        _626 = ((cbMtdParam._m0[10u].x * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _539;
        _627 = (_602 * g_sceneCB._m0[5u].x) * _617;
        _628 = (_602 * g_sceneCB._m0[5u].y) * _617;
        _629 = (_602 * g_sceneCB._m0[5u].z) * _617;
    }
    else
    {
        _624 = 0.0;
        _625 = 0.0;
        _626 = 0.0;
        _627 = 0.0;
        _628 = 0.0;
        _629 = 0.0;
    }
    bool _631 = abs(_447) < 0.89999997615814208984375;
    float _633 = float(_631);
    float _634 = _631 ? 0.0 : 1.0;
    float _637 = (_633 * _448) - (_634 * _447);
    float _638 = _634 * _446;
    float _640 = (-0.0) - (_446 * _633);
    float _644 = inversesqrt(dot(vec3(_637, _638, _640), vec3(_637, _638, _640)));
    float _645 = _637 * _644;
    float _646 = _638 * _644;
    float _647 = _644 * _640;
    float _650 = (_646 * _448) - (_647 * _447);
    float _653 = (_647 * _446) - (_645 * _448);
    float _656 = (_645 * _447) - (_646 * _446);
    float _658;
    float _666;
    float _657 = 0.0;
    uint _659 = 0u;
    float _663;
    bool _665;
    for (;;)
    {
        _663 = (float(_659) + _490) * 0.03125;
        _665 = _659 == 0u;
        float frontier_phi_20_pred;
        if (_665)
        {
            frontier_phi_20_pred = 0.0;
        }
        else
        {
            float _800;
            float _801;
            uint _803;
            _800 = 0.0;
            _801 = 0.5;
            _803 = _659;
            float _667;
            for (;;)
            {
                _667 = ((_803 & 1u) != 0u) ? (_801 + _800) : _800;
                uint _804 = _803 >> 1u;
                if (_804 == 0u)
                {
                    break;
                }
                else
                {
                    _800 = _667;
                    _801 *= 0.5;
                    _803 = _804;
                }
            }
            frontier_phi_20_pred = _667;
        }
        _666 = frontier_phi_20_pred;
        float _668 = _666 + _503;
        float _672 = sqrt(_663);
        float _673 = ((_668 > 1.0) ? (_668 + (-1.0)) : _668) * 6.283185482025146484375;
        float _676 = cos(_673) * _672;
        float _678 = sin(_673) * _672;
        float _680 = sqrt(1.0 - _663);
        float _693 = ((_680 * _446) + (_676 * _650)) + (_678 * _645);
        float _694 = ((_680 * _447) + (_676 * _653)) + (_678 * _646);
        float _695 = ((_680 * _448) + (_676 * _656)) + (_678 * _647);
        _51._m0 = 1u;
        uvec4 _699 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _700 = _699.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _700, _699.w, _700, vec3(_460, _461, _462), 9.9999997473787516355514526367188e-05, vec3(_693, _694, _695), 10000.0, 1);
        float _706 = dot(vec3(_446, _447, _448), vec3(_693, _694, _695));
        float _924 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
        float _709 = isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0));
        _658 = ((float(_51._m0 == 0u) * _709) / (_709 * 0.3183098733425140380859375)) + _657;
        uint _660 = _659 + 1u;
        if (_660 == 32u)
        {
            break;
        }
        else
        {
            _657 = _658;
            _659 = _660;
            continue;
        }
    }
    float _717 = _658 * 0.009947183541953563690185546875;
    float _722 = dot(vec3(_392, _393, _394), vec3(_446, _447, _448)) * 2.0;
    vec4 _736 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_392 - (_722 * _446), _393 - (_722 * _447), _394 - (_722 * _448)), 4.0 - (cbMtdParam._m0[10u].z * 4.0));
    float _741 = dot(vec3(_463, _465, _466), vec3(_446, _447, _448));
    float _935 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _750 = (exp2(log2(1.0 - (isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _756 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_446, _447, _448), 0.0);
    float _767 = (_627 + _624) + (((_756.x * cbMtdParam._m0[9u].z) + (_750 * _736.x)) * _717);
    float _771 = (_628 + _625) + (((_756.y * cbMtdParam._m0[9u].w) + (_750 * _736.y)) * _717);
    float _775 = (_629 + _626) + (((_756.z * cbMtdParam._m0[10u].x) + (_750 * _736.z)) * _717);
    float _946 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _957 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _968 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    bool _783 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _794;
    _794.x = _783 ? ((_327 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0)));
    _794.y = _783 ? ((_330 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0)));
    _794.z = _783 ? ((_333 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0)));
    payload._m0 = _794;
}


