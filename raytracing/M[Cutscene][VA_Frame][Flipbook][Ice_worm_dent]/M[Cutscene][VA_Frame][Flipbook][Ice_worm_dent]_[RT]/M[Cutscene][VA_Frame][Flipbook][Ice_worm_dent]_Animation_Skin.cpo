#version 460
#extension GL_EXT_samplerless_texture_functions : require
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;
layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;

void main()
{
    uvec4 _51 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _56 = (((_51.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_56 < _51.x)
    {
        uint _64 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _56;
        uint _65 = _64 >> 2u;
        uvec3 _75 = uvec3(texelFetch(l_geomAttrib_0, int(_65)).x, texelFetch(l_geomAttrib_0, int(_65 + 1u)).x, texelFetch(l_geomAttrib_0, int(_65 + 2u)).x);
        float _79 = uintBitsToFloat(_75.x);
        float _80 = uintBitsToFloat(_75.y);
        float _81 = uintBitsToFloat(_75.z);
        uint _84 = _64 + 20u;
        uint _114;
        uint _115;
        uint _116;
        uint _117;
        uint _118;
        if (_51.y == 0u)
        {
            uvec4 _87 = texelFetch(l_geomAttrib_0, int(_84 >> 2u));
            uint _88 = _87.x;
            _114 = _88 & 255u;
            _115 = (_88 >> 8u) & 255u;
            _116 = (_88 >> 16u) & 255u;
            _117 = _88 >> 24u;
            _118 = 24u;
        }
        else
        {
            uint _99 = _84 >> 2u;
            uvec2 _106 = uvec2(texelFetch(l_geomAttrib_0, int(_99)).x, texelFetch(l_geomAttrib_0, int(_99 + 1u)).x);
            uint _107 = _106.x;
            uint _108 = _106.y;
            _114 = _107 & 65535u;
            _115 = _107 >> 16u;
            _116 = _108 & 65535u;
            _117 = _108 >> 16u;
            _118 = 28u;
        }
        uvec4 _122 = texelFetch(l_geomAttrib_0, int((_118 + _64) >> 2u));
        uint _123 = _122.x;
        float _134 = float(_123 & 255u) * 0.0039215688593685626983642578125;
        float _136 = float((_123 >> 8u) & 255u) * 0.0039215688593685626983642578125;
        float _137 = float((_123 >> 16u) & 255u) * 0.0039215688593685626983642578125;
        float _138 = float(_123 >> 24u) * 0.0039215688593685626983642578125;
        uvec4 _145 = texelFetch(l_geomAttrib_0, int(((_64 + 4u) + (_118 | 32u)) >> 2u));
        uint _146 = _145.x;
        float _155 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
        float _468 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
        float _165 = _155 * (isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0)));
        float _171 = floor(_165);
        float _172 = _171 + 1.0;
        float _174 = fract(_165);
        uint _175 = uint(int((float(_146 & 255u) + 0.5) + (float((_146 >> 8u) & 255u) * 256.0)));
        vec4 _177 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_175, uint(int(_171)))), int(0u));
        float _179 = _177.x;
        float _180 = _177.y;
        float _181 = _177.z;
        vec4 _183 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_175, uint(int(isnan(_155) ? _172 : (isnan(_172) ? _155 : min(_172, _155)))))), int(0u));
        float _194 = dot(vec4(1.0), vec4(_134, _136, _137, _138));
        float _197 = isnan(_194) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _194 : max(0.001000000047497451305389404296875, _194));
        float _199 = _134 / _197;
        float _200 = _136 / _197;
        float _201 = _137 / _197;
        float _202 = _138 / _197;
        uint _203 = _114 * 3u;
        uint _210 = _203 + 1u;
        uint _217 = _203 + 2u;
        uint _236 = _115 * 3u;
        uint _243 = _236 + 1u;
        uint _250 = _236 + 2u;
        uint _278 = _116 * 3u;
        uint _285 = _278 + 1u;
        uint _292 = _278 + 2u;
        uint _320 = _117 * 3u;
        uint _327 = _320 + 1u;
        uint _334 = _320 + 2u;
        float _376 = (((((((_183.x - _179) * _174) + _179) + (cbObjMatrix._m0[_203].w * _199)) + (cbObjMatrix._m0[_236].w * _200)) + (cbObjMatrix._m0[_278].w * _201)) + (cbObjMatrix._m0[_320].w * _202)) + fma(_81, (((cbObjMatrix._m0[_236].z * _200) + (cbObjMatrix._m0[_203].z * _199)) + (cbObjMatrix._m0[_278].z * _201)) + (cbObjMatrix._m0[_320].z * _202), fma(_80, (((cbObjMatrix._m0[_236].y * _200) + (cbObjMatrix._m0[_203].y * _199)) + (cbObjMatrix._m0[_278].y * _201)) + (cbObjMatrix._m0[_320].y * _202), ((((cbObjMatrix._m0[_236].x * _200) + (cbObjMatrix._m0[_203].x * _199)) + (cbObjMatrix._m0[_278].x * _201)) + (cbObjMatrix._m0[_320].x * _202)) * _79));
        float _382 = (((((((_183.y - _180) * _174) + _180) + (cbObjMatrix._m0[_210].w * _199)) + (cbObjMatrix._m0[_243].w * _200)) + (cbObjMatrix._m0[_285].w * _201)) + (cbObjMatrix._m0[_327].w * _202)) + fma(_81, (((cbObjMatrix._m0[_243].z * _200) + (cbObjMatrix._m0[_210].z * _199)) + (cbObjMatrix._m0[_285].z * _201)) + (cbObjMatrix._m0[_327].z * _202), fma(_80, (((cbObjMatrix._m0[_243].y * _200) + (cbObjMatrix._m0[_210].y * _199)) + (cbObjMatrix._m0[_285].y * _201)) + (cbObjMatrix._m0[_327].y * _202), ((((cbObjMatrix._m0[_243].x * _200) + (cbObjMatrix._m0[_210].x * _199)) + (cbObjMatrix._m0[_285].x * _201)) + (cbObjMatrix._m0[_327].x * _202)) * _79));
        float _388 = (((((((_183.z - _181) * _174) + _181) + (cbObjMatrix._m0[_217].w * _199)) + (cbObjMatrix._m0[_250].w * _200)) + (cbObjMatrix._m0[_292].w * _201)) + (cbObjMatrix._m0[_334].w * _202)) + fma(_81, (((cbObjMatrix._m0[_250].z * _200) + (cbObjMatrix._m0[_217].z * _199)) + (cbObjMatrix._m0[_292].z * _201)) + (cbObjMatrix._m0[_334].z * _202), fma(_80, (((cbObjMatrix._m0[_250].y * _200) + (cbObjMatrix._m0[_217].y * _199)) + (cbObjMatrix._m0[_292].y * _201)) + (cbObjMatrix._m0[_334].y * _202), ((((cbObjMatrix._m0[_250].x * _200) + (cbObjMatrix._m0[_217].x * _199)) + (cbObjMatrix._m0[_292].x * _201)) + (cbObjMatrix._m0[_334].x * _202)) * _79));
        float _412 = fma(_388, CB_CS_ANIMATION._m0[5u].z, fma(_382, CB_CS_ANIMATION._m0[5u].y, CB_CS_ANIMATION._m0[5u].x * _376)) + CB_CS_ANIMATION._m0[5u].w;
        float _416 = fma(_388, CB_CS_ANIMATION._m0[6u].z, fma(_382, CB_CS_ANIMATION._m0[6u].y, CB_CS_ANIMATION._m0[6u].x * _376)) + CB_CS_ANIMATION._m0[6u].w;
        float _420 = fma(_388, CB_CS_ANIMATION._m0[7u].z, fma(_382, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _376)) + CB_CS_ANIMATION._m0[7u].w;
        if (_51.w == 0u)
        {
            uint _434 = _56 * 3u;
            imageStore(outPositionBuffer, int(_434), uvec4(uint(float(floatBitsToUint(_412)))));
            imageStore(outPositionBuffer, int(_434 + 1u), uvec4(uint(float(floatBitsToUint(_416)))));
            imageStore(outPositionBuffer, int(_434 + 2u), uvec4(uint(float(floatBitsToUint(_420)))));
        }
        else
        {
            uint _454 = _56 * 2u;
            imageStore(outPositionBuffer, int(_454), uvec4((packHalf2x16(vec2(_416, 0.0)) << 16u) | packHalf2x16(vec2(_412, 0.0))));
            imageStore(outPositionBuffer, int(_454 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_420, 0.0))));
        }
    }
}


