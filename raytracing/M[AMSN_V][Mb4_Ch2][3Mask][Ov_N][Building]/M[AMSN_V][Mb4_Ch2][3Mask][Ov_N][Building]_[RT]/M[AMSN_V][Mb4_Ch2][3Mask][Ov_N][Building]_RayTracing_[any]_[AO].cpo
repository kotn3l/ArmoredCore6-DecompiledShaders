#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _38
{
    uint _m0;
};

struct _42
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _38 payload;
hitAttributeEXT _42 hit;

uint _207;
uint _256;
uint _305;

void main()
{
    uint _48 = payload._m0;
    float _86 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _87 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _88 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _106 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _107 = _106.y;
    uint _147;
    uint _149;
    uint _150;
    if (_106.x == 0u)
    {
        uint _115 = (_107 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _124 = uvec3(texelFetch(l_geomIndexBuffer, int(_115)).x, texelFetch(l_geomIndexBuffer, int(_115 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_115 + 2u)).x);
        _147 = _124.x;
        _149 = _124.y;
        _150 = _124.z;
    }
    else
    {
        uint _128 = uint(gl_PrimitiveID) * 6u;
        uint _130 = _128 & 4294967292u;
        uint _133 = (_107 + _130) >> 2u;
        uvec2 _140 = uvec2(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x);
        uint _141 = _140.x;
        uint _142 = _140.y;
        uint _144 = _141 >> 16u;
        uint _145 = _142 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_130 == _128)
        {
            frontier_phi_3_2_ladder = _141 & 65535u;
            frontier_phi_3_2_ladder_1 = _144;
            frontier_phi_3_2_ladder_2 = _145;
        }
        else
        {
            frontier_phi_3_2_ladder = _144;
            frontier_phi_3_2_ladder_1 = _145;
            frontier_phi_3_2_ladder_2 = _142 >> 16u;
        }
        _147 = frontier_phi_3_2_ladder;
        _149 = frontier_phi_3_2_ladder_1;
        _150 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _154 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _155 = _154.x;
    uint _156 = _154.z;
    bool _157 = _156 != 0u;
    bool _159 = _106.w == 0u;
    bool _160 = _157 || _159;
    uint _162 = (_155 * _147) + 12u;
    uint _186;
    uint _187;
    uint _188;
    uint _189;
    if (_160)
    {
        uvec4 _165 = texelFetch(l_geomAttrib_0, int(_162 >> 2u));
        uint _166 = _165.x;
        _186 = _166 & 255u;
        _187 = (_166 >> 8u) & 255u;
        _188 = (_166 >> 16u) & 255u;
        _189 = 24u;
    }
    else
    {
        uint _174 = _162 >> 2u;
        uvec2 _180 = uvec2(texelFetch(l_geomAttrib_0, int(_174)).x, texelFetch(l_geomAttrib_0, int(_174 + 1u)).x);
        uint _181 = _180.x;
        _186 = _181 & 65535u;
        _187 = _181 >> 16u;
        _188 = _180.y & 65535u;
        _189 = 28u;
    }
    bool _195 = _156 == 0u;
    uint _196;
    if (_195)
    {
        _196 = _189;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_159)
        {
            frontier_phi_9_10_ladder = _189 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _189 + 8u;
        }
        _196 = frontier_phi_9_10_ladder;
    }
    uvec2 _211 = uvec2(_207, texelFetch(l_geomAttrib_0, int(((((_155 * _147) + 4u) + (_157 ? (_196 + 4u) : _196)) >> 2u) + 1u)).x);
    uint _212 = _211.y;
    float _216 = float(int(uint(int(_212 << 16u) >> int(16u))));
    float _217 = float(int(uint(int(_212) >> int(16u))));
    uint _219 = (_155 * _149) + 12u;
    uint _240;
    uint _241;
    uint _242;
    uint _243;
    if (_160)
    {
        uvec4 _221 = texelFetch(l_geomAttrib_0, int(_219 >> 2u));
        uint _222 = _221.x;
        _240 = _222 & 255u;
        _241 = (_222 >> 8u) & 255u;
        _242 = (_222 >> 16u) & 255u;
        _243 = 24u;
    }
    else
    {
        uint _228 = _219 >> 2u;
        uvec2 _234 = uvec2(texelFetch(l_geomAttrib_0, int(_228)).x, texelFetch(l_geomAttrib_0, int(_228 + 1u)).x);
        uint _235 = _234.x;
        _240 = _235 & 65535u;
        _241 = _235 >> 16u;
        _242 = _234.y & 65535u;
        _243 = 28u;
    }
    uint _247;
    if (_195)
    {
        _247 = _243;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_159)
        {
            frontier_phi_16_17_ladder = _243 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _243 + 8u;
        }
        _247 = frontier_phi_16_17_ladder;
    }
    uvec2 _260 = uvec2(_256, texelFetch(l_geomAttrib_0, int(((((_155 * _149) + 4u) + (_157 ? (_247 + 4u) : _247)) >> 2u) + 1u)).x);
    uint _261 = _260.y;
    float _265 = float(int(uint(int(_261 << 16u) >> int(16u))));
    float _266 = float(int(uint(int(_261) >> int(16u))));
    uint _268 = (_155 * _150) + 12u;
    uint _289;
    uint _290;
    uint _291;
    uint _292;
    if (_160)
    {
        uvec4 _270 = texelFetch(l_geomAttrib_0, int(_268 >> 2u));
        uint _271 = _270.x;
        _289 = _271 & 255u;
        _290 = (_271 >> 8u) & 255u;
        _291 = (_271 >> 16u) & 255u;
        _292 = 24u;
    }
    else
    {
        uint _277 = _268 >> 2u;
        uvec2 _283 = uvec2(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x);
        uint _284 = _283.x;
        _289 = _284 & 65535u;
        _290 = _284 >> 16u;
        _291 = _283.y & 65535u;
        _292 = 28u;
    }
    uint _296;
    if (_195)
    {
        _296 = _292;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_159)
        {
            frontier_phi_23_24_ladder = _292 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _292 + 8u;
        }
        _296 = frontier_phi_23_24_ladder;
    }
    uvec2 _309 = uvec2(_305, texelFetch(l_geomAttrib_0, int(((((_155 * _150) + 4u) + (_157 ? (_296 + 4u) : _296)) >> 2u) + 1u)).x);
    uint _310 = _309.y;
    float _314 = float(int(uint(int(_310 << 16u) >> int(16u))));
    float _315 = float(int(uint(int(_310) >> int(16u))));
    bool _317 = _106.z == 0u;
    float _353;
    float _354;
    float _355;
    if (_317)
    {
        uint _320 = _147 * 3u;
        uvec3 _329 = uvec3(texelFetch(l_geomPositionBuffer, int(_320)).x, texelFetch(l_geomPositionBuffer, int(_320 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_320 + 2u)).x);
        _353 = uintBitsToFloat(_329.x);
        _354 = uintBitsToFloat(_329.y);
        _355 = uintBitsToFloat(_329.z);
    }
    else
    {
        uint _337 = _147 * 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomPositionBuffer, int(_337)).x, texelFetch(l_geomPositionBuffer, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _353 = unpackHalf2x16(_344).x;
        _354 = unpackHalf2x16(_344 >> 16u).x;
        _355 = unpackHalf2x16(_343.y).x;
    }
    float _391;
    float _392;
    float _393;
    if (_317)
    {
        uint _358 = _149 * 3u;
        uvec3 _367 = uvec3(texelFetch(l_geomPositionBuffer, int(_358)).x, texelFetch(l_geomPositionBuffer, int(_358 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_358 + 2u)).x);
        _391 = uintBitsToFloat(_367.x);
        _392 = uintBitsToFloat(_367.y);
        _393 = uintBitsToFloat(_367.z);
    }
    else
    {
        uint _375 = _149 * 2u;
        uvec2 _381 = uvec2(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x);
        uint _382 = _381.x;
        _391 = unpackHalf2x16(_382).x;
        _392 = unpackHalf2x16(_382 >> 16u).x;
        _393 = unpackHalf2x16(_381.y).x;
    }
    float _429;
    float _430;
    float _431;
    if (_317)
    {
        uint _396 = _150 * 3u;
        uvec3 _405 = uvec3(texelFetch(l_geomPositionBuffer, int(_396)).x, texelFetch(l_geomPositionBuffer, int(_396 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_396 + 2u)).x);
        _429 = uintBitsToFloat(_405.x);
        _430 = uintBitsToFloat(_405.y);
        _431 = uintBitsToFloat(_405.z);
    }
    else
    {
        uint _413 = _150 * 2u;
        uvec2 _419 = uvec2(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x);
        uint _420 = _419.x;
        _429 = unpackHalf2x16(_420).x;
        _430 = unpackHalf2x16(_420 >> 16u).x;
        _431 = unpackHalf2x16(_419.y).x;
    }
    float _434 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = _391 - _353;
    float _467 = _392 - _354;
    float _468 = _393 - _355;
    float _471 = fma(_468, gl_ObjectToWorldEXT[2u].x, fma(_467, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _466));
    float _474 = fma(_468, gl_ObjectToWorldEXT[2u].y, fma(_467, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _466));
    float _477 = fma(_468, gl_ObjectToWorldEXT[2u].z, fma(_467, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _466));
    float _478 = _429 - _353;
    float _479 = _430 - _354;
    float _480 = _431 - _355;
    float _483 = fma(_480, gl_ObjectToWorldEXT[2u].x, fma(_479, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _478));
    float _486 = fma(_480, gl_ObjectToWorldEXT[2u].y, fma(_479, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _478));
    float _489 = fma(_480, gl_ObjectToWorldEXT[2u].z, fma(_479, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _478));
    uvec2 _504 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, int(0u)));
    float _591;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _547 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _553 = (_489 * _474) - (_486 * _477);
        float _556 = (_483 * _477) - (_489 * _471);
        float _559 = (_486 * _471) - (_483 * _474);
        float _586 = log2(abs(sqrt(((_87 * _87) + (_86 * _86)) + (_88 * _88)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))))) / abs(dot(vec3(_547 * gl_WorldRayDirectionEXT.x, _547 * gl_WorldRayDirectionEXT.y, _547 * gl_WorldRayDirectionEXT.z), vec3(((((float(_186) * _434) + (-127.0)) + (float(_240) * hit._m0.x)) + (float(_289) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_187) * _434) + (-127.0)) + (float(_241) * hit._m0.x)) + (float(_290) * hit._m0.y)) * 0.0078740157186985015869140625, ((((float(_188) * _434) + (-127.0)) + (float(_242) * hit._m0.x)) + (float(_291) * hit._m0.y)) * 0.0078740157186985015869140625))));
        float _588 = ((log2((((float(_504.y) * 0.5) * float(_504.x)) * abs((((_315 - _217) * (_265 - _216)) - ((_314 - _216) * (_266 - _217))) * 2.384185791015625e-07)) / (sqrt(((_556 * _556) + (_559 * _559)) + (_553 * _553)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + _586;
        _591 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    }
    else
    {
        _591 = 0.0;
    }
    if (textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_265 * hit._m0.x) + (_216 * _434)) + (_314 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_266 * hit._m0.x) + (_217 * _434)) + (_315 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _591).w < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _48;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _48;
        return;
    }
}


