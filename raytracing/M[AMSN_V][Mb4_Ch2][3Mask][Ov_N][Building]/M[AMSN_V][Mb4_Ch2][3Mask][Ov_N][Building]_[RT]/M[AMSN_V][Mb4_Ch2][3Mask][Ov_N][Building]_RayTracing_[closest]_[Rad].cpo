#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _3003;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    uint _237 = _188 + 4u;
    uvec4 _241 = texelFetch(l_geomAttrib_0, int((_237 + _216) >> 2u));
    uint _242 = _241.x;
    uint _251 = _216 | 8u;
    bool _252 = _183 == 0u;
    uint _253;
    if (_252)
    {
        _253 = _251;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _251 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _251 + 8u;
        }
        _253 = frontier_phi_9_10_ladder;
    }
    uint _257 = _184 ? (_253 + 4u) : _253;
    uint _259 = (_237 + _257) >> 2u;
    uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
    uint _266 = _265.x;
    uint _267 = _265.y;
    float _271 = float(int(uint(int(_266 << 16u) >> int(16u))));
    float _272 = float(int(uint(int(_266) >> int(16u))));
    float _276 = float(int(uint(int(_267 << 16u) >> int(16u))));
    float _277 = float(int(uint(int(_267) >> int(16u))));
    uvec4 _281 = texelFetch(l_geomAttrib_0, int(((_188 + 12u) + _257) >> 2u));
    uint _282 = _281.x;
    uvec4 _291 = texelFetch(l_geomAttrib_0, int(((_188 + 16u) + _257) >> 2u));
    uint _292 = _291.x;
    uint _301 = _182 * _176;
    uint _302 = _301 + 12u;
    uint _323;
    uint _324;
    uint _325;
    uint _326;
    if (_187)
    {
        uvec4 _304 = texelFetch(l_geomAttrib_0, int(_302 >> 2u));
        uint _305 = _304.x;
        _323 = _305 & 255u;
        _324 = (_305 >> 8u) & 255u;
        _325 = (_305 >> 16u) & 255u;
        _326 = 16u;
    }
    else
    {
        uint _311 = _302 >> 2u;
        uvec2 _317 = uvec2(texelFetch(l_geomAttrib_0, int(_311)).x, texelFetch(l_geomAttrib_0, int(_311 + 1u)).x);
        uint _318 = _317.x;
        _323 = _318 & 65535u;
        _324 = _318 >> 16u;
        _325 = _317.y & 65535u;
        _326 = 20u;
    }
    uvec4 _332 = texelFetch(l_geomAttrib_0, int((_326 + _301) >> 2u));
    uint _333 = _332.x;
    uint _344 = _301 + 4u;
    uvec4 _347 = texelFetch(l_geomAttrib_0, int((_344 + _326) >> 2u));
    uint _348 = _347.x;
    uint _357 = _326 | 8u;
    uint _358;
    if (_252)
    {
        _358 = _357;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _357 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _357 + 8u;
        }
        _358 = frontier_phi_16_17_ladder;
    }
    uint _362 = _184 ? (_358 + 4u) : _358;
    uint _364 = (_344 + _362) >> 2u;
    uvec2 _370 = uvec2(texelFetch(l_geomAttrib_0, int(_364)).x, texelFetch(l_geomAttrib_0, int(_364 + 1u)).x);
    uint _371 = _370.x;
    uint _372 = _370.y;
    float _376 = float(int(uint(int(_371 << 16u) >> int(16u))));
    float _377 = float(int(uint(int(_371) >> int(16u))));
    float _381 = float(int(uint(int(_372 << 16u) >> int(16u))));
    float _382 = float(int(uint(int(_372) >> int(16u))));
    uvec4 _386 = texelFetch(l_geomAttrib_0, int(((_301 + 12u) + _362) >> 2u));
    uint _387 = _386.x;
    uvec4 _396 = texelFetch(l_geomAttrib_0, int(((_301 + 16u) + _362) >> 2u));
    uint _397 = _396.x;
    uint _406 = _182 * _177;
    uint _407 = _406 + 12u;
    uint _428;
    uint _429;
    uint _430;
    uint _431;
    if (_187)
    {
        uvec4 _409 = texelFetch(l_geomAttrib_0, int(_407 >> 2u));
        uint _410 = _409.x;
        _428 = _410 & 255u;
        _429 = (_410 >> 8u) & 255u;
        _430 = (_410 >> 16u) & 255u;
        _431 = 16u;
    }
    else
    {
        uint _416 = _407 >> 2u;
        uvec2 _422 = uvec2(texelFetch(l_geomAttrib_0, int(_416)).x, texelFetch(l_geomAttrib_0, int(_416 + 1u)).x);
        uint _423 = _422.x;
        _428 = _423 & 65535u;
        _429 = _423 >> 16u;
        _430 = _422.y & 65535u;
        _431 = 20u;
    }
    uvec4 _437 = texelFetch(l_geomAttrib_0, int((_431 + _406) >> 2u));
    uint _438 = _437.x;
    uint _449 = _406 + 4u;
    uvec4 _452 = texelFetch(l_geomAttrib_0, int((_449 + _431) >> 2u));
    uint _453 = _452.x;
    uint _462 = _431 | 8u;
    uint _463;
    if (_252)
    {
        _463 = _462;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _462 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _462 + 8u;
        }
        _463 = frontier_phi_23_24_ladder;
    }
    uint _467 = _184 ? (_463 + 4u) : _463;
    uint _469 = (_449 + _467) >> 2u;
    uvec2 _475 = uvec2(texelFetch(l_geomAttrib_0, int(_469)).x, texelFetch(l_geomAttrib_0, int(_469 + 1u)).x);
    uint _476 = _475.x;
    uint _477 = _475.y;
    float _481 = float(int(uint(int(_476 << 16u) >> int(16u))));
    float _482 = float(int(uint(int(_476) >> int(16u))));
    float _486 = float(int(uint(int(_477 << 16u) >> int(16u))));
    float _487 = float(int(uint(int(_477) >> int(16u))));
    uvec4 _491 = texelFetch(l_geomAttrib_0, int(((_406 + 12u) + _467) >> 2u));
    uint _492 = _491.x;
    uvec4 _501 = texelFetch(l_geomAttrib_0, int(((_406 + 16u) + _467) >> 2u));
    uint _502 = _501.x;
    bool _512 = _133.z == 0u;
    float _548;
    float _549;
    float _550;
    if (_512)
    {
        uint _515 = _174 * 3u;
        uvec3 _524 = uvec3(texelFetch(l_geomPositionBuffer, int(_515)).x, texelFetch(l_geomPositionBuffer, int(_515 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_515 + 2u)).x);
        _548 = uintBitsToFloat(_524.x);
        _549 = uintBitsToFloat(_524.y);
        _550 = uintBitsToFloat(_524.z);
    }
    else
    {
        uint _532 = _174 * 2u;
        uvec2 _538 = uvec2(texelFetch(l_geomPositionBuffer, int(_532)).x, texelFetch(l_geomPositionBuffer, int(_532 + 1u)).x);
        uint _539 = _538.x;
        _548 = unpackHalf2x16(_539).x;
        _549 = unpackHalf2x16(_539 >> 16u).x;
        _550 = unpackHalf2x16(_538.y).x;
    }
    float _586;
    float _587;
    float _588;
    if (_512)
    {
        uint _553 = _176 * 3u;
        uvec3 _562 = uvec3(texelFetch(l_geomPositionBuffer, int(_553)).x, texelFetch(l_geomPositionBuffer, int(_553 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_553 + 2u)).x);
        _586 = uintBitsToFloat(_562.x);
        _587 = uintBitsToFloat(_562.y);
        _588 = uintBitsToFloat(_562.z);
    }
    else
    {
        uint _570 = _176 * 2u;
        uvec2 _576 = uvec2(texelFetch(l_geomPositionBuffer, int(_570)).x, texelFetch(l_geomPositionBuffer, int(_570 + 1u)).x);
        uint _577 = _576.x;
        _586 = unpackHalf2x16(_577).x;
        _587 = unpackHalf2x16(_577 >> 16u).x;
        _588 = unpackHalf2x16(_576.y).x;
    }
    float _624;
    float _625;
    float _626;
    if (_512)
    {
        uint _591 = _177 * 3u;
        uvec3 _600 = uvec3(texelFetch(l_geomPositionBuffer, int(_591)).x, texelFetch(l_geomPositionBuffer, int(_591 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_591 + 2u)).x);
        _624 = uintBitsToFloat(_600.x);
        _625 = uintBitsToFloat(_600.y);
        _626 = uintBitsToFloat(_600.z);
    }
    else
    {
        uint _608 = _177 * 2u;
        uvec2 _614 = uvec2(texelFetch(l_geomPositionBuffer, int(_608)).x, texelFetch(l_geomPositionBuffer, int(_608 + 1u)).x);
        uint _615 = _614.x;
        _624 = unpackHalf2x16(_615).x;
        _625 = unpackHalf2x16(_615 >> 16u).x;
        _626 = unpackHalf2x16(_614.y).x;
    }
    float _629 = (1.0 - hit._m0.x) - hit._m0.y;
    float _688 = (((float(_387 & 255u) * hit._m0.x) + (float(_282 & 255u) * _629)) + (float(_492 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _692 = (((float((_387 >> 8u) & 255u) * hit._m0.x) + (float((_282 >> 8u) & 255u) * _629)) + (float((_492 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _704 = (((float(_397 & 255u) * hit._m0.x) + (float(_292 & 255u) * _629)) + (float(_502 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _707 = (((float((_397 >> 8u) & 255u) * hit._m0.x) + (float((_292 >> 8u) & 255u) * _629)) + (float((_502 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _710 = (((float((_397 >> 16u) & 255u) * hit._m0.x) + (float((_292 >> 16u) & 255u) * _629)) + (float((_502 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _713 = (_376 - _271) * 0.00048828125;
    float _715 = (_377 - _272) * 0.00048828125;
    float _718 = (_481 - _271) * 0.00048828125;
    float _719 = (_482 - _272) * 0.00048828125;
    float _722 = (_381 - _276) * 0.00048828125;
    float _723 = (_382 - _277) * 0.00048828125;
    float _726 = (_486 - _276) * 0.00048828125;
    float _727 = (_487 - _277) * 0.00048828125;
    float _749 = _586 - _548;
    float _750 = _587 - _549;
    float _751 = _588 - _550;
    float _754 = fma(_751, gl_ObjectToWorldEXT[2u].x, fma(_750, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _749));
    float _757 = fma(_751, gl_ObjectToWorldEXT[2u].y, fma(_750, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _749));
    float _760 = fma(_751, gl_ObjectToWorldEXT[2u].z, fma(_750, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _749));
    float _761 = _624 - _548;
    float _762 = _625 - _549;
    float _763 = _626 - _550;
    float _766 = fma(_763, gl_ObjectToWorldEXT[2u].x, fma(_762, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _761));
    float _769 = fma(_763, gl_ObjectToWorldEXT[2u].y, fma(_762, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _761));
    float _772 = fma(_763, gl_ObjectToWorldEXT[2u].z, fma(_762, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _761));
    float _773 = (((_376 * hit._m0.x) + (_271 * _629)) + (_481 * hit._m0.y)) * 0.00048828125;
    float _774 = (((_377 * hit._m0.x) + (_272 * _629)) + (_482 * hit._m0.y)) * 0.00048828125;
    float _775 = (((_381 * hit._m0.x) + (_276 * _629)) + (_486 * hit._m0.y)) * 0.00048828125;
    float _776 = (((_382 * hit._m0.x) + (_277 * _629)) + (_487 * hit._m0.y)) * 0.00048828125;
    float _780 = (((float(_213) * _629) + (-127.0)) + (float(_323) * hit._m0.x)) + (float(_428) * hit._m0.y);
    float _783 = (((float(_214) * _629) + (-127.0)) + (float(_324) * hit._m0.x)) + (float(_429) * hit._m0.y);
    float _786 = (((float(_215) * _629) + (-127.0)) + (float(_325) * hit._m0.x)) + (float(_430) * hit._m0.y);
    float _787 = _780 * 0.0078740157186985015869140625;
    float _789 = _783 * 0.0078740157186985015869140625;
    float _790 = _786 * 0.0078740157186985015869140625;
    float _803 = ((((float(_225 & 255u) * _629) + (-127.0)) + (float(_333 & 255u) * hit._m0.x)) + (float(_438 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _804 = ((((float((_225 >> 8u) & 255u) * _629) + (-127.0)) + (float((_333 >> 8u) & 255u) * hit._m0.x)) + (float((_438 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _805 = ((((float((_225 >> 16u) & 255u) * _629) + (-127.0)) + (float((_333 >> 16u) & 255u) * hit._m0.x)) + (float((_438 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _806 = ((((float(_225 >> 24u) * _629) + (-127.0)) + (float(_333 >> 24u) * hit._m0.x)) + (float(_438 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _816 = ((((float(_242 & 255u) * _629) + (-127.0)) + (float(_348 & 255u) * hit._m0.x)) + (float(_453 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _817 = ((((float((_242 >> 8u) & 255u) * _629) + (-127.0)) + (float((_348 >> 8u) & 255u) * hit._m0.x)) + (float((_453 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _818 = ((((float((_242 >> 16u) & 255u) * _629) + (-127.0)) + (float((_348 >> 16u) & 255u) * hit._m0.x)) + (float((_453 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _828 = ((_804 * _790) - (_805 * _789)) * _806;
    float _829 = ((_805 * _787) - (_803 * _790)) * _806;
    float _830 = ((_803 * _789) - (_804 * _787)) * _806;
    float _834 = inversesqrt(dot(vec3(_828, _829, _830), vec3(_828, _829, _830)));
    float _835 = _834 * _828;
    float _836 = _834 * _829;
    float _837 = _834 * _830;
    uvec2 _855 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0, int(0u)));
    bool _860 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _913;
    if (_860)
    {
        float _871 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _877 = (_772 * _757) - (_769 * _760);
        float _880 = (_766 * _760) - (_772 * _754);
        float _883 = (_769 * _754) - (_766 * _757);
        float _910 = ((log2((((float(_855.y) * 0.5) * float(_855.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_880 * _880) + (_883 * _883)) + (_877 * _877)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_871 * gl_WorldRayDirectionEXT.x, _871 * gl_WorldRayDirectionEXT.y, _871 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _913 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    }
    else
    {
        _913 = 0.0;
    }
    vec4 _917 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _773) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _774) + cbTextureTilingScale._m0[1u].w), _913);
    float _927 = 1.0 - ((1.0 - _917.z) * 1.39999997615814208984375);
    float _3112 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _928 = isnan(1.0) ? _3112 : (isnan(_3112) ? 1.0 : min(_3112, 1.0));
    float _930 = 1.0 - ((1.0 - _917.x) * 1.39999997615814208984375);
    float _3123 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _931 = isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0));
    float _933 = 1.0 - ((1.0 - _917.y) * 1.39999997615814208984375);
    float _3134 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _934 = isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0));
    float _936 = (_931 + _928) + _934;
    float _943 = (_936 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _944 = (_936 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _945 = (_936 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    uvec2 _970 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4, int(0u)));
    float _1021;
    if (_860)
    {
        float _981 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _987 = (_772 * _757) - (_769 * _760);
        float _990 = (_766 * _760) - (_772 * _754);
        float _993 = (_769 * _754) - (_766 * _757);
        float _1019 = ((log2((((float(_970.y) * 0.5) * float(_970.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_990 * _990) + (_993 * _993)) + (_987 * _987)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_981 * gl_WorldRayDirectionEXT.x, _981 * gl_WorldRayDirectionEXT.y, _981 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1021 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    }
    else
    {
        _1021 = 0.0;
    }
    vec4 _1023 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _773) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _774) + cbTextureTilingScale._m0[10u].w), _1021);
    float _1032 = 1.0 - ((1.0 - _1023.x) * 1.39999997615814208984375);
    float _3150 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _1033 = isnan(1.0) ? _3150 : (isnan(_3150) ? 1.0 : min(_3150, 1.0));
    float _1043 = (_1033 * ((cbMtdParam._m0[9u].x - _943) + ((1.0 - cbMtdParam._m0[9u].x) * _936))) + _943;
    float _1044 = (_1033 * ((cbMtdParam._m0[9u].y - _944) + ((1.0 - cbMtdParam._m0[9u].y) * _936))) + _944;
    float _1045 = (_1033 * ((cbMtdParam._m0[9u].z - _945) + ((1.0 - cbMtdParam._m0[9u].z) * _936))) + _945;
    float _1059 = 1.0 - ((1.0 - _1023.y) * 1.39999997615814208984375);
    float _3161 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _1060 = isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0));
    float _1070 = (((cbMtdParam._m0[17u].x - _1043) + ((1.0 - cbMtdParam._m0[17u].x) * _936)) * _1060) + _1043;
    float _1071 = (((cbMtdParam._m0[17u].y - _1044) + ((1.0 - cbMtdParam._m0[17u].y) * _936)) * _1060) + _1044;
    float _1072 = (((cbMtdParam._m0[17u].z - _1045) + ((1.0 - cbMtdParam._m0[17u].z) * _936)) * _1060) + _1045;
    float _1086 = 1.0 - ((1.0 - _1023.z) * 1.39999997615814208984375);
    float _3172 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1087 = isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0));
    uvec2 _1115 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3, int(0u)));
    float _1166;
    if (_860)
    {
        float _1126 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1132 = (_772 * _757) - (_769 * _760);
        float _1135 = (_766 * _760) - (_772 * _754);
        float _1138 = (_769 * _754) - (_766 * _757);
        float _1164 = ((log2((((float(_1115.y) * 0.5) * float(_1115.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1135 * _1135) + (_1138 * _1138)) + (_1132 * _1132)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1126 * gl_WorldRayDirectionEXT.x, _1126 * gl_WorldRayDirectionEXT.y, _1126 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1166 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
    }
    else
    {
        _1166 = 0.0;
    }
    float _1171 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _775) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _776) + cbTextureTilingScale._m0[9u].w), _1166).x * cbMtdParam._m0[23u].w;
    float _1186 = ((cbMtdParam._m0[21u].z * (-1.39999997615814208984375)) * ((_692 - _1171) + (cbMtdParam._m0[22u].y * _692))) + 1.0;
    float _3188 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
    float _1188 = 1.0 - (isnan(1.0) ? _3188 : (isnan(_3188) ? 1.0 : min(_3188, 1.0)));
    float _1196 = ((cbMtdParam._m0[21u].y * (-1.39999997615814208984375)) * ((_688 - _1171) + (cbMtdParam._m0[22u].z * _688))) + 1.0;
    float _3199 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1198 = 1.0 - (isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0)));
    uvec2 _1215 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13, int(0u)));
    float _1266;
    if (_860)
    {
        float _1226 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1232 = (_772 * _757) - (_769 * _760);
        float _1235 = (_766 * _760) - (_772 * _754);
        float _1238 = (_769 * _754) - (_766 * _757);
        float _1264 = ((log2((((float(_1215.y) * 0.5) * float(_1215.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1235 * _1235) + (_1238 * _1238)) + (_1232 * _1232)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1226 * gl_WorldRayDirectionEXT.x, _1226 * gl_WorldRayDirectionEXT.y, _1226 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1266 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
    }
    else
    {
        _1266 = 0.0;
    }
    vec4 _1269 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _775) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _776) + cbTextureTilingScale._m0[4u].w), _1266);
    float _1271 = _1269.x;
    float _1272 = _1269.y;
    float _1273 = _1269.z;
    float _1274 = cbMtdParam._m0[10u].x * _1198;
    float _1276 = cbMtdParam._m0[10u].y * _1198;
    float _1278 = cbMtdParam._m0[10u].z * _1198;
    float _1294 = ((_1271 * (cbMtdParam._m0[16u].x - _1274)) * _1188) + (_1274 * _1271);
    float _1295 = ((_1272 * (cbMtdParam._m0[16u].y - _1276)) * _1188) + (_1276 * _1272);
    float _1296 = ((_1273 * (cbMtdParam._m0[16u].z - _1278)) * _1188) + (_1278 * _1273);
    float _1317 = cbMtdParam._m0[22u].x * (-1.39999997615814208984375);
    float _1321 = (_1317 * ((_704 - _1171) + (cbMtdParam._m0[21u].x * _704))) + 1.0;
    float _1322 = (_1317 * ((_707 - _1171) + (cbMtdParam._m0[21u].x * _707))) + 1.0;
    float _1323 = (_1317 * ((_710 - _1171) + (cbMtdParam._m0[21u].x * _710))) + 1.0;
    float _3215 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
    float _3226 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
    float _3237 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
    float _1332 = (1.0 - cbMtdParam._m0[23u].y) + _931;
    float _1335 = _1332 * (1.0 - (isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0))));
    float _1336 = _1332 * (1.0 - (isnan(1.0) ? _3226 : (isnan(_3226) ? 1.0 : min(_3226, 1.0))));
    float _1337 = ((_931 + 1.0) - cbMtdParam._m0[23u].y) * (1.0 - (isnan(1.0) ? _3237 : (isnan(_3237) ? 1.0 : min(_3237, 1.0))));
    float _1347 = _1198 + _1188;
    float _1348 = _1347 + _1335;
    float _1349 = _1347 + _1336;
    float _1350 = _1347 + _1337;
    float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
    float _1352 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
    float _1353 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
    float _1354 = isnan(1.0) ? _1351 : (isnan(_1351) ? 1.0 : min(_1351, 1.0));
    float _1355 = isnan(1.0) ? _1352 : (isnan(_1352) ? 1.0 : min(_1352, 1.0));
    float _1356 = isnan(1.0) ? _1353 : (isnan(_1353) ? 1.0 : min(_1353, 1.0));
    uvec2 _1373 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, int(0u)));
    float _1424;
    if (_860)
    {
        float _1384 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1390 = (_772 * _757) - (_769 * _760);
        float _1393 = (_766 * _760) - (_772 * _754);
        float _1396 = (_769 * _754) - (_766 * _757);
        float _1422 = ((log2((((float(_1373.y) * 0.5) * float(_1373.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1393 * _1393) + (_1396 * _1396)) + (_1390 * _1390)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1384 * gl_WorldRayDirectionEXT.x, _1384 * gl_WorldRayDirectionEXT.y, _1384 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1424 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    }
    else
    {
        _1424 = 0.0;
    }
    vec4 _1426 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _775) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _776) + cbTextureTilingScale._m0[0u].w), _1424);
    float _1431 = _1426.x * cbMtdParam._m0[12u].x;
    float _1432 = _1426.y * cbMtdParam._m0[12u].y;
    float _1433 = _1426.z * cbMtdParam._m0[12u].z;
    uvec2 _1451 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2, int(0u)));
    float _1502;
    if (_860)
    {
        float _1462 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1468 = (_772 * _757) - (_769 * _760);
        float _1471 = (_766 * _760) - (_772 * _754);
        float _1474 = (_769 * _754) - (_766 * _757);
        float _1500 = ((log2((((float(_1451.y) * 0.5) * float(_1451.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1471 * _1471) + (_1474 * _1474)) + (_1468 * _1468)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1462 * gl_WorldRayDirectionEXT.x, _1462 * gl_WorldRayDirectionEXT.y, _1462 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1502 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
    }
    else
    {
        _1502 = 0.0;
    }
    vec4 _1504 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _775) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _776) + cbTextureTilingScale._m0[8u].w), _1502);
    float _1518 = (((_1504.x * cbMtdParam._m0[13u].x) - _1431) * _931) + _1431;
    float _1519 = (((_1504.y * cbMtdParam._m0[13u].y) - _1432) * _931) + _1432;
    float _1520 = (((_1504.z * cbMtdParam._m0[13u].z) - _1433) * _931) + _1433;
    uvec2 _1538 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8, int(0u)));
    float _1589;
    if (_860)
    {
        float _1549 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1555 = (_772 * _757) - (_769 * _760);
        float _1558 = (_766 * _760) - (_772 * _754);
        float _1561 = (_769 * _754) - (_766 * _757);
        float _1587 = ((log2((((float(_1538.y) * 0.5) * float(_1538.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1558 * _1558) + (_1561 * _1561)) + (_1555 * _1555)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1549 * gl_WorldRayDirectionEXT.x, _1549 * gl_WorldRayDirectionEXT.y, _1549 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1589 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
    }
    else
    {
        _1589 = 0.0;
    }
    vec4 _1591 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _775) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _776) + cbTextureTilingScale._m0[14u].w), _1589);
    float _1605 = (((_1591.x * cbMtdParam._m0[14u].x) - _1518) * _934) + _1518;
    float _1606 = (((_1591.y * cbMtdParam._m0[14u].y) - _1519) * _934) + _1519;
    float _1607 = (((_1591.z * cbMtdParam._m0[14u].z) - _1520) * _934) + _1520;
    uvec2 _1625 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11, int(0u)));
    float _1676;
    if (_860)
    {
        float _1636 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1642 = (_772 * _757) - (_769 * _760);
        float _1645 = (_766 * _760) - (_772 * _754);
        float _1648 = (_769 * _754) - (_766 * _757);
        float _1674 = ((log2((((float(_1625.y) * 0.5) * float(_1625.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1645 * _1645) + (_1648 * _1648)) + (_1642 * _1642)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1636 * gl_WorldRayDirectionEXT.x, _1636 * gl_WorldRayDirectionEXT.y, _1636 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1676 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
    }
    else
    {
        _1676 = 0.0;
    }
    vec4 _1678 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _775) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _776) + cbTextureTilingScale._m0[2u].w), _1676);
    float _1692 = (((_1678.x * cbMtdParam._m0[15u].x) - _1605) * _928) + _1605;
    float _1693 = (((_1678.y * cbMtdParam._m0[15u].y) - _1606) * _928) + _1606;
    float _1694 = (((_1678.z * cbMtdParam._m0[15u].z) - _1607) * _928) + _1607;
    float _1714 = ((_1692 - (_1692 * _1354)) + (((_1354 * 4.55000019073486328125) * ((_1335 * ((cbMtdParam._m0[11u].x * _1271) - _1294)) + _1294)) * _1692)) * ((((cbMtdParam._m0[18u].x - _1070) + ((1.0 - cbMtdParam._m0[18u].x) * _936)) * _1087) + _1070);
    float _1715 = ((_1693 - (_1693 * _1355)) + (((_1355 * 4.55000019073486328125) * ((_1336 * ((cbMtdParam._m0[11u].y * _1272) - _1295)) + _1295)) * _1693)) * ((((cbMtdParam._m0[18u].y - _1071) + ((1.0 - cbMtdParam._m0[18u].y) * _936)) * _1087) + _1071);
    float _1716 = ((_1694 - (_1356 * _1694)) + (((_1356 * 4.55000019073486328125) * ((_1337 * ((cbMtdParam._m0[11u].z * _1273) - _1296)) + _1296)) * _1694)) * ((((cbMtdParam._m0[18u].z - _1072) + ((1.0 - cbMtdParam._m0[18u].z) * _936)) * _1087) + _1072);
    float _1728 = ((cbMtdParam._m0[20u].w - cbMtdParam._m0[24u].x) * _1354) + cbMtdParam._m0[24u].x;
    float _1731 = ((cbMtdParam._m0[20u].x - _1728) * _931) + _1728;
    float _1734 = ((cbMtdParam._m0[20u].y - _1731) * _934) + _1731;
    float _1737 = ((cbMtdParam._m0[20u].z - _1734) * _928) + _1734;
    uvec2 _1749 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9, int(0u)));
    float _1800;
    if (_860)
    {
        float _1760 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1766 = (_772 * _757) - (_769 * _760);
        float _1769 = (_766 * _760) - (_772 * _754);
        float _1772 = (_769 * _754) - (_766 * _757);
        float _1798 = ((log2((((float(_1749.y) * 0.5) * float(_1749.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1769 * _1769) + (_1772 * _1772)) + (_1766 * _1766)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1760 * gl_WorldRayDirectionEXT.x, _1760 * gl_WorldRayDirectionEXT.y, _1760 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1800 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
    }
    else
    {
        _1800 = 0.0;
    }
    vec4 _1803 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _775) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _776) + cbTextureTilingScale._m0[15u].w), _1800);
    float _1807 = _1803.z;
    float _1810 = (_1803.x * 2.0) + (-1.0);
    float _1812 = (_1803.y * 2.0) + (-1.0);
    float _1813 = dot(vec2(_1810, _1812), vec2(_1810, _1812));
    float _3303 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
    float _1818 = sqrt(1.0 - (isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0))));
    float _1820 = fma(_1818, _787, fma(_1812, _816, 0.0));
    float _1822 = fma(_1818, _789, fma(_1812, _817, 0.0));
    float _1824 = fma(_1818, _790, fma(_1812, _818, 0.0));
    float _1828 = inversesqrt(dot(vec3(_1820, _1822, _1824), vec3(_1820, _1822, _1824)));
    float _1829 = _1828 * _1820;
    float _1830 = _1828 * _1822;
    float _1831 = _1828 * _1824;
    uvec2 _1844 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14, int(0u)));
    float _1895;
    if (_860)
    {
        float _1855 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1861 = (_772 * _757) - (_769 * _760);
        float _1864 = (_766 * _760) - (_772 * _754);
        float _1867 = (_769 * _754) - (_766 * _757);
        float _1893 = ((log2((((float(_1844.y) * 0.5) * float(_1844.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1864 * _1864) + (_1867 * _1867)) + (_1861 * _1861)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1855 * gl_WorldRayDirectionEXT.x, _1855 * gl_WorldRayDirectionEXT.y, _1855 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1895 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
    }
    else
    {
        _1895 = 0.0;
    }
    vec4 _1897 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _775) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _776) + cbTextureTilingScale._m0[5u].w), _1895);
    float _1903 = (_1897.x * 2.0) + (-1.0);
    float _1904 = (_1897.y * 2.0) + (-1.0);
    float _1905 = dot(vec2(_1903, _1904), vec2(_1903, _1904));
    float _3319 = isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0));
    float _1910 = sqrt(1.0 - (isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0))));
    float _1912 = fma(_1910, _787, fma(_1904, _816, 0.0));
    float _1914 = fma(_1910, _789, fma(_1904, _817, 0.0));
    float _1916 = fma(_1910, _790, fma(_1904, _818, 0.0));
    float _1920 = inversesqrt(dot(vec3(_1912, _1914, _1916), vec3(_1912, _1914, _1916)));
    float _1921 = _1920 * _1912;
    float _1922 = _1920 * _1914;
    float _1923 = _1920 * _1916;
    float _1926 = fma(_1923, _837, fma(_1922, _836, _1921 * _835));
    float _1929 = fma(_1923, _805, fma(_1922, _804, _1921 * _803));
    float _1932 = fma(_1923, _790, fma(_1922, _789, _1921 * _787));
    float _1936 = inversesqrt(dot(vec3(_1926, _1929, _1932), vec3(_1926, _1929, _1932)));
    uvec2 _1949 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12, int(0u)));
    float _2000;
    if (_860)
    {
        float _1960 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1966 = (_772 * _757) - (_769 * _760);
        float _1969 = (_766 * _760) - (_772 * _754);
        float _1972 = (_769 * _754) - (_766 * _757);
        float _1998 = ((log2((((float(_1949.y) * 0.5) * float(_1949.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1969 * _1969) + (_1972 * _1972)) + (_1966 * _1966)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1960 * gl_WorldRayDirectionEXT.x, _1960 * gl_WorldRayDirectionEXT.y, _1960 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _2000 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    }
    else
    {
        _2000 = 0.0;
    }
    vec4 _2002 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _775) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _776) + cbTextureTilingScale._m0[3u].w), _2000);
    float _2008 = (_2002.x * 2.0) + (-1.0);
    float _2009 = (_2002.y * 2.0) + (-1.0);
    float _2010 = dot(vec2(_2008, _2009), vec2(_2008, _2009));
    float _3335 = isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0));
    float _2015 = sqrt(1.0 - (isnan(1.0) ? _3335 : (isnan(_3335) ? 1.0 : min(_3335, 1.0))));
    float _2017 = fma(_2015, _787, fma(_2009, _816, 0.0));
    float _2019 = fma(_2015, _789, fma(_2009, _817, 0.0));
    float _2021 = fma(_2015, _790, fma(_2009, _818, 0.0));
    float _2025 = inversesqrt(dot(vec3(_2017, _2019, _2021), vec3(_2017, _2019, _2021)));
    float _2026 = _2025 * _2017;
    float _2027 = _2025 * _2019;
    float _2028 = _2025 * _2021;
    float _2031 = fma(_2028, _837, fma(_2027, _836, _2026 * _835));
    float _2034 = fma(_2028, _805, fma(_2027, _804, _2026 * _803));
    float _2037 = fma(_2028, _790, fma(_2027, _789, _2026 * _787));
    float _2041 = inversesqrt(dot(vec3(_2031, _2034, _2037), vec3(_2031, _2034, _2037)));
    uvec2 _2054 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6, int(0u)));
    float _2105;
    if (_860)
    {
        float _2065 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2071 = (_772 * _757) - (_769 * _760);
        float _2074 = (_766 * _760) - (_772 * _754);
        float _2077 = (_769 * _754) - (_766 * _757);
        float _2103 = ((log2((((float(_2054.y) * 0.5) * float(_2054.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_2074 * _2074) + (_2077 * _2077)) + (_2071 * _2071)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2065 * gl_WorldRayDirectionEXT.x, _2065 * gl_WorldRayDirectionEXT.y, _2065 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _2105 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
    }
    else
    {
        _2105 = 0.0;
    }
    vec4 _2107 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _775) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _776) + cbTextureTilingScale._m0[12u].w), _2105);
    float _2113 = (_2107.x * 2.0) + (-1.0);
    float _2114 = (_2107.y * 2.0) + (-1.0);
    float _2115 = dot(vec2(_2113, _2114), vec2(_2113, _2114));
    float _3351 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
    float _2120 = sqrt(1.0 - (isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0))));
    float _2122 = fma(_2120, _787, fma(_2114, _816, 0.0));
    float _2124 = fma(_2120, _789, fma(_2114, _817, 0.0));
    float _2126 = fma(_2120, _790, fma(_2114, _818, 0.0));
    float _2130 = inversesqrt(dot(vec3(_2122, _2124, _2126), vec3(_2122, _2124, _2126)));
    float _2131 = _2130 * _2122;
    float _2132 = _2130 * _2124;
    float _2133 = _2130 * _2126;
    float _2136 = fma(_2133, _837, fma(_2132, _836, _2131 * _835));
    float _2139 = fma(_2133, _805, fma(_2132, _804, _2131 * _803));
    float _2142 = fma(_2133, _790, fma(_2132, _789, _2131 * _787));
    float _2146 = inversesqrt(dot(vec3(_2136, _2139, _2142), vec3(_2136, _2139, _2142)));
    float _2152 = fma(_1831, _837, fma(_1830, _836, _1829 * _835));
    float _2155 = fma(_1831, _805, fma(_1830, _804, _1829 * _803));
    float _2158 = fma(_1831, _790, fma(_1830, _789, _1829 * _787));
    float _2162 = inversesqrt(dot(vec3(_2152, _2155, _2158), vec3(_2152, _2155, _2158)));
    float _2163 = _2162 * _2152;
    float _2164 = _2162 * _2155;
    float _2165 = _2162 * _2158;
    float _2172 = (((_2146 * _2136) - _2163) * _931) + _2163;
    float _2173 = (((_2146 * _2139) - _2164) * _931) + _2164;
    float _2174 = (((_2146 * _2142) - _2165) * _931) + _2165;
    uvec2 _2186 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15, int(0u)));
    float _2237;
    if (_860)
    {
        float _2197 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2203 = (_772 * _757) - (_769 * _760);
        float _2206 = (_766 * _760) - (_772 * _754);
        float _2209 = (_769 * _754) - (_766 * _757);
        float _2235 = ((log2((((float(_2186.y) * 0.5) * float(_2186.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_2206 * _2206) + (_2209 * _2209)) + (_2203 * _2203)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2197 * gl_WorldRayDirectionEXT.x, _2197 * gl_WorldRayDirectionEXT.y, _2197 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _2237 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
    }
    else
    {
        _2237 = 0.0;
    }
    vec4 _2239 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _775) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _776) + cbTextureTilingScale._m0[6u].w), _2237);
    float _2245 = (_2239.x * 2.0) + (-1.0);
    float _2246 = (_2239.y * 2.0) + (-1.0);
    float _2247 = dot(vec2(_2245, _2246), vec2(_2245, _2246));
    float _3367 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _2252 = sqrt(1.0 - (isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0))));
    float _2254 = fma(_2252, _787, fma(_2246, _816, 0.0));
    float _2256 = fma(_2252, _789, fma(_2246, _817, 0.0));
    float _2258 = fma(_2252, _790, fma(_2246, _818, 0.0));
    float _2262 = inversesqrt(dot(vec3(_2254, _2256, _2258), vec3(_2254, _2256, _2258)));
    float _2263 = _2262 * _2254;
    float _2264 = _2262 * _2256;
    float _2265 = _2262 * _2258;
    float _2268 = fma(_2265, _837, fma(_2264, _836, _2263 * _835));
    float _2271 = fma(_2265, _805, fma(_2264, _804, _2263 * _803));
    float _2274 = fma(_2265, _790, fma(_2264, _789, _2263 * _787));
    float _2278 = inversesqrt(dot(vec3(_2268, _2271, _2274), vec3(_2268, _2271, _2274)));
    float _2288 = (((_2278 * _2268) - _2172) * _934) + _2172;
    float _2289 = (((_2278 * _2271) - _2173) * _934) + _2173;
    float _2290 = (((_2278 * _2274) - _2174) * _934) + _2174;
    uvec2 _2302 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16, int(0u)));
    float _2353;
    if (_860)
    {
        float _2313 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2319 = (_772 * _757) - (_769 * _760);
        float _2322 = (_766 * _760) - (_772 * _754);
        float _2325 = (_769 * _754) - (_766 * _757);
        float _2351 = ((log2((((float(_2302.y) * 0.5) * float(_2302.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_2322 * _2322) + (_2325 * _2325)) + (_2319 * _2319)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2313 * gl_WorldRayDirectionEXT.x, _2313 * gl_WorldRayDirectionEXT.y, _2313 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _2353 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    }
    else
    {
        _2353 = 0.0;
    }
    vec4 _2355 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _775) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _776) + cbTextureTilingScale._m0[7u].w), _2353);
    float _2361 = (_2355.x * 2.0) + (-1.0);
    float _2362 = (_2355.y * 2.0) + (-1.0);
    float _2363 = dot(vec2(_2361, _2362), vec2(_2361, _2362));
    float _3383 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _2368 = sqrt(1.0 - (isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0))));
    float _2370 = fma(_2368, _787, fma(_2362, _816, 0.0));
    float _2372 = fma(_2368, _789, fma(_2362, _817, 0.0));
    float _2374 = fma(_2368, _790, fma(_2362, _818, 0.0));
    float _2378 = inversesqrt(dot(vec3(_2370, _2372, _2374), vec3(_2370, _2372, _2374)));
    float _2379 = _2378 * _2370;
    float _2380 = _2378 * _2372;
    float _2381 = _2378 * _2374;
    float _2384 = fma(_2381, _837, fma(_2380, _836, _2379 * _835));
    float _2387 = fma(_2381, _805, fma(_2380, _804, _2379 * _803));
    float _2390 = fma(_2381, _790, fma(_2380, _789, _2379 * _787));
    float _2394 = inversesqrt(dot(vec3(_2384, _2387, _2390), vec3(_2384, _2387, _2390)));
    float _2404 = (((_2394 * _2390) - _2290) * _928) + _2290;
    uvec2 _2416 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7, int(0u)));
    float _2467;
    if (_860)
    {
        float _2427 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2433 = (_772 * _757) - (_769 * _760);
        float _2436 = (_766 * _760) - (_772 * _754);
        float _2439 = (_769 * _754) - (_766 * _757);
        float _2465 = ((log2((((float(_2416.y) * 0.5) * float(_2416.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_2436 * _2436) + (_2439 * _2439)) + (_2433 * _2433)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2427 * gl_WorldRayDirectionEXT.x, _2427 * gl_WorldRayDirectionEXT.y, _2427 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _2467 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
    }
    else
    {
        _2467 = 0.0;
    }
    vec4 _2469 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _775) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _776) + cbTextureTilingScale._m0[13u].w), _2467);
    float _2475 = (_2469.x * 2.0) + (-1.0);
    float _2476 = (_2469.y * 2.0) + (-1.0);
    float _2477 = dot(vec2(_2475, _2476), vec2(_2475, _2476));
    float _3399 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _2482 = sqrt(1.0 - (isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0))));
    float _2484 = fma(_2482, _787, fma(_2476, _816, 0.0));
    float _2486 = fma(_2482, _789, fma(_2476, _817, 0.0));
    float _2488 = fma(_2482, _790, fma(_2476, _818, 0.0));
    float _2492 = inversesqrt(dot(vec3(_2484, _2486, _2488), vec3(_2484, _2486, _2488)));
    float _2493 = _2492 * _2484;
    float _2494 = _2492 * _2486;
    float _2495 = _2492 * _2488;
    float _2498 = fma(_2495, _837, fma(_2494, _836, _2493 * _835));
    float _2501 = fma(_2495, _805, fma(_2494, _804, _2493 * _803));
    float _2504 = fma(_2495, _790, fma(_2494, _789, _2493 * _787));
    float _2508 = inversesqrt(dot(vec3(_2498, _2501, _2504), vec3(_2498, _2501, _2504)));
    uvec2 _2542 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5, int(0u)));
    float _2546 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2547 = _2546 * gl_WorldRayDirectionEXT.x;
    float _2548 = _2546 * gl_WorldRayDirectionEXT.y;
    float _2549 = _2546 * gl_WorldRayDirectionEXT.z;
    float _2593;
    if (_860)
    {
        float _2559 = (_772 * _757) - (_769 * _760);
        float _2562 = (_766 * _760) - (_772 * _754);
        float _2565 = (_769 * _754) - (_766 * _757);
        float _2591 = ((log2((((float(_2542.y) * 0.5) * float(_2542.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_2562 * _2562) + (_2565 * _2565)) + (_2559 * _2559)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2547, _2548, _2549), vec3(_787, _789, _790))));
        _2593 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    }
    else
    {
        _2593 = 0.0;
    }
    vec4 _2595 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _773) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _774) + cbTextureTilingScale._m0[11u].w), _2593);
    float _2609 = (((((((_2031 * _1188) * _2041) * cbMtdParam._m0[22u].w) + ((((_1348 * _1332) * _1926) * _1936) * cbMtdParam._m0[23u].x)) + _2288) + (((_2394 * _2384) - _2288) * _928)) + (((_2498 * _1198) * _2508) * cbMtdParam._m0[21u].w)) + (((_2595.x * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _2614 = (((((((_2034 * _1188) * _2041) * cbMtdParam._m0[22u].w) + ((((_1349 * _1332) * _1929) * _1936) * cbMtdParam._m0[23u].x)) + _2289) + (((_2394 * _2387) - _2289) * _928)) + (((_2501 * _1198) * _2508) * cbMtdParam._m0[21u].w)) + (((_2595.y * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _2617 = fma(_2404, _787, fma(_2614, _803, _2609 * _835));
    float _2620 = fma(_2404, _789, fma(_2614, _804, _2609 * _836));
    float _2623 = fma(_2404, _790, fma(_2614, _805, _2609 * _837));
    float _2627 = inversesqrt(dot(vec3(_2617, _2620, _2623), vec3(_2617, _2620, _2623)));
    float _2628 = _2627 * _2617;
    float _2629 = _2627 * _2620;
    float _2630 = _2627 * _2623;
    float _2642 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2643 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2644 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2645 = (-0.0) - _2547;
    float _2647 = (-0.0) - _2548;
    float _2648 = (-0.0) - _2549;
    float _2654 = float(gl_LaunchIDEXT.x);
    float _2655 = float(gl_LaunchIDEXT.y);
    float _2658 = float(gl_LaunchSizeEXT.x);
    float _2672 = fract(fract(sin(dot(vec2(_2654 / _2658, _2655 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2685 = fract(fract(sin(dot(vec2((_2654 + 128.0) / _2658, (_2655 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2686 = 1.0 - _1737;
    float _2687 = _2686 * _1714;
    float _2688 = _2686 * _1715;
    float _2689 = _2686 * _1716;
    float _2694 = _1737 * (_1714 + (-0.039999999105930328369140625));
    float _2695 = _1737 * (_1715 + (-0.039999999105930328369140625));
    float _2696 = _1737 * (_1716 + (-0.039999999105930328369140625));
    float _2697 = _2694 + 0.039999999105930328369140625;
    float _2699 = _2695 + 0.039999999105930328369140625;
    float _2700 = _2696 + 0.039999999105930328369140625;
    _75._m0 = 1u;
    uvec4 _2710 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2711 = _2710.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2711, _2710.w, _2711, vec3(_2642, _2643, _2644), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2825;
    float _2826;
    float _2827;
    float _2828;
    float _2829;
    float _2830;
    if (_75._m0 == 0u)
    {
        float _2731 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2628, _2629, _2630));
        float _3415 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2734 = isnan(1.0) ? _3415 : (isnan(_3415) ? 1.0 : min(_3415, 1.0));
        float _2753 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1807) * 0.949999988079071044921875);
        float _2754 = _2753 * _2753;
        float _2755 = g_sceneCB._m0[4u].x - _2547;
        float _2756 = g_sceneCB._m0[4u].y - _2548;
        float _2757 = g_sceneCB._m0[4u].z - _2549;
        float _2761 = inversesqrt(dot(vec3(_2755, _2756, _2757), vec3(_2755, _2756, _2757)));
        float _2762 = _2761 * _2755;
        float _2763 = _2761 * _2756;
        float _2764 = _2761 * _2757;
        float _2765 = dot(vec3(_2628, _2629, _2630), vec3(g_sceneCB._m0[4u].xyz));
        float _3426 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2768 = isnan(1.0) ? _3426 : (isnan(_3426) ? 1.0 : min(_3426, 1.0));
        float _2769 = dot(vec3(_2628, _2629, _2630), vec3(_2645, _2647, _2648));
        float _3437 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2772 = isnan(1.0) ? _3437 : (isnan(_3437) ? 1.0 : min(_3437, 1.0));
        float _2773 = dot(vec3(_2628, _2629, _2630), vec3(_2762, _2763, _2764));
        float _3448 = isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0));
        float _2776 = isnan(1.0) ? _3448 : (isnan(_3448) ? 1.0 : min(_3448, 1.0));
        float _2777 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2762, _2763, _2764));
        float _3459 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2781 = _2754 * _2754;
        float _2785 = ((_2776 * _2776) * (_2781 + (-1.0))) + 1.0;
        float _2794 = exp2(log2(1.0 - (isnan(1.0) ? _3459 : (isnan(_3459) ? 1.0 : min(_3459, 1.0)))) * 5.0);
        float _2805 = 1.0 - _2754;
        float _2816 = (0.5 / (((_2772 * ((_2768 * _2805) + _2754)) + 9.9999999392252902907785028219223e-09) + (((_2772 * _2805) + _2754) * _2768))) * _2768;
        float _3470 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
        float _2818 = (isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0))) * (_2781 / ((_2785 * _2785) * 3.141590118408203125));
        _2825 = ((_2687 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2734;
        _2826 = ((_2688 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2734;
        _2827 = ((_2689 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2734;
        _2828 = (((_2794 * (0.959999978542327880859375 - _2694)) + _2697) * g_sceneCB._m0[5u].x) * _2818;
        _2829 = (((_2794 * (0.959999978542327880859375 - _2695)) + _2699) * g_sceneCB._m0[5u].y) * _2818;
        _2830 = (((_2794 * (0.959999978542327880859375 - _2696)) + _2700) * g_sceneCB._m0[5u].z) * _2818;
    }
    else
    {
        _2825 = 0.0;
        _2826 = 0.0;
        _2827 = 0.0;
        _2828 = 0.0;
        _2829 = 0.0;
        _2830 = 0.0;
    }
    bool _2832 = abs(_2629) < 0.89999997615814208984375;
    float _2834 = float(_2832);
    float _2835 = _2832 ? 0.0 : 1.0;
    float _2838 = (_2834 * _2630) - (_2835 * _2629);
    float _2839 = _2835 * _2628;
    float _2841 = (-0.0) - (_2628 * _2834);
    float _2845 = inversesqrt(dot(vec3(_2838, _2839, _2841), vec3(_2838, _2839, _2841)));
    float _2846 = _2838 * _2845;
    float _2847 = _2839 * _2845;
    float _2848 = _2845 * _2841;
    float _2851 = (_2847 * _2630) - (_2848 * _2629);
    float _2854 = (_2848 * _2628) - (_2846 * _2630);
    float _2857 = (_2846 * _2629) - (_2847 * _2628);
    float _2859;
    float _2867;
    float _2858 = 0.0;
    uint _2860 = 0u;
    float _2864;
    bool _2866;
    for (;;)
    {
        _2864 = (float(_2860) + _2672) * 0.03125;
        _2866 = _2860 == 0u;
        float frontier_phi_71_pred;
        if (_2866)
        {
            frontier_phi_71_pred = 0.0;
        }
        else
        {
            float _3008;
            float _3009;
            uint _3011;
            _3008 = 0.0;
            _3009 = 0.5;
            _3011 = _2860;
            float _2868;
            for (;;)
            {
                _2868 = ((_3011 & 1u) != 0u) ? (_3009 + _3008) : _3008;
                uint _3012 = _3011 >> 1u;
                if (_3012 == 0u)
                {
                    break;
                }
                else
                {
                    _3008 = _2868;
                    _3009 *= 0.5;
                    _3011 = _3012;
                }
            }
            frontier_phi_71_pred = _2868;
        }
        _2867 = frontier_phi_71_pred;
        float _2869 = _2867 + _2685;
        float _2873 = sqrt(_2864);
        float _2874 = ((_2869 > 1.0) ? (_2869 + (-1.0)) : _2869) * 6.283185482025146484375;
        float _2877 = cos(_2874) * _2873;
        float _2879 = sin(_2874) * _2873;
        float _2881 = sqrt(1.0 - _2864);
        float _2894 = ((_2881 * _2628) + (_2877 * _2851)) + (_2879 * _2846);
        float _2895 = ((_2881 * _2629) + (_2877 * _2854)) + (_2879 * _2847);
        float _2896 = ((_2881 * _2630) + (_2877 * _2857)) + (_2879 * _2848);
        _74._m0 = 1u;
        uvec4 _2900 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2901 = _2900.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2901, _2900.w, _2901, vec3(_2642, _2643, _2644), 9.9999997473787516355514526367188e-05, vec3(_2894, _2895, _2896), 10000.0, 1);
        float _2907 = dot(vec3(_2628, _2629, _2630), vec3(_2894, _2895, _2896));
        float _3481 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        float _2910 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
        _2859 = ((float(_74._m0 == 0u) * _2910) / (_2910 * 0.3183098733425140380859375)) + _2858;
        uint _2861 = _2860 + 1u;
        if (_2861 == 32u)
        {
            break;
        }
        else
        {
            _2858 = _2859;
            _2860 = _2861;
            continue;
        }
    }
    float _2918 = _2859 * 0.009947183541953563690185546875;
    float _2923 = dot(vec3(_2547, _2548, _2549), vec3(_2628, _2629, _2630)) * 2.0;
    vec4 _2937 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2547 - (_2923 * _2628), _2548 - (_2923 * _2629), _2549 - (_2923 * _2630)), 4.0 - (_1807 * 4.0));
    float _2942 = dot(vec3(_2645, _2647, _2648), vec3(_2628, _2629, _2630));
    float _3492 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
    float _2952 = exp2(log2(1.0 - (isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0)))) * 5.0);
    vec4 _2964 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2628, _2629, _2630), 0.0);
    float _2975 = (_2828 + _2825) + (((_2964.x * _2687) + (((_2952 * (0.959999978542327880859375 - _2694)) + _2697) * _2937.x)) * _2918);
    float _2979 = (_2829 + _2826) + (((_2964.y * _2688) + (((_2952 * (0.959999978542327880859375 - _2695)) + _2699) * _2937.y)) * _2918);
    float _2983 = (_2830 + _2827) + (((_2964.z * _2689) + (((_2952 * (0.959999978542327880859375 - _2696)) + _2700) * _2937.z)) * _2918);
    float _3503 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
    float _3514 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
    float _3525 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
    bool _2991 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _3002;
    _3002.x = _2991 ? ((_780 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0)));
    _3002.y = _2991 ? ((_783 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0)));
    _3002.z = _2991 ? ((_786 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3525 : (isnan(_3525) ? 1.0 : min(_3525, 1.0)));
    payload._m0 = _3002;
}


