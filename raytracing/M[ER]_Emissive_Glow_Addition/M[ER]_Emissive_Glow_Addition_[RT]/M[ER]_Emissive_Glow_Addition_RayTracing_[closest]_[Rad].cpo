#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_ER_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_ER_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_ER_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1132;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _184 = (_177 * _169) + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 20u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 24u;
    }
    bool _217 = _178 == 0u;
    uint _218;
    if (_217)
    {
        _218 = _211;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 8u;
        }
        _218 = frontier_phi_9_10_ladder;
    }
    uvec4 _229 = texelFetch(l_geomAttrib_0, int((((_177 * _169) + 4u) + (_179 ? (_218 + 4u) : _218)) >> 2u));
    uint _230 = _229.x;
    float _234 = float(int(uint(int(_230 << 16u) >> int(16u))));
    float _235 = float(int(uint(int(_230) >> int(16u))));
    uint _237 = (_177 * _171) + 12u;
    uint _258;
    uint _259;
    uint _260;
    uint _261;
    if (_182)
    {
        uvec4 _239 = texelFetch(l_geomAttrib_0, int(_237 >> 2u));
        uint _240 = _239.x;
        _258 = _240 & 255u;
        _259 = (_240 >> 8u) & 255u;
        _260 = (_240 >> 16u) & 255u;
        _261 = 20u;
    }
    else
    {
        uint _246 = _237 >> 2u;
        uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
        uint _253 = _252.x;
        _258 = _253 & 65535u;
        _259 = _253 >> 16u;
        _260 = _252.y & 65535u;
        _261 = 24u;
    }
    uint _265;
    if (_217)
    {
        _265 = _261;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _261 + 8u;
        }
        _265 = frontier_phi_16_17_ladder;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((((_177 * _171) + 4u) + (_179 ? (_265 + 4u) : _265)) >> 2u));
    uint _275 = _274.x;
    float _279 = float(int(uint(int(_275 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_275) >> int(16u))));
    uint _282 = (_177 * _172) + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_182)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 20u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 24u;
    }
    uint _310;
    if (_217)
    {
        _310 = _306;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _306 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _306 + 8u;
        }
        _310 = frontier_phi_23_24_ladder;
    }
    uvec4 _319 = texelFetch(l_geomAttrib_0, int((((_177 * _172) + 4u) + (_179 ? (_310 + 4u) : _310)) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    bool _327 = _128.z == 0u;
    float _363;
    float _364;
    float _365;
    if (_327)
    {
        uint _330 = _169 * 3u;
        uvec3 _339 = uvec3(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_330 + 2u)).x);
        _363 = uintBitsToFloat(_339.x);
        _364 = uintBitsToFloat(_339.y);
        _365 = uintBitsToFloat(_339.z);
    }
    else
    {
        uint _347 = _169 * 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomPositionBuffer, int(_347)).x, texelFetch(l_geomPositionBuffer, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _363 = unpackHalf2x16(_354).x;
        _364 = unpackHalf2x16(_354 >> 16u).x;
        _365 = unpackHalf2x16(_353.y).x;
    }
    float _401;
    float _402;
    float _403;
    if (_327)
    {
        uint _368 = _171 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _171 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_327)
    {
        uint _406 = _172 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _172 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _444 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = (_279 - _234) * 0.00048828125;
    float _468 = (_280 - _235) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _511 = fma(_508, gl_ObjectToWorldEXT[2u].x, fma(_507, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _506));
    float _514 = fma(_508, gl_ObjectToWorldEXT[2u].y, fma(_507, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _506));
    float _517 = fma(_508, gl_ObjectToWorldEXT[2u].z, fma(_507, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _506));
    float _518 = (((_279 * hit._m0.x) + (_234 * _444)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _519 = (((_280 * hit._m0.x) + (_235 * _444)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _523 = (((float(_208) * _444) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _526 = (((float(_209) * _444) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = (((float(_210) * _444) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = _523 * 0.0078740157186985015869140625;
    float _532 = _526 * 0.0078740157186985015869140625;
    float _533 = _529 * 0.0078740157186985015869140625;
    uvec2 _559 = uvec2(textureSize(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_0, int(0u)));
    bool _564 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _617;
    if (_564)
    {
        float _575 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _581 = (_517 * _502) - (_514 * _505);
        float _584 = (_511 * _505) - (_517 * _499);
        float _587 = (_514 * _499) - (_511 * _502);
        float _614 = ((log2((((float(_559.y) * 0.5) * float(_559.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_584 * _584) + (_587 * _587)) + (_581 * _581)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_575 * gl_WorldRayDirectionEXT.x, _575 * gl_WorldRayDirectionEXT.y, _575 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _617 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    }
    else
    {
        _617 = 0.0;
    }
    vec4 _621 = textureLod(sampler2D(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + _519) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _617);
    float _626 = _621.x * cbMtdParam._m0[9u].x;
    float _627 = _621.y * cbMtdParam._m0[9u].y;
    float _628 = _621.z * cbMtdParam._m0[9u].z;
    uvec2 _655 = uvec2(textureSize(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_2, int(0u)));
    float _706;
    if (_564)
    {
        float _666 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _672 = (_517 * _502) - (_514 * _505);
        float _675 = (_511 * _505) - (_517 * _499);
        float _678 = (_514 * _499) - (_511 * _502);
        float _704 = ((log2((((float(_655.y) * 0.5) * float(_655.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_675 * _675) + (_678 * _678)) + (_672 * _672)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_666 * gl_WorldRayDirectionEXT.x, _666 * gl_WorldRayDirectionEXT.y, _666 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _706 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    }
    else
    {
        _706 = 0.0;
    }
    vec4 _708 = textureLod(sampler2D(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + _519) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _706);
    uvec2 _739 = uvec2(textureSize(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_1, int(0u)));
    float _743 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _744 = _743 * gl_WorldRayDirectionEXT.x;
    float _745 = _743 * gl_WorldRayDirectionEXT.y;
    float _746 = _743 * gl_WorldRayDirectionEXT.z;
    float _790;
    if (_564)
    {
        float _756 = (_517 * _502) - (_514 * _505);
        float _759 = (_511 * _505) - (_517 * _499);
        float _762 = (_514 * _499) - (_511 * _502);
        float _788 = ((log2((((float(_739.y) * 0.5) * float(_739.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_759 * _759) + (_762 * _762)) + (_756 * _756)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_744, _745, _746), vec3(_530, _532, _533))));
        _790 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    }
    else
    {
        _790 = 0.0;
    }
    vec4 _792 = textureLod(sampler2D(M_ER_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) + _519) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _790);
    float _810 = inversesqrt(dot(vec3(_530, _532, _533), vec3(_530, _532, _533)));
    float _811 = _810 * _530;
    float _812 = _810 * _532;
    float _813 = _810 * _533;
    float _825 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _826 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _827 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _828 = (-0.0) - _744;
    float _830 = (-0.0) - _745;
    float _831 = (-0.0) - _746;
    float _837 = float(gl_LaunchIDEXT.x);
    float _838 = float(gl_LaunchIDEXT.y);
    float _841 = float(gl_LaunchSizeEXT.x);
    float _855 = fract(fract(sin(dot(vec2(_837 / _841, _838 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _868 = fract(fract(sin(dot(vec2((_837 + 128.0) / _841, (_838 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _878 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _879 = _878.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _879, _878.w, _879, vec3(_825, _826, _827), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    if (_66._m0 == 0u)
    {
        float _900 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_811, _812, _813));
        float _1225 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        float _903 = isnan(1.0) ? _1225 : (isnan(_1225) ? 1.0 : min(_1225, 1.0));
        float _914 = g_sceneCB._m0[4u].x - _744;
        float _915 = g_sceneCB._m0[4u].y - _745;
        float _916 = g_sceneCB._m0[4u].z - _746;
        float _920 = inversesqrt(dot(vec3(_914, _915, _916), vec3(_914, _915, _916)));
        float _924 = dot(vec3(_811, _812, _813), vec3(g_sceneCB._m0[4u].xyz));
        float _1236 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _927 = isnan(1.0) ? _1236 : (isnan(_1236) ? 1.0 : min(_1236, 1.0));
        float _928 = dot(vec3(_811, _812, _813), vec3(_828, _830, _831));
        float _1247 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _932 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_914 * _920, _915 * _920, _916 * _920));
        float _1258 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _943 = (exp2(log2(1.0 - (isnan(1.0) ? _1258 : (isnan(_1258) ? 1.0 : min(_1258, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _949 = (0.5 / ((_927 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1247 : (isnan(_1247) ? 1.0 : min(_1247, 1.0))))) * _927;
        float _1269 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _951 = (isnan(1.0) ? _1269 : (isnan(_1269) ? 1.0 : min(_1269, 1.0))) * 0.31831014156341552734375;
        _959 = ((_626 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _903;
        _960 = ((_627 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _903;
        _961 = ((_628 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _903;
        _962 = (_943 * g_sceneCB._m0[5u].x) * _951;
        _963 = (_943 * g_sceneCB._m0[5u].y) * _951;
        _964 = (_943 * g_sceneCB._m0[5u].z) * _951;
    }
    else
    {
        _959 = 0.0;
        _960 = 0.0;
        _961 = 0.0;
        _962 = 0.0;
        _963 = 0.0;
        _964 = 0.0;
    }
    bool _966 = abs(_812) < 0.89999997615814208984375;
    float _968 = float(_966);
    float _969 = _966 ? 0.0 : 1.0;
    float _972 = (_968 * _813) - (_969 * _812);
    float _973 = _969 * _811;
    float _975 = (-0.0) - (_811 * _968);
    float _979 = inversesqrt(dot(vec3(_972, _973, _975), vec3(_972, _973, _975)));
    float _980 = _972 * _979;
    float _981 = _973 * _979;
    float _982 = _979 * _975;
    float _985 = (_981 * _813) - (_982 * _812);
    float _988 = (_982 * _811) - (_980 * _813);
    float _991 = (_980 * _812) - (_981 * _811);
    float _993;
    float _1001;
    float _992 = 0.0;
    uint _994 = 0u;
    float _998;
    bool _1000;
    for (;;)
    {
        _998 = (float(_994) + _855) * 0.03125;
        _1000 = _994 == 0u;
        float frontier_phi_45_pred;
        if (_1000)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1137;
            float _1138;
            uint _1140;
            _1137 = 0.0;
            _1138 = 0.5;
            _1140 = _994;
            float _1002;
            for (;;)
            {
                _1002 = ((_1140 & 1u) != 0u) ? (_1138 + _1137) : _1137;
                uint _1141 = _1140 >> 1u;
                if (_1141 == 0u)
                {
                    break;
                }
                else
                {
                    _1137 = _1002;
                    _1138 *= 0.5;
                    _1140 = _1141;
                }
            }
            frontier_phi_45_pred = _1002;
        }
        _1001 = frontier_phi_45_pred;
        float _1003 = _1001 + _868;
        float _1008 = sqrt(_998);
        float _1009 = ((_1003 > 1.0) ? (_1003 + (-1.0)) : _1003) * 6.283185482025146484375;
        float _1012 = cos(_1009) * _1008;
        float _1014 = sin(_1009) * _1008;
        float _1016 = sqrt(1.0 - _998);
        float _1029 = ((_1016 * _811) + (_1012 * _985)) + (_1014 * _980);
        float _1030 = ((_1016 * _812) + (_1012 * _988)) + (_1014 * _981);
        float _1031 = ((_1016 * _813) + (_1012 * _991)) + (_1014 * _982);
        _65._m0 = 1u;
        uvec4 _1035 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1036 = _1035.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1036, _1035.w, _1036, vec3(_825, _826, _827), 9.9999997473787516355514526367188e-05, vec3(_1029, _1030, _1031), 10000.0, 1);
        float _1042 = dot(vec3(_811, _812, _813), vec3(_1029, _1030, _1031));
        float _1280 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1045 = isnan(1.0) ? _1280 : (isnan(_1280) ? 1.0 : min(_1280, 1.0));
        _993 = ((float(_65._m0 == 0u) * _1045) / (_1045 * 0.3183098733425140380859375)) + _992;
        uint _995 = _994 + 1u;
        if (_995 == 32u)
        {
            break;
        }
        else
        {
            _992 = _993;
            _994 = _995;
            continue;
        }
    }
    float _1053 = _993 * 0.009947183541953563690185546875;
    float _1058 = dot(vec3(_744, _745, _746), vec3(_811, _812, _813)) * 2.0;
    vec4 _1070 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_744 - (_1058 * _811), _745 - (_1058 * _812), _746 - (_1058 * _813)), 4.0);
    float _1075 = dot(vec3(_828, _830, _831), vec3(_811, _812, _813));
    float _1291 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _1084 = (exp2(log2(1.0 - (isnan(1.0) ? _1291 : (isnan(_1291) ? 1.0 : min(_1291, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1090 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_811, _812, _813), 0.0);
    float _1102 = ((_959 + (((_792.x * cbMtdParam._m0[11u].x) + (_708.x * cbMtdParam._m0[10u].x)) * cbMtdParam._m0[12u].x)) + _962) + (((_1090.x * _626) + (_1084 * _1070.x)) * _1053);
    float _1107 = ((_960 + (((_792.y * cbMtdParam._m0[11u].y) + (_708.y * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[12u].x)) + _963) + (((_1090.y * _627) + (_1084 * _1070.y)) * _1053);
    float _1112 = ((_961 + (((_792.z * cbMtdParam._m0[11u].z) + (_708.z * cbMtdParam._m0[10u].z)) * cbMtdParam._m0[12u].x)) + _964) + (((_1090.z * _628) + (_1084 * _1070.z)) * _1053);
    float _1302 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _1313 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    float _1324 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
    bool _1120 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1131;
    _1131.x = _1120 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1302 : (isnan(_1302) ? 1.0 : min(_1302, 1.0)));
    _1131.y = _1120 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0)));
    _1131.z = _1120 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0)));
    payload._m0 = _1131;
}


