#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_lava_01_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_Waterfall_lava_01_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1043;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _165;
        }
        else
        {
            frontier_phi_3_2_ladder = _163 >> 16u;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _166;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder_2;
        _171 = frontier_phi_3_2_ladder;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _183 = (_176 * _168) + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 20u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 24u;
    }
    bool _216 = _177 == 0u;
    uint _217;
    if (_216)
    {
        _217 = _210;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 8u;
        }
        _217 = frontier_phi_9_10_ladder;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((((_176 * _168) + 4u) + (_178 ? (_217 + 4u) : _217)) >> 2u));
    uint _229 = _228.x;
    float _233 = float(int(uint(int(_229 << 16u) >> int(16u))));
    float _234 = float(int(uint(int(_229) >> int(16u))));
    uint _236 = (_176 * _170) + 12u;
    uint _257;
    uint _258;
    uint _259;
    uint _260;
    if (_181)
    {
        uvec4 _238 = texelFetch(l_geomAttrib_0, int(_236 >> 2u));
        uint _239 = _238.x;
        _257 = _239 & 255u;
        _258 = (_239 >> 8u) & 255u;
        _259 = (_239 >> 16u) & 255u;
        _260 = 20u;
    }
    else
    {
        uint _245 = _236 >> 2u;
        uvec2 _251 = uvec2(texelFetch(l_geomAttrib_0, int(_245)).x, texelFetch(l_geomAttrib_0, int(_245 + 1u)).x);
        uint _252 = _251.x;
        _257 = _252 & 65535u;
        _258 = _252 >> 16u;
        _259 = _251.y & 65535u;
        _260 = 24u;
    }
    uint _264;
    if (_216)
    {
        _264 = _260;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _260 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _260 + 8u;
        }
        _264 = frontier_phi_16_17_ladder;
    }
    uvec4 _273 = texelFetch(l_geomAttrib_0, int((((_176 * _170) + 4u) + (_178 ? (_264 + 4u) : _264)) >> 2u));
    uint _274 = _273.x;
    float _278 = float(int(uint(int(_274 << 16u) >> int(16u))));
    float _279 = float(int(uint(int(_274) >> int(16u))));
    uint _281 = (_176 * _171) + 12u;
    uint _302;
    uint _303;
    uint _304;
    uint _305;
    if (_181)
    {
        uvec4 _283 = texelFetch(l_geomAttrib_0, int(_281 >> 2u));
        uint _284 = _283.x;
        _302 = _284 & 255u;
        _303 = (_284 >> 8u) & 255u;
        _304 = (_284 >> 16u) & 255u;
        _305 = 20u;
    }
    else
    {
        uint _290 = _281 >> 2u;
        uvec2 _296 = uvec2(texelFetch(l_geomAttrib_0, int(_290)).x, texelFetch(l_geomAttrib_0, int(_290 + 1u)).x);
        uint _297 = _296.x;
        _302 = _297 & 65535u;
        _303 = _297 >> 16u;
        _304 = _296.y & 65535u;
        _305 = 24u;
    }
    uint _309;
    if (_216)
    {
        _309 = _305;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _305 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _305 + 8u;
        }
        _309 = frontier_phi_23_24_ladder;
    }
    uvec4 _318 = texelFetch(l_geomAttrib_0, int((((_176 * _171) + 4u) + (_178 ? (_309 + 4u) : _309)) >> 2u));
    uint _319 = _318.x;
    float _323 = float(int(uint(int(_319 << 16u) >> int(16u))));
    float _324 = float(int(uint(int(_319) >> int(16u))));
    bool _326 = _127.z == 0u;
    float _362;
    float _363;
    float _364;
    if (_326)
    {
        uint _329 = _168 * 3u;
        uvec3 _338 = uvec3(texelFetch(l_geomPositionBuffer, int(_329)).x, texelFetch(l_geomPositionBuffer, int(_329 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_329 + 2u)).x);
        _362 = uintBitsToFloat(_338.x);
        _363 = uintBitsToFloat(_338.y);
        _364 = uintBitsToFloat(_338.z);
    }
    else
    {
        uint _346 = _168 * 2u;
        uvec2 _352 = uvec2(texelFetch(l_geomPositionBuffer, int(_346)).x, texelFetch(l_geomPositionBuffer, int(_346 + 1u)).x);
        uint _353 = _352.x;
        _362 = unpackHalf2x16(_353).x;
        _363 = unpackHalf2x16(_353 >> 16u).x;
        _364 = unpackHalf2x16(_352.y).x;
    }
    float _400;
    float _401;
    float _402;
    if (_326)
    {
        uint _367 = _170 * 3u;
        uvec3 _376 = uvec3(texelFetch(l_geomPositionBuffer, int(_367)).x, texelFetch(l_geomPositionBuffer, int(_367 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_367 + 2u)).x);
        _400 = uintBitsToFloat(_376.x);
        _401 = uintBitsToFloat(_376.y);
        _402 = uintBitsToFloat(_376.z);
    }
    else
    {
        uint _384 = _170 * 2u;
        uvec2 _390 = uvec2(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x);
        uint _391 = _390.x;
        _400 = unpackHalf2x16(_391).x;
        _401 = unpackHalf2x16(_391 >> 16u).x;
        _402 = unpackHalf2x16(_390.y).x;
    }
    float _438;
    float _439;
    float _440;
    if (_326)
    {
        uint _405 = _171 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _171 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _443 = (1.0 - hit._m0.x) - hit._m0.y;
    float _484 = _400 - _362;
    float _485 = _401 - _363;
    float _486 = _402 - _364;
    float _489 = fma(_486, gl_ObjectToWorldEXT[2u].x, fma(_485, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _484));
    float _492 = fma(_486, gl_ObjectToWorldEXT[2u].y, fma(_485, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _484));
    float _495 = fma(_486, gl_ObjectToWorldEXT[2u].z, fma(_485, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _484));
    float _496 = _438 - _362;
    float _497 = _439 - _363;
    float _498 = _440 - _364;
    float _501 = fma(_498, gl_ObjectToWorldEXT[2u].x, fma(_497, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _496));
    float _504 = fma(_498, gl_ObjectToWorldEXT[2u].y, fma(_497, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _496));
    float _507 = fma(_498, gl_ObjectToWorldEXT[2u].z, fma(_497, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _496));
    float _508 = (((_278 * hit._m0.x) + (_233 * _443)) + (_323 * hit._m0.y)) * 0.00048828125;
    float _510 = (((_279 * hit._m0.x) + (_234 * _443)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _514 = (((float(_207) * _443) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _517 = (((float(_208) * _443) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _520 = (((float(_209) * _443) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _521 = _514 * 0.0078740157186985015869140625;
    float _523 = _517 * 0.0078740157186985015869140625;
    float _524 = _520 * 0.0078740157186985015869140625;
    float _543 = cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x;
    float _546 = (_543 * cbMtdParam._m0[15u].y) + _508;
    float _547 = (_543 * cbMtdParam._m0[15u].z) + _510;
    uvec2 _572 = uvec2(textureSize(M_Waterfall_lava_01_snp_0_Texture2D_3, int(0u)));
    float _581 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _582 = _581 * gl_WorldRayDirectionEXT.x;
    float _583 = _581 * gl_WorldRayDirectionEXT.y;
    float _584 = _581 * gl_WorldRayDirectionEXT.z;
    float _636;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _598 = (_507 * _492) - (_504 * _495);
        float _601 = (_501 * _495) - (_507 * _489);
        float _604 = (_504 * _489) - (_501 * _492);
        float _633 = ((log2((((float(_572.y) * 0.5) * float(_572.x)) * abs((((_324 - _234) * (_278 - _233)) - ((_323 - _233) * (_279 - _234))) * 2.384185791015625e-07)) / (sqrt(((_601 * _601) + (_604 * _604)) + (_598 * _598)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))))) / abs(dot(vec3(_582, _583, _584), vec3(_521, _523, _524))));
        _636 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    }
    else
    {
        _636 = 0.0;
    }
    vec4 _640 = textureLod(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((_543 * cbMtdParam._m0[15u].w) + _508)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[16u].x * _543) + _510)) + cbTextureTilingScale._m0[1u].w), _636);
    float _646 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[12u].w) * cbMtdParam._m0[13u].y;
    float _652 = ((_640.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].x;
    float _654 = (-0.0) - (cbMtdParam._m0[14u].x * ((_640.x * 0.5) + (-0.25)));
    float _656 = fract(_646);
    float _658 = fract(_646 + 0.5);
    float _670 = abs((_656 * 2.0) + (-1.0));
    vec4 _688 = textureLod(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_656 * _654) + _546) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_652 * _656) + _547) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _690 = _688.x;
    float _691 = _688.y;
    float _692 = _688.z;
    vec4 _693 = textureLod(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_658 * _654) + _546) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_652 * _658) + _547) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _738 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_521, _523, _524, 0.0)) - cbMtdParam._m0[12u].x;
    float _1122 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _745 = exp2(log2(1.0 - (isnan(1.0) ? _1122 : (isnan(_1122) ? 1.0 : min(_1122, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].z : (isnan(cbMtdParam._m0[14u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].z, 0.001000000047497451305389404296875))));
    float _752 = inversesqrt(dot(vec3(_521, _523, _524), vec3(_521, _523, _524)));
    float _753 = _752 * _521;
    float _754 = _752 * _523;
    float _755 = _752 * _524;
    float _767 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _768 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _769 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _770 = (-0.0) - _582;
    float _771 = (-0.0) - _583;
    float _772 = (-0.0) - _584;
    float _778 = float(gl_LaunchIDEXT.x);
    float _779 = float(gl_LaunchIDEXT.y);
    float _782 = float(gl_LaunchSizeEXT.x);
    float _796 = fract(fract(sin(dot(vec2(_778 / _782, _779 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _809 = fract(fract(sin(dot(vec2((_778 + 128.0) / _782, (_779 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _65._m0 = 1u;
    uvec4 _819 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _820 = _819.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _820, _819.w, _820, vec3(_767, _768, _769), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _886;
    float _887;
    float _888;
    if (_65._m0 == 0u)
    {
        float _841 = g_sceneCB._m0[4u].x - _582;
        float _842 = g_sceneCB._m0[4u].y - _583;
        float _843 = g_sceneCB._m0[4u].z - _584;
        float _847 = inversesqrt(dot(vec3(_841, _842, _843), vec3(_841, _842, _843)));
        float _851 = dot(vec3(_753, _754, _755), vec3(g_sceneCB._m0[4u].xyz));
        float _1138 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        float _854 = isnan(1.0) ? _1138 : (isnan(_1138) ? 1.0 : min(_1138, 1.0));
        float _855 = dot(vec3(_753, _754, _755), vec3(_770, _771, _772));
        float _1149 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        float _859 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_841 * _847, _842 * _847, _843 * _847));
        float _1160 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
        float _870 = (exp2(log2(1.0 - (isnan(1.0) ? _1160 : (isnan(_1160) ? 1.0 : min(_1160, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _876 = (0.5 / ((_854 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1149 : (isnan(_1149) ? 1.0 : min(_1149, 1.0))))) * _854;
        float _1171 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        float _878 = (isnan(1.0) ? _1171 : (isnan(_1171) ? 1.0 : min(_1171, 1.0))) * 0.31831014156341552734375;
        _886 = (_870 * g_sceneCB._m0[5u].x) * _878;
        _887 = (_870 * g_sceneCB._m0[5u].y) * _878;
        _888 = (_870 * g_sceneCB._m0[5u].z) * _878;
    }
    else
    {
        _886 = 0.0;
        _887 = 0.0;
        _888 = 0.0;
    }
    bool _890 = abs(_754) < 0.89999997615814208984375;
    float _892 = float(_890);
    float _893 = _890 ? 0.0 : 1.0;
    float _896 = (_892 * _755) - (_893 * _754);
    float _897 = _893 * _753;
    float _899 = (-0.0) - (_753 * _892);
    float _903 = inversesqrt(dot(vec3(_896, _897, _899), vec3(_896, _897, _899)));
    float _904 = _896 * _903;
    float _905 = _897 * _903;
    float _906 = _903 * _899;
    float _909 = (_905 * _755) - (_906 * _754);
    float _912 = (_906 * _753) - (_904 * _755);
    float _915 = (_904 * _754) - (_905 * _753);
    float _917;
    float _925;
    float _916 = 0.0;
    uint _918 = 0u;
    float _922;
    bool _924;
    for (;;)
    {
        _922 = (float(_918) + _796) * 0.03125;
        _924 = _918 == 0u;
        float frontier_phi_41_pred;
        if (_924)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1048;
            float _1049;
            uint _1051;
            _1048 = 0.0;
            _1049 = 0.5;
            _1051 = _918;
            float _926;
            for (;;)
            {
                _926 = ((_1051 & 1u) != 0u) ? (_1049 + _1048) : _1048;
                uint _1052 = _1051 >> 1u;
                if (_1052 == 0u)
                {
                    break;
                }
                else
                {
                    _1048 = _926;
                    _1049 *= 0.5;
                    _1051 = _1052;
                }
            }
            frontier_phi_41_pred = _926;
        }
        _925 = frontier_phi_41_pred;
        float _927 = _925 + _809;
        float _931 = sqrt(_922);
        float _932 = ((_927 > 1.0) ? (_927 + (-1.0)) : _927) * 6.283185482025146484375;
        float _935 = cos(_932) * _931;
        float _937 = sin(_932) * _931;
        float _939 = sqrt(1.0 - _922);
        float _952 = ((_939 * _753) + (_935 * _909)) + (_937 * _904);
        float _953 = ((_939 * _754) + (_935 * _912)) + (_937 * _905);
        float _954 = ((_939 * _755) + (_935 * _915)) + (_937 * _906);
        _64._m0 = 1u;
        uvec4 _958 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _959 = _958.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _959, _958.w, _959, vec3(_767, _768, _769), 9.9999997473787516355514526367188e-05, vec3(_952, _953, _954), 10000.0, 1);
        float _965 = dot(vec3(_753, _754, _755), vec3(_952, _953, _954));
        float _1182 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _968 = isnan(1.0) ? _1182 : (isnan(_1182) ? 1.0 : min(_1182, 1.0));
        _917 = ((float(_64._m0 == 0u) * _968) / (_968 * 0.3183098733425140380859375)) + _916;
        uint _919 = _918 + 1u;
        if (_919 == 32u)
        {
            break;
        }
        else
        {
            _916 = _917;
            _918 = _919;
            continue;
        }
    }
    float _977 = _917 * 0.009947183541953563690185546875;
    float _982 = dot(vec3(_582, _583, _584), vec3(_753, _754, _755)) * 2.0;
    vec4 _994 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_582 - (_982 * _753), _583 - (_982 * _754), _584 - (_982 * _755)), 4.0);
    float _999 = dot(vec3(_770, _771, _772), vec3(_753, _754, _755));
    float _1193 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _1008 = (exp2(log2(1.0 - (isnan(1.0) ? _1193 : (isnan(_1193) ? 1.0 : min(_1193, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1017 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].x) * _745) + ((((((_693.x - _690) * _670) + _690) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].x) * cbMtdParam._m0[9u].x)) + _886) + ((_994.x * _977) * _1008);
    float _1020 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].y) * _745) + ((((((_693.y - _691) * _670) + _691) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].y) * cbMtdParam._m0[9u].y)) + _887) + ((_994.y * _977) * _1008);
    float _1023 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].z) * _745) + ((((((_693.z - _692) * _670) + _692) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].z) * cbMtdParam._m0[9u].z)) + _888) + ((_994.z * _977) * _1008);
    float _1204 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _1215 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    float _1226 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    bool _1031 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1042;
    _1042.x = _1031 ? ((_514 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1204 : (isnan(_1204) ? 1.0 : min(_1204, 1.0)));
    _1042.y = _1031 ? ((_517 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1215 : (isnan(_1215) ? 1.0 : min(_1215, 1.0)));
    _1042.z = _1031 ? ((_520 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1226 : (isnan(_1226) ? 1.0 : min(_1226, 1.0)));
    payload._m0 = _1042;
}


