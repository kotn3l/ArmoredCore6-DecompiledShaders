#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 2) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1505;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _165 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _166 >> 16u;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _171 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _218 = _180 == 0u;
    uint _219;
    if (_218)
    {
        _219 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _219 = frontier_phi_9_10_ladder;
    }
    uint _224 = _181 ? (_219 + 4u) : _219;
    uint _225 = _179 * _171;
    uvec4 _230 = texelFetch(l_geomAttrib_0, int(((_225 + 4u) + _224) >> 2u));
    uint _231 = _230.x;
    float _235 = float(int(uint(int(_231 << 16u) >> int(16u))));
    float _236 = float(int(uint(int(_231) >> int(16u))));
    uvec4 _240 = texelFetch(l_geomAttrib_0, int(((_225 + 8u) + _224) >> 2u));
    uint _241 = _240.x;
    uvec4 _253 = texelFetch(l_geomAttrib_0, int(((_225 + 12u) + _224) >> 2u));
    uint _254 = _253.x;
    uint _264 = (_179 * _173) + 12u;
    uint _285;
    uint _286;
    uint _287;
    uint _288;
    if (_184)
    {
        uvec4 _266 = texelFetch(l_geomAttrib_0, int(_264 >> 2u));
        uint _267 = _266.x;
        _285 = _267 & 255u;
        _286 = (_267 >> 8u) & 255u;
        _287 = (_267 >> 16u) & 255u;
        _288 = 20u;
    }
    else
    {
        uint _273 = _264 >> 2u;
        uvec2 _279 = uvec2(texelFetch(l_geomAttrib_0, int(_273)).x, texelFetch(l_geomAttrib_0, int(_273 + 1u)).x);
        uint _280 = _279.x;
        _285 = _280 & 65535u;
        _286 = _280 >> 16u;
        _287 = _279.y & 65535u;
        _288 = 24u;
    }
    uint _292;
    if (_218)
    {
        _292 = _288;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _288 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _288 + 8u;
        }
        _292 = frontier_phi_16_17_ladder;
    }
    uint _296 = _181 ? (_292 + 4u) : _292;
    uint _297 = _179 * _173;
    uvec4 _301 = texelFetch(l_geomAttrib_0, int(((_297 + 4u) + _296) >> 2u));
    uint _302 = _301.x;
    float _306 = float(int(uint(int(_302 << 16u) >> int(16u))));
    float _307 = float(int(uint(int(_302) >> int(16u))));
    uvec4 _311 = texelFetch(l_geomAttrib_0, int(((_297 + 8u) + _296) >> 2u));
    uint _312 = _311.x;
    uvec4 _324 = texelFetch(l_geomAttrib_0, int(((_297 + 12u) + _296) >> 2u));
    uint _325 = _324.x;
    uint _335 = (_179 * _174) + 12u;
    uint _356;
    uint _357;
    uint _358;
    uint _359;
    if (_184)
    {
        uvec4 _337 = texelFetch(l_geomAttrib_0, int(_335 >> 2u));
        uint _338 = _337.x;
        _356 = _338 & 255u;
        _357 = (_338 >> 8u) & 255u;
        _358 = (_338 >> 16u) & 255u;
        _359 = 20u;
    }
    else
    {
        uint _344 = _335 >> 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomAttrib_0, int(_344)).x, texelFetch(l_geomAttrib_0, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _356 = _351 & 65535u;
        _357 = _351 >> 16u;
        _358 = _350.y & 65535u;
        _359 = 24u;
    }
    uint _363;
    if (_218)
    {
        _363 = _359;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _359 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _359 + 8u;
        }
        _363 = frontier_phi_23_24_ladder;
    }
    uint _367 = _181 ? (_363 + 4u) : _363;
    uint _368 = _179 * _174;
    uvec4 _372 = texelFetch(l_geomAttrib_0, int(((_368 + 4u) + _367) >> 2u));
    uint _373 = _372.x;
    float _377 = float(int(uint(int(_373 << 16u) >> int(16u))));
    float _378 = float(int(uint(int(_373) >> int(16u))));
    uvec4 _382 = texelFetch(l_geomAttrib_0, int(((_368 + 8u) + _367) >> 2u));
    uint _383 = _382.x;
    uvec4 _395 = texelFetch(l_geomAttrib_0, int(((_368 + 12u) + _367) >> 2u));
    uint _396 = _395.x;
    bool _406 = _130.z == 0u;
    float _442;
    float _443;
    float _444;
    if (_406)
    {
        uint _409 = _171 * 3u;
        uvec3 _418 = uvec3(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_409 + 2u)).x);
        _442 = uintBitsToFloat(_418.x);
        _443 = uintBitsToFloat(_418.y);
        _444 = uintBitsToFloat(_418.z);
    }
    else
    {
        uint _426 = _171 * 2u;
        uvec2 _432 = uvec2(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x);
        uint _433 = _432.x;
        _442 = unpackHalf2x16(_433).x;
        _443 = unpackHalf2x16(_433 >> 16u).x;
        _444 = unpackHalf2x16(_432.y).x;
    }
    float _480;
    float _481;
    float _482;
    if (_406)
    {
        uint _447 = _173 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _173 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _518;
    float _519;
    float _520;
    if (_406)
    {
        uint _485 = _174 * 3u;
        uvec3 _494 = uvec3(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_485 + 2u)).x);
        _518 = uintBitsToFloat(_494.x);
        _519 = uintBitsToFloat(_494.y);
        _520 = uintBitsToFloat(_494.z);
    }
    else
    {
        uint _502 = _174 * 2u;
        uvec2 _508 = uvec2(texelFetch(l_geomPositionBuffer, int(_502)).x, texelFetch(l_geomPositionBuffer, int(_502 + 1u)).x);
        uint _509 = _508.x;
        _518 = unpackHalf2x16(_509).x;
        _519 = unpackHalf2x16(_509 >> 16u).x;
        _520 = unpackHalf2x16(_508.y).x;
    }
    float _523 = (1.0 - hit._m0.x) - hit._m0.y;
    float _582 = (_306 - _235) * 0.00048828125;
    float _584 = (_307 - _236) * 0.00048828125;
    float _587 = (_377 - _235) * 0.00048828125;
    float _588 = (_378 - _236) * 0.00048828125;
    float _610 = _480 - _442;
    float _611 = _481 - _443;
    float _612 = _482 - _444;
    float _615 = fma(_612, gl_ObjectToWorldEXT[2u].x, fma(_611, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _610));
    float _618 = fma(_612, gl_ObjectToWorldEXT[2u].y, fma(_611, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _610));
    float _621 = fma(_612, gl_ObjectToWorldEXT[2u].z, fma(_611, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _610));
    float _622 = _518 - _442;
    float _623 = _519 - _443;
    float _624 = _520 - _444;
    float _627 = fma(_624, gl_ObjectToWorldEXT[2u].x, fma(_623, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _622));
    float _630 = fma(_624, gl_ObjectToWorldEXT[2u].y, fma(_623, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _622));
    float _633 = fma(_624, gl_ObjectToWorldEXT[2u].z, fma(_623, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _622));
    float _634 = (((_306 * hit._m0.x) + (_235 * _523)) + (_377 * hit._m0.y)) * 0.00048828125;
    float _635 = (((_307 * hit._m0.x) + (_236 * _523)) + (_378 * hit._m0.y)) * 0.00048828125;
    float _639 = (((float(_210) * _523) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _642 = (((float(_211) * _523) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_357) * hit._m0.y);
    float _645 = (((float(_212) * _523) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_358) * hit._m0.y);
    float _646 = _639 * 0.0078740157186985015869140625;
    float _648 = _642 * 0.0078740157186985015869140625;
    float _649 = _645 * 0.0078740157186985015869140625;
    float _659 = cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x;
    float _662 = (_659 * cbMtdParam._m0[21u].z) + _634;
    float _663 = (_659 * cbMtdParam._m0[21u].w) + _635;
    float _685 = (cbTextureTilingScale._m0[2u].x * ((cbMtdParam._m0[20u].z * cbPerFrame._m0[22u].x) + _634)) + cbTextureTilingScale._m0[2u].z;
    float _686 = (cbTextureTilingScale._m0[2u].y * ((cbMtdParam._m0[20u].w * cbPerFrame._m0[22u].x) + _635)) + cbTextureTilingScale._m0[2u].w;
    uvec2 _688 = uvec2(textureSize(S_PC_LG_M_5510_Booster_snp_0_Texture2D_2, int(0u)));
    bool _693 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _746;
    if (_693)
    {
        float _704 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _710 = (_633 * _618) - (_630 * _621);
        float _713 = (_627 * _621) - (_633 * _615);
        float _716 = (_630 * _615) - (_627 * _618);
        float _743 = ((log2((((float(_688.y) * 0.5) * float(_688.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_713 * _713) + (_716 * _716)) + (_710 * _710)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_704 * gl_WorldRayDirectionEXT.x, _704 * gl_WorldRayDirectionEXT.y, _704 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _746 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    }
    else
    {
        _746 = 0.0;
    }
    vec4 _750 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_2, SS_WrapLinear), vec2(_685, _686), _746);
    float _755 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[18u].x;
    float _761 = ((_750.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].y;
    float _763 = (-0.0) - (cbMtdParam._m0[18u].y * ((_750.x * 0.5) + (-0.25)));
    float _765 = fract(_755);
    float _767 = fract(_755 + 0.5);
    float _779 = abs((_765 * 2.0) + (-1.0));
    vec4 _797 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_765 * _763) + _662) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_761 * _765) + _663) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _799 = _797.x;
    float _800 = _797.y;
    float _801 = _797.z;
    vec4 _802 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_767 * _763) + _662) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_761 * _767) + _663) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _820 = (cbMtdParam._m0[21u].x * _659) + _634;
    float _821 = (cbMtdParam._m0[21u].y * _659) + _635;
    float _872;
    if (_693)
    {
        float _832 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _838 = (_633 * _618) - (_630 * _621);
        float _841 = (_627 * _621) - (_633 * _615);
        float _844 = (_630 * _615) - (_627 * _618);
        float _870 = ((log2((((float(_688.y) * 0.5) * float(_688.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_841 * _841) + (_844 * _844)) + (_838 * _838)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_832 * gl_WorldRayDirectionEXT.x, _832 * gl_WorldRayDirectionEXT.y, _832 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _872 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    }
    else
    {
        _872 = 0.0;
    }
    vec4 _874 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_2, SS_WrapLinear), vec2(_685, _686), _872);
    float _882 = ((_874.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].y;
    float _884 = (-0.0) - (cbMtdParam._m0[18u].y * ((_874.x * 0.5) + (-0.25)));
    vec4 _909 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_765 * _884) + _820) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_882 * _765) + _821) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _911 = _909.x;
    float _912 = _909.y;
    float _913 = _909.z;
    vec4 _914 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_767 * _884) + _820) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_882 * _767) + _821) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _940 = cbMtdParam._m0[10u].x * (((_914.x - _911) * _779) + _911);
    float _941 = cbMtdParam._m0[10u].y * (((_914.y - _912) * _779) + _912);
    float _942 = cbMtdParam._m0[10u].z * (((_914.z - _913) * _779) + _913);
    float _957 = (((((float(_325 & 255u) * hit._m0.x) + (float(_254 & 255u) * _523)) + (float(_396 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * ((cbMtdParam._m0[12u].x * (((_802.x - _799) * _779) + _799)) - _940)) + _940;
    float _958 = (((((float((_325 >> 8u) & 255u) * hit._m0.x) + (float((_254 >> 8u) & 255u) * _523)) + (float((_396 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * ((cbMtdParam._m0[12u].y * (((_802.y - _800) * _779) + _800)) - _941)) + _941;
    float _959 = (((((float((_325 >> 16u) & 255u) * hit._m0.x) + (float((_254 >> 16u) & 255u) * _523)) + (float((_396 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * ((cbMtdParam._m0[12u].z * (((_802.z - _801) * _779) + _801)) - _942)) + _942;
    float _966 = (((((float(_312 & 255u) * hit._m0.x) + (float(_241 & 255u) * _523)) + (float(_383 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[9u].x - _957)) + _957;
    float _967 = (((((float((_312 >> 8u) & 255u) * hit._m0.x) + (float((_241 >> 8u) & 255u) * _523)) + (float((_383 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[9u].y - _958)) + _958;
    float _968 = (((((float((_312 >> 16u) & 255u) * hit._m0.x) + (float((_241 >> 16u) & 255u) * _523)) + (float((_383 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[9u].z - _959)) + _959;
    float _981 = (cbMtdParam._m0[22u].z * _659) + _634;
    float _982 = (cbMtdParam._m0[22u].w * _659) + _635;
    float _1033;
    if (_693)
    {
        float _993 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _999 = (_633 * _618) - (_630 * _621);
        float _1002 = (_627 * _621) - (_633 * _615);
        float _1005 = (_630 * _615) - (_627 * _618);
        float _1031 = ((log2((((float(_688.y) * 0.5) * float(_688.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_1002 * _1002) + (_1005 * _1005)) + (_999 * _999)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_993 * gl_WorldRayDirectionEXT.x, _993 * gl_WorldRayDirectionEXT.y, _993 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1033 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    }
    else
    {
        _1033 = 0.0;
    }
    vec4 _1035 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_2, SS_WrapLinear), vec2(_685, _686), _1033);
    float _1043 = ((_1035.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].y;
    float _1045 = (-0.0) - (cbMtdParam._m0[18u].y * ((_1035.x * 0.5) + (-0.25)));
    vec4 _1070 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_765 * _1045) + _981) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1043 * _765) + _982) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1072 = _1070.x;
    float _1073 = _1070.y;
    float _1074 = _1070.z;
    vec4 _1075 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_767 * _1045) + _981) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1043 * _767) + _982) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1096 = (cbMtdParam._m0[22u].x * _659) + _634;
    float _1097 = (cbMtdParam._m0[22u].y * _659) + _635;
    float _1101 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1102 = _1101 * gl_WorldRayDirectionEXT.x;
    float _1103 = _1101 * gl_WorldRayDirectionEXT.y;
    float _1104 = _1101 * gl_WorldRayDirectionEXT.z;
    float _1148;
    if (_693)
    {
        float _1114 = (_633 * _618) - (_630 * _621);
        float _1117 = (_627 * _621) - (_633 * _615);
        float _1120 = (_630 * _615) - (_627 * _618);
        float _1146 = ((log2((((float(_688.y) * 0.5) * float(_688.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_1117 * _1117) + (_1120 * _1120)) + (_1114 * _1114)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1102, _1103, _1104), vec3(_646, _648, _649))));
        _1148 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    }
    else
    {
        _1148 = 0.0;
    }
    vec4 _1150 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_2, SS_WrapLinear), vec2(_685, _686), _1148);
    float _1158 = ((_1150.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].y;
    float _1160 = (-0.0) - (cbMtdParam._m0[18u].y * ((_1150.x * 0.5) + (-0.25)));
    vec4 _1186 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_765 * _1160) + _1096) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1158 * _765) + _1097) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1188 = _1186.x;
    float _1194 = ((textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_767 * _1160) + _1096) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1158 * _767) + _1097) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0).x - _1188) * _779) + _1188;
    float _1218 = inversesqrt(dot(vec3(_646, _648, _649), vec3(_646, _648, _649)));
    float _1219 = _1218 * _646;
    float _1220 = _1218 * _648;
    float _1221 = _1218 * _649;
    float _1233 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1234 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1235 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1236 = (-0.0) - _1102;
    float _1237 = (-0.0) - _1103;
    float _1238 = (-0.0) - _1104;
    float _1244 = float(gl_LaunchIDEXT.x);
    float _1245 = float(gl_LaunchIDEXT.y);
    float _1248 = float(gl_LaunchSizeEXT.x);
    float _1262 = fract(fract(sin(dot(vec2(_1244 / _1248, _1245 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1275 = fract(fract(sin(dot(vec2((_1244 + 128.0) / _1248, (_1245 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _1285 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1286 = _1285.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1286, _1285.w, _1286, vec3(_1233, _1234, _1235), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1351;
    float _1352;
    float _1353;
    if (_68._m0 == 0u)
    {
        float _1306 = g_sceneCB._m0[4u].x - _1102;
        float _1307 = g_sceneCB._m0[4u].y - _1103;
        float _1308 = g_sceneCB._m0[4u].z - _1104;
        float _1312 = inversesqrt(dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308)));
        float _1316 = dot(vec3(_1219, _1220, _1221), vec3(g_sceneCB._m0[4u].xyz));
        float _1605 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1319 = isnan(1.0) ? _1605 : (isnan(_1605) ? 1.0 : min(_1605, 1.0));
        float _1320 = dot(vec3(_1219, _1220, _1221), vec3(_1236, _1237, _1238));
        float _1616 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1324 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1306 * _1312, _1307 * _1312, _1308 * _1312));
        float _1627 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1335 = (exp2(log2(1.0 - (isnan(1.0) ? _1627 : (isnan(_1627) ? 1.0 : min(_1627, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1341 = (0.5 / ((_1319 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1616 : (isnan(_1616) ? 1.0 : min(_1616, 1.0))))) * _1319;
        float _1638 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
        float _1343 = (isnan(1.0) ? _1638 : (isnan(_1638) ? 1.0 : min(_1638, 1.0))) * 0.31831014156341552734375;
        _1351 = (_1335 * g_sceneCB._m0[5u].x) * _1343;
        _1352 = (_1335 * g_sceneCB._m0[5u].y) * _1343;
        _1353 = (_1335 * g_sceneCB._m0[5u].z) * _1343;
    }
    else
    {
        _1351 = 0.0;
        _1352 = 0.0;
        _1353 = 0.0;
    }
    bool _1355 = abs(_1220) < 0.89999997615814208984375;
    float _1357 = float(_1355);
    float _1358 = _1355 ? 0.0 : 1.0;
    float _1361 = (_1357 * _1221) - (_1358 * _1220);
    float _1362 = _1358 * _1219;
    float _1364 = (-0.0) - (_1219 * _1357);
    float _1368 = inversesqrt(dot(vec3(_1361, _1362, _1364), vec3(_1361, _1362, _1364)));
    float _1369 = _1361 * _1368;
    float _1370 = _1362 * _1368;
    float _1371 = _1368 * _1364;
    float _1374 = (_1370 * _1221) - (_1371 * _1220);
    float _1377 = (_1371 * _1219) - (_1369 * _1221);
    float _1380 = (_1369 * _1220) - (_1370 * _1219);
    float _1382;
    float _1390;
    float _1381 = 0.0;
    uint _1383 = 0u;
    float _1387;
    bool _1389;
    for (;;)
    {
        _1387 = (float(_1383) + _1262) * 0.03125;
        _1389 = _1383 == 0u;
        float frontier_phi_47_pred;
        if (_1389)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1510;
            float _1511;
            uint _1513;
            _1510 = 0.0;
            _1511 = 0.5;
            _1513 = _1383;
            float _1391;
            for (;;)
            {
                _1391 = ((_1513 & 1u) != 0u) ? (_1511 + _1510) : _1510;
                uint _1514 = _1513 >> 1u;
                if (_1514 == 0u)
                {
                    break;
                }
                else
                {
                    _1510 = _1391;
                    _1511 *= 0.5;
                    _1513 = _1514;
                }
            }
            frontier_phi_47_pred = _1391;
        }
        _1390 = frontier_phi_47_pred;
        float _1392 = _1390 + _1275;
        float _1396 = sqrt(_1387);
        float _1397 = ((_1392 > 1.0) ? (_1392 + (-1.0)) : _1392) * 6.283185482025146484375;
        float _1400 = cos(_1397) * _1396;
        float _1402 = sin(_1397) * _1396;
        float _1404 = sqrt(1.0 - _1387);
        float _1417 = ((_1404 * _1219) + (_1400 * _1374)) + (_1402 * _1369);
        float _1418 = ((_1404 * _1220) + (_1400 * _1377)) + (_1402 * _1370);
        float _1419 = ((_1404 * _1221) + (_1400 * _1380)) + (_1402 * _1371);
        _67._m0 = 1u;
        uvec4 _1423 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1424 = _1423.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1424, _1423.w, _1424, vec3(_1233, _1234, _1235), 9.9999997473787516355514526367188e-05, vec3(_1417, _1418, _1419), 10000.0, 1);
        float _1430 = dot(vec3(_1219, _1220, _1221), vec3(_1417, _1418, _1419));
        float _1649 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1433 = isnan(1.0) ? _1649 : (isnan(_1649) ? 1.0 : min(_1649, 1.0));
        _1382 = ((float(_67._m0 == 0u) * _1433) / (_1433 * 0.3183098733425140380859375)) + _1381;
        uint _1384 = _1383 + 1u;
        if (_1384 == 32u)
        {
            break;
        }
        else
        {
            _1381 = _1382;
            _1383 = _1384;
            continue;
        }
    }
    float _1442 = _1382 * 0.009947183541953563690185546875;
    float _1447 = dot(vec3(_1102, _1103, _1104), vec3(_1219, _1220, _1221)) * 2.0;
    vec4 _1459 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1102 - (_1447 * _1219), _1103 - (_1447 * _1220), _1104 - (_1447 * _1221)), 4.0);
    float _1464 = dot(vec3(_1236, _1237, _1238), vec3(_1219, _1220, _1221));
    float _1660 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
    float _1473 = (exp2(log2(1.0 - (isnan(1.0) ? _1660 : (isnan(_1660) ? 1.0 : min(_1660, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1481 = (_1351 + ((((cbMtdParam._m0[19u].x * (((((_1075.x - _1072) * _779) + _1072) * cbMtdParam._m0[13u].x) - _966)) * _1194) + _966) * cbMtdParam._m0[18u].z)) + ((_1459.x * _1442) * _1473);
    float _1483 = (_1352 + ((((cbMtdParam._m0[19u].x * (((((_1075.y - _1073) * _779) + _1073) * cbMtdParam._m0[13u].y) - _967)) * _1194) + _967) * cbMtdParam._m0[18u].z)) + ((_1459.y * _1442) * _1473);
    float _1485 = (_1353 + ((((cbMtdParam._m0[19u].x * (((((_1075.z - _1074) * _779) + _1074) * cbMtdParam._m0[13u].z) - _968)) * _1194) + _968) * cbMtdParam._m0[18u].z)) + ((_1459.z * _1442) * _1473);
    float _1671 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
    float _1682 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
    float _1693 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    bool _1493 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1504;
    _1504.x = _1493 ? ((_639 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1671 : (isnan(_1671) ? 1.0 : min(_1671, 1.0)));
    _1504.y = _1493 ? ((_642 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1682 : (isnan(_1682) ? 1.0 : min(_1682, 1.0)));
    _1504.z = _1493 ? ((_645 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1693 : (isnan(_1693) ? 1.0 : min(_1693, 1.0)));
    payload._m0 = _1504;
}


