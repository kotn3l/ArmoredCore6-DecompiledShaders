#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _1003;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _153 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _154 >> 16u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        _159 = frontier_phi_3_2_ladder_2;
        _161 = frontier_phi_3_2_ladder_1;
        _162 = frontier_phi_3_2_ladder;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _166.z;
    bool _169 = _168 != 0u;
    bool _171 = _118.w == 0u;
    bool _172 = _169 || _171;
    uint _174 = (_167 * _159) + 12u;
    uint _198;
    uint _199;
    uint _200;
    uint _201;
    if (_172)
    {
        uvec4 _177 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _178 = _177.x;
        _198 = _178 & 255u;
        _199 = (_178 >> 8u) & 255u;
        _200 = (_178 >> 16u) & 255u;
        _201 = 20u;
    }
    else
    {
        uint _186 = _174 >> 2u;
        uvec2 _192 = uvec2(texelFetch(l_geomAttrib_0, int(_186)).x, texelFetch(l_geomAttrib_0, int(_186 + 1u)).x);
        uint _193 = _192.x;
        _198 = _193 & 65535u;
        _199 = _193 >> 16u;
        _200 = _192.y & 65535u;
        _201 = 24u;
    }
    bool _207 = _168 == 0u;
    uint _208;
    if (_207)
    {
        _208 = _201;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_171)
        {
            frontier_phi_9_10_ladder = _201 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _201 + 8u;
        }
        _208 = frontier_phi_9_10_ladder;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((((_167 * _159) + 4u) + (_169 ? (_208 + 4u) : _208)) >> 2u));
    uint _220 = _219.x;
    float _224 = float(int(uint(int(_220 << 16u) >> int(16u))));
    float _225 = float(int(uint(int(_220) >> int(16u))));
    uint _227 = (_167 * _161) + 12u;
    uint _248;
    uint _249;
    uint _250;
    uint _251;
    if (_172)
    {
        uvec4 _229 = texelFetch(l_geomAttrib_0, int(_227 >> 2u));
        uint _230 = _229.x;
        _248 = _230 & 255u;
        _249 = (_230 >> 8u) & 255u;
        _250 = (_230 >> 16u) & 255u;
        _251 = 20u;
    }
    else
    {
        uint _236 = _227 >> 2u;
        uvec2 _242 = uvec2(texelFetch(l_geomAttrib_0, int(_236)).x, texelFetch(l_geomAttrib_0, int(_236 + 1u)).x);
        uint _243 = _242.x;
        _248 = _243 & 65535u;
        _249 = _243 >> 16u;
        _250 = _242.y & 65535u;
        _251 = 24u;
    }
    uint _255;
    if (_207)
    {
        _255 = _251;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_171)
        {
            frontier_phi_16_17_ladder = _251 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _251 + 8u;
        }
        _255 = frontier_phi_16_17_ladder;
    }
    uvec4 _264 = texelFetch(l_geomAttrib_0, int((((_167 * _161) + 4u) + (_169 ? (_255 + 4u) : _255)) >> 2u));
    uint _265 = _264.x;
    float _269 = float(int(uint(int(_265 << 16u) >> int(16u))));
    float _270 = float(int(uint(int(_265) >> int(16u))));
    uint _272 = (_167 * _162) + 12u;
    uint _293;
    uint _294;
    uint _295;
    uint _296;
    if (_172)
    {
        uvec4 _274 = texelFetch(l_geomAttrib_0, int(_272 >> 2u));
        uint _275 = _274.x;
        _293 = _275 & 255u;
        _294 = (_275 >> 8u) & 255u;
        _295 = (_275 >> 16u) & 255u;
        _296 = 20u;
    }
    else
    {
        uint _281 = _272 >> 2u;
        uvec2 _287 = uvec2(texelFetch(l_geomAttrib_0, int(_281)).x, texelFetch(l_geomAttrib_0, int(_281 + 1u)).x);
        uint _288 = _287.x;
        _293 = _288 & 65535u;
        _294 = _288 >> 16u;
        _295 = _287.y & 65535u;
        _296 = 24u;
    }
    uint _300;
    if (_207)
    {
        _300 = _296;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_171)
        {
            frontier_phi_23_24_ladder = _296 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _296 + 8u;
        }
        _300 = frontier_phi_23_24_ladder;
    }
    uvec4 _309 = texelFetch(l_geomAttrib_0, int((((_167 * _162) + 4u) + (_169 ? (_300 + 4u) : _300)) >> 2u));
    uint _310 = _309.x;
    float _314 = float(int(uint(int(_310 << 16u) >> int(16u))));
    float _315 = float(int(uint(int(_310) >> int(16u))));
    bool _317 = _118.z == 0u;
    float _353;
    float _354;
    float _355;
    if (_317)
    {
        uint _320 = _159 * 3u;
        uvec3 _329 = uvec3(texelFetch(l_geomPositionBuffer, int(_320)).x, texelFetch(l_geomPositionBuffer, int(_320 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_320 + 2u)).x);
        _353 = uintBitsToFloat(_329.x);
        _354 = uintBitsToFloat(_329.y);
        _355 = uintBitsToFloat(_329.z);
    }
    else
    {
        uint _337 = _159 * 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomPositionBuffer, int(_337)).x, texelFetch(l_geomPositionBuffer, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _353 = unpackHalf2x16(_344).x;
        _354 = unpackHalf2x16(_344 >> 16u).x;
        _355 = unpackHalf2x16(_343.y).x;
    }
    float _391;
    float _392;
    float _393;
    if (_317)
    {
        uint _358 = _161 * 3u;
        uvec3 _367 = uvec3(texelFetch(l_geomPositionBuffer, int(_358)).x, texelFetch(l_geomPositionBuffer, int(_358 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_358 + 2u)).x);
        _391 = uintBitsToFloat(_367.x);
        _392 = uintBitsToFloat(_367.y);
        _393 = uintBitsToFloat(_367.z);
    }
    else
    {
        uint _375 = _161 * 2u;
        uvec2 _381 = uvec2(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x);
        uint _382 = _381.x;
        _391 = unpackHalf2x16(_382).x;
        _392 = unpackHalf2x16(_382 >> 16u).x;
        _393 = unpackHalf2x16(_381.y).x;
    }
    float _429;
    float _430;
    float _431;
    if (_317)
    {
        uint _396 = _162 * 3u;
        uvec3 _405 = uvec3(texelFetch(l_geomPositionBuffer, int(_396)).x, texelFetch(l_geomPositionBuffer, int(_396 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_396 + 2u)).x);
        _429 = uintBitsToFloat(_405.x);
        _430 = uintBitsToFloat(_405.y);
        _431 = uintBitsToFloat(_405.z);
    }
    else
    {
        uint _413 = _162 * 2u;
        uvec2 _419 = uvec2(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x);
        uint _420 = _419.x;
        _429 = unpackHalf2x16(_420).x;
        _430 = unpackHalf2x16(_420 >> 16u).x;
        _431 = unpackHalf2x16(_419.y).x;
    }
    float _434 = (1.0 - hit._m0.x) - hit._m0.y;
    float _456 = (_269 - _224) * 0.00048828125;
    float _458 = (_270 - _225) * 0.00048828125;
    float _461 = (_314 - _224) * 0.00048828125;
    float _462 = (_315 - _225) * 0.00048828125;
    float _484 = _391 - _353;
    float _485 = _392 - _354;
    float _486 = _393 - _355;
    float _489 = fma(_486, gl_ObjectToWorldEXT[2u].x, fma(_485, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _484));
    float _492 = fma(_486, gl_ObjectToWorldEXT[2u].y, fma(_485, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _484));
    float _495 = fma(_486, gl_ObjectToWorldEXT[2u].z, fma(_485, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _484));
    float _496 = _429 - _353;
    float _497 = _430 - _354;
    float _498 = _431 - _355;
    float _501 = fma(_498, gl_ObjectToWorldEXT[2u].x, fma(_497, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _496));
    float _504 = fma(_498, gl_ObjectToWorldEXT[2u].y, fma(_497, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _496));
    float _507 = fma(_498, gl_ObjectToWorldEXT[2u].z, fma(_497, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _496));
    float _508 = (((_269 * hit._m0.x) + (_224 * _434)) + (_314 * hit._m0.y)) * 0.00048828125;
    float _509 = (((_270 * hit._m0.x) + (_225 * _434)) + (_315 * hit._m0.y)) * 0.00048828125;
    float _513 = (((float(_198) * _434) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _516 = (((float(_199) * _434) + (-127.0)) + (float(_249) * hit._m0.x)) + (float(_294) * hit._m0.y);
    float _519 = (((float(_200) * _434) + (-127.0)) + (float(_250) * hit._m0.x)) + (float(_295) * hit._m0.y);
    float _520 = _513 * 0.0078740157186985015869140625;
    float _522 = _516 * 0.0078740157186985015869140625;
    float _523 = _519 * 0.0078740157186985015869140625;
    uvec2 _535 = uvec2(textureSize(M_A_Edge_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _540 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _593;
    if (_540)
    {
        float _551 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _557 = (_507 * _492) - (_504 * _495);
        float _560 = (_501 * _495) - (_507 * _489);
        float _563 = (_504 * _489) - (_501 * _492);
        float _590 = ((log2((((float(_535.y) * 0.5) * float(_535.x)) * abs((_462 * _456) - (_461 * _458))) / (sqrt(((_560 * _560) + (_563 * _563)) + (_557 * _557)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_551 * gl_WorldRayDirectionEXT.x, _551 * gl_WorldRayDirectionEXT.y, _551 * gl_WorldRayDirectionEXT.z), vec3(_520, _522, _523))));
        _593 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    }
    else
    {
        _593 = 0.0;
    }
    vec4 _597 = textureLod(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _508) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _509) + cbTextureTilingScale._m0[0u].w), _593);
    float _599 = _597.x;
    float _600 = _597.y;
    float _601 = _597.z;
    uvec2 _617 = uvec2(textureSize(M_A_Edge_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _621 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _622 = _621 * gl_WorldRayDirectionEXT.x;
    float _623 = _621 * gl_WorldRayDirectionEXT.y;
    float _624 = _621 * gl_WorldRayDirectionEXT.z;
    float _668;
    if (_540)
    {
        float _634 = (_507 * _492) - (_504 * _495);
        float _637 = (_501 * _495) - (_507 * _489);
        float _640 = (_504 * _489) - (_501 * _492);
        float _666 = ((log2((((float(_617.y) * 0.5) * float(_617.x)) * abs((_462 * _456) - (_461 * _458))) / (sqrt(((_637 * _637) + (_640 * _640)) + (_634 * _634)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_622, _623, _624), vec3(_520, _522, _523))));
        _668 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    }
    else
    {
        _668 = 0.0;
    }
    vec4 _670 = textureLod(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _508) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _509) + cbTextureTilingScale._m0[1u].w), _668);
    float _681 = inversesqrt(dot(vec3(_520, _522, _523), vec3(_520, _522, _523)));
    float _682 = _681 * _520;
    float _683 = _681 * _522;
    float _684 = _681 * _523;
    float _696 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _697 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _698 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _699 = (-0.0) - _622;
    float _701 = (-0.0) - _623;
    float _702 = (-0.0) - _624;
    float _708 = float(gl_LaunchIDEXT.x);
    float _709 = float(gl_LaunchIDEXT.y);
    float _712 = float(gl_LaunchSizeEXT.x);
    float _726 = fract(fract(sin(dot(vec2(_708 / _712, _709 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _739 = fract(fract(sin(dot(vec2((_708 + 128.0) / _712, (_709 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _60._m0 = 1u;
    uvec4 _749 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _750 = _749.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _750, _749.w, _750, vec3(_696, _697, _698), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _830;
    float _831;
    float _832;
    float _833;
    float _834;
    float _835;
    if (_60._m0 == 0u)
    {
        float _771 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_682, _683, _684));
        float _1089 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        float _774 = isnan(1.0) ? _1089 : (isnan(_1089) ? 1.0 : min(_1089, 1.0));
        float _785 = g_sceneCB._m0[4u].x - _622;
        float _786 = g_sceneCB._m0[4u].y - _623;
        float _787 = g_sceneCB._m0[4u].z - _624;
        float _791 = inversesqrt(dot(vec3(_785, _786, _787), vec3(_785, _786, _787)));
        float _795 = dot(vec3(_682, _683, _684), vec3(g_sceneCB._m0[4u].xyz));
        float _1100 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
        float _798 = isnan(1.0) ? _1100 : (isnan(_1100) ? 1.0 : min(_1100, 1.0));
        float _799 = dot(vec3(_682, _683, _684), vec3(_699, _701, _702));
        float _1111 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
        float _803 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_785 * _791, _786 * _791, _787 * _791));
        float _1122 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
        float _814 = (exp2(log2(1.0 - (isnan(1.0) ? _1122 : (isnan(_1122) ? 1.0 : min(_1122, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _820 = (0.5 / ((_798 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1111 : (isnan(_1111) ? 1.0 : min(_1111, 1.0))))) * _798;
        float _1133 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
        float _822 = (isnan(1.0) ? _1133 : (isnan(_1133) ? 1.0 : min(_1133, 1.0))) * 0.31831014156341552734375;
        _830 = ((_599 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _774;
        _831 = ((_600 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _774;
        _832 = ((_601 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _774;
        _833 = (_814 * g_sceneCB._m0[5u].x) * _822;
        _834 = (_814 * g_sceneCB._m0[5u].y) * _822;
        _835 = (_814 * g_sceneCB._m0[5u].z) * _822;
    }
    else
    {
        _830 = 0.0;
        _831 = 0.0;
        _832 = 0.0;
        _833 = 0.0;
        _834 = 0.0;
        _835 = 0.0;
    }
    bool _837 = abs(_683) < 0.89999997615814208984375;
    float _839 = float(_837);
    float _840 = _837 ? 0.0 : 1.0;
    float _843 = (_839 * _684) - (_840 * _683);
    float _844 = _840 * _682;
    float _846 = (-0.0) - (_682 * _839);
    float _850 = inversesqrt(dot(vec3(_843, _844, _846), vec3(_843, _844, _846)));
    float _851 = _843 * _850;
    float _852 = _844 * _850;
    float _853 = _850 * _846;
    float _856 = (_852 * _684) - (_853 * _683);
    float _859 = (_853 * _682) - (_851 * _684);
    float _862 = (_851 * _683) - (_852 * _682);
    float _864;
    float _872;
    float _863 = 0.0;
    uint _865 = 0u;
    float _869;
    bool _871;
    for (;;)
    {
        _869 = (float(_865) + _726) * 0.03125;
        _871 = _865 == 0u;
        float frontier_phi_43_pred;
        if (_871)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1008;
            float _1009;
            uint _1011;
            _1008 = 0.0;
            _1009 = 0.5;
            _1011 = _865;
            float _873;
            for (;;)
            {
                _873 = ((_1011 & 1u) != 0u) ? (_1009 + _1008) : _1008;
                uint _1012 = _1011 >> 1u;
                if (_1012 == 0u)
                {
                    break;
                }
                else
                {
                    _1008 = _873;
                    _1009 *= 0.5;
                    _1011 = _1012;
                }
            }
            frontier_phi_43_pred = _873;
        }
        _872 = frontier_phi_43_pred;
        float _874 = _872 + _739;
        float _879 = sqrt(_869);
        float _880 = ((_874 > 1.0) ? (_874 + (-1.0)) : _874) * 6.283185482025146484375;
        float _883 = cos(_880) * _879;
        float _885 = sin(_880) * _879;
        float _887 = sqrt(1.0 - _869);
        float _900 = ((_887 * _682) + (_883 * _856)) + (_885 * _851);
        float _901 = ((_887 * _683) + (_883 * _859)) + (_885 * _852);
        float _902 = ((_887 * _684) + (_883 * _862)) + (_885 * _853);
        _59._m0 = 1u;
        uvec4 _906 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _907 = _906.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _907, _906.w, _907, vec3(_696, _697, _698), 9.9999997473787516355514526367188e-05, vec3(_900, _901, _902), 10000.0, 1);
        float _913 = dot(vec3(_682, _683, _684), vec3(_900, _901, _902));
        float _1144 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
        float _916 = isnan(1.0) ? _1144 : (isnan(_1144) ? 1.0 : min(_1144, 1.0));
        _864 = ((float(_59._m0 == 0u) * _916) / (_916 * 0.3183098733425140380859375)) + _863;
        uint _866 = _865 + 1u;
        if (_866 == 32u)
        {
            break;
        }
        else
        {
            _863 = _864;
            _865 = _866;
            continue;
        }
    }
    float _924 = _864 * 0.009947183541953563690185546875;
    float _929 = dot(vec3(_622, _623, _624), vec3(_682, _683, _684)) * 2.0;
    vec4 _941 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_622 - (_929 * _682), _623 - (_929 * _683), _624 - (_929 * _684)), 4.0);
    float _946 = dot(vec3(_699, _701, _702), vec3(_682, _683, _684));
    float _1155 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
    float _955 = (exp2(log2(1.0 - (isnan(1.0) ? _1155 : (isnan(_1155) ? 1.0 : min(_1155, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _961 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_682, _683, _684), 0.0);
    float _973 = ((_830 + (_670.x * cbMtdParam._m0[9u].x)) + _833) + (((_961.x * _599) + (_955 * _941.x)) * _924);
    float _978 = ((_831 + (_670.y * cbMtdParam._m0[9u].x)) + _834) + (((_961.y * _600) + (_955 * _941.y)) * _924);
    float _983 = ((_832 + (_670.z * cbMtdParam._m0[9u].x)) + _835) + (((_961.z * _601) + (_955 * _941.z)) * _924);
    float _1166 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _1177 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _1188 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    bool _991 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1002;
    _1002.x = _991 ? ((_513 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1166 : (isnan(_1166) ? 1.0 : min(_1166, 1.0)));
    _1002.y = _991 ? ((_516 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1177 : (isnan(_1177) ? 1.0 : min(_1177, 1.0)));
    _1002.z = _991 ? ((_519 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1188 : (isnan(_1188) ? 1.0 : min(_1188, 1.0)));
    payload._m0 = _1002;
}


