#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _1529;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _169 & 65535u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        else
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _170 >> 16u;
        }
        _175 = frontier_phi_3_2_ladder_1;
        _177 = frontier_phi_3_2_ladder;
        _178 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _182.z;
    bool _185 = _184 != 0u;
    uint _186 = _134.w;
    bool _188 = _185 || (_186 == 0u);
    uint _189 = _183 * _175;
    uint _190 = _189 + 12u;
    uint _214;
    uint _215;
    uint _216;
    uint _217;
    if (_188)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_190 >> 2u));
        uint _194 = _193.x;
        _214 = _194 & 255u;
        _215 = (_194 >> 8u) & 255u;
        _216 = (_194 >> 16u) & 255u;
        _217 = 16u;
    }
    else
    {
        uint _202 = _190 >> 2u;
        uvec2 _208 = uvec2(texelFetch(l_geomAttrib_0, int(_202)).x, texelFetch(l_geomAttrib_0, int(_202 + 1u)).x);
        uint _209 = _208.x;
        _214 = _209 & 65535u;
        _215 = _209 >> 16u;
        _216 = _208.y & 65535u;
        _217 = 20u;
    }
    uvec4 _225 = texelFetch(l_geomAttrib_0, int((_217 + _189) >> 2u));
    uint _226 = _225.x;
    uint _238 = _182.y;
    bool _239 = _184 == 0u;
    uint _242 = _239 ? 4u : ((_186 != 0u) ? 12u : 8u);
    uvec4 _251 = texelFetch(l_geomAttrib_1, int((((_238 * _175) + 4u) + (_185 ? (_242 + 4u) : _242)) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uint _258 = _183 * _177;
    uint _259 = _258 + 12u;
    uint _280;
    uint _281;
    uint _282;
    uint _283;
    if (_188)
    {
        uvec4 _261 = texelFetch(l_geomAttrib_0, int(_259 >> 2u));
        uint _262 = _261.x;
        _280 = _262 & 255u;
        _281 = (_262 >> 8u) & 255u;
        _282 = (_262 >> 16u) & 255u;
        _283 = 16u;
    }
    else
    {
        uint _268 = _259 >> 2u;
        uvec2 _274 = uvec2(texelFetch(l_geomAttrib_0, int(_268)).x, texelFetch(l_geomAttrib_0, int(_268 + 1u)).x);
        uint _275 = _274.x;
        _280 = _275 & 65535u;
        _281 = _275 >> 16u;
        _282 = _274.y & 65535u;
        _283 = 20u;
    }
    uvec4 _289 = texelFetch(l_geomAttrib_0, int((_283 + _258) >> 2u));
    uint _290 = _289.x;
    uint _303 = _239 ? 4u : ((_186 != 0u) ? 12u : 8u);
    uvec4 _310 = texelFetch(l_geomAttrib_1, int((((_238 * _177) + 4u) + (_185 ? (_303 + 4u) : _303)) >> 2u));
    uint _311 = _310.x;
    float _315 = float(int(uint(int(_311 << 16u) >> int(16u))));
    float _316 = float(int(uint(int(_311) >> int(16u))));
    uint _317 = _183 * _178;
    uint _318 = _317 + 12u;
    uint _339;
    uint _340;
    uint _341;
    uint _342;
    if (_188)
    {
        uvec4 _320 = texelFetch(l_geomAttrib_0, int(_318 >> 2u));
        uint _321 = _320.x;
        _339 = _321 & 255u;
        _340 = (_321 >> 8u) & 255u;
        _341 = (_321 >> 16u) & 255u;
        _342 = 16u;
    }
    else
    {
        uint _327 = _318 >> 2u;
        uvec2 _333 = uvec2(texelFetch(l_geomAttrib_0, int(_327)).x, texelFetch(l_geomAttrib_0, int(_327 + 1u)).x);
        uint _334 = _333.x;
        _339 = _334 & 65535u;
        _340 = _334 >> 16u;
        _341 = _333.y & 65535u;
        _342 = 20u;
    }
    uvec4 _348 = texelFetch(l_geomAttrib_0, int((_342 + _317) >> 2u));
    uint _349 = _348.x;
    uint _362 = _239 ? 4u : ((_186 != 0u) ? 12u : 8u);
    uvec4 _369 = texelFetch(l_geomAttrib_1, int((((_238 * _178) + 4u) + (_185 ? (_362 + 4u) : _362)) >> 2u));
    uint _370 = _369.x;
    float _374 = float(int(uint(int(_370 << 16u) >> int(16u))));
    float _375 = float(int(uint(int(_370) >> int(16u))));
    bool _377 = _134.z == 0u;
    float _413;
    float _414;
    float _415;
    if (_377)
    {
        uint _380 = _175 * 3u;
        uvec3 _389 = uvec3(texelFetch(l_geomPositionBuffer, int(_380)).x, texelFetch(l_geomPositionBuffer, int(_380 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_380 + 2u)).x);
        _413 = uintBitsToFloat(_389.x);
        _414 = uintBitsToFloat(_389.y);
        _415 = uintBitsToFloat(_389.z);
    }
    else
    {
        uint _397 = _175 * 2u;
        uvec2 _403 = uvec2(texelFetch(l_geomPositionBuffer, int(_397)).x, texelFetch(l_geomPositionBuffer, int(_397 + 1u)).x);
        uint _404 = _403.x;
        _413 = unpackHalf2x16(_404).x;
        _414 = unpackHalf2x16(_404 >> 16u).x;
        _415 = unpackHalf2x16(_403.y).x;
    }
    float _451;
    float _452;
    float _453;
    if (_377)
    {
        uint _418 = _177 * 3u;
        uvec3 _427 = uvec3(texelFetch(l_geomPositionBuffer, int(_418)).x, texelFetch(l_geomPositionBuffer, int(_418 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_418 + 2u)).x);
        _451 = uintBitsToFloat(_427.x);
        _452 = uintBitsToFloat(_427.y);
        _453 = uintBitsToFloat(_427.z);
    }
    else
    {
        uint _435 = _177 * 2u;
        uvec2 _441 = uvec2(texelFetch(l_geomPositionBuffer, int(_435)).x, texelFetch(l_geomPositionBuffer, int(_435 + 1u)).x);
        uint _442 = _441.x;
        _451 = unpackHalf2x16(_442).x;
        _452 = unpackHalf2x16(_442 >> 16u).x;
        _453 = unpackHalf2x16(_441.y).x;
    }
    float _489;
    float _490;
    float _491;
    if (_377)
    {
        uint _456 = _178 * 3u;
        uvec3 _465 = uvec3(texelFetch(l_geomPositionBuffer, int(_456)).x, texelFetch(l_geomPositionBuffer, int(_456 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_456 + 2u)).x);
        _489 = uintBitsToFloat(_465.x);
        _490 = uintBitsToFloat(_465.y);
        _491 = uintBitsToFloat(_465.z);
    }
    else
    {
        uint _473 = _178 * 2u;
        uvec2 _479 = uvec2(texelFetch(l_geomPositionBuffer, int(_473)).x, texelFetch(l_geomPositionBuffer, int(_473 + 1u)).x);
        uint _480 = _479.x;
        _489 = unpackHalf2x16(_480).x;
        _490 = unpackHalf2x16(_480 >> 16u).x;
        _491 = unpackHalf2x16(_479.y).x;
    }
    float _494 = (1.0 - hit._m0.x) - hit._m0.y;
    float _528 = (_315 - _256) * 0.00048828125;
    float _530 = (_316 - _257) * 0.00048828125;
    float _533 = (_374 - _256) * 0.00048828125;
    float _534 = (_375 - _257) * 0.00048828125;
    float _556 = _451 - _413;
    float _557 = _452 - _414;
    float _558 = _453 - _415;
    float _561 = fma(_558, gl_ObjectToWorldEXT[2u].x, fma(_557, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _556));
    float _564 = fma(_558, gl_ObjectToWorldEXT[2u].y, fma(_557, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _556));
    float _567 = fma(_558, gl_ObjectToWorldEXT[2u].z, fma(_557, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _556));
    float _568 = _489 - _413;
    float _569 = _490 - _414;
    float _570 = _491 - _415;
    float _573 = fma(_570, gl_ObjectToWorldEXT[2u].x, fma(_569, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _568));
    float _576 = fma(_570, gl_ObjectToWorldEXT[2u].y, fma(_569, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _568));
    float _579 = fma(_570, gl_ObjectToWorldEXT[2u].z, fma(_569, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _568));
    float _580 = (((_315 * hit._m0.x) + (_256 * _494)) + (_374 * hit._m0.y)) * 0.00048828125;
    float _581 = (((_316 * hit._m0.x) + (_257 * _494)) + (_375 * hit._m0.y)) * 0.00048828125;
    float _585 = (((float(_214) * _494) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _588 = (((float(_215) * _494) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_340) * hit._m0.y);
    float _591 = (((float(_216) * _494) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _592 = _585 * 0.0078740157186985015869140625;
    float _594 = _588 * 0.0078740157186985015869140625;
    float _595 = _591 * 0.0078740157186985015869140625;
    float _608 = ((((float(_226 & 255u) * _494) + (-127.0)) + (float(_290 & 255u) * hit._m0.x)) + (float(_349 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((((float((_226 >> 8u) & 255u) * _494) + (-127.0)) + (float((_290 >> 8u) & 255u) * hit._m0.x)) + (float((_349 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((((float((_226 >> 16u) & 255u) * _494) + (-127.0)) + (float((_290 >> 16u) & 255u) * hit._m0.x)) + (float((_349 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _611 = ((((float(_226 >> 24u) * _494) + (-127.0)) + (float(_290 >> 24u) * hit._m0.x)) + (float(_349 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _621 = ((_609 * _595) - (_610 * _594)) * _611;
    float _622 = ((_610 * _592) - (_608 * _595)) * _611;
    float _623 = ((_608 * _594) - (_609 * _592)) * _611;
    float _627 = inversesqrt(dot(vec3(_621, _622, _623), vec3(_621, _622, _623)));
    uvec2 _642 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, int(0u)));
    bool _647 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _700;
    if (_647)
    {
        float _658 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _664 = (_579 * _564) - (_576 * _567);
        float _667 = (_573 * _567) - (_579 * _561);
        float _670 = (_576 * _561) - (_573 * _564);
        float _697 = ((log2((((float(_642.y) * 0.5) * float(_642.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_667 * _667) + (_670 * _670)) + (_664 * _664)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_658 * gl_WorldRayDirectionEXT.x, _658 * gl_WorldRayDirectionEXT.y, _658 * gl_WorldRayDirectionEXT.z), vec3(_592, _594, _595))));
        _700 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    }
    else
    {
        _700 = 0.0;
    }
    vec4 _704 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _580) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _581) + cbTextureTilingScale._m0[2u].w), _700);
    uvec2 _720 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, int(0u)));
    float _771;
    if (_647)
    {
        float _731 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _737 = (_579 * _564) - (_576 * _567);
        float _740 = (_573 * _567) - (_579 * _561);
        float _743 = (_576 * _561) - (_573 * _564);
        float _769 = ((log2((((float(_720.y) * 0.5) * float(_720.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_740 * _740) + (_743 * _743)) + (_737 * _737)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_731 * gl_WorldRayDirectionEXT.x, _731 * gl_WorldRayDirectionEXT.y, _731 * gl_WorldRayDirectionEXT.z), vec3(_592, _594, _595))));
        _771 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    }
    else
    {
        _771 = 0.0;
    }
    vec4 _774 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _580) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _581) + cbTextureTilingScale._m0[0u].w), _771);
    uvec2 _796 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, int(0u)));
    float _847;
    if (_647)
    {
        float _807 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _813 = (_579 * _564) - (_576 * _567);
        float _816 = (_573 * _567) - (_579 * _561);
        float _819 = (_576 * _561) - (_573 * _564);
        float _845 = ((log2((((float(_796.y) * 0.5) * float(_796.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_816 * _816) + (_819 * _819)) + (_813 * _813)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_807 * gl_WorldRayDirectionEXT.x, _807 * gl_WorldRayDirectionEXT.y, _807 * gl_WorldRayDirectionEXT.z), vec3(_592, _594, _595))));
        _847 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    }
    else
    {
        _847 = 0.0;
    }
    vec4 _849 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _580) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _581) + cbTextureTilingScale._m0[1u].w), _847);
    float _857 = ((_774.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _849.x;
    float _860 = ((_774.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _849.y;
    float _863 = ((_774.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _849.z;
    uvec2 _875 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, int(0u)));
    float _926;
    if (_647)
    {
        float _886 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _892 = (_579 * _564) - (_576 * _567);
        float _895 = (_573 * _567) - (_579 * _561);
        float _898 = (_576 * _561) - (_573 * _564);
        float _924 = ((log2((((float(_875.y) * 0.5) * float(_875.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_895 * _895) + (_898 * _898)) + (_892 * _892)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_886 * gl_WorldRayDirectionEXT.x, _886 * gl_WorldRayDirectionEXT.y, _886 * gl_WorldRayDirectionEXT.z), vec3(_592, _594, _595))));
        _926 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    }
    else
    {
        _926 = 0.0;
    }
    float _935 = cbMtdParam._m0[16u].x + textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _580) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _581) + cbTextureTilingScale._m0[7u].w), _926).x;
    uvec2 _948 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, int(0u)));
    float _999;
    if (_647)
    {
        float _959 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _965 = (_579 * _564) - (_576 * _567);
        float _968 = (_573 * _567) - (_579 * _561);
        float _971 = (_576 * _561) - (_573 * _564);
        float _997 = ((log2((((float(_948.y) * 0.5) * float(_948.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_968 * _968) + (_971 * _971)) + (_965 * _965)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_959 * gl_WorldRayDirectionEXT.x, _959 * gl_WorldRayDirectionEXT.y, _959 * gl_WorldRayDirectionEXT.z), vec3(_592, _594, _595))));
        _999 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    }
    else
    {
        _999 = 0.0;
    }
    vec4 _1001 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _580) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _581) + cbTextureTilingScale._m0[10u].w), _999);
    float _1011 = (cbMtdParam._m0[14u].x + _1001.z) * _704.z;
    float _1029 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1620 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    float _1030 = isnan(1.0) ? _1620 : (isnan(_1620) ? 1.0 : min(_1620, 1.0));
    float _1035 = (_1030 * _1030) * (3.0 - (_1030 * 2.0));
    uvec2 _1047 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, int(0u)));
    float _1051 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1052 = _1051 * gl_WorldRayDirectionEXT.x;
    float _1053 = _1051 * gl_WorldRayDirectionEXT.y;
    float _1054 = _1051 * gl_WorldRayDirectionEXT.z;
    float _1098;
    if (_647)
    {
        float _1064 = (_579 * _564) - (_576 * _567);
        float _1067 = (_573 * _567) - (_579 * _561);
        float _1070 = (_576 * _561) - (_573 * _564);
        float _1096 = ((log2((((float(_1047.y) * 0.5) * float(_1047.x)) * abs((_534 * _528) - (_533 * _530))) / (sqrt(((_1067 * _1067) + (_1070 * _1070)) + (_1064 * _1064)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1052, _1053, _1054), vec3(_592, _594, _595))));
        _1098 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    }
    else
    {
        _1098 = 0.0;
    }
    vec4 _1100 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _580) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _581) + cbTextureTilingScale._m0[4u].w), _1098);
    float _1120 = (_704.x * 2.0) + (-1.0);
    float _1121 = (_704.y * 2.0) + (-1.0);
    float _1122 = dot(vec2(_1120, _1121), vec2(_1120, _1121));
    float _1636 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
    float _1127 = sqrt(1.0 - (isnan(1.0) ? _1636 : (isnan(_1636) ? 1.0 : min(_1636, 1.0))));
    float _1134 = (cbMtdParam._m0[14u].z * ((_1001.x * 2.0) + (-1.0))) + _1120;
    float _1135 = (cbMtdParam._m0[14u].z * ((_1001.y * 2.0) + (-1.0))) + _1121;
    float _1138 = fma(_1127, _592, fma(_1135, _608, (_627 * _621) * _1134));
    float _1141 = fma(_1127, _594, fma(_1135, _609, (_627 * _622) * _1134));
    float _1144 = fma(_1127, _595, fma(_1135, _610, (_627 * _623) * _1134));
    float _1148 = inversesqrt(dot(vec3(_1138, _1141, _1144), vec3(_1138, _1141, _1144)));
    float _1149 = _1148 * _1138;
    float _1150 = _1148 * _1141;
    float _1151 = _1148 * _1144;
    float _1163 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1164 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1165 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1166 = (-0.0) - _1052;
    float _1168 = (-0.0) - _1053;
    float _1169 = (-0.0) - _1054;
    float _1175 = float(gl_LaunchIDEXT.x);
    float _1176 = float(gl_LaunchIDEXT.y);
    float _1179 = float(gl_LaunchSizeEXT.x);
    float _1193 = fract(fract(sin(dot(vec2(_1175 / _1179, _1176 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1206 = fract(fract(sin(dot(vec2((_1175 + 128.0) / _1179, (_1176 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1207 = 1.0 - _935;
    float _1208 = _1207 * _857;
    float _1209 = _1207 * _860;
    float _1210 = _1207 * _863;
    float _1215 = _935 * (_857 + (-0.039999999105930328369140625));
    float _1216 = _935 * (_860 + (-0.039999999105930328369140625));
    float _1217 = _935 * (_863 + (-0.039999999105930328369140625));
    float _1218 = _1215 + 0.039999999105930328369140625;
    float _1220 = _1216 + 0.039999999105930328369140625;
    float _1221 = _1217 + 0.039999999105930328369140625;
    _72._m0 = 1u;
    uvec4 _1231 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1232 = _1231.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1232, _1231.w, _1232, vec3(_1163, _1164, _1165), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    if (_72._m0 == 0u)
    {
        float _1253 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1149, _1150, _1151));
        float _1647 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
        float _1256 = isnan(1.0) ? _1647 : (isnan(_1647) ? 1.0 : min(_1647, 1.0));
        float _1275 = 1.0 - (sqrt((_1011 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1276 = _1275 * _1275;
        float _1277 = g_sceneCB._m0[4u].x - _1052;
        float _1278 = g_sceneCB._m0[4u].y - _1053;
        float _1279 = g_sceneCB._m0[4u].z - _1054;
        float _1283 = inversesqrt(dot(vec3(_1277, _1278, _1279), vec3(_1277, _1278, _1279)));
        float _1284 = _1283 * _1277;
        float _1285 = _1283 * _1278;
        float _1286 = _1283 * _1279;
        float _1287 = dot(vec3(_1149, _1150, _1151), vec3(g_sceneCB._m0[4u].xyz));
        float _1658 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1290 = isnan(1.0) ? _1658 : (isnan(_1658) ? 1.0 : min(_1658, 1.0));
        float _1291 = dot(vec3(_1149, _1150, _1151), vec3(_1166, _1168, _1169));
        float _1669 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1294 = isnan(1.0) ? _1669 : (isnan(_1669) ? 1.0 : min(_1669, 1.0));
        float _1295 = dot(vec3(_1149, _1150, _1151), vec3(_1284, _1285, _1286));
        float _1680 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1298 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
        float _1299 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1284, _1285, _1286));
        float _1691 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = _1276 * _1276;
        float _1307 = ((_1298 * _1298) * (_1303 + (-1.0))) + 1.0;
        float _1316 = exp2(log2(1.0 - (isnan(1.0) ? _1691 : (isnan(_1691) ? 1.0 : min(_1691, 1.0)))) * 5.0);
        float _1327 = 1.0 - _1276;
        float _1338 = (0.5 / (((_1294 * ((_1290 * _1327) + _1276)) + 9.9999999392252902907785028219223e-09) + (((_1294 * _1327) + _1276) * _1290))) * _1290;
        float _1702 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1340 = (isnan(1.0) ? _1702 : (isnan(_1702) ? 1.0 : min(_1702, 1.0))) * (_1303 / ((_1307 * _1307) * 3.141590118408203125));
        _1347 = ((_1208 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1256;
        _1348 = ((_1209 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1256;
        _1349 = ((_1210 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1256;
        _1350 = (((_1316 * (0.959999978542327880859375 - _1215)) + _1218) * g_sceneCB._m0[5u].x) * _1340;
        _1351 = (((_1316 * (0.959999978542327880859375 - _1216)) + _1220) * g_sceneCB._m0[5u].y) * _1340;
        _1352 = (((_1316 * (0.959999978542327880859375 - _1217)) + _1221) * g_sceneCB._m0[5u].z) * _1340;
    }
    else
    {
        _1347 = 0.0;
        _1348 = 0.0;
        _1349 = 0.0;
        _1350 = 0.0;
        _1351 = 0.0;
        _1352 = 0.0;
    }
    bool _1354 = abs(_1150) < 0.89999997615814208984375;
    float _1356 = float(_1354);
    float _1357 = _1354 ? 0.0 : 1.0;
    float _1360 = (_1356 * _1151) - (_1357 * _1150);
    float _1361 = _1357 * _1149;
    float _1363 = (-0.0) - (_1149 * _1356);
    float _1367 = inversesqrt(dot(vec3(_1360, _1361, _1363), vec3(_1360, _1361, _1363)));
    float _1368 = _1360 * _1367;
    float _1369 = _1361 * _1367;
    float _1370 = _1367 * _1363;
    float _1373 = (_1369 * _1151) - (_1370 * _1150);
    float _1376 = (_1370 * _1149) - (_1368 * _1151);
    float _1379 = (_1368 * _1150) - (_1369 * _1149);
    float _1381;
    float _1389;
    float _1380 = 0.0;
    uint _1382 = 0u;
    float _1386;
    bool _1388;
    for (;;)
    {
        _1386 = (float(_1382) + _1193) * 0.03125;
        _1388 = _1382 == 0u;
        float frontier_phi_39_pred;
        if (_1388)
        {
            frontier_phi_39_pred = 0.0;
        }
        else
        {
            float _1534;
            float _1535;
            uint _1537;
            _1534 = 0.0;
            _1535 = 0.5;
            _1537 = _1382;
            float _1390;
            for (;;)
            {
                _1390 = ((_1537 & 1u) != 0u) ? (_1535 + _1534) : _1534;
                uint _1538 = _1537 >> 1u;
                if (_1538 == 0u)
                {
                    break;
                }
                else
                {
                    _1534 = _1390;
                    _1535 *= 0.5;
                    _1537 = _1538;
                }
            }
            frontier_phi_39_pred = _1390;
        }
        _1389 = frontier_phi_39_pred;
        float _1391 = _1389 + _1206;
        float _1395 = sqrt(_1386);
        float _1396 = ((_1391 > 1.0) ? (_1391 + (-1.0)) : _1391) * 6.283185482025146484375;
        float _1399 = cos(_1396) * _1395;
        float _1401 = sin(_1396) * _1395;
        float _1403 = sqrt(1.0 - _1386);
        float _1416 = ((_1403 * _1149) + (_1399 * _1373)) + (_1401 * _1368);
        float _1417 = ((_1403 * _1150) + (_1399 * _1376)) + (_1401 * _1369);
        float _1418 = ((_1403 * _1151) + (_1399 * _1379)) + (_1401 * _1370);
        _71._m0 = 1u;
        uvec4 _1422 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1423 = _1422.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1423, _1422.w, _1423, vec3(_1163, _1164, _1165), 9.9999997473787516355514526367188e-05, vec3(_1416, _1417, _1418), 10000.0, 1);
        float _1429 = dot(vec3(_1149, _1150, _1151), vec3(_1416, _1417, _1418));
        float _1713 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1432 = isnan(1.0) ? _1713 : (isnan(_1713) ? 1.0 : min(_1713, 1.0));
        _1381 = ((float(_71._m0 == 0u) * _1432) / (_1432 * 0.3183098733425140380859375)) + _1380;
        uint _1383 = _1382 + 1u;
        if (_1383 == 32u)
        {
            break;
        }
        else
        {
            _1380 = _1381;
            _1382 = _1383;
            continue;
        }
    }
    float _1440 = _1381 * 0.009947183541953563690185546875;
    float _1445 = dot(vec3(_1052, _1053, _1054), vec3(_1149, _1150, _1151)) * 2.0;
    vec4 _1460 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1052 - (_1445 * _1149), _1053 - (_1445 * _1150), _1054 - (_1445 * _1151)), 4.0 - (_1011 * 8.0));
    float _1465 = dot(vec3(_1166, _1168, _1169), vec3(_1149, _1150, _1151));
    float _1724 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
    float _1475 = exp2(log2(1.0 - (isnan(1.0) ? _1724 : (isnan(_1724) ? 1.0 : min(_1724, 1.0)))) * 5.0);
    vec4 _1487 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1149, _1150, _1151), 0.0);
    float _1499 = ((_1347 + ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1035) * _1100.x)) + _1350) + (((_1487.x * _1208) + (((_1475 * (0.959999978542327880859375 - _1215)) + _1218) * _1460.x)) * _1440);
    float _1504 = ((_1348 + ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1035) * _1100.y)) + _1351) + (((_1487.y * _1209) + (((_1475 * (0.959999978542327880859375 - _1216)) + _1220) * _1460.y)) * _1440);
    float _1509 = ((_1349 + ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1035) * _1100.z)) + _1352) + (((_1487.z * _1210) + (((_1475 * (0.959999978542327880859375 - _1217)) + _1221) * _1460.z)) * _1440);
    float _1735 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
    float _1746 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    float _1757 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    bool _1517 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1528;
    _1528.x = _1517 ? ((_585 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1735 : (isnan(_1735) ? 1.0 : min(_1735, 1.0)));
    _1528.y = _1517 ? ((_588 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1746 : (isnan(_1746) ? 1.0 : min(_1746, 1.0)));
    _1528.z = _1517 ? ((_591 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1757 : (isnan(_1757) ? 1.0 : min(_1757, 1.0)));
    payload._m0 = _1528;
}


