#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_SL_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_SL_snp_0_Texture2D_19;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_SL_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_SL_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1330;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _157 & 65535u;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _158 >> 16u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        _163 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
        _166 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    bool _228 = _172 == 0u;
    uint _229;
    if (_228)
    {
        _229 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _229 = frontier_phi_9_10_ladder;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int(((_177 + 4u) + (_173 ? (_229 + 4u) : _229)) >> 2u));
    uint _238 = _237.x;
    float _242 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_238) >> int(16u))));
    uint _244 = _171 * _165;
    uint _245 = _244 + 12u;
    uint _266;
    uint _267;
    uint _268;
    uint _269;
    if (_176)
    {
        uvec4 _247 = texelFetch(l_geomAttrib_0, int(_245 >> 2u));
        uint _248 = _247.x;
        _266 = _248 & 255u;
        _267 = (_248 >> 8u) & 255u;
        _268 = (_248 >> 16u) & 255u;
        _269 = 16u;
    }
    else
    {
        uint _254 = _245 >> 2u;
        uvec2 _260 = uvec2(texelFetch(l_geomAttrib_0, int(_254)).x, texelFetch(l_geomAttrib_0, int(_254 + 1u)).x);
        uint _261 = _260.x;
        _266 = _261 & 65535u;
        _267 = _261 >> 16u;
        _268 = _260.y & 65535u;
        _269 = 20u;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((_269 + _244) >> 2u));
    uint _276 = _275.x;
    uint _288;
    if (_228)
    {
        _288 = _269 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _269 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _269 + 12u;
        }
        _288 = frontier_phi_16_17_ladder;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int(((_244 + 4u) + (_173 ? (_288 + 4u) : _288)) >> 2u));
    uint _297 = _296.x;
    float _301 = float(int(uint(int(_297 << 16u) >> int(16u))));
    float _302 = float(int(uint(int(_297) >> int(16u))));
    uint _303 = _171 * _166;
    uint _304 = _303 + 12u;
    uint _325;
    uint _326;
    uint _327;
    uint _328;
    if (_176)
    {
        uvec4 _306 = texelFetch(l_geomAttrib_0, int(_304 >> 2u));
        uint _307 = _306.x;
        _325 = _307 & 255u;
        _326 = (_307 >> 8u) & 255u;
        _327 = (_307 >> 16u) & 255u;
        _328 = 16u;
    }
    else
    {
        uint _313 = _304 >> 2u;
        uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
        uint _320 = _319.x;
        _325 = _320 & 65535u;
        _326 = _320 >> 16u;
        _327 = _319.y & 65535u;
        _328 = 20u;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int((_328 + _303) >> 2u));
    uint _335 = _334.x;
    uint _347;
    if (_228)
    {
        _347 = _328 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _328 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _328 + 12u;
        }
        _347 = frontier_phi_23_24_ladder;
    }
    uvec4 _355 = texelFetch(l_geomAttrib_0, int(((_303 + 4u) + (_173 ? (_347 + 4u) : _347)) >> 2u));
    uint _356 = _355.x;
    float _360 = float(int(uint(int(_356 << 16u) >> int(16u))));
    float _361 = float(int(uint(int(_356) >> int(16u))));
    bool _363 = _122.z == 0u;
    float _399;
    float _400;
    float _401;
    if (_363)
    {
        uint _366 = _163 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _163 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_363)
    {
        uint _404 = _165 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _165 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_363)
    {
        uint _442 = _166 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _166 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _480 = (1.0 - hit._m0.x) - hit._m0.y;
    float _514 = (_301 - _242) * 0.00048828125;
    float _516 = (_302 - _243) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _520 = (_361 - _243) * 0.00048828125;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _544 = _439 - _401;
    float _547 = fma(_544, gl_ObjectToWorldEXT[2u].x, fma(_543, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _542));
    float _550 = fma(_544, gl_ObjectToWorldEXT[2u].y, fma(_543, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _542));
    float _553 = fma(_544, gl_ObjectToWorldEXT[2u].z, fma(_543, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _542));
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _556 = _477 - _401;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = (((_301 * hit._m0.x) + (_242 * _480)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _567 = (((_302 * hit._m0.x) + (_243 * _480)) + (_361 * hit._m0.y)) * 0.00048828125;
    float _571 = (((float(_202) * _480) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _574 = (((float(_203) * _480) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = (((float(_204) * _480) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _578 = _571 * 0.0078740157186985015869140625;
    float _580 = _574 * 0.0078740157186985015869140625;
    float _581 = _577 * 0.0078740157186985015869140625;
    float _594 = ((((float(_214 & 255u) * _480) + (-127.0)) + (float(_276 & 255u) * hit._m0.x)) + (float(_335 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_214 >> 8u) & 255u) * _480) + (-127.0)) + (float((_276 >> 8u) & 255u) * hit._m0.x)) + (float((_335 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float((_214 >> 16u) & 255u) * _480) + (-127.0)) + (float((_276 >> 16u) & 255u) * hit._m0.x)) + (float((_335 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float(_214 >> 24u) * _480) + (-127.0)) + (float(_276 >> 24u) * hit._m0.x)) + (float(_335 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((_595 * _581) - (_596 * _580)) * _597;
    float _608 = ((_596 * _578) - (_594 * _581)) * _597;
    float _609 = ((_594 * _580) - (_595 * _578)) * _597;
    float _613 = inversesqrt(dot(vec3(_607, _608, _609), vec3(_607, _608, _609)));
    uvec2 _628 = uvec2(textureSize(P_ACParts_SL_snp_0_Texture2D_7, int(0u)));
    bool _633 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _686;
    if (_633)
    {
        float _644 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _650 = (_565 * _550) - (_562 * _553);
        float _653 = (_559 * _553) - (_565 * _547);
        float _656 = (_562 * _547) - (_559 * _550);
        float _683 = ((log2((((float(_628.y) * 0.5) * float(_628.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_653 * _653) + (_656 * _656)) + (_650 * _650)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_644 * gl_WorldRayDirectionEXT.x, _644 * gl_WorldRayDirectionEXT.y, _644 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _686 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    }
    else
    {
        _686 = 0.0;
    }
    vec4 _690 = textureLod(sampler2D(P_ACParts_SL_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _566) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _567) + cbTextureTilingScale._m0[4u].w), _686);
    uvec2 _706 = uvec2(textureSize(P_ACParts_SL_snp_0_Texture2D_3, int(0u)));
    float _757;
    if (_633)
    {
        float _717 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _723 = (_565 * _550) - (_562 * _553);
        float _726 = (_559 * _553) - (_565 * _547);
        float _729 = (_562 * _547) - (_559 * _550);
        float _755 = ((log2((((float(_706.y) * 0.5) * float(_706.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_726 * _726) + (_729 * _729)) + (_723 * _723)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_717 * gl_WorldRayDirectionEXT.x, _717 * gl_WorldRayDirectionEXT.y, _717 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _757 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    }
    else
    {
        _757 = 0.0;
    }
    vec4 _759 = textureLod(sampler2D(P_ACParts_SL_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _566) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _567) + cbTextureTilingScale._m0[3u].w), _757);
    float _773 = ((_690.x * 4.55000019073486328125) * _759.x) * cbMtdParam._m0[9u].x;
    float _776 = ((_690.y * 4.55000019073486328125) * _759.y) * cbMtdParam._m0[9u].y;
    float _779 = ((_690.z * 4.55000019073486328125) * _759.z) * cbMtdParam._m0[9u].z;
    uvec2 _791 = uvec2(textureSize(P_ACParts_SL_snp_0_Texture2D_19, int(0u)));
    float _842;
    if (_633)
    {
        float _802 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _808 = (_565 * _550) - (_562 * _553);
        float _811 = (_559 * _553) - (_565 * _547);
        float _814 = (_562 * _547) - (_559 * _550);
        float _840 = ((log2((((float(_791.y) * 0.5) * float(_791.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_811 * _811) + (_814 * _814)) + (_808 * _808)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_802 * gl_WorldRayDirectionEXT.x, _802 * gl_WorldRayDirectionEXT.y, _802 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _842 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    }
    else
    {
        _842 = 0.0;
    }
    float _851 = cbMtdParam._m0[16u].x + textureLod(sampler2D(P_ACParts_SL_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _566) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _567) + cbTextureTilingScale._m0[2u].w), _842).x;
    uvec2 _864 = uvec2(textureSize(P_ACParts_SL_snp_0_Texture2D_0, int(0u)));
    float _868 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _869 = _868 * gl_WorldRayDirectionEXT.x;
    float _870 = _868 * gl_WorldRayDirectionEXT.y;
    float _871 = _868 * gl_WorldRayDirectionEXT.z;
    float _915;
    if (_633)
    {
        float _881 = (_565 * _550) - (_562 * _553);
        float _884 = (_559 * _553) - (_565 * _547);
        float _887 = (_562 * _547) - (_559 * _550);
        float _913 = ((log2((((float(_864.y) * 0.5) * float(_864.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_884 * _884) + (_887 * _887)) + (_881 * _881)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_869, _870, _871), vec3(_578, _580, _581))));
        _915 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    }
    else
    {
        _915 = 0.0;
    }
    vec4 _918 = textureLod(sampler2D(P_ACParts_SL_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _566) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _567) + cbTextureTilingScale._m0[0u].w), _915);
    float _925 = (_918.x * 2.0) + (-1.0);
    float _927 = (_918.y * 2.0) + (-1.0);
    float _928 = dot(vec2(_925, _927), vec2(_925, _927));
    float _1430 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _933 = sqrt(1.0 - (isnan(1.0) ? _1430 : (isnan(_1430) ? 1.0 : min(_1430, 1.0))));
    float _934 = _918.z * cbMtdParam._m0[16u].y;
    float _938 = (cbMtdParam._m0[16u].z * _925) + _925;
    float _939 = (cbMtdParam._m0[16u].z * _927) + _927;
    float _942 = fma(_933, _578, fma(_939, _594, (_613 * _607) * _938));
    float _945 = fma(_933, _580, fma(_939, _595, (_613 * _608) * _938));
    float _948 = fma(_933, _581, fma(_939, _596, (_613 * _609) * _938));
    float _952 = inversesqrt(dot(vec3(_942, _945, _948), vec3(_942, _945, _948)));
    float _953 = _952 * _942;
    float _954 = _952 * _945;
    float _955 = _952 * _948;
    float _967 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _968 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _969 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _970 = (-0.0) - _869;
    float _972 = (-0.0) - _870;
    float _973 = (-0.0) - _871;
    float _979 = float(gl_LaunchIDEXT.x);
    float _980 = float(gl_LaunchIDEXT.y);
    float _983 = float(gl_LaunchSizeEXT.x);
    float _997 = fract(fract(sin(dot(vec2(_979 / _983, _980 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1010 = fract(fract(sin(dot(vec2((_979 + 128.0) / _983, (_980 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1011 = 1.0 - _851;
    float _1012 = _1011 * _773;
    float _1013 = _1011 * _776;
    float _1014 = _1011 * _779;
    float _1019 = _851 * (_773 + (-0.039999999105930328369140625));
    float _1020 = _851 * (_776 + (-0.039999999105930328369140625));
    float _1021 = _851 * (_779 + (-0.039999999105930328369140625));
    float _1022 = _1019 + 0.039999999105930328369140625;
    float _1024 = _1020 + 0.039999999105930328369140625;
    float _1025 = _1021 + 0.039999999105930328369140625;
    _64._m0 = 1u;
    uvec4 _1035 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1036 = _1035.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1036, _1035.w, _1036, vec3(_967, _968, _969), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    if (_64._m0 == 0u)
    {
        float _1057 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_953, _954, _955));
        float _1441 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1060 = isnan(1.0) ? _1441 : (isnan(_1441) ? 1.0 : min(_1441, 1.0));
        float _1079 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _934) * 0.949999988079071044921875);
        float _1080 = _1079 * _1079;
        float _1081 = g_sceneCB._m0[4u].x - _869;
        float _1082 = g_sceneCB._m0[4u].y - _870;
        float _1083 = g_sceneCB._m0[4u].z - _871;
        float _1087 = inversesqrt(dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083)));
        float _1088 = _1087 * _1081;
        float _1089 = _1087 * _1082;
        float _1090 = _1087 * _1083;
        float _1091 = dot(vec3(_953, _954, _955), vec3(g_sceneCB._m0[4u].xyz));
        float _1452 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1094 = isnan(1.0) ? _1452 : (isnan(_1452) ? 1.0 : min(_1452, 1.0));
        float _1095 = dot(vec3(_953, _954, _955), vec3(_970, _972, _973));
        float _1463 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1098 = isnan(1.0) ? _1463 : (isnan(_1463) ? 1.0 : min(_1463, 1.0));
        float _1099 = dot(vec3(_953, _954, _955), vec3(_1088, _1089, _1090));
        float _1474 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1102 = isnan(1.0) ? _1474 : (isnan(_1474) ? 1.0 : min(_1474, 1.0));
        float _1103 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1088, _1089, _1090));
        float _1485 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = _1080 * _1080;
        float _1111 = ((_1102 * _1102) * (_1107 + (-1.0))) + 1.0;
        float _1120 = exp2(log2(1.0 - (isnan(1.0) ? _1485 : (isnan(_1485) ? 1.0 : min(_1485, 1.0)))) * 5.0);
        float _1131 = 1.0 - _1080;
        float _1142 = (0.5 / (((_1098 * ((_1094 * _1131) + _1080)) + 9.9999999392252902907785028219223e-09) + (((_1098 * _1131) + _1080) * _1094))) * _1094;
        float _1496 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1144 = (isnan(1.0) ? _1496 : (isnan(_1496) ? 1.0 : min(_1496, 1.0))) * (_1107 / ((_1111 * _1111) * 3.141590118408203125));
        _1151 = ((_1012 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1060;
        _1152 = ((_1013 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1060;
        _1153 = ((_1014 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1060;
        _1154 = (((_1120 * (0.959999978542327880859375 - _1019)) + _1022) * g_sceneCB._m0[5u].x) * _1144;
        _1155 = (((_1120 * (0.959999978542327880859375 - _1020)) + _1024) * g_sceneCB._m0[5u].y) * _1144;
        _1156 = (((_1120 * (0.959999978542327880859375 - _1021)) + _1025) * g_sceneCB._m0[5u].z) * _1144;
    }
    else
    {
        _1151 = 0.0;
        _1152 = 0.0;
        _1153 = 0.0;
        _1154 = 0.0;
        _1155 = 0.0;
        _1156 = 0.0;
    }
    bool _1158 = abs(_954) < 0.89999997615814208984375;
    float _1160 = float(_1158);
    float _1161 = _1158 ? 0.0 : 1.0;
    float _1164 = (_1160 * _955) - (_1161 * _954);
    float _1165 = _1161 * _953;
    float _1167 = (-0.0) - (_953 * _1160);
    float _1171 = inversesqrt(dot(vec3(_1164, _1165, _1167), vec3(_1164, _1165, _1167)));
    float _1172 = _1164 * _1171;
    float _1173 = _1165 * _1171;
    float _1174 = _1171 * _1167;
    float _1177 = (_1173 * _955) - (_1174 * _954);
    float _1180 = (_1174 * _953) - (_1172 * _955);
    float _1183 = (_1172 * _954) - (_1173 * _953);
    float _1185;
    float _1193;
    float _1184 = 0.0;
    uint _1186 = 0u;
    float _1190;
    bool _1192;
    for (;;)
    {
        _1190 = (float(_1186) + _997) * 0.03125;
        _1192 = _1186 == 0u;
        float frontier_phi_47_pred;
        if (_1192)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1335;
            float _1336;
            uint _1338;
            _1335 = 0.0;
            _1336 = 0.5;
            _1338 = _1186;
            float _1194;
            for (;;)
            {
                _1194 = ((_1338 & 1u) != 0u) ? (_1336 + _1335) : _1335;
                uint _1339 = _1338 >> 1u;
                if (_1339 == 0u)
                {
                    break;
                }
                else
                {
                    _1335 = _1194;
                    _1336 *= 0.5;
                    _1338 = _1339;
                }
            }
            frontier_phi_47_pred = _1194;
        }
        _1193 = frontier_phi_47_pred;
        float _1195 = _1193 + _1010;
        float _1199 = sqrt(_1190);
        float _1200 = ((_1195 > 1.0) ? (_1195 + (-1.0)) : _1195) * 6.283185482025146484375;
        float _1203 = cos(_1200) * _1199;
        float _1205 = sin(_1200) * _1199;
        float _1207 = sqrt(1.0 - _1190);
        float _1220 = ((_1207 * _953) + (_1203 * _1177)) + (_1205 * _1172);
        float _1221 = ((_1207 * _954) + (_1203 * _1180)) + (_1205 * _1173);
        float _1222 = ((_1207 * _955) + (_1203 * _1183)) + (_1205 * _1174);
        _63._m0 = 1u;
        uvec4 _1226 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1227 = _1226.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1227, _1226.w, _1227, vec3(_967, _968, _969), 9.9999997473787516355514526367188e-05, vec3(_1220, _1221, _1222), 10000.0, 1);
        float _1233 = dot(vec3(_953, _954, _955), vec3(_1220, _1221, _1222));
        float _1507 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1236 = isnan(1.0) ? _1507 : (isnan(_1507) ? 1.0 : min(_1507, 1.0));
        _1185 = ((float(_63._m0 == 0u) * _1236) / (_1236 * 0.3183098733425140380859375)) + _1184;
        uint _1187 = _1186 + 1u;
        if (_1187 == 32u)
        {
            break;
        }
        else
        {
            _1184 = _1185;
            _1186 = _1187;
            continue;
        }
    }
    float _1244 = _1185 * 0.009947183541953563690185546875;
    float _1249 = dot(vec3(_869, _870, _871), vec3(_953, _954, _955)) * 2.0;
    vec4 _1263 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_869 - (_1249 * _953), _870 - (_1249 * _954), _871 - (_1249 * _955)), 4.0 - (_934 * 4.0));
    float _1268 = dot(vec3(_970, _972, _973), vec3(_953, _954, _955));
    float _1518 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
    float _1278 = exp2(log2(1.0 - (isnan(1.0) ? _1518 : (isnan(_1518) ? 1.0 : min(_1518, 1.0)))) * 5.0);
    vec4 _1290 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_953, _954, _955), 0.0);
    float _1301 = (_1154 + _1151) + (((_1290.x * _1012) + (((_1278 * (0.959999978542327880859375 - _1019)) + _1022) * _1263.x)) * _1244);
    float _1305 = (_1155 + _1152) + (((_1290.y * _1013) + (((_1278 * (0.959999978542327880859375 - _1020)) + _1024) * _1263.y)) * _1244);
    float _1309 = (_1156 + _1153) + (((_1290.z * _1014) + (((_1278 * (0.959999978542327880859375 - _1021)) + _1025) * _1263.z)) * _1244);
    float _1529 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
    float _1540 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
    float _1551 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
    bool _1318 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1329;
    _1329.x = _1318 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1529 : (isnan(_1529) ? 1.0 : min(_1529, 1.0)));
    _1329.y = _1318 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1540 : (isnan(_1540) ? 1.0 : min(_1540, 1.0)));
    _1329.z = _1318 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1551 : (isnan(_1551) ? 1.0 : min(_1551, 1.0)));
    payload._m0 = _1329;
}


