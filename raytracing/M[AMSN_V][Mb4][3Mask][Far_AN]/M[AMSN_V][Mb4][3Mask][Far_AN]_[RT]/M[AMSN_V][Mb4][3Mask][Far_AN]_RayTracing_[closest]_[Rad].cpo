#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _2116;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _165 & 65535u;
            frontier_phi_3_2_ladder_2 = _169;
        }
        else
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _166 >> 16u;
        }
        _171 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
        _174 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _185 = _179 * _171;
    uint _186 = _185 + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 16u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 20u;
    }
    uvec4 _221 = texelFetch(l_geomAttrib_0, int((_213 + _185) >> 2u));
    uint _222 = _221.x;
    bool _236 = _180 == 0u;
    uint _237;
    if (_236)
    {
        _237 = _213 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 12u;
        }
        _237 = frontier_phi_9_10_ladder;
    }
    uint _241 = _181 ? (_237 + 4u) : _237;
    uvec4 _245 = texelFetch(l_geomAttrib_0, int(((_185 + 4u) + _241) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uvec4 _255 = texelFetch(l_geomAttrib_0, int(((_185 + 8u) + _241) >> 2u));
    uint _256 = _255.x;
    uint _265 = _179 * _173;
    uint _266 = _265 + 12u;
    uint _287;
    uint _288;
    uint _289;
    uint _290;
    if (_184)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_266 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
        _290 = 16u;
    }
    else
    {
        uint _275 = _266 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
        _290 = 20u;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int((_290 + _265) >> 2u));
    uint _297 = _296.x;
    uint _309;
    if (_236)
    {
        _309 = _290 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _290 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _290 + 12u;
        }
        _309 = frontier_phi_16_17_ladder;
    }
    uint _313 = _181 ? (_309 + 4u) : _309;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_265 + 4u) + _313) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uvec4 _327 = texelFetch(l_geomAttrib_0, int(((_265 + 8u) + _313) >> 2u));
    uint _328 = _327.x;
    uint _337 = _179 * _174;
    uint _338 = _337 + 12u;
    uint _359;
    uint _360;
    uint _361;
    uint _362;
    if (_184)
    {
        uvec4 _340 = texelFetch(l_geomAttrib_0, int(_338 >> 2u));
        uint _341 = _340.x;
        _359 = _341 & 255u;
        _360 = (_341 >> 8u) & 255u;
        _361 = (_341 >> 16u) & 255u;
        _362 = 16u;
    }
    else
    {
        uint _347 = _338 >> 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomAttrib_0, int(_347)).x, texelFetch(l_geomAttrib_0, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _359 = _354 & 65535u;
        _360 = _354 >> 16u;
        _361 = _353.y & 65535u;
        _362 = 20u;
    }
    uvec4 _368 = texelFetch(l_geomAttrib_0, int((_362 + _337) >> 2u));
    uint _369 = _368.x;
    uint _381;
    if (_236)
    {
        _381 = _362 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _362 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _362 + 12u;
        }
        _381 = frontier_phi_23_24_ladder;
    }
    uint _385 = _181 ? (_381 + 4u) : _381;
    uvec4 _389 = texelFetch(l_geomAttrib_0, int(((_337 + 4u) + _385) >> 2u));
    uint _390 = _389.x;
    float _394 = float(int(uint(int(_390 << 16u) >> int(16u))));
    float _395 = float(int(uint(int(_390) >> int(16u))));
    uvec4 _399 = texelFetch(l_geomAttrib_0, int(((_337 + 8u) + _385) >> 2u));
    uint _400 = _399.x;
    bool _410 = _130.z == 0u;
    float _446;
    float _447;
    float _448;
    if (_410)
    {
        uint _413 = _171 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _171 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_410)
    {
        uint _451 = _173 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _173 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _522;
    float _523;
    float _524;
    if (_410)
    {
        uint _489 = _174 * 3u;
        uvec3 _498 = uvec3(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_489 + 2u)).x);
        _522 = uintBitsToFloat(_498.x);
        _523 = uintBitsToFloat(_498.y);
        _524 = uintBitsToFloat(_498.z);
    }
    else
    {
        uint _506 = _174 * 2u;
        uvec2 _512 = uvec2(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x);
        uint _513 = _512.x;
        _522 = unpackHalf2x16(_513).x;
        _523 = unpackHalf2x16(_513 >> 16u).x;
        _524 = unpackHalf2x16(_512.y).x;
    }
    float _527 = (1.0 - hit._m0.x) - hit._m0.y;
    float _559 = _527 * 0.0039215688593685626983642578125;
    float _564 = hit._m0.x * 0.0039215688593685626983642578125;
    float _568 = hit._m0.y * 0.0039215688593685626983642578125;
    float _574 = (_322 - _250) * 0.00048828125;
    float _576 = (_323 - _251) * 0.00048828125;
    float _579 = (_394 - _250) * 0.00048828125;
    float _580 = (_395 - _251) * 0.00048828125;
    float _602 = _484 - _446;
    float _603 = _485 - _447;
    float _604 = _486 - _448;
    float _607 = fma(_604, gl_ObjectToWorldEXT[2u].x, fma(_603, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _602));
    float _610 = fma(_604, gl_ObjectToWorldEXT[2u].y, fma(_603, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _602));
    float _613 = fma(_604, gl_ObjectToWorldEXT[2u].z, fma(_603, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _602));
    float _614 = _522 - _446;
    float _615 = _523 - _447;
    float _616 = _524 - _448;
    float _619 = fma(_616, gl_ObjectToWorldEXT[2u].x, fma(_615, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _614));
    float _622 = fma(_616, gl_ObjectToWorldEXT[2u].y, fma(_615, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _614));
    float _625 = fma(_616, gl_ObjectToWorldEXT[2u].z, fma(_615, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _614));
    float _626 = (((_322 * hit._m0.x) + (_250 * _527)) + (_394 * hit._m0.y)) * 0.00048828125;
    float _627 = (((_323 * hit._m0.x) + (_251 * _527)) + (_395 * hit._m0.y)) * 0.00048828125;
    float _631 = (((float(_210) * _527) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_359) * hit._m0.y);
    float _634 = (((float(_211) * _527) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_360) * hit._m0.y);
    float _637 = (((float(_212) * _527) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _638 = _631 * 0.0078740157186985015869140625;
    float _640 = _634 * 0.0078740157186985015869140625;
    float _641 = _637 * 0.0078740157186985015869140625;
    float _654 = ((((float(_222 & 255u) * _527) + (-127.0)) + (float(_297 & 255u) * hit._m0.x)) + (float(_369 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _655 = ((((float((_222 >> 8u) & 255u) * _527) + (-127.0)) + (float((_297 >> 8u) & 255u) * hit._m0.x)) + (float((_369 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float((_222 >> 16u) & 255u) * _527) + (-127.0)) + (float((_297 >> 16u) & 255u) * hit._m0.x)) + (float((_369 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float(_222 >> 24u) * _527) + (-127.0)) + (float(_297 >> 24u) * hit._m0.x)) + (float(_369 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _667 = ((_655 * _641) - (_656 * _640)) * _657;
    float _668 = ((_656 * _638) - (_654 * _641)) * _657;
    float _669 = ((_654 * _640) - (_655 * _638)) * _657;
    float _673 = inversesqrt(dot(vec3(_667, _668, _669), vec3(_667, _668, _669)));
    uvec2 _693 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_13, int(0u)));
    bool _698 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _751;
    if (_698)
    {
        float _709 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _715 = (_625 * _610) - (_622 * _613);
        float _718 = (_619 * _613) - (_625 * _607);
        float _721 = (_622 * _607) - (_619 * _610);
        float _748 = ((log2((((float(_693.y) * 0.5) * float(_693.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_718 * _718) + (_721 * _721)) + (_715 * _715)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_709 * gl_WorldRayDirectionEXT.x, _709 * gl_WorldRayDirectionEXT.y, _709 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _751 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    }
    else
    {
        _751 = 0.0;
    }
    vec4 _755 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _626) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _627) + cbTextureTilingScale._m0[3u].w), _751);
    float _757 = _755.x;
    float _758 = _755.y;
    float _759 = _755.z;
    float _773 = (1.0 - cbMtdParam._m0[14u].z) * (1.0 / cbMtdParam._m0[13u].y);
    float _2217 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _774 = isnan(1.0) ? _2217 : (isnan(_2217) ? 1.0 : min(_2217, 1.0));
    uvec2 _786 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_1, int(0u)));
    float _837;
    if (_698)
    {
        float _797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _803 = (_625 * _610) - (_622 * _613);
        float _806 = (_619 * _613) - (_625 * _607);
        float _809 = (_622 * _607) - (_619 * _610);
        float _835 = ((log2((((float(_786.y) * 0.5) * float(_786.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_806 * _806) + (_809 * _809)) + (_803 * _803)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_797 * gl_WorldRayDirectionEXT.x, _797 * gl_WorldRayDirectionEXT.y, _797 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _837 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    }
    else
    {
        _837 = 0.0;
    }
    vec4 _839 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _626) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _627) + cbTextureTilingScale._m0[1u].w), _837);
    float _841 = _839.x;
    float _842 = _839.y;
    float _843 = _839.z;
    float _850 = (((_757 * cbMtdParam._m0[12u].x) - _841) * _774) + _841;
    float _851 = (((_758 * cbMtdParam._m0[12u].y) - _842) * _774) + _842;
    float _852 = (((_759 * cbMtdParam._m0[12u].z) - _843) * _774) + _843;
    uvec2 _873 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_2, int(0u)));
    float _924;
    if (_698)
    {
        float _884 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _890 = (_625 * _610) - (_622 * _613);
        float _893 = (_619 * _613) - (_625 * _607);
        float _896 = (_622 * _607) - (_619 * _610);
        float _922 = ((log2((((float(_873.y) * 0.5) * float(_873.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_893 * _893) + (_896 * _896)) + (_890 * _890)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_884 * gl_WorldRayDirectionEXT.x, _884 * gl_WorldRayDirectionEXT.y, _884 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _924 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    }
    else
    {
        _924 = 0.0;
    }
    vec4 _926 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _626) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _627) + cbTextureTilingScale._m0[6u].w), _924);
    float _928 = _926.x;
    float _929 = _926.y;
    float _930 = _926.z;
    uvec2 _948 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_0, int(0u)));
    float _999;
    if (_698)
    {
        float _959 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _965 = (_625 * _610) - (_622 * _613);
        float _968 = (_619 * _613) - (_625 * _607);
        float _971 = (_622 * _607) - (_619 * _610);
        float _997 = ((log2((((float(_948.y) * 0.5) * float(_948.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_968 * _968) + (_971 * _971)) + (_965 * _965)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_959 * gl_WorldRayDirectionEXT.x, _959 * gl_WorldRayDirectionEXT.y, _959 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _999 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    }
    else
    {
        _999 = 0.0;
    }
    vec4 _1002 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * _626) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _627) + cbTextureTilingScale._m0[0u].w), _999);
    uvec2 _1031 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_3, int(0u)));
    float _1082;
    if (_698)
    {
        float _1042 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1048 = (_625 * _610) - (_622 * _613);
        float _1051 = (_619 * _613) - (_625 * _607);
        float _1054 = (_622 * _607) - (_619 * _610);
        float _1080 = ((log2((((float(_1031.y) * 0.5) * float(_1031.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1051 * _1051) + (_1054 * _1054)) + (_1048 * _1048)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1042 * gl_WorldRayDirectionEXT.x, _1042 * gl_WorldRayDirectionEXT.y, _1042 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1082 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    }
    else
    {
        _1082 = 0.0;
    }
    float _1088 = cbMtdParam._m0[14u].y * textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _626) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _627) + cbTextureTilingScale._m0[7u].w), _1082).x;
    float _1095 = ((cbMtdParam._m0[13u].x * (-1.39999997615814208984375)) * ((((((1.0 - (_559 * float(_256 & 255u))) - (_564 * float(_328 & 255u))) - (_568 * float(_400 & 255u))) - _1002.x) * 2.0) - _1088)) + 1.0;
    float _2248 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _1096 = isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0));
    float _1106 = (_1096 * ((_928 - _850) + (((cbMtdParam._m0[10u].x * _757) - _928) * _774))) + _850;
    float _1107 = (_1096 * ((_929 - _851) + (((cbMtdParam._m0[10u].y * _758) - _929) * _774))) + _851;
    float _1108 = (_1096 * ((_930 - _852) + (((cbMtdParam._m0[10u].z * _759) - _930) * _774))) + _852;
    uvec2 _1130 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_8, int(0u)));
    float _1181;
    if (_698)
    {
        float _1141 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1147 = (_625 * _610) - (_622 * _613);
        float _1150 = (_619 * _613) - (_625 * _607);
        float _1153 = (_622 * _607) - (_619 * _610);
        float _1179 = ((log2((((float(_1130.y) * 0.5) * float(_1130.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1150 * _1150) + (_1153 * _1153)) + (_1147 * _1147)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1141 * gl_WorldRayDirectionEXT.x, _1141 * gl_WorldRayDirectionEXT.y, _1141 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1181 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    }
    else
    {
        _1181 = 0.0;
    }
    vec4 _1183 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _626) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _627) + cbTextureTilingScale._m0[11u].w), _1181);
    float _1185 = _1183.x;
    float _1186 = _1183.y;
    float _1187 = _1183.z;
    float _1199 = ((((((((1.0 - (_559 * float((_256 >> 8u) & 255u))) - (_564 * float((_328 >> 8u) & 255u))) - (_568 * float((_400 >> 8u) & 255u))) - _1002.y) * 2.0) - _1088) * (-1.39999997615814208984375)) * cbMtdParam._m0[13u].w) + 1.0;
    float _2264 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1200 = isnan(1.0) ? _2264 : (isnan(_2264) ? 1.0 : min(_2264, 1.0));
    float _1210 = (((_1185 - _1106) + (((cbMtdParam._m0[9u].x * _757) - _1185) * _774)) * _1200) + _1106;
    float _1211 = (((_1186 - _1107) + (((cbMtdParam._m0[9u].y * _758) - _1186) * _774)) * _1200) + _1107;
    float _1212 = (_1200 * ((_1187 - _1108) + (((cbMtdParam._m0[9u].z * _759) - _1187) * _774))) + _1108;
    uvec2 _1232 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_11, int(0u)));
    float _1283;
    if (_698)
    {
        float _1243 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1249 = (_625 * _610) - (_622 * _613);
        float _1252 = (_619 * _613) - (_625 * _607);
        float _1255 = (_622 * _607) - (_619 * _610);
        float _1281 = ((log2((((float(_1232.y) * 0.5) * float(_1232.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1252 * _1252) + (_1255 * _1255)) + (_1249 * _1249)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1243 * gl_WorldRayDirectionEXT.x, _1243 * gl_WorldRayDirectionEXT.y, _1243 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1283 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
    }
    else
    {
        _1283 = 0.0;
    }
    vec4 _1285 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _626) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _627) + cbTextureTilingScale._m0[2u].w), _1283);
    float _1287 = _1285.x;
    float _1288 = _1285.y;
    float _1289 = _1285.z;
    float _1301 = ((((((((1.0 - (_559 * float((_256 >> 16u) & 255u))) - (_564 * float((_328 >> 16u) & 255u))) - (_568 * float((_400 >> 16u) & 255u))) - _1002.z) * 2.0) - _1088) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].x) + 1.0;
    float _2280 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
    float _1302 = isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0));
    float _1312 = (((_1287 - _1210) + (((cbMtdParam._m0[11u].x * _757) - _1287) * _774)) * _1302) + _1210;
    float _1313 = (((_1288 - _1211) + (((cbMtdParam._m0[11u].y * _758) - _1288) * _774)) * _1302) + _1211;
    float _1314 = (_1302 * ((_1289 - _1212) + (((cbMtdParam._m0[11u].z * _759) - _1289) * _774))) + _1212;
    uvec2 _1328 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_16, int(0u)));
    float _1379;
    if (_698)
    {
        float _1339 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1345 = (_625 * _610) - (_622 * _613);
        float _1348 = (_619 * _613) - (_625 * _607);
        float _1351 = (_622 * _607) - (_619 * _610);
        float _1377 = ((log2((((float(_1328.y) * 0.5) * float(_1328.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1348 * _1348) + (_1351 * _1351)) + (_1345 * _1345)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1339 * gl_WorldRayDirectionEXT.x, _1339 * gl_WorldRayDirectionEXT.y, _1339 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1379 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
    }
    else
    {
        _1379 = 0.0;
    }
    vec4 _1382 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _626) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _627) + cbTextureTilingScale._m0[5u].w), _1379);
    float _1384 = _1382.x;
    float _1385 = _1382.y;
    float _1386 = _1382.z;
    uvec2 _1398 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_7, int(0u)));
    float _1449;
    if (_698)
    {
        float _1409 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1415 = (_625 * _610) - (_622 * _613);
        float _1418 = (_619 * _613) - (_625 * _607);
        float _1421 = (_622 * _607) - (_619 * _610);
        float _1447 = ((log2((((float(_1398.y) * 0.5) * float(_1398.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1418 * _1418) + (_1421 * _1421)) + (_1415 * _1415)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1409 * gl_WorldRayDirectionEXT.x, _1409 * gl_WorldRayDirectionEXT.y, _1409 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1449 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
    }
    else
    {
        _1449 = 0.0;
    }
    vec4 _1451 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _626) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _627) + cbTextureTilingScale._m0[10u].w), _1449);
    float _1453 = _1451.x;
    float _1454 = _1451.y;
    float _1455 = _1451.z;
    uvec2 _1476 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_15, int(0u)));
    float _1527;
    if (_698)
    {
        float _1487 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1493 = (_625 * _610) - (_622 * _613);
        float _1496 = (_619 * _613) - (_625 * _607);
        float _1499 = (_622 * _607) - (_619 * _610);
        float _1525 = ((log2((((float(_1476.y) * 0.5) * float(_1476.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1496 * _1496) + (_1499 * _1499)) + (_1493 * _1493)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1487 * gl_WorldRayDirectionEXT.x, _1487 * gl_WorldRayDirectionEXT.y, _1487 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1527 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
    }
    else
    {
        _1527 = 0.0;
    }
    vec4 _1529 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _626) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _627) + cbTextureTilingScale._m0[4u].w), _1527);
    float _1531 = _1529.x;
    float _1532 = _1529.y;
    float _1533 = _1529.z;
    uvec2 _1554 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_6, int(0u)));
    float _1605;
    if (_698)
    {
        float _1565 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1571 = (_625 * _610) - (_622 * _613);
        float _1574 = (_619 * _613) - (_625 * _607);
        float _1577 = (_622 * _607) - (_619 * _610);
        float _1603 = ((log2((((float(_1554.y) * 0.5) * float(_1554.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1574 * _1574) + (_1577 * _1577)) + (_1571 * _1571)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1565 * gl_WorldRayDirectionEXT.x, _1565 * gl_WorldRayDirectionEXT.y, _1565 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1605 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0));
    }
    else
    {
        _1605 = 0.0;
    }
    vec4 _1607 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _626) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _627) + cbTextureTilingScale._m0[9u].w), _1605);
    float _1609 = _1607.x;
    float _1610 = _1607.y;
    float _1611 = _1607.z;
    uvec2 _1632 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_5, int(0u)));
    float _1636 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1637 = _1636 * gl_WorldRayDirectionEXT.x;
    float _1638 = _1636 * gl_WorldRayDirectionEXT.y;
    float _1639 = _1636 * gl_WorldRayDirectionEXT.z;
    float _1683;
    if (_698)
    {
        float _1649 = (_625 * _610) - (_622 * _613);
        float _1652 = (_619 * _613) - (_625 * _607);
        float _1655 = (_622 * _607) - (_619 * _610);
        float _1681 = ((log2((((float(_1632.y) * 0.5) * float(_1632.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1652 * _1652) + (_1655 * _1655)) + (_1649 * _1649)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1637, _1638, _1639), vec3(_638, _640, _641))));
        _1683 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
    }
    else
    {
        _1683 = 0.0;
    }
    vec4 _1685 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _626) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _627) + cbTextureTilingScale._m0[8u].w), _1683);
    float _1687 = _1685.x;
    float _1688 = _1685.y;
    float _1689 = _1685.z;
    float _1696 = ((_1453 - _1687) * _774) + _1687;
    float _1697 = ((_1454 - _1688) * _774) + _1688;
    float _1698 = ((_1455 - _1689) * _774) + _1689;
    float _1705 = (((((_1453 - _1609) * _774) + _1609) - _1696) * _1096) + _1696;
    float _1706 = (((((_1454 - _1610) * _774) + _1610) - _1697) * _1096) + _1697;
    float _1707 = (((((_1455 - _1611) * _774) + _1611) - _1698) * _1096) + _1698;
    float _1714 = (((((_1453 - _1531) * _774) + _1531) - _1705) * _1200) + _1705;
    float _1715 = (((((_1454 - _1532) * _774) + _1532) - _1706) * _1200) + _1706;
    float _1716 = (((((_1455 - _1533) * _774) + _1533) - _1707) * _1200) + _1707;
    float _1727 = (((((((_1453 - _1384) * _774) + _1384) - _1714) * _1302) + _1714) * 2.0) + (-1.0);
    float _1729 = (((((((_1454 - _1385) * _774) + _1385) - _1715) * _1302) + _1715) * 2.0) + (-1.0);
    float _1730 = dot(vec2(_1727, _1729), vec2(_1727, _1729));
    float _2316 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
    float _1735 = sqrt(1.0 - (isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0))));
    float _1737 = (_1716 + cbMtdParam._m0[13u].z) + (((((_1455 - _1386) * _774) + _1386) - _1716) * _1302);
    float _1753 = (((_1727 * cbMtdParam._m0[14u].w) - _1727) * _774) + _1727;
    float _1754 = (((_1729 * cbMtdParam._m0[15u].x) - _1729) * _774) + _1729;
    float _1755 = (((cbMtdParam._m0[15u].y * _1735) - _1735) * _774) + _1735;
    float _1758 = fma(_1755, _638, fma(_1754, _654, (_673 * _667) * _1753));
    float _1761 = fma(_1755, _640, fma(_1754, _655, (_673 * _668) * _1753));
    float _1764 = fma(_1755, _641, fma(_1754, _656, (_673 * _669) * _1753));
    float _1768 = inversesqrt(dot(vec3(_1758, _1761, _1764), vec3(_1758, _1761, _1764)));
    float _1769 = _1768 * _1758;
    float _1770 = _1768 * _1761;
    float _1771 = _1768 * _1764;
    float _1783 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1784 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1785 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1786 = (-0.0) - _1637;
    float _1788 = (-0.0) - _1638;
    float _1789 = (-0.0) - _1639;
    float _1795 = float(gl_LaunchIDEXT.x);
    float _1796 = float(gl_LaunchIDEXT.y);
    float _1799 = float(gl_LaunchSizeEXT.x);
    float _1813 = fract(fract(sin(dot(vec2(_1795 / _1799, _1796 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1826 = fract(fract(sin(dot(vec2((_1795 + 128.0) / _1799, (_1796 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _1836 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1837 = _1836.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1837, _1836.w, _1837, vec3(_1783, _1784, _1785), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1945;
    float _1946;
    float _1947;
    float _1948;
    float _1949;
    float _1950;
    if (_72._m0 == 0u)
    {
        float _1857 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1769, _1770, _1771));
        float _2327 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
        float _1860 = isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0));
        float _1879 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1737) * 0.949999988079071044921875);
        float _1880 = _1879 * _1879;
        float _1881 = g_sceneCB._m0[4u].x - _1637;
        float _1882 = g_sceneCB._m0[4u].y - _1638;
        float _1883 = g_sceneCB._m0[4u].z - _1639;
        float _1887 = inversesqrt(dot(vec3(_1881, _1882, _1883), vec3(_1881, _1882, _1883)));
        float _1888 = _1887 * _1881;
        float _1889 = _1887 * _1882;
        float _1890 = _1887 * _1883;
        float _1891 = dot(vec3(_1769, _1770, _1771), vec3(g_sceneCB._m0[4u].xyz));
        float _2338 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1894 = isnan(1.0) ? _2338 : (isnan(_2338) ? 1.0 : min(_2338, 1.0));
        float _1895 = dot(vec3(_1769, _1770, _1771), vec3(_1786, _1788, _1789));
        float _2349 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1898 = isnan(1.0) ? _2349 : (isnan(_2349) ? 1.0 : min(_2349, 1.0));
        float _1899 = dot(vec3(_1769, _1770, _1771), vec3(_1888, _1889, _1890));
        float _2360 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
        float _1902 = isnan(1.0) ? _2360 : (isnan(_2360) ? 1.0 : min(_2360, 1.0));
        float _1903 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1888, _1889, _1890));
        float _2371 = isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0));
        float _1907 = _1880 * _1880;
        float _1911 = ((_1902 * _1902) * (_1907 + (-1.0))) + 1.0;
        float _1923 = (exp2(log2(1.0 - (isnan(1.0) ? _2371 : (isnan(_2371) ? 1.0 : min(_2371, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1925 = 1.0 - _1880;
        float _1936 = (0.5 / (((_1898 * ((_1894 * _1925) + _1880)) + 9.9999999392252902907785028219223e-09) + (((_1898 * _1925) + _1880) * _1894))) * _1894;
        float _2382 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
        float _1938 = (isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0))) * (_1907 / ((_1911 * _1911) * 3.141590118408203125));
        _1945 = ((_1312 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1860;
        _1946 = ((_1313 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1860;
        _1947 = ((_1314 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1860;
        _1948 = (_1923 * g_sceneCB._m0[5u].x) * _1938;
        _1949 = (_1923 * g_sceneCB._m0[5u].y) * _1938;
        _1950 = (_1923 * g_sceneCB._m0[5u].z) * _1938;
    }
    else
    {
        _1945 = 0.0;
        _1946 = 0.0;
        _1947 = 0.0;
        _1948 = 0.0;
        _1949 = 0.0;
        _1950 = 0.0;
    }
    bool _1952 = abs(_1770) < 0.89999997615814208984375;
    float _1954 = float(_1952);
    float _1955 = _1952 ? 0.0 : 1.0;
    float _1958 = (_1954 * _1771) - (_1955 * _1770);
    float _1959 = _1955 * _1769;
    float _1961 = (-0.0) - (_1769 * _1954);
    float _1965 = inversesqrt(dot(vec3(_1958, _1959, _1961), vec3(_1958, _1959, _1961)));
    float _1966 = _1958 * _1965;
    float _1967 = _1959 * _1965;
    float _1968 = _1965 * _1961;
    float _1971 = (_1967 * _1771) - (_1968 * _1770);
    float _1974 = (_1968 * _1769) - (_1966 * _1771);
    float _1977 = (_1966 * _1770) - (_1967 * _1769);
    float _1979;
    float _1987;
    float _1978 = 0.0;
    uint _1980 = 0u;
    float _1984;
    bool _1986;
    for (;;)
    {
        _1984 = (float(_1980) + _1813) * 0.03125;
        _1986 = _1980 == 0u;
        float frontier_phi_63_pred;
        if (_1986)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _2121;
            float _2122;
            uint _2124;
            _2121 = 0.0;
            _2122 = 0.5;
            _2124 = _1980;
            float _1988;
            for (;;)
            {
                _1988 = ((_2124 & 1u) != 0u) ? (_2122 + _2121) : _2121;
                uint _2125 = _2124 >> 1u;
                if (_2125 == 0u)
                {
                    break;
                }
                else
                {
                    _2121 = _1988;
                    _2122 *= 0.5;
                    _2124 = _2125;
                }
            }
            frontier_phi_63_pred = _1988;
        }
        _1987 = frontier_phi_63_pred;
        float _1989 = _1987 + _1826;
        float _1993 = sqrt(_1984);
        float _1994 = ((_1989 > 1.0) ? (_1989 + (-1.0)) : _1989) * 6.283185482025146484375;
        float _1997 = cos(_1994) * _1993;
        float _1999 = sin(_1994) * _1993;
        float _2001 = sqrt(1.0 - _1984);
        float _2014 = ((_2001 * _1769) + (_1997 * _1971)) + (_1999 * _1966);
        float _2015 = ((_2001 * _1770) + (_1997 * _1974)) + (_1999 * _1967);
        float _2016 = ((_2001 * _1771) + (_1997 * _1977)) + (_1999 * _1968);
        _71._m0 = 1u;
        uvec4 _2020 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2021 = _2020.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2021, _2020.w, _2021, vec3(_1783, _1784, _1785), 9.9999997473787516355514526367188e-05, vec3(_2014, _2015, _2016), 10000.0, 1);
        float _2027 = dot(vec3(_1769, _1770, _1771), vec3(_2014, _2015, _2016));
        float _2393 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
        float _2030 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _1979 = ((float(_71._m0 == 0u) * _2030) / (_2030 * 0.3183098733425140380859375)) + _1978;
        uint _1981 = _1980 + 1u;
        if (_1981 == 32u)
        {
            break;
        }
        else
        {
            _1978 = _1979;
            _1980 = _1981;
            continue;
        }
    }
    float _2038 = _1979 * 0.009947183541953563690185546875;
    float _2043 = dot(vec3(_1637, _1638, _1639), vec3(_1769, _1770, _1771)) * 2.0;
    vec4 _2057 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1637 - (_2043 * _1769), _1638 - (_2043 * _1770), _1639 - (_2043 * _1771)), 4.0 - (_1737 * 4.0));
    float _2062 = dot(vec3(_1786, _1788, _1789), vec3(_1769, _1770, _1771));
    float _2404 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
    float _2071 = (exp2(log2(1.0 - (isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2077 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1769, _1770, _1771), 0.0);
    float _2088 = (_1948 + _1945) + (((_2077.x * _1312) + (_2071 * _2057.x)) * _2038);
    float _2092 = (_1949 + _1946) + (((_2077.y * _1313) + (_2071 * _2057.y)) * _2038);
    float _2096 = (_1950 + _1947) + (((_2077.z * _1314) + (_2071 * _2057.z)) * _2038);
    float _2415 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2426 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
    float _2437 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    bool _2104 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2115;
    _2115.x = _2104 ? ((_631 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2415 : (isnan(_2415) ? 1.0 : min(_2415, 1.0)));
    _2115.y = _2104 ? ((_634 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2426 : (isnan(_2426) ? 1.0 : min(_2426, 1.0)));
    _2115.z = _2104 ? ((_637 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2437 : (isnan(_2437) ? 1.0 : min(_2437, 1.0)));
    payload._m0 = _2115;
}


