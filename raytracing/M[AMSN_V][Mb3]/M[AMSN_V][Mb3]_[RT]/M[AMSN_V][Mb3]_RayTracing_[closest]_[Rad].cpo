#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_7;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb3_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1585;

void main()
{
    float _75 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _114 = sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _75)))));
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _164;
        }
        else
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _161 >> 16u;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder;
        _169 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _180 = _174 * _166;
    uint _181 = _180 + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 16u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 20u;
    }
    uvec4 _216 = texelFetch(l_geomAttrib_0, int((_208 + _180) >> 2u));
    uint _217 = _216.x;
    bool _231 = _175 == 0u;
    uint _232;
    if (_231)
    {
        _232 = _208 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 12u;
        }
        _232 = frontier_phi_9_10_ladder;
    }
    uint _236 = _176 ? (_232 + 4u) : _232;
    uvec4 _240 = texelFetch(l_geomAttrib_0, int(((_180 + 4u) + _236) >> 2u));
    uint _241 = _240.x;
    float _245 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_241) >> int(16u))));
    uvec4 _250 = texelFetch(l_geomAttrib_0, int(((_180 + 8u) + _236) >> 2u));
    uint _251 = _250.x;
    uint _257 = _174 * _168;
    uint _258 = _257 + 12u;
    uint _279;
    uint _280;
    uint _281;
    uint _282;
    if (_179)
    {
        uvec4 _260 = texelFetch(l_geomAttrib_0, int(_258 >> 2u));
        uint _261 = _260.x;
        _279 = _261 & 255u;
        _280 = (_261 >> 8u) & 255u;
        _281 = (_261 >> 16u) & 255u;
        _282 = 16u;
    }
    else
    {
        uint _267 = _258 >> 2u;
        uvec2 _273 = uvec2(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x);
        uint _274 = _273.x;
        _279 = _274 & 65535u;
        _280 = _274 >> 16u;
        _281 = _273.y & 65535u;
        _282 = 20u;
    }
    uvec4 _288 = texelFetch(l_geomAttrib_0, int((_282 + _257) >> 2u));
    uint _289 = _288.x;
    uint _301;
    if (_231)
    {
        _301 = _282 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _282 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _282 + 12u;
        }
        _301 = frontier_phi_16_17_ladder;
    }
    uint _305 = _176 ? (_301 + 4u) : _301;
    uvec4 _309 = texelFetch(l_geomAttrib_0, int(((_257 + 4u) + _305) >> 2u));
    uint _310 = _309.x;
    float _314 = float(int(uint(int(_310 << 16u) >> int(16u))));
    float _315 = float(int(uint(int(_310) >> int(16u))));
    uvec4 _319 = texelFetch(l_geomAttrib_0, int(((_257 + 8u) + _305) >> 2u));
    uint _320 = _319.x;
    uint _326 = _174 * _169;
    uint _327 = _326 + 12u;
    uint _348;
    uint _349;
    uint _350;
    uint _351;
    if (_179)
    {
        uvec4 _329 = texelFetch(l_geomAttrib_0, int(_327 >> 2u));
        uint _330 = _329.x;
        _348 = _330 & 255u;
        _349 = (_330 >> 8u) & 255u;
        _350 = (_330 >> 16u) & 255u;
        _351 = 16u;
    }
    else
    {
        uint _336 = _327 >> 2u;
        uvec2 _342 = uvec2(texelFetch(l_geomAttrib_0, int(_336)).x, texelFetch(l_geomAttrib_0, int(_336 + 1u)).x);
        uint _343 = _342.x;
        _348 = _343 & 65535u;
        _349 = _343 >> 16u;
        _350 = _342.y & 65535u;
        _351 = 20u;
    }
    uvec4 _357 = texelFetch(l_geomAttrib_0, int((_351 + _326) >> 2u));
    uint _358 = _357.x;
    uint _370;
    if (_231)
    {
        _370 = _351 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _351 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _351 + 12u;
        }
        _370 = frontier_phi_23_24_ladder;
    }
    uint _374 = _176 ? (_370 + 4u) : _370;
    uvec4 _378 = texelFetch(l_geomAttrib_0, int(((_326 + 4u) + _374) >> 2u));
    uint _379 = _378.x;
    float _383 = float(int(uint(int(_379 << 16u) >> int(16u))));
    float _384 = float(int(uint(int(_379) >> int(16u))));
    uvec4 _388 = texelFetch(l_geomAttrib_0, int(((_326 + 8u) + _374) >> 2u));
    uint _389 = _388.x;
    bool _396 = _125.z == 0u;
    float _432;
    float _433;
    float _434;
    if (_396)
    {
        uint _399 = _166 * 3u;
        uvec3 _408 = uvec3(texelFetch(l_geomPositionBuffer, int(_399)).x, texelFetch(l_geomPositionBuffer, int(_399 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_399 + 2u)).x);
        _432 = uintBitsToFloat(_408.x);
        _433 = uintBitsToFloat(_408.y);
        _434 = uintBitsToFloat(_408.z);
    }
    else
    {
        uint _416 = _166 * 2u;
        uvec2 _422 = uvec2(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x);
        uint _423 = _422.x;
        _432 = unpackHalf2x16(_423).x;
        _433 = unpackHalf2x16(_423 >> 16u).x;
        _434 = unpackHalf2x16(_422.y).x;
    }
    float _470;
    float _471;
    float _472;
    if (_396)
    {
        uint _437 = _168 * 3u;
        uvec3 _446 = uvec3(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_437 + 2u)).x);
        _470 = uintBitsToFloat(_446.x);
        _471 = uintBitsToFloat(_446.y);
        _472 = uintBitsToFloat(_446.z);
    }
    else
    {
        uint _454 = _168 * 2u;
        uvec2 _460 = uvec2(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x);
        uint _461 = _460.x;
        _470 = unpackHalf2x16(_461).x;
        _471 = unpackHalf2x16(_461 >> 16u).x;
        _472 = unpackHalf2x16(_460.y).x;
    }
    float _508;
    float _509;
    float _510;
    if (_396)
    {
        uint _475 = _169 * 3u;
        uvec3 _484 = uvec3(texelFetch(l_geomPositionBuffer, int(_475)).x, texelFetch(l_geomPositionBuffer, int(_475 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_475 + 2u)).x);
        _508 = uintBitsToFloat(_484.x);
        _509 = uintBitsToFloat(_484.y);
        _510 = uintBitsToFloat(_484.z);
    }
    else
    {
        uint _492 = _169 * 2u;
        uvec2 _498 = uvec2(texelFetch(l_geomPositionBuffer, int(_492)).x, texelFetch(l_geomPositionBuffer, int(_492 + 1u)).x);
        uint _499 = _498.x;
        _508 = unpackHalf2x16(_499).x;
        _509 = unpackHalf2x16(_499 >> 16u).x;
        _510 = unpackHalf2x16(_498.y).x;
    }
    float _513 = (1.0 - hit._m0.x) - hit._m0.y;
    float _545 = _513 * 0.0039215688593685626983642578125;
    float _549 = hit._m0.x * 0.0039215688593685626983642578125;
    float _552 = hit._m0.y * 0.0039215688593685626983642578125;
    float _557 = (_314 - _245) * 0.00048828125;
    float _559 = (_315 - _246) * 0.00048828125;
    float _562 = (_383 - _245) * 0.00048828125;
    float _563 = (_384 - _246) * 0.00048828125;
    float _585 = _470 - _432;
    float _586 = _471 - _433;
    float _587 = _472 - _434;
    float _590 = fma(_587, gl_ObjectToWorldEXT[2u].x, fma(_586, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _585));
    float _593 = fma(_587, gl_ObjectToWorldEXT[2u].y, fma(_586, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _585));
    float _596 = fma(_587, gl_ObjectToWorldEXT[2u].z, fma(_586, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _585));
    float _597 = _508 - _432;
    float _598 = _509 - _433;
    float _599 = _510 - _434;
    float _602 = fma(_599, gl_ObjectToWorldEXT[2u].x, fma(_598, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _597));
    float _605 = fma(_599, gl_ObjectToWorldEXT[2u].y, fma(_598, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _597));
    float _608 = fma(_599, gl_ObjectToWorldEXT[2u].z, fma(_598, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _597));
    float _609 = (((_314 * hit._m0.x) + (_245 * _513)) + (_383 * hit._m0.y)) * 0.00048828125;
    float _610 = (((_315 * hit._m0.x) + (_246 * _513)) + (_384 * hit._m0.y)) * 0.00048828125;
    float _614 = (((float(_205) * _513) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_348) * hit._m0.y);
    float _617 = (((float(_206) * _513) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _620 = (((float(_207) * _513) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _621 = _614 * 0.0078740157186985015869140625;
    float _623 = _617 * 0.0078740157186985015869140625;
    float _624 = _620 * 0.0078740157186985015869140625;
    float _637 = ((((float(_217 & 255u) * _513) + (-127.0)) + (float(_289 & 255u) * hit._m0.x)) + (float(_358 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _638 = ((((float((_217 >> 8u) & 255u) * _513) + (-127.0)) + (float((_289 >> 8u) & 255u) * hit._m0.x)) + (float((_358 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _639 = ((((float((_217 >> 16u) & 255u) * _513) + (-127.0)) + (float((_289 >> 16u) & 255u) * hit._m0.x)) + (float((_358 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _640 = ((((float(_217 >> 24u) * _513) + (-127.0)) + (float(_289 >> 24u) * hit._m0.x)) + (float(_358 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _650 = ((_638 * _624) - (_639 * _623)) * _640;
    float _651 = ((_639 * _621) - (_637 * _624)) * _640;
    float _652 = ((_637 * _623) - (_638 * _621)) * _640;
    float _656 = inversesqrt(dot(vec3(_650, _651, _652), vec3(_650, _651, _652)));
    uvec2 _674 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_4, int(0u)));
    bool _679 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _732;
    if (_679)
    {
        float _690 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _696 = (_608 * _593) - (_605 * _596);
        float _699 = (_602 * _596) - (_608 * _590);
        float _702 = (_605 * _590) - (_602 * _593);
        float _729 = ((log2((((float(_674.y) * 0.5) * float(_674.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_699 * _699) + (_702 * _702)) + (_696 * _696)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_690 * gl_WorldRayDirectionEXT.x, _690 * gl_WorldRayDirectionEXT.y, _690 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _732 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    }
    else
    {
        _732 = 0.0;
    }
    float _739 = 1.0 - textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _609) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _610) + cbTextureTilingScale._m0[4u].w), _732).x;
    float _749 = ((cbMtdParam._m0[9u].x * (-1.39999997615814208984375)) * (((((1.0 - (_545 * float(_251 & 255u))) - (_549 * float(_320 & 255u))) - (_552 * float(_389 & 255u))) * 2.0) - _739)) + 1.0;
    float _1676 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _1676 : (isnan(_1676) ? 1.0 : min(_1676, 1.0));
    uvec2 _762 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_2, int(0u)));
    float _813;
    if (_679)
    {
        float _773 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _779 = (_608 * _593) - (_605 * _596);
        float _782 = (_602 * _596) - (_608 * _590);
        float _785 = (_605 * _590) - (_602 * _593);
        float _811 = ((log2((((float(_762.y) * 0.5) * float(_762.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_782 * _782) + (_785 * _785)) + (_779 * _779)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_773 * gl_WorldRayDirectionEXT.x, _773 * gl_WorldRayDirectionEXT.y, _773 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _813 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    }
    else
    {
        _813 = 0.0;
    }
    vec4 _816 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _609) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _610) + cbTextureTilingScale._m0[2u].w), _813);
    float _818 = _816.x;
    float _819 = _816.y;
    float _820 = _816.z;
    uvec2 _832 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_3, int(0u)));
    float _883;
    if (_679)
    {
        float _843 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _849 = (_608 * _593) - (_605 * _596);
        float _852 = (_602 * _596) - (_608 * _590);
        float _855 = (_605 * _590) - (_602 * _593);
        float _881 = ((log2((((float(_832.y) * 0.5) * float(_832.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_852 * _852) + (_855 * _855)) + (_849 * _849)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_843 * gl_WorldRayDirectionEXT.x, _843 * gl_WorldRayDirectionEXT.y, _843 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _883 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    }
    else
    {
        _883 = 0.0;
    }
    vec4 _885 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _609) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _610) + cbTextureTilingScale._m0[3u].w), _883);
    float _896 = ((_885.x - _818) * _750) + _818;
    float _897 = ((_885.y - _819) * _750) + _819;
    float _898 = ((_885.z - _820) * _750) + _820;
    float _907 = (((((((1.0 - (_545 * float((_251 >> 8u) & 255u))) - (_549 * float((_320 >> 8u) & 255u))) - (_552 * float((_389 >> 8u) & 255u))) * 2.0) - _739) * (-1.39999997615814208984375)) * cbMtdParam._m0[9u].y) + 1.0;
    float _1697 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _908 = isnan(1.0) ? _1697 : (isnan(_1697) ? 1.0 : min(_1697, 1.0));
    uvec2 _920 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_8, int(0u)));
    float _971;
    if (_679)
    {
        float _931 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _937 = (_608 * _593) - (_605 * _596);
        float _940 = (_602 * _596) - (_608 * _590);
        float _943 = (_605 * _590) - (_602 * _593);
        float _969 = ((log2((((float(_920.y) * 0.5) * float(_920.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_940 * _940) + (_943 * _943)) + (_937 * _937)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_931 * gl_WorldRayDirectionEXT.x, _931 * gl_WorldRayDirectionEXT.y, _931 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _971 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    }
    else
    {
        _971 = 0.0;
    }
    vec4 _973 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _609) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _610) + cbTextureTilingScale._m0[6u].w), _971);
    float _984 = ((_973.x - _896) * _908) + _896;
    float _985 = ((_973.y - _897) * _908) + _897;
    float _986 = ((_973.z - _898) * _908) + _898;
    uvec2 _998 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_0, int(0u)));
    float _1049;
    if (_679)
    {
        float _1009 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1015 = (_608 * _593) - (_605 * _596);
        float _1018 = (_602 * _596) - (_608 * _590);
        float _1021 = (_605 * _590) - (_602 * _593);
        float _1047 = ((log2((((float(_998.y) * 0.5) * float(_998.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_1018 * _1018) + (_1021 * _1021)) + (_1015 * _1015)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1009 * gl_WorldRayDirectionEXT.x, _1009 * gl_WorldRayDirectionEXT.y, _1009 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _1049 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
    }
    else
    {
        _1049 = 0.0;
    }
    vec4 _1052 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _609) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _610) + cbTextureTilingScale._m0[0u].w), _1049);
    float _1054 = _1052.x;
    float _1055 = _1052.y;
    float _1056 = _1052.z;
    uvec2 _1068 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_1, int(0u)));
    float _1119;
    if (_679)
    {
        float _1079 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1085 = (_608 * _593) - (_605 * _596);
        float _1088 = (_602 * _596) - (_608 * _590);
        float _1091 = (_605 * _590) - (_602 * _593);
        float _1117 = ((log2((((float(_1068.y) * 0.5) * float(_1068.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_1088 * _1088) + (_1091 * _1091)) + (_1085 * _1085)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1079 * gl_WorldRayDirectionEXT.x, _1079 * gl_WorldRayDirectionEXT.y, _1079 * gl_WorldRayDirectionEXT.z), vec3(_621, _623, _624))));
        _1119 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    }
    else
    {
        _1119 = 0.0;
    }
    vec4 _1121 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _609) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _610) + cbTextureTilingScale._m0[1u].w), _1119);
    float _1132 = ((_1121.x - _1054) * _750) + _1054;
    float _1133 = ((_1121.y - _1055) * _750) + _1055;
    float _1134 = ((_1121.z - _1056) * _750) + _1056;
    uvec2 _1147 = uvec2(textureSize(M_AMSN_V_Mb3_snp_0_Texture2D_7, int(0u)));
    float _1151 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1152 = _1151 * gl_WorldRayDirectionEXT.x;
    float _1153 = _1151 * gl_WorldRayDirectionEXT.y;
    float _1154 = _1151 * gl_WorldRayDirectionEXT.z;
    float _1198;
    if (_679)
    {
        float _1164 = (_608 * _593) - (_605 * _596);
        float _1167 = (_602 * _596) - (_608 * _590);
        float _1170 = (_605 * _590) - (_602 * _593);
        float _1196 = ((log2((((float(_1147.y) * 0.5) * float(_1147.x)) * abs((_563 * _557) - (_562 * _559))) / (sqrt(((_1167 * _1167) + (_1170 * _1170)) + (_1164 * _1164)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1152, _1153, _1154), vec3(_621, _623, _624))));
        _1198 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    }
    else
    {
        _1198 = 0.0;
    }
    vec4 _1200 = textureLod(sampler2D(M_AMSN_V_Mb3_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _609) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _610) + cbTextureTilingScale._m0[5u].w), _1198);
    float _1213 = ((_1200.z - _1134) * _908) + _1134;
    float _1216 = ((((_1200.x - _1132) * _908) + _1132) * 2.0) + (-1.0);
    float _1218 = ((((_1200.y - _1133) * _908) + _1133) * 2.0) + (-1.0);
    float _1219 = dot(vec2(_1216, _1218), vec2(_1216, _1218));
    float _1728 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
    float _1224 = sqrt(1.0 - (isnan(1.0) ? _1728 : (isnan(_1728) ? 1.0 : min(_1728, 1.0))));
    float _1227 = fma(_1224, _621, fma(_1218, _637, (_656 * _650) * _1216));
    float _1230 = fma(_1224, _623, fma(_1218, _638, (_656 * _651) * _1216));
    float _1233 = fma(_1224, _624, fma(_1218, _639, (_656 * _652) * _1216));
    float _1237 = inversesqrt(dot(vec3(_1227, _1230, _1233), vec3(_1227, _1230, _1233)));
    float _1238 = _1237 * _1227;
    float _1239 = _1237 * _1230;
    float _1240 = _1237 * _1233;
    float _1252 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1253 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1254 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1255 = (-0.0) - _1152;
    float _1257 = (-0.0) - _1153;
    float _1258 = (-0.0) - _1154;
    float _1264 = float(gl_LaunchIDEXT.x);
    float _1265 = float(gl_LaunchIDEXT.y);
    float _1268 = float(gl_LaunchSizeEXT.x);
    float _1282 = fract(fract(sin(dot(vec2(_1264 / _1268, _1265 / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1295 = fract(fract(sin(dot(vec2((_1264 + 128.0) / _1268, (_1265 + 128.0) / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1305 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1306 = _1305.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1306, _1305.w, _1306, vec3(_1252, _1253, _1254), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    if (_67._m0 == 0u)
    {
        float _1326 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1238, _1239, _1240));
        float _1739 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1329 = isnan(1.0) ? _1739 : (isnan(_1739) ? 1.0 : min(_1739, 1.0));
        float _1348 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1213) * 0.949999988079071044921875);
        float _1349 = _1348 * _1348;
        float _1350 = g_sceneCB._m0[4u].x - _1152;
        float _1351 = g_sceneCB._m0[4u].y - _1153;
        float _1352 = g_sceneCB._m0[4u].z - _1154;
        float _1356 = inversesqrt(dot(vec3(_1350, _1351, _1352), vec3(_1350, _1351, _1352)));
        float _1357 = _1356 * _1350;
        float _1358 = _1356 * _1351;
        float _1359 = _1356 * _1352;
        float _1360 = dot(vec3(_1238, _1239, _1240), vec3(g_sceneCB._m0[4u].xyz));
        float _1750 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1363 = isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0));
        float _1364 = dot(vec3(_1238, _1239, _1240), vec3(_1255, _1257, _1258));
        float _1761 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1367 = isnan(1.0) ? _1761 : (isnan(_1761) ? 1.0 : min(_1761, 1.0));
        float _1368 = dot(vec3(_1238, _1239, _1240), vec3(_1357, _1358, _1359));
        float _1772 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1371 = isnan(1.0) ? _1772 : (isnan(_1772) ? 1.0 : min(_1772, 1.0));
        float _1372 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1357, _1358, _1359));
        float _1783 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1376 = _1349 * _1349;
        float _1380 = ((_1371 * _1371) * (_1376 + (-1.0))) + 1.0;
        float _1392 = (exp2(log2(1.0 - (isnan(1.0) ? _1783 : (isnan(_1783) ? 1.0 : min(_1783, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1394 = 1.0 - _1349;
        float _1405 = (0.5 / (((_1367 * ((_1363 * _1394) + _1349)) + 9.9999999392252902907785028219223e-09) + (((_1367 * _1394) + _1349) * _1363))) * _1363;
        float _1794 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1407 = (isnan(1.0) ? _1794 : (isnan(_1794) ? 1.0 : min(_1794, 1.0))) * (_1376 / ((_1380 * _1380) * 3.141590118408203125));
        _1414 = ((_984 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1329;
        _1415 = ((_985 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1329;
        _1416 = ((_986 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1329;
        _1417 = (_1392 * g_sceneCB._m0[5u].x) * _1407;
        _1418 = (_1392 * g_sceneCB._m0[5u].y) * _1407;
        _1419 = (_1392 * g_sceneCB._m0[5u].z) * _1407;
    }
    else
    {
        _1414 = 0.0;
        _1415 = 0.0;
        _1416 = 0.0;
        _1417 = 0.0;
        _1418 = 0.0;
        _1419 = 0.0;
    }
    bool _1421 = abs(_1239) < 0.89999997615814208984375;
    float _1423 = float(_1421);
    float _1424 = _1421 ? 0.0 : 1.0;
    float _1427 = (_1423 * _1240) - (_1424 * _1239);
    float _1428 = _1424 * _1238;
    float _1430 = (-0.0) - (_1238 * _1423);
    float _1434 = inversesqrt(dot(vec3(_1427, _1428, _1430), vec3(_1427, _1428, _1430)));
    float _1435 = _1427 * _1434;
    float _1436 = _1428 * _1434;
    float _1437 = _1434 * _1430;
    float _1440 = (_1436 * _1240) - (_1437 * _1239);
    float _1443 = (_1437 * _1238) - (_1435 * _1240);
    float _1446 = (_1435 * _1239) - (_1436 * _1238);
    float _1448;
    float _1456;
    float _1447 = 0.0;
    uint _1449 = 0u;
    float _1453;
    bool _1455;
    for (;;)
    {
        _1453 = (float(_1449) + _1282) * 0.03125;
        _1455 = _1449 == 0u;
        float frontier_phi_53_pred;
        if (_1455)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1590;
            float _1591;
            uint _1593;
            _1590 = 0.0;
            _1591 = 0.5;
            _1593 = _1449;
            float _1457;
            for (;;)
            {
                _1457 = ((_1593 & 1u) != 0u) ? (_1591 + _1590) : _1590;
                uint _1594 = _1593 >> 1u;
                if (_1594 == 0u)
                {
                    break;
                }
                else
                {
                    _1590 = _1457;
                    _1591 *= 0.5;
                    _1593 = _1594;
                }
            }
            frontier_phi_53_pred = _1457;
        }
        _1456 = frontier_phi_53_pred;
        float _1458 = _1456 + _1295;
        float _1462 = sqrt(_1453);
        float _1463 = ((_1458 > 1.0) ? (_1458 + (-1.0)) : _1458) * 6.283185482025146484375;
        float _1466 = cos(_1463) * _1462;
        float _1468 = sin(_1463) * _1462;
        float _1470 = sqrt(1.0 - _1453);
        float _1483 = ((_1470 * _1238) + (_1466 * _1440)) + (_1468 * _1435);
        float _1484 = ((_1470 * _1239) + (_1466 * _1443)) + (_1468 * _1436);
        float _1485 = ((_1470 * _1240) + (_1466 * _1446)) + (_1468 * _1437);
        _66._m0 = 1u;
        uvec4 _1489 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1490 = _1489.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1490, _1489.w, _1490, vec3(_1252, _1253, _1254), 9.9999997473787516355514526367188e-05, vec3(_1483, _1484, _1485), 10000.0, 1);
        float _1496 = dot(vec3(_1238, _1239, _1240), vec3(_1483, _1484, _1485));
        float _1805 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1499 = isnan(1.0) ? _1805 : (isnan(_1805) ? 1.0 : min(_1805, 1.0));
        _1448 = ((float(_66._m0 == 0u) * _1499) / (_1499 * 0.3183098733425140380859375)) + _1447;
        uint _1450 = _1449 + 1u;
        if (_1450 == 32u)
        {
            break;
        }
        else
        {
            _1447 = _1448;
            _1449 = _1450;
            continue;
        }
    }
    float _1507 = _1448 * 0.009947183541953563690185546875;
    float _1512 = dot(vec3(_1152, _1153, _1154), vec3(_1238, _1239, _1240)) * 2.0;
    vec4 _1526 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1152 - (_1512 * _1238), _1153 - (_1512 * _1239), _1154 - (_1512 * _1240)), 4.0 - (_1213 * 4.0));
    float _1531 = dot(vec3(_1255, _1257, _1258), vec3(_1238, _1239, _1240));
    float _1816 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
    float _1540 = (exp2(log2(1.0 - (isnan(1.0) ? _1816 : (isnan(_1816) ? 1.0 : min(_1816, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1546 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1238, _1239, _1240), 0.0);
    float _1557 = (_1417 + _1414) + (((_1546.x * _984) + (_1540 * _1526.x)) * _1507);
    float _1561 = (_1418 + _1415) + (((_1546.y * _985) + (_1540 * _1526.y)) * _1507);
    float _1565 = (_1419 + _1416) + (((_1546.z * _986) + (_1540 * _1526.z)) * _1507);
    float _1827 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
    float _1838 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
    float _1849 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    bool _1573 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1584;
    _1584.x = _1573 ? ((_614 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1827 : (isnan(_1827) ? 1.0 : min(_1827, 1.0)));
    _1584.y = _1573 ? ((_617 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1838 : (isnan(_1838) ? 1.0 : min(_1838, 1.0)));
    _1584.z = _1573 ? ((_620 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1849 : (isnan(_1849) ? 1.0 : min(_1849, 1.0)));
    payload._m0 = _1584;
}


