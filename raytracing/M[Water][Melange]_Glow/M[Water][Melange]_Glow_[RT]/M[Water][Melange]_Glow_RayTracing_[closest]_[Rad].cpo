#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

uint _189;
uint _301;
uint _402;
vec3 _2402;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _169 & 65535u;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _170 >> 16u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        _175 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
        _178 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _183 * _175;
    uint _186 = _184 >> 2u;
    uvec3 _193 = uvec3(texelFetch(l_geomAttrib_0, int(_186)).x, _189, texelFetch(l_geomAttrib_0, int(_186 + 2u)).x);
    uint _198 = _182.z;
    bool _199 = _198 != 0u;
    bool _201 = _134.w == 0u;
    bool _202 = _199 || _201;
    uint _203 = _184 + 12u;
    uint _226;
    uint _227;
    uint _228;
    uint _229;
    if (_202)
    {
        uvec4 _205 = texelFetch(l_geomAttrib_0, int(_203 >> 2u));
        uint _206 = _205.x;
        _226 = _206 & 255u;
        _227 = (_206 >> 8u) & 255u;
        _228 = (_206 >> 16u) & 255u;
        _229 = 16u;
    }
    else
    {
        uint _214 = _203 >> 2u;
        uvec2 _220 = uvec2(texelFetch(l_geomAttrib_0, int(_214)).x, texelFetch(l_geomAttrib_0, int(_214 + 1u)).x);
        uint _221 = _220.x;
        _226 = _221 & 65535u;
        _227 = _221 >> 16u;
        _228 = _220.y & 65535u;
        _229 = 20u;
    }
    uvec4 _236 = texelFetch(l_geomAttrib_0, int((_229 + _184) >> 2u));
    uint _237 = _236.x;
    bool _251 = _198 == 0u;
    uint _252;
    if (_251)
    {
        _252 = _229 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_201)
        {
            frontier_phi_9_10_ladder = _229 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _229 + 12u;
        }
        _252 = frontier_phi_9_10_ladder;
    }
    uint _256 = _199 ? (_252 + 4u) : _252;
    uvec4 _260 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + _256) >> 2u));
    uint _261 = _260.x;
    float _265 = float(int(uint(int(_261 << 16u) >> int(16u))));
    float _266 = float(int(uint(int(_261) >> int(16u))));
    uvec4 _270 = texelFetch(l_geomAttrib_0, int(((_184 + 8u) + _256) >> 2u));
    uint _271 = _270.x;
    uvec4 _287 = texelFetch(l_geomAttrib_0, int(((_184 + 16u) + _256) >> 2u));
    uint _288 = _287.x;
    uint _297 = _183 * _177;
    uint _298 = _297 >> 2u;
    uvec3 _305 = uvec3(texelFetch(l_geomAttrib_0, int(_298)).x, _301, texelFetch(l_geomAttrib_0, int(_298 + 2u)).x);
    uint _310 = _297 + 12u;
    uint _331;
    uint _332;
    uint _333;
    uint _334;
    if (_202)
    {
        uvec4 _312 = texelFetch(l_geomAttrib_0, int(_310 >> 2u));
        uint _313 = _312.x;
        _331 = _313 & 255u;
        _332 = (_313 >> 8u) & 255u;
        _333 = (_313 >> 16u) & 255u;
        _334 = 16u;
    }
    else
    {
        uint _319 = _310 >> 2u;
        uvec2 _325 = uvec2(texelFetch(l_geomAttrib_0, int(_319)).x, texelFetch(l_geomAttrib_0, int(_319 + 1u)).x);
        uint _326 = _325.x;
        _331 = _326 & 65535u;
        _332 = _326 >> 16u;
        _333 = _325.y & 65535u;
        _334 = 20u;
    }
    uvec4 _340 = texelFetch(l_geomAttrib_0, int((_334 + _297) >> 2u));
    uint _341 = _340.x;
    uint _353;
    if (_251)
    {
        _353 = _334 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_201)
        {
            frontier_phi_16_17_ladder = _334 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _334 + 12u;
        }
        _353 = frontier_phi_16_17_ladder;
    }
    uint _357 = _199 ? (_353 + 4u) : _353;
    uvec4 _361 = texelFetch(l_geomAttrib_0, int(((_297 + 4u) + _357) >> 2u));
    uint _362 = _361.x;
    float _366 = float(int(uint(int(_362 << 16u) >> int(16u))));
    float _367 = float(int(uint(int(_362) >> int(16u))));
    uvec4 _371 = texelFetch(l_geomAttrib_0, int(((_297 + 8u) + _357) >> 2u));
    uint _372 = _371.x;
    uvec4 _388 = texelFetch(l_geomAttrib_0, int(((_297 + 16u) + _357) >> 2u));
    uint _389 = _388.x;
    uint _398 = _183 * _178;
    uint _399 = _398 >> 2u;
    uvec3 _406 = uvec3(texelFetch(l_geomAttrib_0, int(_399)).x, _402, texelFetch(l_geomAttrib_0, int(_399 + 2u)).x);
    uint _411 = _398 + 12u;
    uint _432;
    uint _433;
    uint _434;
    uint _435;
    if (_202)
    {
        uvec4 _413 = texelFetch(l_geomAttrib_0, int(_411 >> 2u));
        uint _414 = _413.x;
        _432 = _414 & 255u;
        _433 = (_414 >> 8u) & 255u;
        _434 = (_414 >> 16u) & 255u;
        _435 = 16u;
    }
    else
    {
        uint _420 = _411 >> 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomAttrib_0, int(_420)).x, texelFetch(l_geomAttrib_0, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _432 = _427 & 65535u;
        _433 = _427 >> 16u;
        _434 = _426.y & 65535u;
        _435 = 20u;
    }
    uvec4 _441 = texelFetch(l_geomAttrib_0, int((_435 + _398) >> 2u));
    uint _442 = _441.x;
    uint _454;
    if (_251)
    {
        _454 = _435 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_201)
        {
            frontier_phi_23_24_ladder = _435 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _435 + 12u;
        }
        _454 = frontier_phi_23_24_ladder;
    }
    uint _458 = _199 ? (_454 + 4u) : _454;
    uvec4 _462 = texelFetch(l_geomAttrib_0, int(((_398 + 4u) + _458) >> 2u));
    uint _463 = _462.x;
    float _467 = float(int(uint(int(_463 << 16u) >> int(16u))));
    float _468 = float(int(uint(int(_463) >> int(16u))));
    uvec4 _472 = texelFetch(l_geomAttrib_0, int(((_398 + 8u) + _458) >> 2u));
    uint _473 = _472.x;
    uvec4 _489 = texelFetch(l_geomAttrib_0, int(((_398 + 16u) + _458) >> 2u));
    uint _490 = _489.x;
    bool _500 = _134.z == 0u;
    float _536;
    float _537;
    float _538;
    if (_500)
    {
        uint _503 = _175 * 3u;
        uvec3 _512 = uvec3(texelFetch(l_geomPositionBuffer, int(_503)).x, texelFetch(l_geomPositionBuffer, int(_503 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_503 + 2u)).x);
        _536 = uintBitsToFloat(_512.x);
        _537 = uintBitsToFloat(_512.y);
        _538 = uintBitsToFloat(_512.z);
    }
    else
    {
        uint _520 = _175 * 2u;
        uvec2 _526 = uvec2(texelFetch(l_geomPositionBuffer, int(_520)).x, texelFetch(l_geomPositionBuffer, int(_520 + 1u)).x);
        uint _527 = _526.x;
        _536 = unpackHalf2x16(_527).x;
        _537 = unpackHalf2x16(_527 >> 16u).x;
        _538 = unpackHalf2x16(_526.y).x;
    }
    float _574;
    float _575;
    float _576;
    if (_500)
    {
        uint _541 = _177 * 3u;
        uvec3 _550 = uvec3(texelFetch(l_geomPositionBuffer, int(_541)).x, texelFetch(l_geomPositionBuffer, int(_541 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_541 + 2u)).x);
        _574 = uintBitsToFloat(_550.x);
        _575 = uintBitsToFloat(_550.y);
        _576 = uintBitsToFloat(_550.z);
    }
    else
    {
        uint _558 = _177 * 2u;
        uvec2 _564 = uvec2(texelFetch(l_geomPositionBuffer, int(_558)).x, texelFetch(l_geomPositionBuffer, int(_558 + 1u)).x);
        uint _565 = _564.x;
        _574 = unpackHalf2x16(_565).x;
        _575 = unpackHalf2x16(_565 >> 16u).x;
        _576 = unpackHalf2x16(_564.y).x;
    }
    float _612;
    float _613;
    float _614;
    if (_500)
    {
        uint _579 = _178 * 3u;
        uvec3 _588 = uvec3(texelFetch(l_geomPositionBuffer, int(_579)).x, texelFetch(l_geomPositionBuffer, int(_579 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_579 + 2u)).x);
        _612 = uintBitsToFloat(_588.x);
        _613 = uintBitsToFloat(_588.y);
        _614 = uintBitsToFloat(_588.z);
    }
    else
    {
        uint _596 = _178 * 2u;
        uvec2 _602 = uvec2(texelFetch(l_geomPositionBuffer, int(_596)).x, texelFetch(l_geomPositionBuffer, int(_596 + 1u)).x);
        uint _603 = _602.x;
        _612 = unpackHalf2x16(_603).x;
        _613 = unpackHalf2x16(_603 >> 16u).x;
        _614 = unpackHalf2x16(_602.y).x;
    }
    float _617 = (1.0 - hit._m0.x) - hit._m0.y;
    float _671 = (((float((_372 >> 8u) & 255u) * hit._m0.x) + (float((_271 >> 8u) & 255u) * _617)) + (float((_473 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _698 = (_366 - _265) * 0.00048828125;
    float _700 = (_367 - _266) * 0.00048828125;
    float _703 = (_467 - _265) * 0.00048828125;
    float _704 = (_468 - _266) * 0.00048828125;
    float _726 = _574 - _536;
    float _727 = _575 - _537;
    float _728 = _576 - _538;
    float _731 = fma(_728, gl_ObjectToWorldEXT[2u].x, fma(_727, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _726));
    float _734 = fma(_728, gl_ObjectToWorldEXT[2u].y, fma(_727, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _726));
    float _737 = fma(_728, gl_ObjectToWorldEXT[2u].z, fma(_727, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _726));
    float _738 = _612 - _536;
    float _739 = _613 - _537;
    float _740 = _614 - _538;
    float _743 = fma(_740, gl_ObjectToWorldEXT[2u].x, fma(_739, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _738));
    float _746 = fma(_740, gl_ObjectToWorldEXT[2u].y, fma(_739, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _738));
    float _749 = fma(_740, gl_ObjectToWorldEXT[2u].z, fma(_739, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _738));
    float _750 = (((_366 * hit._m0.x) + (_265 * _617)) + (_467 * hit._m0.y)) * 0.00048828125;
    float _751 = (((_367 * hit._m0.x) + (_266 * _617)) + (_468 * hit._m0.y)) * 0.00048828125;
    float _755 = (((float(_226) * _617) + (-127.0)) + (float(_331) * hit._m0.x)) + (float(_432) * hit._m0.y);
    float _758 = (((float(_227) * _617) + (-127.0)) + (float(_332) * hit._m0.x)) + (float(_433) * hit._m0.y);
    float _761 = (((float(_228) * _617) + (-127.0)) + (float(_333) * hit._m0.x)) + (float(_434) * hit._m0.y);
    float _762 = _755 * 0.0078740157186985015869140625;
    float _764 = _758 * 0.0078740157186985015869140625;
    float _765 = _761 * 0.0078740157186985015869140625;
    float _778 = ((((float(_237 & 255u) * _617) + (-127.0)) + (float(_341 & 255u) * hit._m0.x)) + (float(_442 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _779 = ((((float((_237 >> 8u) & 255u) * _617) + (-127.0)) + (float((_341 >> 8u) & 255u) * hit._m0.x)) + (float((_442 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _780 = ((((float((_237 >> 16u) & 255u) * _617) + (-127.0)) + (float((_341 >> 16u) & 255u) * hit._m0.x)) + (float((_442 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _781 = ((((float(_237 >> 24u) * _617) + (-127.0)) + (float(_341 >> 24u) * hit._m0.x)) + (float(_442 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _791 = ((_779 * _765) - (_780 * _764)) * _781;
    float _792 = ((_780 * _762) - (_778 * _765)) * _781;
    float _793 = ((_778 * _764) - (_779 * _762)) * _781;
    float _797 = inversesqrt(dot(vec3(_791, _792, _793), vec3(_791, _792, _793)));
    float _798 = _797 * _791;
    float _799 = _797 * _792;
    float _800 = _797 * _793;
    float _810 = cbMtdParam._m0[22u].x - cbMtdParam._m0[21u].w;
    float _813 = ((-0.0) - cbMtdParam._m0[21u].w) / (isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0)));
    float _817 = _813 / cbMtdParam._m0[23u].z;
    float _818 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _819 = isnan(8.0) ? _818 : (isnan(_818) ? 8.0 : min(_818, 8.0));
    float _827 = cbMtdParam._m0[10u].x * _819;
    float _828 = cbMtdParam._m0[10u].y * _819;
    float _829 = cbMtdParam._m0[10u].z * _819;
    float _830 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _831 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _832 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _848 = (cbMtdParam._m0[22u].y + _813) * cbMtdParam._m0[24u].z;
    float _2539 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _858 = 1.0 - (isnan(cbMtdParam._m0[26u].y) ? 0.0 : (isnan(0.0) ? cbMtdParam._m0[26u].y : max(0.0, cbMtdParam._m0[26u].y)));
    float _860 = (cbMtdParam._m0[26u].x + ((((float(_372 & 255u) * hit._m0.x) + (float(_271 & 255u) * _617)) + (float(_473 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) - (_858 * cbMtdParam._m0[21u].z);
    float _875 = (cbMtdParam._m0[29u].y + cbPerFrame._m0[22u].x) * cbMtdParam._m0[20u].z;
    float _883 = cbMtdParam._m0[34u].z * _750;
    float _884 = cbMtdParam._m0[34u].w * _751;
    uvec2 _898 = uvec2(textureSize(M_Water_Melange_Glow_snp_0_Texture2D_2, int(0u)));
    bool _903 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _955;
    if (_903)
    {
        float _914 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _920 = (_749 * _734) - (_746 * _737);
        float _923 = (_743 * _737) - (_749 * _731);
        float _926 = (_746 * _731) - (_743 * _734);
        float _953 = ((log2((((float(_898.y) * 0.5) * float(_898.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_923 * _923) + (_926 * _926)) + (_920 * _920)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_914 * gl_WorldRayDirectionEXT.x, _914 * gl_WorldRayDirectionEXT.y, _914 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _955 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    }
    else
    {
        _955 = 0.0;
    }
    vec4 _959 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_2, SS_BumpMap), vec2((((_875 * cbMtdParam._m0[35u].x) + _883) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_884 + (_875 * cbMtdParam._m0[35u].y)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _955);
    float _961 = _959.x;
    float _962 = _959.y;
    float _2560 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _965 = isnan(1.0) ? _2560 : (isnan(_2560) ? 1.0 : min(_2560, 1.0));
    float _966 = _959.z - _965;
    float _2571 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _967 = isnan(1.0) ? _2571 : (isnan(_2571) ? 1.0 : min(_2571, 1.0));
    float _979 = (_967 * 0.00999999977648258209228515625) + _750;
    float _981 = (_967 * (-0.00999999977648258209228515625)) + _751;
    uvec2 _994 = uvec2(textureSize(M_Water_Melange_Glow_snp_0_Texture2D_0, int(0u)));
    float _1045;
    if (_903)
    {
        float _1005 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1011 = (_749 * _734) - (_746 * _737);
        float _1014 = (_743 * _737) - (_749 * _731);
        float _1017 = (_746 * _731) - (_743 * _734);
        float _1043 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1014 * _1014) + (_1017 * _1017)) + (_1011 * _1011)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1005 * gl_WorldRayDirectionEXT.x, _1005 * gl_WorldRayDirectionEXT.y, _1005 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1045 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    }
    else
    {
        _1045 = 0.0;
    }
    vec4 _1047 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_979 + (cbMtdParam._m0[31u].x * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_981 + (cbMtdParam._m0[31u].y * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1045);
    float _1051 = _1047.z;
    float _1115;
    if (_903)
    {
        float _1075 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1081 = (_749 * _734) - (_746 * _737);
        float _1084 = (_743 * _737) - (_749 * _731);
        float _1087 = (_746 * _731) - (_743 * _734);
        float _1113 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1084 * _1084) + (_1087 * _1087)) + (_1081 * _1081)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1075 * gl_WorldRayDirectionEXT.x, _1075 * gl_WorldRayDirectionEXT.y, _1075 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1115 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    }
    else
    {
        _1115 = 0.0;
    }
    vec4 _1117 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((_979 + (cbMtdParam._m0[30u].z * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_981 + (cbMtdParam._m0[30u].w * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1115);
    float _1121 = _1117.z;
    float _1124 = (_858 - _959.w) + (isnan(_1121) ? _1051 : (isnan(_1051) ? _1121 : max(_1051, _1121)));
    float _2597 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1126 = (_860 * (isnan(1.0) ? _2539 : (isnan(_2539) ? 1.0 : min(_2539, 1.0)))) * (isnan(1.0) ? _2597 : (isnan(_2597) ? 1.0 : min(_2597, 1.0)));
    float _1128 = _1126 - (_1126 * ((((float(texelFetch(l_geomAttrib_0, int(((_297 + 12u) + _357) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_184 + 12u) + _256) >> 2u)).x & 255u) * _617)) + (float(texelFetch(l_geomAttrib_0, int(((_398 + 12u) + _458) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125));
    float _1140 = (_1128 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[16u].x * _967);
    float _1141 = (_1128 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[16u].y * _967);
    float _1142 = (_1128 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[16u].z * _967);
    float _1184;
    if (_903)
    {
        float _1168 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1176 = log2(0.0);
        float _1182 = ((_1176 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1168 * gl_WorldRayDirectionEXT.x, _1168 * gl_WorldRayDirectionEXT.y, _1168 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1184 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    }
    else
    {
        _1184 = 0.0;
    }
    vec4 _1187 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (((((uintBitsToFloat(_305.x) * hit._m0.x) + (uintBitsToFloat(_193.x) * _617)) + (uintBitsToFloat(_406.x) * hit._m0.y)) / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].z * _875))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (((((uintBitsToFloat(_305.z) * hit._m0.x) + (uintBitsToFloat(_193.z) * _617)) + (uintBitsToFloat(_406.z) * hit._m0.y)) / cbMtdParam._m0[22u].z) + (cbMtdParam._m0[35u].w * _875))) + cbTextureTilingScale._m0[1u].w), _1184);
    float _1192 = _1187.z * 0.099999986588954925537109375;
    float _2613 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _1194 = isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0));
    float _1196 = cbMtdParam._m0[24u].x * _813;
    float _2624 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1197 = isnan(1.0) ? _2624 : (isnan(_2624) ? 1.0 : min(_2624, 1.0));
    float _1211 = (_1140 + (isnan(0.07999999821186065673828125) ? _830 : (isnan(_830) ? 0.07999999821186065673828125 : min(_830, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1140) - _1194) + _1192));
    float _1213 = (_1141 + (isnan(0.07999999821186065673828125) ? _831 : (isnan(_831) ? 0.07999999821186065673828125 : min(_831, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1141) - _1194) + _1192));
    float _1215 = (_1142 + (isnan(0.07999999821186065673828125) ? _832 : (isnan(_832) ? 0.07999999821186065673828125 : min(_832, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1142) + _1192) - _1194));
    float _2635 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
    float _1216 = isnan(1.0) ? _2635 : (isnan(_2635) ? 1.0 : min(_2635, 1.0));
    float _2646 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
    float _1217 = isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0));
    float _2657 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    float _1218 = isnan(1.0) ? _2657 : (isnan(_2657) ? 1.0 : min(_2657, 1.0));
    float _1223 = ((cbMtdParam._m0[21u].y - cbMtdParam._m0[20u].x) * _965) + cbMtdParam._m0[20u].x;
    float _1247 = (1.0 - cbMtdParam._m0[28u].w) * (1.0 / cbMtdParam._m0[28u].z);
    float _2668 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
    float _1248 = isnan(1.0) ? _2668 : (isnan(_2668) ? 1.0 : min(_2668, 1.0));
    float _1262 = (cbMtdParam._m0[33u].z * _875) + _883;
    float _1263 = (cbMtdParam._m0[33u].w * _875) + _884;
    float _1283 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[33u].x * _875) + _883)) + cbTextureTilingScale._m0[3u].z;
    float _1284 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[33u].y * _875) + _884)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _1286 = uvec2(textureSize(M_Water_Melange_Glow_snp_0_Texture2D_3, int(0u)));
    float _1337;
    if (_903)
    {
        float _1297 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1303 = (_749 * _734) - (_746 * _737);
        float _1306 = (_743 * _737) - (_749 * _731);
        float _1309 = (_746 * _731) - (_743 * _734);
        float _1335 = ((log2((((float(_1286.y) * 0.5) * float(_1286.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1306 * _1306) + (_1309 * _1309)) + (_1303 * _1303)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1297 * gl_WorldRayDirectionEXT.x, _1297 * gl_WorldRayDirectionEXT.y, _1297 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1337 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
    }
    else
    {
        _1337 = 0.0;
    }
    vec4 _1339 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_3, SS_BumpMap), vec2(_1283, _1284), _1337);
    float _1345 = (_1339.x * 2.0) + (-1.0);
    float _1347 = (_1339.y * 2.0) + (-1.0);
    float _1351 = 1.0 - dot(vec2(_1345, _1347), vec2(_1345, _1347));
    float _2684 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
    float _1353 = sqrt(isnan(1.0) ? _2684 : (isnan(_2684) ? 1.0 : min(_2684, 1.0)));
    float _1356 = fma(_1353, _762, fma(_1347, _778, _1345 * _798));
    float _1359 = fma(_1353, _764, fma(_1347, _779, _1345 * _799));
    float _1362 = fma(_1353, _765, fma(_1347, _780, _1345 * _800));
    float _1366 = inversesqrt(dot(vec3(_1356, _1359, _1362), vec3(_1356, _1359, _1362)));
    float _1367 = cbPerFrame._m0[22u].x * 2.0;
    float _1368 = _1367 * cbMtdParam._m0[27u].y;
    float _1376 = (((_1359 * 0.5) * _1366) + (-0.25)) * cbMtdParam._m0[27u].z;
    float _1378 = (-0.0) - (cbMtdParam._m0[27u].z * (((_1356 * 0.5) * _1366) + (-0.25)));
    float _1379 = fract(_1368);
    float _1381 = fract(_1368 + 0.5);
    float _1392 = abs((_1379 * 2.0) + (-1.0));
    vec4 _1411 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1379 * _1378) + _1262) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1376 * _1379) + _1263) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1413 = _1411.x;
    float _1414 = _1411.y;
    float _1415 = _1411.z;
    vec4 _1416 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1381 * _1378) + _1262) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1376 * _1381) + _1263) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1427 = ((_1416.x - _1413) * _1392) + _1413;
    float _1428 = ((_1416.y - _1414) * _1392) + _1414;
    float _1429 = ((_1416.z - _1415) * _1392) + _1415;
    float _1446 = (cbMtdParam._m0[32u].z * _875) + _883;
    float _1447 = (cbMtdParam._m0[32u].w * _875) + _884;
    float _1500;
    if (_903)
    {
        float _1460 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1466 = (_749 * _734) - (_746 * _737);
        float _1469 = (_743 * _737) - (_749 * _731);
        float _1472 = (_746 * _731) - (_743 * _734);
        float _1498 = ((log2((((float(_1286.y) * 0.5) * float(_1286.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1469 * _1469) + (_1472 * _1472)) + (_1466 * _1466)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1460 * gl_WorldRayDirectionEXT.x, _1460 * gl_WorldRayDirectionEXT.y, _1460 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1500 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
    }
    else
    {
        _1500 = 0.0;
    }
    vec4 _1502 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_3, SS_BumpMap), vec2(_1283, _1284), _1500);
    float _1508 = (_1502.x * 2.0) + (-1.0);
    float _1509 = (_1502.y * 2.0) + (-1.0);
    float _1513 = 1.0 - dot(vec2(_1508, _1509), vec2(_1508, _1509));
    float _2700 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1515 = sqrt(isnan(1.0) ? _2700 : (isnan(_2700) ? 1.0 : min(_2700, 1.0)));
    float _1518 = fma(_1515, _762, fma(_1509, _778, _1508 * _798));
    float _1521 = fma(_1515, _764, fma(_1509, _779, _1508 * _799));
    float _1524 = fma(_1515, _765, fma(_1509, _780, _1508 * _800));
    float _1528 = inversesqrt(dot(vec3(_1518, _1521, _1524), vec3(_1518, _1521, _1524)));
    float _1529 = _1367 * cbMtdParam._m0[27u].x;
    float _1536 = (((_1521 * 0.5) * _1528) + (-0.25)) * cbMtdParam._m0[26u].w;
    float _1538 = (-0.0) - (cbMtdParam._m0[26u].w * (((_1518 * 0.5) * _1528) + (-0.25)));
    float _1539 = fract(_1529);
    float _1541 = fract(_1529 + 0.5);
    float _1552 = abs((_1539 * 2.0) + (-1.0));
    vec4 _1569 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1539 * _1538) + _1446) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1536 * _1539) + _1447) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1571 = _1569.x;
    float _1572 = _1569.y;
    float _1573 = _1569.z;
    vec4 _1574 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1541 * _1538) + _1446) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1536 * _1541) + _1447) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1606 = (((((cbMtdParam._m0[17u].x - cbMtdParam._m0[19u].x) * _1427) * cbMtdParam._m0[29u].z) + cbMtdParam._m0[19u].x) * (((_1574.x - _1571) * _1552) + _1571)) + (_1427 * cbMtdParam._m0[18u].x);
    float _1609 = (((((cbMtdParam._m0[17u].y - cbMtdParam._m0[19u].y) * _1428) * cbMtdParam._m0[29u].z) + cbMtdParam._m0[19u].y) * (((_1574.y - _1572) * _1552) + _1572)) + (_1428 * cbMtdParam._m0[18u].y);
    float _1612 = ((((cbMtdParam._m0[29u].z * _1429) * (cbMtdParam._m0[17u].z - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z) * (((_1574.z - _1573) * _1552) + _1573)) + (_1429 * cbMtdParam._m0[18u].z);
    float _1616 = _1606 - (_1606 * _1248);
    float _1617 = _1609 - (_1609 * _1248);
    float _1618 = _1612 - (_1612 * _1248);
    float _1623 = (1.0 - cbMtdParam._m0[28u].y) * (1.0 / cbMtdParam._m0[28u].x);
    float _2711 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
    float _1624 = isnan(1.0) ? _2711 : (isnan(_2711) ? 1.0 : min(_2711, 1.0));
    float _1635 = (cbMtdParam._m0[34u].x * _875) + _883;
    float _1636 = (cbMtdParam._m0[34u].y * _875) + _884;
    uvec2 _1648 = uvec2(textureSize(M_Water_Melange_Glow_snp_0_Texture2D_8, int(0u)));
    float _1699;
    if (_903)
    {
        float _1659 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1665 = (_749 * _734) - (_746 * _737);
        float _1668 = (_743 * _737) - (_749 * _731);
        float _1671 = (_746 * _731) - (_743 * _734);
        float _1697 = ((log2((((float(_1648.y) * 0.5) * float(_1648.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1668 * _1668) + (_1671 * _1671)) + (_1665 * _1665)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1659 * gl_WorldRayDirectionEXT.x, _1659 * gl_WorldRayDirectionEXT.y, _1659 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1699 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
    }
    else
    {
        _1699 = 0.0;
    }
    vec4 _1701 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_1635 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_1636 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _1699);
    float _1703 = _1701.x;
    float _1704 = _1701.y;
    float _1705 = _1701.z;
    uvec2 _1725 = uvec2(textureSize(M_Water_Melange_Glow_snp_0_Texture2D_9, int(0u)));
    float _1776;
    if (_903)
    {
        float _1736 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1742 = (_749 * _734) - (_746 * _737);
        float _1745 = (_743 * _737) - (_749 * _731);
        float _1748 = (_746 * _731) - (_743 * _734);
        float _1774 = ((log2((((float(_1725.y) * 0.5) * float(_1725.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1745 * _1745) + (_1748 * _1748)) + (_1742 * _1742)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1736 * gl_WorldRayDirectionEXT.x, _1736 * gl_WorldRayDirectionEXT.y, _1736 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1776 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
    }
    else
    {
        _1776 = 0.0;
    }
    vec4 _1778 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _1635) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _1636) + cbTextureTilingScale._m0[7u].w), _1776);
    float _1821 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].x) * ((_1616 + (cbMtdParam._m0[14u].x * _1128)) + ((((_1703 * cbMtdParam._m0[11u].x) - _1616) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _1703) * cbMtdParam._m0[29u].w) + cbMtdParam._m0[12u].x) * _1778.x)) * _1624));
    float _1823 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].y) * ((_1617 + (cbMtdParam._m0[14u].y * _1128)) + ((((_1704 * cbMtdParam._m0[11u].y) - _1617) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _1704) * cbMtdParam._m0[29u].w) + cbMtdParam._m0[12u].y) * _1778.y)) * _1624));
    float _1825 = (cbMtdParam._m0[29u].x * cbMtdParam._m0[15u].z) * ((_1618 + (cbMtdParam._m0[14u].z * _1128)) + ((((_1705 * cbMtdParam._m0[11u].z) - _1618) + ((((cbMtdParam._m0[29u].w * _1705) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _1778.z)) * _1624));
    float _2732 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _1829 = isnan(1.0) ? _2732 : (isnan(_2732) ? 1.0 : min(_2732, 1.0));
    float _1837 = _813 / cbMtdParam._m0[23u].w;
    float _2743 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
    float _1838 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
    float _1839 = _967 * 0.23999999463558197021484375;
    float _1841 = _967 * (-0.20000000298023223876953125);
    float _1852 = cbMtdParam._m0[36u].z * _750;
    float _1853 = cbMtdParam._m0[36u].w * _751;
    float _1912;
    if (_903)
    {
        float _1872 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1878 = (_749 * _734) - (_746 * _737);
        float _1881 = (_743 * _737) - (_749 * _731);
        float _1884 = (_746 * _731) - (_743 * _734);
        float _1910 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1881 * _1881) + (_1884 * _1884)) + (_1878 * _1878)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1872 * gl_WorldRayDirectionEXT.x, _1872 * gl_WorldRayDirectionEXT.y, _1872 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1912 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
    }
    else
    {
        _1912 = 0.0;
    }
    vec4 _1914 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].x * _875) + _1839) + _1852) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].y * _875) + _1841) + _1853) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1912);
    float _1936 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1937 = _1936 * gl_WorldRayDirectionEXT.x;
    float _1938 = _1936 * gl_WorldRayDirectionEXT.y;
    float _1939 = _1936 * gl_WorldRayDirectionEXT.z;
    float _1983;
    if (_903)
    {
        float _1949 = (_749 * _734) - (_746 * _737);
        float _1952 = (_743 * _737) - (_749 * _731);
        float _1955 = (_746 * _731) - (_743 * _734);
        float _1981 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1952 * _1952) + (_1955 * _1955)) + (_1949 * _1949)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1937, _1938, _1939), vec3(_762, _764, _765))));
        _1983 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
    }
    else
    {
        _1983 = 0.0;
    }
    vec4 _1985 = textureLod(sampler2D(M_Water_Melange_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1852 + _1839) + (cbMtdParam._m0[37u].x * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1853 + _1841) + (cbMtdParam._m0[37u].y * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1983);
    float _2005 = (((_1117.x + (-0.5)) * 0.5) + _1047.x) + (((_1914.x + (-1.0)) + _1985.x) * cbMtdParam._m0[25u].w);
    float _2006 = (((_1117.y + (-0.5)) * 0.5) + _1047.y) + (((_1914.y + (-1.0)) + _1985.y) * cbMtdParam._m0[25u].w);
    float _2011 = ((_1187.x - _2005) * _1838) + _2005;
    float _2012 = ((_1187.y - _2006) * _1838) + _2006;
    float _2014 = _813 / cbMtdParam._m0[23u].y;
    float _2764 = isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0));
    float _2015 = isnan(1.0) ? _2764 : (isnan(_2764) ? 1.0 : min(_2764, 1.0));
    float _2031 = ((((_1829 * (0.5 - _961)) + _961) + (((_2011 + (-0.5)) + ((0.5 - _2011) * _2015)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2032 = ((((_1829 * (0.5 - _962)) + _962) + (((_2012 + (-0.5)) + ((0.5 - _2012) * _2015)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2033 = dot(vec2(_2031, _2032), vec2(_2031, _2032));
    float _2775 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
    float _2038 = sqrt(1.0 - (isnan(1.0) ? _2775 : (isnan(_2775) ? 1.0 : min(_2775, 1.0))));
    float _2041 = fma(_2038, _762, fma(_2032, _778, _2031 * _798));
    float _2044 = fma(_2038, _764, fma(_2032, _779, _2031 * _799));
    float _2047 = fma(_2038, _765, fma(_2032, _780, _2031 * _800));
    float _2051 = inversesqrt(dot(vec3(_2041, _2044, _2047), vec3(_2041, _2044, _2047)));
    float _2052 = _2051 * _2041;
    float _2053 = _2051 * _2044;
    float _2054 = _2051 * _2047;
    float _2066 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2067 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2068 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2069 = (-0.0) - _1937;
    float _2070 = (-0.0) - _1938;
    float _2071 = (-0.0) - _1939;
    float _2077 = float(gl_LaunchIDEXT.x);
    float _2078 = float(gl_LaunchIDEXT.y);
    float _2081 = float(gl_LaunchSizeEXT.x);
    float _2095 = fract(fract(sin(dot(vec2(_2077 / _2081, _2078 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2108 = fract(fract(sin(dot(vec2((_2077 + 128.0) / _2081, (_2078 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _2118 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2119 = _2118.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2119, _2118.w, _2119, vec3(_2066, _2067, _2068), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2226;
    float _2227;
    float _2228;
    float _2229;
    float _2230;
    float _2231;
    if (_72._m0 == 0u)
    {
        float _2138 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2052, _2053, _2054));
        float _2786 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
        float _2141 = isnan(1.0) ? _2786 : (isnan(_2786) ? 1.0 : min(_2786, 1.0));
        float _2160 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1223) * 0.949999988079071044921875);
        float _2161 = _2160 * _2160;
        float _2162 = g_sceneCB._m0[4u].x - _1937;
        float _2163 = g_sceneCB._m0[4u].y - _1938;
        float _2164 = g_sceneCB._m0[4u].z - _1939;
        float _2168 = inversesqrt(dot(vec3(_2162, _2163, _2164), vec3(_2162, _2163, _2164)));
        float _2169 = _2168 * _2162;
        float _2170 = _2168 * _2163;
        float _2171 = _2168 * _2164;
        float _2172 = dot(vec3(_2052, _2053, _2054), vec3(g_sceneCB._m0[4u].xyz));
        float _2797 = isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0));
        float _2175 = isnan(1.0) ? _2797 : (isnan(_2797) ? 1.0 : min(_2797, 1.0));
        float _2176 = dot(vec3(_2052, _2053, _2054), vec3(_2069, _2070, _2071));
        float _2808 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
        float _2179 = isnan(1.0) ? _2808 : (isnan(_2808) ? 1.0 : min(_2808, 1.0));
        float _2180 = dot(vec3(_2052, _2053, _2054), vec3(_2169, _2170, _2171));
        float _2819 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
        float _2183 = isnan(1.0) ? _2819 : (isnan(_2819) ? 1.0 : min(_2819, 1.0));
        float _2184 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2169, _2170, _2171));
        float _2830 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
        float _2188 = _2161 * _2161;
        float _2192 = ((_2183 * _2183) * (_2188 + (-1.0))) + 1.0;
        float _2204 = (exp2(log2(1.0 - (isnan(1.0) ? _2830 : (isnan(_2830) ? 1.0 : min(_2830, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2206 = 1.0 - _2161;
        float _2217 = (0.5 / (((_2179 * ((_2175 * _2206) + _2161)) + 9.9999999392252902907785028219223e-09) + (((_2179 * _2206) + _2161) * _2175))) * _2175;
        float _2841 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
        float _2219 = (isnan(1.0) ? _2841 : (isnan(_2841) ? 1.0 : min(_2841, 1.0))) * (_2188 / ((_2192 * _2192) * 3.141590118408203125));
        _2226 = ((_1216 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2141;
        _2227 = ((_1217 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2141;
        _2228 = ((_1218 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2141;
        _2229 = (_2204 * g_sceneCB._m0[5u].x) * _2219;
        _2230 = (_2204 * g_sceneCB._m0[5u].y) * _2219;
        _2231 = (_2204 * g_sceneCB._m0[5u].z) * _2219;
    }
    else
    {
        _2226 = 0.0;
        _2227 = 0.0;
        _2228 = 0.0;
        _2229 = 0.0;
        _2230 = 0.0;
        _2231 = 0.0;
    }
    bool _2233 = abs(_2053) < 0.89999997615814208984375;
    float _2235 = float(_2233);
    float _2236 = _2233 ? 0.0 : 1.0;
    float _2239 = (_2235 * _2054) - (_2236 * _2053);
    float _2240 = _2236 * _2052;
    float _2242 = (-0.0) - (_2052 * _2235);
    float _2246 = inversesqrt(dot(vec3(_2239, _2240, _2242), vec3(_2239, _2240, _2242)));
    float _2247 = _2239 * _2246;
    float _2248 = _2240 * _2246;
    float _2249 = _2246 * _2242;
    float _2252 = (_2248 * _2054) - (_2249 * _2053);
    float _2255 = (_2249 * _2052) - (_2247 * _2054);
    float _2258 = (_2247 * _2053) - (_2248 * _2052);
    float _2260;
    float _2268;
    float _2259 = 0.0;
    uint _2261 = 0u;
    float _2265;
    bool _2267;
    for (;;)
    {
        _2265 = (float(_2261) + _2095) * 0.03125;
        _2267 = _2261 == 0u;
        float frontier_phi_59_pred;
        if (_2267)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _2407;
            float _2408;
            uint _2410;
            _2407 = 0.0;
            _2408 = 0.5;
            _2410 = _2261;
            float _2269;
            for (;;)
            {
                _2269 = ((_2410 & 1u) != 0u) ? (_2408 + _2407) : _2407;
                uint _2411 = _2410 >> 1u;
                if (_2411 == 0u)
                {
                    break;
                }
                else
                {
                    _2407 = _2269;
                    _2408 *= 0.5;
                    _2410 = _2411;
                }
            }
            frontier_phi_59_pred = _2269;
        }
        _2268 = frontier_phi_59_pred;
        float _2270 = _2268 + _2108;
        float _2274 = sqrt(_2265);
        float _2275 = ((_2270 > 1.0) ? (_2270 + (-1.0)) : _2270) * 6.283185482025146484375;
        float _2278 = cos(_2275) * _2274;
        float _2280 = sin(_2275) * _2274;
        float _2282 = sqrt(1.0 - _2265);
        float _2295 = ((_2282 * _2052) + (_2278 * _2252)) + (_2280 * _2247);
        float _2296 = ((_2282 * _2053) + (_2278 * _2255)) + (_2280 * _2248);
        float _2297 = ((_2282 * _2054) + (_2278 * _2258)) + (_2280 * _2249);
        _71._m0 = 1u;
        uvec4 _2301 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2302 = _2301.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2302, _2301.w, _2302, vec3(_2066, _2067, _2068), 9.9999997473787516355514526367188e-05, vec3(_2295, _2296, _2297), 10000.0, 1);
        float _2308 = dot(vec3(_2052, _2053, _2054), vec3(_2295, _2296, _2297));
        float _2852 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
        float _2311 = isnan(1.0) ? _2852 : (isnan(_2852) ? 1.0 : min(_2852, 1.0));
        _2260 = ((float(_71._m0 == 0u) * _2311) / (_2311 * 0.3183098733425140380859375)) + _2259;
        uint _2262 = _2261 + 1u;
        if (_2262 == 32u)
        {
            break;
        }
        else
        {
            _2259 = _2260;
            _2261 = _2262;
            continue;
        }
    }
    float _2318 = _2260 * 0.009947183541953563690185546875;
    float _2323 = dot(vec3(_1937, _1938, _1939), vec3(_2052, _2053, _2054)) * 2.0;
    vec4 _2337 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1937 - (_2323 * _2052), _1938 - (_2323 * _2053), _1939 - (_2323 * _2054)), 4.0 - (_1223 * 4.0));
    float _2342 = dot(vec3(_2069, _2070, _2071), vec3(_2052, _2053, _2054));
    float _2863 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
    float _2351 = (exp2(log2(1.0 - (isnan(1.0) ? _2863 : (isnan(_2863) ? 1.0 : min(_2863, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2357 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2052, _2053, _2054), 0.0);
    float _2370 = (((_1821 - (((((float(_389 & 255u) * hit._m0.x) + (float(_288 & 255u) * _617)) + (float(_490 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1821)) + _2226) + _2229) + (((_2357.x * _1216) + (_2351 * _2337.x)) * _2318);
    float _2376 = (((_1823 - (((((float((_389 >> 8u) & 255u) * hit._m0.x) + (float((_288 >> 8u) & 255u) * _617)) + (float((_490 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1823)) + _2227) + _2230) + (((_2357.y * _1217) + (_2351 * _2337.y)) * _2318);
    float _2382 = (((_1825 - (((((float((_389 >> 16u) & 255u) * hit._m0.x) + (float((_288 >> 16u) & 255u) * _617)) + (float((_490 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1825)) + _2228) + _2231) + (((_2357.z * _1218) + (_2351 * _2337.z)) * _2318);
    float _2874 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
    float _2885 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2896 = isnan(0.0) ? _2382 : (isnan(_2382) ? 0.0 : max(_2382, 0.0));
    bool _2390 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2401;
    _2401.x = _2390 ? ((_755 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0)));
    _2401.y = _2390 ? ((_758 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2885 : (isnan(_2885) ? 1.0 : min(_2885, 1.0)));
    _2401.z = _2390 ? ((_761 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2896 : (isnan(_2896) ? 1.0 : min(_2896, 1.0)));
    payload._m0 = _2401;
}


