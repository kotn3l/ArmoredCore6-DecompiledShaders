#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 2) uniform texture2D s_c4200_Laser_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D s_c4200_Laser_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D s_c4200_Laser_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D s_c4200_Laser_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D s_c4200_Laser_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1485;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _164 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _165 >> 16u;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _167;
        }
        _170 = frontier_phi_3_2_ladder_2;
        _172 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _185 = (_178 * _170) + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 20u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 24u;
    }
    bool _218 = _179 == 0u;
    uint _219;
    if (_218)
    {
        _219 = _212;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 8u;
        }
        _219 = frontier_phi_9_10_ladder;
    }
    uint _224 = _180 ? (_219 + 4u) : _219;
    uint _225 = _178 * _170;
    uvec4 _236 = texelFetch(l_geomAttrib_0, int(((_225 + 4u) + _224) >> 2u));
    uint _237 = _236.x;
    float _241 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _242 = float(int(uint(int(_237) >> int(16u))));
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_225 + 12u) + _224) >> 2u));
    uint _247 = _246.x;
    uint _257 = (_178 * _172) + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_183)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 20u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 24u;
    }
    uint _285;
    if (_218)
    {
        _285 = _281;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _281 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _281 + 8u;
        }
        _285 = frontier_phi_16_17_ladder;
    }
    uint _289 = _180 ? (_285 + 4u) : _285;
    uint _290 = _178 * _172;
    uvec4 _300 = texelFetch(l_geomAttrib_0, int(((_290 + 4u) + _289) >> 2u));
    uint _301 = _300.x;
    float _305 = float(int(uint(int(_301 << 16u) >> int(16u))));
    float _306 = float(int(uint(int(_301) >> int(16u))));
    uvec4 _310 = texelFetch(l_geomAttrib_0, int(((_290 + 12u) + _289) >> 2u));
    uint _311 = _310.x;
    uint _321 = (_178 * _173) + 12u;
    uint _342;
    uint _343;
    uint _344;
    uint _345;
    if (_183)
    {
        uvec4 _323 = texelFetch(l_geomAttrib_0, int(_321 >> 2u));
        uint _324 = _323.x;
        _342 = _324 & 255u;
        _343 = (_324 >> 8u) & 255u;
        _344 = (_324 >> 16u) & 255u;
        _345 = 20u;
    }
    else
    {
        uint _330 = _321 >> 2u;
        uvec2 _336 = uvec2(texelFetch(l_geomAttrib_0, int(_330)).x, texelFetch(l_geomAttrib_0, int(_330 + 1u)).x);
        uint _337 = _336.x;
        _342 = _337 & 65535u;
        _343 = _337 >> 16u;
        _344 = _336.y & 65535u;
        _345 = 24u;
    }
    uint _349;
    if (_218)
    {
        _349 = _345;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _345 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _345 + 8u;
        }
        _349 = frontier_phi_23_24_ladder;
    }
    uint _353 = _180 ? (_349 + 4u) : _349;
    uint _354 = _178 * _173;
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_354 + 4u) + _353) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    uvec4 _374 = texelFetch(l_geomAttrib_0, int(((_354 + 12u) + _353) >> 2u));
    uint _375 = _374.x;
    bool _385 = _129.z == 0u;
    float _421;
    float _422;
    float _423;
    if (_385)
    {
        uint _388 = _170 * 3u;
        uvec3 _397 = uvec3(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_388 + 2u)).x);
        _421 = uintBitsToFloat(_397.x);
        _422 = uintBitsToFloat(_397.y);
        _423 = uintBitsToFloat(_397.z);
    }
    else
    {
        uint _405 = _170 * 2u;
        uvec2 _411 = uvec2(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x);
        uint _412 = _411.x;
        _421 = unpackHalf2x16(_412).x;
        _422 = unpackHalf2x16(_412 >> 16u).x;
        _423 = unpackHalf2x16(_411.y).x;
    }
    float _459;
    float _460;
    float _461;
    if (_385)
    {
        uint _426 = _172 * 3u;
        uvec3 _435 = uvec3(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_426 + 2u)).x);
        _459 = uintBitsToFloat(_435.x);
        _460 = uintBitsToFloat(_435.y);
        _461 = uintBitsToFloat(_435.z);
    }
    else
    {
        uint _443 = _172 * 2u;
        uvec2 _449 = uvec2(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x);
        uint _450 = _449.x;
        _459 = unpackHalf2x16(_450).x;
        _460 = unpackHalf2x16(_450 >> 16u).x;
        _461 = unpackHalf2x16(_449.y).x;
    }
    float _497;
    float _498;
    float _499;
    if (_385)
    {
        uint _464 = _173 * 3u;
        uvec3 _473 = uvec3(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_464 + 2u)).x);
        _497 = uintBitsToFloat(_473.x);
        _498 = uintBitsToFloat(_473.y);
        _499 = uintBitsToFloat(_473.z);
    }
    else
    {
        uint _481 = _173 * 2u;
        uvec2 _487 = uvec2(texelFetch(l_geomPositionBuffer, int(_481)).x, texelFetch(l_geomPositionBuffer, int(_481 + 1u)).x);
        uint _488 = _487.x;
        _497 = unpackHalf2x16(_488).x;
        _498 = unpackHalf2x16(_488 >> 16u).x;
        _499 = unpackHalf2x16(_487.y).x;
    }
    float _502 = (1.0 - hit._m0.x) - hit._m0.y;
    float _549 = (_305 - _241) * 0.00048828125;
    float _551 = (_306 - _242) * 0.00048828125;
    float _554 = (_369 - _241) * 0.00048828125;
    float _555 = (_370 - _242) * 0.00048828125;
    float _577 = _459 - _421;
    float _578 = _460 - _422;
    float _579 = _461 - _423;
    float _582 = fma(_579, gl_ObjectToWorldEXT[2u].x, fma(_578, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _577));
    float _585 = fma(_579, gl_ObjectToWorldEXT[2u].y, fma(_578, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _577));
    float _588 = fma(_579, gl_ObjectToWorldEXT[2u].z, fma(_578, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _577));
    float _589 = _497 - _421;
    float _590 = _498 - _422;
    float _591 = _499 - _423;
    float _594 = fma(_591, gl_ObjectToWorldEXT[2u].x, fma(_590, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _589));
    float _597 = fma(_591, gl_ObjectToWorldEXT[2u].y, fma(_590, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _589));
    float _600 = fma(_591, gl_ObjectToWorldEXT[2u].z, fma(_590, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _589));
    float _601 = (((_305 * hit._m0.x) + (_241 * _502)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _602 = (((_306 * hit._m0.x) + (_242 * _502)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _606 = (((float(_209) * _502) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _609 = (((float(_210) * _502) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_343) * hit._m0.y);
    float _612 = (((float(_211) * _502) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _613 = _606 * 0.0078740157186985015869140625;
    float _615 = _609 * 0.0078740157186985015869140625;
    float _616 = _612 * 0.0078740157186985015869140625;
    float _620 = cbMtdParam._m0[20u].x * cbPerFrame._m0[22u].x;
    float _641 = (cbMtdParam._m0[21u].y * _620) + _601;
    float _642 = (cbMtdParam._m0[21u].z * _620) + _602;
    float _651 = (cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[21u].w * cbPerFrame._m0[22u].x) + _601)) + cbTextureTilingScale._m0[4u].z;
    float _652 = (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[22u].x * cbPerFrame._m0[22u].x) + _602)) + cbTextureTilingScale._m0[4u].w;
    uvec2 _654 = uvec2(textureSize(s_c4200_Laser_snp_0_Texture2D_4, int(0u)));
    bool _659 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _712;
    if (_659)
    {
        float _670 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _676 = (_600 * _585) - (_597 * _588);
        float _679 = (_594 * _588) - (_600 * _582);
        float _682 = (_597 * _582) - (_594 * _585);
        float _709 = ((log2((((float(_654.y) * 0.5) * float(_654.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_679 * _679) + (_682 * _682)) + (_676 * _676)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_670 * gl_WorldRayDirectionEXT.x, _670 * gl_WorldRayDirectionEXT.y, _670 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _712 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    }
    else
    {
        _712 = 0.0;
    }
    vec4 _716 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_4, SS_WrapLinear), vec2(_651, _652), _712);
    float _721 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[15u].z;
    float _727 = ((_716.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _729 = (-0.0) - (cbMtdParam._m0[15u].y * ((_716.x * 0.5) + (-0.25)));
    float _731 = fract(_721);
    float _733 = fract(_721 + 0.5);
    float _745 = abs((_731 * 2.0) + (-1.0));
    vec4 _763 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_731 * _729) + _641) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_727 * _731) + _642) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _765 = _763.x;
    float _766 = _763.y;
    float _767 = _763.z;
    vec4 _768 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_733 * _729) + _641) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_727 * _733) + _642) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _788 = (((_768.x - _765) * _745) + _765) * cbMtdParam._m0[13u].x;
    float _789 = (((_768.y - _766) * _745) + _766) * cbMtdParam._m0[13u].y;
    float _790 = (((_768.z - _767) * _745) + _767) * cbMtdParam._m0[13u].z;
    float _800 = (cbMtdParam._m0[20u].w * _620) + _601;
    float _801 = (cbMtdParam._m0[21u].x * _620) + _602;
    float _852;
    if (_659)
    {
        float _812 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _818 = (_600 * _585) - (_597 * _588);
        float _821 = (_594 * _588) - (_600 * _582);
        float _824 = (_597 * _582) - (_594 * _585);
        float _850 = ((log2((((float(_654.y) * 0.5) * float(_654.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_821 * _821) + (_824 * _824)) + (_818 * _818)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_812 * gl_WorldRayDirectionEXT.x, _812 * gl_WorldRayDirectionEXT.y, _812 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _852 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    }
    else
    {
        _852 = 0.0;
    }
    vec4 _854 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_4, SS_WrapLinear), vec2(_651, _652), _852);
    float _862 = ((_854.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _864 = (-0.0) - (cbMtdParam._m0[15u].y * ((_854.x * 0.5) + (-0.25)));
    vec4 _889 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_731 * _864) + _800) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_862 * _731) + _801) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _891 = _889.x;
    float _892 = _889.y;
    float _893 = _889.z;
    vec4 _894 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_733 * _864) + _800) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_862 * _733) + _801) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _917 = (((((float(_311 & 255u) * hit._m0.x) + (float(_247 & 255u) * _502)) + (float(_375 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((((_894.x - _891) * _745) + _891) * cbMtdParam._m0[12u].x) - _788)) + _788;
    float _918 = (((((float((_311 >> 8u) & 255u) * hit._m0.x) + (float((_247 >> 8u) & 255u) * _502)) + (float((_375 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((((_894.y - _892) * _745) + _892) * cbMtdParam._m0[12u].y) - _789)) + _789;
    float _919 = (((((float((_311 >> 16u) & 255u) * hit._m0.x) + (float((_247 >> 16u) & 255u) * _502)) + (float((_375 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((((_894.z - _893) * _745) + _893) * cbMtdParam._m0[12u].z) - _790)) + _790;
    float _930 = (cbMtdParam._m0[22u].y * _620) + _601;
    float _931 = (cbMtdParam._m0[22u].z * _620) + _602;
    float _982;
    if (_659)
    {
        float _942 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _948 = (_600 * _585) - (_597 * _588);
        float _951 = (_594 * _588) - (_600 * _582);
        float _954 = (_597 * _582) - (_594 * _585);
        float _980 = ((log2((((float(_654.y) * 0.5) * float(_654.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_951 * _951) + (_954 * _954)) + (_948 * _948)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_942 * gl_WorldRayDirectionEXT.x, _942 * gl_WorldRayDirectionEXT.y, _942 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _982 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    }
    else
    {
        _982 = 0.0;
    }
    vec4 _984 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_4, SS_WrapLinear), vec2(_651, _652), _982);
    float _992 = ((_984.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _994 = (-0.0) - (cbMtdParam._m0[15u].y * ((_984.x * 0.5) + (-0.25)));
    vec4 _1020 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_731 * _994) + _930) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_992 * _731) + _931) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1022 = _1020.x;
    float _1023 = _1020.y;
    float _1024 = _1020.z;
    vec4 _1025 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_733 * _994) + _930) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_992 * _733) + _931) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1050 = abs((fract(cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1580 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _1051 = isnan(1.0) ? _1580 : (isnan(_1580) ? 1.0 : min(_1580, 1.0));
    float _1062 = 1.0 - cbMtdParam._m0[14u].y;
    float _1065 = (((_1051 * _1051) * (3.0 - (_1051 * 2.0))) - cbMtdParam._m0[14u].y) / (isnan(0.001000000047497451305389404296875) ? _1062 : (isnan(_1062) ? 0.001000000047497451305389404296875 : max(_1062, 0.001000000047497451305389404296875)));
    float _1596 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _1067 = (isnan(1.0) ? _1596 : (isnan(_1596) ? 1.0 : min(_1596, 1.0))) - cbMtdParam._m0[15u].w;
    float _1075 = (cbMtdParam._m0[20u].y * _620) + _601;
    float _1076 = (cbMtdParam._m0[20u].z * _620) + _602;
    float _1080 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1081 = _1080 * gl_WorldRayDirectionEXT.x;
    float _1082 = _1080 * gl_WorldRayDirectionEXT.y;
    float _1083 = _1080 * gl_WorldRayDirectionEXT.z;
    float _1127;
    if (_659)
    {
        float _1093 = (_600 * _585) - (_597 * _588);
        float _1096 = (_594 * _588) - (_600 * _582);
        float _1099 = (_597 * _582) - (_594 * _585);
        float _1125 = ((log2((((float(_654.y) * 0.5) * float(_654.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1096 * _1096) + (_1099 * _1099)) + (_1093 * _1093)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1081, _1082, _1083), vec3(_613, _615, _616))));
        _1127 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
    }
    else
    {
        _1127 = 0.0;
    }
    vec4 _1129 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_4, SS_WrapLinear), vec2(_651, _652), _1127);
    float _1137 = ((_1129.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _1139 = (-0.0) - (cbMtdParam._m0[15u].y * ((_1129.x * 0.5) + (-0.25)));
    vec4 _1164 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_731 * _1139) + _1075) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1137 * _731) + _1076) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1166 = _1164.x;
    float _1172 = ((textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_733 * _1139) + _1075) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1137 * _733) + _1076) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0).x - _1166) * _745) + _1166;
    float _1190 = cbMtdParam._m0[17u].z * ((((float(texelFetch(l_geomAttrib_0, int((_289 + _290) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_224 + _225) >> 2u)).x >> 24u) * _502)) + (float(texelFetch(l_geomAttrib_0, int((_353 + _354) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1197 = inversesqrt(dot(vec3(_613, _615, _616), vec3(_613, _615, _616)));
    float _1198 = _1197 * _613;
    float _1199 = _1197 * _615;
    float _1200 = _1197 * _616;
    float _1212 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1213 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1214 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1215 = (-0.0) - _1081;
    float _1216 = (-0.0) - _1082;
    float _1217 = (-0.0) - _1083;
    float _1223 = float(gl_LaunchIDEXT.x);
    float _1224 = float(gl_LaunchIDEXT.y);
    float _1227 = float(gl_LaunchSizeEXT.x);
    float _1241 = fract(fract(sin(dot(vec2(_1223 / _1227, _1224 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1254 = fract(fract(sin(dot(vec2((_1223 + 128.0) / _1227, (_1224 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1264 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1265 = _1264.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1265, _1264.w, _1265, vec3(_1212, _1213, _1214), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1330;
    float _1331;
    float _1332;
    if (_67._m0 == 0u)
    {
        float _1285 = g_sceneCB._m0[4u].x - _1081;
        float _1286 = g_sceneCB._m0[4u].y - _1082;
        float _1287 = g_sceneCB._m0[4u].z - _1083;
        float _1291 = inversesqrt(dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287)));
        float _1295 = dot(vec3(_1198, _1199, _1200), vec3(g_sceneCB._m0[4u].xyz));
        float _1612 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1298 = isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0));
        float _1299 = dot(vec3(_1198, _1199, _1200), vec3(_1215, _1216, _1217));
        float _1623 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1285 * _1291, _1286 * _1291, _1287 * _1291));
        float _1634 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1314 = (exp2(log2(1.0 - (isnan(1.0) ? _1634 : (isnan(_1634) ? 1.0 : min(_1634, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1320 = (0.5 / ((_1298 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1623 : (isnan(_1623) ? 1.0 : min(_1623, 1.0))))) * _1298;
        float _1645 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1322 = (isnan(1.0) ? _1645 : (isnan(_1645) ? 1.0 : min(_1645, 1.0))) * 0.31831014156341552734375;
        _1330 = (_1314 * g_sceneCB._m0[5u].x) * _1322;
        _1331 = (_1314 * g_sceneCB._m0[5u].y) * _1322;
        _1332 = (_1314 * g_sceneCB._m0[5u].z) * _1322;
    }
    else
    {
        _1330 = 0.0;
        _1331 = 0.0;
        _1332 = 0.0;
    }
    bool _1334 = abs(_1199) < 0.89999997615814208984375;
    float _1336 = float(_1334);
    float _1337 = _1334 ? 0.0 : 1.0;
    float _1340 = (_1336 * _1200) - (_1337 * _1199);
    float _1341 = _1337 * _1198;
    float _1343 = (-0.0) - (_1198 * _1336);
    float _1347 = inversesqrt(dot(vec3(_1340, _1341, _1343), vec3(_1340, _1341, _1343)));
    float _1348 = _1340 * _1347;
    float _1349 = _1341 * _1347;
    float _1350 = _1347 * _1343;
    float _1353 = (_1349 * _1200) - (_1350 * _1199);
    float _1356 = (_1350 * _1198) - (_1348 * _1200);
    float _1359 = (_1348 * _1199) - (_1349 * _1198);
    float _1361;
    float _1369;
    float _1360 = 0.0;
    uint _1362 = 0u;
    float _1366;
    bool _1368;
    for (;;)
    {
        _1366 = (float(_1362) + _1241) * 0.03125;
        _1368 = _1362 == 0u;
        float frontier_phi_47_pred;
        if (_1368)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1490;
            float _1491;
            uint _1493;
            _1490 = 0.0;
            _1491 = 0.5;
            _1493 = _1362;
            float _1370;
            for (;;)
            {
                _1370 = ((_1493 & 1u) != 0u) ? (_1491 + _1490) : _1490;
                uint _1494 = _1493 >> 1u;
                if (_1494 == 0u)
                {
                    break;
                }
                else
                {
                    _1490 = _1370;
                    _1491 *= 0.5;
                    _1493 = _1494;
                }
            }
            frontier_phi_47_pred = _1370;
        }
        _1369 = frontier_phi_47_pred;
        float _1371 = _1369 + _1254;
        float _1375 = sqrt(_1366);
        float _1376 = ((_1371 > 1.0) ? (_1371 + (-1.0)) : _1371) * 6.283185482025146484375;
        float _1379 = cos(_1376) * _1375;
        float _1381 = sin(_1376) * _1375;
        float _1383 = sqrt(1.0 - _1366);
        float _1396 = ((_1383 * _1198) + (_1379 * _1353)) + (_1381 * _1348);
        float _1397 = ((_1383 * _1199) + (_1379 * _1356)) + (_1381 * _1349);
        float _1398 = ((_1383 * _1200) + (_1379 * _1359)) + (_1381 * _1350);
        _66._m0 = 1u;
        uvec4 _1402 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1403 = _1402.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1403, _1402.w, _1403, vec3(_1212, _1213, _1214), 9.9999997473787516355514526367188e-05, vec3(_1396, _1397, _1398), 10000.0, 1);
        float _1409 = dot(vec3(_1198, _1199, _1200), vec3(_1396, _1397, _1398));
        float _1656 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1412 = isnan(1.0) ? _1656 : (isnan(_1656) ? 1.0 : min(_1656, 1.0));
        _1361 = ((float(_66._m0 == 0u) * _1412) / (_1412 * 0.3183098733425140380859375)) + _1360;
        uint _1363 = _1362 + 1u;
        if (_1363 == 32u)
        {
            break;
        }
        else
        {
            _1360 = _1361;
            _1362 = _1363;
            continue;
        }
    }
    float _1421 = _1361 * 0.009947183541953563690185546875;
    float _1426 = dot(vec3(_1081, _1082, _1083), vec3(_1198, _1199, _1200)) * 2.0;
    vec4 _1438 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1081 - (_1426 * _1198), _1082 - (_1426 * _1199), _1083 - (_1426 * _1200)), 4.0);
    float _1443 = dot(vec3(_1215, _1216, _1217), vec3(_1198, _1199, _1200));
    float _1667 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
    float _1452 = (exp2(log2(1.0 - (isnan(1.0) ? _1667 : (isnan(_1667) ? 1.0 : min(_1667, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1460 = (_1330 + (_1190 * (((cbMtdParam._m0[14u].x * ((((((_1025.x - _1022) * _745) + _1022) * cbMtdParam._m0[9u].x) * _1067) - _917)) * _1172) + _917))) + ((_1438.x * _1421) * _1452);
    float _1462 = (_1331 + (_1190 * (((cbMtdParam._m0[14u].x * ((((((_1025.y - _1023) * _745) + _1023) * cbMtdParam._m0[9u].y) * _1067) - _918)) * _1172) + _918))) + ((_1438.y * _1421) * _1452);
    float _1464 = (_1332 + (_1190 * (((cbMtdParam._m0[14u].x * ((((((_1025.z - _1024) * _745) + _1024) * cbMtdParam._m0[9u].z) * _1067) - _919)) * _1172) + _919))) + ((_1438.z * _1421) * _1452);
    float _1678 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    float _1689 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
    float _1700 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
    bool _1473 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1484;
    _1484.x = _1473 ? ((_606 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1678 : (isnan(_1678) ? 1.0 : min(_1678, 1.0)));
    _1484.y = _1473 ? ((_609 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1689 : (isnan(_1689) ? 1.0 : min(_1689, 1.0)));
    _1484.z = _1473 ? ((_612 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1700 : (isnan(_1700) ? 1.0 : min(_1700, 1.0)));
    payload._m0 = _1484;
}


