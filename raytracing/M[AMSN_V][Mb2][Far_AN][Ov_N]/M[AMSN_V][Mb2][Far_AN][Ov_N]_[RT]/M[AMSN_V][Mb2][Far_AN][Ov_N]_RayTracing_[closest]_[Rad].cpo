#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1746;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _163 >> 16u;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _182 = _176 * _168;
    uint _183 = _182 + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 16u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_210 + _182) >> 2u));
    uint _219 = _218.x;
    bool _233 = _177 == 0u;
    uint _234;
    if (_233)
    {
        _234 = _210 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 12u;
        }
        _234 = frontier_phi_9_10_ladder;
    }
    uint _238 = _178 ? (_234 + 4u) : _234;
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_182 + 4u) + _238) >> 2u));
    uint _243 = _242.x;
    float _247 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_243) >> int(16u))));
    uint _256 = _176 * _170;
    uint _257 = _256 + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_181)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 16u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 20u;
    }
    uvec4 _287 = texelFetch(l_geomAttrib_0, int((_281 + _256) >> 2u));
    uint _288 = _287.x;
    uint _300;
    if (_233)
    {
        _300 = _281 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _281 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _281 + 12u;
        }
        _300 = frontier_phi_16_17_ladder;
    }
    uint _304 = _178 ? (_300 + 4u) : _300;
    uvec4 _308 = texelFetch(l_geomAttrib_0, int(((_256 + 4u) + _304) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _322 = _176 * _171;
    uint _323 = _322 + 12u;
    uint _344;
    uint _345;
    uint _346;
    uint _347;
    if (_181)
    {
        uvec4 _325 = texelFetch(l_geomAttrib_0, int(_323 >> 2u));
        uint _326 = _325.x;
        _344 = _326 & 255u;
        _345 = (_326 >> 8u) & 255u;
        _346 = (_326 >> 16u) & 255u;
        _347 = 16u;
    }
    else
    {
        uint _332 = _323 >> 2u;
        uvec2 _338 = uvec2(texelFetch(l_geomAttrib_0, int(_332)).x, texelFetch(l_geomAttrib_0, int(_332 + 1u)).x);
        uint _339 = _338.x;
        _344 = _339 & 65535u;
        _345 = _339 >> 16u;
        _346 = _338.y & 65535u;
        _347 = 20u;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int((_347 + _322) >> 2u));
    uint _354 = _353.x;
    uint _366;
    if (_233)
    {
        _366 = _347 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _347 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _347 + 12u;
        }
        _366 = frontier_phi_23_24_ladder;
    }
    uint _370 = _178 ? (_366 + 4u) : _366;
    uvec4 _374 = texelFetch(l_geomAttrib_0, int(((_322 + 4u) + _370) >> 2u));
    uint _375 = _374.x;
    float _379 = float(int(uint(int(_375 << 16u) >> int(16u))));
    float _380 = float(int(uint(int(_375) >> int(16u))));
    bool _389 = _127.z == 0u;
    float _425;
    float _426;
    float _427;
    if (_389)
    {
        uint _392 = _168 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _168 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_389)
    {
        uint _430 = _170 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _170 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_389)
    {
        uint _468 = _171 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _171 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _506 = (1.0 - hit._m0.x) - hit._m0.y;
    float _547 = (_313 - _247) * 0.00048828125;
    float _549 = (_314 - _248) * 0.00048828125;
    float _552 = (_379 - _247) * 0.00048828125;
    float _553 = (_380 - _248) * 0.00048828125;
    float _575 = _463 - _425;
    float _576 = _464 - _426;
    float _577 = _465 - _427;
    float _580 = fma(_577, gl_ObjectToWorldEXT[2u].x, fma(_576, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _575));
    float _583 = fma(_577, gl_ObjectToWorldEXT[2u].y, fma(_576, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _575));
    float _586 = fma(_577, gl_ObjectToWorldEXT[2u].z, fma(_576, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _575));
    float _587 = _501 - _425;
    float _588 = _502 - _426;
    float _589 = _503 - _427;
    float _592 = fma(_589, gl_ObjectToWorldEXT[2u].x, fma(_588, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _587));
    float _595 = fma(_589, gl_ObjectToWorldEXT[2u].y, fma(_588, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _587));
    float _598 = fma(_589, gl_ObjectToWorldEXT[2u].z, fma(_588, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _587));
    float _599 = (((_313 * hit._m0.x) + (_247 * _506)) + (_379 * hit._m0.y)) * 0.00048828125;
    float _600 = (((_314 * hit._m0.x) + (_248 * _506)) + (_380 * hit._m0.y)) * 0.00048828125;
    float _604 = (((float(_207) * _506) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _607 = (((float(_208) * _506) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_345) * hit._m0.y);
    float _610 = (((float(_209) * _506) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _611 = _604 * 0.0078740157186985015869140625;
    float _613 = _607 * 0.0078740157186985015869140625;
    float _614 = _610 * 0.0078740157186985015869140625;
    float _627 = ((((float(_219 & 255u) * _506) + (-127.0)) + (float(_288 & 255u) * hit._m0.x)) + (float(_354 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _628 = ((((float((_219 >> 8u) & 255u) * _506) + (-127.0)) + (float((_288 >> 8u) & 255u) * hit._m0.x)) + (float((_354 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float((_219 >> 16u) & 255u) * _506) + (-127.0)) + (float((_288 >> 16u) & 255u) * hit._m0.x)) + (float((_354 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float(_219 >> 24u) * _506) + (-127.0)) + (float(_288 >> 24u) * hit._m0.x)) + (float(_354 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _640 = ((_628 * _614) - (_629 * _613)) * _630;
    float _641 = ((_629 * _611) - (_627 * _614)) * _630;
    float _642 = ((_627 * _613) - (_628 * _611)) * _630;
    float _646 = inversesqrt(dot(vec3(_640, _641, _642), vec3(_640, _641, _642)));
    float _660 = (1.0 - cbMtdParam._m0[9u].y) * (1.0 / cbMtdParam._m0[10u].x);
    float _1836 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _662 = isnan(1.0) ? _1836 : (isnan(_1836) ? 1.0 : min(_1836, 1.0));
    uvec2 _674 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_2, int(0u)));
    bool _679 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _731;
    if (_679)
    {
        float _690 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _696 = (_598 * _583) - (_595 * _586);
        float _699 = (_592 * _586) - (_598 * _580);
        float _702 = (_595 * _580) - (_592 * _583);
        float _729 = ((log2((((float(_674.y) * 0.5) * float(_674.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_699 * _699) + (_702 * _702)) + (_696 * _696)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_690 * gl_WorldRayDirectionEXT.x, _690 * gl_WorldRayDirectionEXT.y, _690 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _731 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    }
    else
    {
        _731 = 0.0;
    }
    vec4 _735 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _599) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _600) + cbTextureTilingScale._m0[3u].w), _731);
    float _737 = _735.x;
    float _738 = _735.y;
    float _739 = _735.z;
    uvec2 _751 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_9, int(0u)));
    float _802;
    if (_679)
    {
        float _762 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _768 = (_598 * _583) - (_595 * _586);
        float _771 = (_592 * _586) - (_598 * _580);
        float _774 = (_595 * _580) - (_592 * _583);
        float _800 = ((log2((((float(_751.y) * 0.5) * float(_751.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_771 * _771) + (_774 * _774)) + (_768 * _768)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_762 * gl_WorldRayDirectionEXT.x, _762 * gl_WorldRayDirectionEXT.y, _762 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _802 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    }
    else
    {
        _802 = 0.0;
    }
    vec4 _804 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _599) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _600) + cbTextureTilingScale._m0[9u].w), _802);
    float _815 = ((_804.x - _737) * _662) + _737;
    float _816 = ((_804.y - _738) * _662) + _738;
    float _817 = ((_804.z - _739) * _662) + _739;
    uvec2 _829 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_10, int(0u)));
    float _880;
    if (_679)
    {
        float _840 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _846 = (_598 * _583) - (_595 * _586);
        float _849 = (_592 * _586) - (_598 * _580);
        float _852 = (_595 * _580) - (_592 * _583);
        float _878 = ((log2((((float(_829.y) * 0.5) * float(_829.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_849 * _849) + (_852 * _852)) + (_846 * _846)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_840 * gl_WorldRayDirectionEXT.x, _840 * gl_WorldRayDirectionEXT.y, _840 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _880 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    }
    else
    {
        _880 = 0.0;
    }
    vec4 _882 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _599) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _600) + cbTextureTilingScale._m0[2u].w), _880);
    uvec2 _898 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_3, int(0u)));
    float _949;
    if (_679)
    {
        float _909 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _915 = (_598 * _583) - (_595 * _586);
        float _918 = (_592 * _586) - (_598 * _580);
        float _921 = (_595 * _580) - (_592 * _583);
        float _947 = ((log2((((float(_898.y) * 0.5) * float(_898.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_918 * _918) + (_921 * _921)) + (_915 * _915)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_909 * gl_WorldRayDirectionEXT.x, _909 * gl_WorldRayDirectionEXT.y, _909 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _949 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    }
    else
    {
        _949 = 0.0;
    }
    vec4 _951 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _599) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _600) + cbTextureTilingScale._m0[4u].w), _949);
    float _953 = _951.x;
    float _954 = _951.y;
    float _955 = _951.z;
    uvec2 _977 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_4, int(0u)));
    float _1028;
    if (_679)
    {
        float _988 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _994 = (_598 * _583) - (_595 * _586);
        float _997 = (_592 * _586) - (_598 * _580);
        float _1000 = (_595 * _580) - (_592 * _583);
        float _1026 = ((log2((((float(_977.y) * 0.5) * float(_977.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_997 * _997) + (_1000 * _1000)) + (_994 * _994)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_988 * gl_WorldRayDirectionEXT.x, _988 * gl_WorldRayDirectionEXT.y, _988 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1028 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    }
    else
    {
        _1028 = 0.0;
    }
    float _1042 = ((cbMtdParam._m0[9u].x * (-1.39999997615814208984375)) * ((textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _599) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _600) + cbTextureTilingScale._m0[5u].w), _1028).x + (-1.0)) + ((((1.0 - ((_506 * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_182 + 8u) + _238) >> 2u)).x & 255u))) - ((hit._m0.x * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_256 + 8u) + _304) >> 2u)).x & 255u))) - ((hit._m0.y * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_322 + 8u) + _370) >> 2u)).x & 255u))) * 2.0))) + 1.0;
    float _1872 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _1043 = isnan(1.0) ? _1872 : (isnan(_1872) ? 1.0 : min(_1872, 1.0));
    float _1053 = (_1043 * ((_953 - _815) + ((_882.x - _953) * _662))) + _815;
    float _1054 = (_1043 * ((_954 - _816) + ((_882.y - _954) * _662))) + _816;
    float _1055 = (_1043 * ((_955 - _817) + ((_882.z - _955) * _662))) + _817;
    uvec2 _1068 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_0, int(0u)));
    float _1119;
    if (_679)
    {
        float _1079 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1085 = (_598 * _583) - (_595 * _586);
        float _1088 = (_592 * _586) - (_598 * _580);
        float _1091 = (_595 * _580) - (_592 * _583);
        float _1117 = ((log2((((float(_1068.y) * 0.5) * float(_1068.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1088 * _1088) + (_1091 * _1091)) + (_1085 * _1085)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1079 * gl_WorldRayDirectionEXT.x, _1079 * gl_WorldRayDirectionEXT.y, _1079 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1119 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    }
    else
    {
        _1119 = 0.0;
    }
    vec4 _1122 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _599) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _600) + cbTextureTilingScale._m0[0u].w), _1119);
    float _1124 = _1122.x;
    float _1125 = _1122.y;
    float _1126 = _1122.z;
    uvec2 _1138 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_7, int(0u)));
    float _1189;
    if (_679)
    {
        float _1149 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1155 = (_598 * _583) - (_595 * _586);
        float _1158 = (_592 * _586) - (_598 * _580);
        float _1161 = (_595 * _580) - (_592 * _583);
        float _1187 = ((log2((((float(_1138.y) * 0.5) * float(_1138.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1158 * _1158) + (_1161 * _1161)) + (_1155 * _1155)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1149 * gl_WorldRayDirectionEXT.x, _1149 * gl_WorldRayDirectionEXT.y, _1149 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1189 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
    }
    else
    {
        _1189 = 0.0;
    }
    vec4 _1191 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _599) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _600) + cbTextureTilingScale._m0[7u].w), _1189);
    float _1202 = ((_1191.x - _1124) * _662) + _1124;
    float _1203 = ((_1191.y - _1125) * _662) + _1125;
    float _1204 = ((_1191.z - _1126) * _662) + _1126;
    uvec2 _1216 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_1, int(0u)));
    float _1267;
    if (_679)
    {
        float _1227 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1233 = (_598 * _583) - (_595 * _586);
        float _1236 = (_592 * _586) - (_598 * _580);
        float _1239 = (_595 * _580) - (_592 * _583);
        float _1265 = ((log2((((float(_1216.y) * 0.5) * float(_1216.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1236 * _1236) + (_1239 * _1239)) + (_1233 * _1233)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1227 * gl_WorldRayDirectionEXT.x, _1227 * gl_WorldRayDirectionEXT.y, _1227 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1267 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
    }
    else
    {
        _1267 = 0.0;
    }
    vec4 _1269 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _599) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _600) + cbTextureTilingScale._m0[1u].w), _1267);
    float _1284 = ((((_1269.x - _1202) * _1043) + _1202) * 2.0) + (-1.0);
    float _1285 = ((((_1269.y - _1203) * _1043) + _1203) * 2.0) + (-1.0);
    float _1286 = dot(vec2(_1284, _1285), vec2(_1284, _1285));
    float _1898 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
    float _1291 = sqrt(1.0 - (isnan(1.0) ? _1898 : (isnan(_1898) ? 1.0 : min(_1898, 1.0))));
    float _1293 = (_1204 + cbMtdParam._m0[9u].w) + ((_1269.z - _1204) * _1043);
    float _1308 = (((cbMtdParam._m0[10u].w * _1291) - _1291) * _662) + _1291;
    uvec2 _1321 = uvec2(textureSize(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_5, int(0u)));
    float _1325 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1326 = _1325 * gl_WorldRayDirectionEXT.x;
    float _1327 = _1325 * gl_WorldRayDirectionEXT.y;
    float _1328 = _1325 * gl_WorldRayDirectionEXT.z;
    float _1372;
    if (_679)
    {
        float _1338 = (_598 * _583) - (_595 * _586);
        float _1341 = (_592 * _586) - (_598 * _580);
        float _1344 = (_595 * _580) - (_592 * _583);
        float _1370 = ((log2((((float(_1321.y) * 0.5) * float(_1321.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1341 * _1341) + (_1344 * _1344)) + (_1338 * _1338)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1326, _1327, _1328), vec3(_611, _613, _614))));
        _1372 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
    }
    else
    {
        _1372 = 0.0;
    }
    vec4 _1374 = textureLod(sampler2D(M_AMSN_V_Mb2_Far_AN_Ov_N_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _599) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _600) + cbTextureTilingScale._m0[6u].w), _1372);
    float _1384 = ((((_1284 * cbMtdParam._m0[10u].y) - _1284) * _662) + _1284) + (((_1374.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z);
    float _1385 = ((((_1285 * cbMtdParam._m0[10u].z) - _1285) * _662) + _1285) + (((_1374.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z);
    float _1388 = fma(_1308, _611, fma(_1385, _627, (_646 * _640) * _1384));
    float _1391 = fma(_1308, _613, fma(_1385, _628, (_646 * _641) * _1384));
    float _1394 = fma(_1308, _614, fma(_1385, _629, (_646 * _642) * _1384));
    float _1398 = inversesqrt(dot(vec3(_1388, _1391, _1394), vec3(_1388, _1391, _1394)));
    float _1399 = _1398 * _1388;
    float _1400 = _1398 * _1391;
    float _1401 = _1398 * _1394;
    float _1413 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1414 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1415 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1416 = (-0.0) - _1326;
    float _1418 = (-0.0) - _1327;
    float _1419 = (-0.0) - _1328;
    float _1425 = float(gl_LaunchIDEXT.x);
    float _1426 = float(gl_LaunchIDEXT.y);
    float _1429 = float(gl_LaunchSizeEXT.x);
    float _1443 = fract(fract(sin(dot(vec2(_1425 / _1429, _1426 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1456 = fract(fract(sin(dot(vec2((_1425 + 128.0) / _1429, (_1426 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1466 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1467 = _1466.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1467, _1466.w, _1467, vec3(_1413, _1414, _1415), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    if (_69._m0 == 0u)
    {
        float _1487 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1399, _1400, _1401));
        float _1914 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1490 = isnan(1.0) ? _1914 : (isnan(_1914) ? 1.0 : min(_1914, 1.0));
        float _1509 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1293) * 0.949999988079071044921875);
        float _1510 = _1509 * _1509;
        float _1511 = g_sceneCB._m0[4u].x - _1326;
        float _1512 = g_sceneCB._m0[4u].y - _1327;
        float _1513 = g_sceneCB._m0[4u].z - _1328;
        float _1517 = inversesqrt(dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513)));
        float _1518 = _1517 * _1511;
        float _1519 = _1517 * _1512;
        float _1520 = _1517 * _1513;
        float _1521 = dot(vec3(_1399, _1400, _1401), vec3(g_sceneCB._m0[4u].xyz));
        float _1925 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1524 = isnan(1.0) ? _1925 : (isnan(_1925) ? 1.0 : min(_1925, 1.0));
        float _1525 = dot(vec3(_1399, _1400, _1401), vec3(_1416, _1418, _1419));
        float _1936 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1528 = isnan(1.0) ? _1936 : (isnan(_1936) ? 1.0 : min(_1936, 1.0));
        float _1529 = dot(vec3(_1399, _1400, _1401), vec3(_1518, _1519, _1520));
        float _1947 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1532 = isnan(1.0) ? _1947 : (isnan(_1947) ? 1.0 : min(_1947, 1.0));
        float _1533 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1518, _1519, _1520));
        float _1958 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1537 = _1510 * _1510;
        float _1541 = ((_1532 * _1532) * (_1537 + (-1.0))) + 1.0;
        float _1553 = (exp2(log2(1.0 - (isnan(1.0) ? _1958 : (isnan(_1958) ? 1.0 : min(_1958, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1555 = 1.0 - _1510;
        float _1566 = (0.5 / (((_1528 * ((_1524 * _1555) + _1510)) + 9.9999999392252902907785028219223e-09) + (((_1528 * _1555) + _1510) * _1524))) * _1524;
        float _1969 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1568 = (isnan(1.0) ? _1969 : (isnan(_1969) ? 1.0 : min(_1969, 1.0))) * (_1537 / ((_1541 * _1541) * 3.141590118408203125));
        _1575 = ((_1053 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1490;
        _1576 = ((_1054 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1490;
        _1577 = ((_1055 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1490;
        _1578 = (_1553 * g_sceneCB._m0[5u].x) * _1568;
        _1579 = (_1553 * g_sceneCB._m0[5u].y) * _1568;
        _1580 = (_1553 * g_sceneCB._m0[5u].z) * _1568;
    }
    else
    {
        _1575 = 0.0;
        _1576 = 0.0;
        _1577 = 0.0;
        _1578 = 0.0;
        _1579 = 0.0;
        _1580 = 0.0;
    }
    bool _1582 = abs(_1400) < 0.89999997615814208984375;
    float _1584 = float(_1582);
    float _1585 = _1582 ? 0.0 : 1.0;
    float _1588 = (_1584 * _1401) - (_1585 * _1400);
    float _1589 = _1585 * _1399;
    float _1591 = (-0.0) - (_1399 * _1584);
    float _1595 = inversesqrt(dot(vec3(_1588, _1589, _1591), vec3(_1588, _1589, _1591)));
    float _1596 = _1588 * _1595;
    float _1597 = _1589 * _1595;
    float _1598 = _1595 * _1591;
    float _1601 = (_1597 * _1401) - (_1598 * _1400);
    float _1604 = (_1598 * _1399) - (_1596 * _1401);
    float _1607 = (_1596 * _1400) - (_1597 * _1399);
    float _1609;
    float _1617;
    float _1608 = 0.0;
    uint _1610 = 0u;
    float _1614;
    bool _1616;
    for (;;)
    {
        _1614 = (float(_1610) + _1443) * 0.03125;
        _1616 = _1610 == 0u;
        float frontier_phi_57_pred;
        if (_1616)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1751;
            float _1752;
            uint _1754;
            _1751 = 0.0;
            _1752 = 0.5;
            _1754 = _1610;
            float _1618;
            for (;;)
            {
                _1618 = ((_1754 & 1u) != 0u) ? (_1752 + _1751) : _1751;
                uint _1755 = _1754 >> 1u;
                if (_1755 == 0u)
                {
                    break;
                }
                else
                {
                    _1751 = _1618;
                    _1752 *= 0.5;
                    _1754 = _1755;
                }
            }
            frontier_phi_57_pred = _1618;
        }
        _1617 = frontier_phi_57_pred;
        float _1619 = _1617 + _1456;
        float _1623 = sqrt(_1614);
        float _1624 = ((_1619 > 1.0) ? (_1619 + (-1.0)) : _1619) * 6.283185482025146484375;
        float _1627 = cos(_1624) * _1623;
        float _1629 = sin(_1624) * _1623;
        float _1631 = sqrt(1.0 - _1614);
        float _1644 = ((_1631 * _1399) + (_1627 * _1601)) + (_1629 * _1596);
        float _1645 = ((_1631 * _1400) + (_1627 * _1604)) + (_1629 * _1597);
        float _1646 = ((_1631 * _1401) + (_1627 * _1607)) + (_1629 * _1598);
        _68._m0 = 1u;
        uvec4 _1650 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1651 = _1650.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1651, _1650.w, _1651, vec3(_1413, _1414, _1415), 9.9999997473787516355514526367188e-05, vec3(_1644, _1645, _1646), 10000.0, 1);
        float _1657 = dot(vec3(_1399, _1400, _1401), vec3(_1644, _1645, _1646));
        float _1980 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1660 = isnan(1.0) ? _1980 : (isnan(_1980) ? 1.0 : min(_1980, 1.0));
        _1609 = ((float(_68._m0 == 0u) * _1660) / (_1660 * 0.3183098733425140380859375)) + _1608;
        uint _1611 = _1610 + 1u;
        if (_1611 == 32u)
        {
            break;
        }
        else
        {
            _1608 = _1609;
            _1610 = _1611;
            continue;
        }
    }
    float _1668 = _1609 * 0.009947183541953563690185546875;
    float _1673 = dot(vec3(_1326, _1327, _1328), vec3(_1399, _1400, _1401)) * 2.0;
    vec4 _1687 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1326 - (_1673 * _1399), _1327 - (_1673 * _1400), _1328 - (_1673 * _1401)), 4.0 - (_1293 * 4.0));
    float _1692 = dot(vec3(_1416, _1418, _1419), vec3(_1399, _1400, _1401));
    float _1991 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
    float _1701 = (exp2(log2(1.0 - (isnan(1.0) ? _1991 : (isnan(_1991) ? 1.0 : min(_1991, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1707 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1399, _1400, _1401), 0.0);
    float _1718 = (_1578 + _1575) + (((_1707.x * _1053) + (_1701 * _1687.x)) * _1668);
    float _1722 = (_1579 + _1576) + (((_1707.y * _1054) + (_1701 * _1687.y)) * _1668);
    float _1726 = (_1580 + _1577) + (((_1707.z * _1055) + (_1701 * _1687.z)) * _1668);
    float _2002 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
    float _2013 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    float _2024 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
    bool _1734 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1745;
    _1745.x = _1734 ? ((_604 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2002 : (isnan(_2002) ? 1.0 : min(_2002, 1.0)));
    _1745.y = _1734 ? ((_607 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0)));
    _1745.z = _1734 ? ((_610 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2024 : (isnan(_2024) ? 1.0 : min(_2024, 1.0)));
    payload._m0 = _1745;
}


