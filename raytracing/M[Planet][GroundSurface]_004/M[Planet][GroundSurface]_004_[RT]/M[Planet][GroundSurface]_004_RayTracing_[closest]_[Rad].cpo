#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_004_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2115;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _178 * _170;
    uint _181 = _179 >> 2u;
    uvec3 _190 = uvec3(texelFetch(l_geomAttrib_0, int(_181)).x, texelFetch(l_geomAttrib_0, int(_181 + 1u)).x, texelFetch(l_geomAttrib_0, int(_181 + 2u)).x);
    uint _197 = _177.z;
    bool _198 = _197 != 0u;
    bool _200 = _129.w == 0u;
    bool _201 = _198 || _200;
    uint _202 = _179 + 12u;
    uint _225;
    uint _226;
    uint _227;
    uint _228;
    if (_201)
    {
        uvec4 _204 = texelFetch(l_geomAttrib_0, int(_202 >> 2u));
        uint _205 = _204.x;
        _225 = _205 & 255u;
        _226 = (_205 >> 8u) & 255u;
        _227 = (_205 >> 16u) & 255u;
        _228 = 16u;
    }
    else
    {
        uint _213 = _202 >> 2u;
        uvec2 _219 = uvec2(texelFetch(l_geomAttrib_0, int(_213)).x, texelFetch(l_geomAttrib_0, int(_213 + 1u)).x);
        uint _220 = _219.x;
        _225 = _220 & 65535u;
        _226 = _220 >> 16u;
        _227 = _219.y & 65535u;
        _228 = 20u;
    }
    uvec4 _235 = texelFetch(l_geomAttrib_0, int((_228 + _179) >> 2u));
    uint _236 = _235.x;
    bool _250 = _197 == 0u;
    uint _251;
    if (_250)
    {
        _251 = _228 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_200)
        {
            frontier_phi_9_10_ladder = _228 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _228 + 12u;
        }
        _251 = frontier_phi_9_10_ladder;
    }
    uvec4 _259 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + (_198 ? (_251 + 4u) : _251)) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uint _266 = _178 * _172;
    uint _267 = _266 >> 2u;
    uvec3 _276 = uvec3(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x, texelFetch(l_geomAttrib_0, int(_267 + 2u)).x);
    uint _283 = _266 + 12u;
    uint _304;
    uint _305;
    uint _306;
    uint _307;
    if (_201)
    {
        uvec4 _285 = texelFetch(l_geomAttrib_0, int(_283 >> 2u));
        uint _286 = _285.x;
        _304 = _286 & 255u;
        _305 = (_286 >> 8u) & 255u;
        _306 = (_286 >> 16u) & 255u;
        _307 = 16u;
    }
    else
    {
        uint _292 = _283 >> 2u;
        uvec2 _298 = uvec2(texelFetch(l_geomAttrib_0, int(_292)).x, texelFetch(l_geomAttrib_0, int(_292 + 1u)).x);
        uint _299 = _298.x;
        _304 = _299 & 65535u;
        _305 = _299 >> 16u;
        _306 = _298.y & 65535u;
        _307 = 20u;
    }
    uvec4 _313 = texelFetch(l_geomAttrib_0, int((_307 + _266) >> 2u));
    uint _314 = _313.x;
    uint _326;
    if (_250)
    {
        _326 = _307 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_200)
        {
            frontier_phi_16_17_ladder = _307 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _307 + 12u;
        }
        _326 = frontier_phi_16_17_ladder;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int(((_266 + 4u) + (_198 ? (_326 + 4u) : _326)) >> 2u));
    uint _335 = _334.x;
    float _339 = float(int(uint(int(_335 << 16u) >> int(16u))));
    float _340 = float(int(uint(int(_335) >> int(16u))));
    uint _341 = _178 * _173;
    uint _342 = _341 >> 2u;
    uvec3 _351 = uvec3(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x, texelFetch(l_geomAttrib_0, int(_342 + 2u)).x);
    uint _358 = _341 + 12u;
    uint _379;
    uint _380;
    uint _381;
    uint _382;
    if (_201)
    {
        uvec4 _360 = texelFetch(l_geomAttrib_0, int(_358 >> 2u));
        uint _361 = _360.x;
        _379 = _361 & 255u;
        _380 = (_361 >> 8u) & 255u;
        _381 = (_361 >> 16u) & 255u;
        _382 = 16u;
    }
    else
    {
        uint _367 = _358 >> 2u;
        uvec2 _373 = uvec2(texelFetch(l_geomAttrib_0, int(_367)).x, texelFetch(l_geomAttrib_0, int(_367 + 1u)).x);
        uint _374 = _373.x;
        _379 = _374 & 65535u;
        _380 = _374 >> 16u;
        _381 = _373.y & 65535u;
        _382 = 20u;
    }
    uvec4 _388 = texelFetch(l_geomAttrib_0, int((_382 + _341) >> 2u));
    uint _389 = _388.x;
    uint _401;
    if (_250)
    {
        _401 = _382 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_200)
        {
            frontier_phi_23_24_ladder = _382 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _382 + 12u;
        }
        _401 = frontier_phi_23_24_ladder;
    }
    uvec4 _409 = texelFetch(l_geomAttrib_0, int(((_341 + 4u) + (_198 ? (_401 + 4u) : _401)) >> 2u));
    uint _410 = _409.x;
    float _414 = float(int(uint(int(_410 << 16u) >> int(16u))));
    float _415 = float(int(uint(int(_410) >> int(16u))));
    bool _417 = _129.z == 0u;
    float _453;
    float _454;
    float _455;
    if (_417)
    {
        uint _420 = _170 * 3u;
        uvec3 _429 = uvec3(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_420 + 2u)).x);
        _453 = uintBitsToFloat(_429.x);
        _454 = uintBitsToFloat(_429.y);
        _455 = uintBitsToFloat(_429.z);
    }
    else
    {
        uint _437 = _170 * 2u;
        uvec2 _443 = uvec2(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x);
        uint _444 = _443.x;
        _453 = unpackHalf2x16(_444).x;
        _454 = unpackHalf2x16(_444 >> 16u).x;
        _455 = unpackHalf2x16(_443.y).x;
    }
    float _491;
    float _492;
    float _493;
    if (_417)
    {
        uint _458 = _172 * 3u;
        uvec3 _467 = uvec3(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_458 + 2u)).x);
        _491 = uintBitsToFloat(_467.x);
        _492 = uintBitsToFloat(_467.y);
        _493 = uintBitsToFloat(_467.z);
    }
    else
    {
        uint _475 = _172 * 2u;
        uvec2 _481 = uvec2(texelFetch(l_geomPositionBuffer, int(_475)).x, texelFetch(l_geomPositionBuffer, int(_475 + 1u)).x);
        uint _482 = _481.x;
        _491 = unpackHalf2x16(_482).x;
        _492 = unpackHalf2x16(_482 >> 16u).x;
        _493 = unpackHalf2x16(_481.y).x;
    }
    float _529;
    float _530;
    float _531;
    if (_417)
    {
        uint _496 = _173 * 3u;
        uvec3 _505 = uvec3(texelFetch(l_geomPositionBuffer, int(_496)).x, texelFetch(l_geomPositionBuffer, int(_496 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_496 + 2u)).x);
        _529 = uintBitsToFloat(_505.x);
        _530 = uintBitsToFloat(_505.y);
        _531 = uintBitsToFloat(_505.z);
    }
    else
    {
        uint _513 = _173 * 2u;
        uvec2 _519 = uvec2(texelFetch(l_geomPositionBuffer, int(_513)).x, texelFetch(l_geomPositionBuffer, int(_513 + 1u)).x);
        uint _520 = _519.x;
        _529 = unpackHalf2x16(_520).x;
        _530 = unpackHalf2x16(_520 >> 16u).x;
        _531 = unpackHalf2x16(_519.y).x;
    }
    float _534 = (1.0 - hit._m0.x) - hit._m0.y;
    float _547 = ((uintBitsToFloat(_276.x) * hit._m0.x) + (uintBitsToFloat(_190.x) * _534)) + (uintBitsToFloat(_351.x) * hit._m0.y);
    float _548 = ((uintBitsToFloat(_276.y) * hit._m0.x) + (uintBitsToFloat(_190.y) * _534)) + (uintBitsToFloat(_351.y) * hit._m0.y);
    float _549 = ((uintBitsToFloat(_276.z) * hit._m0.x) + (uintBitsToFloat(_190.z) * _534)) + (uintBitsToFloat(_351.z) * hit._m0.y);
    float _583 = (_339 - _264) * 0.00048828125;
    float _585 = (_340 - _265) * 0.00048828125;
    float _588 = (_414 - _264) * 0.00048828125;
    float _589 = (_415 - _265) * 0.00048828125;
    float _611 = _491 - _453;
    float _612 = _492 - _454;
    float _613 = _493 - _455;
    float _616 = fma(_613, gl_ObjectToWorldEXT[2u].x, fma(_612, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _611));
    float _619 = fma(_613, gl_ObjectToWorldEXT[2u].y, fma(_612, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _611));
    float _622 = fma(_613, gl_ObjectToWorldEXT[2u].z, fma(_612, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _611));
    float _623 = _529 - _453;
    float _624 = _530 - _454;
    float _625 = _531 - _455;
    float _628 = fma(_625, gl_ObjectToWorldEXT[2u].x, fma(_624, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _623));
    float _631 = fma(_625, gl_ObjectToWorldEXT[2u].y, fma(_624, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _623));
    float _634 = fma(_625, gl_ObjectToWorldEXT[2u].z, fma(_624, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _623));
    float _635 = (((_339 * hit._m0.x) + (_264 * _534)) + (_414 * hit._m0.y)) * 0.00048828125;
    float _636 = (((_340 * hit._m0.x) + (_265 * _534)) + (_415 * hit._m0.y)) * 0.00048828125;
    float _640 = (((float(_225) * _534) + (-127.0)) + (float(_304) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _643 = (((float(_226) * _534) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _646 = (((float(_227) * _534) + (-127.0)) + (float(_306) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _647 = _640 * 0.0078740157186985015869140625;
    float _649 = _643 * 0.0078740157186985015869140625;
    float _650 = _646 * 0.0078740157186985015869140625;
    float _663 = ((((float(_236 & 255u) * _534) + (-127.0)) + (float(_314 & 255u) * hit._m0.x)) + (float(_389 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _664 = ((((float((_236 >> 8u) & 255u) * _534) + (-127.0)) + (float((_314 >> 8u) & 255u) * hit._m0.x)) + (float((_389 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _665 = ((((float((_236 >> 16u) & 255u) * _534) + (-127.0)) + (float((_314 >> 16u) & 255u) * hit._m0.x)) + (float((_389 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _666 = ((((float(_236 >> 24u) * _534) + (-127.0)) + (float(_314 >> 24u) * hit._m0.x)) + (float(_389 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _676 = ((_664 * _650) - (_665 * _649)) * _666;
    float _677 = ((_665 * _647) - (_663 * _650)) * _666;
    float _678 = ((_663 * _649) - (_664 * _647)) * _666;
    float _682 = inversesqrt(dot(vec3(_676, _677, _678), vec3(_676, _677, _678)));
    uvec4 _689 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _691 = _689.z != 0u;
    uvec2 _711 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_0, int(0u)));
    bool _716 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _769;
    if (_716)
    {
        float _727 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _733 = (_634 * _619) - (_631 * _622);
        float _736 = (_628 * _622) - (_634 * _616);
        float _739 = (_631 * _616) - (_628 * _619);
        float _766 = ((log2((((float(_711.y) * 0.5) * float(_711.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_736 * _736) + (_739 * _739)) + (_733 * _733)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_727 * gl_WorldRayDirectionEXT.x, _727 * gl_WorldRayDirectionEXT.y, _727 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _769 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    }
    else
    {
        _769 = 0.0;
    }
    vec4 _773 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _635) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _636) + cbTextureTilingScale._m0[0u].w), _769);
    float _775 = _773.x;
    float _776 = _773.y;
    float _777 = _773.z;
    bool _798 = _689.x != 0u;
    uvec2 _818 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_8, int(0u)));
    float _869;
    if (_716)
    {
        float _829 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _835 = (_634 * _619) - (_631 * _622);
        float _838 = (_628 * _622) - (_634 * _616);
        float _841 = (_631 * _616) - (_628 * _619);
        float _867 = ((log2((((float(_818.y) * 0.5) * float(_818.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_838 * _838) + (_841 * _841)) + (_835 * _835)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_829 * gl_WorldRayDirectionEXT.x, _829 * gl_WorldRayDirectionEXT.y, _829 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _869 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    }
    else
    {
        _869 = 0.0;
    }
    vec4 _871 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _635) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _636) + cbTextureTilingScale._m0[9u].w), _869);
    float _873 = _871.x;
    float _874 = _871.y;
    float _875 = _871.z;
    float _892 = _798 ? ((cbMtdParam._m0[17u].w * (cbMtdParam._m0[9u].w - _873)) + _873) : (_873 * cbMtdParam._m0[9u].w);
    float _893 = _798 ? ((cbMtdParam._m0[17u].w * (cbMtdParam._m0[10u].x - _874)) + _874) : (_874 * cbMtdParam._m0[10u].x);
    float _894 = _798 ? ((cbMtdParam._m0[17u].w * (cbMtdParam._m0[10u].y - _875)) + _875) : (_875 * cbMtdParam._m0[10u].y);
    bool _896 = _689.y != 0u;
    uvec2 _911 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_4, int(0u)));
    float _962;
    if (_716)
    {
        float _922 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _928 = (_634 * _619) - (_631 * _622);
        float _931 = (_628 * _622) - (_634 * _616);
        float _934 = (_631 * _616) - (_628 * _619);
        float _960 = ((log2((((float(_911.y) * 0.5) * float(_911.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_931 * _931) + (_934 * _934)) + (_928 * _928)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_922 * gl_WorldRayDirectionEXT.x, _922 * gl_WorldRayDirectionEXT.y, _922 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _962 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    }
    else
    {
        _962 = 0.0;
    }
    vec4 _964 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _635) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _636) + cbTextureTilingScale._m0[7u].w), _962);
    float _966 = _964.x;
    float _967 = _964.y;
    float _968 = _964.z;
    uvec2 _996 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_9, int(0u)));
    float _1047;
    if (_716)
    {
        float _1007 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1013 = (_634 * _619) - (_631 * _622);
        float _1016 = (_628 * _622) - (_634 * _616);
        float _1019 = (_631 * _616) - (_628 * _619);
        float _1045 = ((log2((((float(_996.y) * 0.5) * float(_996.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1016 * _1016) + (_1019 * _1019)) + (_1013 * _1013)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1007 * gl_WorldRayDirectionEXT.x, _1007 * gl_WorldRayDirectionEXT.y, _1007 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1047 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
    }
    else
    {
        _1047 = 0.0;
    }
    vec4 _1050 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _635) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _636) + cbTextureTilingScale._m0[10u].w), _1047);
    float _1052 = _1050.x;
    float _1053 = _1050.y;
    float _1060 = ((cbMtdParam._m0[17u].y * (-1.39999997615814208984375)) * (1.0 - _1052)) + 1.0;
    float _2229 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1067 = (cbMtdParam._m0[16u].z * ((isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0))) - _1052)) + _1052;
    float _1074 = (_1067 * ((_896 ? ((cbMtdParam._m0[14u].x * (cbMtdParam._m0[10u].w - _966)) + _966) : (_966 * cbMtdParam._m0[10u].w)) - _892)) + _892;
    float _1075 = (_1067 * ((_896 ? ((cbMtdParam._m0[14u].x * (cbMtdParam._m0[11u].x - _967)) + _967) : (_967 * cbMtdParam._m0[11u].x)) - _893)) + _893;
    float _1076 = (_1067 * ((_896 ? ((cbMtdParam._m0[14u].x * (cbMtdParam._m0[11u].y - _968)) + _968) : (_968 * cbMtdParam._m0[11u].y)) - _894)) + _894;
    float _1080 = (((1.0 - _1053) * (-1.39999997615814208984375)) * cbMtdParam._m0[17u].x) + 1.0;
    float _2240 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1088 = (cbMtdParam._m0[13u].w * ((isnan(1.0) ? _2240 : (isnan(_2240) ? 1.0 : min(_2240, 1.0))) - _1053)) + _1053;
    float _1095 = (_1088 * ((_691 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].w - _775)) + _775) : (_775 * cbMtdParam._m0[11u].w)) - _1074)) + _1074;
    float _1096 = (_1088 * ((_691 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[12u].x - _776)) + _776) : (_776 * cbMtdParam._m0[12u].x)) - _1075)) + _1075;
    float _1097 = (_1088 * ((_691 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[12u].y - _777)) + _777) : (_777 * cbMtdParam._m0[12u].y)) - _1076)) + _1076;
    uvec2 _1109 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_11, int(0u)));
    float _1160;
    if (_716)
    {
        float _1120 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1126 = (_634 * _619) - (_631 * _622);
        float _1129 = (_628 * _622) - (_634 * _616);
        float _1132 = (_631 * _616) - (_628 * _619);
        float _1158 = ((log2((((float(_1109.y) * 0.5) * float(_1109.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1129 * _1129) + (_1132 * _1132)) + (_1126 * _1126)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1120 * gl_WorldRayDirectionEXT.x, _1120 * gl_WorldRayDirectionEXT.y, _1120 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1160 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
    }
    else
    {
        _1160 = 0.0;
    }
    vec4 _1162 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _635) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _636) + cbTextureTilingScale._m0[3u].w), _1160);
    uvec2 _1179 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_13, int(0u)));
    float _1230;
    if (_716)
    {
        float _1190 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1196 = (_634 * _619) - (_631 * _622);
        float _1199 = (_628 * _622) - (_634 * _616);
        float _1202 = (_631 * _616) - (_628 * _619);
        float _1228 = ((log2((((float(_1179.y) * 0.5) * float(_1179.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1199 * _1199) + (_1202 * _1202)) + (_1196 * _1196)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1190 * gl_WorldRayDirectionEXT.x, _1190 * gl_WorldRayDirectionEXT.y, _1190 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1230 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
    }
    else
    {
        _1230 = 0.0;
    }
    float _1239 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _635) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _636) + cbTextureTilingScale._m0[5u].w), _1230).x;
    float _1246 = (_1239 * (_1162.x - _1095)) + _1095;
    float _1247 = (_1239 * (_1162.y - _1096)) + _1096;
    float _1248 = (_1239 * (_1162.z - _1097)) + _1097;
    float _1260 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_647, _649, _650, 0.0)) - cbMtdParam._m0[14u].w;
    float _2261 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
    float _1270 = (exp2(log2(1.0 - (isnan(1.0) ? _2261 : (isnan(_2261) ? 1.0 : min(_2261, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].z : (isnan(cbMtdParam._m0[14u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].z, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[15u].y)) + cbMtdParam._m0[15u].y;
    float _1280 = (((_1270 * cbMtdParam._m0[12u].w) - _1246) * _1270) + _1246;
    float _1281 = (((_1270 * cbMtdParam._m0[13u].x) - _1247) * _1270) + _1247;
    float _1282 = (((_1270 * cbMtdParam._m0[13u].y) - _1248) * _1270) + _1248;
    uvec2 _1294 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_1, int(0u)));
    float _1345;
    if (_716)
    {
        float _1305 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1311 = (_634 * _619) - (_631 * _622);
        float _1314 = (_628 * _622) - (_634 * _616);
        float _1317 = (_631 * _616) - (_628 * _619);
        float _1343 = ((log2((((float(_1294.y) * 0.5) * float(_1294.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1314 * _1314) + (_1317 * _1317)) + (_1311 * _1311)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1305 * gl_WorldRayDirectionEXT.x, _1305 * gl_WorldRayDirectionEXT.y, _1305 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1345 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
    }
    else
    {
        _1345 = 0.0;
    }
    vec4 _1348 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _635) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _636) + cbTextureTilingScale._m0[1u].w), _1345);
    uvec2 _1364 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_2, int(0u)));
    float _1415;
    if (_716)
    {
        float _1375 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1381 = (_634 * _619) - (_631 * _622);
        float _1384 = (_628 * _622) - (_634 * _616);
        float _1387 = (_631 * _616) - (_628 * _619);
        float _1413 = ((log2((((float(_1364.y) * 0.5) * float(_1364.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1384 * _1384) + (_1387 * _1387)) + (_1381 * _1381)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1375 * gl_WorldRayDirectionEXT.x, _1375 * gl_WorldRayDirectionEXT.y, _1375 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1415 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    }
    else
    {
        _1415 = 0.0;
    }
    vec4 _1417 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _635) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _636) + cbTextureTilingScale._m0[6u].w), _1415);
    float _1419 = _1417.x;
    float _1420 = _1417.y;
    float _1421 = _1417.z;
    float _1428 = ((_1348.x - _1419) * _1067) + _1419;
    float _1429 = ((_1348.y - _1420) * _1067) + _1420;
    float _1430 = ((_1348.z - _1421) * _1067) + _1421;
    uvec2 _1442 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_6, int(0u)));
    float _1493;
    if (_716)
    {
        float _1453 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1459 = (_634 * _619) - (_631 * _622);
        float _1462 = (_628 * _622) - (_634 * _616);
        float _1465 = (_631 * _616) - (_628 * _619);
        float _1491 = ((log2((((float(_1442.y) * 0.5) * float(_1442.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1462 * _1462) + (_1465 * _1465)) + (_1459 * _1459)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1453 * gl_WorldRayDirectionEXT.x, _1453 * gl_WorldRayDirectionEXT.y, _1453 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1493 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
    }
    else
    {
        _1493 = 0.0;
    }
    vec4 _1495 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _635) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _636) + cbTextureTilingScale._m0[8u].w), _1493);
    uvec2 _1521 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_10, int(0u)));
    float _1572;
    if (_716)
    {
        float _1532 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1538 = (_634 * _619) - (_631 * _622);
        float _1541 = (_628 * _622) - (_634 * _616);
        float _1544 = (_631 * _616) - (_628 * _619);
        float _1570 = ((log2((((float(_1521.y) * 0.5) * float(_1521.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1541 * _1541) + (_1544 * _1544)) + (_1538 * _1538)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1532 * gl_WorldRayDirectionEXT.x, _1532 * gl_WorldRayDirectionEXT.y, _1532 * gl_WorldRayDirectionEXT.z), vec3(_647, _649, _650))));
        _1572 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
    }
    else
    {
        _1572 = 0.0;
    }
    vec4 _1574 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _635) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _636) + cbTextureTilingScale._m0[2u].w), _1572);
    float _1586 = (((_1495.x - _1428) * _1088) + _1428) + ((_1574.x + (-0.5)) * cbMtdParam._m0[17u].z);
    float _1587 = (((_1495.y - _1429) * _1088) + _1429) + ((_1574.y + (-0.5)) * cbMtdParam._m0[17u].z);
    float _1588 = (((_1495.z - _1430) * _1088) + _1430) + ((_1574.z + (-0.5)) * cbMtdParam._m0[17u].z);
    uvec2 _1600 = uvec2(textureSize(M_Planet_GroundSurface_004_snp_0_Texture2D_12, int(0u)));
    float _1604 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1605 = _1604 * gl_WorldRayDirectionEXT.x;
    float _1606 = _1604 * gl_WorldRayDirectionEXT.y;
    float _1607 = _1604 * gl_WorldRayDirectionEXT.z;
    float _1651;
    if (_716)
    {
        float _1617 = (_634 * _619) - (_631 * _622);
        float _1620 = (_628 * _622) - (_634 * _616);
        float _1623 = (_631 * _616) - (_628 * _619);
        float _1649 = ((log2((((float(_1600.y) * 0.5) * float(_1600.x)) * abs((_589 * _583) - (_588 * _585))) / (sqrt(((_1620 * _1620) + (_1623 * _1623)) + (_1617 * _1617)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1605, _1606, _1607), vec3(_647, _649, _650))));
        _1651 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
    }
    else
    {
        _1651 = 0.0;
    }
    vec4 _1653 = textureLod(sampler2D(M_Planet_GroundSurface_004_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _635) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _636) + cbTextureTilingScale._m0[4u].w), _1651);
    float _1664 = ((_1653.x - _1586) * _1239) + _1586;
    float _1665 = ((_1653.y - _1587) * _1239) + _1587;
    float _1666 = ((_1653.z - _1588) * _1239) + _1588;
    float _1676 = ((1.0 - _1666) * _1270) + _1666;
    float _1679 = ((((0.502016007900238037109375 - _1664) * _1270) + _1664) * 2.0) + (-1.0);
    float _1681 = ((((0.502016007900238037109375 - _1665) * _1270) + _1665) * 2.0) + (-1.0);
    float _1682 = dot(vec2(_1679, _1681), vec2(_1679, _1681));
    float _2302 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
    float _1687 = sqrt(1.0 - (isnan(1.0) ? _2302 : (isnan(_2302) ? 1.0 : min(_2302, 1.0))));
    float _1692 = inversesqrt(dot(vec3(_547, _548, _549), vec3(_547, _548, _549)));
    float _1705 = inversesqrt(dot(vec3(cbMtdParam._m0[18u].xyz), vec3(cbMtdParam._m0[18u].xyz)));
    float _1706 = _1705 * cbMtdParam._m0[18u].x;
    float _1707 = _1705 * cbMtdParam._m0[18u].y;
    float _1708 = _1705 * cbMtdParam._m0[18u].z;
    float _1712 = inversesqrt(dot(vec3(_1706, _1707, _1708), vec3(_1706, _1707, _1708)));
    float _1713 = _1712 * _1706;
    float _1714 = _1712 * _1707;
    float _1715 = _1712 * _1708;
    float _1719 = inversesqrt(dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715)));
    float _1734 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1692 * _547, _1692 * _548, _1692 * _549, 0.0), vec4(_1719 * _1713, _1719 * _1714, _1719 * _1715, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2313 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
    float _1736 = isnan(1.0) ? _2313 : (isnan(_2313) ? 1.0 : min(_2313, 1.0));
    float _1742 = exp2(log2(_1736 * 6.5) * 7.0);
    float _2324 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
    float _1744 = (isnan(1.0) ? _2324 : (isnan(_2324) ? 1.0 : min(_2324, 1.0))) + _1736;
    float _2335 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
    float _1745 = isnan(1.0) ? _2335 : (isnan(_2335) ? 1.0 : min(_2335, 1.0));
    float _1754 = fma(_1687, _647, fma(_1681, _663, (_682 * _676) * _1679));
    float _1757 = fma(_1687, _649, fma(_1681, _664, (_682 * _677) * _1679));
    float _1760 = fma(_1687, _650, fma(_1681, _665, (_682 * _678) * _1679));
    float _1764 = inversesqrt(dot(vec3(_1754, _1757, _1760), vec3(_1754, _1757, _1760)));
    float _1765 = _1764 * _1754;
    float _1766 = _1764 * _1757;
    float _1767 = _1764 * _1760;
    float _1779 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1780 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1781 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1782 = (-0.0) - _1605;
    float _1784 = (-0.0) - _1606;
    float _1785 = (-0.0) - _1607;
    float _1791 = float(gl_LaunchIDEXT.x);
    float _1792 = float(gl_LaunchIDEXT.y);
    float _1795 = float(gl_LaunchSizeEXT.x);
    float _1809 = fract(fract(sin(dot(vec2(_1791 / _1795, _1792 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1822 = fract(fract(sin(dot(vec2((_1791 + 128.0) / _1795, (_1792 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1832 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1833 = _1832.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1833, _1832.w, _1833, vec3(_1779, _1780, _1781), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1941;
    float _1942;
    float _1943;
    float _1944;
    float _1945;
    float _1946;
    if (_71._m0 == 0u)
    {
        float _1853 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1765, _1766, _1767));
        float _2346 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1856 = isnan(1.0) ? _2346 : (isnan(_2346) ? 1.0 : min(_2346, 1.0));
        float _1875 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1676) * 0.949999988079071044921875);
        float _1876 = _1875 * _1875;
        float _1877 = g_sceneCB._m0[4u].x - _1605;
        float _1878 = g_sceneCB._m0[4u].y - _1606;
        float _1879 = g_sceneCB._m0[4u].z - _1607;
        float _1883 = inversesqrt(dot(vec3(_1877, _1878, _1879), vec3(_1877, _1878, _1879)));
        float _1884 = _1883 * _1877;
        float _1885 = _1883 * _1878;
        float _1886 = _1883 * _1879;
        float _1887 = dot(vec3(_1765, _1766, _1767), vec3(g_sceneCB._m0[4u].xyz));
        float _2357 = isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0));
        float _1890 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
        float _1891 = dot(vec3(_1765, _1766, _1767), vec3(_1782, _1784, _1785));
        float _2368 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1894 = isnan(1.0) ? _2368 : (isnan(_2368) ? 1.0 : min(_2368, 1.0));
        float _1895 = dot(vec3(_1765, _1766, _1767), vec3(_1884, _1885, _1886));
        float _2379 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1898 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
        float _1899 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1884, _1885, _1886));
        float _2390 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
        float _1903 = _1876 * _1876;
        float _1907 = ((_1898 * _1898) * (_1903 + (-1.0))) + 1.0;
        float _1919 = (exp2(log2(1.0 - (isnan(1.0) ? _2390 : (isnan(_2390) ? 1.0 : min(_2390, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1921 = 1.0 - _1876;
        float _1932 = (0.5 / (((_1894 * ((_1890 * _1921) + _1876)) + 9.9999999392252902907785028219223e-09) + (((_1894 * _1921) + _1876) * _1890))) * _1890;
        float _2401 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
        float _1934 = (isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0))) * (_1903 / ((_1907 * _1907) * 3.141590118408203125));
        _1941 = ((_1280 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1856;
        _1942 = ((_1281 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1856;
        _1943 = ((_1282 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1856;
        _1944 = (_1919 * g_sceneCB._m0[5u].x) * _1934;
        _1945 = (_1919 * g_sceneCB._m0[5u].y) * _1934;
        _1946 = (_1919 * g_sceneCB._m0[5u].z) * _1934;
    }
    else
    {
        _1941 = 0.0;
        _1942 = 0.0;
        _1943 = 0.0;
        _1944 = 0.0;
        _1945 = 0.0;
        _1946 = 0.0;
    }
    bool _1948 = abs(_1766) < 0.89999997615814208984375;
    float _1950 = float(_1948);
    float _1951 = _1948 ? 0.0 : 1.0;
    float _1954 = (_1950 * _1767) - (_1951 * _1766);
    float _1955 = _1951 * _1765;
    float _1957 = (-0.0) - (_1765 * _1950);
    float _1961 = inversesqrt(dot(vec3(_1954, _1955, _1957), vec3(_1954, _1955, _1957)));
    float _1962 = _1954 * _1961;
    float _1963 = _1955 * _1961;
    float _1964 = _1961 * _1957;
    float _1967 = (_1963 * _1767) - (_1964 * _1766);
    float _1970 = (_1964 * _1765) - (_1962 * _1767);
    float _1973 = (_1962 * _1766) - (_1963 * _1765);
    float _1975;
    float _1983;
    float _1974 = 0.0;
    uint _1976 = 0u;
    float _1980;
    bool _1982;
    for (;;)
    {
        _1980 = (float(_1976) + _1809) * 0.03125;
        _1982 = _1976 == 0u;
        float frontier_phi_61_pred;
        if (_1982)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _2120;
            float _2121;
            uint _2123;
            _2120 = 0.0;
            _2121 = 0.5;
            _2123 = _1976;
            float _1984;
            for (;;)
            {
                _1984 = ((_2123 & 1u) != 0u) ? (_2121 + _2120) : _2120;
                uint _2124 = _2123 >> 1u;
                if (_2124 == 0u)
                {
                    break;
                }
                else
                {
                    _2120 = _1984;
                    _2121 *= 0.5;
                    _2123 = _2124;
                }
            }
            frontier_phi_61_pred = _1984;
        }
        _1983 = frontier_phi_61_pred;
        float _1985 = _1983 + _1822;
        float _1989 = sqrt(_1980);
        float _1990 = ((_1985 > 1.0) ? (_1985 + (-1.0)) : _1985) * 6.283185482025146484375;
        float _1993 = cos(_1990) * _1989;
        float _1995 = sin(_1990) * _1989;
        float _1997 = sqrt(1.0 - _1980);
        float _2010 = ((_1997 * _1765) + (_1993 * _1967)) + (_1995 * _1962);
        float _2011 = ((_1997 * _1766) + (_1993 * _1970)) + (_1995 * _1963);
        float _2012 = ((_1997 * _1767) + (_1993 * _1973)) + (_1995 * _1964);
        _70._m0 = 1u;
        uvec4 _2016 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2017 = _2016.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2017, _2016.w, _2017, vec3(_1779, _1780, _1781), 9.9999997473787516355514526367188e-05, vec3(_2010, _2011, _2012), 10000.0, 1);
        float _2023 = dot(vec3(_1765, _1766, _1767), vec3(_2010, _2011, _2012));
        float _2412 = isnan(0.0) ? _2023 : (isnan(_2023) ? 0.0 : max(_2023, 0.0));
        float _2026 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _1975 = ((float(_70._m0 == 0u) * _2026) / (_2026 * 0.3183098733425140380859375)) + _1974;
        uint _1977 = _1976 + 1u;
        if (_1977 == 32u)
        {
            break;
        }
        else
        {
            _1974 = _1975;
            _1976 = _1977;
            continue;
        }
    }
    float _2034 = _1975 * 0.009947183541953563690185546875;
    float _2039 = dot(vec3(_1605, _1606, _1607), vec3(_1765, _1766, _1767)) * 2.0;
    vec4 _2053 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1605 - (_2039 * _1765), _1606 - (_2039 * _1766), _1607 - (_2039 * _1767)), 4.0 - (_1676 * 4.0));
    float _2058 = dot(vec3(_1782, _1784, _1785), vec3(_1765, _1766, _1767));
    float _2423 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2067 = (exp2(log2(1.0 - (isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2073 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1765, _1766, _1767), 0.0);
    float _2085 = ((_1941 + ((cbMtdParam._m0[15u].w * _1280) * _1745)) + _1944) + (((_2073.x * _1280) + (_2067 * _2053.x)) * _2034);
    float _2090 = ((_1942 + ((cbMtdParam._m0[15u].w * _1281) * _1745)) + _1945) + (((_2073.y * _1281) + (_2067 * _2053.y)) * _2034);
    float _2095 = ((_1943 + ((cbMtdParam._m0[15u].w * _1282) * _1745)) + _1946) + (((_2073.z * _1282) + (_2067 * _2053.z)) * _2034);
    float _2434 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
    float _2445 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
    float _2456 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
    bool _2103 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2114;
    _2114.x = _2103 ? ((_640 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2434 : (isnan(_2434) ? 1.0 : min(_2434, 1.0)));
    _2114.y = _2103 ? ((_643 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2445 : (isnan(_2445) ? 1.0 : min(_2445, 1.0)));
    _2114.z = _2103 ? ((_646 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2456 : (isnan(_2456) ? 1.0 : min(_2456, 1.0)));
    payload._m0 = _2114;
}


