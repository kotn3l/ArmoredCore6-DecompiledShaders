#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_ES_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_ES_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_ES_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_ES_Emissive_Glow_Addition_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1259;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _164 & 65535u;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _165 >> 16u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _170 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _185 = (_178 * _170) + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 20u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 24u;
    }
    bool _218 = _179 == 0u;
    uint _219;
    if (_218)
    {
        _219 = _212;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 8u;
        }
        _219 = frontier_phi_9_10_ladder;
    }
    uint _224 = _180 ? (_219 + 4u) : _219;
    uint _225 = _178 * _170;
    uvec4 _236 = texelFetch(l_geomAttrib_0, int(((_225 + 4u) + _224) >> 2u));
    uint _237 = _236.x;
    float _241 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _242 = float(int(uint(int(_237) >> int(16u))));
    uint _244 = (_178 * _172) + 12u;
    uint _265;
    uint _266;
    uint _267;
    uint _268;
    if (_183)
    {
        uvec4 _246 = texelFetch(l_geomAttrib_0, int(_244 >> 2u));
        uint _247 = _246.x;
        _265 = _247 & 255u;
        _266 = (_247 >> 8u) & 255u;
        _267 = (_247 >> 16u) & 255u;
        _268 = 20u;
    }
    else
    {
        uint _253 = _244 >> 2u;
        uvec2 _259 = uvec2(texelFetch(l_geomAttrib_0, int(_253)).x, texelFetch(l_geomAttrib_0, int(_253 + 1u)).x);
        uint _260 = _259.x;
        _265 = _260 & 65535u;
        _266 = _260 >> 16u;
        _267 = _259.y & 65535u;
        _268 = 24u;
    }
    uint _272;
    if (_218)
    {
        _272 = _268;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _268 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _268 + 8u;
        }
        _272 = frontier_phi_16_17_ladder;
    }
    uint _276 = _180 ? (_272 + 4u) : _272;
    uint _277 = _178 * _172;
    uvec4 _287 = texelFetch(l_geomAttrib_0, int(((_277 + 4u) + _276) >> 2u));
    uint _288 = _287.x;
    float _292 = float(int(uint(int(_288 << 16u) >> int(16u))));
    float _293 = float(int(uint(int(_288) >> int(16u))));
    uint _295 = (_178 * _173) + 12u;
    uint _316;
    uint _317;
    uint _318;
    uint _319;
    if (_183)
    {
        uvec4 _297 = texelFetch(l_geomAttrib_0, int(_295 >> 2u));
        uint _298 = _297.x;
        _316 = _298 & 255u;
        _317 = (_298 >> 8u) & 255u;
        _318 = (_298 >> 16u) & 255u;
        _319 = 20u;
    }
    else
    {
        uint _304 = _295 >> 2u;
        uvec2 _310 = uvec2(texelFetch(l_geomAttrib_0, int(_304)).x, texelFetch(l_geomAttrib_0, int(_304 + 1u)).x);
        uint _311 = _310.x;
        _316 = _311 & 65535u;
        _317 = _311 >> 16u;
        _318 = _310.y & 65535u;
        _319 = 24u;
    }
    uint _323;
    if (_218)
    {
        _323 = _319;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _319 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _319 + 8u;
        }
        _323 = frontier_phi_23_24_ladder;
    }
    uint _327 = _180 ? (_323 + 4u) : _323;
    uint _328 = _178 * _173;
    uvec4 _338 = texelFetch(l_geomAttrib_0, int(((_328 + 4u) + _327) >> 2u));
    uint _339 = _338.x;
    float _343 = float(int(uint(int(_339 << 16u) >> int(16u))));
    float _344 = float(int(uint(int(_339) >> int(16u))));
    bool _346 = _129.z == 0u;
    float _382;
    float _383;
    float _384;
    if (_346)
    {
        uint _349 = _170 * 3u;
        uvec3 _358 = uvec3(texelFetch(l_geomPositionBuffer, int(_349)).x, texelFetch(l_geomPositionBuffer, int(_349 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_349 + 2u)).x);
        _382 = uintBitsToFloat(_358.x);
        _383 = uintBitsToFloat(_358.y);
        _384 = uintBitsToFloat(_358.z);
    }
    else
    {
        uint _366 = _170 * 2u;
        uvec2 _372 = uvec2(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x);
        uint _373 = _372.x;
        _382 = unpackHalf2x16(_373).x;
        _383 = unpackHalf2x16(_373 >> 16u).x;
        _384 = unpackHalf2x16(_372.y).x;
    }
    float _420;
    float _421;
    float _422;
    if (_346)
    {
        uint _387 = _172 * 3u;
        uvec3 _396 = uvec3(texelFetch(l_geomPositionBuffer, int(_387)).x, texelFetch(l_geomPositionBuffer, int(_387 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_387 + 2u)).x);
        _420 = uintBitsToFloat(_396.x);
        _421 = uintBitsToFloat(_396.y);
        _422 = uintBitsToFloat(_396.z);
    }
    else
    {
        uint _404 = _172 * 2u;
        uvec2 _410 = uvec2(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x);
        uint _411 = _410.x;
        _420 = unpackHalf2x16(_411).x;
        _421 = unpackHalf2x16(_411 >> 16u).x;
        _422 = unpackHalf2x16(_410.y).x;
    }
    float _458;
    float _459;
    float _460;
    if (_346)
    {
        uint _425 = _173 * 3u;
        uvec3 _434 = uvec3(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_425 + 2u)).x);
        _458 = uintBitsToFloat(_434.x);
        _459 = uintBitsToFloat(_434.y);
        _460 = uintBitsToFloat(_434.z);
    }
    else
    {
        uint _442 = _173 * 2u;
        uvec2 _448 = uvec2(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x);
        uint _449 = _448.x;
        _458 = unpackHalf2x16(_449).x;
        _459 = unpackHalf2x16(_449 >> 16u).x;
        _460 = unpackHalf2x16(_448.y).x;
    }
    float _463 = (1.0 - hit._m0.x) - hit._m0.y;
    float _478 = (((float(texelFetch(l_geomAttrib_0, int((_276 + _277) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_224 + _225) >> 2u)).x >> 24u) * _463)) + (float(texelFetch(l_geomAttrib_0, int((_327 + _328) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _492 = (_292 - _241) * 0.00048828125;
    float _494 = (_293 - _242) * 0.00048828125;
    float _497 = (_343 - _241) * 0.00048828125;
    float _498 = (_344 - _242) * 0.00048828125;
    float _520 = _420 - _382;
    float _521 = _421 - _383;
    float _522 = _422 - _384;
    float _525 = fma(_522, gl_ObjectToWorldEXT[2u].x, fma(_521, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _520));
    float _528 = fma(_522, gl_ObjectToWorldEXT[2u].y, fma(_521, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _520));
    float _531 = fma(_522, gl_ObjectToWorldEXT[2u].z, fma(_521, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _520));
    float _532 = _458 - _382;
    float _533 = _459 - _383;
    float _534 = _460 - _384;
    float _537 = fma(_534, gl_ObjectToWorldEXT[2u].x, fma(_533, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _532));
    float _540 = fma(_534, gl_ObjectToWorldEXT[2u].y, fma(_533, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _532));
    float _543 = fma(_534, gl_ObjectToWorldEXT[2u].z, fma(_533, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _532));
    float _544 = (((_292 * hit._m0.x) + (_241 * _463)) + (_343 * hit._m0.y)) * 0.00048828125;
    float _545 = (((_293 * hit._m0.x) + (_242 * _463)) + (_344 * hit._m0.y)) * 0.00048828125;
    float _549 = (((float(_209) * _463) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_316) * hit._m0.y);
    float _552 = (((float(_210) * _463) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_317) * hit._m0.y);
    float _555 = (((float(_211) * _463) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_318) * hit._m0.y);
    float _556 = _549 * 0.0078740157186985015869140625;
    float _558 = _552 * 0.0078740157186985015869140625;
    float _559 = _555 * 0.0078740157186985015869140625;
    uvec2 _588 = uvec2(textureSize(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_0, int(0u)));
    bool _593 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _646;
    if (_593)
    {
        float _604 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _610 = (_543 * _528) - (_540 * _531);
        float _613 = (_537 * _531) - (_543 * _525);
        float _616 = (_540 * _525) - (_537 * _528);
        float _643 = ((log2((((float(_588.y) * 0.5) * float(_588.x)) * abs((_498 * _492) - (_497 * _494))) / (sqrt(((_613 * _613) + (_616 * _616)) + (_610 * _610)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_604 * gl_WorldRayDirectionEXT.x, _604 * gl_WorldRayDirectionEXT.y, _604 * gl_WorldRayDirectionEXT.z), vec3(_556, _558, _559))));
        _646 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    }
    else
    {
        _646 = 0.0;
    }
    vec4 _650 = textureLod(sampler2D(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) + _544) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + _545) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _646);
    float _655 = _650.x * cbMtdParam._m0[9u].x;
    float _656 = _650.y * cbMtdParam._m0[9u].y;
    float _657 = _650.z * cbMtdParam._m0[9u].z;
    float _670 = inversesqrt(dot(vec3(_556, _558, _559), vec3(_556, _558, _559)));
    float _671 = _670 * _556;
    float _672 = _670 * _558;
    float _673 = _670 * _559;
    float _678 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_671, _672, _673, 0.0)) - cbMtdParam._m0[12u].x;
    float _1344 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _685 = exp2(log2(1.0 - (isnan(1.0) ? _1344 : (isnan(_1344) ? 1.0 : min(_1344, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].y : (isnan(cbMtdParam._m0[12u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].y, 0.001000000047497451305389404296875))));
    uvec2 _712 = uvec2(textureSize(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_1, int(0u)));
    float _763;
    if (_593)
    {
        float _723 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _729 = (_543 * _528) - (_540 * _531);
        float _732 = (_537 * _531) - (_543 * _525);
        float _735 = (_540 * _525) - (_537 * _528);
        float _761 = ((log2((((float(_712.y) * 0.5) * float(_712.x)) * abs((_498 * _492) - (_497 * _494))) / (sqrt(((_732 * _732) + (_735 * _735)) + (_729 * _729)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_723 * gl_WorldRayDirectionEXT.x, _723 * gl_WorldRayDirectionEXT.y, _723 * gl_WorldRayDirectionEXT.z), vec3(_556, _558, _559))));
        _763 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    }
    else
    {
        _763 = 0.0;
    }
    vec4 _765 = textureLod(sampler2D(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x) + _544) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) + _545) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _763);
    uvec2 _787 = uvec2(textureSize(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_2, int(0u)));
    float _838;
    if (_593)
    {
        float _798 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _804 = (_543 * _528) - (_540 * _531);
        float _807 = (_537 * _531) - (_543 * _525);
        float _810 = (_540 * _525) - (_537 * _528);
        float _836 = ((log2((((float(_787.y) * 0.5) * float(_787.x)) * abs((_498 * _492) - (_497 * _494))) / (sqrt(((_807 * _807) + (_810 * _810)) + (_804 * _804)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_798 * gl_WorldRayDirectionEXT.x, _798 * gl_WorldRayDirectionEXT.y, _798 * gl_WorldRayDirectionEXT.z), vec3(_556, _558, _559))));
        _838 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    }
    else
    {
        _838 = 0.0;
    }
    vec4 _840 = textureLod(sampler2D(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + _544) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) + _545) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _838);
    uvec2 _865 = uvec2(textureSize(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_3, int(0u)));
    float _869 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _870 = _869 * gl_WorldRayDirectionEXT.x;
    float _871 = _869 * gl_WorldRayDirectionEXT.y;
    float _872 = _869 * gl_WorldRayDirectionEXT.z;
    float _916;
    if (_593)
    {
        float _882 = (_543 * _528) - (_540 * _531);
        float _885 = (_537 * _531) - (_543 * _525);
        float _888 = (_540 * _525) - (_537 * _528);
        float _914 = ((log2((((float(_865.y) * 0.5) * float(_865.x)) * abs((_498 * _492) - (_497 * _494))) / (sqrt(((_885 * _885) + (_888 * _888)) + (_882 * _882)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_870, _871, _872), vec3(_556, _558, _559))));
        _916 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    }
    else
    {
        _916 = 0.0;
    }
    vec4 _918 = textureLod(sampler2D(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _544) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _545) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _916);
    float _946 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _947 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _948 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _949 = (-0.0) - _870;
    float _951 = (-0.0) - _871;
    float _952 = (-0.0) - _872;
    float _958 = float(gl_LaunchIDEXT.x);
    float _959 = float(gl_LaunchIDEXT.y);
    float _962 = float(gl_LaunchSizeEXT.x);
    float _976 = fract(fract(sin(dot(vec2(_958 / _962, _959 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _989 = fract(fract(sin(dot(vec2((_958 + 128.0) / _962, (_959 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _999 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1000 = _999.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1000, _999.w, _1000, vec3(_946, _947, _948), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1080;
    float _1081;
    float _1082;
    float _1083;
    float _1084;
    float _1085;
    if (_67._m0 == 0u)
    {
        float _1021 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_671, _672, _673));
        float _1375 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1024 = isnan(1.0) ? _1375 : (isnan(_1375) ? 1.0 : min(_1375, 1.0));
        float _1035 = g_sceneCB._m0[4u].x - _870;
        float _1036 = g_sceneCB._m0[4u].y - _871;
        float _1037 = g_sceneCB._m0[4u].z - _872;
        float _1041 = inversesqrt(dot(vec3(_1035, _1036, _1037), vec3(_1035, _1036, _1037)));
        float _1045 = dot(vec3(_671, _672, _673), vec3(g_sceneCB._m0[4u].xyz));
        float _1386 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
        float _1048 = isnan(1.0) ? _1386 : (isnan(_1386) ? 1.0 : min(_1386, 1.0));
        float _1049 = dot(vec3(_671, _672, _673), vec3(_949, _951, _952));
        float _1397 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1053 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1035 * _1041, _1036 * _1041, _1037 * _1041));
        float _1408 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
        float _1064 = (exp2(log2(1.0 - (isnan(1.0) ? _1408 : (isnan(_1408) ? 1.0 : min(_1408, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1070 = (0.5 / ((_1048 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1397 : (isnan(_1397) ? 1.0 : min(_1397, 1.0))))) * _1048;
        float _1419 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1072 = (isnan(1.0) ? _1419 : (isnan(_1419) ? 1.0 : min(_1419, 1.0))) * 0.31831014156341552734375;
        _1080 = ((_655 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1024;
        _1081 = ((_656 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1024;
        _1082 = ((_657 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1024;
        _1083 = (_1064 * g_sceneCB._m0[5u].x) * _1072;
        _1084 = (_1064 * g_sceneCB._m0[5u].y) * _1072;
        _1085 = (_1064 * g_sceneCB._m0[5u].z) * _1072;
    }
    else
    {
        _1080 = 0.0;
        _1081 = 0.0;
        _1082 = 0.0;
        _1083 = 0.0;
        _1084 = 0.0;
        _1085 = 0.0;
    }
    bool _1087 = abs(_672) < 0.89999997615814208984375;
    float _1089 = float(_1087);
    float _1090 = _1087 ? 0.0 : 1.0;
    float _1093 = (_1089 * _673) - (_1090 * _672);
    float _1094 = _1090 * _671;
    float _1096 = (-0.0) - (_671 * _1089);
    float _1100 = inversesqrt(dot(vec3(_1093, _1094, _1096), vec3(_1093, _1094, _1096)));
    float _1101 = _1093 * _1100;
    float _1102 = _1094 * _1100;
    float _1103 = _1100 * _1096;
    float _1106 = (_1102 * _673) - (_1103 * _672);
    float _1109 = (_1103 * _671) - (_1101 * _673);
    float _1112 = (_1101 * _672) - (_1102 * _671);
    float _1114;
    float _1122;
    float _1113 = 0.0;
    uint _1115 = 0u;
    float _1119;
    bool _1121;
    for (;;)
    {
        _1119 = (float(_1115) + _976) * 0.03125;
        _1121 = _1115 == 0u;
        float frontier_phi_47_pred;
        if (_1121)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1264;
            float _1265;
            uint _1267;
            _1264 = 0.0;
            _1265 = 0.5;
            _1267 = _1115;
            float _1123;
            for (;;)
            {
                _1123 = ((_1267 & 1u) != 0u) ? (_1265 + _1264) : _1264;
                uint _1268 = _1267 >> 1u;
                if (_1268 == 0u)
                {
                    break;
                }
                else
                {
                    _1264 = _1123;
                    _1265 *= 0.5;
                    _1267 = _1268;
                }
            }
            frontier_phi_47_pred = _1123;
        }
        _1122 = frontier_phi_47_pred;
        float _1124 = _1122 + _989;
        float _1129 = sqrt(_1119);
        float _1130 = ((_1124 > 1.0) ? (_1124 + (-1.0)) : _1124) * 6.283185482025146484375;
        float _1133 = cos(_1130) * _1129;
        float _1135 = sin(_1130) * _1129;
        float _1137 = sqrt(1.0 - _1119);
        float _1150 = ((_1137 * _671) + (_1133 * _1106)) + (_1135 * _1101);
        float _1151 = ((_1137 * _672) + (_1133 * _1109)) + (_1135 * _1102);
        float _1152 = ((_1137 * _673) + (_1133 * _1112)) + (_1135 * _1103);
        _66._m0 = 1u;
        uvec4 _1156 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1157 = _1156.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1157, _1156.w, _1157, vec3(_946, _947, _948), 9.9999997473787516355514526367188e-05, vec3(_1150, _1151, _1152), 10000.0, 1);
        float _1163 = dot(vec3(_671, _672, _673), vec3(_1150, _1151, _1152));
        float _1430 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1166 = isnan(1.0) ? _1430 : (isnan(_1430) ? 1.0 : min(_1430, 1.0));
        _1114 = ((float(_66._m0 == 0u) * _1166) / (_1166 * 0.3183098733425140380859375)) + _1113;
        uint _1116 = _1115 + 1u;
        if (_1116 == 32u)
        {
            break;
        }
        else
        {
            _1113 = _1114;
            _1115 = _1116;
            continue;
        }
    }
    float _1174 = _1114 * 0.009947183541953563690185546875;
    float _1179 = dot(vec3(_870, _871, _872), vec3(_671, _672, _673)) * 2.0;
    vec4 _1191 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_870 - (_1179 * _671), _871 - (_1179 * _672), _872 - (_1179 * _673)), 4.0);
    float _1196 = dot(vec3(_949, _951, _952), vec3(_671, _672, _673));
    float _1441 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1205 = (exp2(log2(1.0 - (isnan(1.0) ? _1441 : (isnan(_1441) ? 1.0 : min(_1441, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1211 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_671, _672, _673), 0.0);
    float _1225 = ((_1083 + _1080) + (((_1211.x * _655) + (_1205 * _1191.x)) * _1174)) + (((((_840.x + _765.x) + _918.x) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[10u].x * _478) * _685)) * cbMtdParam._m0[12u].z);
    float _1232 = ((_1084 + _1081) + (((_1211.y * _656) + (_1205 * _1191.y)) * _1174)) + (((cbMtdParam._m0[11u].y * ((_840.y + _765.y) + _918.y)) + ((cbMtdParam._m0[10u].y * _478) * _685)) * cbMtdParam._m0[12u].z);
    float _1239 = ((_1085 + _1082) + (((_1211.z * _657) + (_1205 * _1191.z)) * _1174)) + (((cbMtdParam._m0[11u].z * ((_840.z + _765.z) + _918.z)) + ((cbMtdParam._m0[10u].z * _478) * _685)) * cbMtdParam._m0[12u].z);
    float _1452 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1463 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
    float _1474 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    bool _1247 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1258;
    _1258.x = _1247 ? ((_549 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1452 : (isnan(_1452) ? 1.0 : min(_1452, 1.0)));
    _1258.y = _1247 ? ((_552 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1463 : (isnan(_1463) ? 1.0 : min(_1463, 1.0)));
    _1258.z = _1247 ? ((_555 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1474 : (isnan(_1474) ? 1.0 : min(_1474, 1.0)));
    payload._m0 = _1258;
}


