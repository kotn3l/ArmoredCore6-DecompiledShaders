#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1324;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _162;
    uint _164;
    uint _165;
    if (_121.x == 0u)
    {
        uint _130 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _139 = uvec3(texelFetch(l_geomIndexBuffer, int(_130)).x, texelFetch(l_geomIndexBuffer, int(_130 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_130 + 2u)).x);
        _162 = _139.x;
        _164 = _139.y;
        _165 = _139.z;
    }
    else
    {
        uint _143 = uint(gl_PrimitiveID) * 6u;
        uint _145 = _143 & 4294967292u;
        uint _148 = (_122 + _145) >> 2u;
        uvec2 _155 = uvec2(texelFetch(l_geomIndexBuffer, int(_148)).x, texelFetch(l_geomIndexBuffer, int(_148 + 1u)).x);
        uint _156 = _155.x;
        uint _157 = _155.y;
        uint _159 = _156 >> 16u;
        uint _160 = _157 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_145 == _143)
        {
            frontier_phi_3_2_ladder = _156 & 65535u;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _159;
        }
        else
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _157 >> 16u;
            frontier_phi_3_2_ladder_2 = _160;
        }
        _162 = frontier_phi_3_2_ladder;
        _164 = frontier_phi_3_2_ladder_2;
        _165 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _169 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _170 = _169.x;
    uint _171 = _169.z;
    bool _172 = _171 != 0u;
    bool _174 = _121.w == 0u;
    bool _175 = _172 || _174;
    uint _176 = _170 * _162;
    uint _177 = _176 + 12u;
    uint _201;
    uint _202;
    uint _203;
    uint _204;
    if (_175)
    {
        uvec4 _180 = texelFetch(l_geomAttrib_0, int(_177 >> 2u));
        uint _181 = _180.x;
        _201 = _181 & 255u;
        _202 = (_181 >> 8u) & 255u;
        _203 = (_181 >> 16u) & 255u;
        _204 = 16u;
    }
    else
    {
        uint _189 = _177 >> 2u;
        uvec2 _195 = uvec2(texelFetch(l_geomAttrib_0, int(_189)).x, texelFetch(l_geomAttrib_0, int(_189 + 1u)).x);
        uint _196 = _195.x;
        _201 = _196 & 65535u;
        _202 = _196 >> 16u;
        _203 = _195.y & 65535u;
        _204 = 20u;
    }
    uvec4 _212 = texelFetch(l_geomAttrib_0, int((_204 + _176) >> 2u));
    uint _213 = _212.x;
    bool _227 = _171 == 0u;
    uint _228;
    if (_227)
    {
        _228 = _204 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_174)
        {
            frontier_phi_9_10_ladder = _204 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _204 + 12u;
        }
        _228 = frontier_phi_9_10_ladder;
    }
    uvec4 _236 = texelFetch(l_geomAttrib_0, int(((_176 + 4u) + (_172 ? (_228 + 4u) : _228)) >> 2u));
    uint _237 = _236.x;
    float _241 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _242 = float(int(uint(int(_237) >> int(16u))));
    uint _243 = _170 * _164;
    uint _244 = _243 + 12u;
    uint _265;
    uint _266;
    uint _267;
    uint _268;
    if (_175)
    {
        uvec4 _246 = texelFetch(l_geomAttrib_0, int(_244 >> 2u));
        uint _247 = _246.x;
        _265 = _247 & 255u;
        _266 = (_247 >> 8u) & 255u;
        _267 = (_247 >> 16u) & 255u;
        _268 = 16u;
    }
    else
    {
        uint _253 = _244 >> 2u;
        uvec2 _259 = uvec2(texelFetch(l_geomAttrib_0, int(_253)).x, texelFetch(l_geomAttrib_0, int(_253 + 1u)).x);
        uint _260 = _259.x;
        _265 = _260 & 65535u;
        _266 = _260 >> 16u;
        _267 = _259.y & 65535u;
        _268 = 20u;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((_268 + _243) >> 2u));
    uint _275 = _274.x;
    uint _287;
    if (_227)
    {
        _287 = _268 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_174)
        {
            frontier_phi_16_17_ladder = _268 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _268 + 12u;
        }
        _287 = frontier_phi_16_17_ladder;
    }
    uvec4 _295 = texelFetch(l_geomAttrib_0, int(((_243 + 4u) + (_172 ? (_287 + 4u) : _287)) >> 2u));
    uint _296 = _295.x;
    float _300 = float(int(uint(int(_296 << 16u) >> int(16u))));
    float _301 = float(int(uint(int(_296) >> int(16u))));
    uint _302 = _170 * _165;
    uint _303 = _302 + 12u;
    uint _324;
    uint _325;
    uint _326;
    uint _327;
    if (_175)
    {
        uvec4 _305 = texelFetch(l_geomAttrib_0, int(_303 >> 2u));
        uint _306 = _305.x;
        _324 = _306 & 255u;
        _325 = (_306 >> 8u) & 255u;
        _326 = (_306 >> 16u) & 255u;
        _327 = 16u;
    }
    else
    {
        uint _312 = _303 >> 2u;
        uvec2 _318 = uvec2(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x);
        uint _319 = _318.x;
        _324 = _319 & 65535u;
        _325 = _319 >> 16u;
        _326 = _318.y & 65535u;
        _327 = 20u;
    }
    uvec4 _333 = texelFetch(l_geomAttrib_0, int((_327 + _302) >> 2u));
    uint _334 = _333.x;
    uint _346;
    if (_227)
    {
        _346 = _327 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_174)
        {
            frontier_phi_23_24_ladder = _327 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _327 + 12u;
        }
        _346 = frontier_phi_23_24_ladder;
    }
    uvec4 _354 = texelFetch(l_geomAttrib_0, int(((_302 + 4u) + (_172 ? (_346 + 4u) : _346)) >> 2u));
    uint _355 = _354.x;
    float _359 = float(int(uint(int(_355 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_355) >> int(16u))));
    bool _362 = _121.z == 0u;
    float _398;
    float _399;
    float _400;
    if (_362)
    {
        uint _365 = _162 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _162 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_362)
    {
        uint _403 = _164 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _164 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_362)
    {
        uint _441 = _165 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _165 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _479 = (1.0 - hit._m0.x) - hit._m0.y;
    float _513 = (_300 - _241) * 0.00048828125;
    float _515 = (_301 - _242) * 0.00048828125;
    float _518 = (_359 - _241) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _541 = _436 - _398;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _546 = fma(_543, gl_ObjectToWorldEXT[2u].x, fma(_542, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _541));
    float _549 = fma(_543, gl_ObjectToWorldEXT[2u].y, fma(_542, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _541));
    float _552 = fma(_543, gl_ObjectToWorldEXT[2u].z, fma(_542, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _541));
    float _553 = _474 - _398;
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _558 = fma(_555, gl_ObjectToWorldEXT[2u].x, fma(_554, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _553));
    float _561 = fma(_555, gl_ObjectToWorldEXT[2u].y, fma(_554, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _553));
    float _564 = fma(_555, gl_ObjectToWorldEXT[2u].z, fma(_554, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _553));
    float _565 = (((_300 * hit._m0.x) + (_241 * _479)) + (_359 * hit._m0.y)) * 0.00048828125;
    float _566 = (((_301 * hit._m0.x) + (_242 * _479)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _570 = (((float(_201) * _479) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _573 = (((float(_202) * _479) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _576 = (((float(_203) * _479) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = _570 * 0.0078740157186985015869140625;
    float _579 = _573 * 0.0078740157186985015869140625;
    float _580 = _576 * 0.0078740157186985015869140625;
    float _593 = ((((float(_213 & 255u) * _479) + (-127.0)) + (float(_275 & 255u) * hit._m0.x)) + (float(_334 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float((_213 >> 8u) & 255u) * _479) + (-127.0)) + (float((_275 >> 8u) & 255u) * hit._m0.x)) + (float((_334 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_213 >> 16u) & 255u) * _479) + (-127.0)) + (float((_275 >> 16u) & 255u) * hit._m0.x)) + (float((_334 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float(_213 >> 24u) * _479) + (-127.0)) + (float(_275 >> 24u) * hit._m0.x)) + (float(_334 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((_594 * _580) - (_595 * _579)) * _596;
    float _607 = ((_595 * _577) - (_593 * _580)) * _596;
    float _608 = ((_593 * _579) - (_594 * _577)) * _596;
    float _612 = inversesqrt(dot(vec3(_606, _607, _608), vec3(_606, _607, _608)));
    uvec2 _633 = uvec2(textureSize(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_1, int(0u)));
    bool _638 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _691;
    if (_638)
    {
        float _649 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _655 = (_564 * _549) - (_561 * _552);
        float _658 = (_558 * _552) - (_564 * _546);
        float _661 = (_561 * _546) - (_558 * _549);
        float _688 = ((log2((((float(_633.y) * 0.5) * float(_633.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_658 * _658) + (_661 * _661)) + (_655 * _655)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_649 * gl_WorldRayDirectionEXT.x, _649 * gl_WorldRayDirectionEXT.y, _649 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _691 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    }
    else
    {
        _691 = 0.0;
    }
    vec4 _695 = textureLod(sampler2D(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _565) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _566) + cbTextureTilingScale._m0[0u].w), _691);
    uvec2 _717 = uvec2(textureSize(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_13, int(0u)));
    float _768;
    if (_638)
    {
        float _728 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _734 = (_564 * _549) - (_561 * _552);
        float _737 = (_558 * _552) - (_564 * _546);
        float _740 = (_561 * _546) - (_558 * _549);
        float _766 = ((log2((((float(_717.y) * 0.5) * float(_717.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_737 * _737) + (_740 * _740)) + (_734 * _734)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_728 * gl_WorldRayDirectionEXT.x, _728 * gl_WorldRayDirectionEXT.y, _728 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _768 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    }
    else
    {
        _768 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _565) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _566) + cbTextureTilingScale._m0[2u].w), _768);
    float _779 = (((cbMtdParam._m0[10u].x * 4.55000019073486328125) * _695.x) * cbMtdParam._m0[9u].x) * _770.x;
    float _783 = (((cbMtdParam._m0[10u].y * 4.55000019073486328125) * _695.y) * cbMtdParam._m0[9u].y) * _770.y;
    float _787 = (((cbMtdParam._m0[10u].z * 4.55000019073486328125) * _695.z) * cbMtdParam._m0[9u].z) * _770.z;
    uvec2 _803 = uvec2(textureSize(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_5, int(0u)));
    float _854;
    if (_638)
    {
        float _814 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _820 = (_564 * _549) - (_561 * _552);
        float _823 = (_558 * _552) - (_564 * _546);
        float _826 = (_561 * _546) - (_558 * _549);
        float _852 = ((log2((((float(_803.y) * 0.5) * float(_803.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_823 * _823) + (_826 * _826)) + (_820 * _820)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_814 * gl_WorldRayDirectionEXT.x, _814 * gl_WorldRayDirectionEXT.y, _814 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _854 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    }
    else
    {
        _854 = 0.0;
    }
    vec4 _857 = textureLod(sampler2D(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _565) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _566) + cbTextureTilingScale._m0[6u].w), _854);
    float _861 = _857.z;
    uvec2 _873 = uvec2(textureSize(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_7, int(0u)));
    float _877 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _878 = _877 * gl_WorldRayDirectionEXT.x;
    float _879 = _877 * gl_WorldRayDirectionEXT.y;
    float _880 = _877 * gl_WorldRayDirectionEXT.z;
    float _924;
    if (_638)
    {
        float _890 = (_564 * _549) - (_561 * _552);
        float _893 = (_558 * _552) - (_564 * _546);
        float _896 = (_561 * _546) - (_558 * _549);
        float _922 = ((log2((((float(_873.y) * 0.5) * float(_873.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_893 * _893) + (_896 * _896)) + (_890 * _890)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_878, _879, _880), vec3(_577, _579, _580))));
        _924 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    }
    else
    {
        _924 = 0.0;
    }
    vec4 _926 = textureLod(sampler2D(C_AMSN_M1_Detail_DM1_OvA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _565) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _566) + cbTextureTilingScale._m0[7u].w), _924);
    float _939 = cbMtdParam._m0[13u].w * _861;
    float _942 = (((((_861 * 2.0) * _926.z) * cbMtdParam._m0[14u].x) - _939) * cbMtdParam._m0[13u].y) + _939;
    float _946 = (_857.x * 2.0) + (-1.0);
    float _948 = (_857.y * 2.0) + (-1.0);
    float _949 = dot(vec2(_946, _948), vec2(_946, _948));
    float _1424 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _954 = sqrt(1.0 - (isnan(1.0) ? _1424 : (isnan(_1424) ? 1.0 : min(_1424, 1.0))));
    float _961 = (cbMtdParam._m0[13u].x * ((_926.x * 2.0) + (-1.0))) + _946;
    float _962 = (cbMtdParam._m0[13u].x * ((_926.y * 2.0) + (-1.0))) + _948;
    float _965 = fma(_954, _577, fma(_962, _593, (_612 * _606) * _961));
    float _968 = fma(_954, _579, fma(_962, _594, (_612 * _607) * _961));
    float _971 = fma(_954, _580, fma(_962, _595, (_612 * _608) * _961));
    float _975 = inversesqrt(dot(vec3(_965, _968, _971), vec3(_965, _968, _971)));
    float _976 = _975 * _965;
    float _977 = _975 * _968;
    float _978 = _975 * _971;
    float _990 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _991 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _992 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _993 = (-0.0) - _878;
    float _995 = (-0.0) - _879;
    float _996 = (-0.0) - _880;
    float _1002 = float(gl_LaunchIDEXT.x);
    float _1003 = float(gl_LaunchIDEXT.y);
    float _1006 = float(gl_LaunchSizeEXT.x);
    float _1020 = fract(fract(sin(dot(vec2(_1002 / _1006, _1003 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1033 = fract(fract(sin(dot(vec2((_1002 + 128.0) / _1006, (_1003 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _1043 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1044 = _1043.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1044, _1043.w, _1044, vec3(_990, _991, _992), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    float _1158;
    if (_63._m0 == 0u)
    {
        float _1065 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_976, _977, _978));
        float _1435 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1068 = isnan(1.0) ? _1435 : (isnan(_1435) ? 1.0 : min(_1435, 1.0));
        float _1087 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _942) * 0.949999988079071044921875);
        float _1088 = _1087 * _1087;
        float _1089 = g_sceneCB._m0[4u].x - _878;
        float _1090 = g_sceneCB._m0[4u].y - _879;
        float _1091 = g_sceneCB._m0[4u].z - _880;
        float _1095 = inversesqrt(dot(vec3(_1089, _1090, _1091), vec3(_1089, _1090, _1091)));
        float _1096 = _1095 * _1089;
        float _1097 = _1095 * _1090;
        float _1098 = _1095 * _1091;
        float _1099 = dot(vec3(_976, _977, _978), vec3(g_sceneCB._m0[4u].xyz));
        float _1446 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1102 = isnan(1.0) ? _1446 : (isnan(_1446) ? 1.0 : min(_1446, 1.0));
        float _1103 = dot(vec3(_976, _977, _978), vec3(_993, _995, _996));
        float _1457 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1106 = isnan(1.0) ? _1457 : (isnan(_1457) ? 1.0 : min(_1457, 1.0));
        float _1107 = dot(vec3(_976, _977, _978), vec3(_1096, _1097, _1098));
        float _1468 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1110 = isnan(1.0) ? _1468 : (isnan(_1468) ? 1.0 : min(_1468, 1.0));
        float _1111 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1096, _1097, _1098));
        float _1479 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1115 = _1088 * _1088;
        float _1119 = ((_1110 * _1110) * (_1115 + (-1.0))) + 1.0;
        float _1131 = (exp2(log2(1.0 - (isnan(1.0) ? _1479 : (isnan(_1479) ? 1.0 : min(_1479, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1133 = 1.0 - _1088;
        float _1144 = (0.5 / (((_1106 * ((_1102 * _1133) + _1088)) + 9.9999999392252902907785028219223e-09) + (((_1106 * _1133) + _1088) * _1102))) * _1102;
        float _1490 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1146 = (isnan(1.0) ? _1490 : (isnan(_1490) ? 1.0 : min(_1490, 1.0))) * (_1115 / ((_1119 * _1119) * 3.141590118408203125));
        _1153 = ((_779 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1068;
        _1154 = ((_783 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1068;
        _1155 = ((_787 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1068;
        _1156 = (_1131 * g_sceneCB._m0[5u].x) * _1146;
        _1157 = (_1131 * g_sceneCB._m0[5u].y) * _1146;
        _1158 = (_1131 * g_sceneCB._m0[5u].z) * _1146;
    }
    else
    {
        _1153 = 0.0;
        _1154 = 0.0;
        _1155 = 0.0;
        _1156 = 0.0;
        _1157 = 0.0;
        _1158 = 0.0;
    }
    bool _1160 = abs(_977) < 0.89999997615814208984375;
    float _1162 = float(_1160);
    float _1163 = _1160 ? 0.0 : 1.0;
    float _1166 = (_1162 * _978) - (_1163 * _977);
    float _1167 = _1163 * _976;
    float _1169 = (-0.0) - (_976 * _1162);
    float _1173 = inversesqrt(dot(vec3(_1166, _1167, _1169), vec3(_1166, _1167, _1169)));
    float _1174 = _1166 * _1173;
    float _1175 = _1167 * _1173;
    float _1176 = _1173 * _1169;
    float _1179 = (_1175 * _978) - (_1176 * _977);
    float _1182 = (_1176 * _976) - (_1174 * _978);
    float _1185 = (_1174 * _977) - (_1175 * _976);
    float _1187;
    float _1195;
    float _1186 = 0.0;
    uint _1188 = 0u;
    float _1192;
    bool _1194;
    for (;;)
    {
        _1192 = (float(_1188) + _1020) * 0.03125;
        _1194 = _1188 == 0u;
        float frontier_phi_47_pred;
        if (_1194)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1329;
            float _1330;
            uint _1332;
            _1329 = 0.0;
            _1330 = 0.5;
            _1332 = _1188;
            float _1196;
            for (;;)
            {
                _1196 = ((_1332 & 1u) != 0u) ? (_1330 + _1329) : _1329;
                uint _1333 = _1332 >> 1u;
                if (_1333 == 0u)
                {
                    break;
                }
                else
                {
                    _1329 = _1196;
                    _1330 *= 0.5;
                    _1332 = _1333;
                }
            }
            frontier_phi_47_pred = _1196;
        }
        _1195 = frontier_phi_47_pred;
        float _1197 = _1195 + _1033;
        float _1201 = sqrt(_1192);
        float _1202 = ((_1197 > 1.0) ? (_1197 + (-1.0)) : _1197) * 6.283185482025146484375;
        float _1205 = cos(_1202) * _1201;
        float _1207 = sin(_1202) * _1201;
        float _1209 = sqrt(1.0 - _1192);
        float _1222 = ((_1209 * _976) + (_1205 * _1179)) + (_1207 * _1174);
        float _1223 = ((_1209 * _977) + (_1205 * _1182)) + (_1207 * _1175);
        float _1224 = ((_1209 * _978) + (_1205 * _1185)) + (_1207 * _1176);
        _62._m0 = 1u;
        uvec4 _1228 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1229 = _1228.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1229, _1228.w, _1229, vec3(_990, _991, _992), 9.9999997473787516355514526367188e-05, vec3(_1222, _1223, _1224), 10000.0, 1);
        float _1235 = dot(vec3(_976, _977, _978), vec3(_1222, _1223, _1224));
        float _1501 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1238 = isnan(1.0) ? _1501 : (isnan(_1501) ? 1.0 : min(_1501, 1.0));
        _1187 = ((float(_62._m0 == 0u) * _1238) / (_1238 * 0.3183098733425140380859375)) + _1186;
        uint _1189 = _1188 + 1u;
        if (_1189 == 32u)
        {
            break;
        }
        else
        {
            _1186 = _1187;
            _1188 = _1189;
            continue;
        }
    }
    float _1246 = _1187 * 0.009947183541953563690185546875;
    float _1251 = dot(vec3(_878, _879, _880), vec3(_976, _977, _978)) * 2.0;
    vec4 _1265 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_878 - (_1251 * _976), _879 - (_1251 * _977), _880 - (_1251 * _978)), 4.0 - (_942 * 4.0));
    float _1270 = dot(vec3(_993, _995, _996), vec3(_976, _977, _978));
    float _1512 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
    float _1279 = (exp2(log2(1.0 - (isnan(1.0) ? _1512 : (isnan(_1512) ? 1.0 : min(_1512, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1285 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_976, _977, _978), 0.0);
    float _1296 = (_1156 + _1153) + (((_1285.x * _779) + (_1279 * _1265.x)) * _1246);
    float _1300 = (_1157 + _1154) + (((_1285.y * _783) + (_1279 * _1265.y)) * _1246);
    float _1304 = (_1158 + _1155) + (((_1285.z * _787) + (_1279 * _1265.z)) * _1246);
    float _1523 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    float _1534 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
    float _1545 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
    bool _1312 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1323;
    _1323.x = _1312 ? ((_570 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1523 : (isnan(_1523) ? 1.0 : min(_1523, 1.0)));
    _1323.y = _1312 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1534 : (isnan(_1534) ? 1.0 : min(_1534, 1.0)));
    _1323.z = _1312 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1545 : (isnan(_1545) ? 1.0 : min(_1545, 1.0)));
    payload._m0 = _1323;
}


