#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Detail4Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail4Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail4Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail4Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail4Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail4Blend_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail4Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail4Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail4Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail4Blend_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1864;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    uint _180 = _128.w;
    bool _182 = _179 || (_180 == 0u);
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _220 = _219.x;
    uint _232 = _176.y;
    bool _233 = _178 == 0u;
    uint _236 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _245 = texelFetch(l_geomAttrib_1, int((((_232 * _169) + 4u) + (_179 ? (_236 + 4u) : _236)) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uint _252 = _177 * _171;
    uint _253 = _252 + 12u;
    uint _274;
    uint _275;
    uint _276;
    uint _277;
    if (_182)
    {
        uvec4 _255 = texelFetch(l_geomAttrib_0, int(_253 >> 2u));
        uint _256 = _255.x;
        _274 = _256 & 255u;
        _275 = (_256 >> 8u) & 255u;
        _276 = (_256 >> 16u) & 255u;
        _277 = 16u;
    }
    else
    {
        uint _262 = _253 >> 2u;
        uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
        uint _269 = _268.x;
        _274 = _269 & 65535u;
        _275 = _269 >> 16u;
        _276 = _268.y & 65535u;
        _277 = 20u;
    }
    uvec4 _283 = texelFetch(l_geomAttrib_0, int((_277 + _252) >> 2u));
    uint _284 = _283.x;
    uint _297 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _304 = texelFetch(l_geomAttrib_1, int((((_232 * _171) + 4u) + (_179 ? (_297 + 4u) : _297)) >> 2u));
    uint _305 = _304.x;
    float _309 = float(int(uint(int(_305 << 16u) >> int(16u))));
    float _310 = float(int(uint(int(_305) >> int(16u))));
    uint _311 = _177 * _172;
    uint _312 = _311 + 12u;
    uint _333;
    uint _334;
    uint _335;
    uint _336;
    if (_182)
    {
        uvec4 _314 = texelFetch(l_geomAttrib_0, int(_312 >> 2u));
        uint _315 = _314.x;
        _333 = _315 & 255u;
        _334 = (_315 >> 8u) & 255u;
        _335 = (_315 >> 16u) & 255u;
        _336 = 16u;
    }
    else
    {
        uint _321 = _312 >> 2u;
        uvec2 _327 = uvec2(texelFetch(l_geomAttrib_0, int(_321)).x, texelFetch(l_geomAttrib_0, int(_321 + 1u)).x);
        uint _328 = _327.x;
        _333 = _328 & 65535u;
        _334 = _328 >> 16u;
        _335 = _327.y & 65535u;
        _336 = 20u;
    }
    uvec4 _342 = texelFetch(l_geomAttrib_0, int((_336 + _311) >> 2u));
    uint _343 = _342.x;
    uint _356 = _233 ? 4u : ((_180 != 0u) ? 12u : 8u);
    uvec4 _363 = texelFetch(l_geomAttrib_1, int((((_232 * _172) + 4u) + (_179 ? (_356 + 4u) : _356)) >> 2u));
    uint _364 = _363.x;
    float _368 = float(int(uint(int(_364 << 16u) >> int(16u))));
    float _369 = float(int(uint(int(_364) >> int(16u))));
    bool _371 = _128.z == 0u;
    float _407;
    float _408;
    float _409;
    if (_371)
    {
        uint _374 = _169 * 3u;
        uvec3 _383 = uvec3(texelFetch(l_geomPositionBuffer, int(_374)).x, texelFetch(l_geomPositionBuffer, int(_374 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_374 + 2u)).x);
        _407 = uintBitsToFloat(_383.x);
        _408 = uintBitsToFloat(_383.y);
        _409 = uintBitsToFloat(_383.z);
    }
    else
    {
        uint _391 = _169 * 2u;
        uvec2 _397 = uvec2(texelFetch(l_geomPositionBuffer, int(_391)).x, texelFetch(l_geomPositionBuffer, int(_391 + 1u)).x);
        uint _398 = _397.x;
        _407 = unpackHalf2x16(_398).x;
        _408 = unpackHalf2x16(_398 >> 16u).x;
        _409 = unpackHalf2x16(_397.y).x;
    }
    float _445;
    float _446;
    float _447;
    if (_371)
    {
        uint _412 = _171 * 3u;
        uvec3 _421 = uvec3(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_412 + 2u)).x);
        _445 = uintBitsToFloat(_421.x);
        _446 = uintBitsToFloat(_421.y);
        _447 = uintBitsToFloat(_421.z);
    }
    else
    {
        uint _429 = _171 * 2u;
        uvec2 _435 = uvec2(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x);
        uint _436 = _435.x;
        _445 = unpackHalf2x16(_436).x;
        _446 = unpackHalf2x16(_436 >> 16u).x;
        _447 = unpackHalf2x16(_435.y).x;
    }
    float _483;
    float _484;
    float _485;
    if (_371)
    {
        uint _450 = _172 * 3u;
        uvec3 _459 = uvec3(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_450 + 2u)).x);
        _483 = uintBitsToFloat(_459.x);
        _484 = uintBitsToFloat(_459.y);
        _485 = uintBitsToFloat(_459.z);
    }
    else
    {
        uint _467 = _172 * 2u;
        uvec2 _473 = uvec2(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x);
        uint _474 = _473.x;
        _483 = unpackHalf2x16(_474).x;
        _484 = unpackHalf2x16(_474 >> 16u).x;
        _485 = unpackHalf2x16(_473.y).x;
    }
    float _488 = (1.0 - hit._m0.x) - hit._m0.y;
    float _522 = (_309 - _250) * 0.00048828125;
    float _524 = (_310 - _251) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _555 = fma(_552, gl_ObjectToWorldEXT[2u].x, fma(_551, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _550));
    float _558 = fma(_552, gl_ObjectToWorldEXT[2u].y, fma(_551, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _550));
    float _561 = fma(_552, gl_ObjectToWorldEXT[2u].z, fma(_551, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _550));
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _567 = fma(_564, gl_ObjectToWorldEXT[2u].x, fma(_563, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _562));
    float _570 = fma(_564, gl_ObjectToWorldEXT[2u].y, fma(_563, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _562));
    float _573 = fma(_564, gl_ObjectToWorldEXT[2u].z, fma(_563, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _562));
    float _574 = (((_309 * hit._m0.x) + (_250 * _488)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _575 = (((_310 * hit._m0.x) + (_251 * _488)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _579 = (((float(_208) * _488) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _582 = (((float(_209) * _488) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = (((float(_210) * _488) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = _579 * 0.0078740157186985015869140625;
    float _588 = _582 * 0.0078740157186985015869140625;
    float _589 = _585 * 0.0078740157186985015869140625;
    float _602 = ((((float(_220 & 255u) * _488) + (-127.0)) + (float(_284 & 255u) * hit._m0.x)) + (float(_343 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_220 >> 8u) & 255u) * _488) + (-127.0)) + (float((_284 >> 8u) & 255u) * hit._m0.x)) + (float((_343 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_220 >> 16u) & 255u) * _488) + (-127.0)) + (float((_284 >> 16u) & 255u) * hit._m0.x)) + (float((_343 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float(_220 >> 24u) * _488) + (-127.0)) + (float(_284 >> 24u) * hit._m0.x)) + (float(_343 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _615 = ((_603 * _589) - (_604 * _588)) * _605;
    float _616 = ((_604 * _586) - (_602 * _589)) * _605;
    float _617 = ((_602 * _588) - (_603 * _586)) * _605;
    float _621 = inversesqrt(dot(vec3(_615, _616, _617), vec3(_615, _616, _617)));
    uvec2 _636 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_0, int(0u)));
    bool _641 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _694;
    if (_641)
    {
        float _652 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _658 = (_573 * _558) - (_570 * _561);
        float _661 = (_567 * _561) - (_573 * _555);
        float _664 = (_570 * _555) - (_567 * _558);
        float _691 = ((log2((((float(_636.y) * 0.5) * float(_636.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_661 * _661) + (_664 * _664)) + (_658 * _658)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_652 * gl_WorldRayDirectionEXT.x, _652 * gl_WorldRayDirectionEXT.y, _652 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _694 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    }
    else
    {
        _694 = 0.0;
    }
    vec4 _698 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _574) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _575) + cbTextureTilingScale._m0[1u].w), _694);
    float _702 = _698.z;
    float _703 = _698.w;
    float _709 = exp2(log2(_702 * 22.0) * 260.0);
    float _710 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _711 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    float _716 = exp2(log2(1.0 - _703) * 10.0);
    uvec2 _728 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_3, int(0u)));
    float _779;
    if (_641)
    {
        float _739 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _745 = (_573 * _558) - (_570 * _561);
        float _748 = (_567 * _561) - (_573 * _555);
        float _751 = (_570 * _555) - (_567 * _558);
        float _777 = ((log2((((float(_728.y) * 0.5) * float(_728.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_748 * _748) + (_751 * _751)) + (_745 * _745)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_739 * gl_WorldRayDirectionEXT.x, _739 * gl_WorldRayDirectionEXT.y, _739 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _779 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    }
    else
    {
        _779 = 0.0;
    }
    vec4 _782 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _574) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _575) + cbTextureTilingScale._m0[4u].w), _779);
    uvec2 _807 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_1, int(0u)));
    float _858;
    if (_641)
    {
        float _818 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _824 = (_573 * _558) - (_570 * _561);
        float _827 = (_567 * _561) - (_573 * _555);
        float _830 = (_570 * _555) - (_567 * _558);
        float _856 = ((log2((((float(_807.y) * 0.5) * float(_807.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_827 * _827) + (_830 * _830)) + (_824 * _824)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_818 * gl_WorldRayDirectionEXT.x, _818 * gl_WorldRayDirectionEXT.y, _818 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _858 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    }
    else
    {
        _858 = 0.0;
    }
    vec4 _860 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _574) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _575) + cbTextureTilingScale._m0[2u].w), _858);
    float _871 = cbMtdParam._m0[9u].x * _860.x;
    float _872 = cbMtdParam._m0[9u].y * _860.y;
    float _873 = cbMtdParam._m0[9u].z * _860.z;
    float _880 = (((cbMtdParam._m0[10u].x * _782.x) - _871) * _716) + _871;
    float _881 = (((cbMtdParam._m0[10u].y * _782.y) - _872) * _716) + _872;
    float _882 = (((cbMtdParam._m0[10u].z * _782.z) - _873) * _716) + _873;
    float _885 = exp2(log2(_703) * 10.0);
    uvec2 _897 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_2, int(0u)));
    float _948;
    if (_641)
    {
        float _908 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _914 = (_573 * _558) - (_570 * _561);
        float _917 = (_567 * _561) - (_573 * _555);
        float _920 = (_570 * _555) - (_567 * _558);
        float _946 = ((log2((((float(_897.y) * 0.5) * float(_897.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_917 * _917) + (_920 * _920)) + (_914 * _914)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_908 * gl_WorldRayDirectionEXT.x, _908 * gl_WorldRayDirectionEXT.y, _908 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _948 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
    }
    else
    {
        _948 = 0.0;
    }
    vec4 _950 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _574) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _575) + cbTextureTilingScale._m0[3u].w), _948);
    uvec2 _985 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_4, int(0u)));
    float _1036;
    if (_641)
    {
        float _996 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1002 = (_573 * _558) - (_570 * _561);
        float _1005 = (_567 * _561) - (_573 * _555);
        float _1008 = (_570 * _555) - (_567 * _558);
        float _1034 = ((log2((((float(_985.y) * 0.5) * float(_985.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1005 * _1005) + (_1008 * _1008)) + (_1002 * _1002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_996 * gl_WorldRayDirectionEXT.x, _996 * gl_WorldRayDirectionEXT.y, _996 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1036 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    }
    else
    {
        _1036 = 0.0;
    }
    vec4 _1038 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _574) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _575) + cbTextureTilingScale._m0[5u].w), _1036);
    float _1048 = cbMtdParam._m0[12u].x * _1038.x;
    float _1049 = cbMtdParam._m0[12u].y * _1038.y;
    float _1050 = cbMtdParam._m0[12u].z * _1038.z;
    uvec2 _1071 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_7, int(0u)));
    float _1122;
    if (_641)
    {
        float _1082 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1088 = (_573 * _558) - (_570 * _561);
        float _1091 = (_567 * _561) - (_573 * _555);
        float _1094 = (_570 * _555) - (_567 * _558);
        float _1120 = ((log2((((float(_1071.y) * 0.5) * float(_1071.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1091 * _1091) + (_1094 * _1094)) + (_1088 * _1088)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1082 * gl_WorldRayDirectionEXT.x, _1082 * gl_WorldRayDirectionEXT.y, _1082 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1122 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    }
    else
    {
        _1122 = 0.0;
    }
    vec4 _1124 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _574) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _575) + cbTextureTilingScale._m0[0u].w), _1122);
    float _1131 = ((((((((cbMtdParam._m0[11u].x * _950.x) - _880) * _885) + _880) - _1048) * _711) + _1048) * 4.55000019073486328125) * _1124.x;
    float _1133 = ((((((((cbMtdParam._m0[11u].y * _950.y) - _881) * _885) + _881) - _1049) * _711) + _1049) * 4.55000019073486328125) * _1124.y;
    float _1135 = ((((((((cbMtdParam._m0[11u].z * _950.z) - _882) * _885) + _882) - _1050) * _711) + _1050) * 4.55000019073486328125) * _1124.z;
    uvec2 _1151 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_5, int(0u)));
    float _1202;
    if (_641)
    {
        float _1162 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1168 = (_573 * _558) - (_570 * _561);
        float _1171 = (_567 * _561) - (_573 * _555);
        float _1174 = (_570 * _555) - (_567 * _558);
        float _1200 = ((log2((((float(_1151.y) * 0.5) * float(_1151.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1171 * _1171) + (_1174 * _1174)) + (_1168 * _1168)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1162 * gl_WorldRayDirectionEXT.x, _1162 * gl_WorldRayDirectionEXT.y, _1162 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1202 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    }
    else
    {
        _1202 = 0.0;
    }
    vec4 _1204 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _574) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _575) + cbTextureTilingScale._m0[6u].w), _1202);
    uvec2 _1225 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_6, int(0u)));
    float _1276;
    if (_641)
    {
        float _1236 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1242 = (_573 * _558) - (_570 * _561);
        float _1245 = (_567 * _561) - (_573 * _555);
        float _1248 = (_570 * _555) - (_567 * _558);
        float _1274 = ((log2((((float(_1225.y) * 0.5) * float(_1225.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1245 * _1245) + (_1248 * _1248)) + (_1242 * _1242)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1236 * gl_WorldRayDirectionEXT.x, _1236 * gl_WorldRayDirectionEXT.y, _1236 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1276 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
    }
    else
    {
        _1276 = 0.0;
    }
    vec4 _1278 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _574) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _575) + cbTextureTilingScale._m0[7u].w), _1276);
    float _1280 = _1278.x;
    float _1281 = _1278.y;
    float _1284 = cbMtdParam._m0[13u].x + _1278.z;
    float _1287 = (((cbMtdParam._m0[13u].y + _1204.z) - _1284) * _716) + _1284;
    uvec2 _1299 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_8, int(0u)));
    float _1350;
    if (_641)
    {
        float _1310 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1316 = (_573 * _558) - (_570 * _561);
        float _1319 = (_567 * _561) - (_573 * _555);
        float _1322 = (_570 * _555) - (_567 * _558);
        float _1348 = ((log2((((float(_1299.y) * 0.5) * float(_1299.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1319 * _1319) + (_1322 * _1322)) + (_1316 * _1316)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1310 * gl_WorldRayDirectionEXT.x, _1310 * gl_WorldRayDirectionEXT.y, _1310 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1350 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
    }
    else
    {
        _1350 = 0.0;
    }
    vec4 _1352 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _574) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _575) + cbTextureTilingScale._m0[8u].w), _1350);
    uvec2 _1375 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_9, int(0u)));
    float _1379 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1380 = _1379 * gl_WorldRayDirectionEXT.x;
    float _1381 = _1379 * gl_WorldRayDirectionEXT.y;
    float _1382 = _1379 * gl_WorldRayDirectionEXT.z;
    float _1426;
    if (_641)
    {
        float _1392 = (_573 * _558) - (_570 * _561);
        float _1395 = (_567 * _561) - (_573 * _555);
        float _1398 = (_570 * _555) - (_567 * _558);
        float _1424 = ((log2((((float(_1375.y) * 0.5) * float(_1375.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1395 * _1395) + (_1398 * _1398)) + (_1392 * _1392)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1380, _1381, _1382), vec3(_586, _588, _589))));
        _1426 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
    }
    else
    {
        _1426 = 0.0;
    }
    vec4 _1428 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _574) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _575) + cbTextureTilingScale._m0[9u].w), _1426);
    float _1430 = _1428.x;
    float _1431 = _1428.y;
    float _1434 = cbMtdParam._m0[13u].z + _1428.z;
    float _1437 = ((((_702 * 2.0) * ((((_1352.z - _1287) + cbMtdParam._m0[14u].y) * _885) + _1287)) - _1434) * _711) + _1434;
    float _1448 = ((_1204.x - _1280) * _716) + _1280;
    float _1449 = ((_1204.y - _1281) * _716) + _1281;
    float _1464 = (((((((_1352.x - _1448) * _885) + _1448) - _1430) * _711) + _1430) * 2.0) + (-1.0);
    float _1465 = (((((((_1352.y - _1449) * _885) + _1449) - _1431) * _711) + _1431) * 2.0) + (-1.0);
    float _1466 = dot(vec2(_1464, _1465), vec2(_1464, _1465));
    float _1998 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
    float _1471 = sqrt(1.0 - (isnan(1.0) ? _1998 : (isnan(_1998) ? 1.0 : min(_1998, 1.0))));
    float _1474 = _1464 + (cbMtdParam._m0[13u].w * ((_698.x * 2.0) + (-1.0)));
    float _1475 = _1465 + (cbMtdParam._m0[13u].w * ((_698.y * 2.0) + (-1.0)));
    float _1478 = fma(_1471, _586, fma(_1475, _602, (_621 * _615) * _1474));
    float _1481 = fma(_1471, _588, fma(_1475, _603, (_621 * _616) * _1474));
    float _1484 = fma(_1471, _589, fma(_1475, _604, (_621 * _617) * _1474));
    float _1488 = inversesqrt(dot(vec3(_1478, _1481, _1484), vec3(_1478, _1481, _1484)));
    float _1489 = _1488 * _1478;
    float _1490 = _1488 * _1481;
    float _1491 = _1488 * _1484;
    float _1503 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1504 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1505 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1506 = (-0.0) - _1380;
    float _1508 = (-0.0) - _1381;
    float _1509 = (-0.0) - _1382;
    float _1515 = float(gl_LaunchIDEXT.x);
    float _1516 = float(gl_LaunchIDEXT.y);
    float _1519 = float(gl_LaunchSizeEXT.x);
    float _1533 = fract(fract(sin(dot(vec2(_1515 / _1519, _1516 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1546 = fract(fract(sin(dot(vec2((_1515 + 128.0) / _1519, (_1516 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1547 = 1.0 - cbMtdParam._m0[14u].x;
    float _1548 = _1131 * _1547;
    float _1549 = _1133 * _1547;
    float _1550 = _1135 * _1547;
    float _1555 = (_1131 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1556 = (_1133 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1557 = (_1135 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1558 = _1555 + 0.039999999105930328369140625;
    float _1560 = _1556 + 0.039999999105930328369140625;
    float _1561 = _1557 + 0.039999999105930328369140625;
    _70._m0 = 1u;
    uvec4 _1571 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1572 = _1571.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1572, _1571.w, _1572, vec3(_1503, _1504, _1505), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    if (_70._m0 == 0u)
    {
        float _1592 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1489, _1490, _1491));
        float _2009 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1595 = isnan(1.0) ? _2009 : (isnan(_2009) ? 1.0 : min(_2009, 1.0));
        float _1614 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1437) * 0.949999988079071044921875);
        float _1615 = _1614 * _1614;
        float _1616 = g_sceneCB._m0[4u].x - _1380;
        float _1617 = g_sceneCB._m0[4u].y - _1381;
        float _1618 = g_sceneCB._m0[4u].z - _1382;
        float _1622 = inversesqrt(dot(vec3(_1616, _1617, _1618), vec3(_1616, _1617, _1618)));
        float _1623 = _1622 * _1616;
        float _1624 = _1622 * _1617;
        float _1625 = _1622 * _1618;
        float _1626 = dot(vec3(_1489, _1490, _1491), vec3(g_sceneCB._m0[4u].xyz));
        float _2020 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1629 = isnan(1.0) ? _2020 : (isnan(_2020) ? 1.0 : min(_2020, 1.0));
        float _1630 = dot(vec3(_1489, _1490, _1491), vec3(_1506, _1508, _1509));
        float _2031 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1633 = isnan(1.0) ? _2031 : (isnan(_2031) ? 1.0 : min(_2031, 1.0));
        float _1634 = dot(vec3(_1489, _1490, _1491), vec3(_1623, _1624, _1625));
        float _2042 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1637 = isnan(1.0) ? _2042 : (isnan(_2042) ? 1.0 : min(_2042, 1.0));
        float _1638 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1623, _1624, _1625));
        float _2053 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = _1615 * _1615;
        float _1646 = ((_1637 * _1637) * (_1642 + (-1.0))) + 1.0;
        float _1655 = exp2(log2(1.0 - (isnan(1.0) ? _2053 : (isnan(_2053) ? 1.0 : min(_2053, 1.0)))) * 5.0);
        float _1666 = 1.0 - _1615;
        float _1677 = (0.5 / (((_1633 * ((_1629 * _1666) + _1615)) + 9.9999999392252902907785028219223e-09) + (((_1633 * _1666) + _1615) * _1629))) * _1629;
        float _2064 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1679 = (isnan(1.0) ? _2064 : (isnan(_2064) ? 1.0 : min(_2064, 1.0))) * (_1642 / ((_1646 * _1646) * 3.141590118408203125));
        _1686 = ((_1548 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1595;
        _1687 = ((_1549 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1595;
        _1688 = ((_1550 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1595;
        _1689 = (((_1655 * (0.959999978542327880859375 - _1555)) + _1558) * g_sceneCB._m0[5u].x) * _1679;
        _1690 = (((_1655 * (0.959999978542327880859375 - _1556)) + _1560) * g_sceneCB._m0[5u].y) * _1679;
        _1691 = (((_1655 * (0.959999978542327880859375 - _1557)) + _1561) * g_sceneCB._m0[5u].z) * _1679;
    }
    else
    {
        _1686 = 0.0;
        _1687 = 0.0;
        _1688 = 0.0;
        _1689 = 0.0;
        _1690 = 0.0;
        _1691 = 0.0;
    }
    bool _1693 = abs(_1490) < 0.89999997615814208984375;
    float _1695 = float(_1693);
    float _1696 = _1693 ? 0.0 : 1.0;
    float _1699 = (_1695 * _1491) - (_1696 * _1490);
    float _1700 = _1696 * _1489;
    float _1702 = (-0.0) - (_1489 * _1695);
    float _1706 = inversesqrt(dot(vec3(_1699, _1700, _1702), vec3(_1699, _1700, _1702)));
    float _1707 = _1699 * _1706;
    float _1708 = _1700 * _1706;
    float _1709 = _1706 * _1702;
    float _1712 = (_1708 * _1491) - (_1709 * _1490);
    float _1715 = (_1709 * _1489) - (_1707 * _1491);
    float _1718 = (_1707 * _1490) - (_1708 * _1489);
    float _1720;
    float _1728;
    float _1719 = 0.0;
    uint _1721 = 0u;
    float _1725;
    bool _1727;
    for (;;)
    {
        _1725 = (float(_1721) + _1533) * 0.03125;
        _1727 = _1721 == 0u;
        float frontier_phi_47_pred;
        if (_1727)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1869;
            float _1870;
            uint _1872;
            _1869 = 0.0;
            _1870 = 0.5;
            _1872 = _1721;
            float _1729;
            for (;;)
            {
                _1729 = ((_1872 & 1u) != 0u) ? (_1870 + _1869) : _1869;
                uint _1873 = _1872 >> 1u;
                if (_1873 == 0u)
                {
                    break;
                }
                else
                {
                    _1869 = _1729;
                    _1870 *= 0.5;
                    _1872 = _1873;
                }
            }
            frontier_phi_47_pred = _1729;
        }
        _1728 = frontier_phi_47_pred;
        float _1730 = _1728 + _1546;
        float _1734 = sqrt(_1725);
        float _1735 = ((_1730 > 1.0) ? (_1730 + (-1.0)) : _1730) * 6.283185482025146484375;
        float _1738 = cos(_1735) * _1734;
        float _1740 = sin(_1735) * _1734;
        float _1742 = sqrt(1.0 - _1725);
        float _1755 = ((_1742 * _1489) + (_1738 * _1712)) + (_1740 * _1707);
        float _1756 = ((_1742 * _1490) + (_1738 * _1715)) + (_1740 * _1708);
        float _1757 = ((_1742 * _1491) + (_1738 * _1718)) + (_1740 * _1709);
        _69._m0 = 1u;
        uvec4 _1761 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1762 = _1761.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1762, _1761.w, _1762, vec3(_1503, _1504, _1505), 9.9999997473787516355514526367188e-05, vec3(_1755, _1756, _1757), 10000.0, 1);
        float _1768 = dot(vec3(_1489, _1490, _1491), vec3(_1755, _1756, _1757));
        float _2075 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1771 = isnan(1.0) ? _2075 : (isnan(_2075) ? 1.0 : min(_2075, 1.0));
        _1720 = ((float(_69._m0 == 0u) * _1771) / (_1771 * 0.3183098733425140380859375)) + _1719;
        uint _1722 = _1721 + 1u;
        if (_1722 == 32u)
        {
            break;
        }
        else
        {
            _1719 = _1720;
            _1721 = _1722;
            continue;
        }
    }
    float _1779 = _1720 * 0.009947183541953563690185546875;
    float _1784 = dot(vec3(_1380, _1381, _1382), vec3(_1489, _1490, _1491)) * 2.0;
    vec4 _1798 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1380 - (_1784 * _1489), _1381 - (_1784 * _1490), _1382 - (_1784 * _1491)), 4.0 - (_1437 * 4.0));
    float _1803 = dot(vec3(_1506, _1508, _1509), vec3(_1489, _1490, _1491));
    float _2086 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
    float _1813 = exp2(log2(1.0 - (isnan(1.0) ? _2086 : (isnan(_2086) ? 1.0 : min(_2086, 1.0)))) * 5.0);
    vec4 _1825 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1489, _1490, _1491), 0.0);
    float _1836 = (_1689 + _1686) + (((_1825.x * _1548) + (((_1813 * (0.959999978542327880859375 - _1555)) + _1558) * _1798.x)) * _1779);
    float _1840 = (_1690 + _1687) + (((_1825.y * _1549) + (((_1813 * (0.959999978542327880859375 - _1556)) + _1560) * _1798.y)) * _1779);
    float _1844 = (_1691 + _1688) + (((_1825.z * _1550) + (((_1813 * (0.959999978542327880859375 - _1557)) + _1561) * _1798.z)) * _1779);
    float _2097 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
    float _2108 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
    float _2119 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
    bool _1852 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1863;
    _1863.x = _1852 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0)));
    _1863.y = _1852 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2108 : (isnan(_2108) ? 1.0 : min(_2108, 1.0)));
    _1863.z = _1852 ? ((_585 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2119 : (isnan(_2119) ? 1.0 : min(_2119, 1.0)));
    payload._m0 = _1863;
}


