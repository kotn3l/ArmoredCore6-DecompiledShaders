#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 2) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_MB2_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1961;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _220 = _219.x;
    bool _234 = _178 == 0u;
    uint _235;
    if (_234)
    {
        _235 = _211 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 12u;
        }
        _235 = frontier_phi_9_10_ladder;
    }
    uint _239 = _179 ? (_235 + 4u) : _235;
    uint _242 = ((_183 + 4u) + _239) >> 2u;
    uvec2 _248 = uvec2(texelFetch(l_geomAttrib_0, int(_242)).x, texelFetch(l_geomAttrib_0, int(_242 + 1u)).x);
    uint _249 = _248.x;
    uint _250 = _248.y;
    float _254 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_249) >> int(16u))));
    float _259 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _260 = float(int(uint(int(_250) >> int(16u))));
    uint _275 = _177 * _171;
    uint _276 = _275 + 12u;
    uint _297;
    uint _298;
    uint _299;
    uint _300;
    if (_182)
    {
        uvec4 _278 = texelFetch(l_geomAttrib_0, int(_276 >> 2u));
        uint _279 = _278.x;
        _297 = _279 & 255u;
        _298 = (_279 >> 8u) & 255u;
        _299 = (_279 >> 16u) & 255u;
        _300 = 16u;
    }
    else
    {
        uint _285 = _276 >> 2u;
        uvec2 _291 = uvec2(texelFetch(l_geomAttrib_0, int(_285)).x, texelFetch(l_geomAttrib_0, int(_285 + 1u)).x);
        uint _292 = _291.x;
        _297 = _292 & 65535u;
        _298 = _292 >> 16u;
        _299 = _291.y & 65535u;
        _300 = 20u;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int((_300 + _275) >> 2u));
    uint _307 = _306.x;
    uint _319;
    if (_234)
    {
        _319 = _300 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _300 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _300 + 12u;
        }
        _319 = frontier_phi_16_17_ladder;
    }
    uint _323 = _179 ? (_319 + 4u) : _319;
    uint _326 = ((_275 + 4u) + _323) >> 2u;
    uvec2 _332 = uvec2(texelFetch(l_geomAttrib_0, int(_326)).x, texelFetch(l_geomAttrib_0, int(_326 + 1u)).x);
    uint _333 = _332.x;
    uint _334 = _332.y;
    float _338 = float(int(uint(int(_333 << 16u) >> int(16u))));
    float _339 = float(int(uint(int(_333) >> int(16u))));
    float _343 = float(int(uint(int(_334 << 16u) >> int(16u))));
    float _344 = float(int(uint(int(_334) >> int(16u))));
    uint _359 = _177 * _172;
    uint _360 = _359 + 12u;
    uint _381;
    uint _382;
    uint _383;
    uint _384;
    if (_182)
    {
        uvec4 _362 = texelFetch(l_geomAttrib_0, int(_360 >> 2u));
        uint _363 = _362.x;
        _381 = _363 & 255u;
        _382 = (_363 >> 8u) & 255u;
        _383 = (_363 >> 16u) & 255u;
        _384 = 16u;
    }
    else
    {
        uint _369 = _360 >> 2u;
        uvec2 _375 = uvec2(texelFetch(l_geomAttrib_0, int(_369)).x, texelFetch(l_geomAttrib_0, int(_369 + 1u)).x);
        uint _376 = _375.x;
        _381 = _376 & 65535u;
        _382 = _376 >> 16u;
        _383 = _375.y & 65535u;
        _384 = 20u;
    }
    uvec4 _390 = texelFetch(l_geomAttrib_0, int((_384 + _359) >> 2u));
    uint _391 = _390.x;
    uint _403;
    if (_234)
    {
        _403 = _384 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _384 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _384 + 12u;
        }
        _403 = frontier_phi_23_24_ladder;
    }
    uint _407 = _179 ? (_403 + 4u) : _403;
    uint _410 = ((_359 + 4u) + _407) >> 2u;
    uvec2 _416 = uvec2(texelFetch(l_geomAttrib_0, int(_410)).x, texelFetch(l_geomAttrib_0, int(_410 + 1u)).x);
    uint _417 = _416.x;
    uint _418 = _416.y;
    float _422 = float(int(uint(int(_417 << 16u) >> int(16u))));
    float _423 = float(int(uint(int(_417) >> int(16u))));
    float _427 = float(int(uint(int(_418 << 16u) >> int(16u))));
    float _428 = float(int(uint(int(_418) >> int(16u))));
    bool _444 = _128.z == 0u;
    float _480;
    float _481;
    float _482;
    if (_444)
    {
        uint _447 = _169 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _169 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _518;
    float _519;
    float _520;
    if (_444)
    {
        uint _485 = _171 * 3u;
        uvec3 _494 = uvec3(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_485 + 2u)).x);
        _518 = uintBitsToFloat(_494.x);
        _519 = uintBitsToFloat(_494.y);
        _520 = uintBitsToFloat(_494.z);
    }
    else
    {
        uint _502 = _171 * 2u;
        uvec2 _508 = uvec2(texelFetch(l_geomPositionBuffer, int(_502)).x, texelFetch(l_geomPositionBuffer, int(_502 + 1u)).x);
        uint _509 = _508.x;
        _518 = unpackHalf2x16(_509).x;
        _519 = unpackHalf2x16(_509 >> 16u).x;
        _520 = unpackHalf2x16(_508.y).x;
    }
    float _556;
    float _557;
    float _558;
    if (_444)
    {
        uint _523 = _172 * 3u;
        uvec3 _532 = uvec3(texelFetch(l_geomPositionBuffer, int(_523)).x, texelFetch(l_geomPositionBuffer, int(_523 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_523 + 2u)).x);
        _556 = uintBitsToFloat(_532.x);
        _557 = uintBitsToFloat(_532.y);
        _558 = uintBitsToFloat(_532.z);
    }
    else
    {
        uint _540 = _172 * 2u;
        uvec2 _546 = uvec2(texelFetch(l_geomPositionBuffer, int(_540)).x, texelFetch(l_geomPositionBuffer, int(_540 + 1u)).x);
        uint _547 = _546.x;
        _556 = unpackHalf2x16(_547).x;
        _557 = unpackHalf2x16(_547 >> 16u).x;
        _558 = unpackHalf2x16(_546.y).x;
    }
    float _561 = (1.0 - hit._m0.x) - hit._m0.y;
    float _608 = (((float(texelFetch(l_geomAttrib_0, int(((_275 + 12u) + _323) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _239) >> 2u)).x & 255u) * _561)) + (float(texelFetch(l_geomAttrib_0, int(((_359 + 12u) + _407) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _615 = (((float(texelFetch(l_geomAttrib_0, int(((_275 + 16u) + _323) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _239) >> 2u)).x & 255u) * _561)) + (float(texelFetch(l_geomAttrib_0, int(((_359 + 16u) + _407) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _618 = (_338 - _254) * 0.00048828125;
    float _620 = (_339 - _255) * 0.00048828125;
    float _623 = (_422 - _254) * 0.00048828125;
    float _624 = (_423 - _255) * 0.00048828125;
    float _650 = _518 - _480;
    float _651 = _519 - _481;
    float _652 = _520 - _482;
    float _655 = fma(_652, gl_ObjectToWorldEXT[2u].x, fma(_651, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _650));
    float _658 = fma(_652, gl_ObjectToWorldEXT[2u].y, fma(_651, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _650));
    float _661 = fma(_652, gl_ObjectToWorldEXT[2u].z, fma(_651, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _650));
    float _662 = _556 - _480;
    float _663 = _557 - _481;
    float _664 = _558 - _482;
    float _667 = fma(_664, gl_ObjectToWorldEXT[2u].x, fma(_663, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _662));
    float _670 = fma(_664, gl_ObjectToWorldEXT[2u].y, fma(_663, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _662));
    float _673 = fma(_664, gl_ObjectToWorldEXT[2u].z, fma(_663, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _662));
    float _674 = (((_338 * hit._m0.x) + (_254 * _561)) + (_422 * hit._m0.y)) * 0.00048828125;
    float _675 = (((_339 * hit._m0.x) + (_255 * _561)) + (_423 * hit._m0.y)) * 0.00048828125;
    float _681 = (((float(_208) * _561) + (-127.0)) + (float(_297) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _684 = (((float(_209) * _561) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_382) * hit._m0.y);
    float _687 = (((float(_210) * _561) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _688 = _681 * 0.0078740157186985015869140625;
    float _690 = _684 * 0.0078740157186985015869140625;
    float _691 = _687 * 0.0078740157186985015869140625;
    float _704 = ((((float(_220 & 255u) * _561) + (-127.0)) + (float(_307 & 255u) * hit._m0.x)) + (float(_391 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _705 = ((((float((_220 >> 8u) & 255u) * _561) + (-127.0)) + (float((_307 >> 8u) & 255u) * hit._m0.x)) + (float((_391 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _706 = ((((float((_220 >> 16u) & 255u) * _561) + (-127.0)) + (float((_307 >> 16u) & 255u) * hit._m0.x)) + (float((_391 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _707 = ((((float(_220 >> 24u) * _561) + (-127.0)) + (float(_307 >> 24u) * hit._m0.x)) + (float(_391 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _717 = ((_705 * _691) - (_706 * _690)) * _707;
    float _718 = ((_706 * _688) - (_704 * _691)) * _707;
    float _719 = ((_704 * _690) - (_705 * _688)) * _707;
    float _723 = inversesqrt(dot(vec3(_717, _718, _719), vec3(_717, _718, _719)));
    float _724 = _723 * _717;
    float _725 = _723 * _718;
    float _726 = _723 * _719;
    uvec2 _747 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_4, int(0u)));
    bool _752 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _805;
    if (_752)
    {
        float _763 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _769 = (_673 * _658) - (_670 * _661);
        float _772 = (_667 * _661) - (_673 * _655);
        float _775 = (_670 * _655) - (_667 * _658);
        float _802 = ((log2((((float(_747.y) * 0.5) * float(_747.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_772 * _772) + (_775 * _775)) + (_769 * _769)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_763 * gl_WorldRayDirectionEXT.x, _763 * gl_WorldRayDirectionEXT.y, _763 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _805 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    }
    else
    {
        _805 = 0.0;
    }
    vec4 _809 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _674) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _675) + cbTextureTilingScale._m0[5u].w), _805);
    float _811 = _809.x;
    float _812 = 1.0 - _811;
    uvec2 _837 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_8, int(0u)));
    float _888;
    if (_752)
    {
        float _848 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _854 = (_673 * _658) - (_670 * _661);
        float _857 = (_667 * _661) - (_673 * _655);
        float _860 = (_670 * _655) - (_667 * _658);
        float _886 = ((log2((((float(_837.y) * 0.5) * float(_837.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_857 * _857) + (_860 * _860)) + (_854 * _854)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_848 * gl_WorldRayDirectionEXT.x, _848 * gl_WorldRayDirectionEXT.y, _848 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _888 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    }
    else
    {
        _888 = 0.0;
    }
    vec4 _891 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _674) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _675) + cbTextureTilingScale._m0[8u].w), _888);
    uvec2 _914 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_11, int(0u)));
    float _965;
    if (_752)
    {
        float _925 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _931 = (_673 * _658) - (_670 * _661);
        float _934 = (_667 * _661) - (_673 * _655);
        float _937 = (_670 * _655) - (_667 * _658);
        float _963 = ((log2((((float(_914.y) * 0.5) * float(_914.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_934 * _934) + (_937 * _937)) + (_931 * _931)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_925 * gl_WorldRayDirectionEXT.x, _925 * gl_WorldRayDirectionEXT.y, _925 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _965 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    }
    else
    {
        _965 = 0.0;
    }
    vec4 _967 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _674) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _675) + cbTextureTilingScale._m0[2u].w), _965);
    float _969 = _967.x;
    float _970 = 1.0 - _969;
    uvec2 _986 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_10, int(0u)));
    float _1039;
    if (_752)
    {
        float _997 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1003 = (_673 * _658) - (_670 * _661);
        float _1006 = (_667 * _661) - (_673 * _655);
        float _1009 = (_670 * _655) - (_667 * _658);
        float _1037 = ((log2((((float(_986.y) * 0.5) * float(_986.x)) * abs((((_428 - _260) * (_343 - _259)) - ((_427 - _259) * (_344 - _260))) * 2.384185791015625e-07)) / (sqrt(((_1006 * _1006) + (_1009 * _1009)) + (_1003 * _1003)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_997 * gl_WorldRayDirectionEXT.x, _997 * gl_WorldRayDirectionEXT.y, _997 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1039 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    }
    else
    {
        _1039 = 0.0;
    }
    vec4 _1041 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((((_343 * hit._m0.x) + (_259 * _561)) + (_427 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_344 * hit._m0.x) + (_260 * _561)) + (_428 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1039);
    uvec2 _1066 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_5, int(0u)));
    float _1117;
    if (_752)
    {
        float _1077 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1083 = (_673 * _658) - (_670 * _661);
        float _1086 = (_667 * _661) - (_673 * _655);
        float _1089 = (_670 * _655) - (_667 * _658);
        float _1115 = ((log2((((float(_1066.y) * 0.5) * float(_1066.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_1086 * _1086) + (_1089 * _1089)) + (_1083 * _1083)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1077 * gl_WorldRayDirectionEXT.x, _1077 * gl_WorldRayDirectionEXT.y, _1077 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1117 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    }
    else
    {
        _1117 = 0.0;
    }
    vec4 _1119 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _674) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _675) + cbTextureTilingScale._m0[6u].w), _1117);
    float _1129 = cbMtdParam._m0[12u].x * _1119.x;
    float _1130 = cbMtdParam._m0[12u].y * _1119.y;
    float _1131 = cbMtdParam._m0[12u].z * _1119.z;
    float _1139 = (_608 - ((cbMtdParam._m0[16u].y * (1.0 - _608)) * ((((_969 - _970) * cbMtdParam._m0[15u].w) + _970) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _2076 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _1140 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
    float _1152 = dot(vec3(0.0), vec3(_724, _725, _726));
    float _1155 = dot(vec3(0.0), vec3(_704, _705, _706));
    float _1158 = dot(vec3(0.0), vec3(_688, _690, _691));
    float _1164 = inversesqrt(dot(vec3(_1152, _1155, _1158), vec3(_1152, _1155, _1158)));
    float _1186 = dot(vec4(textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _674) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _675) + cbTextureTilingScale._m0[4u].w), 0.0)), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    uvec2 _1206 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_1, int(0u)));
    float _1257;
    if (_752)
    {
        float _1217 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1223 = (_673 * _658) - (_670 * _661);
        float _1226 = (_667 * _661) - (_673 * _655);
        float _1229 = (_670 * _655) - (_667 * _658);
        float _1255 = ((log2((((float(_1206.y) * 0.5) * float(_1206.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_1226 * _1226) + (_1229 * _1229)) + (_1223 * _1223)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1217 * gl_WorldRayDirectionEXT.x, _1217 * gl_WorldRayDirectionEXT.y, _1217 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    vec4 _1259 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_1152 * cbMtdParam._m0[14u].x) * _1164) * _1186) + _674) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_1155 * cbMtdParam._m0[14u].x) * _1164) * _1186) + _675) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1257);
    float _1282 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_688, _690, _691, 0.0)) - cbMtdParam._m0[14u].w;
    float _2092 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
    float _1289 = exp2(log2(1.0 - (isnan(1.0) ? _2092 : (isnan(_2092) ? 1.0 : min(_2092, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].x : (isnan(cbMtdParam._m0[15u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].x, 0.001000000047497451305389404296875))));
    float _1304 = (((((_1140 * ((cbMtdParam._m0[11u].x * _1041.x) - _1129)) + _1129) * 4.55000019073486328125) * _1259.x) * cbMtdParam._m0[9u].x) * ((_1289 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _1308 = (((((((cbMtdParam._m0[11u].y * _1041.y) - _1130) * _1140) + _1130) * 4.55000019073486328125) * _1259.y) * cbMtdParam._m0[9u].y) * ((_1289 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _1312 = (((((((cbMtdParam._m0[11u].z * _1041.z) - _1131) * _1140) + _1131) * 4.55000019073486328125) * _1259.z) * cbMtdParam._m0[9u].z) * ((_1289 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _1319 = (_615 - ((cbMtdParam._m0[14u].z * (1.0 - _615)) * ((((_811 - _812) * cbMtdParam._m0[17u].x) + _812) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[15u].y + 1.0);
    float _2108 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
    float _1320 = isnan(1.0) ? _2108 : (isnan(_2108) ? 1.0 : min(_2108, 1.0));
    float _1327 = (((_891.x * cbMtdParam._m0[10u].x) - _1304) * _1320) + _1304;
    float _1328 = (((_891.y * cbMtdParam._m0[10u].y) - _1308) * _1320) + _1308;
    float _1329 = (((_891.z * cbMtdParam._m0[10u].z) - _1312) * _1320) + _1312;
    uvec2 _1341 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_13, int(0u)));
    float _1392;
    if (_752)
    {
        float _1352 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1358 = (_673 * _658) - (_670 * _661);
        float _1361 = (_667 * _661) - (_673 * _655);
        float _1364 = (_670 * _655) - (_667 * _658);
        float _1390 = ((log2((((float(_1341.y) * 0.5) * float(_1341.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_1361 * _1361) + (_1364 * _1364)) + (_1358 * _1358)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1352 * gl_WorldRayDirectionEXT.x, _1352 * gl_WorldRayDirectionEXT.y, _1352 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1392 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    }
    else
    {
        _1392 = 0.0;
    }
    vec4 _1395 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _674) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _675) + cbTextureTilingScale._m0[3u].w), _1392);
    float _1402 = (_1395.x * 2.0) + (-1.0);
    float _1403 = (_1395.y * 2.0) + (-1.0);
    float _1404 = dot(vec2(_1402, _1403), vec2(_1402, _1403));
    float _2124 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
    uvec2 _1423 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_7, int(0u)));
    float _1474;
    if (_752)
    {
        float _1434 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1440 = (_673 * _658) - (_670 * _661);
        float _1443 = (_667 * _661) - (_673 * _655);
        float _1446 = (_670 * _655) - (_667 * _658);
        float _1472 = ((log2((((float(_1423.y) * 0.5) * float(_1423.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_1443 * _1443) + (_1446 * _1446)) + (_1440 * _1440)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1434 * gl_WorldRayDirectionEXT.x, _1434 * gl_WorldRayDirectionEXT.y, _1434 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1474 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
    }
    else
    {
        _1474 = 0.0;
    }
    vec4 _1476 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _674) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _675) + cbTextureTilingScale._m0[7u].w), _1474);
    float _1483 = (_1476.x * 2.0) + (-1.0);
    float _1484 = (_1476.y * 2.0) + (-1.0);
    float _1485 = dot(vec2(_1483, _1484), vec2(_1483, _1484));
    float _2140 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _1490 = sqrt(1.0 - (isnan(1.0) ? _2140 : (isnan(_2140) ? 1.0 : min(_2140, 1.0))));
    float _1492 = cbMtdParam._m0[16u].w + _1476.z;
    float _1495 = (((cbMtdParam._m0[16u].z + _1395.z) - _1492) * _1140) + _1492;
    uvec2 _1507 = uvec2(textureSize(M_Ice_MB2_CV_snp_0_Texture2D_9, int(0u)));
    float _1511 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1512 = _1511 * gl_WorldRayDirectionEXT.x;
    float _1513 = _1511 * gl_WorldRayDirectionEXT.y;
    float _1514 = _1511 * gl_WorldRayDirectionEXT.z;
    float _1558;
    if (_752)
    {
        float _1524 = (_673 * _658) - (_670 * _661);
        float _1527 = (_667 * _661) - (_673 * _655);
        float _1530 = (_670 * _655) - (_667 * _658);
        float _1556 = ((log2((((float(_1507.y) * 0.5) * float(_1507.x)) * abs((_624 * _618) - (_623 * _620))) / (sqrt(((_1527 * _1527) + (_1530 * _1530)) + (_1524 * _1524)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1512, _1513, _1514), vec3(_688, _690, _691))));
        _1558 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
    }
    else
    {
        _1558 = 0.0;
    }
    vec4 _1560 = textureLod(sampler2D(M_Ice_MB2_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _674) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _675) + cbTextureTilingScale._m0[9u].w), _1558);
    float _1567 = (_1560.x * 2.0) + (-1.0);
    float _1568 = (_1560.y * 2.0) + (-1.0);
    float _1569 = dot(vec2(_1567, _1568), vec2(_1567, _1568));
    float _2156 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
    float _1577 = (_1320 * (_1560.z - _1495)) + _1495;
    float _1584 = (_1140 * (_1402 - _1483)) + _1483;
    float _1585 = (_1140 * (_1403 - _1484)) + _1484;
    float _1586 = (_1140 * (sqrt(1.0 - (isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0)))) - _1490)) + _1490;
    float _1598 = (((_1567 - _1584) + (_1584 * cbMtdParam._m0[15u].z)) * _1320) + _1584;
    float _1599 = (((_1568 - _1585) + (_1585 * cbMtdParam._m0[15u].z)) * _1320) + _1585;
    float _1600 = ((sqrt(1.0 - (isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0)))) - _1586) * _1320) + _1586;
    float _1603 = fma(_1600, _688, fma(_1599, _704, _1598 * _724));
    float _1606 = fma(_1600, _690, fma(_1599, _705, _1598 * _725));
    float _1609 = fma(_1600, _691, fma(_1599, _706, _1598 * _726));
    float _1613 = inversesqrt(dot(vec3(_1603, _1606, _1609), vec3(_1603, _1606, _1609)));
    float _1614 = _1613 * _1603;
    float _1615 = _1613 * _1606;
    float _1616 = _1613 * _1609;
    float _1628 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1629 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1630 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1631 = (-0.0) - _1512;
    float _1633 = (-0.0) - _1513;
    float _1634 = (-0.0) - _1514;
    float _1640 = float(gl_LaunchIDEXT.x);
    float _1641 = float(gl_LaunchIDEXT.y);
    float _1644 = float(gl_LaunchSizeEXT.x);
    float _1658 = fract(fract(sin(dot(vec2(_1640 / _1644, _1641 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1671 = fract(fract(sin(dot(vec2((_1640 + 128.0) / _1644, (_1641 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1681 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1682 = _1681.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1682, _1681.w, _1682, vec3(_1628, _1629, _1630), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    float _1794;
    float _1795;
    if (_70._m0 == 0u)
    {
        float _1702 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1614, _1615, _1616));
        float _2167 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1705 = isnan(1.0) ? _2167 : (isnan(_2167) ? 1.0 : min(_2167, 1.0));
        float _1724 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1577) * 0.949999988079071044921875);
        float _1725 = _1724 * _1724;
        float _1726 = g_sceneCB._m0[4u].x - _1512;
        float _1727 = g_sceneCB._m0[4u].y - _1513;
        float _1728 = g_sceneCB._m0[4u].z - _1514;
        float _1732 = inversesqrt(dot(vec3(_1726, _1727, _1728), vec3(_1726, _1727, _1728)));
        float _1733 = _1732 * _1726;
        float _1734 = _1732 * _1727;
        float _1735 = _1732 * _1728;
        float _1736 = dot(vec3(_1614, _1615, _1616), vec3(g_sceneCB._m0[4u].xyz));
        float _2178 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1739 = isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0));
        float _1740 = dot(vec3(_1614, _1615, _1616), vec3(_1631, _1633, _1634));
        float _2189 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1743 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        float _1744 = dot(vec3(_1614, _1615, _1616), vec3(_1733, _1734, _1735));
        float _2200 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1747 = isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0));
        float _1748 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1733, _1734, _1735));
        float _2211 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1752 = _1725 * _1725;
        float _1756 = ((_1747 * _1747) * (_1752 + (-1.0))) + 1.0;
        float _1768 = (exp2(log2(1.0 - (isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1770 = 1.0 - _1725;
        float _1781 = (0.5 / (((_1743 * ((_1739 * _1770) + _1725)) + 9.9999999392252902907785028219223e-09) + (((_1743 * _1770) + _1725) * _1739))) * _1739;
        float _2222 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
        float _1783 = (isnan(1.0) ? _2222 : (isnan(_2222) ? 1.0 : min(_2222, 1.0))) * (_1752 / ((_1756 * _1756) * 3.141590118408203125));
        _1790 = ((_1327 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1705;
        _1791 = ((_1328 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1705;
        _1792 = ((_1329 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1705;
        _1793 = (_1768 * g_sceneCB._m0[5u].x) * _1783;
        _1794 = (_1768 * g_sceneCB._m0[5u].y) * _1783;
        _1795 = (_1768 * g_sceneCB._m0[5u].z) * _1783;
    }
    else
    {
        _1790 = 0.0;
        _1791 = 0.0;
        _1792 = 0.0;
        _1793 = 0.0;
        _1794 = 0.0;
        _1795 = 0.0;
    }
    bool _1797 = abs(_1615) < 0.89999997615814208984375;
    float _1799 = float(_1797);
    float _1800 = _1797 ? 0.0 : 1.0;
    float _1803 = (_1799 * _1616) - (_1800 * _1615);
    float _1804 = _1800 * _1614;
    float _1806 = (-0.0) - (_1614 * _1799);
    float _1810 = inversesqrt(dot(vec3(_1803, _1804, _1806), vec3(_1803, _1804, _1806)));
    float _1811 = _1803 * _1810;
    float _1812 = _1804 * _1810;
    float _1813 = _1810 * _1806;
    float _1816 = (_1812 * _1616) - (_1813 * _1615);
    float _1819 = (_1813 * _1614) - (_1811 * _1616);
    float _1822 = (_1811 * _1615) - (_1812 * _1614);
    float _1824;
    float _1832;
    float _1823 = 0.0;
    uint _1825 = 0u;
    float _1829;
    bool _1831;
    for (;;)
    {
        _1829 = (float(_1825) + _1658) * 0.03125;
        _1831 = _1825 == 0u;
        float frontier_phi_57_pred;
        if (_1831)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1966;
            float _1967;
            uint _1969;
            _1966 = 0.0;
            _1967 = 0.5;
            _1969 = _1825;
            float _1833;
            for (;;)
            {
                _1833 = ((_1969 & 1u) != 0u) ? (_1967 + _1966) : _1966;
                uint _1970 = _1969 >> 1u;
                if (_1970 == 0u)
                {
                    break;
                }
                else
                {
                    _1966 = _1833;
                    _1967 *= 0.5;
                    _1969 = _1970;
                }
            }
            frontier_phi_57_pred = _1833;
        }
        _1832 = frontier_phi_57_pred;
        float _1834 = _1832 + _1671;
        float _1838 = sqrt(_1829);
        float _1839 = ((_1834 > 1.0) ? (_1834 + (-1.0)) : _1834) * 6.283185482025146484375;
        float _1842 = cos(_1839) * _1838;
        float _1844 = sin(_1839) * _1838;
        float _1846 = sqrt(1.0 - _1829);
        float _1859 = ((_1846 * _1614) + (_1842 * _1816)) + (_1844 * _1811);
        float _1860 = ((_1846 * _1615) + (_1842 * _1819)) + (_1844 * _1812);
        float _1861 = ((_1846 * _1616) + (_1842 * _1822)) + (_1844 * _1813);
        _69._m0 = 1u;
        uvec4 _1865 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1866 = _1865.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1866, _1865.w, _1866, vec3(_1628, _1629, _1630), 9.9999997473787516355514526367188e-05, vec3(_1859, _1860, _1861), 10000.0, 1);
        float _1872 = dot(vec3(_1614, _1615, _1616), vec3(_1859, _1860, _1861));
        float _2233 = isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0));
        float _1875 = isnan(1.0) ? _2233 : (isnan(_2233) ? 1.0 : min(_2233, 1.0));
        _1824 = ((float(_69._m0 == 0u) * _1875) / (_1875 * 0.3183098733425140380859375)) + _1823;
        uint _1826 = _1825 + 1u;
        if (_1826 == 32u)
        {
            break;
        }
        else
        {
            _1823 = _1824;
            _1825 = _1826;
            continue;
        }
    }
    float _1883 = _1824 * 0.009947183541953563690185546875;
    float _1888 = dot(vec3(_1512, _1513, _1514), vec3(_1614, _1615, _1616)) * 2.0;
    vec4 _1902 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1512 - (_1888 * _1614), _1513 - (_1888 * _1615), _1514 - (_1888 * _1616)), 4.0 - (_1577 * 4.0));
    float _1907 = dot(vec3(_1631, _1633, _1634), vec3(_1614, _1615, _1616));
    float _2244 = isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0));
    float _1916 = (exp2(log2(1.0 - (isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1922 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1614, _1615, _1616), 0.0);
    float _1933 = (_1793 + _1790) + (((_1922.x * _1327) + (_1916 * _1902.x)) * _1883);
    float _1937 = (_1794 + _1791) + (((_1922.y * _1328) + (_1916 * _1902.y)) * _1883);
    float _1941 = (_1795 + _1792) + (((_1922.z * _1329) + (_1916 * _1902.z)) * _1883);
    float _2255 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
    float _2266 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
    float _2277 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
    bool _1949 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1960;
    _1960.x = _1949 ? ((_681 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0)));
    _1960.y = _1949 ? ((_684 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2266 : (isnan(_2266) ? 1.0 : min(_2266, 1.0)));
    _1960.z = _1949 ? ((_687 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0)));
    payload._m0 = _1960;
}


