#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1036;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _168;
    uint _170;
    uint _171;
    if (_128.x == 0u)
    {
        uint _136 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_129 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _162 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _163 >> 16u;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _165;
        }
        _168 = frontier_phi_3_2_ladder_2;
        _170 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    uint _179 = _128.w;
    bool _181 = _178 || (_179 == 0u);
    uint _183 = (_176 * _168) + 12u;
    uint _207;
    uint _208;
    uint _209;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
    }
    uint _213 = _175.y;
    bool _214 = _177 == 0u;
    uint _217 = _214 ? 4u : ((_179 != 0u) ? 12u : 8u);
    uvec4 _226 = texelFetch(l_geomAttrib_1, int((((_213 * _168) + 4u) + (_178 ? (_217 + 4u) : _217)) >> 2u));
    uint _227 = _226.x;
    float _231 = float(int(uint(int(_227 << 16u) >> int(16u))));
    float _232 = float(int(uint(int(_227) >> int(16u))));
    uint _234 = (_176 * _170) + 12u;
    uint _256;
    uint _257;
    uint _258;
    if (_181)
    {
        uvec4 _237 = texelFetch(l_geomAttrib_0, int(_234 >> 2u));
        uint _238 = _237.x;
        _256 = _238 & 255u;
        _257 = (_238 >> 8u) & 255u;
        _258 = (_238 >> 16u) & 255u;
    }
    else
    {
        uint _244 = _234 >> 2u;
        uvec2 _250 = uvec2(texelFetch(l_geomAttrib_0, int(_244)).x, texelFetch(l_geomAttrib_0, int(_244 + 1u)).x);
        uint _251 = _250.x;
        _256 = _251 & 65535u;
        _257 = _251 >> 16u;
        _258 = _250.y & 65535u;
    }
    uint _264 = _214 ? 4u : ((_179 != 0u) ? 12u : 8u);
    uvec4 _271 = texelFetch(l_geomAttrib_1, int((((_213 * _170) + 4u) + (_178 ? (_264 + 4u) : _264)) >> 2u));
    uint _272 = _271.x;
    float _276 = float(int(uint(int(_272 << 16u) >> int(16u))));
    float _277 = float(int(uint(int(_272) >> int(16u))));
    uint _279 = (_176 * _171) + 12u;
    uint _301;
    uint _302;
    uint _303;
    if (_181)
    {
        uvec4 _282 = texelFetch(l_geomAttrib_0, int(_279 >> 2u));
        uint _283 = _282.x;
        _301 = _283 & 255u;
        _302 = (_283 >> 8u) & 255u;
        _303 = (_283 >> 16u) & 255u;
    }
    else
    {
        uint _289 = _279 >> 2u;
        uvec2 _295 = uvec2(texelFetch(l_geomAttrib_0, int(_289)).x, texelFetch(l_geomAttrib_0, int(_289 + 1u)).x);
        uint _296 = _295.x;
        _301 = _296 & 65535u;
        _302 = _296 >> 16u;
        _303 = _295.y & 65535u;
    }
    uint _309 = _214 ? 4u : ((_179 != 0u) ? 12u : 8u);
    uvec4 _316 = texelFetch(l_geomAttrib_1, int((((_213 * _171) + 4u) + (_178 ? (_309 + 4u) : _309)) >> 2u));
    uint _317 = _316.x;
    float _321 = float(int(uint(int(_317 << 16u) >> int(16u))));
    float _322 = float(int(uint(int(_317) >> int(16u))));
    bool _324 = _128.z == 0u;
    float _360;
    float _361;
    float _362;
    if (_324)
    {
        uint _327 = _168 * 3u;
        uvec3 _336 = uvec3(texelFetch(l_geomPositionBuffer, int(_327)).x, texelFetch(l_geomPositionBuffer, int(_327 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_327 + 2u)).x);
        _360 = uintBitsToFloat(_336.x);
        _361 = uintBitsToFloat(_336.y);
        _362 = uintBitsToFloat(_336.z);
    }
    else
    {
        uint _344 = _168 * 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomPositionBuffer, int(_344)).x, texelFetch(l_geomPositionBuffer, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _360 = unpackHalf2x16(_351).x;
        _361 = unpackHalf2x16(_351 >> 16u).x;
        _362 = unpackHalf2x16(_350.y).x;
    }
    float _398;
    float _399;
    float _400;
    if (_324)
    {
        uint _365 = _170 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _170 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_324)
    {
        uint _403 = _171 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _171 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _441 = (1.0 - hit._m0.x) - hit._m0.y;
    float _463 = (_276 - _231) * 0.00048828125;
    float _465 = (_277 - _232) * 0.00048828125;
    float _468 = (_321 - _231) * 0.00048828125;
    float _469 = (_322 - _232) * 0.00048828125;
    float _491 = _398 - _360;
    float _492 = _399 - _361;
    float _493 = _400 - _362;
    float _496 = fma(_493, gl_ObjectToWorldEXT[2u].x, fma(_492, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _491));
    float _499 = fma(_493, gl_ObjectToWorldEXT[2u].y, fma(_492, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _491));
    float _502 = fma(_493, gl_ObjectToWorldEXT[2u].z, fma(_492, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _491));
    float _503 = _436 - _360;
    float _504 = _437 - _361;
    float _505 = _438 - _362;
    float _508 = fma(_505, gl_ObjectToWorldEXT[2u].x, fma(_504, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _503));
    float _511 = fma(_505, gl_ObjectToWorldEXT[2u].y, fma(_504, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _503));
    float _514 = fma(_505, gl_ObjectToWorldEXT[2u].z, fma(_504, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _503));
    float _515 = (((_276 * hit._m0.x) + (_231 * _441)) + (_321 * hit._m0.y)) * 0.00048828125;
    float _516 = (((_277 * hit._m0.x) + (_232 * _441)) + (_322 * hit._m0.y)) * 0.00048828125;
    float _520 = (((float(_207) * _441) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _523 = (((float(_208) * _441) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _526 = (((float(_209) * _441) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _527 = _520 * 0.0078740157186985015869140625;
    float _529 = _523 * 0.0078740157186985015869140625;
    float _530 = _526 * 0.0078740157186985015869140625;
    uvec2 _557 = uvec2(textureSize(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_0, int(0u)));
    bool _562 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _615;
    if (_562)
    {
        float _573 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _579 = (_514 * _499) - (_511 * _502);
        float _582 = (_508 * _502) - (_514 * _496);
        float _585 = (_511 * _496) - (_508 * _499);
        float _612 = ((log2((((float(_557.y) * 0.5) * float(_557.x)) * abs((_469 * _463) - (_468 * _465))) / (sqrt(((_582 * _582) + (_585 * _585)) + (_579 * _579)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_573 * gl_WorldRayDirectionEXT.x, _573 * gl_WorldRayDirectionEXT.y, _573 * gl_WorldRayDirectionEXT.z), vec3(_527, _529, _530))));
        _615 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    }
    else
    {
        _615 = 0.0;
    }
    vec4 _619 = textureLod(sampler2D(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + _515) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _615);
    float _624 = _619.x * cbMtdParam._m0[9u].x;
    float _625 = _619.y * cbMtdParam._m0[9u].y;
    float _626 = _619.z * cbMtdParam._m0[9u].z;
    uvec2 _650 = uvec2(textureSize(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_1, int(0u)));
    float _654 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _655 = _654 * gl_WorldRayDirectionEXT.x;
    float _656 = _654 * gl_WorldRayDirectionEXT.y;
    float _657 = _654 * gl_WorldRayDirectionEXT.z;
    float _701;
    if (_562)
    {
        float _667 = (_514 * _499) - (_511 * _502);
        float _670 = (_508 * _502) - (_514 * _496);
        float _673 = (_511 * _496) - (_508 * _499);
        float _699 = ((log2((((float(_650.y) * 0.5) * float(_650.x)) * abs((_469 * _463) - (_468 * _465))) / (sqrt(((_670 * _670) + (_673 * _673)) + (_667 * _667)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_655, _656, _657), vec3(_527, _529, _530))));
        _701 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    }
    else
    {
        _701 = 0.0;
    }
    vec4 _703 = textureLod(sampler2D(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + _515) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _701);
    float _714 = inversesqrt(dot(vec3(_527, _529, _530), vec3(_527, _529, _530)));
    float _715 = _714 * _527;
    float _716 = _714 * _529;
    float _717 = _714 * _530;
    float _729 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _730 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _731 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _732 = (-0.0) - _655;
    float _734 = (-0.0) - _656;
    float _735 = (-0.0) - _657;
    float _741 = float(gl_LaunchIDEXT.x);
    float _742 = float(gl_LaunchIDEXT.y);
    float _745 = float(gl_LaunchSizeEXT.x);
    float _759 = fract(fract(sin(dot(vec2(_741 / _745, _742 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _772 = fract(fract(sin(dot(vec2((_741 + 128.0) / _745, (_742 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _782 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _783 = _782.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _783, _782.w, _783, vec3(_729, _730, _731), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _863;
    float _864;
    float _865;
    float _866;
    float _867;
    float _868;
    if (_66._m0 == 0u)
    {
        float _804 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_715, _716, _717));
        float _1104 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
        float _807 = isnan(1.0) ? _1104 : (isnan(_1104) ? 1.0 : min(_1104, 1.0));
        float _818 = g_sceneCB._m0[4u].x - _655;
        float _819 = g_sceneCB._m0[4u].y - _656;
        float _820 = g_sceneCB._m0[4u].z - _657;
        float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
        float _828 = dot(vec3(_715, _716, _717), vec3(g_sceneCB._m0[4u].xyz));
        float _1115 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
        float _831 = isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0));
        float _832 = dot(vec3(_715, _716, _717), vec3(_732, _734, _735));
        float _1126 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _836 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_818 * _824, _819 * _824, _820 * _824));
        float _1137 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _847 = (exp2(log2(1.0 - (isnan(1.0) ? _1137 : (isnan(_1137) ? 1.0 : min(_1137, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _853 = (0.5 / ((_831 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0))))) * _831;
        float _1148 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        float _855 = (isnan(1.0) ? _1148 : (isnan(_1148) ? 1.0 : min(_1148, 1.0))) * 0.31831014156341552734375;
        _863 = ((_624 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _807;
        _864 = ((_625 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _807;
        _865 = ((_626 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _807;
        _866 = (_847 * g_sceneCB._m0[5u].x) * _855;
        _867 = (_847 * g_sceneCB._m0[5u].y) * _855;
        _868 = (_847 * g_sceneCB._m0[5u].z) * _855;
    }
    else
    {
        _863 = 0.0;
        _864 = 0.0;
        _865 = 0.0;
        _866 = 0.0;
        _867 = 0.0;
        _868 = 0.0;
    }
    bool _870 = abs(_716) < 0.89999997615814208984375;
    float _872 = float(_870);
    float _873 = _870 ? 0.0 : 1.0;
    float _876 = (_872 * _717) - (_873 * _716);
    float _877 = _873 * _715;
    float _879 = (-0.0) - (_715 * _872);
    float _883 = inversesqrt(dot(vec3(_876, _877, _879), vec3(_876, _877, _879)));
    float _884 = _876 * _883;
    float _885 = _877 * _883;
    float _886 = _883 * _879;
    float _889 = (_885 * _717) - (_886 * _716);
    float _892 = (_886 * _715) - (_884 * _717);
    float _895 = (_884 * _716) - (_885 * _715);
    float _897;
    float _905;
    float _896 = 0.0;
    uint _898 = 0u;
    float _902;
    bool _904;
    for (;;)
    {
        _902 = (float(_898) + _759) * 0.03125;
        _904 = _898 == 0u;
        float frontier_phi_31_pred;
        if (_904)
        {
            frontier_phi_31_pred = 0.0;
        }
        else
        {
            float _1041;
            float _1042;
            uint _1044;
            _1041 = 0.0;
            _1042 = 0.5;
            _1044 = _898;
            float _906;
            for (;;)
            {
                _906 = ((_1044 & 1u) != 0u) ? (_1042 + _1041) : _1041;
                uint _1045 = _1044 >> 1u;
                if (_1045 == 0u)
                {
                    break;
                }
                else
                {
                    _1041 = _906;
                    _1042 *= 0.5;
                    _1044 = _1045;
                }
            }
            frontier_phi_31_pred = _906;
        }
        _905 = frontier_phi_31_pred;
        float _907 = _905 + _772;
        float _912 = sqrt(_902);
        float _913 = ((_907 > 1.0) ? (_907 + (-1.0)) : _907) * 6.283185482025146484375;
        float _916 = cos(_913) * _912;
        float _918 = sin(_913) * _912;
        float _920 = sqrt(1.0 - _902);
        float _933 = ((_920 * _715) + (_916 * _889)) + (_918 * _884);
        float _934 = ((_920 * _716) + (_916 * _892)) + (_918 * _885);
        float _935 = ((_920 * _717) + (_916 * _895)) + (_918 * _886);
        _65._m0 = 1u;
        uvec4 _939 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _940 = _939.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _940, _939.w, _940, vec3(_729, _730, _731), 9.9999997473787516355514526367188e-05, vec3(_933, _934, _935), 10000.0, 1);
        float _946 = dot(vec3(_715, _716, _717), vec3(_933, _934, _935));
        float _1159 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _949 = isnan(1.0) ? _1159 : (isnan(_1159) ? 1.0 : min(_1159, 1.0));
        _897 = ((float(_65._m0 == 0u) * _949) / (_949 * 0.3183098733425140380859375)) + _896;
        uint _899 = _898 + 1u;
        if (_899 == 32u)
        {
            break;
        }
        else
        {
            _896 = _897;
            _898 = _899;
            continue;
        }
    }
    float _957 = _897 * 0.009947183541953563690185546875;
    float _962 = dot(vec3(_655, _656, _657), vec3(_715, _716, _717)) * 2.0;
    vec4 _974 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_655 - (_962 * _715), _656 - (_962 * _716), _657 - (_962 * _717)), 4.0);
    float _979 = dot(vec3(_732, _734, _735), vec3(_715, _716, _717));
    float _1170 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _988 = (exp2(log2(1.0 - (isnan(1.0) ? _1170 : (isnan(_1170) ? 1.0 : min(_1170, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _994 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_715, _716, _717), 0.0);
    float _1006 = ((_863 + (_703.x * cbMtdParam._m0[10u].x)) + _866) + (((_994.x * _624) + (_988 * _974.x)) * _957);
    float _1011 = ((_864 + (_703.y * cbMtdParam._m0[10u].y)) + _867) + (((_994.y * _625) + (_988 * _974.y)) * _957);
    float _1016 = ((_865 + (_703.z * cbMtdParam._m0[10u].z)) + _868) + (((_994.z * _626) + (_988 * _974.z)) * _957);
    float _1181 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1192 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1203 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    bool _1024 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1035;
    _1035.x = _1024 ? ((_520 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1181 : (isnan(_1181) ? 1.0 : min(_1181, 1.0)));
    _1035.y = _1024 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1192 : (isnan(_1192) ? 1.0 : min(_1192, 1.0)));
    _1035.z = _1024 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1203 : (isnan(_1203) ? 1.0 : min(_1203, 1.0)));
    payload._m0 = _1035;
}


