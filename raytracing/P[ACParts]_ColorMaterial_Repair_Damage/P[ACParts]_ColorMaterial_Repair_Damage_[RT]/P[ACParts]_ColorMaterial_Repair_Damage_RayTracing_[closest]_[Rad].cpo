#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _73
{
    vec3 _m0;
};

struct _77
{
    vec2 _m0;
};

struct _91
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[44];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _73 payload;
hitAttributeEXT _77 hit;
layout(location = 1) rayPayloadEXT _91 _93;
layout(location = 2) rayPayloadEXT _91 _94;

vec3 _2432;

void main()
{
    float _108 = float(gl_LaunchSizeEXT.y);
    float _136 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _137 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _138 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _145 = sqrt(((_137 * _137) + (_136 * _136)) + (_138 * _138)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _108)))));
    uvec4 _156 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _157 = _156.y;
    uint _196;
    uint _198;
    uint _199;
    if (_156.x == 0u)
    {
        uint _165 = (_157 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _174 = uvec3(texelFetch(l_geomIndexBuffer, int(_165)).x, texelFetch(l_geomIndexBuffer, int(_165 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_165 + 2u)).x);
        _196 = _174.x;
        _198 = _174.y;
        _199 = _174.z;
    }
    else
    {
        uint _178 = uint(gl_PrimitiveID) * 6u;
        uint _179 = _178 & 4294967292u;
        uint _182 = (_157 + _179) >> 2u;
        uvec2 _189 = uvec2(texelFetch(l_geomIndexBuffer, int(_182)).x, texelFetch(l_geomIndexBuffer, int(_182 + 1u)).x);
        uint _190 = _189.x;
        uint _191 = _189.y;
        uint _193 = _190 >> 16u;
        uint _194 = _191 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_179 == _178)
        {
            frontier_phi_3_2_ladder = _193;
            frontier_phi_3_2_ladder_1 = _190 & 65535u;
            frontier_phi_3_2_ladder_2 = _194;
        }
        else
        {
            frontier_phi_3_2_ladder = _194;
            frontier_phi_3_2_ladder_1 = _193;
            frontier_phi_3_2_ladder_2 = _191 >> 16u;
        }
        _196 = frontier_phi_3_2_ladder_1;
        _198 = frontier_phi_3_2_ladder;
        _199 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _203 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _204 = _203.x;
    uint _205 = _204 * _196;
    uint _207 = _205 >> 2u;
    uvec2 _213 = uvec2(texelFetch(l_geomAttrib_0, int(_207)).x, texelFetch(l_geomAttrib_0, int(_207 + 1u)).x);
    uint _218 = _203.z;
    bool _219 = _218 != 0u;
    bool _221 = _156.w == 0u;
    bool _222 = _219 || _221;
    uint _223 = _205 + 12u;
    uint _246;
    uint _247;
    uint _248;
    uint _249;
    if (_222)
    {
        uvec4 _225 = texelFetch(l_geomAttrib_0, int(_223 >> 2u));
        uint _226 = _225.x;
        _246 = _226 & 255u;
        _247 = (_226 >> 8u) & 255u;
        _248 = (_226 >> 16u) & 255u;
        _249 = 16u;
    }
    else
    {
        uint _234 = _223 >> 2u;
        uvec2 _240 = uvec2(texelFetch(l_geomAttrib_0, int(_234)).x, texelFetch(l_geomAttrib_0, int(_234 + 1u)).x);
        uint _241 = _240.x;
        _246 = _241 & 65535u;
        _247 = _241 >> 16u;
        _248 = _240.y & 65535u;
        _249 = 20u;
    }
    uvec4 _256 = texelFetch(l_geomAttrib_0, int((_249 + _205) >> 2u));
    uint _257 = _256.x;
    bool _271 = _218 == 0u;
    uint _272;
    if (_271)
    {
        _272 = _249 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_221)
        {
            frontier_phi_9_10_ladder = _249 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _249 + 12u;
        }
        _272 = frontier_phi_9_10_ladder;
    }
    uint _276 = _219 ? (_272 + 4u) : _272;
    uvec4 _280 = texelFetch(l_geomAttrib_0, int(((_205 + 4u) + _276) >> 2u));
    uint _281 = _280.x;
    float _285 = float(int(uint(int(_281 << 16u) >> int(16u))));
    float _286 = float(int(uint(int(_281) >> int(16u))));
    uint _294 = _204 * _198;
    uint _295 = _294 >> 2u;
    uvec2 _301 = uvec2(texelFetch(l_geomAttrib_0, int(_295)).x, texelFetch(l_geomAttrib_0, int(_295 + 1u)).x);
    uint _306 = _294 + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_222)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 16u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 20u;
    }
    uvec4 _336 = texelFetch(l_geomAttrib_0, int((_330 + _294) >> 2u));
    uint _337 = _336.x;
    uint _349;
    if (_271)
    {
        _349 = _330 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_221)
        {
            frontier_phi_16_17_ladder = _330 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _330 + 12u;
        }
        _349 = frontier_phi_16_17_ladder;
    }
    uint _353 = _219 ? (_349 + 4u) : _349;
    uvec4 _357 = texelFetch(l_geomAttrib_0, int(((_294 + 4u) + _353) >> 2u));
    uint _358 = _357.x;
    float _362 = float(int(uint(int(_358 << 16u) >> int(16u))));
    float _363 = float(int(uint(int(_358) >> int(16u))));
    uint _371 = _204 * _199;
    uint _372 = _371 >> 2u;
    uvec2 _378 = uvec2(texelFetch(l_geomAttrib_0, int(_372)).x, texelFetch(l_geomAttrib_0, int(_372 + 1u)).x);
    uint _383 = _371 + 12u;
    uint _404;
    uint _405;
    uint _406;
    uint _407;
    if (_222)
    {
        uvec4 _385 = texelFetch(l_geomAttrib_0, int(_383 >> 2u));
        uint _386 = _385.x;
        _404 = _386 & 255u;
        _405 = (_386 >> 8u) & 255u;
        _406 = (_386 >> 16u) & 255u;
        _407 = 16u;
    }
    else
    {
        uint _392 = _383 >> 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomAttrib_0, int(_392)).x, texelFetch(l_geomAttrib_0, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _404 = _399 & 65535u;
        _405 = _399 >> 16u;
        _406 = _398.y & 65535u;
        _407 = 20u;
    }
    uvec4 _413 = texelFetch(l_geomAttrib_0, int((_407 + _371) >> 2u));
    uint _414 = _413.x;
    uint _426;
    if (_271)
    {
        _426 = _407 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_221)
        {
            frontier_phi_23_24_ladder = _407 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _407 + 12u;
        }
        _426 = frontier_phi_23_24_ladder;
    }
    uint _430 = _219 ? (_426 + 4u) : _426;
    uvec4 _434 = texelFetch(l_geomAttrib_0, int(((_371 + 4u) + _430) >> 2u));
    uint _435 = _434.x;
    float _439 = float(int(uint(int(_435 << 16u) >> int(16u))));
    float _440 = float(int(uint(int(_435) >> int(16u))));
    bool _449 = _156.z == 0u;
    float _485;
    float _486;
    float _487;
    if (_449)
    {
        uint _452 = _196 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _196 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _523;
    float _524;
    float _525;
    if (_449)
    {
        uint _490 = _198 * 3u;
        uvec3 _499 = uvec3(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_490 + 2u)).x);
        _523 = uintBitsToFloat(_499.x);
        _524 = uintBitsToFloat(_499.y);
        _525 = uintBitsToFloat(_499.z);
    }
    else
    {
        uint _507 = _198 * 2u;
        uvec2 _513 = uvec2(texelFetch(l_geomPositionBuffer, int(_507)).x, texelFetch(l_geomPositionBuffer, int(_507 + 1u)).x);
        uint _514 = _513.x;
        _523 = unpackHalf2x16(_514).x;
        _524 = unpackHalf2x16(_514 >> 16u).x;
        _525 = unpackHalf2x16(_513.y).x;
    }
    float _561;
    float _562;
    float _563;
    if (_449)
    {
        uint _528 = _199 * 3u;
        uvec3 _537 = uvec3(texelFetch(l_geomPositionBuffer, int(_528)).x, texelFetch(l_geomPositionBuffer, int(_528 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_528 + 2u)).x);
        _561 = uintBitsToFloat(_537.x);
        _562 = uintBitsToFloat(_537.y);
        _563 = uintBitsToFloat(_537.z);
    }
    else
    {
        uint _545 = _199 * 2u;
        uvec2 _551 = uvec2(texelFetch(l_geomPositionBuffer, int(_545)).x, texelFetch(l_geomPositionBuffer, int(_545 + 1u)).x);
        uint _552 = _551.x;
        _561 = unpackHalf2x16(_552).x;
        _562 = unpackHalf2x16(_552 >> 16u).x;
        _563 = unpackHalf2x16(_551.y).x;
    }
    float _566 = (1.0 - hit._m0.x) - hit._m0.y;
    float _576 = ((uintBitsToFloat(_301.y) * hit._m0.x) + (uintBitsToFloat(_213.y) * _566)) + (uintBitsToFloat(_378.y) * hit._m0.y);
    float _617 = (_362 - _285) * 0.00048828125;
    float _619 = (_363 - _286) * 0.00048828125;
    float _622 = (_439 - _285) * 0.00048828125;
    float _623 = (_440 - _286) * 0.00048828125;
    float _645 = _523 - _485;
    float _646 = _524 - _486;
    float _647 = _525 - _487;
    float _650 = fma(_647, gl_ObjectToWorldEXT[2u].x, fma(_646, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _645));
    float _653 = fma(_647, gl_ObjectToWorldEXT[2u].y, fma(_646, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _645));
    float _656 = fma(_647, gl_ObjectToWorldEXT[2u].z, fma(_646, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _645));
    float _657 = _561 - _485;
    float _658 = _562 - _486;
    float _659 = _563 - _487;
    float _662 = fma(_659, gl_ObjectToWorldEXT[2u].x, fma(_658, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _657));
    float _665 = fma(_659, gl_ObjectToWorldEXT[2u].y, fma(_658, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _657));
    float _668 = fma(_659, gl_ObjectToWorldEXT[2u].z, fma(_658, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _657));
    float _669 = (((_362 * hit._m0.x) + (_285 * _566)) + (_439 * hit._m0.y)) * 0.00048828125;
    float _670 = (((_363 * hit._m0.x) + (_286 * _566)) + (_440 * hit._m0.y)) * 0.00048828125;
    float _674 = (((float(_246) * _566) + (-127.0)) + (float(_327) * hit._m0.x)) + (float(_404) * hit._m0.y);
    float _677 = (((float(_247) * _566) + (-127.0)) + (float(_328) * hit._m0.x)) + (float(_405) * hit._m0.y);
    float _680 = (((float(_248) * _566) + (-127.0)) + (float(_329) * hit._m0.x)) + (float(_406) * hit._m0.y);
    float _681 = _674 * 0.0078740157186985015869140625;
    float _683 = _677 * 0.0078740157186985015869140625;
    float _684 = _680 * 0.0078740157186985015869140625;
    float _697 = ((((float(_257 & 255u) * _566) + (-127.0)) + (float(_337 & 255u) * hit._m0.x)) + (float(_414 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((((float((_257 >> 8u) & 255u) * _566) + (-127.0)) + (float((_337 >> 8u) & 255u) * hit._m0.x)) + (float((_414 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _699 = ((((float((_257 >> 16u) & 255u) * _566) + (-127.0)) + (float((_337 >> 16u) & 255u) * hit._m0.x)) + (float((_414 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _700 = ((((float(_257 >> 24u) * _566) + (-127.0)) + (float(_337 >> 24u) * hit._m0.x)) + (float(_414 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _710 = ((_698 * _684) - (_699 * _683)) * _700;
    float _711 = ((_699 * _681) - (_697 * _684)) * _700;
    float _712 = ((_697 * _683) - (_698 * _681)) * _700;
    float _716 = inversesqrt(dot(vec3(_710, _711, _712), vec3(_710, _711, _712)));
    uvec2 _737 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0, int(0u)));
    bool _742 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _795;
    if (_742)
    {
        float _753 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _759 = (_668 * _653) - (_665 * _656);
        float _762 = (_662 * _656) - (_668 * _650);
        float _765 = (_665 * _650) - (_662 * _653);
        float _792 = ((log2((((float(_737.y) * 0.5) * float(_737.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_762 * _762) + (_765 * _765)) + (_759 * _759)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_753 * gl_WorldRayDirectionEXT.x, _753 * gl_WorldRayDirectionEXT.y, _753 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _795 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    }
    else
    {
        _795 = 0.0;
    }
    vec4 _799 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _669) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _670) + cbTextureTilingScale._m0[0u].w), _795);
    float _803 = _799.z;
    float _804 = _799.w;
    uvec2 _826 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7, int(0u)));
    float _877;
    if (_742)
    {
        float _837 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _843 = (_668 * _653) - (_665 * _656);
        float _846 = (_662 * _656) - (_668 * _650);
        float _849 = (_665 * _650) - (_662 * _653);
        float _875 = ((log2((((float(_826.y) * 0.5) * float(_826.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_846 * _846) + (_849 * _849)) + (_843 * _843)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_837 * gl_WorldRayDirectionEXT.x, _837 * gl_WorldRayDirectionEXT.y, _837 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _877 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    }
    else
    {
        _877 = 0.0;
    }
    vec4 _880 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _669) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _670) + cbTextureTilingScale._m0[11u].w), _877);
    float _885 = _880.w;
    float _896 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].x * _803) * exp2(log2(1.0 - _885) * cbMtdParam._m0[36u].x))) * exp2(log2(cbMtdParam._m0[34u].y))) * cbMtdParam._m0[34u].w);
    float _897 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _898 = isnan(1.0) ? _897 : (isnan(_897) ? 1.0 : min(_897, 1.0));
    uvec2 _912 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11, int(0u)));
    float _963;
    if (_742)
    {
        float _923 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _929 = (_668 * _653) - (_665 * _656);
        float _932 = (_662 * _656) - (_668 * _650);
        float _935 = (_665 * _650) - (_662 * _653);
        float _961 = ((log2((((float(_912.y) * 0.5) * float(_912.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_932 * _932) + (_935 * _935)) + (_929 * _929)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_923 * gl_WorldRayDirectionEXT.x, _923 * gl_WorldRayDirectionEXT.y, _923 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _963 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    }
    else
    {
        _963 = 0.0;
    }
    vec4 _965 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _669) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _670) + cbTextureTilingScale._m0[2u].w), _963);
    float _975 = ((((float(texelFetch(l_geomAttrib_0, int(((_294 + 12u) + _353) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_205 + 12u) + _276) >> 2u)).x & 255u) * _566)) + (float(texelFetch(l_geomAttrib_0, int(((_371 + 12u) + _430) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[31u].x;
    float _983 = (_975 - (((_965.w + 0.00999999977648258209228515625) * cbMtdParam._m0[36u].z) * (1.0 - _975))) * (cbMtdParam._m0[36u].w + 1.0);
    float _2555 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _984 = isnan(1.0) ? _2555 : (isnan(_2555) ? 1.0 : min(_2555, 1.0));
    float _986 = _898 - (_984 * _898);
    float _987 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    uvec2 _1000 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14, int(0u)));
    float _1051;
    if (_742)
    {
        float _1011 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1017 = (_668 * _653) - (_665 * _656);
        float _1020 = (_662 * _656) - (_668 * _650);
        float _1023 = (_665 * _650) - (_662 * _653);
        float _1049 = ((log2((((float(_1000.y) * 0.5) * float(_1000.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1020 * _1020) + (_1023 * _1023)) + (_1017 * _1017)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1011 * gl_WorldRayDirectionEXT.x, _1011 * gl_WorldRayDirectionEXT.y, _1011 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1051 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    }
    else
    {
        _1051 = 0.0;
    }
    vec4 _1054 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _669) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _670) + cbTextureTilingScale._m0[3u].w), _1051);
    float _1057 = _1054.y;
    float _1058 = _1057 * (isnan(1.0) ? _987 : (isnan(_987) ? 1.0 : min(_987, 1.0)));
    float _1067 = exp2(log2(cbMtdParam._m0[32u].w * _885) * cbMtdParam._m0[31u].z);
    float _1069 = _1067 - (_984 * _1067);
    float _1070 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _1071 = isnan(1.0) ? _1070 : (isnan(_1070) ? 1.0 : min(_1070, 1.0));
    float _1082 = 1.0 - (cbMtdParam._m0[37u].y * exp2(log2(_804) * 4.5));
    float _1091 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].z * _803) * _1082)) * cbMtdParam._m0[35u].x) * cbMtdParam._m0[35u].y);
    float _1092 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _1093 = isnan(1.0) ? _1092 : (isnan(_1092) ? 1.0 : min(_1092, 1.0));
    float _1104 = exp2(log2((1.0 - (((_1082 * _1082) * _803) * cbMtdParam._m0[36u].y)) * cbMtdParam._m0[35u].w) * cbMtdParam._m0[35u].z);
    float _1105 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1109 = (((isnan(1.0) ? _1105 : (isnan(_1105) ? 1.0 : min(_1105, 1.0))) - _804) * _1057) + _804;
    uvec2 _1121 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19, int(0u)));
    float _1172;
    if (_742)
    {
        float _1132 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1138 = (_668 * _653) - (_665 * _656);
        float _1141 = (_662 * _656) - (_668 * _650);
        float _1144 = (_665 * _650) - (_662 * _653);
        float _1170 = ((log2((((float(_1121.y) * 0.5) * float(_1121.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1141 * _1141) + (_1144 * _1144)) + (_1138 * _1138)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1132 * gl_WorldRayDirectionEXT.x, _1132 * gl_WorldRayDirectionEXT.y, _1132 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1172 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
    }
    else
    {
        _1172 = 0.0;
    }
    vec4 _1174 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _669) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _670) + cbTextureTilingScale._m0[5u].w), _1172);
    float _1187 = (_1054.x + (-0.02500000037252902984619140625)) * 8.0;
    float _1189 = roundEven(_1187);
    float _1190 = cbMtdParam._m0[10u].x * _1174.x;
    float _1191 = cbMtdParam._m0[10u].y * _1174.y;
    float _1192 = cbMtdParam._m0[10u].z * _1174.z;
    uvec2 _1204 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1, int(0u)));
    float _1255;
    if (_742)
    {
        float _1215 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1221 = (_668 * _653) - (_665 * _656);
        float _1224 = (_662 * _656) - (_668 * _650);
        float _1227 = (_665 * _650) - (_662 * _653);
        float _1253 = ((log2((((float(_1204.y) * 0.5) * float(_1204.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1224 * _1224) + (_1227 * _1227)) + (_1221 * _1221)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1215 * gl_WorldRayDirectionEXT.x, _1215 * gl_WorldRayDirectionEXT.y, _1215 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1255 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
    }
    else
    {
        _1255 = 0.0;
    }
    vec4 _1257 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _669) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _670) + cbTextureTilingScale._m0[1u].w), _1255);
    float _1268 = cbMtdParam._m0[9u].x * _1257.x;
    float _1269 = cbMtdParam._m0[9u].y * _1257.y;
    float _1270 = cbMtdParam._m0[9u].z * _1257.z;
    float _1277 = ((_1268 - _1190) * _1109) + _1190;
    float _1278 = ((_1269 - _1191) * _1109) + _1191;
    float _1279 = ((_1270 - _1192) * _1109) + _1192;
    uvec2 _1291 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2, int(0u)));
    float _1342;
    if (_742)
    {
        float _1302 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1308 = (_668 * _653) - (_665 * _656);
        float _1311 = (_662 * _656) - (_668 * _650);
        float _1314 = (_665 * _650) - (_662 * _653);
        float _1340 = ((log2((((float(_1291.y) * 0.5) * float(_1291.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1311 * _1311) + (_1314 * _1314)) + (_1308 * _1308)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1302 * gl_WorldRayDirectionEXT.x, _1302 * gl_WorldRayDirectionEXT.y, _1302 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1342 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
    }
    else
    {
        _1342 = 0.0;
    }
    vec4 _1344 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _669) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _670) + cbTextureTilingScale._m0[6u].w), _1342);
    float _1363 = (((cbMtdParam._m0[20u].x * _1344.x) - _1277) * _1093) + _1277;
    float _1364 = (((cbMtdParam._m0[20u].y * _1344.y) - _1278) * _1093) + _1278;
    float _1365 = (((cbMtdParam._m0[20u].z * _1344.z) - _1279) * _1093) + _1279;
    uvec2 _1377 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4, int(0u)));
    float _1428;
    if (_742)
    {
        float _1388 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1394 = (_668 * _653) - (_665 * _656);
        float _1397 = (_662 * _656) - (_668 * _650);
        float _1400 = (_665 * _650) - (_662 * _653);
        float _1426 = ((log2((((float(_1377.y) * 0.5) * float(_1377.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1397 * _1397) + (_1400 * _1400)) + (_1394 * _1394)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1388 * gl_WorldRayDirectionEXT.x, _1388 * gl_WorldRayDirectionEXT.y, _1388 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1428 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    }
    else
    {
        _1428 = 0.0;
    }
    vec4 _1430 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _669) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _670) + cbTextureTilingScale._m0[9u].w), _1428);
    float _1450 = (((cbMtdParam._m0[29u].x * _1430.x) - _1363) * _1071) + _1363;
    float _1451 = (((cbMtdParam._m0[29u].y * _1430.y) - _1364) * _1071) + _1364;
    float _1452 = (((cbMtdParam._m0[29u].z * _1430.z) - _1365) * _1071) + _1365;
    float _88[6];
    float _89[6];
    float _90[6];
    _88[0u] = cbMtdParam._m0[30u].x;
    _89[0u] = cbMtdParam._m0[30u].y;
    _90[0u] = cbMtdParam._m0[30u].z;
    _88[1u] = cbMtdParam._m0[28u].x;
    _89[1u] = cbMtdParam._m0[28u].y;
    _90[1u] = cbMtdParam._m0[28u].z;
    _88[2u] = cbMtdParam._m0[27u].x;
    _89[2u] = cbMtdParam._m0[27u].y;
    _90[2u] = cbMtdParam._m0[27u].z;
    _88[3u] = cbMtdParam._m0[26u].x;
    _89[3u] = cbMtdParam._m0[26u].y;
    _90[3u] = cbMtdParam._m0[26u].z;
    _88[4u] = cbMtdParam._m0[25u].x;
    _89[4u] = cbMtdParam._m0[25u].y;
    _90[4u] = cbMtdParam._m0[25u].z;
    _88[5u] = cbMtdParam._m0[24u].x;
    _89[5u] = cbMtdParam._m0[24u].y;
    _90[5u] = cbMtdParam._m0[24u].z;
    float _1521 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
    uint _1524 = uint(int(isnan(5.0) ? _1521 : (isnan(_1521) ? 5.0 : min(_1521, 5.0))));
    float _1531 = _88[_1524] * _1057;
    float _1532 = _89[_1524] * _1057;
    float _1533 = _90[_1524] * _1057;
    float _1534 = _1531 + ((_880.x * 4.5) * (((_1268 - _1450) * _1058) + _1450));
    float _1535 = _1532 + ((_880.y * 4.5) * (((_1269 - _1451) * _1058) + _1451));
    float _1536 = _1533 + ((_880.z * 4.5) * (((_1270 - _1452) * _1058) + _1452));
    float _83[5];
    float _84[5];
    _83[0u] = cbMtdParam._m0[37u].w;
    _84[0u] = cbMtdParam._m0[38u].x;
    _83[1u] = cbMtdParam._m0[39u].w;
    _84[1u] = cbMtdParam._m0[40u].x;
    _83[2u] = cbMtdParam._m0[40u].y;
    _84[2u] = cbMtdParam._m0[40u].z;
    _83[3u] = cbMtdParam._m0[40u].w;
    _84[3u] = cbMtdParam._m0[41u].x;
    _83[4u] = cbMtdParam._m0[41u].y;
    _84[4u] = cbMtdParam._m0[41u].z;
    float _1570 = roundEven(5.0 - _1187);
    float _1571 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
    float _1572 = isnan(4.0) ? _1571 : (isnan(_1571) ? 4.0 : min(_1571, 4.0));
    float _1574 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
    uint _1576 = uint(int(isnan(4.0) ? _1574 : (isnan(_1574) ? 4.0 : min(_1574, 4.0))));
    float _1588 = ((cbMtdParam._m0[42u].z - _84[_1576]) * _1109) + _84[_1576];
    float _1596 = ((cbMtdParam._m0[43u].x - _1588) * _1093) + _1588;
    float _1601 = ((cbMtdParam._m0[43u].z - _1596) * _1071) + _1596;
    float _1606 = ((cbMtdParam._m0[39u].z - _1601) * _1058) + _1601;
    uvec2 _1619 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20, int(0u)));
    float _1670;
    if (_742)
    {
        float _1630 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1636 = (_668 * _653) - (_665 * _656);
        float _1639 = (_662 * _656) - (_668 * _650);
        float _1642 = (_665 * _650) - (_662 * _653);
        float _1668 = ((log2((((float(_1619.y) * 0.5) * float(_1619.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1639 * _1639) + (_1642 * _1642)) + (_1636 * _1636)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1630 * gl_WorldRayDirectionEXT.x, _1630 * gl_WorldRayDirectionEXT.y, _1630 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1670 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
    }
    else
    {
        _1670 = 0.0;
    }
    vec4 _1672 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _669) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _670) + cbTextureTilingScale._m0[7u].w), _1670);
    float _1674 = _1672.x;
    float _1675 = _1672.y;
    float _1677 = _1672.z + _83[_1576];
    uvec2 _1689 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6, int(0u)));
    float _1740;
    if (_742)
    {
        float _1700 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1706 = (_668 * _653) - (_665 * _656);
        float _1709 = (_662 * _656) - (_668 * _650);
        float _1712 = (_665 * _650) - (_662 * _653);
        float _1738 = ((log2((((float(_1689.y) * 0.5) * float(_1689.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1709 * _1709) + (_1712 * _1712)) + (_1706 * _1706)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1700 * gl_WorldRayDirectionEXT.x, _1700 * gl_WorldRayDirectionEXT.y, _1700 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1740 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
    }
    else
    {
        _1740 = 0.0;
    }
    vec4 _1742 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _669) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _670) + cbTextureTilingScale._m0[10u].w), _1740);
    float _1750 = (((cbMtdParam._m0[42u].y - _1677) + _1742.z) * _1109) + _1677;
    uvec2 _1762 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8, int(0u)));
    float _1813;
    if (_742)
    {
        float _1773 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1779 = (_668 * _653) - (_665 * _656);
        float _1782 = (_662 * _656) - (_668 * _650);
        float _1785 = (_665 * _650) - (_662 * _653);
        float _1811 = ((log2((((float(_1762.y) * 0.5) * float(_1762.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1782 * _1782) + (_1785 * _1785)) + (_1779 * _1779)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1773 * gl_WorldRayDirectionEXT.x, _1773 * gl_WorldRayDirectionEXT.y, _1773 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1813 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
    }
    else
    {
        _1813 = 0.0;
    }
    vec4 _1815 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _669) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _670) + cbTextureTilingScale._m0[12u].w), _1813);
    float _1823 = (((cbMtdParam._m0[42u].w - _1750) + _1815.z) * _1093) + _1750;
    float _1828 = ((((_803 * 2.0) * _1823) - _1823) * cbMtdParam._m0[34u].x) + _1823;
    uvec2 _1841 = uvec2(textureSize(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9, int(0u)));
    float _1892;
    if (_742)
    {
        float _1852 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1858 = (_668 * _653) - (_665 * _656);
        float _1861 = (_662 * _656) - (_668 * _650);
        float _1864 = (_665 * _650) - (_662 * _653);
        float _1890 = ((log2((((float(_1841.y) * 0.5) * float(_1841.x)) * abs((_623 * _617) - (_622 * _619))) / (sqrt(((_1861 * _1861) + (_1864 * _1864)) + (_1858 * _1858)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1852 * gl_WorldRayDirectionEXT.x, _1852 * gl_WorldRayDirectionEXT.y, _1852 * gl_WorldRayDirectionEXT.z), vec3(_681, _683, _684))));
        _1892 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
    }
    else
    {
        _1892 = 0.0;
    }
    vec4 _1894 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _669) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _670) + cbTextureTilingScale._m0[13u].w), _1892);
    float _1902 = (((cbMtdParam._m0[43u].y - _1828) + _1894.z) * _1071) + _1828;
    float _1906 = (((cbMtdParam._m0[39u].y + _965.z) - _1902) * _1058) + _1902;
    float _1946 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1947 = _1946 * gl_WorldRayDirectionEXT.x;
    float _1948 = _1946 * gl_WorldRayDirectionEXT.y;
    float _1949 = _1946 * gl_WorldRayDirectionEXT.z;
    float _1965;
    if (_742)
    {
        float _1957 = log2(0.0);
        float _1963 = ((_1957 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_145) / abs(dot(vec3(_1947, _1948, _1949), vec3(_681, _683, _684))));
        _1965 = isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0));
    }
    else
    {
        _1965 = 0.0;
    }
    vec4 _1968 = textureLod(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[38u].w * (((((uintBitsToFloat(_301.x) * hit._m0.x) + (uintBitsToFloat(_213.x) * _566)) + (uintBitsToFloat(_378.x) * hit._m0.y)) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[33u].x)) + ((cbMtdParam._m0[38u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, ((((cbMtdParam._m0[38u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[39u].x * ((_576 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[33u].x))) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), _1965);
    float _1983 = (-0.0) - ((_576 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].w);
    float _1987 = (_576 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].w;
    float _1988 = isnan(_1987) ? _1983 : (isnan(_1983) ? _1987 : min(_1983, _1987));
    float _2691 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    float _1989 = isnan(1.0) ? _2691 : (isnan(_2691) ? 1.0 : min(_2691, 1.0));
    float _2009 = ((_1742.x - _1674) * _1109) + _1674;
    float _2010 = ((_1742.y - _1675) * _1109) + _1675;
    float _2015 = ((_1815.x - _2009) * _1093) + _2009;
    float _2016 = ((_1815.y - _2010) * _1093) + _2010;
    float _2021 = ((_1894.x - _2015) * _1071) + _2015;
    float _2022 = ((_1894.y - _2016) * _1071) + _2016;
    float _2031 = ((((_965.x - _2021) * _1058) + _2021) * 2.0) + (-1.0);
    float _2032 = ((((_965.y - _2022) * _1058) + _2022) * 2.0) + (-1.0);
    float _2033 = dot(vec2(_2031, _2032), vec2(_2031, _2032));
    float _2702 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
    float _2038 = sqrt(1.0 - (isnan(1.0) ? _2702 : (isnan(_2702) ? 1.0 : min(_2702, 1.0))));
    float _2041 = (cbMtdParam._m0[34u].z * ((_799.x * 2.0) + (-1.0))) + _2031;
    float _2042 = (cbMtdParam._m0[34u].z * ((_799.y * 2.0) + (-1.0))) + _2032;
    float _2045 = fma(_2038, _681, fma(_2042, _697, (_716 * _710) * _2041));
    float _2048 = fma(_2038, _683, fma(_2042, _698, (_716 * _711) * _2041));
    float _2051 = fma(_2038, _684, fma(_2042, _699, (_716 * _712) * _2041));
    float _2055 = inversesqrt(dot(vec3(_2045, _2048, _2051), vec3(_2045, _2048, _2051)));
    float _2056 = _2055 * _2045;
    float _2057 = _2055 * _2048;
    float _2058 = _2055 * _2051;
    float _2070 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2071 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2072 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2073 = (-0.0) - _1947;
    float _2074 = (-0.0) - _1948;
    float _2075 = (-0.0) - _1949;
    float _2081 = float(gl_LaunchIDEXT.x);
    float _2082 = float(gl_LaunchIDEXT.y);
    float _2085 = float(gl_LaunchSizeEXT.x);
    float _2099 = fract(fract(sin(dot(vec2(_2081 / _2085, _2082 / _108), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2112 = fract(fract(sin(dot(vec2((_2081 + 128.0) / _2085, (_2082 + 128.0) / _108), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2113 = 1.0 - _1606;
    float _2114 = _2113 * _1534;
    float _2115 = _2113 * _1535;
    float _2116 = _2113 * _1536;
    float _2121 = _1606 * (_1534 + (-0.039999999105930328369140625));
    float _2122 = _1606 * (_1535 + (-0.039999999105930328369140625));
    float _2123 = _1606 * (_1536 + (-0.039999999105930328369140625));
    float _2124 = _2121 + 0.039999999105930328369140625;
    float _2126 = _2122 + 0.039999999105930328369140625;
    float _2127 = _2123 + 0.039999999105930328369140625;
    _94._m0 = 1u;
    uvec4 _2137 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2138 = _2137.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2138, _2137.w, _2138, vec3(_2070, _2071, _2072), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2250;
    float _2251;
    float _2252;
    float _2253;
    float _2254;
    float _2255;
    if (_94._m0 == 0u)
    {
        float _2157 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2056, _2057, _2058));
        float _2713 = isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0));
        float _2160 = isnan(1.0) ? _2713 : (isnan(_2713) ? 1.0 : min(_2713, 1.0));
        float _2179 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1906) * 0.949999988079071044921875);
        float _2180 = _2179 * _2179;
        float _2181 = g_sceneCB._m0[4u].x - _1947;
        float _2182 = g_sceneCB._m0[4u].y - _1948;
        float _2183 = g_sceneCB._m0[4u].z - _1949;
        float _2187 = inversesqrt(dot(vec3(_2181, _2182, _2183), vec3(_2181, _2182, _2183)));
        float _2188 = _2187 * _2181;
        float _2189 = _2187 * _2182;
        float _2190 = _2187 * _2183;
        float _2191 = dot(vec3(_2056, _2057, _2058), vec3(g_sceneCB._m0[4u].xyz));
        float _2724 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
        float _2194 = isnan(1.0) ? _2724 : (isnan(_2724) ? 1.0 : min(_2724, 1.0));
        float _2195 = dot(vec3(_2056, _2057, _2058), vec3(_2073, _2074, _2075));
        float _2735 = isnan(0.0) ? _2195 : (isnan(_2195) ? 0.0 : max(_2195, 0.0));
        float _2198 = isnan(1.0) ? _2735 : (isnan(_2735) ? 1.0 : min(_2735, 1.0));
        float _2199 = dot(vec3(_2056, _2057, _2058), vec3(_2188, _2189, _2190));
        float _2746 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
        float _2202 = isnan(1.0) ? _2746 : (isnan(_2746) ? 1.0 : min(_2746, 1.0));
        float _2203 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2188, _2189, _2190));
        float _2757 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
        float _2207 = _2180 * _2180;
        float _2211 = ((_2202 * _2202) * (_2207 + (-1.0))) + 1.0;
        float _2219 = exp2(log2(1.0 - (isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0)))) * 5.0);
        float _2230 = 1.0 - _2180;
        float _2241 = (0.5 / (((_2198 * ((_2194 * _2230) + _2180)) + 9.9999999392252902907785028219223e-09) + (((_2198 * _2230) + _2180) * _2194))) * _2194;
        float _2768 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
        float _2243 = (isnan(1.0) ? _2768 : (isnan(_2768) ? 1.0 : min(_2768, 1.0))) * (_2207 / ((_2211 * _2211) * 3.141590118408203125));
        _2250 = ((_2114 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2160;
        _2251 = ((_2115 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2160;
        _2252 = ((_2116 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2160;
        _2253 = (((_2219 * (0.959999978542327880859375 - _2121)) + _2124) * g_sceneCB._m0[5u].x) * _2243;
        _2254 = (((_2219 * (0.959999978542327880859375 - _2122)) + _2126) * g_sceneCB._m0[5u].y) * _2243;
        _2255 = (((_2219 * (0.959999978542327880859375 - _2123)) + _2127) * g_sceneCB._m0[5u].z) * _2243;
    }
    else
    {
        _2250 = 0.0;
        _2251 = 0.0;
        _2252 = 0.0;
        _2253 = 0.0;
        _2254 = 0.0;
        _2255 = 0.0;
    }
    bool _2257 = abs(_2057) < 0.89999997615814208984375;
    float _2259 = float(_2257);
    float _2260 = _2257 ? 0.0 : 1.0;
    float _2263 = (_2259 * _2058) - (_2260 * _2057);
    float _2264 = _2260 * _2056;
    float _2266 = (-0.0) - (_2056 * _2259);
    float _2270 = inversesqrt(dot(vec3(_2263, _2264, _2266), vec3(_2263, _2264, _2266)));
    float _2271 = _2263 * _2270;
    float _2272 = _2264 * _2270;
    float _2273 = _2270 * _2266;
    float _2276 = (_2272 * _2058) - (_2273 * _2057);
    float _2279 = (_2273 * _2056) - (_2271 * _2058);
    float _2282 = (_2271 * _2057) - (_2272 * _2056);
    float _2284;
    float _2292;
    float _2283 = 0.0;
    uint _2285 = 0u;
    float _2289;
    bool _2291;
    for (;;)
    {
        _2289 = (float(_2285) + _2099) * 0.03125;
        _2291 = _2285 == 0u;
        float frontier_phi_65_pred;
        if (_2291)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2437;
            float _2438;
            uint _2440;
            _2437 = 0.0;
            _2438 = 0.5;
            _2440 = _2285;
            float _2293;
            for (;;)
            {
                _2293 = ((_2440 & 1u) != 0u) ? (_2438 + _2437) : _2437;
                uint _2441 = _2440 >> 1u;
                if (_2441 == 0u)
                {
                    break;
                }
                else
                {
                    _2437 = _2293;
                    _2438 *= 0.5;
                    _2440 = _2441;
                }
            }
            frontier_phi_65_pred = _2293;
        }
        _2292 = frontier_phi_65_pred;
        float _2294 = _2292 + _2112;
        float _2298 = sqrt(_2289);
        float _2299 = ((_2294 > 1.0) ? (_2294 + (-1.0)) : _2294) * 6.283185482025146484375;
        float _2302 = cos(_2299) * _2298;
        float _2304 = sin(_2299) * _2298;
        float _2306 = sqrt(1.0 - _2289);
        float _2319 = ((_2306 * _2056) + (_2302 * _2276)) + (_2304 * _2271);
        float _2320 = ((_2306 * _2057) + (_2302 * _2279)) + (_2304 * _2272);
        float _2321 = ((_2306 * _2058) + (_2302 * _2282)) + (_2304 * _2273);
        _93._m0 = 1u;
        uvec4 _2325 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2326 = _2325.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2326, _2325.w, _2326, vec3(_2070, _2071, _2072), 9.9999997473787516355514526367188e-05, vec3(_2319, _2320, _2321), 10000.0, 1);
        float _2332 = dot(vec3(_2056, _2057, _2058), vec3(_2319, _2320, _2321));
        float _2779 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
        float _2335 = isnan(1.0) ? _2779 : (isnan(_2779) ? 1.0 : min(_2779, 1.0));
        _2284 = ((float(_93._m0 == 0u) * _2335) / (_2335 * 0.3183098733425140380859375)) + _2283;
        uint _2286 = _2285 + 1u;
        if (_2286 == 32u)
        {
            break;
        }
        else
        {
            _2283 = _2284;
            _2285 = _2286;
            continue;
        }
    }
    float _2342 = _2284 * 0.009947183541953563690185546875;
    float _2347 = dot(vec3(_1947, _1948, _1949), vec3(_2056, _2057, _2058)) * 2.0;
    vec4 _2360 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1947 - (_2347 * _2056), _1948 - (_2347 * _2057), _1949 - (_2347 * _2058)), 4.0 - (_1906 * 4.0));
    float _2365 = dot(vec3(_2073, _2074, _2075), vec3(_2056, _2057, _2058));
    float _2790 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
    float _2375 = exp2(log2(1.0 - (isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0)))) * 5.0);
    vec4 _2387 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2056, _2057, _2058), 0.0);
    float _2400 = ((((((cbMtdParam._m0[22u].x * _1968.x) * cbMtdParam._m0[32u].x) * _1989) + _1531) + _2250) + _2253) + (((_2387.x * _2114) + (((_2375 * (0.959999978542327880859375 - _2121)) + _2124) * _2360.x)) * _2342);
    float _2406 = ((((((cbMtdParam._m0[22u].y * _1968.y) * cbMtdParam._m0[32u].x) * _1989) + _1532) + _2251) + _2254) + (((_2387.y * _2115) + (((_2375 * (0.959999978542327880859375 - _2122)) + _2126) * _2360.y)) * _2342);
    float _2412 = ((((((cbMtdParam._m0[22u].z * _1968.z) * cbMtdParam._m0[32u].x) * _1989) + _1533) + _2252) + _2255) + (((_2387.z * _2116) + (((_2375 * (0.959999978542327880859375 - _2123)) + _2127) * _2360.z)) * _2342);
    float _2801 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2812 = isnan(0.0) ? _2406 : (isnan(_2406) ? 0.0 : max(_2406, 0.0));
    float _2823 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    bool _2420 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2431;
    _2431.x = _2420 ? ((_674 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2801 : (isnan(_2801) ? 1.0 : min(_2801, 1.0)));
    _2431.y = _2420 ? ((_677 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2812 : (isnan(_2812) ? 1.0 : min(_2812, 1.0)));
    _2431.z = _2420 ? ((_680 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2823 : (isnan(_2823) ? 1.0 : min(_2823, 1.0)));
    payload._m0 = _2431;
}


