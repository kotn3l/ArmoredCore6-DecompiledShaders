#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 18) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1965;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    bool _235 = _179 == 0u;
    uint _236;
    if (_235)
    {
        _236 = _212 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 12u;
        }
        _236 = frontier_phi_9_10_ladder;
    }
    uint _243 = ((_184 + 4u) + (_180 ? (_236 + 4u) : _236)) >> 2u;
    uvec2 _249 = uvec2(texelFetch(l_geomAttrib_0, int(_243)).x, texelFetch(l_geomAttrib_0, int(_243 + 1u)).x);
    uint _250 = _249.x;
    uint _251 = _249.y;
    float _255 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _256 = float(int(uint(int(_250) >> int(16u))));
    float _260 = float(int(uint(int(_251 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_251) >> int(16u))));
    uint _262 = _178 * _172;
    uint _263 = _262 + 12u;
    uint _284;
    uint _285;
    uint _286;
    uint _287;
    if (_183)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_263 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
        _287 = 16u;
    }
    else
    {
        uint _272 = _263 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
        _287 = 20u;
    }
    uvec4 _293 = texelFetch(l_geomAttrib_0, int((_287 + _262) >> 2u));
    uint _294 = _293.x;
    uint _306;
    if (_235)
    {
        _306 = _287 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _287 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _287 + 12u;
        }
        _306 = frontier_phi_16_17_ladder;
    }
    uint _313 = ((_262 + 4u) + (_180 ? (_306 + 4u) : _306)) >> 2u;
    uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
    uint _320 = _319.x;
    uint _321 = _319.y;
    float _325 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _326 = float(int(uint(int(_320) >> int(16u))));
    float _330 = float(int(uint(int(_321 << 16u) >> int(16u))));
    float _331 = float(int(uint(int(_321) >> int(16u))));
    uint _332 = _178 * _173;
    uint _333 = _332 + 12u;
    uint _354;
    uint _355;
    uint _356;
    uint _357;
    if (_183)
    {
        uvec4 _335 = texelFetch(l_geomAttrib_0, int(_333 >> 2u));
        uint _336 = _335.x;
        _354 = _336 & 255u;
        _355 = (_336 >> 8u) & 255u;
        _356 = (_336 >> 16u) & 255u;
        _357 = 16u;
    }
    else
    {
        uint _342 = _333 >> 2u;
        uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
        uint _349 = _348.x;
        _354 = _349 & 65535u;
        _355 = _349 >> 16u;
        _356 = _348.y & 65535u;
        _357 = 20u;
    }
    uvec4 _363 = texelFetch(l_geomAttrib_0, int((_357 + _332) >> 2u));
    uint _364 = _363.x;
    uint _376;
    if (_235)
    {
        _376 = _357 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _357 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _357 + 12u;
        }
        _376 = frontier_phi_23_24_ladder;
    }
    uint _383 = ((_332 + 4u) + (_180 ? (_376 + 4u) : _376)) >> 2u;
    uvec2 _389 = uvec2(texelFetch(l_geomAttrib_0, int(_383)).x, texelFetch(l_geomAttrib_0, int(_383 + 1u)).x);
    uint _390 = _389.x;
    uint _391 = _389.y;
    float _395 = float(int(uint(int(_390 << 16u) >> int(16u))));
    float _396 = float(int(uint(int(_390) >> int(16u))));
    float _400 = float(int(uint(int(_391 << 16u) >> int(16u))));
    float _401 = float(int(uint(int(_391) >> int(16u))));
    bool _403 = _129.z == 0u;
    float _439;
    float _440;
    float _441;
    if (_403)
    {
        uint _406 = _170 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _170 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_403)
    {
        uint _444 = _172 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _172 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _515;
    float _516;
    float _517;
    if (_403)
    {
        uint _482 = _173 * 3u;
        uvec3 _491 = uvec3(texelFetch(l_geomPositionBuffer, int(_482)).x, texelFetch(l_geomPositionBuffer, int(_482 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_482 + 2u)).x);
        _515 = uintBitsToFloat(_491.x);
        _516 = uintBitsToFloat(_491.y);
        _517 = uintBitsToFloat(_491.z);
    }
    else
    {
        uint _499 = _173 * 2u;
        uvec2 _505 = uvec2(texelFetch(l_geomPositionBuffer, int(_499)).x, texelFetch(l_geomPositionBuffer, int(_499 + 1u)).x);
        uint _506 = _505.x;
        _515 = unpackHalf2x16(_506).x;
        _516 = unpackHalf2x16(_506 >> 16u).x;
        _517 = unpackHalf2x16(_505.y).x;
    }
    float _520 = (1.0 - hit._m0.x) - hit._m0.y;
    float _564 = (_325 - _255) * 0.00048828125;
    float _566 = (_326 - _256) * 0.00048828125;
    float _569 = (_395 - _255) * 0.00048828125;
    float _570 = (_396 - _256) * 0.00048828125;
    float _573 = (_330 - _260) * 0.00048828125;
    float _574 = (_331 - _261) * 0.00048828125;
    float _577 = (_400 - _260) * 0.00048828125;
    float _578 = (_401 - _261) * 0.00048828125;
    float _600 = _477 - _439;
    float _601 = _478 - _440;
    float _602 = _479 - _441;
    float _605 = fma(_602, gl_ObjectToWorldEXT[2u].x, fma(_601, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _600));
    float _608 = fma(_602, gl_ObjectToWorldEXT[2u].y, fma(_601, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _600));
    float _611 = fma(_602, gl_ObjectToWorldEXT[2u].z, fma(_601, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _600));
    float _612 = _515 - _439;
    float _613 = _516 - _440;
    float _614 = _517 - _441;
    float _617 = fma(_614, gl_ObjectToWorldEXT[2u].x, fma(_613, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _612));
    float _620 = fma(_614, gl_ObjectToWorldEXT[2u].y, fma(_613, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _612));
    float _623 = fma(_614, gl_ObjectToWorldEXT[2u].z, fma(_613, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _612));
    float _624 = (((_325 * hit._m0.x) + (_255 * _520)) + (_395 * hit._m0.y)) * 0.00048828125;
    float _625 = (((_326 * hit._m0.x) + (_256 * _520)) + (_396 * hit._m0.y)) * 0.00048828125;
    float _626 = (((_330 * hit._m0.x) + (_260 * _520)) + (_400 * hit._m0.y)) * 0.00048828125;
    float _627 = (((_331 * hit._m0.x) + (_261 * _520)) + (_401 * hit._m0.y)) * 0.00048828125;
    float _631 = (((float(_209) * _520) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _634 = (((float(_210) * _520) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _637 = (((float(_211) * _520) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _638 = _631 * 0.0078740157186985015869140625;
    float _640 = _634 * 0.0078740157186985015869140625;
    float _641 = _637 * 0.0078740157186985015869140625;
    float _654 = ((((float(_221 & 255u) * _520) + (-127.0)) + (float(_294 & 255u) * hit._m0.x)) + (float(_364 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _655 = ((((float((_221 >> 8u) & 255u) * _520) + (-127.0)) + (float((_294 >> 8u) & 255u) * hit._m0.x)) + (float((_364 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float((_221 >> 16u) & 255u) * _520) + (-127.0)) + (float((_294 >> 16u) & 255u) * hit._m0.x)) + (float((_364 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float(_221 >> 24u) * _520) + (-127.0)) + (float(_294 >> 24u) * hit._m0.x)) + (float(_364 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _667 = ((_655 * _641) - (_656 * _640)) * _657;
    float _668 = ((_656 * _638) - (_654 * _641)) * _657;
    float _669 = ((_654 * _640) - (_655 * _638)) * _657;
    float _673 = inversesqrt(dot(vec3(_667, _668, _669), vec3(_667, _668, _669)));
    uvec2 _688 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, int(0u)));
    bool _693 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _746;
    if (_693)
    {
        float _704 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _710 = (_623 * _608) - (_620 * _611);
        float _713 = (_617 * _611) - (_623 * _605);
        float _716 = (_620 * _605) - (_617 * _608);
        float _743 = ((log2((((float(_688.y) * 0.5) * float(_688.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_713 * _713) + (_716 * _716)) + (_710 * _710)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_704 * gl_WorldRayDirectionEXT.x, _704 * gl_WorldRayDirectionEXT.y, _704 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _746 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    }
    else
    {
        _746 = 0.0;
    }
    vec4 _750 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[18u].x * _624) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _625) + cbTextureTilingScale._m0[18u].w), _746);
    float _765 = ((cbMtdParam._m0[14u].z * (-2.7999999523162841796875)) * (1.0 - _750.x)) + 1.0;
    float _2064 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _766 = isnan(1.0) ? _2064 : (isnan(_2064) ? 1.0 : min(_2064, 1.0));
    uvec2 _778 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, int(0u)));
    float _829;
    if (_693)
    {
        float _789 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _795 = (_623 * _608) - (_620 * _611);
        float _798 = (_617 * _611) - (_623 * _605);
        float _801 = (_620 * _605) - (_617 * _608);
        float _827 = ((log2((((float(_778.y) * 0.5) * float(_778.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_798 * _798) + (_801 * _801)) + (_795 * _795)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_789 * gl_WorldRayDirectionEXT.x, _789 * gl_WorldRayDirectionEXT.y, _789 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _829 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    }
    else
    {
        _829 = 0.0;
    }
    vec4 _832 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _626) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _627) + cbTextureTilingScale._m0[4u].w), _829);
    uvec2 _848 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, int(0u)));
    float _899;
    if (_693)
    {
        float _859 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _865 = (_623 * _608) - (_620 * _611);
        float _868 = (_617 * _611) - (_623 * _605);
        float _871 = (_620 * _605) - (_617 * _608);
        float _897 = ((log2((((float(_848.y) * 0.5) * float(_848.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_868 * _868) + (_871 * _871)) + (_865 * _865)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_859 * gl_WorldRayDirectionEXT.x, _859 * gl_WorldRayDirectionEXT.y, _859 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _899 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    }
    else
    {
        _899 = 0.0;
    }
    vec4 _901 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _626) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _627) + cbTextureTilingScale._m0[6u].w), _899);
    float _903 = _901.x;
    float _904 = _901.y;
    float _905 = _901.z;
    float _912 = ((_832.x - _903) * _766) + _903;
    float _913 = ((_832.y - _904) * _766) + _904;
    float _914 = ((_832.z - _905) * _766) + _905;
    float _920 = (((1.0 - _750.y) * (-2.7999999523162841796875)) * cbMtdParam._m0[16u].y) + 1.0;
    float _2085 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _921 = isnan(1.0) ? _2085 : (isnan(_2085) ? 1.0 : min(_2085, 1.0));
    uvec2 _933 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, int(0u)));
    float _984;
    if (_693)
    {
        float _944 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _950 = (_623 * _608) - (_620 * _611);
        float _953 = (_617 * _611) - (_623 * _605);
        float _956 = (_620 * _605) - (_617 * _608);
        float _982 = ((log2((((float(_933.y) * 0.5) * float(_933.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_953 * _953) + (_956 * _956)) + (_950 * _950)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_944 * gl_WorldRayDirectionEXT.x, _944 * gl_WorldRayDirectionEXT.y, _944 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _984 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    }
    else
    {
        _984 = 0.0;
    }
    vec4 _986 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _626) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _627) + cbTextureTilingScale._m0[2u].w), _984);
    float _997 = ((_986.x - _912) * _921) + _912;
    float _998 = ((_986.y - _913) * _921) + _913;
    float _999 = ((_986.z - _914) * _921) + _914;
    float _1003 = (((1.0 - _750.z) * (-2.7999999523162841796875)) * cbMtdParam._m0[16u].x) + 1.0;
    float _2101 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1004 = isnan(1.0) ? _2101 : (isnan(_2101) ? 1.0 : min(_2101, 1.0));
    uvec2 _1016 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, int(0u)));
    float _1067;
    if (_693)
    {
        float _1027 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1033 = (_623 * _608) - (_620 * _611);
        float _1036 = (_617 * _611) - (_623 * _605);
        float _1039 = (_620 * _605) - (_617 * _608);
        float _1065 = ((log2((((float(_1016.y) * 0.5) * float(_1016.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_1036 * _1036) + (_1039 * _1039)) + (_1033 * _1033)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1027 * gl_WorldRayDirectionEXT.x, _1027 * gl_WorldRayDirectionEXT.y, _1027 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1067 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    }
    else
    {
        _1067 = 0.0;
    }
    vec4 _1069 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _626) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _627) + cbTextureTilingScale._m0[20u].w), _1067);
    float _1085 = ((((_1069.x - _997) * _1004) + _997) * 2.0) + (-1.0);
    float _1087 = ((((_1069.y - _998) * _1004) + _998) * 2.0) + (-1.0);
    float _1088 = dot(vec2(_1085, _1087), vec2(_1085, _1087));
    float _2117 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _1093 = sqrt(1.0 - (isnan(1.0) ? _2117 : (isnan(_2117) ? 1.0 : min(_2117, 1.0))));
    uvec2 _1111 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, int(0u)));
    float _1162;
    if (_693)
    {
        float _1122 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1128 = (_623 * _608) - (_620 * _611);
        float _1131 = (_617 * _611) - (_623 * _605);
        float _1134 = (_620 * _605) - (_617 * _608);
        float _1160 = ((log2((((float(_1111.y) * 0.5) * float(_1111.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_1131 * _1131) + (_1134 * _1134)) + (_1128 * _1128)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1122 * gl_WorldRayDirectionEXT.x, _1122 * gl_WorldRayDirectionEXT.y, _1122 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1162 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
    }
    else
    {
        _1162 = 0.0;
    }
    vec4 _1164 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _626) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _627) + cbTextureTilingScale._m0[7u].w), _1162);
    float _1169 = _1164.x * cbMtdParam._m0[10u].x;
    float _1170 = _1164.y * cbMtdParam._m0[10u].y;
    float _1171 = _1164.z * cbMtdParam._m0[10u].z;
    uvec2 _1190 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, int(0u)));
    float _1241;
    if (_693)
    {
        float _1201 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1207 = (_623 * _608) - (_620 * _611);
        float _1210 = (_617 * _611) - (_623 * _605);
        float _1213 = (_620 * _605) - (_617 * _608);
        float _1239 = ((log2((((float(_1190.y) * 0.5) * float(_1190.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_1210 * _1210) + (_1213 * _1213)) + (_1207 * _1207)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1201 * gl_WorldRayDirectionEXT.x, _1201 * gl_WorldRayDirectionEXT.y, _1201 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1241 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    }
    else
    {
        _1241 = 0.0;
    }
    vec4 _1244 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _626) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _627) + cbTextureTilingScale._m0[5u].w), _1241);
    float _1258 = (((_1244.x * cbMtdParam._m0[11u].x) - _1169) * _766) + _1169;
    float _1259 = (((_1244.y * cbMtdParam._m0[11u].y) - _1170) * _766) + _1170;
    float _1260 = (((_1244.z * cbMtdParam._m0[11u].z) - _1171) * _766) + _1171;
    uvec2 _1277 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, int(0u)));
    float _1328;
    if (_693)
    {
        float _1288 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1294 = (_623 * _608) - (_620 * _611);
        float _1297 = (_617 * _611) - (_623 * _605);
        float _1300 = (_620 * _605) - (_617 * _608);
        float _1326 = ((log2((((float(_1277.y) * 0.5) * float(_1277.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_1297 * _1297) + (_1300 * _1300)) + (_1294 * _1294)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1288 * gl_WorldRayDirectionEXT.x, _1288 * gl_WorldRayDirectionEXT.y, _1288 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1328 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
    }
    else
    {
        _1328 = 0.0;
    }
    vec4 _1330 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _626) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _627) + cbTextureTilingScale._m0[3u].w), _1328);
    float _1344 = (((_1330.x * cbMtdParam._m0[12u].x) - _1258) * _921) + _1258;
    float _1345 = (((_1330.y * cbMtdParam._m0[12u].y) - _1259) * _921) + _1259;
    float _1346 = (((_1330.z * cbMtdParam._m0[12u].z) - _1260) * _921) + _1260;
    uvec2 _1365 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, int(0u)));
    float _1416;
    if (_693)
    {
        float _1376 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1382 = (_623 * _608) - (_620 * _611);
        float _1385 = (_617 * _611) - (_623 * _605);
        float _1388 = (_620 * _605) - (_617 * _608);
        float _1414 = ((log2((((float(_1365.y) * 0.5) * float(_1365.x)) * abs((_578 * _573) - (_577 * _574))) / (sqrt(((_1385 * _1385) + (_1388 * _1388)) + (_1382 * _1382)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1376 * gl_WorldRayDirectionEXT.x, _1376 * gl_WorldRayDirectionEXT.y, _1376 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1416 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
    }
    else
    {
        _1416 = 0.0;
    }
    vec4 _1418 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[21u].x * _626) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _627) + cbTextureTilingScale._m0[21u].w), _1416);
    uvec2 _1452 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, int(0u)));
    float _1503;
    if (_693)
    {
        float _1463 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1469 = (_623 * _608) - (_620 * _611);
        float _1472 = (_617 * _611) - (_623 * _605);
        float _1475 = (_620 * _605) - (_617 * _608);
        float _1501 = ((log2((((float(_1452.y) * 0.5) * float(_1452.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_1472 * _1472) + (_1475 * _1475)) + (_1469 * _1469)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1463 * gl_WorldRayDirectionEXT.x, _1463 * gl_WorldRayDirectionEXT.y, _1463 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1503 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    }
    else
    {
        _1503 = 0.0;
    }
    vec4 _1505 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _624) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _625) + cbTextureTilingScale._m0[0u].w), _1503);
    float _1513 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_1418.x * cbMtdParam._m0[13u].x) - _1344) * _1004) + _1344)) * _1505.x;
    float _1516 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_1418.y * cbMtdParam._m0[13u].y) - _1345) * _1004) + _1345)) * _1505.y;
    float _1519 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_1418.z * cbMtdParam._m0[13u].z) - _1346) * _1004) + _1346)) * _1505.z;
    uvec2 _1535 = uvec2(textureSize(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, int(0u)));
    float _1539 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1540 = _1539 * gl_WorldRayDirectionEXT.x;
    float _1541 = _1539 * gl_WorldRayDirectionEXT.y;
    float _1542 = _1539 * gl_WorldRayDirectionEXT.z;
    float _1586;
    if (_693)
    {
        float _1552 = (_623 * _608) - (_620 * _611);
        float _1555 = (_617 * _611) - (_623 * _605);
        float _1558 = (_620 * _605) - (_617 * _608);
        float _1584 = ((log2((((float(_1535.y) * 0.5) * float(_1535.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_1555 * _1555) + (_1558 * _1558)) + (_1552 * _1552)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1540, _1541, _1542), vec3(_638, _640, _641))));
        _1586 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
    }
    else
    {
        _1586 = 0.0;
    }
    vec4 _1588 = textureLod(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _624) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _625) + cbTextureTilingScale._m0[8u].w), _1586);
    float _1592 = _1588.z;
    float _1599 = (((((_1069.z - _999) * _1004) + _999) - _1592) * cbMtdParam._m0[15u].x) + _1592;
    float _1603 = (((_1588.x * 2.0) + (-1.0)) * cbMtdParam._m0[16u].z) + _1085;
    float _1604 = (((_1588.y * 2.0) + (-1.0)) * cbMtdParam._m0[16u].z) + _1087;
    float _1607 = fma(_1093, _638, fma(_1604, _654, (_673 * _667) * _1603));
    float _1610 = fma(_1093, _640, fma(_1604, _655, (_673 * _668) * _1603));
    float _1613 = fma(_1093, _641, fma(_1604, _656, (_673 * _669) * _1603));
    float _1617 = inversesqrt(dot(vec3(_1607, _1610, _1613), vec3(_1607, _1610, _1613)));
    float _1618 = _1617 * _1607;
    float _1619 = _1617 * _1610;
    float _1620 = _1617 * _1613;
    float _1632 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1633 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1634 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1635 = (-0.0) - _1540;
    float _1637 = (-0.0) - _1541;
    float _1638 = (-0.0) - _1542;
    float _1644 = float(gl_LaunchIDEXT.x);
    float _1645 = float(gl_LaunchIDEXT.y);
    float _1648 = float(gl_LaunchSizeEXT.x);
    float _1662 = fract(fract(sin(dot(vec2(_1644 / _1648, _1645 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1675 = fract(fract(sin(dot(vec2((_1644 + 128.0) / _1648, (_1645 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1685 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1686 = _1685.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1686, _1685.w, _1686, vec3(_1632, _1633, _1634), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1794;
    float _1795;
    float _1796;
    float _1797;
    float _1798;
    float _1799;
    if (_71._m0 == 0u)
    {
        float _1706 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1618, _1619, _1620));
        float _2158 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1709 = isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0));
        float _1728 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1599) * 0.949999988079071044921875);
        float _1729 = _1728 * _1728;
        float _1730 = g_sceneCB._m0[4u].x - _1540;
        float _1731 = g_sceneCB._m0[4u].y - _1541;
        float _1732 = g_sceneCB._m0[4u].z - _1542;
        float _1736 = inversesqrt(dot(vec3(_1730, _1731, _1732), vec3(_1730, _1731, _1732)));
        float _1737 = _1736 * _1730;
        float _1738 = _1736 * _1731;
        float _1739 = _1736 * _1732;
        float _1740 = dot(vec3(_1618, _1619, _1620), vec3(g_sceneCB._m0[4u].xyz));
        float _2169 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1743 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
        float _1744 = dot(vec3(_1618, _1619, _1620), vec3(_1635, _1637, _1638));
        float _2180 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1747 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        float _1748 = dot(vec3(_1618, _1619, _1620), vec3(_1737, _1738, _1739));
        float _2191 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1751 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
        float _1752 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1737, _1738, _1739));
        float _2202 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1756 = _1729 * _1729;
        float _1760 = ((_1751 * _1751) * (_1756 + (-1.0))) + 1.0;
        float _1772 = (exp2(log2(1.0 - (isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1774 = 1.0 - _1729;
        float _1785 = (0.5 / (((_1747 * ((_1743 * _1774) + _1729)) + 9.9999999392252902907785028219223e-09) + (((_1747 * _1774) + _1729) * _1743))) * _1743;
        float _2213 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1787 = (isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0))) * (_1756 / ((_1760 * _1760) * 3.141590118408203125));
        _1794 = ((_1513 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1709;
        _1795 = ((_1516 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1709;
        _1796 = ((_1519 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1709;
        _1797 = (_1772 * g_sceneCB._m0[5u].x) * _1787;
        _1798 = (_1772 * g_sceneCB._m0[5u].y) * _1787;
        _1799 = (_1772 * g_sceneCB._m0[5u].z) * _1787;
    }
    else
    {
        _1794 = 0.0;
        _1795 = 0.0;
        _1796 = 0.0;
        _1797 = 0.0;
        _1798 = 0.0;
        _1799 = 0.0;
    }
    bool _1801 = abs(_1619) < 0.89999997615814208984375;
    float _1803 = float(_1801);
    float _1804 = _1801 ? 0.0 : 1.0;
    float _1807 = (_1803 * _1620) - (_1804 * _1619);
    float _1808 = _1804 * _1618;
    float _1810 = (-0.0) - (_1618 * _1803);
    float _1814 = inversesqrt(dot(vec3(_1807, _1808, _1810), vec3(_1807, _1808, _1810)));
    float _1815 = _1807 * _1814;
    float _1816 = _1808 * _1814;
    float _1817 = _1814 * _1810;
    float _1820 = (_1816 * _1620) - (_1817 * _1619);
    float _1823 = (_1817 * _1618) - (_1815 * _1620);
    float _1826 = (_1815 * _1619) - (_1816 * _1618);
    float _1828;
    float _1836;
    float _1827 = 0.0;
    uint _1829 = 0u;
    float _1833;
    bool _1835;
    for (;;)
    {
        _1833 = (float(_1829) + _1662) * 0.03125;
        _1835 = _1829 == 0u;
        float frontier_phi_61_pred;
        if (_1835)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _1970;
            float _1971;
            uint _1973;
            _1970 = 0.0;
            _1971 = 0.5;
            _1973 = _1829;
            float _1837;
            for (;;)
            {
                _1837 = ((_1973 & 1u) != 0u) ? (_1971 + _1970) : _1970;
                uint _1974 = _1973 >> 1u;
                if (_1974 == 0u)
                {
                    break;
                }
                else
                {
                    _1970 = _1837;
                    _1971 *= 0.5;
                    _1973 = _1974;
                }
            }
            frontier_phi_61_pred = _1837;
        }
        _1836 = frontier_phi_61_pred;
        float _1838 = _1836 + _1675;
        float _1842 = sqrt(_1833);
        float _1843 = ((_1838 > 1.0) ? (_1838 + (-1.0)) : _1838) * 6.283185482025146484375;
        float _1846 = cos(_1843) * _1842;
        float _1848 = sin(_1843) * _1842;
        float _1850 = sqrt(1.0 - _1833);
        float _1863 = ((_1850 * _1618) + (_1846 * _1820)) + (_1848 * _1815);
        float _1864 = ((_1850 * _1619) + (_1846 * _1823)) + (_1848 * _1816);
        float _1865 = ((_1850 * _1620) + (_1846 * _1826)) + (_1848 * _1817);
        _70._m0 = 1u;
        uvec4 _1869 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1870 = _1869.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1870, _1869.w, _1870, vec3(_1632, _1633, _1634), 9.9999997473787516355514526367188e-05, vec3(_1863, _1864, _1865), 10000.0, 1);
        float _1876 = dot(vec3(_1618, _1619, _1620), vec3(_1863, _1864, _1865));
        float _2224 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
        float _1879 = isnan(1.0) ? _2224 : (isnan(_2224) ? 1.0 : min(_2224, 1.0));
        _1828 = ((float(_70._m0 == 0u) * _1879) / (_1879 * 0.3183098733425140380859375)) + _1827;
        uint _1830 = _1829 + 1u;
        if (_1830 == 32u)
        {
            break;
        }
        else
        {
            _1827 = _1828;
            _1829 = _1830;
            continue;
        }
    }
    float _1887 = _1828 * 0.009947183541953563690185546875;
    float _1892 = dot(vec3(_1540, _1541, _1542), vec3(_1618, _1619, _1620)) * 2.0;
    vec4 _1906 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1540 - (_1892 * _1618), _1541 - (_1892 * _1619), _1542 - (_1892 * _1620)), 4.0 - (_1599 * 4.0));
    float _1911 = dot(vec3(_1635, _1637, _1638), vec3(_1618, _1619, _1620));
    float _2235 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
    float _1920 = (exp2(log2(1.0 - (isnan(1.0) ? _2235 : (isnan(_2235) ? 1.0 : min(_2235, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1926 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1618, _1619, _1620), 0.0);
    float _1937 = (_1797 + _1794) + (((_1926.x * _1513) + (_1920 * _1906.x)) * _1887);
    float _1941 = (_1798 + _1795) + (((_1926.y * _1516) + (_1920 * _1906.y)) * _1887);
    float _1945 = (_1799 + _1796) + (((_1926.z * _1519) + (_1920 * _1906.z)) * _1887);
    float _2246 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
    float _2257 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
    float _2268 = isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0));
    bool _1953 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1964;
    _1964.x = _1953 ? ((_631 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0)));
    _1964.y = _1953 ? ((_634 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0)));
    _1964.z = _1953 ? ((_637 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2268 : (isnan(_2268) ? 1.0 : min(_2268, 1.0)));
    payload._m0 = _1964;
}


