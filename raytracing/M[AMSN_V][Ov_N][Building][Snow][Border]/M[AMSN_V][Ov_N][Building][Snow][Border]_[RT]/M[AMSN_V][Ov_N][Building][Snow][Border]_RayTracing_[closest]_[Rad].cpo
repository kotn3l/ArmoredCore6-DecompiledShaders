#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_13;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_8;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _2228;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _163 >> 16u;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _182 = _176 * _168;
    uint _183 = _182 + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 16u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_210 + _182) >> 2u));
    uint _219 = _218.x;
    uint _231 = _182 + 4u;
    uvec4 _235 = texelFetch(l_geomAttrib_0, int((_231 + _210) >> 2u));
    uint _236 = _235.x;
    uint _245 = _210 | 8u;
    bool _246 = _177 == 0u;
    uint _247;
    if (_246)
    {
        _247 = _245;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _245 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _245 + 8u;
        }
        _247 = frontier_phi_9_10_ladder;
    }
    uint _251 = _178 ? (_247 + 4u) : _247;
    uint _253 = (_231 + _251) >> 2u;
    uvec2 _259 = uvec2(texelFetch(l_geomAttrib_0, int(_253)).x, texelFetch(l_geomAttrib_0, int(_253 + 1u)).x);
    uint _260 = _259.x;
    uint _261 = _259.y;
    float _265 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _266 = float(int(uint(int(_260) >> int(16u))));
    float _270 = float(int(uint(int(_261 << 16u) >> int(16u))));
    float _271 = float(int(uint(int(_261) >> int(16u))));
    uvec4 _275 = texelFetch(l_geomAttrib_0, int(((_182 + 12u) + _251) >> 2u));
    uint _276 = _275.x;
    uvec4 _285 = texelFetch(l_geomAttrib_0, int(((_182 + 16u) + _251) >> 2u));
    uint _286 = _285.x;
    uint _292 = _176 * _170;
    uint _293 = _292 + 12u;
    uint _314;
    uint _315;
    uint _316;
    uint _317;
    if (_181)
    {
        uvec4 _295 = texelFetch(l_geomAttrib_0, int(_293 >> 2u));
        uint _296 = _295.x;
        _314 = _296 & 255u;
        _315 = (_296 >> 8u) & 255u;
        _316 = (_296 >> 16u) & 255u;
        _317 = 16u;
    }
    else
    {
        uint _302 = _293 >> 2u;
        uvec2 _308 = uvec2(texelFetch(l_geomAttrib_0, int(_302)).x, texelFetch(l_geomAttrib_0, int(_302 + 1u)).x);
        uint _309 = _308.x;
        _314 = _309 & 65535u;
        _315 = _309 >> 16u;
        _316 = _308.y & 65535u;
        _317 = 20u;
    }
    uvec4 _323 = texelFetch(l_geomAttrib_0, int((_317 + _292) >> 2u));
    uint _324 = _323.x;
    uint _335 = _292 + 4u;
    uvec4 _338 = texelFetch(l_geomAttrib_0, int((_335 + _317) >> 2u));
    uint _339 = _338.x;
    uint _348 = _317 | 8u;
    uint _349;
    if (_246)
    {
        _349 = _348;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _348 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _348 + 8u;
        }
        _349 = frontier_phi_16_17_ladder;
    }
    uint _353 = _178 ? (_349 + 4u) : _349;
    uint _355 = (_335 + _353) >> 2u;
    uvec2 _361 = uvec2(texelFetch(l_geomAttrib_0, int(_355)).x, texelFetch(l_geomAttrib_0, int(_355 + 1u)).x);
    uint _362 = _361.x;
    uint _363 = _361.y;
    float _367 = float(int(uint(int(_362 << 16u) >> int(16u))));
    float _368 = float(int(uint(int(_362) >> int(16u))));
    float _372 = float(int(uint(int(_363 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_363) >> int(16u))));
    uvec4 _377 = texelFetch(l_geomAttrib_0, int(((_292 + 12u) + _353) >> 2u));
    uint _378 = _377.x;
    uvec4 _387 = texelFetch(l_geomAttrib_0, int(((_292 + 16u) + _353) >> 2u));
    uint _388 = _387.x;
    uint _394 = _176 * _171;
    uint _395 = _394 + 12u;
    uint _416;
    uint _417;
    uint _418;
    uint _419;
    if (_181)
    {
        uvec4 _397 = texelFetch(l_geomAttrib_0, int(_395 >> 2u));
        uint _398 = _397.x;
        _416 = _398 & 255u;
        _417 = (_398 >> 8u) & 255u;
        _418 = (_398 >> 16u) & 255u;
        _419 = 16u;
    }
    else
    {
        uint _404 = _395 >> 2u;
        uvec2 _410 = uvec2(texelFetch(l_geomAttrib_0, int(_404)).x, texelFetch(l_geomAttrib_0, int(_404 + 1u)).x);
        uint _411 = _410.x;
        _416 = _411 & 65535u;
        _417 = _411 >> 16u;
        _418 = _410.y & 65535u;
        _419 = 20u;
    }
    uvec4 _425 = texelFetch(l_geomAttrib_0, int((_419 + _394) >> 2u));
    uint _426 = _425.x;
    uint _437 = _394 + 4u;
    uvec4 _440 = texelFetch(l_geomAttrib_0, int((_437 + _419) >> 2u));
    uint _441 = _440.x;
    uint _450 = _419 | 8u;
    uint _451;
    if (_246)
    {
        _451 = _450;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _450 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _450 + 8u;
        }
        _451 = frontier_phi_23_24_ladder;
    }
    uint _455 = _178 ? (_451 + 4u) : _451;
    uint _457 = (_437 + _455) >> 2u;
    uvec2 _463 = uvec2(texelFetch(l_geomAttrib_0, int(_457)).x, texelFetch(l_geomAttrib_0, int(_457 + 1u)).x);
    uint _464 = _463.x;
    uint _465 = _463.y;
    float _469 = float(int(uint(int(_464 << 16u) >> int(16u))));
    float _470 = float(int(uint(int(_464) >> int(16u))));
    float _474 = float(int(uint(int(_465 << 16u) >> int(16u))));
    float _475 = float(int(uint(int(_465) >> int(16u))));
    uvec4 _479 = texelFetch(l_geomAttrib_0, int(((_394 + 12u) + _455) >> 2u));
    uint _480 = _479.x;
    uvec4 _489 = texelFetch(l_geomAttrib_0, int(((_394 + 16u) + _455) >> 2u));
    uint _490 = _489.x;
    bool _497 = _127.z == 0u;
    float _533;
    float _534;
    float _535;
    if (_497)
    {
        uint _500 = _168 * 3u;
        uvec3 _509 = uvec3(texelFetch(l_geomPositionBuffer, int(_500)).x, texelFetch(l_geomPositionBuffer, int(_500 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_500 + 2u)).x);
        _533 = uintBitsToFloat(_509.x);
        _534 = uintBitsToFloat(_509.y);
        _535 = uintBitsToFloat(_509.z);
    }
    else
    {
        uint _517 = _168 * 2u;
        uvec2 _523 = uvec2(texelFetch(l_geomPositionBuffer, int(_517)).x, texelFetch(l_geomPositionBuffer, int(_517 + 1u)).x);
        uint _524 = _523.x;
        _533 = unpackHalf2x16(_524).x;
        _534 = unpackHalf2x16(_524 >> 16u).x;
        _535 = unpackHalf2x16(_523.y).x;
    }
    float _571;
    float _572;
    float _573;
    if (_497)
    {
        uint _538 = _170 * 3u;
        uvec3 _547 = uvec3(texelFetch(l_geomPositionBuffer, int(_538)).x, texelFetch(l_geomPositionBuffer, int(_538 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_538 + 2u)).x);
        _571 = uintBitsToFloat(_547.x);
        _572 = uintBitsToFloat(_547.y);
        _573 = uintBitsToFloat(_547.z);
    }
    else
    {
        uint _555 = _170 * 2u;
        uvec2 _561 = uvec2(texelFetch(l_geomPositionBuffer, int(_555)).x, texelFetch(l_geomPositionBuffer, int(_555 + 1u)).x);
        uint _562 = _561.x;
        _571 = unpackHalf2x16(_562).x;
        _572 = unpackHalf2x16(_562 >> 16u).x;
        _573 = unpackHalf2x16(_561.y).x;
    }
    float _609;
    float _610;
    float _611;
    if (_497)
    {
        uint _576 = _171 * 3u;
        uvec3 _585 = uvec3(texelFetch(l_geomPositionBuffer, int(_576)).x, texelFetch(l_geomPositionBuffer, int(_576 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_576 + 2u)).x);
        _609 = uintBitsToFloat(_585.x);
        _610 = uintBitsToFloat(_585.y);
        _611 = uintBitsToFloat(_585.z);
    }
    else
    {
        uint _593 = _171 * 2u;
        uvec2 _599 = uvec2(texelFetch(l_geomPositionBuffer, int(_593)).x, texelFetch(l_geomPositionBuffer, int(_593 + 1u)).x);
        uint _600 = _599.x;
        _609 = unpackHalf2x16(_600).x;
        _610 = unpackHalf2x16(_600 >> 16u).x;
        _611 = unpackHalf2x16(_599.y).x;
    }
    float _614 = (1.0 - hit._m0.x) - hit._m0.y;
    float _665 = _614 * 0.0039215688593685626983642578125;
    float _669 = hit._m0.x * 0.0039215688593685626983642578125;
    float _672 = hit._m0.y * 0.0039215688593685626983642578125;
    float _683 = (((float(_388 & 255u) * hit._m0.x) + (float(_286 & 255u) * _614)) + (float(_490 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _686 = (((float((_388 >> 8u) & 255u) * hit._m0.x) + (float((_286 >> 8u) & 255u) * _614)) + (float((_490 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _689 = (_367 - _265) * 0.00048828125;
    float _691 = (_368 - _266) * 0.00048828125;
    float _694 = (_469 - _265) * 0.00048828125;
    float _695 = (_470 - _266) * 0.00048828125;
    float _698 = (_372 - _270) * 0.00048828125;
    float _699 = (_373 - _271) * 0.00048828125;
    float _702 = (_474 - _270) * 0.00048828125;
    float _703 = (_475 - _271) * 0.00048828125;
    float _725 = _571 - _533;
    float _726 = _572 - _534;
    float _727 = _573 - _535;
    float _730 = fma(_727, gl_ObjectToWorldEXT[2u].x, fma(_726, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _725));
    float _733 = fma(_727, gl_ObjectToWorldEXT[2u].y, fma(_726, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _725));
    float _736 = fma(_727, gl_ObjectToWorldEXT[2u].z, fma(_726, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _725));
    float _737 = _609 - _533;
    float _738 = _610 - _534;
    float _739 = _611 - _535;
    float _742 = fma(_739, gl_ObjectToWorldEXT[2u].x, fma(_738, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _737));
    float _745 = fma(_739, gl_ObjectToWorldEXT[2u].y, fma(_738, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _737));
    float _748 = fma(_739, gl_ObjectToWorldEXT[2u].z, fma(_738, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _737));
    float _749 = (((_367 * hit._m0.x) + (_265 * _614)) + (_469 * hit._m0.y)) * 0.00048828125;
    float _750 = (((_368 * hit._m0.x) + (_266 * _614)) + (_470 * hit._m0.y)) * 0.00048828125;
    float _751 = (((_372 * hit._m0.x) + (_270 * _614)) + (_474 * hit._m0.y)) * 0.00048828125;
    float _752 = (((_373 * hit._m0.x) + (_271 * _614)) + (_475 * hit._m0.y)) * 0.00048828125;
    float _756 = (((float(_207) * _614) + (-127.0)) + (float(_314) * hit._m0.x)) + (float(_416) * hit._m0.y);
    float _759 = (((float(_208) * _614) + (-127.0)) + (float(_315) * hit._m0.x)) + (float(_417) * hit._m0.y);
    float _762 = (((float(_209) * _614) + (-127.0)) + (float(_316) * hit._m0.x)) + (float(_418) * hit._m0.y);
    float _763 = _756 * 0.0078740157186985015869140625;
    float _765 = _759 * 0.0078740157186985015869140625;
    float _766 = _762 * 0.0078740157186985015869140625;
    float _779 = ((((float(_219 & 255u) * _614) + (-127.0)) + (float(_324 & 255u) * hit._m0.x)) + (float(_426 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _780 = ((((float((_219 >> 8u) & 255u) * _614) + (-127.0)) + (float((_324 >> 8u) & 255u) * hit._m0.x)) + (float((_426 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _781 = ((((float((_219 >> 16u) & 255u) * _614) + (-127.0)) + (float((_324 >> 16u) & 255u) * hit._m0.x)) + (float((_426 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _782 = ((((float(_219 >> 24u) * _614) + (-127.0)) + (float(_324 >> 24u) * hit._m0.x)) + (float(_426 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _792 = ((((float(_236 & 255u) * _614) + (-127.0)) + (float(_339 & 255u) * hit._m0.x)) + (float(_441 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _793 = ((((float((_236 >> 8u) & 255u) * _614) + (-127.0)) + (float((_339 >> 8u) & 255u) * hit._m0.x)) + (float((_441 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _794 = ((((float((_236 >> 16u) & 255u) * _614) + (-127.0)) + (float((_339 >> 16u) & 255u) * hit._m0.x)) + (float((_441 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _804 = ((_780 * _766) - (_781 * _765)) * _782;
    float _805 = ((_781 * _763) - (_779 * _766)) * _782;
    float _806 = ((_779 * _765) - (_780 * _763)) * _782;
    float _810 = inversesqrt(dot(vec3(_804, _805, _806), vec3(_804, _805, _806)));
    float _811 = _810 * _804;
    float _812 = _810 * _805;
    float _813 = _810 * _806;
    uvec2 _854 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_4, int(0u)));
    bool _859 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _912;
    if (_859)
    {
        float _870 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _876 = (_748 * _733) - (_745 * _736);
        float _879 = (_742 * _736) - (_748 * _730);
        float _882 = (_745 * _730) - (_742 * _733);
        float _909 = ((log2((((float(_854.y) * 0.5) * float(_854.x)) * abs((_695 * _689) - (_694 * _691))) / (sqrt(((_879 * _879) + (_882 * _882)) + (_876 * _876)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_870 * gl_WorldRayDirectionEXT.x, _870 * gl_WorldRayDirectionEXT.y, _870 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _912 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    }
    else
    {
        _912 = 0.0;
    }
    vec4 _916 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _749) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _750) + cbTextureTilingScale._m0[4u].w), _912);
    float _926 = 1.0 - ((1.0 - _916.x) * 1.39999997615814208984375);
    float _2323 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _927 = isnan(1.0) ? _2323 : (isnan(_2323) ? 1.0 : min(_2323, 1.0));
    float _934 = (_927 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[16u].x)) + cbMtdParam._m0[16u].x;
    float _935 = (_927 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[16u].y)) + cbMtdParam._m0[16u].y;
    float _936 = (_927 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z;
    float _938 = 1.0 - ((1.0 - _916.y) * 1.39999997615814208984375);
    float _2334 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
    float _939 = isnan(1.0) ? _2334 : (isnan(_2334) ? 1.0 : min(_2334, 1.0));
    float _946 = (_939 * (cbMtdParam._m0[14u].x - _934)) + _934;
    float _947 = (_939 * (cbMtdParam._m0[14u].y - _935)) + _935;
    float _948 = (_939 * (cbMtdParam._m0[14u].z - _936)) + _936;
    float _950 = 1.0 - ((1.0 - _916.z) * 1.39999997615814208984375);
    float _2345 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _951 = isnan(1.0) ? _2345 : (isnan(_2345) ? 1.0 : min(_2345, 1.0));
    uvec2 _975 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_3, int(0u)));
    float _1026;
    if (_859)
    {
        float _986 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _992 = (_748 * _733) - (_745 * _736);
        float _995 = (_742 * _736) - (_748 * _730);
        float _998 = (_745 * _730) - (_742 * _733);
        float _1024 = ((log2((((float(_975.y) * 0.5) * float(_975.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_995 * _995) + (_998 * _998)) + (_992 * _992)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_986 * gl_WorldRayDirectionEXT.x, _986 * gl_WorldRayDirectionEXT.y, _986 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1026 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    }
    else
    {
        _1026 = 0.0;
    }
    vec4 _1028 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _751) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _752) + cbTextureTilingScale._m0[3u].w), _1026);
    float _1030 = _1028.x;
    float _1031 = _1030 * cbMtdParam._m0[20u].x;
    float _1046 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * ((_686 - _1031) + (cbMtdParam._m0[17u].z * _686))) + 1.0;
    float _2361 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    float _1048 = 1.0 - (isnan(1.0) ? _2361 : (isnan(_2361) ? 1.0 : min(_2361, 1.0)));
    float _1049 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    float _1050 = isnan(1.0) ? _1049 : (isnan(_1049) ? 1.0 : min(_1049, 1.0));
    float _1058 = ((cbMtdParam._m0[17u].w * (-1.39999997615814208984375)) * ((_683 - _1031) + (cbMtdParam._m0[17u].y * _683))) + 1.0;
    float _2382 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1060 = 1.0 - (isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0)));
    float _1061 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1062 = isnan(1.0) ? _1061 : (isnan(_1061) ? 1.0 : min(_1061, 1.0));
    uvec2 _1079 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_13, int(0u)));
    float _1130;
    if (_859)
    {
        float _1090 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1096 = (_748 * _733) - (_745 * _736);
        float _1099 = (_742 * _736) - (_748 * _730);
        float _1102 = (_745 * _730) - (_742 * _733);
        float _1128 = ((log2((((float(_1079.y) * 0.5) * float(_1079.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1099 * _1099) + (_1102 * _1102)) + (_1096 * _1096)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1090 * gl_WorldRayDirectionEXT.x, _1090 * gl_WorldRayDirectionEXT.y, _1090 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1130 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    }
    else
    {
        _1130 = 0.0;
    }
    vec4 _1133 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _751) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _752) + cbTextureTilingScale._m0[1u].w), _1130);
    float _1135 = _1133.x;
    float _1136 = _1133.y;
    float _1137 = _1133.z;
    float _1138 = cbMtdParam._m0[12u].x * _1062;
    float _1140 = cbMtdParam._m0[12u].y * _1062;
    float _1142 = cbMtdParam._m0[12u].z * _1062;
    float _1162 = _1060 + _1048;
    float _1163 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    float _1164 = isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0));
    uvec2 _1182 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_1, int(0u)));
    float _1233;
    if (_859)
    {
        float _1193 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1199 = (_748 * _733) - (_745 * _736);
        float _1202 = (_742 * _736) - (_748 * _730);
        float _1205 = (_745 * _730) - (_742 * _733);
        float _1231 = ((log2((((float(_1182.y) * 0.5) * float(_1182.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1202 * _1202) + (_1205 * _1205)) + (_1199 * _1199)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1193 * gl_WorldRayDirectionEXT.x, _1193 * gl_WorldRayDirectionEXT.y, _1193 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1233 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    }
    else
    {
        _1233 = 0.0;
    }
    vec4 _1235 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _751) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _752) + cbTextureTilingScale._m0[0u].w), _1233);
    float _1240 = _1235.x * cbMtdParam._m0[10u].x;
    float _1241 = _1235.y * cbMtdParam._m0[10u].y;
    float _1242 = _1235.z * cbMtdParam._m0[10u].z;
    float _1262 = ((_1240 - (_1164 * _1240)) + ((((((_1135 * (cbMtdParam._m0[11u].x - _1138)) * _1050) + (_1138 * _1135)) * 4.55000019073486328125) * _1164) * _1240)) * ((_951 * (cbMtdParam._m0[15u].x - _946)) + _946);
    float _1263 = ((((((((_1136 * (cbMtdParam._m0[11u].y - _1140)) * _1050) + (_1140 * _1136)) * 4.55000019073486328125) * _1164) * _1241) + _1241) - (_1164 * _1241)) * ((_951 * (cbMtdParam._m0[15u].y - _947)) + _947);
    float _1264 = ((((((((_1137 * (cbMtdParam._m0[11u].z - _1142)) * _1050) + (_1142 * _1137)) * 4.55000019073486328125) * _1164) * _1242) + _1242) - (_1164 * _1242)) * ((_951 * (cbMtdParam._m0[15u].z - _948)) + _948);
    float _1275 = (((((1.0 - (_665 * float((_276 >> 8u) & 255u))) - (_669 * float((_378 >> 8u) & 255u))) - (_672 * float((_480 >> 8u) & 255u))) * (-2.7999999523162841796875)) * cbMtdParam._m0[19u].y) + 1.0;
    float _2423 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
    float _1288 = ((((_1030 + (-1.0)) + ((((1.0 - (_665 * float(_276 & 255u))) - (_669 * float(_378 & 255u))) - (_672 * float(_480 & 255u))) * 2.0)) * (-1.39999997615814208984375)) * cbMtdParam._m0[19u].z) + 1.0;
    float _2434 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
    uvec2 _1304 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_5, int(0u)));
    float _1355;
    if (_859)
    {
        float _1315 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1321 = (_748 * _733) - (_745 * _736);
        float _1324 = (_742 * _736) - (_748 * _730);
        float _1327 = (_745 * _730) - (_742 * _733);
        float _1353 = ((log2((((float(_1304.y) * 0.5) * float(_1304.x)) * abs((_695 * _689) - (_694 * _691))) / (sqrt(((_1324 * _1324) + (_1327 * _1327)) + (_1321 * _1321)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1315 * gl_WorldRayDirectionEXT.x, _1315 * gl_WorldRayDirectionEXT.y, _1315 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1355 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
    }
    else
    {
        _1355 = 0.0;
    }
    vec4 _1358 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _749) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _750) + cbTextureTilingScale._m0[5u].w), _1355);
    float _1364 = (_1358.x * 2.0) + (-1.0);
    float _1365 = (_1358.y * 2.0) + (-1.0);
    float _1366 = dot(vec2(_1364, _1365), vec2(_1364, _1365));
    float _2450 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
    float _1371 = sqrt(1.0 - (isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0))));
    float _1374 = fma(_1371, _763, fma(_1365, _779, _1364 * _811));
    float _1377 = fma(_1371, _765, fma(_1365, _780, _1364 * _812));
    float _1380 = fma(_1371, _766, fma(_1365, _781, _1364 * _813));
    float _1389 = exp2(log2(inversesqrt(dot(vec3(_1374, _1377, _1380), vec3(_1374, _1377, _1380))) * _1377) * cbMtdParam._m0[18u].z) * cbMtdParam._m0[18u].w;
    float _2461 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
    float _1392 = ((isnan(1.0) ? _2461 : (isnan(_2461) ? 1.0 : min(_2461, 1.0))) + (isnan(1.0) ? _2434 : (isnan(_2434) ? 1.0 : min(_2434, 1.0)))) * (1.0 - (isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0))));
    float _2472 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
    float _1393 = isnan(1.0) ? _2472 : (isnan(_2472) ? 1.0 : min(_2472, 1.0));
    float _1395 = 3.0 - (_1393 * 2.0);
    float _1400 = _1393 * _1393;
    float _1407 = ((_1400 * (cbMtdParam._m0[13u].x - _1262)) * _1395) + _1262;
    float _1408 = ((_1400 * (cbMtdParam._m0[13u].y - _1263)) * _1395) + _1263;
    float _1409 = ((_1400 * (cbMtdParam._m0[13u].z - _1264)) * _1395) + _1264;
    uvec2 _1422 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_9, int(0u)));
    float _1473;
    if (_859)
    {
        float _1433 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1439 = (_748 * _733) - (_745 * _736);
        float _1442 = (_742 * _736) - (_748 * _730);
        float _1445 = (_745 * _730) - (_742 * _733);
        float _1471 = ((log2((((float(_1422.y) * 0.5) * float(_1422.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1442 * _1442) + (_1445 * _1445)) + (_1439 * _1439)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1433 * gl_WorldRayDirectionEXT.x, _1433 * gl_WorldRayDirectionEXT.y, _1433 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1473 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    }
    else
    {
        _1473 = 0.0;
    }
    vec4 _1475 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _751) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _752) + cbTextureTilingScale._m0[8u].w), _1473);
    float _1479 = _1475.z;
    float _1482 = (_1475.x * 2.0) + (-1.0);
    float _1483 = (_1475.y * 2.0) + (-1.0);
    float _1484 = dot(vec2(_1482, _1483), vec2(_1482, _1483));
    float _2488 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
    float _1489 = sqrt(1.0 - (isnan(1.0) ? _2488 : (isnan(_2488) ? 1.0 : min(_2488, 1.0))));
    float _1491 = fma(_1489, _763, fma(_1483, _792, 0.0));
    float _1493 = fma(_1489, _765, fma(_1483, _793, 0.0));
    float _1495 = fma(_1489, _766, fma(_1483, _794, 0.0));
    float _1499 = inversesqrt(dot(vec3(_1491, _1493, _1495), vec3(_1491, _1493, _1495)));
    float _1500 = _1499 * _1491;
    float _1501 = _1499 * _1493;
    float _1502 = _1499 * _1495;
    uvec2 _1514 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_8, int(0u)));
    float _1565;
    if (_859)
    {
        float _1525 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1531 = (_748 * _733) - (_745 * _736);
        float _1534 = (_742 * _736) - (_748 * _730);
        float _1537 = (_745 * _730) - (_742 * _733);
        float _1563 = ((log2((((float(_1514.y) * 0.5) * float(_1514.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1534 * _1534) + (_1537 * _1537)) + (_1531 * _1531)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1525 * gl_WorldRayDirectionEXT.x, _1525 * gl_WorldRayDirectionEXT.y, _1525 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1565 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
    }
    else
    {
        _1565 = 0.0;
    }
    vec4 _1567 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _751) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _752) + cbTextureTilingScale._m0[7u].w), _1565);
    float _1574 = (_1567.x * 2.0) + (-1.0);
    float _1575 = (_1567.y * 2.0) + (-1.0);
    float _1576 = dot(vec2(_1574, _1575), vec2(_1574, _1575));
    float _2504 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    float _1584 = ((_1567.z - _1479) * _1392) + _1479;
    uvec2 _1596 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_2, int(0u)));
    float _1647;
    if (_859)
    {
        float _1607 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1613 = (_748 * _733) - (_745 * _736);
        float _1616 = (_742 * _736) - (_748 * _730);
        float _1619 = (_745 * _730) - (_742 * _733);
        float _1645 = ((log2((((float(_1596.y) * 0.5) * float(_1596.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1616 * _1616) + (_1619 * _1619)) + (_1613 * _1613)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1607 * gl_WorldRayDirectionEXT.x, _1607 * gl_WorldRayDirectionEXT.y, _1607 * gl_WorldRayDirectionEXT.z), vec3(_763, _765, _766))));
        _1647 = isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0));
    }
    else
    {
        _1647 = 0.0;
    }
    vec4 _1649 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _751) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _752) + cbTextureTilingScale._m0[2u].w), _1647);
    float _1655 = (_1649.x * 2.0) + (-1.0);
    float _1656 = (_1649.y * 2.0) + (-1.0);
    float _1657 = dot(vec2(_1655, _1656), vec2(_1655, _1656));
    float _2520 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
    float _1662 = sqrt(1.0 - (isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0))));
    float _1664 = fma(_1662, _763, fma(_1656, _792, 0.0));
    float _1666 = fma(_1662, _765, fma(_1656, _793, 0.0));
    float _1668 = fma(_1662, _766, fma(_1656, _794, 0.0));
    float _1672 = inversesqrt(dot(vec3(_1664, _1666, _1668), vec3(_1664, _1666, _1668)));
    float _1673 = _1672 * _1664;
    float _1674 = _1672 * _1666;
    float _1675 = _1672 * _1668;
    float _1678 = fma(_1675, _813, fma(_1674, _812, _1673 * _811));
    float _1681 = fma(_1675, _781, fma(_1674, _780, _1673 * _779));
    float _1684 = fma(_1675, _766, fma(_1674, _765, _1673 * _763));
    float _1688 = inversesqrt(dot(vec3(_1678, _1681, _1684), vec3(_1678, _1681, _1684)));
    float _1692 = fma(_1502, _813, fma(_1501, _812, _1500 * _811));
    float _1695 = fma(_1502, _781, fma(_1501, _780, _1500 * _779));
    float _1698 = fma(_1502, _766, fma(_1501, _765, _1500 * _763));
    float _1702 = inversesqrt(dot(vec3(_1692, _1695, _1698), vec3(_1692, _1695, _1698)));
    uvec2 _1719 = uvec2(textureSize(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_7, int(0u)));
    float _1723 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1724 = _1723 * gl_WorldRayDirectionEXT.x;
    float _1725 = _1723 * gl_WorldRayDirectionEXT.y;
    float _1726 = _1723 * gl_WorldRayDirectionEXT.z;
    float _1770;
    if (_859)
    {
        float _1736 = (_748 * _733) - (_745 * _736);
        float _1739 = (_742 * _736) - (_748 * _730);
        float _1742 = (_745 * _730) - (_742 * _733);
        float _1768 = ((log2((((float(_1719.y) * 0.5) * float(_1719.x)) * abs((_703 * _698) - (_702 * _699))) / (sqrt(((_1739 * _1739) + (_1742 * _1742)) + (_1736 * _1736)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1724, _1725, _1726), vec3(_763, _765, _766))));
        _1770 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
    }
    else
    {
        _1770 = 0.0;
    }
    vec4 _1772 = textureLod(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Border_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _751) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _752) + cbTextureTilingScale._m0[6u].w), _1770);
    float _1778 = (_1772.x * 2.0) + (-1.0);
    float _1779 = (_1772.y * 2.0) + (-1.0);
    float _1780 = dot(vec2(_1778, _1779), vec2(_1778, _1779));
    float _2536 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
    float _1785 = sqrt(1.0 - (isnan(1.0) ? _2536 : (isnan(_2536) ? 1.0 : min(_2536, 1.0))));
    float _1787 = fma(_1785, _763, fma(_1779, _792, 0.0));
    float _1789 = fma(_1785, _765, fma(_1779, _793, 0.0));
    float _1791 = fma(_1785, _766, fma(_1779, _794, 0.0));
    float _1795 = inversesqrt(dot(vec3(_1787, _1789, _1791), vec3(_1787, _1789, _1791)));
    float _1796 = _1795 * _1787;
    float _1797 = _1795 * _1789;
    float _1798 = _1795 * _1791;
    float _1801 = fma(_1798, _813, fma(_1797, _812, _1796 * _811));
    float _1804 = fma(_1798, _781, fma(_1797, _780, _1796 * _779));
    float _1807 = fma(_1798, _766, fma(_1797, _765, _1796 * _763));
    float _1811 = inversesqrt(dot(vec3(_1801, _1804, _1807), vec3(_1801, _1804, _1807)));
    float _1827 = (((((_1678 * _1050) * _1688) * cbMtdParam._m0[18u].y) + _1364) + ((_1702 * _1692) * cbMtdParam._m0[19u].w)) + (((_1801 * _1062) * _1811) * cbMtdParam._m0[19u].x);
    float _1830 = (((((_1681 * _1050) * _1688) * cbMtdParam._m0[18u].y) + _1365) + ((_1702 * _1695) * cbMtdParam._m0[19u].w)) + (((_1804 * _1062) * _1811) * cbMtdParam._m0[19u].x);
    float _1837 = ((_1574 - _1827) * _1392) + _1827;
    float _1838 = (_1392 * (_1575 - _1830)) + _1830;
    float _1839 = (_1392 * (sqrt(1.0 - (isnan(1.0) ? _2504 : (isnan(_2504) ? 1.0 : min(_2504, 1.0)))) - _1371)) + _1371;
    float _1842 = fma(_1839, _763, fma(_1838, _779, _1837 * _811));
    float _1845 = fma(_1839, _765, fma(_1838, _780, _1837 * _812));
    float _1848 = fma(_1839, _766, fma(_1838, _781, _1837 * _813));
    float _1852 = inversesqrt(dot(vec3(_1842, _1845, _1848), vec3(_1842, _1845, _1848)));
    float _1853 = _1852 * _1842;
    float _1854 = _1852 * _1845;
    float _1855 = _1852 * _1848;
    float _1867 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1868 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1869 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1870 = (-0.0) - _1724;
    float _1872 = (-0.0) - _1725;
    float _1873 = (-0.0) - _1726;
    float _1879 = float(gl_LaunchIDEXT.x);
    float _1880 = float(gl_LaunchIDEXT.y);
    float _1883 = float(gl_LaunchSizeEXT.x);
    float _1897 = fract(fract(sin(dot(vec2(_1879 / _1883, _1880 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1910 = fract(fract(sin(dot(vec2((_1879 + 128.0) / _1883, (_1880 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1911 = 1.0 - cbMtdParam._m0[20u].y;
    float _1912 = _1407 * _1911;
    float _1913 = _1408 * _1911;
    float _1914 = _1409 * _1911;
    float _1919 = (_1407 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].y;
    float _1920 = (_1408 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].y;
    float _1921 = (_1409 + (-0.039999999105930328369140625)) * cbMtdParam._m0[20u].y;
    float _1922 = _1919 + 0.039999999105930328369140625;
    float _1924 = _1920 + 0.039999999105930328369140625;
    float _1925 = _1921 + 0.039999999105930328369140625;
    _69._m0 = 1u;
    uvec4 _1935 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1936 = _1935.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1936, _1935.w, _1936, vec3(_1867, _1868, _1869), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2050;
    float _2051;
    float _2052;
    float _2053;
    float _2054;
    float _2055;
    if (_69._m0 == 0u)
    {
        float _1956 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1853, _1854, _1855));
        float _2547 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
        float _1959 = isnan(1.0) ? _2547 : (isnan(_2547) ? 1.0 : min(_2547, 1.0));
        float _1978 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1584) * 0.949999988079071044921875);
        float _1979 = _1978 * _1978;
        float _1980 = g_sceneCB._m0[4u].x - _1724;
        float _1981 = g_sceneCB._m0[4u].y - _1725;
        float _1982 = g_sceneCB._m0[4u].z - _1726;
        float _1986 = inversesqrt(dot(vec3(_1980, _1981, _1982), vec3(_1980, _1981, _1982)));
        float _1987 = _1986 * _1980;
        float _1988 = _1986 * _1981;
        float _1989 = _1986 * _1982;
        float _1990 = dot(vec3(_1853, _1854, _1855), vec3(g_sceneCB._m0[4u].xyz));
        float _2558 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1993 = isnan(1.0) ? _2558 : (isnan(_2558) ? 1.0 : min(_2558, 1.0));
        float _1994 = dot(vec3(_1853, _1854, _1855), vec3(_1870, _1872, _1873));
        float _2569 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _1997 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        float _1998 = dot(vec3(_1853, _1854, _1855), vec3(_1987, _1988, _1989));
        float _2580 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2001 = isnan(1.0) ? _2580 : (isnan(_2580) ? 1.0 : min(_2580, 1.0));
        float _2002 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1987, _1988, _1989));
        float _2591 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
        float _2006 = _1979 * _1979;
        float _2010 = ((_2001 * _2001) * (_2006 + (-1.0))) + 1.0;
        float _2019 = exp2(log2(1.0 - (isnan(1.0) ? _2591 : (isnan(_2591) ? 1.0 : min(_2591, 1.0)))) * 5.0);
        float _2030 = 1.0 - _1979;
        float _2041 = (0.5 / (((_1997 * ((_1993 * _2030) + _1979)) + 9.9999999392252902907785028219223e-09) + (((_1997 * _2030) + _1979) * _1993))) * _1993;
        float _2602 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2043 = (isnan(1.0) ? _2602 : (isnan(_2602) ? 1.0 : min(_2602, 1.0))) * (_2006 / ((_2010 * _2010) * 3.141590118408203125));
        _2050 = ((_1912 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1959;
        _2051 = ((_1913 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1959;
        _2052 = ((_1914 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1959;
        _2053 = (((_2019 * (0.959999978542327880859375 - _1919)) + _1922) * g_sceneCB._m0[5u].x) * _2043;
        _2054 = (((_2019 * (0.959999978542327880859375 - _1920)) + _1924) * g_sceneCB._m0[5u].y) * _2043;
        _2055 = (((_2019 * (0.959999978542327880859375 - _1921)) + _1925) * g_sceneCB._m0[5u].z) * _2043;
    }
    else
    {
        _2050 = 0.0;
        _2051 = 0.0;
        _2052 = 0.0;
        _2053 = 0.0;
        _2054 = 0.0;
        _2055 = 0.0;
    }
    bool _2057 = abs(_1854) < 0.89999997615814208984375;
    float _2059 = float(_2057);
    float _2060 = _2057 ? 0.0 : 1.0;
    float _2063 = (_2059 * _1855) - (_2060 * _1854);
    float _2064 = _2060 * _1853;
    float _2066 = (-0.0) - (_1853 * _2059);
    float _2070 = inversesqrt(dot(vec3(_2063, _2064, _2066), vec3(_2063, _2064, _2066)));
    float _2071 = _2063 * _2070;
    float _2072 = _2064 * _2070;
    float _2073 = _2070 * _2066;
    float _2076 = (_2072 * _1855) - (_2073 * _1854);
    float _2079 = (_2073 * _1853) - (_2071 * _1855);
    float _2082 = (_2071 * _1854) - (_2072 * _1853);
    float _2084;
    float _2092;
    float _2083 = 0.0;
    uint _2085 = 0u;
    float _2089;
    bool _2091;
    for (;;)
    {
        _2089 = (float(_2085) + _1897) * 0.03125;
        _2091 = _2085 == 0u;
        float frontier_phi_57_pred;
        if (_2091)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _2233;
            float _2234;
            uint _2236;
            _2233 = 0.0;
            _2234 = 0.5;
            _2236 = _2085;
            float _2093;
            for (;;)
            {
                _2093 = ((_2236 & 1u) != 0u) ? (_2234 + _2233) : _2233;
                uint _2237 = _2236 >> 1u;
                if (_2237 == 0u)
                {
                    break;
                }
                else
                {
                    _2233 = _2093;
                    _2234 *= 0.5;
                    _2236 = _2237;
                }
            }
            frontier_phi_57_pred = _2093;
        }
        _2092 = frontier_phi_57_pred;
        float _2094 = _2092 + _1910;
        float _2098 = sqrt(_2089);
        float _2099 = ((_2094 > 1.0) ? (_2094 + (-1.0)) : _2094) * 6.283185482025146484375;
        float _2102 = cos(_2099) * _2098;
        float _2104 = sin(_2099) * _2098;
        float _2106 = sqrt(1.0 - _2089);
        float _2119 = ((_2106 * _1853) + (_2102 * _2076)) + (_2104 * _2071);
        float _2120 = ((_2106 * _1854) + (_2102 * _2079)) + (_2104 * _2072);
        float _2121 = ((_2106 * _1855) + (_2102 * _2082)) + (_2104 * _2073);
        _68._m0 = 1u;
        uvec4 _2125 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2126 = _2125.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2126, _2125.w, _2126, vec3(_1867, _1868, _1869), 9.9999997473787516355514526367188e-05, vec3(_2119, _2120, _2121), 10000.0, 1);
        float _2132 = dot(vec3(_1853, _1854, _1855), vec3(_2119, _2120, _2121));
        float _2613 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
        float _2135 = isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0));
        _2084 = ((float(_68._m0 == 0u) * _2135) / (_2135 * 0.3183098733425140380859375)) + _2083;
        uint _2086 = _2085 + 1u;
        if (_2086 == 32u)
        {
            break;
        }
        else
        {
            _2083 = _2084;
            _2085 = _2086;
            continue;
        }
    }
    float _2143 = _2084 * 0.009947183541953563690185546875;
    float _2148 = dot(vec3(_1724, _1725, _1726), vec3(_1853, _1854, _1855)) * 2.0;
    vec4 _2162 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1724 - (_2148 * _1853), _1725 - (_2148 * _1854), _1726 - (_2148 * _1855)), 4.0 - (_1584 * 4.0));
    float _2167 = dot(vec3(_1870, _1872, _1873), vec3(_1853, _1854, _1855));
    float _2624 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
    float _2177 = exp2(log2(1.0 - (isnan(1.0) ? _2624 : (isnan(_2624) ? 1.0 : min(_2624, 1.0)))) * 5.0);
    vec4 _2189 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1853, _1854, _1855), 0.0);
    float _2200 = (_2053 + _2050) + (((_2189.x * _1912) + (((_2177 * (0.959999978542327880859375 - _1919)) + _1922) * _2162.x)) * _2143);
    float _2204 = (_2054 + _2051) + (((_2189.y * _1913) + (((_2177 * (0.959999978542327880859375 - _1920)) + _1924) * _2162.y)) * _2143);
    float _2208 = (_2055 + _2052) + (((_2189.z * _1914) + (((_2177 * (0.959999978542327880859375 - _1921)) + _1925) * _2162.z)) * _2143);
    float _2635 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _2646 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    float _2657 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
    bool _2216 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2227;
    _2227.x = _2216 ? ((_756 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2635 : (isnan(_2635) ? 1.0 : min(_2635, 1.0)));
    _2227.y = _2216 ? ((_759 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0)));
    _2227.z = _2216 ? ((_762 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2657 : (isnan(_2657) ? 1.0 : min(_2657, 1.0)));
    payload._m0 = _2227;
}


