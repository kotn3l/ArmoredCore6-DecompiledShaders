#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1256;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _165 & 65535u;
            frontier_phi_3_2_ladder_2 = _169;
        }
        else
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _166 >> 16u;
        }
        _171 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
        _174 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _219 = _180 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uint _230 = (((_179 * _171) + 4u) + (_181 ? (_220 + 4u) : _220)) >> 2u;
    uvec2 _236 = uvec2(texelFetch(l_geomAttrib_0, int(_230)).x, texelFetch(l_geomAttrib_0, int(_230 + 1u)).x);
    uint _237 = _236.x;
    uint _238 = _236.y;
    float _242 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_237) >> int(16u))));
    float _247 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_238) >> int(16u))));
    uint _250 = (_179 * _173) + 12u;
    uint _271;
    uint _272;
    uint _273;
    uint _274;
    if (_184)
    {
        uvec4 _252 = texelFetch(l_geomAttrib_0, int(_250 >> 2u));
        uint _253 = _252.x;
        _271 = _253 & 255u;
        _272 = (_253 >> 8u) & 255u;
        _273 = (_253 >> 16u) & 255u;
        _274 = 20u;
    }
    else
    {
        uint _259 = _250 >> 2u;
        uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
        uint _266 = _265.x;
        _271 = _266 & 65535u;
        _272 = _266 >> 16u;
        _273 = _265.y & 65535u;
        _274 = 24u;
    }
    uint _278;
    if (_219)
    {
        _278 = _274;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _274 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _274 + 8u;
        }
        _278 = frontier_phi_16_17_ladder;
    }
    uint _286 = (((_179 * _173) + 4u) + (_181 ? (_278 + 4u) : _278)) >> 2u;
    uvec2 _292 = uvec2(texelFetch(l_geomAttrib_0, int(_286)).x, texelFetch(l_geomAttrib_0, int(_286 + 1u)).x);
    uint _293 = _292.x;
    uint _294 = _292.y;
    float _298 = float(int(uint(int(_293 << 16u) >> int(16u))));
    float _299 = float(int(uint(int(_293) >> int(16u))));
    float _303 = float(int(uint(int(_294 << 16u) >> int(16u))));
    float _304 = float(int(uint(int(_294) >> int(16u))));
    uint _306 = (_179 * _174) + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_184)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 20u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 24u;
    }
    uint _334;
    if (_219)
    {
        _334 = _330;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _330 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _330 + 8u;
        }
        _334 = frontier_phi_23_24_ladder;
    }
    uint _342 = (((_179 * _174) + 4u) + (_181 ? (_334 + 4u) : _334)) >> 2u;
    uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
    uint _349 = _348.x;
    uint _350 = _348.y;
    float _354 = float(int(uint(int(_349 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_349) >> int(16u))));
    float _359 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_350) >> int(16u))));
    bool _362 = _130.z == 0u;
    float _398;
    float _399;
    float _400;
    if (_362)
    {
        uint _365 = _171 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _171 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_362)
    {
        uint _403 = _173 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _173 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_362)
    {
        uint _441 = _174 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _174 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _479 = (1.0 - hit._m0.x) - hit._m0.y;
    float _515 = (_303 - _247) * 0.00048828125;
    float _517 = (_304 - _248) * 0.00048828125;
    float _520 = (_359 - _247) * 0.00048828125;
    float _521 = (_360 - _248) * 0.00048828125;
    float _543 = _436 - _398;
    float _544 = _437 - _399;
    float _545 = _438 - _400;
    float _548 = fma(_545, gl_ObjectToWorldEXT[2u].x, fma(_544, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _543));
    float _551 = fma(_545, gl_ObjectToWorldEXT[2u].y, fma(_544, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _543));
    float _554 = fma(_545, gl_ObjectToWorldEXT[2u].z, fma(_544, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _543));
    float _555 = _474 - _398;
    float _556 = _475 - _399;
    float _557 = _476 - _400;
    float _560 = fma(_557, gl_ObjectToWorldEXT[2u].x, fma(_556, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _555));
    float _563 = fma(_557, gl_ObjectToWorldEXT[2u].y, fma(_556, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _555));
    float _566 = fma(_557, gl_ObjectToWorldEXT[2u].z, fma(_556, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _555));
    float _567 = (((_298 * hit._m0.x) + (_242 * _479)) + (_354 * hit._m0.y)) * 0.00048828125;
    float _568 = (((_299 * hit._m0.x) + (_243 * _479)) + (_355 * hit._m0.y)) * 0.00048828125;
    float _569 = (((_303 * hit._m0.x) + (_247 * _479)) + (_359 * hit._m0.y)) * 0.00048828125;
    float _570 = (((_304 * hit._m0.x) + (_248 * _479)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _574 = (((float(_210) * _479) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _577 = (((float(_211) * _479) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _580 = (((float(_212) * _479) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _581 = _574 * 0.0078740157186985015869140625;
    float _583 = _577 * 0.0078740157186985015869140625;
    float _584 = _580 * 0.0078740157186985015869140625;
    uvec2 _602 = uvec2(textureSize(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    bool _607 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _660;
    if (_607)
    {
        float _618 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _624 = (_566 * _551) - (_563 * _554);
        float _627 = (_560 * _554) - (_566 * _548);
        float _630 = (_563 * _548) - (_560 * _551);
        float _657 = ((log2((((float(_602.y) * 0.5) * float(_602.x)) * abs((_521 * _515) - (_520 * _517))) / (sqrt(((_627 * _627) + (_630 * _630)) + (_624 * _624)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_618 * gl_WorldRayDirectionEXT.x, _618 * gl_WorldRayDirectionEXT.y, _618 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _660 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    }
    else
    {
        _660 = 0.0;
    }
    vec4 _664 = textureLod(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _569) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _570) + cbTextureTilingScale._m0[0u].w), _660);
    float _669 = _664.x * cbMtdParam._m0[10u].x;
    float _670 = _664.y * cbMtdParam._m0[10u].y;
    float _671 = _664.z * cbMtdParam._m0[10u].z;
    uvec2 _696 = uvec2(textureSize(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _747;
    if (_607)
    {
        float _707 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _713 = (_566 * _551) - (_563 * _554);
        float _716 = (_560 * _554) - (_566 * _548);
        float _719 = (_563 * _548) - (_560 * _551);
        float _745 = ((log2((((float(_696.y) * 0.5) * float(_696.x)) * abs((_521 * _515) - (_520 * _517))) / (sqrt(((_716 * _716) + (_719 * _719)) + (_713 * _713)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_707 * gl_WorldRayDirectionEXT.x, _707 * gl_WorldRayDirectionEXT.y, _707 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _747 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    }
    else
    {
        _747 = 0.0;
    }
    vec4 _749 = textureLod(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _569) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _570) + cbTextureTilingScale._m0[3u].w), _747);
    float _751 = _749.x;
    float _773 = (cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) + _567;
    float _774 = (cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _568;
    uvec2 _794 = uvec2(textureSize(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _798 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _799 = _798 * gl_WorldRayDirectionEXT.x;
    float _800 = _798 * gl_WorldRayDirectionEXT.y;
    float _801 = _798 * gl_WorldRayDirectionEXT.z;
    float _847;
    if (_607)
    {
        float _811 = (_566 * _551) - (_563 * _554);
        float _814 = (_560 * _554) - (_566 * _548);
        float _817 = (_563 * _548) - (_560 * _551);
        float _845 = ((log2((((float(_794.y) * 0.5) * float(_794.x)) * abs((((_355 - _243) * (_298 - _242)) - ((_354 - _242) * (_299 - _243))) * 2.384185791015625e-07)) / (sqrt(((_814 * _814) + (_817 * _817)) + (_811 * _811)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_799, _800, _801), vec3(_581, _583, _584))));
        _847 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    }
    else
    {
        _847 = 0.0;
    }
    vec4 _850 = textureLod(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) + _567)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x) + _568)) + cbTextureTilingScale._m0[1u].w), _847);
    float _855 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].x;
    float _861 = ((_850.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _863 = (-0.0) - (cbMtdParam._m0[12u].w * ((_850.x * 0.5) + (-0.25)));
    float _865 = fract(_855);
    float _867 = fract(_855 + 0.5);
    float _879 = abs((_865 * 2.0) + (-1.0));
    vec4 _896 = textureLod(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_865 * _863) + _773) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_861 * _865) + _774) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _898 = _896.x;
    float _899 = _896.y;
    float _900 = _896.z;
    vec4 _901 = textureLod(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_867 * _863) + _773) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_861 * _867) + _774) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _919 = cbMtdParam._m0[12u].y * _751;
    float _936 = inversesqrt(dot(vec3(_581, _583, _584), vec3(_581, _583, _584)));
    float _937 = _936 * _581;
    float _938 = _936 * _583;
    float _939 = _936 * _584;
    float _951 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _952 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _953 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _954 = (-0.0) - _799;
    float _955 = (-0.0) - _800;
    float _956 = (-0.0) - _801;
    float _962 = float(gl_LaunchIDEXT.x);
    float _963 = float(gl_LaunchIDEXT.y);
    float _966 = float(gl_LaunchSizeEXT.x);
    float _980 = fract(fract(sin(dot(vec2(_962 / _966, _963 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _993 = fract(fract(sin(dot(vec2((_962 + 128.0) / _966, (_963 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _1003 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1004 = _1003.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1004, _1003.w, _1004, vec3(_951, _952, _953), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1084;
    float _1085;
    float _1086;
    float _1087;
    float _1088;
    float _1089;
    if (_68._m0 == 0u)
    {
        float _1025 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_937, _938, _939));
        float _1349 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1028 = isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0));
        float _1039 = g_sceneCB._m0[4u].x - _799;
        float _1040 = g_sceneCB._m0[4u].y - _800;
        float _1041 = g_sceneCB._m0[4u].z - _801;
        float _1045 = inversesqrt(dot(vec3(_1039, _1040, _1041), vec3(_1039, _1040, _1041)));
        float _1049 = dot(vec3(_937, _938, _939), vec3(g_sceneCB._m0[4u].xyz));
        float _1360 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1052 = isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0));
        float _1053 = dot(vec3(_937, _938, _939), vec3(_954, _955, _956));
        float _1371 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
        float _1057 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1039 * _1045, _1040 * _1045, _1041 * _1045));
        float _1382 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1068 = (exp2(log2(1.0 - (isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1074 = (0.5 / ((_1052 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0))))) * _1052;
        float _1393 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1076 = (isnan(1.0) ? _1393 : (isnan(_1393) ? 1.0 : min(_1393, 1.0))) * 0.31831014156341552734375;
        _1084 = ((_669 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1028;
        _1085 = ((_670 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1028;
        _1086 = ((_671 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1028;
        _1087 = (_1068 * g_sceneCB._m0[5u].x) * _1076;
        _1088 = (_1068 * g_sceneCB._m0[5u].y) * _1076;
        _1089 = (_1068 * g_sceneCB._m0[5u].z) * _1076;
    }
    else
    {
        _1084 = 0.0;
        _1085 = 0.0;
        _1086 = 0.0;
        _1087 = 0.0;
        _1088 = 0.0;
        _1089 = 0.0;
    }
    bool _1091 = abs(_938) < 0.89999997615814208984375;
    float _1093 = float(_1091);
    float _1094 = _1091 ? 0.0 : 1.0;
    float _1097 = (_1093 * _939) - (_1094 * _938);
    float _1098 = _1094 * _937;
    float _1100 = (-0.0) - (_937 * _1093);
    float _1104 = inversesqrt(dot(vec3(_1097, _1098, _1100), vec3(_1097, _1098, _1100)));
    float _1105 = _1097 * _1104;
    float _1106 = _1098 * _1104;
    float _1107 = _1104 * _1100;
    float _1110 = (_1106 * _939) - (_1107 * _938);
    float _1113 = (_1107 * _937) - (_1105 * _939);
    float _1116 = (_1105 * _938) - (_1106 * _937);
    float _1118;
    float _1126;
    float _1117 = 0.0;
    uint _1119 = 0u;
    float _1123;
    bool _1125;
    for (;;)
    {
        _1123 = (float(_1119) + _980) * 0.03125;
        _1125 = _1119 == 0u;
        float frontier_phi_45_pred;
        if (_1125)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1261;
            float _1262;
            uint _1264;
            _1261 = 0.0;
            _1262 = 0.5;
            _1264 = _1119;
            float _1127;
            for (;;)
            {
                _1127 = ((_1264 & 1u) != 0u) ? (_1262 + _1261) : _1261;
                uint _1265 = _1264 >> 1u;
                if (_1265 == 0u)
                {
                    break;
                }
                else
                {
                    _1261 = _1127;
                    _1262 *= 0.5;
                    _1264 = _1265;
                }
            }
            frontier_phi_45_pred = _1127;
        }
        _1126 = frontier_phi_45_pred;
        float _1128 = _1126 + _993;
        float _1132 = sqrt(_1123);
        float _1133 = ((_1128 > 1.0) ? (_1128 + (-1.0)) : _1128) * 6.283185482025146484375;
        float _1136 = cos(_1133) * _1132;
        float _1138 = sin(_1133) * _1132;
        float _1140 = sqrt(1.0 - _1123);
        float _1153 = ((_1140 * _937) + (_1136 * _1110)) + (_1138 * _1105);
        float _1154 = ((_1140 * _938) + (_1136 * _1113)) + (_1138 * _1106);
        float _1155 = ((_1140 * _939) + (_1136 * _1116)) + (_1138 * _1107);
        _67._m0 = 1u;
        uvec4 _1159 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1160 = _1159.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1160, _1159.w, _1160, vec3(_951, _952, _953), 9.9999997473787516355514526367188e-05, vec3(_1153, _1154, _1155), 10000.0, 1);
        float _1166 = dot(vec3(_937, _938, _939), vec3(_1153, _1154, _1155));
        float _1404 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1169 = isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0));
        _1118 = ((float(_67._m0 == 0u) * _1169) / (_1169 * 0.3183098733425140380859375)) + _1117;
        uint _1120 = _1119 + 1u;
        if (_1120 == 32u)
        {
            break;
        }
        else
        {
            _1117 = _1118;
            _1119 = _1120;
            continue;
        }
    }
    float _1177 = _1118 * 0.009947183541953563690185546875;
    float _1182 = dot(vec3(_799, _800, _801), vec3(_937, _938, _939)) * 2.0;
    vec4 _1194 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_799 - (_1182 * _937), _800 - (_1182 * _938), _801 - (_1182 * _939)), 4.0);
    float _1199 = dot(vec3(_954, _955, _956), vec3(_937, _938, _939));
    float _1415 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1208 = (exp2(log2(1.0 - (isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1214 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_937, _938, _939), 0.0);
    float _1226 = ((_1084 + ((cbMtdParam._m0[12u].z * _751) * ((((cbMtdParam._m0[9u].x * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].x) * (((_901.x - _898) * _879) + _898)) + (cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].y)))) + _1087) + (((_1214.x * _669) + (_1208 * _1194.x)) * _1177);
    float _1231 = ((_1085 + (((((_919 * cbMtdParam._m0[9u].y) * cbMtdParam._m0[12u].x) * (((_901.y - _899) * _879) + _899)) + ((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].y) * _749.y)) * cbMtdParam._m0[12u].z)) + _1088) + (((_1214.y * _670) + (_1208 * _1194.y)) * _1177);
    float _1236 = ((_1086 + (((((_919 * cbMtdParam._m0[9u].z) * cbMtdParam._m0[12u].x) * (((_901.z - _900) * _879) + _900)) + ((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].y) * _749.z)) * cbMtdParam._m0[12u].z)) + _1089) + (((_1214.z * _671) + (_1208 * _1194.z)) * _1177);
    float _1426 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _1437 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    float _1448 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    bool _1244 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1255;
    _1255.x = _1244 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0)));
    _1255.y = _1244 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0)));
    _1255.z = _1244 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0)));
    payload._m0 = _1255;
}


