#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1685;

void main()
{
    float _75 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _114 = sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _75)))));
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _164;
        }
        else
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _161 >> 16u;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder;
        _169 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _180 = _174 * _166;
    uint _181 = _180 + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 16u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 20u;
    }
    uvec4 _216 = texelFetch(l_geomAttrib_0, int((_208 + _180) >> 2u));
    uint _217 = _216.x;
    bool _231 = _175 == 0u;
    uint _232;
    if (_231)
    {
        _232 = _208 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 12u;
        }
        _232 = frontier_phi_9_10_ladder;
    }
    uvec4 _240 = texelFetch(l_geomAttrib_0, int(((_180 + 4u) + (_176 ? (_232 + 4u) : _232)) >> 2u));
    uint _241 = _240.x;
    float _245 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_241) >> int(16u))));
    uint _247 = _174 * _168;
    uint _248 = _247 + 12u;
    uint _269;
    uint _270;
    uint _271;
    uint _272;
    if (_179)
    {
        uvec4 _250 = texelFetch(l_geomAttrib_0, int(_248 >> 2u));
        uint _251 = _250.x;
        _269 = _251 & 255u;
        _270 = (_251 >> 8u) & 255u;
        _271 = (_251 >> 16u) & 255u;
        _272 = 16u;
    }
    else
    {
        uint _257 = _248 >> 2u;
        uvec2 _263 = uvec2(texelFetch(l_geomAttrib_0, int(_257)).x, texelFetch(l_geomAttrib_0, int(_257 + 1u)).x);
        uint _264 = _263.x;
        _269 = _264 & 65535u;
        _270 = _264 >> 16u;
        _271 = _263.y & 65535u;
        _272 = 20u;
    }
    uvec4 _278 = texelFetch(l_geomAttrib_0, int((_272 + _247) >> 2u));
    uint _279 = _278.x;
    uint _291;
    if (_231)
    {
        _291 = _272 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _272 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _272 + 12u;
        }
        _291 = frontier_phi_16_17_ladder;
    }
    uvec4 _299 = texelFetch(l_geomAttrib_0, int(((_247 + 4u) + (_176 ? (_291 + 4u) : _291)) >> 2u));
    uint _300 = _299.x;
    float _304 = float(int(uint(int(_300 << 16u) >> int(16u))));
    float _305 = float(int(uint(int(_300) >> int(16u))));
    uint _306 = _174 * _169;
    uint _307 = _306 + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_179)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 16u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 20u;
    }
    uvec4 _337 = texelFetch(l_geomAttrib_0, int((_331 + _306) >> 2u));
    uint _338 = _337.x;
    uint _350;
    if (_231)
    {
        _350 = _331 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _331 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _331 + 12u;
        }
        _350 = frontier_phi_23_24_ladder;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int(((_306 + 4u) + (_176 ? (_350 + 4u) : _350)) >> 2u));
    uint _359 = _358.x;
    float _363 = float(int(uint(int(_359 << 16u) >> int(16u))));
    float _364 = float(int(uint(int(_359) >> int(16u))));
    bool _366 = _125.z == 0u;
    float _402;
    float _403;
    float _404;
    if (_366)
    {
        uint _369 = _166 * 3u;
        uvec3 _378 = uvec3(texelFetch(l_geomPositionBuffer, int(_369)).x, texelFetch(l_geomPositionBuffer, int(_369 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_369 + 2u)).x);
        _402 = uintBitsToFloat(_378.x);
        _403 = uintBitsToFloat(_378.y);
        _404 = uintBitsToFloat(_378.z);
    }
    else
    {
        uint _386 = _166 * 2u;
        uvec2 _392 = uvec2(texelFetch(l_geomPositionBuffer, int(_386)).x, texelFetch(l_geomPositionBuffer, int(_386 + 1u)).x);
        uint _393 = _392.x;
        _402 = unpackHalf2x16(_393).x;
        _403 = unpackHalf2x16(_393 >> 16u).x;
        _404 = unpackHalf2x16(_392.y).x;
    }
    float _440;
    float _441;
    float _442;
    if (_366)
    {
        uint _407 = _168 * 3u;
        uvec3 _416 = uvec3(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_407 + 2u)).x);
        _440 = uintBitsToFloat(_416.x);
        _441 = uintBitsToFloat(_416.y);
        _442 = uintBitsToFloat(_416.z);
    }
    else
    {
        uint _424 = _168 * 2u;
        uvec2 _430 = uvec2(texelFetch(l_geomPositionBuffer, int(_424)).x, texelFetch(l_geomPositionBuffer, int(_424 + 1u)).x);
        uint _431 = _430.x;
        _440 = unpackHalf2x16(_431).x;
        _441 = unpackHalf2x16(_431 >> 16u).x;
        _442 = unpackHalf2x16(_430.y).x;
    }
    float _478;
    float _479;
    float _480;
    if (_366)
    {
        uint _445 = _169 * 3u;
        uvec3 _454 = uvec3(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_445 + 2u)).x);
        _478 = uintBitsToFloat(_454.x);
        _479 = uintBitsToFloat(_454.y);
        _480 = uintBitsToFloat(_454.z);
    }
    else
    {
        uint _462 = _169 * 2u;
        uvec2 _468 = uvec2(texelFetch(l_geomPositionBuffer, int(_462)).x, texelFetch(l_geomPositionBuffer, int(_462 + 1u)).x);
        uint _469 = _468.x;
        _478 = unpackHalf2x16(_469).x;
        _479 = unpackHalf2x16(_469 >> 16u).x;
        _480 = unpackHalf2x16(_468.y).x;
    }
    float _483 = (1.0 - hit._m0.x) - hit._m0.y;
    float _517 = (_304 - _245) * 0.00048828125;
    float _519 = (_305 - _246) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _523 = (_364 - _246) * 0.00048828125;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _547 = _442 - _404;
    float _550 = fma(_547, gl_ObjectToWorldEXT[2u].x, fma(_546, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _545));
    float _553 = fma(_547, gl_ObjectToWorldEXT[2u].y, fma(_546, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _545));
    float _556 = fma(_547, gl_ObjectToWorldEXT[2u].z, fma(_546, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _545));
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _559 = _480 - _404;
    float _562 = fma(_559, gl_ObjectToWorldEXT[2u].x, fma(_558, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _557));
    float _565 = fma(_559, gl_ObjectToWorldEXT[2u].y, fma(_558, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _557));
    float _568 = fma(_559, gl_ObjectToWorldEXT[2u].z, fma(_558, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _557));
    float _569 = (((_304 * hit._m0.x) + (_245 * _483)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _570 = (((_305 * hit._m0.x) + (_246 * _483)) + (_364 * hit._m0.y)) * 0.00048828125;
    float _574 = (((float(_205) * _483) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _577 = (((float(_206) * _483) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = (((float(_207) * _483) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _581 = _574 * 0.0078740157186985015869140625;
    float _583 = _577 * 0.0078740157186985015869140625;
    float _584 = _580 * 0.0078740157186985015869140625;
    float _597 = ((((float(_217 & 255u) * _483) + (-127.0)) + (float(_279 & 255u) * hit._m0.x)) + (float(_338 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_217 >> 8u) & 255u) * _483) + (-127.0)) + (float((_279 >> 8u) & 255u) * hit._m0.x)) + (float((_338 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float((_217 >> 16u) & 255u) * _483) + (-127.0)) + (float((_279 >> 16u) & 255u) * hit._m0.x)) + (float((_338 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float(_217 >> 24u) * _483) + (-127.0)) + (float(_279 >> 24u) * hit._m0.x)) + (float(_338 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((_598 * _584) - (_599 * _583)) * _600;
    float _611 = ((_599 * _581) - (_597 * _584)) * _600;
    float _612 = ((_597 * _583) - (_598 * _581)) * _600;
    float _616 = inversesqrt(dot(vec3(_610, _611, _612), vec3(_610, _611, _612)));
    uvec2 _631 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_0, int(0u)));
    bool _636 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _689;
    if (_636)
    {
        float _647 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _653 = (_568 * _553) - (_565 * _556);
        float _656 = (_562 * _556) - (_568 * _550);
        float _659 = (_565 * _550) - (_562 * _553);
        float _686 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_656 * _656) + (_659 * _659)) + (_653 * _653)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_647 * gl_WorldRayDirectionEXT.x, _647 * gl_WorldRayDirectionEXT.y, _647 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _689 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    }
    else
    {
        _689 = 0.0;
    }
    vec4 _693 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _569) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _570) + cbTextureTilingScale._m0[1u].w), _689);
    float _698 = _693.w;
    float _703 = exp2(log2(1.0 - _698) * 10.0);
    uvec2 _715 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_3, int(0u)));
    float _766;
    if (_636)
    {
        float _726 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _732 = (_568 * _553) - (_565 * _556);
        float _735 = (_562 * _556) - (_568 * _550);
        float _738 = (_565 * _550) - (_562 * _553);
        float _764 = ((log2((((float(_715.y) * 0.5) * float(_715.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_735 * _735) + (_738 * _738)) + (_732 * _732)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_726 * gl_WorldRayDirectionEXT.x, _726 * gl_WorldRayDirectionEXT.y, _726 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _766 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _769 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _569) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _570) + cbTextureTilingScale._m0[4u].w), _766);
    uvec2 _794 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_1, int(0u)));
    float _845;
    if (_636)
    {
        float _805 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _811 = (_568 * _553) - (_565 * _556);
        float _814 = (_562 * _556) - (_568 * _550);
        float _817 = (_565 * _550) - (_562 * _553);
        float _843 = ((log2((((float(_794.y) * 0.5) * float(_794.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_814 * _814) + (_817 * _817)) + (_811 * _811)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_805 * gl_WorldRayDirectionEXT.x, _805 * gl_WorldRayDirectionEXT.y, _805 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _845 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    }
    else
    {
        _845 = 0.0;
    }
    vec4 _847 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _569) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _570) + cbTextureTilingScale._m0[2u].w), _845);
    float _858 = cbMtdParam._m0[9u].x * _847.x;
    float _859 = cbMtdParam._m0[9u].y * _847.y;
    float _860 = cbMtdParam._m0[9u].z * _847.z;
    float _867 = (((cbMtdParam._m0[10u].x * _769.x) - _858) * _703) + _858;
    float _868 = (((cbMtdParam._m0[10u].y * _769.y) - _859) * _703) + _859;
    float _869 = (((cbMtdParam._m0[10u].z * _769.z) - _860) * _703) + _860;
    float _872 = exp2(log2(_698) * 10.0);
    uvec2 _884 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_2, int(0u)));
    float _935;
    if (_636)
    {
        float _895 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _901 = (_568 * _553) - (_565 * _556);
        float _904 = (_562 * _556) - (_568 * _550);
        float _907 = (_565 * _550) - (_562 * _553);
        float _933 = ((log2((((float(_884.y) * 0.5) * float(_884.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_904 * _904) + (_907 * _907)) + (_901 * _901)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_895 * gl_WorldRayDirectionEXT.x, _895 * gl_WorldRayDirectionEXT.y, _895 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _935 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    }
    else
    {
        _935 = 0.0;
    }
    vec4 _937 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _569) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _570) + cbTextureTilingScale._m0[3u].w), _935);
    uvec2 _971 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_7, int(0u)));
    float _1022;
    if (_636)
    {
        float _982 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _988 = (_568 * _553) - (_565 * _556);
        float _991 = (_562 * _556) - (_568 * _550);
        float _994 = (_565 * _550) - (_562 * _553);
        float _1020 = ((log2((((float(_971.y) * 0.5) * float(_971.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_991 * _991) + (_994 * _994)) + (_988 * _988)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_982 * gl_WorldRayDirectionEXT.x, _982 * gl_WorldRayDirectionEXT.y, _982 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _1022 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    }
    else
    {
        _1022 = 0.0;
    }
    vec4 _1024 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _569) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _570) + cbTextureTilingScale._m0[0u].w), _1022);
    float _1031 = (((((cbMtdParam._m0[11u].x * _937.x) - _867) * _872) + _867) * 4.55000019073486328125) * _1024.x;
    float _1033 = (((((cbMtdParam._m0[11u].y * _937.y) - _868) * _872) + _868) * 4.55000019073486328125) * _1024.y;
    float _1035 = (((((cbMtdParam._m0[11u].z * _937.z) - _869) * _872) + _869) * 4.55000019073486328125) * _1024.z;
    uvec2 _1051 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_5, int(0u)));
    float _1102;
    if (_636)
    {
        float _1062 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1068 = (_568 * _553) - (_565 * _556);
        float _1071 = (_562 * _556) - (_568 * _550);
        float _1074 = (_565 * _550) - (_562 * _553);
        float _1100 = ((log2((((float(_1051.y) * 0.5) * float(_1051.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_1071 * _1071) + (_1074 * _1074)) + (_1068 * _1068)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1062 * gl_WorldRayDirectionEXT.x, _1062 * gl_WorldRayDirectionEXT.y, _1062 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _1102 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    }
    else
    {
        _1102 = 0.0;
    }
    vec4 _1104 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _569) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _570) + cbTextureTilingScale._m0[5u].w), _1102);
    uvec2 _1122 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_6, int(0u)));
    float _1173;
    if (_636)
    {
        float _1133 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1139 = (_568 * _553) - (_565 * _556);
        float _1142 = (_562 * _556) - (_568 * _550);
        float _1145 = (_565 * _550) - (_562 * _553);
        float _1171 = ((log2((((float(_1122.y) * 0.5) * float(_1122.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_1142 * _1142) + (_1145 * _1145)) + (_1139 * _1139)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1133 * gl_WorldRayDirectionEXT.x, _1133 * gl_WorldRayDirectionEXT.y, _1133 * gl_WorldRayDirectionEXT.z), vec3(_581, _583, _584))));
        _1173 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
    }
    else
    {
        _1173 = 0.0;
    }
    vec4 _1175 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _569) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _570) + cbTextureTilingScale._m0[6u].w), _1173);
    float _1177 = _1175.x;
    float _1178 = _1175.y;
    float _1181 = cbMtdParam._m0[12u].x + _1175.z;
    float _1184 = (((cbMtdParam._m0[12u].y + _1104.z) - _1181) * _703) + _1181;
    uvec2 _1196 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_8, int(0u)));
    float _1200 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1201 = _1200 * gl_WorldRayDirectionEXT.x;
    float _1202 = _1200 * gl_WorldRayDirectionEXT.y;
    float _1203 = _1200 * gl_WorldRayDirectionEXT.z;
    float _1247;
    if (_636)
    {
        float _1213 = (_568 * _553) - (_565 * _556);
        float _1216 = (_562 * _556) - (_568 * _550);
        float _1219 = (_565 * _550) - (_562 * _553);
        float _1245 = ((log2((((float(_1196.y) * 0.5) * float(_1196.x)) * abs((_523 * _517) - (_522 * _519))) / (sqrt(((_1216 * _1216) + (_1219 * _1219)) + (_1213 * _1213)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1201, _1202, _1203), vec3(_581, _583, _584))));
        _1247 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
    }
    else
    {
        _1247 = 0.0;
    }
    vec4 _1249 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _569) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _570) + cbTextureTilingScale._m0[7u].w), _1247);
    float _1262 = ((((_1249.z - _1184) + cbMtdParam._m0[13u].x) * _872) + _1184) * _693.z;
    float _1273 = ((_1104.x - _1177) * _703) + _1177;
    float _1274 = ((_1104.y - _1178) * _703) + _1178;
    float _1283 = ((((_1249.x - _1273) * _872) + _1273) * 2.0) + (-1.0);
    float _1284 = ((((_1249.y - _1274) * _872) + _1274) * 2.0) + (-1.0);
    float _1285 = dot(vec2(_1283, _1284), vec2(_1283, _1284));
    float _1813 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
    float _1290 = sqrt(1.0 - (isnan(1.0) ? _1813 : (isnan(_1813) ? 1.0 : min(_1813, 1.0))));
    float _1293 = _1283 + (cbMtdParam._m0[12u].z * ((_693.x * 2.0) + (-1.0)));
    float _1294 = _1284 + (cbMtdParam._m0[12u].z * ((_693.y * 2.0) + (-1.0)));
    float _1297 = fma(_1290, _581, fma(_1294, _597, (_616 * _610) * _1293));
    float _1300 = fma(_1290, _583, fma(_1294, _598, (_616 * _611) * _1293));
    float _1303 = fma(_1290, _584, fma(_1294, _599, (_616 * _612) * _1293));
    float _1307 = inversesqrt(dot(vec3(_1297, _1300, _1303), vec3(_1297, _1300, _1303)));
    float _1308 = _1307 * _1297;
    float _1309 = _1307 * _1300;
    float _1310 = _1307 * _1303;
    float _1322 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1323 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1324 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1325 = (-0.0) - _1201;
    float _1327 = (-0.0) - _1202;
    float _1328 = (-0.0) - _1203;
    float _1334 = float(gl_LaunchIDEXT.x);
    float _1335 = float(gl_LaunchIDEXT.y);
    float _1338 = float(gl_LaunchSizeEXT.x);
    float _1352 = fract(fract(sin(dot(vec2(_1334 / _1338, _1335 / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1365 = fract(fract(sin(dot(vec2((_1334 + 128.0) / _1338, (_1335 + 128.0) / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1366 = 1.0 - cbMtdParam._m0[12u].w;
    float _1367 = _1031 * _1366;
    float _1368 = _1033 * _1366;
    float _1369 = _1035 * _1366;
    float _1374 = (_1031 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1375 = (_1033 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1376 = (_1035 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1377 = _1374 + 0.039999999105930328369140625;
    float _1379 = _1375 + 0.039999999105930328369140625;
    float _1380 = _1376 + 0.039999999105930328369140625;
    _67._m0 = 1u;
    uvec4 _1390 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1391 = _1390.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1391, _1390.w, _1391, vec3(_1322, _1323, _1324), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    if (_67._m0 == 0u)
    {
        float _1412 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1308, _1309, _1310));
        float _1824 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1415 = isnan(1.0) ? _1824 : (isnan(_1824) ? 1.0 : min(_1824, 1.0));
        float _1434 = 1.0 - (sqrt((_1262 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1435 = _1434 * _1434;
        float _1436 = g_sceneCB._m0[4u].x - _1201;
        float _1437 = g_sceneCB._m0[4u].y - _1202;
        float _1438 = g_sceneCB._m0[4u].z - _1203;
        float _1442 = inversesqrt(dot(vec3(_1436, _1437, _1438), vec3(_1436, _1437, _1438)));
        float _1443 = _1442 * _1436;
        float _1444 = _1442 * _1437;
        float _1445 = _1442 * _1438;
        float _1446 = dot(vec3(_1308, _1309, _1310), vec3(g_sceneCB._m0[4u].xyz));
        float _1835 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1449 = isnan(1.0) ? _1835 : (isnan(_1835) ? 1.0 : min(_1835, 1.0));
        float _1450 = dot(vec3(_1308, _1309, _1310), vec3(_1325, _1327, _1328));
        float _1846 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1453 = isnan(1.0) ? _1846 : (isnan(_1846) ? 1.0 : min(_1846, 1.0));
        float _1454 = dot(vec3(_1308, _1309, _1310), vec3(_1443, _1444, _1445));
        float _1857 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1457 = isnan(1.0) ? _1857 : (isnan(_1857) ? 1.0 : min(_1857, 1.0));
        float _1458 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1443, _1444, _1445));
        float _1868 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1462 = _1435 * _1435;
        float _1466 = ((_1457 * _1457) * (_1462 + (-1.0))) + 1.0;
        float _1475 = exp2(log2(1.0 - (isnan(1.0) ? _1868 : (isnan(_1868) ? 1.0 : min(_1868, 1.0)))) * 5.0);
        float _1486 = 1.0 - _1435;
        float _1497 = (0.5 / (((_1453 * ((_1449 * _1486) + _1435)) + 9.9999999392252902907785028219223e-09) + (((_1453 * _1486) + _1435) * _1449))) * _1449;
        float _1879 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1499 = (isnan(1.0) ? _1879 : (isnan(_1879) ? 1.0 : min(_1879, 1.0))) * (_1462 / ((_1466 * _1466) * 3.141590118408203125));
        _1506 = ((_1367 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1415;
        _1507 = ((_1368 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1415;
        _1508 = ((_1369 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1415;
        _1509 = (((_1475 * (0.959999978542327880859375 - _1374)) + _1377) * g_sceneCB._m0[5u].x) * _1499;
        _1510 = (((_1475 * (0.959999978542327880859375 - _1375)) + _1379) * g_sceneCB._m0[5u].y) * _1499;
        _1511 = (((_1475 * (0.959999978542327880859375 - _1376)) + _1380) * g_sceneCB._m0[5u].z) * _1499;
    }
    else
    {
        _1506 = 0.0;
        _1507 = 0.0;
        _1508 = 0.0;
        _1509 = 0.0;
        _1510 = 0.0;
        _1511 = 0.0;
    }
    bool _1513 = abs(_1309) < 0.89999997615814208984375;
    float _1515 = float(_1513);
    float _1516 = _1513 ? 0.0 : 1.0;
    float _1519 = (_1515 * _1310) - (_1516 * _1309);
    float _1520 = _1516 * _1308;
    float _1522 = (-0.0) - (_1308 * _1515);
    float _1526 = inversesqrt(dot(vec3(_1519, _1520, _1522), vec3(_1519, _1520, _1522)));
    float _1527 = _1519 * _1526;
    float _1528 = _1520 * _1526;
    float _1529 = _1526 * _1522;
    float _1532 = (_1528 * _1310) - (_1529 * _1309);
    float _1535 = (_1529 * _1308) - (_1527 * _1310);
    float _1538 = (_1527 * _1309) - (_1528 * _1308);
    float _1540;
    float _1548;
    float _1539 = 0.0;
    uint _1541 = 0u;
    float _1545;
    bool _1547;
    for (;;)
    {
        _1545 = (float(_1541) + _1352) * 0.03125;
        _1547 = _1541 == 0u;
        float frontier_phi_55_pred;
        if (_1547)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1690;
            float _1691;
            uint _1693;
            _1690 = 0.0;
            _1691 = 0.5;
            _1693 = _1541;
            float _1549;
            for (;;)
            {
                _1549 = ((_1693 & 1u) != 0u) ? (_1691 + _1690) : _1690;
                uint _1694 = _1693 >> 1u;
                if (_1694 == 0u)
                {
                    break;
                }
                else
                {
                    _1690 = _1549;
                    _1691 *= 0.5;
                    _1693 = _1694;
                }
            }
            frontier_phi_55_pred = _1549;
        }
        _1548 = frontier_phi_55_pred;
        float _1550 = _1548 + _1365;
        float _1554 = sqrt(_1545);
        float _1555 = ((_1550 > 1.0) ? (_1550 + (-1.0)) : _1550) * 6.283185482025146484375;
        float _1558 = cos(_1555) * _1554;
        float _1560 = sin(_1555) * _1554;
        float _1562 = sqrt(1.0 - _1545);
        float _1575 = ((_1562 * _1308) + (_1558 * _1532)) + (_1560 * _1527);
        float _1576 = ((_1562 * _1309) + (_1558 * _1535)) + (_1560 * _1528);
        float _1577 = ((_1562 * _1310) + (_1558 * _1538)) + (_1560 * _1529);
        _66._m0 = 1u;
        uvec4 _1581 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1582 = _1581.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1582, _1581.w, _1582, vec3(_1322, _1323, _1324), 9.9999997473787516355514526367188e-05, vec3(_1575, _1576, _1577), 10000.0, 1);
        float _1588 = dot(vec3(_1308, _1309, _1310), vec3(_1575, _1576, _1577));
        float _1890 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1591 = isnan(1.0) ? _1890 : (isnan(_1890) ? 1.0 : min(_1890, 1.0));
        _1540 = ((float(_66._m0 == 0u) * _1591) / (_1591 * 0.3183098733425140380859375)) + _1539;
        uint _1542 = _1541 + 1u;
        if (_1542 == 32u)
        {
            break;
        }
        else
        {
            _1539 = _1540;
            _1541 = _1542;
            continue;
        }
    }
    float _1599 = _1540 * 0.009947183541953563690185546875;
    float _1604 = dot(vec3(_1201, _1202, _1203), vec3(_1308, _1309, _1310)) * 2.0;
    vec4 _1619 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1201 - (_1604 * _1308), _1202 - (_1604 * _1309), _1203 - (_1604 * _1310)), 4.0 - (_1262 * 8.0));
    float _1624 = dot(vec3(_1325, _1327, _1328), vec3(_1308, _1309, _1310));
    float _1901 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
    float _1634 = exp2(log2(1.0 - (isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0)))) * 5.0);
    vec4 _1646 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1308, _1309, _1310), 0.0);
    float _1657 = (_1509 + _1506) + (((_1646.x * _1367) + (((_1634 * (0.959999978542327880859375 - _1374)) + _1377) * _1619.x)) * _1599);
    float _1661 = (_1510 + _1507) + (((_1646.y * _1368) + (((_1634 * (0.959999978542327880859375 - _1375)) + _1379) * _1619.y)) * _1599);
    float _1665 = (_1511 + _1508) + (((_1646.z * _1369) + (((_1634 * (0.959999978542327880859375 - _1376)) + _1380) * _1619.z)) * _1599);
    float _1912 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
    float _1923 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
    float _1934 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
    bool _1673 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1684;
    _1684.x = _1673 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0)));
    _1684.y = _1673 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1923 : (isnan(_1923) ? 1.0 : min(_1923, 1.0)));
    _1684.z = _1673 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1934 : (isnan(_1934) ? 1.0 : min(_1934, 1.0)));
    payload._m0 = _1684;
}


