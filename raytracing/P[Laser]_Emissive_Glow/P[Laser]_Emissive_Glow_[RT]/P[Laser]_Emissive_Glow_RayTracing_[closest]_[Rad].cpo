#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1023;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _114 = sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _161 >> 16u;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _164;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder_2;
        _169 = frontier_phi_3_2_ladder;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _181 = (_174 * _166) + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 20u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 24u;
    }
    bool _214 = _175 == 0u;
    uint _215;
    if (_214)
    {
        _215 = _208;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 8u;
        }
        _215 = frontier_phi_9_10_ladder;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((((_174 * _166) + 4u) + (_176 ? (_215 + 4u) : _215)) >> 2u));
    uint _227 = _226.x;
    float _231 = float(int(uint(int(_227 << 16u) >> int(16u))));
    float _232 = float(int(uint(int(_227) >> int(16u))));
    uint _234 = (_174 * _168) + 12u;
    uint _255;
    uint _256;
    uint _257;
    uint _258;
    if (_179)
    {
        uvec4 _236 = texelFetch(l_geomAttrib_0, int(_234 >> 2u));
        uint _237 = _236.x;
        _255 = _237 & 255u;
        _256 = (_237 >> 8u) & 255u;
        _257 = (_237 >> 16u) & 255u;
        _258 = 20u;
    }
    else
    {
        uint _243 = _234 >> 2u;
        uvec2 _249 = uvec2(texelFetch(l_geomAttrib_0, int(_243)).x, texelFetch(l_geomAttrib_0, int(_243 + 1u)).x);
        uint _250 = _249.x;
        _255 = _250 & 65535u;
        _256 = _250 >> 16u;
        _257 = _249.y & 65535u;
        _258 = 24u;
    }
    uint _262;
    if (_214)
    {
        _262 = _258;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _258 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _258 + 8u;
        }
        _262 = frontier_phi_16_17_ladder;
    }
    uvec4 _271 = texelFetch(l_geomAttrib_0, int((((_174 * _168) + 4u) + (_176 ? (_262 + 4u) : _262)) >> 2u));
    uint _272 = _271.x;
    float _276 = float(int(uint(int(_272 << 16u) >> int(16u))));
    float _277 = float(int(uint(int(_272) >> int(16u))));
    uint _279 = (_174 * _169) + 12u;
    uint _300;
    uint _301;
    uint _302;
    uint _303;
    if (_179)
    {
        uvec4 _281 = texelFetch(l_geomAttrib_0, int(_279 >> 2u));
        uint _282 = _281.x;
        _300 = _282 & 255u;
        _301 = (_282 >> 8u) & 255u;
        _302 = (_282 >> 16u) & 255u;
        _303 = 20u;
    }
    else
    {
        uint _288 = _279 >> 2u;
        uvec2 _294 = uvec2(texelFetch(l_geomAttrib_0, int(_288)).x, texelFetch(l_geomAttrib_0, int(_288 + 1u)).x);
        uint _295 = _294.x;
        _300 = _295 & 65535u;
        _301 = _295 >> 16u;
        _302 = _294.y & 65535u;
        _303 = 24u;
    }
    uint _307;
    if (_214)
    {
        _307 = _303;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _303 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _303 + 8u;
        }
        _307 = frontier_phi_23_24_ladder;
    }
    uvec4 _316 = texelFetch(l_geomAttrib_0, int((((_174 * _169) + 4u) + (_176 ? (_307 + 4u) : _307)) >> 2u));
    uint _317 = _316.x;
    float _321 = float(int(uint(int(_317 << 16u) >> int(16u))));
    float _322 = float(int(uint(int(_317) >> int(16u))));
    bool _324 = _125.z == 0u;
    float _360;
    float _361;
    float _362;
    if (_324)
    {
        uint _327 = _166 * 3u;
        uvec3 _336 = uvec3(texelFetch(l_geomPositionBuffer, int(_327)).x, texelFetch(l_geomPositionBuffer, int(_327 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_327 + 2u)).x);
        _360 = uintBitsToFloat(_336.x);
        _361 = uintBitsToFloat(_336.y);
        _362 = uintBitsToFloat(_336.z);
    }
    else
    {
        uint _344 = _166 * 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomPositionBuffer, int(_344)).x, texelFetch(l_geomPositionBuffer, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _360 = unpackHalf2x16(_351).x;
        _361 = unpackHalf2x16(_351 >> 16u).x;
        _362 = unpackHalf2x16(_350.y).x;
    }
    float _398;
    float _399;
    float _400;
    if (_324)
    {
        uint _365 = _168 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _168 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_324)
    {
        uint _403 = _169 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _169 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _441 = (1.0 - hit._m0.x) - hit._m0.y;
    float _463 = (_276 - _231) * 0.00048828125;
    float _465 = (_277 - _232) * 0.00048828125;
    float _468 = (_321 - _231) * 0.00048828125;
    float _469 = (_322 - _232) * 0.00048828125;
    float _491 = _398 - _360;
    float _492 = _399 - _361;
    float _493 = _400 - _362;
    float _496 = fma(_493, gl_ObjectToWorldEXT[2u].x, fma(_492, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _491));
    float _499 = fma(_493, gl_ObjectToWorldEXT[2u].y, fma(_492, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _491));
    float _502 = fma(_493, gl_ObjectToWorldEXT[2u].z, fma(_492, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _491));
    float _503 = _436 - _360;
    float _504 = _437 - _361;
    float _505 = _438 - _362;
    float _508 = fma(_505, gl_ObjectToWorldEXT[2u].x, fma(_504, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _503));
    float _511 = fma(_505, gl_ObjectToWorldEXT[2u].y, fma(_504, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _503));
    float _514 = fma(_505, gl_ObjectToWorldEXT[2u].z, fma(_504, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _503));
    float _515 = (((_276 * hit._m0.x) + (_231 * _441)) + (_321 * hit._m0.y)) * 0.00048828125;
    float _516 = (((_277 * hit._m0.x) + (_232 * _441)) + (_322 * hit._m0.y)) * 0.00048828125;
    float _520 = (((float(_205) * _441) + (-127.0)) + (float(_255) * hit._m0.x)) + (float(_300) * hit._m0.y);
    float _523 = (((float(_206) * _441) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _526 = (((float(_207) * _441) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _527 = _520 * 0.0078740157186985015869140625;
    float _529 = _523 * 0.0078740157186985015869140625;
    float _530 = _526 * 0.0078740157186985015869140625;
    uvec2 _551 = uvec2(textureSize(P_Laser_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    bool _556 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _609;
    if (_556)
    {
        float _567 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _573 = (_514 * _499) - (_511 * _502);
        float _576 = (_508 * _502) - (_514 * _496);
        float _579 = (_511 * _496) - (_508 * _499);
        float _606 = ((log2((((float(_551.y) * 0.5) * float(_551.x)) * abs((_469 * _463) - (_468 * _465))) / (sqrt(((_576 * _576) + (_579 * _579)) + (_573 * _573)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_567 * gl_WorldRayDirectionEXT.x, _567 * gl_WorldRayDirectionEXT.y, _567 * gl_WorldRayDirectionEXT.z), vec3(_527, _529, _530))));
        _609 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    }
    else
    {
        _609 = 0.0;
    }
    vec4 _613 = textureLod(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + _515) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _609);
    uvec2 _638 = uvec2(textureSize(P_Laser_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    float _642 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _643 = _642 * gl_WorldRayDirectionEXT.x;
    float _644 = _642 * gl_WorldRayDirectionEXT.y;
    float _645 = _642 * gl_WorldRayDirectionEXT.z;
    float _689;
    if (_556)
    {
        float _655 = (_514 * _499) - (_511 * _502);
        float _658 = (_508 * _502) - (_514 * _496);
        float _661 = (_511 * _496) - (_508 * _499);
        float _687 = ((log2((((float(_638.y) * 0.5) * float(_638.x)) * abs((_469 * _463) - (_468 * _465))) / (sqrt(((_658 * _658) + (_661 * _661)) + (_655 * _655)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_643, _644, _645), vec3(_527, _529, _530))));
        _689 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    }
    else
    {
        _689 = 0.0;
    }
    vec4 _691 = textureLod(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _515) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _689);
    float _732 = inversesqrt(dot(vec3(_527, _529, _530), vec3(_527, _529, _530)));
    float _733 = _732 * _527;
    float _734 = _732 * _529;
    float _735 = _732 * _530;
    float _747 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _748 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _749 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _750 = (-0.0) - _643;
    float _752 = (-0.0) - _644;
    float _753 = (-0.0) - _645;
    float _759 = float(gl_LaunchIDEXT.x);
    float _760 = float(gl_LaunchIDEXT.y);
    float _763 = float(gl_LaunchSizeEXT.x);
    float _777 = fract(fract(sin(dot(vec2(_759 / _763, _760 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _790 = fract(fract(sin(dot(vec2((_759 + 128.0) / _763, (_760 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _800 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _801 = _800.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _801, _800.w, _801, vec3(_747, _748, _749), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _867;
    float _868;
    float _869;
    if (_63._m0 == 0u)
    {
        float _822 = g_sceneCB._m0[4u].x - _643;
        float _823 = g_sceneCB._m0[4u].y - _644;
        float _824 = g_sceneCB._m0[4u].z - _645;
        float _828 = inversesqrt(dot(vec3(_822, _823, _824), vec3(_822, _823, _824)));
        float _832 = dot(vec3(_733, _734, _735), vec3(g_sceneCB._m0[4u].xyz));
        float _1109 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _835 = isnan(1.0) ? _1109 : (isnan(_1109) ? 1.0 : min(_1109, 1.0));
        float _836 = dot(vec3(_733, _734, _735), vec3(_750, _752, _753));
        float _1120 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _840 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_822 * _828, _823 * _828, _824 * _828));
        float _1131 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
        float _851 = (exp2(log2(1.0 - (isnan(1.0) ? _1131 : (isnan(_1131) ? 1.0 : min(_1131, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _857 = (0.5 / ((_835 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1120 : (isnan(_1120) ? 1.0 : min(_1120, 1.0))))) * _835;
        float _1142 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
        float _859 = (isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0))) * 0.31831014156341552734375;
        _867 = (_851 * g_sceneCB._m0[5u].x) * _859;
        _868 = (_851 * g_sceneCB._m0[5u].y) * _859;
        _869 = (_851 * g_sceneCB._m0[5u].z) * _859;
    }
    else
    {
        _867 = 0.0;
        _868 = 0.0;
        _869 = 0.0;
    }
    bool _871 = abs(_734) < 0.89999997615814208984375;
    float _873 = float(_871);
    float _874 = _871 ? 0.0 : 1.0;
    float _877 = (_873 * _735) - (_874 * _734);
    float _878 = _874 * _733;
    float _880 = (-0.0) - (_733 * _873);
    float _884 = inversesqrt(dot(vec3(_877, _878, _880), vec3(_877, _878, _880)));
    float _885 = _877 * _884;
    float _886 = _878 * _884;
    float _887 = _884 * _880;
    float _890 = (_886 * _735) - (_887 * _734);
    float _893 = (_887 * _733) - (_885 * _735);
    float _896 = (_885 * _734) - (_886 * _733);
    float _898;
    float _906;
    float _897 = 0.0;
    uint _899 = 0u;
    float _903;
    bool _905;
    for (;;)
    {
        _903 = (float(_899) + _777) * 0.03125;
        _905 = _899 == 0u;
        float frontier_phi_43_pred;
        if (_905)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1028;
            float _1029;
            uint _1031;
            _1028 = 0.0;
            _1029 = 0.5;
            _1031 = _899;
            float _907;
            for (;;)
            {
                _907 = ((_1031 & 1u) != 0u) ? (_1029 + _1028) : _1028;
                uint _1032 = _1031 >> 1u;
                if (_1032 == 0u)
                {
                    break;
                }
                else
                {
                    _1028 = _907;
                    _1029 *= 0.5;
                    _1031 = _1032;
                }
            }
            frontier_phi_43_pred = _907;
        }
        _906 = frontier_phi_43_pred;
        float _908 = _906 + _790;
        float _913 = sqrt(_903);
        float _914 = ((_908 > 1.0) ? (_908 + (-1.0)) : _908) * 6.283185482025146484375;
        float _917 = cos(_914) * _913;
        float _919 = sin(_914) * _913;
        float _921 = sqrt(1.0 - _903);
        float _934 = ((_921 * _733) + (_917 * _890)) + (_919 * _885);
        float _935 = ((_921 * _734) + (_917 * _893)) + (_919 * _886);
        float _936 = ((_921 * _735) + (_917 * _896)) + (_919 * _887);
        _62._m0 = 1u;
        uvec4 _940 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _941 = _940.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _941, _940.w, _941, vec3(_747, _748, _749), 9.9999997473787516355514526367188e-05, vec3(_934, _935, _936), 10000.0, 1);
        float _947 = dot(vec3(_733, _734, _735), vec3(_934, _935, _936));
        float _1153 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
        float _950 = isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0));
        _898 = ((float(_62._m0 == 0u) * _950) / (_950 * 0.3183098733425140380859375)) + _897;
        uint _900 = _899 + 1u;
        if (_900 == 32u)
        {
            break;
        }
        else
        {
            _897 = _898;
            _899 = _900;
            continue;
        }
    }
    float _959 = _898 * 0.009947183541953563690185546875;
    float _964 = dot(vec3(_643, _644, _645), vec3(_733, _734, _735)) * 2.0;
    vec4 _976 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_643 - (_964 * _733), _644 - (_964 * _734), _645 - (_964 * _735)), 4.0);
    float _981 = dot(vec3(_750, _752, _753), vec3(_733, _734, _735));
    float _1164 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _990 = (exp2(log2(1.0 - (isnan(1.0) ? _1164 : (isnan(_1164) ? 1.0 : min(_1164, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _998 = (_867 + ((((cbMtdParam._m0[9u].x * _613.x) + (cbMtdParam._m0[12u].x * _691.x)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].x)) + ((_976.x * _959) * _990);
    float _1000 = (_868 + ((((cbMtdParam._m0[9u].y * _613.y) + (cbMtdParam._m0[12u].y * _691.y)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].y)) + ((_976.y * _959) * _990);
    float _1002 = (_869 + ((((cbMtdParam._m0[9u].z * _613.z) + (cbMtdParam._m0[12u].z * _691.z)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].z)) + ((_976.z * _959) * _990);
    float _1175 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1186 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _1197 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    bool _1011 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1022;
    _1022.x = _1011 ? ((_520 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1175 : (isnan(_1175) ? 1.0 : min(_1175, 1.0)));
    _1022.y = _1011 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1186 : (isnan(_1186) ? 1.0 : min(_1186, 1.0)));
    _1022.z = _1011 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1197 : (isnan(_1197) ? 1.0 : min(_1197, 1.0)));
    payload._m0 = _1022;
}


