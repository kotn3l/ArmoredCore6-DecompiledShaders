#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_AMSN_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 2) uniform texture2D C_AMSN_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D C_AMSN_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_AMSN_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D C_AMSN_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1568;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uint _246 = ((_187 + 4u) + _243) >> 2u;
    uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
    uint _253 = _252.x;
    uint _254 = _252.y;
    float _258 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_253) >> int(16u))));
    float _263 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_254) >> int(16u))));
    uint _272 = _181 * _175;
    uint _273 = _272 + 12u;
    uint _294;
    uint _295;
    uint _296;
    uint _297;
    if (_186)
    {
        uvec4 _275 = texelFetch(l_geomAttrib_0, int(_273 >> 2u));
        uint _276 = _275.x;
        _294 = _276 & 255u;
        _295 = (_276 >> 8u) & 255u;
        _296 = (_276 >> 16u) & 255u;
        _297 = 16u;
    }
    else
    {
        uint _282 = _273 >> 2u;
        uvec2 _288 = uvec2(texelFetch(l_geomAttrib_0, int(_282)).x, texelFetch(l_geomAttrib_0, int(_282 + 1u)).x);
        uint _289 = _288.x;
        _294 = _289 & 65535u;
        _295 = _289 >> 16u;
        _296 = _288.y & 65535u;
        _297 = 20u;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int((_297 + _272) >> 2u));
    uint _304 = _303.x;
    uint _316;
    if (_238)
    {
        _316 = _297 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _297 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _297 + 12u;
        }
        _316 = frontier_phi_16_17_ladder;
    }
    uint _320 = _183 ? (_316 + 4u) : _316;
    uint _323 = ((_272 + 4u) + _320) >> 2u;
    uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
    uint _330 = _329.x;
    uint _331 = _329.y;
    float _335 = float(int(uint(int(_330 << 16u) >> int(16u))));
    float _336 = float(int(uint(int(_330) >> int(16u))));
    float _340 = float(int(uint(int(_331 << 16u) >> int(16u))));
    float _341 = float(int(uint(int(_331) >> int(16u))));
    uint _349 = _181 * _176;
    uint _350 = _349 + 12u;
    uint _371;
    uint _372;
    uint _373;
    uint _374;
    if (_186)
    {
        uvec4 _352 = texelFetch(l_geomAttrib_0, int(_350 >> 2u));
        uint _353 = _352.x;
        _371 = _353 & 255u;
        _372 = (_353 >> 8u) & 255u;
        _373 = (_353 >> 16u) & 255u;
        _374 = 16u;
    }
    else
    {
        uint _359 = _350 >> 2u;
        uvec2 _365 = uvec2(texelFetch(l_geomAttrib_0, int(_359)).x, texelFetch(l_geomAttrib_0, int(_359 + 1u)).x);
        uint _366 = _365.x;
        _371 = _366 & 65535u;
        _372 = _366 >> 16u;
        _373 = _365.y & 65535u;
        _374 = 20u;
    }
    uvec4 _380 = texelFetch(l_geomAttrib_0, int((_374 + _349) >> 2u));
    uint _381 = _380.x;
    uint _393;
    if (_238)
    {
        _393 = _374 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _374 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _374 + 12u;
        }
        _393 = frontier_phi_23_24_ladder;
    }
    uint _397 = _183 ? (_393 + 4u) : _393;
    uint _400 = ((_349 + 4u) + _397) >> 2u;
    uvec2 _406 = uvec2(texelFetch(l_geomAttrib_0, int(_400)).x, texelFetch(l_geomAttrib_0, int(_400 + 1u)).x);
    uint _407 = _406.x;
    uint _408 = _406.y;
    float _412 = float(int(uint(int(_407 << 16u) >> int(16u))));
    float _413 = float(int(uint(int(_407) >> int(16u))));
    float _417 = float(int(uint(int(_408 << 16u) >> int(16u))));
    float _418 = float(int(uint(int(_408) >> int(16u))));
    bool _427 = _132.z == 0u;
    float _463;
    float _464;
    float _465;
    if (_427)
    {
        uint _430 = _173 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _173 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_427)
    {
        uint _468 = _175 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _175 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _539;
    float _540;
    float _541;
    if (_427)
    {
        uint _506 = _176 * 3u;
        uvec3 _515 = uvec3(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_506 + 2u)).x);
        _539 = uintBitsToFloat(_515.x);
        _540 = uintBitsToFloat(_515.y);
        _541 = uintBitsToFloat(_515.z);
    }
    else
    {
        uint _523 = _176 * 2u;
        uvec2 _529 = uvec2(texelFetch(l_geomPositionBuffer, int(_523)).x, texelFetch(l_geomPositionBuffer, int(_523 + 1u)).x);
        uint _530 = _529.x;
        _539 = unpackHalf2x16(_530).x;
        _540 = unpackHalf2x16(_530 >> 16u).x;
        _541 = unpackHalf2x16(_529.y).x;
    }
    float _544 = (1.0 - hit._m0.x) - hit._m0.y;
    float _591 = (((float(texelFetch(l_geomAttrib_0, int(((_272 + 12u) + _320) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _243) >> 2u)).x & 255u) * _544)) + (float(texelFetch(l_geomAttrib_0, int(((_349 + 12u) + _397) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _595 = (_335 - _258) * 0.00048828125;
    float _597 = (_336 - _259) * 0.00048828125;
    float _600 = (_412 - _258) * 0.00048828125;
    float _601 = (_413 - _259) * 0.00048828125;
    float _604 = (_340 - _263) * 0.00048828125;
    float _605 = (_341 - _264) * 0.00048828125;
    float _608 = (_417 - _263) * 0.00048828125;
    float _609 = (_418 - _264) * 0.00048828125;
    float _631 = _501 - _463;
    float _632 = _502 - _464;
    float _633 = _503 - _465;
    float _636 = fma(_633, gl_ObjectToWorldEXT[2u].x, fma(_632, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _631));
    float _639 = fma(_633, gl_ObjectToWorldEXT[2u].y, fma(_632, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _631));
    float _642 = fma(_633, gl_ObjectToWorldEXT[2u].z, fma(_632, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _631));
    float _643 = _539 - _463;
    float _644 = _540 - _464;
    float _645 = _541 - _465;
    float _648 = fma(_645, gl_ObjectToWorldEXT[2u].x, fma(_644, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _643));
    float _651 = fma(_645, gl_ObjectToWorldEXT[2u].y, fma(_644, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _643));
    float _654 = fma(_645, gl_ObjectToWorldEXT[2u].z, fma(_644, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _643));
    float _655 = (((_335 * hit._m0.x) + (_258 * _544)) + (_412 * hit._m0.y)) * 0.00048828125;
    float _656 = (((_336 * hit._m0.x) + (_259 * _544)) + (_413 * hit._m0.y)) * 0.00048828125;
    float _657 = (((_340 * hit._m0.x) + (_263 * _544)) + (_417 * hit._m0.y)) * 0.00048828125;
    float _658 = (((_341 * hit._m0.x) + (_264 * _544)) + (_418 * hit._m0.y)) * 0.00048828125;
    float _662 = (((float(_212) * _544) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_371) * hit._m0.y);
    float _665 = (((float(_213) * _544) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_372) * hit._m0.y);
    float _668 = (((float(_214) * _544) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_373) * hit._m0.y);
    float _669 = _662 * 0.0078740157186985015869140625;
    float _671 = _665 * 0.0078740157186985015869140625;
    float _672 = _668 * 0.0078740157186985015869140625;
    float _685 = ((((float(_224 & 255u) * _544) + (-127.0)) + (float(_304 & 255u) * hit._m0.x)) + (float(_381 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _686 = ((((float((_224 >> 8u) & 255u) * _544) + (-127.0)) + (float((_304 >> 8u) & 255u) * hit._m0.x)) + (float((_381 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _687 = ((((float((_224 >> 16u) & 255u) * _544) + (-127.0)) + (float((_304 >> 16u) & 255u) * hit._m0.x)) + (float((_381 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _688 = ((((float(_224 >> 24u) * _544) + (-127.0)) + (float(_304 >> 24u) * hit._m0.x)) + (float(_381 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((_686 * _672) - (_687 * _671)) * _688;
    float _699 = ((_687 * _669) - (_685 * _672)) * _688;
    float _700 = ((_685 * _671) - (_686 * _669)) * _688;
    float _704 = inversesqrt(dot(vec3(_698, _699, _700), vec3(_698, _699, _700)));
    uvec2 _725 = uvec2(textureSize(C_AMSN_M1_Combustion_snp_0_Texture2D_13, int(0u)));
    bool _730 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _783;
    if (_730)
    {
        float _741 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _747 = (_654 * _639) - (_651 * _642);
        float _750 = (_648 * _642) - (_654 * _636);
        float _753 = (_651 * _636) - (_648 * _639);
        float _780 = ((log2((((float(_725.y) * 0.5) * float(_725.x)) * abs((_601 * _595) - (_600 * _597))) / (sqrt(((_750 * _750) + (_753 * _753)) + (_747 * _747)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_741 * gl_WorldRayDirectionEXT.x, _741 * gl_WorldRayDirectionEXT.y, _741 * gl_WorldRayDirectionEXT.z), vec3(_669, _671, _672))));
        _783 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    }
    else
    {
        _783 = 0.0;
    }
    vec4 _787 = textureLod(sampler2D(C_AMSN_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _655) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _656) + cbTextureTilingScale._m0[2u].w), _783);
    float _792 = _787.x * cbMtdParam._m0[9u].x;
    float _793 = _787.y * cbMtdParam._m0[9u].y;
    float _794 = _787.z * cbMtdParam._m0[9u].z;
    uvec2 _806 = uvec2(textureSize(C_AMSN_M1_Combustion_snp_0_Texture2D_9, int(0u)));
    float _857;
    if (_730)
    {
        float _817 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _823 = (_654 * _639) - (_651 * _642);
        float _826 = (_648 * _642) - (_654 * _636);
        float _829 = (_651 * _636) - (_648 * _639);
        float _855 = ((log2((((float(_806.y) * 0.5) * float(_806.x)) * abs((_609 * _604) - (_608 * _605))) / (sqrt(((_826 * _826) + (_829 * _829)) + (_823 * _823)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_817 * gl_WorldRayDirectionEXT.x, _817 * gl_WorldRayDirectionEXT.y, _817 * gl_WorldRayDirectionEXT.z), vec3(_669, _671, _672))));
        _857 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    }
    else
    {
        _857 = 0.0;
    }
    uvec2 _874 = uvec2(textureSize(C_AMSN_M1_Combustion_snp_0_Texture2D_7, int(0u)));
    float _925;
    if (_730)
    {
        float _885 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _891 = (_654 * _639) - (_651 * _642);
        float _894 = (_648 * _642) - (_654 * _636);
        float _897 = (_651 * _636) - (_648 * _639);
        float _923 = ((log2((((float(_874.y) * 0.5) * float(_874.x)) * abs((_601 * _595) - (_600 * _597))) / (sqrt(((_894 * _894) + (_897 * _897)) + (_891 * _891)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_885 * gl_WorldRayDirectionEXT.x, _885 * gl_WorldRayDirectionEXT.y, _885 * gl_WorldRayDirectionEXT.z), vec3(_669, _671, _672))));
        _925 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    }
    else
    {
        _925 = 0.0;
    }
    vec4 _928 = textureLod(sampler2D(C_AMSN_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _655) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _656) + cbTextureTilingScale._m0[6u].w), _925);
    float _932 = _928.z;
    float _935 = (_928.x * 2.0) + (-1.0);
    float _937 = (_928.y * 2.0) + (-1.0);
    float _938 = dot(vec2(_935, _937), vec2(_935, _937));
    float _1665 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
    float _943 = sqrt(1.0 - (isnan(1.0) ? _1665 : (isnan(_1665) ? 1.0 : min(_1665, 1.0))));
    uvec2 _983 = uvec2(textureSize(C_AMSN_M1_Combustion_snp_0_Texture2D_4, int(0u)));
    float _1034;
    if (_730)
    {
        float _994 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1000 = (_654 * _639) - (_651 * _642);
        float _1003 = (_648 * _642) - (_654 * _636);
        float _1006 = (_651 * _636) - (_648 * _639);
        float _1032 = ((log2((((float(_983.y) * 0.5) * float(_983.x)) * abs((_609 * _604) - (_608 * _605))) / (sqrt(((_1003 * _1003) + (_1006 * _1006)) + (_1000 * _1000)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_994 * gl_WorldRayDirectionEXT.x, _994 * gl_WorldRayDirectionEXT.y, _994 * gl_WorldRayDirectionEXT.z), vec3(_669, _671, _672))));
        _1034 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    }
    else
    {
        _1034 = 0.0;
    }
    vec4 _1036 = textureLod(sampler2D(C_AMSN_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + _657) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _658) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1034);
    float _1050 = abs((fract(cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1681 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _1051 = isnan(1.0) ? _1681 : (isnan(_1681) ? 1.0 : min(_1681, 1.0));
    float _1059 = (((_1051 * _1051) * (3.0 - (_1051 * 2.0))) * cbMtdParam._m0[14u].x) - cbMtdParam._m0[14u].y;
    float _1068 = cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x;
    float _1076 = abs((fract(cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1692 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1077 = isnan(1.0) ? _1692 : (isnan(_1692) ? 1.0 : min(_1692, 1.0));
    float _1081 = (_1077 * _1077) * (3.0 - (_1077 * 2.0));
    float _1082 = _1081 * cbMtdParam._m0[16u].w;
    float _1083 = _1081 * cbMtdParam._m0[17u].x;
    float _1084 = sin(_1068);
    float _1085 = cos(_1068);
    float _1086 = _657 - _1082;
    float _1087 = _658 - _1083;
    uvec2 _1107 = uvec2(textureSize(C_AMSN_M1_Combustion_snp_0_Texture2D_10, int(0u)));
    float _1111 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1112 = _1111 * gl_WorldRayDirectionEXT.x;
    float _1113 = _1111 * gl_WorldRayDirectionEXT.y;
    float _1114 = _1111 * gl_WorldRayDirectionEXT.z;
    float _1158;
    if (_730)
    {
        float _1124 = (_654 * _639) - (_651 * _642);
        float _1127 = (_648 * _642) - (_654 * _636);
        float _1130 = (_651 * _636) - (_648 * _639);
        float _1156 = ((log2((((float(_1107.y) * 0.5) * float(_1107.x)) * abs((_609 * _604) - (_608 * _605))) / (sqrt(((_1127 * _1127) + (_1130 * _1130)) + (_1124 * _1124)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1112, _1113, _1114), vec3(_669, _671, _672))));
        _1158 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    }
    else
    {
        _1158 = 0.0;
    }
    vec4 _1160 = textureLod(sampler2D(C_AMSN_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_1082 + fma(_1087, (-0.0) - _1084, _1086 * _1085))) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (fma(_1087, _1085, _1086 * _1084) + _1083)) + cbTextureTilingScale._m0[0u].w), _1158);
    float _1166 = (cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].w) * _1160.x;
    float _1168 = (cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].w) * _1160.y;
    float _1170 = (cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].w) * _1160.z;
    float _1188 = (_591 - (((textureLod(sampler2D(C_AMSN_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _657) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _658) + cbTextureTilingScale._m0[7u].w), _857).x + 0.00999999977648258209228515625) * (1.0 - _591)) * cbMtdParam._m0[16u].z)) * (cbMtdParam._m0[13u].x + 1.0);
    float _1708 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
    float _1189 = isnan(1.0) ? _1708 : (isnan(_1708) ? 1.0 : min(_1708, 1.0));
    float _1190 = cbMtdParam._m0[13u].y * cbMtdParam._m0[15u].y;
    float _1208 = fma(_943, _669, fma(_937, _685, (_704 * _698) * _935));
    float _1211 = fma(_943, _671, fma(_937, _686, (_704 * _699) * _935));
    float _1214 = fma(_943, _672, fma(_937, _687, (_704 * _700) * _935));
    float _1218 = inversesqrt(dot(vec3(_1208, _1211, _1214), vec3(_1208, _1211, _1214)));
    float _1219 = _1218 * _1208;
    float _1220 = _1218 * _1211;
    float _1221 = _1218 * _1214;
    float _1233 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1234 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1235 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1236 = (-0.0) - _1112;
    float _1237 = (-0.0) - _1113;
    float _1238 = (-0.0) - _1114;
    float _1244 = float(gl_LaunchIDEXT.x);
    float _1245 = float(gl_LaunchIDEXT.y);
    float _1248 = float(gl_LaunchSizeEXT.x);
    float _1262 = fract(fract(sin(dot(vec2(_1244 / _1248, _1245 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1275 = fract(fract(sin(dot(vec2((_1244 + 128.0) / _1248, (_1245 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1285 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1286 = _1285.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1286, _1285.w, _1286, vec3(_1233, _1234, _1235), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    if (_70._m0 == 0u)
    {
        float _1306 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1219, _1220, _1221));
        float _1719 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1309 = isnan(1.0) ? _1719 : (isnan(_1719) ? 1.0 : min(_1719, 1.0));
        float _1328 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _932) * 0.949999988079071044921875);
        float _1329 = _1328 * _1328;
        float _1330 = g_sceneCB._m0[4u].x - _1112;
        float _1331 = g_sceneCB._m0[4u].y - _1113;
        float _1332 = g_sceneCB._m0[4u].z - _1114;
        float _1336 = inversesqrt(dot(vec3(_1330, _1331, _1332), vec3(_1330, _1331, _1332)));
        float _1337 = _1336 * _1330;
        float _1338 = _1336 * _1331;
        float _1339 = _1336 * _1332;
        float _1340 = dot(vec3(_1219, _1220, _1221), vec3(g_sceneCB._m0[4u].xyz));
        float _1730 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1343 = isnan(1.0) ? _1730 : (isnan(_1730) ? 1.0 : min(_1730, 1.0));
        float _1344 = dot(vec3(_1219, _1220, _1221), vec3(_1236, _1237, _1238));
        float _1741 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1347 = isnan(1.0) ? _1741 : (isnan(_1741) ? 1.0 : min(_1741, 1.0));
        float _1348 = dot(vec3(_1219, _1220, _1221), vec3(_1337, _1338, _1339));
        float _1752 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1351 = isnan(1.0) ? _1752 : (isnan(_1752) ? 1.0 : min(_1752, 1.0));
        float _1352 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1337, _1338, _1339));
        float _1763 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1356 = _1329 * _1329;
        float _1360 = ((_1351 * _1351) * (_1356 + (-1.0))) + 1.0;
        float _1372 = (exp2(log2(1.0 - (isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1374 = 1.0 - _1329;
        float _1385 = (0.5 / (((_1347 * ((_1343 * _1374) + _1329)) + 9.9999999392252902907785028219223e-09) + (((_1347 * _1374) + _1329) * _1343))) * _1343;
        float _1774 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1387 = (isnan(1.0) ? _1774 : (isnan(_1774) ? 1.0 : min(_1774, 1.0))) * (_1356 / ((_1360 * _1360) * 3.141590118408203125));
        _1394 = ((_792 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1309;
        _1395 = ((_793 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1309;
        _1396 = ((_794 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1309;
        _1397 = (_1372 * g_sceneCB._m0[5u].x) * _1387;
        _1398 = (_1372 * g_sceneCB._m0[5u].y) * _1387;
        _1399 = (_1372 * g_sceneCB._m0[5u].z) * _1387;
    }
    else
    {
        _1394 = 0.0;
        _1395 = 0.0;
        _1396 = 0.0;
        _1397 = 0.0;
        _1398 = 0.0;
        _1399 = 0.0;
    }
    bool _1401 = abs(_1220) < 0.89999997615814208984375;
    float _1403 = float(_1401);
    float _1404 = _1401 ? 0.0 : 1.0;
    float _1407 = (_1403 * _1221) - (_1404 * _1220);
    float _1408 = _1404 * _1219;
    float _1410 = (-0.0) - (_1219 * _1403);
    float _1414 = inversesqrt(dot(vec3(_1407, _1408, _1410), vec3(_1407, _1408, _1410)));
    float _1415 = _1407 * _1414;
    float _1416 = _1408 * _1414;
    float _1417 = _1414 * _1410;
    float _1420 = (_1416 * _1221) - (_1417 * _1220);
    float _1423 = (_1417 * _1219) - (_1415 * _1221);
    float _1426 = (_1415 * _1220) - (_1416 * _1219);
    float _1428;
    float _1436;
    float _1427 = 0.0;
    uint _1429 = 0u;
    float _1433;
    bool _1435;
    for (;;)
    {
        _1433 = (float(_1429) + _1262) * 0.03125;
        _1435 = _1429 == 0u;
        float frontier_phi_49_pred;
        if (_1435)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1573;
            float _1574;
            uint _1576;
            _1573 = 0.0;
            _1574 = 0.5;
            _1576 = _1429;
            float _1437;
            for (;;)
            {
                _1437 = ((_1576 & 1u) != 0u) ? (_1574 + _1573) : _1573;
                uint _1577 = _1576 >> 1u;
                if (_1577 == 0u)
                {
                    break;
                }
                else
                {
                    _1573 = _1437;
                    _1574 *= 0.5;
                    _1576 = _1577;
                }
            }
            frontier_phi_49_pred = _1437;
        }
        _1436 = frontier_phi_49_pred;
        float _1438 = _1436 + _1275;
        float _1442 = sqrt(_1433);
        float _1443 = ((_1438 > 1.0) ? (_1438 + (-1.0)) : _1438) * 6.283185482025146484375;
        float _1446 = cos(_1443) * _1442;
        float _1448 = sin(_1443) * _1442;
        float _1450 = sqrt(1.0 - _1433);
        float _1463 = ((_1450 * _1219) + (_1446 * _1420)) + (_1448 * _1415);
        float _1464 = ((_1450 * _1220) + (_1446 * _1423)) + (_1448 * _1416);
        float _1465 = ((_1450 * _1221) + (_1446 * _1426)) + (_1448 * _1417);
        _69._m0 = 1u;
        uvec4 _1469 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1470 = _1469.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1470, _1469.w, _1470, vec3(_1233, _1234, _1235), 9.9999997473787516355514526367188e-05, vec3(_1463, _1464, _1465), 10000.0, 1);
        float _1476 = dot(vec3(_1219, _1220, _1221), vec3(_1463, _1464, _1465));
        float _1785 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1479 = isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0));
        _1428 = ((float(_69._m0 == 0u) * _1479) / (_1479 * 0.3183098733425140380859375)) + _1427;
        uint _1430 = _1429 + 1u;
        if (_1430 == 32u)
        {
            break;
        }
        else
        {
            _1427 = _1428;
            _1429 = _1430;
            continue;
        }
    }
    float _1487 = _1428 * 0.009947183541953563690185546875;
    float _1492 = dot(vec3(_1112, _1113, _1114), vec3(_1219, _1220, _1221)) * 2.0;
    vec4 _1506 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1112 - (_1492 * _1219), _1113 - (_1492 * _1220), _1114 - (_1492 * _1221)), 4.0 - (_932 * 4.0));
    float _1511 = dot(vec3(_1236, _1237, _1238), vec3(_1219, _1220, _1221));
    float _1796 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
    float _1520 = (exp2(log2(1.0 - (isnan(1.0) ? _1796 : (isnan(_1796) ? 1.0 : min(_1796, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1526 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1219, _1220, _1221), 0.0);
    float _1538 = ((_1394 + (((((_1190 * cbMtdParam._m0[10u].x) * _1036.x) * _1059) * _1189) * (((1.0 - _1166) * cbMtdParam._m0[16u].y) + _1166))) + _1397) + (((_1526.x * _792) + (_1520 * _1506.x)) * _1487);
    float _1543 = ((_1395 + (((((_1190 * cbMtdParam._m0[10u].y) * _1036.y) * _1059) * _1189) * (((1.0 - _1168) * cbMtdParam._m0[16u].y) + _1168))) + _1398) + (((_1526.y * _793) + (_1520 * _1506.y)) * _1487);
    float _1548 = ((_1396 + (((((_1190 * cbMtdParam._m0[10u].z) * _1036.z) * _1059) * _1189) * (((1.0 - _1170) * cbMtdParam._m0[16u].y) + _1170))) + _1399) + (((_1526.z * _794) + (_1520 * _1506.z)) * _1487);
    float _1807 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
    float _1818 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
    float _1829 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    bool _1556 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1567;
    _1567.x = _1556 ? ((_662 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1807 : (isnan(_1807) ? 1.0 : min(_1807, 1.0)));
    _1567.y = _1556 ? ((_665 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1818 : (isnan(_1818) ? 1.0 : min(_1818, 1.0)));
    _1567.z = _1556 ? ((_668 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1829 : (isnan(_1829) ? 1.0 : min(_1829, 1.0)));
    payload._m0 = _1567;
}


