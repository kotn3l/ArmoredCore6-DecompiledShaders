#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1614;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _166 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _167 >> 16u;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _169;
        }
        _172 = frontier_phi_3_2_ladder_2;
        _174 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _219 = _181 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uint _225 = _182 ? (_220 + 4u) : _220;
    uint _226 = _180 * _172;
    uint _236 = ((_226 + 4u) + _225) >> 2u;
    uvec2 _242 = uvec2(texelFetch(l_geomAttrib_0, int(_236)).x, texelFetch(l_geomAttrib_0, int(_236 + 1u)).x);
    uint _243 = _242.x;
    uint _244 = _242.y;
    float _248 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _249 = float(int(uint(int(_243) >> int(16u))));
    uint _256 = (_180 * _174) + 12u;
    uint _277;
    uint _278;
    uint _279;
    uint _280;
    if (_185)
    {
        uvec4 _258 = texelFetch(l_geomAttrib_0, int(_256 >> 2u));
        uint _259 = _258.x;
        _277 = _259 & 255u;
        _278 = (_259 >> 8u) & 255u;
        _279 = (_259 >> 16u) & 255u;
        _280 = 20u;
    }
    else
    {
        uint _265 = _256 >> 2u;
        uvec2 _271 = uvec2(texelFetch(l_geomAttrib_0, int(_265)).x, texelFetch(l_geomAttrib_0, int(_265 + 1u)).x);
        uint _272 = _271.x;
        _277 = _272 & 65535u;
        _278 = _272 >> 16u;
        _279 = _271.y & 65535u;
        _280 = 24u;
    }
    uint _284;
    if (_219)
    {
        _284 = _280;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _280 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _280 + 8u;
        }
        _284 = frontier_phi_16_17_ladder;
    }
    uint _288 = _182 ? (_284 + 4u) : _284;
    uint _289 = _180 * _174;
    uint _298 = ((_289 + 4u) + _288) >> 2u;
    uvec2 _304 = uvec2(texelFetch(l_geomAttrib_0, int(_298)).x, texelFetch(l_geomAttrib_0, int(_298 + 1u)).x);
    uint _305 = _304.x;
    uint _306 = _304.y;
    float _310 = float(int(uint(int(_305 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_305) >> int(16u))));
    uint _318 = (_180 * _175) + 12u;
    uint _339;
    uint _340;
    uint _341;
    uint _342;
    if (_185)
    {
        uvec4 _320 = texelFetch(l_geomAttrib_0, int(_318 >> 2u));
        uint _321 = _320.x;
        _339 = _321 & 255u;
        _340 = (_321 >> 8u) & 255u;
        _341 = (_321 >> 16u) & 255u;
        _342 = 20u;
    }
    else
    {
        uint _327 = _318 >> 2u;
        uvec2 _333 = uvec2(texelFetch(l_geomAttrib_0, int(_327)).x, texelFetch(l_geomAttrib_0, int(_327 + 1u)).x);
        uint _334 = _333.x;
        _339 = _334 & 65535u;
        _340 = _334 >> 16u;
        _341 = _333.y & 65535u;
        _342 = 24u;
    }
    uint _346;
    if (_219)
    {
        _346 = _342;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _342 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _342 + 8u;
        }
        _346 = frontier_phi_23_24_ladder;
    }
    uint _350 = _182 ? (_346 + 4u) : _346;
    uint _351 = _180 * _175;
    uint _360 = ((_351 + 4u) + _350) >> 2u;
    uvec2 _366 = uvec2(texelFetch(l_geomAttrib_0, int(_360)).x, texelFetch(l_geomAttrib_0, int(_360 + 1u)).x);
    uint _367 = _366.x;
    uint _368 = _366.y;
    float _372 = float(int(uint(int(_367 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_367) >> int(16u))));
    bool _380 = _131.z == 0u;
    float _416;
    float _417;
    float _418;
    if (_380)
    {
        uint _383 = _172 * 3u;
        uvec3 _392 = uvec3(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_383 + 2u)).x);
        _416 = uintBitsToFloat(_392.x);
        _417 = uintBitsToFloat(_392.y);
        _418 = uintBitsToFloat(_392.z);
    }
    else
    {
        uint _400 = _172 * 2u;
        uvec2 _406 = uvec2(texelFetch(l_geomPositionBuffer, int(_400)).x, texelFetch(l_geomPositionBuffer, int(_400 + 1u)).x);
        uint _407 = _406.x;
        _416 = unpackHalf2x16(_407).x;
        _417 = unpackHalf2x16(_407 >> 16u).x;
        _418 = unpackHalf2x16(_406.y).x;
    }
    float _454;
    float _455;
    float _456;
    if (_380)
    {
        uint _421 = _174 * 3u;
        uvec3 _430 = uvec3(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_421 + 2u)).x);
        _454 = uintBitsToFloat(_430.x);
        _455 = uintBitsToFloat(_430.y);
        _456 = uintBitsToFloat(_430.z);
    }
    else
    {
        uint _438 = _174 * 2u;
        uvec2 _444 = uvec2(texelFetch(l_geomPositionBuffer, int(_438)).x, texelFetch(l_geomPositionBuffer, int(_438 + 1u)).x);
        uint _445 = _444.x;
        _454 = unpackHalf2x16(_445).x;
        _455 = unpackHalf2x16(_445 >> 16u).x;
        _456 = unpackHalf2x16(_444.y).x;
    }
    float _492;
    float _493;
    float _494;
    if (_380)
    {
        uint _459 = _175 * 3u;
        uvec3 _468 = uvec3(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_459 + 2u)).x);
        _492 = uintBitsToFloat(_468.x);
        _493 = uintBitsToFloat(_468.y);
        _494 = uintBitsToFloat(_468.z);
    }
    else
    {
        uint _476 = _175 * 2u;
        uvec2 _482 = uvec2(texelFetch(l_geomPositionBuffer, int(_476)).x, texelFetch(l_geomPositionBuffer, int(_476 + 1u)).x);
        uint _483 = _482.x;
        _492 = unpackHalf2x16(_483).x;
        _493 = unpackHalf2x16(_483 >> 16u).x;
        _494 = unpackHalf2x16(_482.y).x;
    }
    float _497 = (1.0 - hit._m0.x) - hit._m0.y;
    float _512 = (((float(texelFetch(l_geomAttrib_0, int((_288 + _289) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_225 + _226) >> 2u)).x >> 24u) * _497)) + (float(texelFetch(l_geomAttrib_0, int((_350 + _351) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _536 = (_310 - _248) * 0.00048828125;
    float _538 = (_311 - _249) * 0.00048828125;
    float _541 = (_372 - _248) * 0.00048828125;
    float _542 = (_373 - _249) * 0.00048828125;
    float _564 = _454 - _416;
    float _565 = _455 - _417;
    float _566 = _456 - _418;
    float _569 = fma(_566, gl_ObjectToWorldEXT[2u].x, fma(_565, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _564));
    float _572 = fma(_566, gl_ObjectToWorldEXT[2u].y, fma(_565, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _564));
    float _575 = fma(_566, gl_ObjectToWorldEXT[2u].z, fma(_565, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _564));
    float _576 = _492 - _416;
    float _577 = _493 - _417;
    float _578 = _494 - _418;
    float _581 = fma(_578, gl_ObjectToWorldEXT[2u].x, fma(_577, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _576));
    float _584 = fma(_578, gl_ObjectToWorldEXT[2u].y, fma(_577, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _576));
    float _587 = fma(_578, gl_ObjectToWorldEXT[2u].z, fma(_577, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _576));
    float _588 = (((_310 * hit._m0.x) + (_248 * _497)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _589 = (((_311 * hit._m0.x) + (_249 * _497)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _595 = (((float(_211) * _497) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _598 = (((float(_212) * _497) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_340) * hit._m0.y);
    float _601 = (((float(_213) * _497) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _602 = _595 * 0.0078740157186985015869140625;
    float _604 = _598 * 0.0078740157186985015869140625;
    float _605 = _601 * 0.0078740157186985015869140625;
    float _611 = sin(cbMtdParam._m0[14u].w);
    float _612 = cos(cbMtdParam._m0[14u].w);
    float _613 = ((((float(int(uint(int(_306 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_244 << 16u) >> int(16u)))) * _497)) + (float(int(uint(int(_368 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _614 = ((((float(int(uint(int(_306) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_244) >> int(16u)))) * _497)) + (float(int(uint(int(_368) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _621 = fma(_614, (-0.0) - _611, _612 * _613) + cbMtdParam._m0[14u].z;
    float _622 = fma(_614, _612, _613 * _611) + cbMtdParam._m0[14u].z;
    float _650 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x) + _588)) + cbTextureTilingScale._m0[3u].z;
    float _651 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) + _589)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _653 = uvec2(textureSize(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    bool _658 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _711;
    if (_658)
    {
        float _669 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _675 = (_587 * _572) - (_584 * _575);
        float _678 = (_581 * _575) - (_587 * _569);
        float _681 = (_584 * _569) - (_581 * _572);
        float _708 = ((log2((((float(_653.y) * 0.5) * float(_653.x)) * abs((_542 * _536) - (_541 * _538))) / (sqrt(((_678 * _678) + (_681 * _681)) + (_675 * _675)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_669 * gl_WorldRayDirectionEXT.x, _669 * gl_WorldRayDirectionEXT.y, _669 * gl_WorldRayDirectionEXT.z), vec3(_602, _604, _605))));
        _711 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    }
    else
    {
        _711 = 0.0;
    }
    vec4 _715 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_650, _651), _711);
    float _720 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[16u].x;
    float _726 = ((_715.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _728 = (-0.0) - (cbMtdParam._m0[15u].z * ((_715.x * 0.5) + (-0.25)));
    float _729 = fract(_720);
    float _731 = fract(_720 + 0.5);
    float _743 = abs((_729 * 2.0) + (-1.0));
    vec4 _762 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_729 * _728) + _621) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_726 * _729) + _622) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _764 = _762.x;
    float _786 = inversesqrt(dot(vec3(_602, _604, _605), vec3(_602, _604, _605)));
    float _787 = _786 * _602;
    float _788 = _786 * _604;
    float _789 = _786 * _605;
    float _794 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_787, _788, _789, 0.0)) - cbMtdParam._m0[14u].x;
    float _1701 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _801 = exp2(log2(1.0 - (isnan(1.0) ? _1701 : (isnan(_1701) ? 1.0 : min(_1701, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _818 = (cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + _588;
    float _819 = (cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _589;
    float _870;
    if (_658)
    {
        float _830 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _836 = (_587 * _572) - (_584 * _575);
        float _839 = (_581 * _575) - (_587 * _569);
        float _842 = (_584 * _569) - (_581 * _572);
        float _868 = ((log2((((float(_653.y) * 0.5) * float(_653.x)) * abs((_542 * _536) - (_541 * _538))) / (sqrt(((_839 * _839) + (_842 * _842)) + (_836 * _836)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_830 * gl_WorldRayDirectionEXT.x, _830 * gl_WorldRayDirectionEXT.y, _830 * gl_WorldRayDirectionEXT.z), vec3(_602, _604, _605))));
        _870 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    }
    else
    {
        _870 = 0.0;
    }
    vec4 _872 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_650, _651), _870);
    float _880 = ((_872.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _882 = (-0.0) - (cbMtdParam._m0[15u].z * ((_872.x * 0.5) + (-0.25)));
    vec4 _907 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_729 * _882) + _818) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_880 * _729) + _819) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _909 = _907.x;
    float _910 = _907.y;
    float _911 = _907.z;
    vec4 _912 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_731 * _882) + _818) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_880 * _731) + _819) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _939 = (cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _588;
    float _940 = (cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x) + _589;
    float _991;
    if (_658)
    {
        float _951 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _957 = (_587 * _572) - (_584 * _575);
        float _960 = (_581 * _575) - (_587 * _569);
        float _963 = (_584 * _569) - (_581 * _572);
        float _989 = ((log2((((float(_653.y) * 0.5) * float(_653.x)) * abs((_542 * _536) - (_541 * _538))) / (sqrt(((_960 * _960) + (_963 * _963)) + (_957 * _957)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_951 * gl_WorldRayDirectionEXT.x, _951 * gl_WorldRayDirectionEXT.y, _951 * gl_WorldRayDirectionEXT.z), vec3(_602, _604, _605))));
        _991 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    }
    else
    {
        _991 = 0.0;
    }
    vec4 _993 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_650, _651), _991);
    float _1001 = ((_993.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1003 = (-0.0) - (cbMtdParam._m0[15u].z * ((_993.x * 0.5) + (-0.25)));
    vec4 _1028 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_729 * _1003) + _939) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1001 * _729) + _940) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1030 = _1028.x;
    float _1031 = _1028.y;
    float _1032 = _1028.z;
    vec4 _1033 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_731 * _1003) + _939) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1001 * _731) + _940) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1050 = ((((_1033.x - _1030) * _743) + _1030) * cbMtdParam._m0[13u].x) + ((((_912.x - _909) * _743) + _909) * cbMtdParam._m0[11u].x);
    float _1051 = ((((_1033.y - _1031) * _743) + _1031) * cbMtdParam._m0[13u].y) + ((((_912.y - _910) * _743) + _910) * cbMtdParam._m0[11u].y);
    float _1052 = ((((_1033.z - _1032) * _743) + _1032) * cbMtdParam._m0[13u].z) + ((((_912.z - _911) * _743) + _911) * cbMtdParam._m0[11u].z);
    float _1058 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1727 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1059 = isnan(1.0) ? _1727 : (isnan(_1727) ? 1.0 : min(_1727, 1.0));
    float _1066 = ((_1059 * _1059) * (3.0 - (_1059 * 2.0))) - cbMtdParam._m0[16u].y;
    float _1077 = (cbMtdParam._m0[19u].y * cbPerFrame._m0[22u].x) + _588;
    float _1078 = (cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x) + _589;
    float _1129;
    if (_658)
    {
        float _1089 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1095 = (_587 * _572) - (_584 * _575);
        float _1098 = (_581 * _575) - (_587 * _569);
        float _1101 = (_584 * _569) - (_581 * _572);
        float _1127 = ((log2((((float(_653.y) * 0.5) * float(_653.x)) * abs((_542 * _536) - (_541 * _538))) / (sqrt(((_1098 * _1098) + (_1101 * _1101)) + (_1095 * _1095)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1089 * gl_WorldRayDirectionEXT.x, _1089 * gl_WorldRayDirectionEXT.y, _1089 * gl_WorldRayDirectionEXT.z), vec3(_602, _604, _605))));
        _1129 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
    }
    else
    {
        _1129 = 0.0;
    }
    vec4 _1131 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_650, _651), _1129);
    float _1139 = ((_1131.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1141 = (-0.0) - (cbMtdParam._m0[15u].z * ((_1131.x * 0.5) + (-0.25)));
    vec4 _1166 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_729 * _1141) + _1077) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1139 * _729) + _1078) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1168 = _1166.x;
    float _1169 = _1166.y;
    float _1170 = _1166.z;
    vec4 _1171 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_731 * _1141) + _1077) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1139 * _731) + _1078) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1197 = (cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _588;
    float _1198 = (cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + _589;
    float _1202 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1203 = _1202 * gl_WorldRayDirectionEXT.x;
    float _1204 = _1202 * gl_WorldRayDirectionEXT.y;
    float _1205 = _1202 * gl_WorldRayDirectionEXT.z;
    float _1249;
    if (_658)
    {
        float _1215 = (_587 * _572) - (_584 * _575);
        float _1218 = (_581 * _575) - (_587 * _569);
        float _1221 = (_584 * _569) - (_581 * _572);
        float _1247 = ((log2((((float(_653.y) * 0.5) * float(_653.x)) * abs((_542 * _536) - (_541 * _538))) / (sqrt(((_1218 * _1218) + (_1221 * _1221)) + (_1215 * _1215)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1203, _1204, _1205), vec3(_602, _604, _605))));
        _1249 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
    }
    else
    {
        _1249 = 0.0;
    }
    vec4 _1251 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_650, _651), _1249);
    float _1259 = ((_1251.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1261 = (-0.0) - (cbMtdParam._m0[15u].z * ((_1251.x * 0.5) + (-0.25)));
    vec4 _1286 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_729 * _1261) + _1197) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1259 * _729) + _1198) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1288 = _1286.x;
    float _1289 = _1286.y;
    float _1290 = _1286.z;
    vec4 _1291 = textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_731 * _1261) + _1197) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1259 * _731) + _1198) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1315 = cbMtdParam._m0[14u].y * (((textureLod(sampler2D(S_PC_PAShield_A_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_731 * _728) + _621) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_726 * _731) + _622) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0).x - _764) * _743) + _764);
    float _1333 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1334 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1335 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1336 = (-0.0) - _1203;
    float _1337 = (-0.0) - _1204;
    float _1338 = (-0.0) - _1205;
    float _1344 = float(gl_LaunchIDEXT.x);
    float _1345 = float(gl_LaunchIDEXT.y);
    float _1348 = float(gl_LaunchSizeEXT.x);
    float _1362 = fract(fract(sin(dot(vec2(_1344 / _1348, _1345 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1375 = fract(fract(sin(dot(vec2((_1344 + 128.0) / _1348, (_1345 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1385 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1386 = _1385.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1386, _1385.w, _1386, vec3(_1333, _1334, _1335), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1451;
    float _1452;
    float _1453;
    if (_69._m0 == 0u)
    {
        float _1406 = g_sceneCB._m0[4u].x - _1203;
        float _1407 = g_sceneCB._m0[4u].y - _1204;
        float _1408 = g_sceneCB._m0[4u].z - _1205;
        float _1412 = inversesqrt(dot(vec3(_1406, _1407, _1408), vec3(_1406, _1407, _1408)));
        float _1416 = dot(vec3(_787, _788, _789), vec3(g_sceneCB._m0[4u].xyz));
        float _1748 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1419 = isnan(1.0) ? _1748 : (isnan(_1748) ? 1.0 : min(_1748, 1.0));
        float _1420 = dot(vec3(_787, _788, _789), vec3(_1336, _1337, _1338));
        float _1759 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1406 * _1412, _1407 * _1412, _1408 * _1412));
        float _1770 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1435 = (exp2(log2(1.0 - (isnan(1.0) ? _1770 : (isnan(_1770) ? 1.0 : min(_1770, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1441 = (0.5 / ((_1419 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1759 : (isnan(_1759) ? 1.0 : min(_1759, 1.0))))) * _1419;
        float _1781 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1443 = (isnan(1.0) ? _1781 : (isnan(_1781) ? 1.0 : min(_1781, 1.0))) * 0.31831014156341552734375;
        _1451 = (_1435 * g_sceneCB._m0[5u].x) * _1443;
        _1452 = (_1435 * g_sceneCB._m0[5u].y) * _1443;
        _1453 = (_1435 * g_sceneCB._m0[5u].z) * _1443;
    }
    else
    {
        _1451 = 0.0;
        _1452 = 0.0;
        _1453 = 0.0;
    }
    bool _1455 = abs(_788) < 0.89999997615814208984375;
    float _1457 = float(_1455);
    float _1458 = _1455 ? 0.0 : 1.0;
    float _1461 = (_1457 * _789) - (_1458 * _788);
    float _1462 = _1458 * _787;
    float _1464 = (-0.0) - (_787 * _1457);
    float _1468 = inversesqrt(dot(vec3(_1461, _1462, _1464), vec3(_1461, _1462, _1464)));
    float _1469 = _1461 * _1468;
    float _1470 = _1462 * _1468;
    float _1471 = _1468 * _1464;
    float _1474 = (_1470 * _789) - (_1471 * _788);
    float _1477 = (_1471 * _787) - (_1469 * _789);
    float _1480 = (_1469 * _788) - (_1470 * _787);
    float _1482;
    float _1490;
    float _1481 = 0.0;
    uint _1483 = 0u;
    float _1487;
    bool _1489;
    for (;;)
    {
        _1487 = (float(_1483) + _1362) * 0.03125;
        _1489 = _1483 == 0u;
        float frontier_phi_49_pred;
        if (_1489)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1619;
            float _1620;
            uint _1622;
            _1619 = 0.0;
            _1620 = 0.5;
            _1622 = _1483;
            float _1491;
            for (;;)
            {
                _1491 = ((_1622 & 1u) != 0u) ? (_1620 + _1619) : _1619;
                uint _1623 = _1622 >> 1u;
                if (_1623 == 0u)
                {
                    break;
                }
                else
                {
                    _1619 = _1491;
                    _1620 *= 0.5;
                    _1622 = _1623;
                }
            }
            frontier_phi_49_pred = _1491;
        }
        _1490 = frontier_phi_49_pred;
        float _1492 = _1490 + _1375;
        float _1496 = sqrt(_1487);
        float _1497 = ((_1492 > 1.0) ? (_1492 + (-1.0)) : _1492) * 6.283185482025146484375;
        float _1500 = cos(_1497) * _1496;
        float _1502 = sin(_1497) * _1496;
        float _1504 = sqrt(1.0 - _1487);
        float _1517 = ((_1504 * _787) + (_1500 * _1474)) + (_1502 * _1469);
        float _1518 = ((_1504 * _788) + (_1500 * _1477)) + (_1502 * _1470);
        float _1519 = ((_1504 * _789) + (_1500 * _1480)) + (_1502 * _1471);
        _68._m0 = 1u;
        uvec4 _1523 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1524 = _1523.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1524, _1523.w, _1524, vec3(_1333, _1334, _1335), 9.9999997473787516355514526367188e-05, vec3(_1517, _1518, _1519), 10000.0, 1);
        float _1530 = dot(vec3(_787, _788, _789), vec3(_1517, _1518, _1519));
        float _1792 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1533 = isnan(1.0) ? _1792 : (isnan(_1792) ? 1.0 : min(_1792, 1.0));
        _1482 = ((float(_68._m0 == 0u) * _1533) / (_1533 * 0.3183098733425140380859375)) + _1481;
        uint _1484 = _1483 + 1u;
        if (_1484 == 32u)
        {
            break;
        }
        else
        {
            _1481 = _1482;
            _1483 = _1484;
            continue;
        }
    }
    float _1542 = _1482 * 0.009947183541953563690185546875;
    float _1547 = dot(vec3(_1203, _1204, _1205), vec3(_787, _788, _789)) * 2.0;
    vec4 _1559 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1203 - (_1547 * _787), _1204 - (_1547 * _788), _1205 - (_1547 * _789)), 4.0);
    float _1564 = dot(vec3(_1336, _1337, _1338), vec3(_787, _788, _789));
    float _1803 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
    float _1573 = (exp2(log2(1.0 - (isnan(1.0) ? _1803 : (isnan(_1803) ? 1.0 : min(_1803, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1584 = (((_1559.x * _1542) * _1573) + _1451) + (((_1050 + ((cbMtdParam._m0[10u].x * _512) * _801)) + (_1315 * (((((((_1291.x - _1288) * _743) + _1288) * cbMtdParam._m0[12u].x) + ((((_1171.x - _1168) * _743) + _1168) * cbMtdParam._m0[9u].x)) * _1066) - _1050))) * cbMtdParam._m0[17u].x);
    float _1589 = (((_1559.y * _1542) * _1573) + _1452) + (((_1051 + ((cbMtdParam._m0[10u].y * _512) * _801)) + (_1315 * (((((((_1291.y - _1289) * _743) + _1289) * cbMtdParam._m0[12u].y) + ((((_1171.y - _1169) * _743) + _1169) * cbMtdParam._m0[9u].y)) * _1066) - _1051))) * cbMtdParam._m0[17u].x);
    float _1594 = (((_1559.z * _1542) * _1573) + _1453) + (((_1052 + ((cbMtdParam._m0[10u].z * _512) * _801)) + (_1315 * (((((((_1291.z - _1290) * _743) + _1290) * cbMtdParam._m0[12u].z) + ((((_1171.z - _1170) * _743) + _1170) * cbMtdParam._m0[9u].z)) * _1066) - _1052))) * cbMtdParam._m0[17u].x);
    float _1814 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
    float _1825 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
    float _1836 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
    bool _1602 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1613;
    _1613.x = _1602 ? ((_595 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1814 : (isnan(_1814) ? 1.0 : min(_1814, 1.0)));
    _1613.y = _1602 ? ((_598 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1825 : (isnan(_1825) ? 1.0 : min(_1825, 1.0)));
    _1613.z = _1602 ? ((_601 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1836 : (isnan(_1836) ? 1.0 : min(_1836, 1.0)));
    payload._m0 = _1613;
}


