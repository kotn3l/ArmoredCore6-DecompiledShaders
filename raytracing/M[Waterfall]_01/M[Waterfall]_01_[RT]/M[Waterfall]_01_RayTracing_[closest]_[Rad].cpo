#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_01_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_Waterfall_01_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Waterfall_01_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_Waterfall_01_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_Waterfall_01_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1638;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + (_183 ? (_239 + 4u) : _239)) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _254 = _181 * _175;
    uint _255 = _254 + 12u;
    uint _276;
    uint _277;
    uint _278;
    uint _279;
    if (_186)
    {
        uvec4 _257 = texelFetch(l_geomAttrib_0, int(_255 >> 2u));
        uint _258 = _257.x;
        _276 = _258 & 255u;
        _277 = (_258 >> 8u) & 255u;
        _278 = (_258 >> 16u) & 255u;
        _279 = 16u;
    }
    else
    {
        uint _264 = _255 >> 2u;
        uvec2 _270 = uvec2(texelFetch(l_geomAttrib_0, int(_264)).x, texelFetch(l_geomAttrib_0, int(_264 + 1u)).x);
        uint _271 = _270.x;
        _276 = _271 & 65535u;
        _277 = _271 >> 16u;
        _278 = _270.y & 65535u;
        _279 = 20u;
    }
    uvec4 _285 = texelFetch(l_geomAttrib_0, int((_279 + _254) >> 2u));
    uint _286 = _285.x;
    uint _298;
    if (_238)
    {
        _298 = _279 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _279 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _279 + 12u;
        }
        _298 = frontier_phi_16_17_ladder;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + (_183 ? (_298 + 4u) : _298)) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    uint _313 = _181 * _176;
    uint _314 = _313 + 12u;
    uint _335;
    uint _336;
    uint _337;
    uint _338;
    if (_186)
    {
        uvec4 _316 = texelFetch(l_geomAttrib_0, int(_314 >> 2u));
        uint _317 = _316.x;
        _335 = _317 & 255u;
        _336 = (_317 >> 8u) & 255u;
        _337 = (_317 >> 16u) & 255u;
        _338 = 16u;
    }
    else
    {
        uint _323 = _314 >> 2u;
        uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
        uint _330 = _329.x;
        _335 = _330 & 65535u;
        _336 = _330 >> 16u;
        _337 = _329.y & 65535u;
        _338 = 20u;
    }
    uvec4 _344 = texelFetch(l_geomAttrib_0, int((_338 + _313) >> 2u));
    uint _345 = _344.x;
    uint _357;
    if (_238)
    {
        _357 = _338 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _338 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _338 + 12u;
        }
        _357 = frontier_phi_23_24_ladder;
    }
    uvec4 _365 = texelFetch(l_geomAttrib_0, int(((_313 + 4u) + (_183 ? (_357 + 4u) : _357)) >> 2u));
    uint _366 = _365.x;
    float _370 = float(int(uint(int(_366 << 16u) >> int(16u))));
    float _371 = float(int(uint(int(_366) >> int(16u))));
    bool _373 = _132.z == 0u;
    float _409;
    float _410;
    float _411;
    if (_373)
    {
        uint _376 = _173 * 3u;
        uvec3 _385 = uvec3(texelFetch(l_geomPositionBuffer, int(_376)).x, texelFetch(l_geomPositionBuffer, int(_376 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_376 + 2u)).x);
        _409 = uintBitsToFloat(_385.x);
        _410 = uintBitsToFloat(_385.y);
        _411 = uintBitsToFloat(_385.z);
    }
    else
    {
        uint _393 = _173 * 2u;
        uvec2 _399 = uvec2(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x);
        uint _400 = _399.x;
        _409 = unpackHalf2x16(_400).x;
        _410 = unpackHalf2x16(_400 >> 16u).x;
        _411 = unpackHalf2x16(_399.y).x;
    }
    float _447;
    float _448;
    float _449;
    if (_373)
    {
        uint _414 = _175 * 3u;
        uvec3 _423 = uvec3(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_414 + 2u)).x);
        _447 = uintBitsToFloat(_423.x);
        _448 = uintBitsToFloat(_423.y);
        _449 = uintBitsToFloat(_423.z);
    }
    else
    {
        uint _431 = _175 * 2u;
        uvec2 _437 = uvec2(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x);
        uint _438 = _437.x;
        _447 = unpackHalf2x16(_438).x;
        _448 = unpackHalf2x16(_438 >> 16u).x;
        _449 = unpackHalf2x16(_437.y).x;
    }
    float _485;
    float _486;
    float _487;
    if (_373)
    {
        uint _452 = _176 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _176 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _490 = (1.0 - hit._m0.x) - hit._m0.y;
    float _524 = (_311 - _252) * 0.00048828125;
    float _526 = (_312 - _253) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _530 = (_371 - _253) * 0.00048828125;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _554 = _449 - _411;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _566 = _487 - _411;
    float _569 = fma(_566, gl_ObjectToWorldEXT[2u].x, fma(_565, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _564));
    float _572 = fma(_566, gl_ObjectToWorldEXT[2u].y, fma(_565, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _564));
    float _575 = fma(_566, gl_ObjectToWorldEXT[2u].z, fma(_565, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _564));
    float _576 = (((_311 * hit._m0.x) + (_252 * _490)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _577 = (((_312 * hit._m0.x) + (_253 * _490)) + (_371 * hit._m0.y)) * 0.00048828125;
    float _581 = (((float(_212) * _490) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _584 = (((float(_213) * _490) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = (((float(_214) * _490) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _588 = _581 * 0.0078740157186985015869140625;
    float _590 = _584 * 0.0078740157186985015869140625;
    float _591 = _587 * 0.0078740157186985015869140625;
    float _604 = ((((float(_224 & 255u) * _490) + (-127.0)) + (float(_286 & 255u) * hit._m0.x)) + (float(_345 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_224 >> 8u) & 255u) * _490) + (-127.0)) + (float((_286 >> 8u) & 255u) * hit._m0.x)) + (float((_345 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float((_224 >> 16u) & 255u) * _490) + (-127.0)) + (float((_286 >> 16u) & 255u) * hit._m0.x)) + (float((_345 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float(_224 >> 24u) * _490) + (-127.0)) + (float(_286 >> 24u) * hit._m0.x)) + (float(_345 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _617 = ((_605 * _591) - (_606 * _590)) * _607;
    float _618 = ((_606 * _588) - (_604 * _591)) * _607;
    float _619 = ((_604 * _590) - (_605 * _588)) * _607;
    float _623 = inversesqrt(dot(vec3(_617, _618, _619), vec3(_617, _618, _619)));
    float _639 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    uvec2 _655 = uvec2(textureSize(M_Waterfall_01_snp_0_Texture2D_5, int(0u)));
    bool _660 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _713;
    if (_660)
    {
        float _671 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _677 = (_575 * _560) - (_572 * _563);
        float _680 = (_569 * _563) - (_575 * _557);
        float _683 = (_572 * _557) - (_569 * _560);
        float _710 = ((log2((((float(_655.y) * 0.5) * float(_655.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_680 * _680) + (_683 * _683)) + (_677 * _677)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_671 * gl_WorldRayDirectionEXT.x, _671 * gl_WorldRayDirectionEXT.y, _671 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _713 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    }
    else
    {
        _713 = 0.0;
    }
    vec4 _717 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_5, SS_BumpMap), vec2((((_639 * cbMtdParam._m0[17u].z) + _576) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_639 * cbMtdParam._m0[17u].w) + _577) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _713);
    float _721 = _717.x * 2.0;
    float _722 = _717.y * 2.0;
    float _723 = _721 + (-1.0);
    float _725 = _722 + (-1.0);
    float _726 = dot(vec2(_723, _725), vec2(_723, _725));
    float _1727 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _731 = sqrt(1.0 - (isnan(1.0) ? _1727 : (isnan(_1727) ? 1.0 : min(_1727, 1.0))));
    float _744 = (cbMtdParam._m0[16u].z * _639) + _576;
    float _745 = (cbMtdParam._m0[16u].w * _639) + _577;
    uvec2 _757 = uvec2(textureSize(M_Waterfall_01_snp_0_Texture2D_3, int(0u)));
    float _808;
    if (_660)
    {
        float _768 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _774 = (_575 * _560) - (_572 * _563);
        float _777 = (_569 * _563) - (_575 * _557);
        float _780 = (_572 * _557) - (_569 * _560);
        float _806 = ((log2((((float(_757.y) * 0.5) * float(_757.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_777 * _777) + (_780 * _780)) + (_774 * _774)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_768 * gl_WorldRayDirectionEXT.x, _768 * gl_WorldRayDirectionEXT.y, _768 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _808 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    }
    else
    {
        _808 = 0.0;
    }
    vec4 _811 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_3, SS_WrapLinear), vec2((_744 * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (_745 * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _808);
    float _816 = (cbPerFrame._m0[22u].x * 2.0) * (cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].z);
    float _822 = ((_811.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].z;
    float _824 = (-0.0) - (cbMtdParam._m0[14u].z * ((_811.x * 0.5) + (-0.25)));
    float _826 = fract(_816);
    float _828 = fract(_816 + 0.5);
    float _839 = abs((_826 * 2.0) + (-1.0));
    vec4 _856 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_0, SS_BumpMap), vec2((((_826 * _824) + _744) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_822 * _826) + _745) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _858 = _856.x;
    float _859 = _856.y;
    vec4 _860 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_0, SS_BumpMap), vec2((((_828 * _824) + _744) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_822 * _828) + _745) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    uvec2 _886 = uvec2(textureSize(M_Waterfall_01_snp_0_Texture2D_0, int(0u)));
    float _937;
    if (_660)
    {
        float _897 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _903 = (_575 * _560) - (_572 * _563);
        float _906 = (_569 * _563) - (_575 * _557);
        float _909 = (_572 * _557) - (_569 * _560);
        float _935 = ((log2((((float(_886.y) * 0.5) * float(_886.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_906 * _906) + (_909 * _909)) + (_903 * _903)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_897 * gl_WorldRayDirectionEXT.x, _897 * gl_WorldRayDirectionEXT.y, _897 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _937 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    }
    else
    {
        _937 = 0.0;
    }
    vec4 _939 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[16u].x * _639) + _576) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[16u].y * _639) + _577) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _937);
    float _949 = ((_721 + (-1.35000002384185791015625)) + ((((((_860.x - _858) * _839) + _858) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].x)) + (_939.x * 0.699999988079071044921875);
    float _952 = ((_722 + (-1.35000002384185791015625)) + ((((((_860.y - _859) * _839) + _859) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].x)) + (_939.y * 0.699999988079071044921875);
    float _955 = fma(_731, _588, fma(_952, _604, _949 * (_623 * _617)));
    float _958 = fma(_731, _590, fma(_952, _605, _949 * (_623 * _618)));
    float _961 = fma(_731, _591, fma(_952, _606, _949 * (_623 * _619)));
    float _965 = inversesqrt(dot(vec3(_955, _958, _961), vec3(_955, _958, _961)));
    float _966 = _965 * _955;
    float _967 = _965 * _958;
    float _968 = _965 * _961;
    float _981 = (cbMtdParam._m0[17u].x * _639) + _576;
    float _982 = (cbMtdParam._m0[17u].y * _639) + _577;
    uvec2 _994 = uvec2(textureSize(M_Waterfall_01_snp_0_Texture2D_4, int(0u)));
    float _1045;
    if (_660)
    {
        float _1005 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1011 = (_575 * _560) - (_572 * _563);
        float _1014 = (_569 * _563) - (_575 * _557);
        float _1017 = (_572 * _557) - (_569 * _560);
        float _1043 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1014 * _1014) + (_1017 * _1017)) + (_1011 * _1011)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1005 * gl_WorldRayDirectionEXT.x, _1005 * gl_WorldRayDirectionEXT.y, _1005 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1045 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    }
    else
    {
        _1045 = 0.0;
    }
    uvec2 _1065 = uvec2(textureSize(M_Waterfall_01_snp_0_Texture2D_2, int(0u)));
    float _1116;
    if (_660)
    {
        float _1076 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1082 = (_575 * _560) - (_572 * _563);
        float _1085 = (_569 * _563) - (_575 * _557);
        float _1088 = (_572 * _557) - (_569 * _560);
        float _1114 = ((log2((((float(_1065.y) * 0.5) * float(_1065.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1085 * _1085) + (_1088 * _1088)) + (_1082 * _1082)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1076 * gl_WorldRayDirectionEXT.x, _1076 * gl_WorldRayDirectionEXT.y, _1076 * gl_WorldRayDirectionEXT.z), vec3(_588, _590, _591))));
        _1116 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    }
    else
    {
        _1116 = 0.0;
    }
    vec4 _1118 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _981) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _982) + cbTextureTilingScale._m0[0u].w), _1116);
    float _1130 = (cbMtdParam._m0[15u].z * _639) + _576;
    float _1131 = (cbMtdParam._m0[15u].w * _639) + _577;
    float _1139 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1140 = _1139 * gl_WorldRayDirectionEXT.x;
    float _1141 = _1139 * gl_WorldRayDirectionEXT.y;
    float _1142 = _1139 * gl_WorldRayDirectionEXT.z;
    float _1186;
    if (_660)
    {
        float _1152 = (_575 * _560) - (_572 * _563);
        float _1155 = (_569 * _563) - (_575 * _557);
        float _1158 = (_572 * _557) - (_569 * _560);
        float _1184 = ((log2((((float(_757.y) * 0.5) * float(_757.x)) * abs((_530 * _524) - (_529 * _526))) / (sqrt(((_1155 * _1155) + (_1158 * _1158)) + (_1152 * _1152)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1140, _1141, _1142), vec3(_588, _590, _591))));
        _1186 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    }
    else
    {
        _1186 = 0.0;
    }
    vec4 _1188 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_3, SS_WrapLinear), vec2((_1130 * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (_1131 * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1186);
    float _1196 = ((_1188.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].z;
    float _1198 = (-0.0) - (cbMtdParam._m0[14u].z * ((_1188.x * 0.5) + (-0.25)));
    vec4 _1216 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_826 * _1198) + _1130) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1196 * _826) + _1131) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1218 = _1216.x;
    float _1219 = _1216.y;
    float _1220 = _1216.z;
    vec4 _1221 = textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_828 * _1198) + _1130) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1196 * _828) + _1131) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1235 = exp2(log2(textureLod(sampler2D(M_Waterfall_01_snp_0_Texture2D_4, SS_DiffuseMap), vec2((_981 * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (_982 * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1045).x) * cbMtdParam._m0[13u].y) * cbMtdParam._m0[14u].w;
    float _1247 = ((_1118.x + cbMtdParam._m0[10u].x) + cbMtdParam._m0[9u].x) + (_1235 * (((_1221.x - _1218) * _839) + _1218));
    float _1250 = ((_1118.y + cbMtdParam._m0[10u].y) + cbMtdParam._m0[9u].y) + (_1235 * (((_1221.y - _1219) * _839) + _1219));
    float _1253 = ((_1118.z + cbMtdParam._m0[10u].z) + cbMtdParam._m0[9u].z) + (_1235 * (((_1221.z - _1220) * _839) + _1220));
    float _1266 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_966, _967, _968, 0.0)) - cbMtdParam._m0[12u].w;
    float _1763 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
    float _1273 = exp2(log2(1.0 - (isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875))));
    float _1281 = ((_1273 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x) * _1247;
    float _1283 = ((_1273 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y) * _1250;
    float _1285 = ((_1273 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * _1253;
    float _1302 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1303 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1304 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1305 = (-0.0) - _1140;
    float _1306 = (-0.0) - _1141;
    float _1307 = (-0.0) - _1142;
    float _1313 = float(gl_LaunchIDEXT.x);
    float _1314 = float(gl_LaunchIDEXT.y);
    float _1317 = float(gl_LaunchSizeEXT.x);
    float _1331 = fract(fract(sin(dot(vec2(_1313 / _1317, _1314 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1344 = fract(fract(sin(dot(vec2((_1313 + 128.0) / _1317, (_1314 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1354 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1355 = _1354.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1355, _1354.w, _1355, vec3(_1302, _1303, _1304), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (_70._m0 == 0u)
    {
        float _1376 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_966, _967, _968));
        float _1779 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1379 = isnan(1.0) ? _1779 : (isnan(_1779) ? 1.0 : min(_1779, 1.0));
        float _1398 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[14u].y) * 0.949999988079071044921875);
        float _1399 = _1398 * _1398;
        float _1400 = g_sceneCB._m0[4u].x - _1140;
        float _1401 = g_sceneCB._m0[4u].y - _1141;
        float _1402 = g_sceneCB._m0[4u].z - _1142;
        float _1406 = inversesqrt(dot(vec3(_1400, _1401, _1402), vec3(_1400, _1401, _1402)));
        float _1407 = _1406 * _1400;
        float _1408 = _1406 * _1401;
        float _1409 = _1406 * _1402;
        float _1410 = dot(vec3(_966, _967, _968), vec3(g_sceneCB._m0[4u].xyz));
        float _1790 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1413 = isnan(1.0) ? _1790 : (isnan(_1790) ? 1.0 : min(_1790, 1.0));
        float _1414 = dot(vec3(_966, _967, _968), vec3(_1305, _1306, _1307));
        float _1801 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1417 = isnan(1.0) ? _1801 : (isnan(_1801) ? 1.0 : min(_1801, 1.0));
        float _1418 = dot(vec3(_966, _967, _968), vec3(_1407, _1408, _1409));
        float _1812 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1421 = isnan(1.0) ? _1812 : (isnan(_1812) ? 1.0 : min(_1812, 1.0));
        float _1422 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1407, _1408, _1409));
        float _1823 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = _1399 * _1399;
        float _1430 = ((_1421 * _1421) * (_1426 + (-1.0))) + 1.0;
        float _1442 = (exp2(log2(1.0 - (isnan(1.0) ? _1823 : (isnan(_1823) ? 1.0 : min(_1823, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1444 = 1.0 - _1399;
        float _1455 = (0.5 / (((_1417 * ((_1413 * _1444) + _1399)) + 9.9999999392252902907785028219223e-09) + (((_1417 * _1444) + _1399) * _1413))) * _1413;
        float _1834 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1457 = (isnan(1.0) ? _1834 : (isnan(_1834) ? 1.0 : min(_1834, 1.0))) * (_1426 / ((_1430 * _1430) * 3.141590118408203125));
        _1464 = ((_1281 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1379;
        _1465 = ((_1283 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1379;
        _1466 = ((_1285 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1379;
        _1467 = (_1442 * g_sceneCB._m0[5u].x) * _1457;
        _1468 = (_1442 * g_sceneCB._m0[5u].y) * _1457;
        _1469 = (_1442 * g_sceneCB._m0[5u].z) * _1457;
    }
    else
    {
        _1464 = 0.0;
        _1465 = 0.0;
        _1466 = 0.0;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    bool _1471 = abs(_967) < 0.89999997615814208984375;
    float _1473 = float(_1471);
    float _1474 = _1471 ? 0.0 : 1.0;
    float _1477 = (_1473 * _968) - (_1474 * _967);
    float _1478 = _1474 * _966;
    float _1480 = (-0.0) - (_966 * _1473);
    float _1484 = inversesqrt(dot(vec3(_1477, _1478, _1480), vec3(_1477, _1478, _1480)));
    float _1485 = _1477 * _1484;
    float _1486 = _1478 * _1484;
    float _1487 = _1484 * _1480;
    float _1490 = (_1486 * _968) - (_1487 * _967);
    float _1493 = (_1487 * _966) - (_1485 * _968);
    float _1496 = (_1485 * _967) - (_1486 * _966);
    float _1498;
    float _1506;
    float _1497 = 0.0;
    uint _1499 = 0u;
    float _1503;
    bool _1505;
    for (;;)
    {
        _1503 = (float(_1499) + _1331) * 0.03125;
        _1505 = _1499 == 0u;
        float frontier_phi_51_pred;
        if (_1505)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1643;
            float _1644;
            uint _1646;
            _1643 = 0.0;
            _1644 = 0.5;
            _1646 = _1499;
            float _1507;
            for (;;)
            {
                _1507 = ((_1646 & 1u) != 0u) ? (_1644 + _1643) : _1643;
                uint _1647 = _1646 >> 1u;
                if (_1647 == 0u)
                {
                    break;
                }
                else
                {
                    _1643 = _1507;
                    _1644 *= 0.5;
                    _1646 = _1647;
                }
            }
            frontier_phi_51_pred = _1507;
        }
        _1506 = frontier_phi_51_pred;
        float _1508 = _1506 + _1344;
        float _1512 = sqrt(_1503);
        float _1513 = ((_1508 > 1.0) ? (_1508 + (-1.0)) : _1508) * 6.283185482025146484375;
        float _1516 = cos(_1513) * _1512;
        float _1518 = sin(_1513) * _1512;
        float _1520 = sqrt(1.0 - _1503);
        float _1533 = ((_1520 * _966) + (_1516 * _1490)) + (_1518 * _1485);
        float _1534 = ((_1520 * _967) + (_1516 * _1493)) + (_1518 * _1486);
        float _1535 = ((_1520 * _968) + (_1516 * _1496)) + (_1518 * _1487);
        _69._m0 = 1u;
        uvec4 _1539 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1540 = _1539.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1540, _1539.w, _1540, vec3(_1302, _1303, _1304), 9.9999997473787516355514526367188e-05, vec3(_1533, _1534, _1535), 10000.0, 1);
        float _1546 = dot(vec3(_966, _967, _968), vec3(_1533, _1534, _1535));
        float _1845 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1549 = isnan(1.0) ? _1845 : (isnan(_1845) ? 1.0 : min(_1845, 1.0));
        _1498 = ((float(_69._m0 == 0u) * _1549) / (_1549 * 0.3183098733425140380859375)) + _1497;
        uint _1500 = _1499 + 1u;
        if (_1500 == 32u)
        {
            break;
        }
        else
        {
            _1497 = _1498;
            _1499 = _1500;
            continue;
        }
    }
    float _1557 = _1498 * 0.009947183541953563690185546875;
    float _1562 = dot(vec3(_1140, _1141, _1142), vec3(_966, _967, _968)) * 2.0;
    vec4 _1576 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1140 - (_1562 * _966), _1141 - (_1562 * _967), _1142 - (_1562 * _968)), 4.0 - (cbMtdParam._m0[14u].y * 4.0));
    float _1581 = dot(vec3(_1305, _1306, _1307), vec3(_966, _967, _968));
    float _1856 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
    float _1590 = (exp2(log2(1.0 - (isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1596 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_966, _967, _968), 0.0);
    float _1608 = ((_1464 + (cbMtdParam._m0[12u].y * _1247)) + _1467) + (((_1596.x * _1281) + (_1590 * _1576.x)) * _1557);
    float _1613 = ((_1465 + (cbMtdParam._m0[12u].y * _1250)) + _1468) + (((_1596.y * _1283) + (_1590 * _1576.y)) * _1557);
    float _1618 = ((_1466 + (cbMtdParam._m0[12u].y * _1253)) + _1469) + (((_1596.z * _1285) + (_1590 * _1576.z)) * _1557);
    float _1867 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
    float _1878 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
    float _1889 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
    bool _1626 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1637;
    _1637.x = _1626 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1867 : (isnan(_1867) ? 1.0 : min(_1867, 1.0)));
    _1637.y = _1626 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1878 : (isnan(_1878) ? 1.0 : min(_1878, 1.0)));
    _1637.z = _1626 ? ((_587 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1889 : (isnan(_1889) ? 1.0 : min(_1889, 1.0)));
    payload._m0 = _1637;
}


