#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_11;
layout(set = 0, binding = 2) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_8;
layout(set = 0, binding = 8) uniform texture2D M_Transiton_Expansionfield_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _1953;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _169 & 65535u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        else
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _170 >> 16u;
        }
        _175 = frontier_phi_3_2_ladder_1;
        _177 = frontier_phi_3_2_ladder;
        _178 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _182.z;
    bool _185 = _184 != 0u;
    bool _187 = _134.w == 0u;
    bool _188 = _185 || _187;
    uint _190 = (_183 * _175) + 12u;
    uint _214;
    uint _215;
    uint _216;
    uint _217;
    if (_188)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_190 >> 2u));
        uint _194 = _193.x;
        _214 = _194 & 255u;
        _215 = (_194 >> 8u) & 255u;
        _216 = (_194 >> 16u) & 255u;
        _217 = 20u;
    }
    else
    {
        uint _202 = _190 >> 2u;
        uvec2 _208 = uvec2(texelFetch(l_geomAttrib_0, int(_202)).x, texelFetch(l_geomAttrib_0, int(_202 + 1u)).x);
        uint _209 = _208.x;
        _214 = _209 & 65535u;
        _215 = _209 >> 16u;
        _216 = _208.y & 65535u;
        _217 = 24u;
    }
    bool _223 = _184 == 0u;
    uint _224;
    if (_223)
    {
        _224 = _217;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_187)
        {
            frontier_phi_9_10_ladder = _217 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _217 + 8u;
        }
        _224 = frontier_phi_9_10_ladder;
    }
    uint _229 = _185 ? (_224 + 4u) : _224;
    uint _230 = _183 * _175;
    uint _234 = ((_230 + 4u) + _229) >> 2u;
    uvec2 _240 = uvec2(texelFetch(l_geomAttrib_0, int(_234)).x, texelFetch(l_geomAttrib_0, int(_234 + 1u)).x);
    uint _241 = _240.x;
    uint _242 = _240.y;
    float _246 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _247 = float(int(uint(int(_241) >> int(16u))));
    uint _261 = (_183 * _177) + 12u;
    uint _282;
    uint _283;
    uint _284;
    uint _285;
    if (_188)
    {
        uvec4 _263 = texelFetch(l_geomAttrib_0, int(_261 >> 2u));
        uint _264 = _263.x;
        _282 = _264 & 255u;
        _283 = (_264 >> 8u) & 255u;
        _284 = (_264 >> 16u) & 255u;
        _285 = 20u;
    }
    else
    {
        uint _270 = _261 >> 2u;
        uvec2 _276 = uvec2(texelFetch(l_geomAttrib_0, int(_270)).x, texelFetch(l_geomAttrib_0, int(_270 + 1u)).x);
        uint _277 = _276.x;
        _282 = _277 & 65535u;
        _283 = _277 >> 16u;
        _284 = _276.y & 65535u;
        _285 = 24u;
    }
    uint _289;
    if (_223)
    {
        _289 = _285;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_187)
        {
            frontier_phi_16_17_ladder = _285 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _285 + 8u;
        }
        _289 = frontier_phi_16_17_ladder;
    }
    uint _293 = _185 ? (_289 + 4u) : _289;
    uint _294 = _183 * _177;
    uint _297 = ((_294 + 4u) + _293) >> 2u;
    uvec2 _303 = uvec2(texelFetch(l_geomAttrib_0, int(_297)).x, texelFetch(l_geomAttrib_0, int(_297 + 1u)).x);
    uint _304 = _303.x;
    uint _305 = _303.y;
    float _309 = float(int(uint(int(_304 << 16u) >> int(16u))));
    float _310 = float(int(uint(int(_304) >> int(16u))));
    uint _324 = (_183 * _178) + 12u;
    uint _345;
    uint _346;
    uint _347;
    uint _348;
    if (_188)
    {
        uvec4 _326 = texelFetch(l_geomAttrib_0, int(_324 >> 2u));
        uint _327 = _326.x;
        _345 = _327 & 255u;
        _346 = (_327 >> 8u) & 255u;
        _347 = (_327 >> 16u) & 255u;
        _348 = 20u;
    }
    else
    {
        uint _333 = _324 >> 2u;
        uvec2 _339 = uvec2(texelFetch(l_geomAttrib_0, int(_333)).x, texelFetch(l_geomAttrib_0, int(_333 + 1u)).x);
        uint _340 = _339.x;
        _345 = _340 & 65535u;
        _346 = _340 >> 16u;
        _347 = _339.y & 65535u;
        _348 = 24u;
    }
    uint _352;
    if (_223)
    {
        _352 = _348;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_187)
        {
            frontier_phi_23_24_ladder = _348 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _348 + 8u;
        }
        _352 = frontier_phi_23_24_ladder;
    }
    uint _356 = _185 ? (_352 + 4u) : _352;
    uint _357 = _183 * _178;
    uint _360 = ((_357 + 4u) + _356) >> 2u;
    uvec2 _366 = uvec2(texelFetch(l_geomAttrib_0, int(_360)).x, texelFetch(l_geomAttrib_0, int(_360 + 1u)).x);
    uint _367 = _366.x;
    uint _368 = _366.y;
    float _372 = float(int(uint(int(_367 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_367) >> int(16u))));
    bool _387 = _134.z == 0u;
    float _423;
    float _424;
    float _425;
    if (_387)
    {
        uint _390 = _175 * 3u;
        uvec3 _399 = uvec3(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_390 + 2u)).x);
        _423 = uintBitsToFloat(_399.x);
        _424 = uintBitsToFloat(_399.y);
        _425 = uintBitsToFloat(_399.z);
    }
    else
    {
        uint _407 = _175 * 2u;
        uvec2 _413 = uvec2(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x);
        uint _414 = _413.x;
        _423 = unpackHalf2x16(_414).x;
        _424 = unpackHalf2x16(_414 >> 16u).x;
        _425 = unpackHalf2x16(_413.y).x;
    }
    float _461;
    float _462;
    float _463;
    if (_387)
    {
        uint _428 = _177 * 3u;
        uvec3 _437 = uvec3(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_428 + 2u)).x);
        _461 = uintBitsToFloat(_437.x);
        _462 = uintBitsToFloat(_437.y);
        _463 = uintBitsToFloat(_437.z);
    }
    else
    {
        uint _445 = _177 * 2u;
        uvec2 _451 = uvec2(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x);
        uint _452 = _451.x;
        _461 = unpackHalf2x16(_452).x;
        _462 = unpackHalf2x16(_452 >> 16u).x;
        _463 = unpackHalf2x16(_451.y).x;
    }
    float _499;
    float _500;
    float _501;
    if (_387)
    {
        uint _466 = _178 * 3u;
        uvec3 _475 = uvec3(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_466 + 2u)).x);
        _499 = uintBitsToFloat(_475.x);
        _500 = uintBitsToFloat(_475.y);
        _501 = uintBitsToFloat(_475.z);
    }
    else
    {
        uint _483 = _178 * 2u;
        uvec2 _489 = uvec2(texelFetch(l_geomPositionBuffer, int(_483)).x, texelFetch(l_geomPositionBuffer, int(_483 + 1u)).x);
        uint _490 = _489.x;
        _499 = unpackHalf2x16(_490).x;
        _500 = unpackHalf2x16(_490 >> 16u).x;
        _501 = unpackHalf2x16(_489.y).x;
    }
    float _504 = (1.0 - hit._m0.x) - hit._m0.y;
    float _543 = (_309 - _246) * 0.00048828125;
    float _545 = (_310 - _247) * 0.00048828125;
    float _548 = (_372 - _246) * 0.00048828125;
    float _549 = (_373 - _247) * 0.00048828125;
    float _571 = _461 - _423;
    float _572 = _462 - _424;
    float _573 = _463 - _425;
    float _576 = fma(_573, gl_ObjectToWorldEXT[2u].x, fma(_572, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _571));
    float _579 = fma(_573, gl_ObjectToWorldEXT[2u].y, fma(_572, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _571));
    float _582 = fma(_573, gl_ObjectToWorldEXT[2u].z, fma(_572, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _571));
    float _583 = _499 - _423;
    float _584 = _500 - _424;
    float _585 = _501 - _425;
    float _588 = fma(_585, gl_ObjectToWorldEXT[2u].x, fma(_584, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _583));
    float _591 = fma(_585, gl_ObjectToWorldEXT[2u].y, fma(_584, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _583));
    float _594 = fma(_585, gl_ObjectToWorldEXT[2u].z, fma(_584, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _583));
    float _595 = (((_309 * hit._m0.x) + (_246 * _504)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _596 = (((_310 * hit._m0.x) + (_247 * _504)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _602 = (((float(_214) * _504) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_345) * hit._m0.y);
    float _605 = (((float(_215) * _504) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _608 = (((float(_216) * _504) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_347) * hit._m0.y);
    float _609 = _602 * 0.0078740157186985015869140625;
    float _611 = _605 * 0.0078740157186985015869140625;
    float _612 = _608 * 0.0078740157186985015869140625;
    float _630 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _633 = (_630 * cbMtdParam._m0[20u].w) + _595;
    float _634 = (_630 * cbMtdParam._m0[21u].x) + _596;
    float _654 = (cbTextureTilingScale._m0[8u].x * ((cbMtdParam._m0[20u].y * cbPerFrame._m0[22u].x) + _595)) + cbTextureTilingScale._m0[8u].z;
    float _655 = (cbTextureTilingScale._m0[8u].y * ((cbMtdParam._m0[20u].z * cbPerFrame._m0[22u].x) + _596)) + cbTextureTilingScale._m0[8u].w;
    uvec2 _657 = uvec2(textureSize(M_Transiton_Expansionfield_snp_0_Texture2D_9, int(0u)));
    bool _662 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _715;
    if (_662)
    {
        float _673 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _679 = (_594 * _579) - (_591 * _582);
        float _682 = (_588 * _582) - (_594 * _576);
        float _685 = (_591 * _576) - (_588 * _579);
        float _712 = ((log2((((float(_657.y) * 0.5) * float(_657.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_682 * _682) + (_685 * _685)) + (_679 * _679)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_673 * gl_WorldRayDirectionEXT.x, _673 * gl_WorldRayDirectionEXT.y, _673 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _715 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    }
    else
    {
        _715 = 0.0;
    }
    vec4 _719 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_654, _655), _715);
    float _723 = cbPerFrame._m0[22u].x * 2.0;
    float _724 = _723 * cbMtdParam._m0[17u].z;
    float _730 = ((_719.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _732 = (-0.0) - (cbMtdParam._m0[17u].w * ((_719.x * 0.5) + (-0.25)));
    float _734 = fract(_724);
    float _736 = fract(_724 + 0.5);
    float _748 = abs((_734 * 2.0) + (-1.0));
    vec4 _766 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_734 * _732) + _633) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_730 * _734) + _634) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _768 = _766.x;
    float _769 = _766.y;
    float _770 = _766.z;
    vec4 _771 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_736 * _732) + _633) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_730 * _736) + _634) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _800 = (cbMtdParam._m0[21u].w * _630) + _595;
    float _801 = (cbMtdParam._m0[22u].x * _630) + _596;
    float _852;
    if (_662)
    {
        float _812 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _818 = (_594 * _579) - (_591 * _582);
        float _821 = (_588 * _582) - (_594 * _576);
        float _824 = (_591 * _576) - (_588 * _579);
        float _850 = ((log2((((float(_657.y) * 0.5) * float(_657.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_821 * _821) + (_824 * _824)) + (_818 * _818)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_812 * gl_WorldRayDirectionEXT.x, _812 * gl_WorldRayDirectionEXT.y, _812 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _852 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    }
    else
    {
        _852 = 0.0;
    }
    vec4 _854 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_654, _655), _852);
    float _862 = ((_854.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _864 = (-0.0) - (cbMtdParam._m0[17u].w * ((_854.x * 0.5) + (-0.25)));
    vec4 _889 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_734 * _864) + _800) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_862 * _734) + _801) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _891 = _889.x;
    float _892 = _889.y;
    float _893 = _889.z;
    vec4 _894 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_736 * _864) + _800) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_862 * _736) + _801) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _919 = sin(cbMtdParam._m0[18u].x);
    float _920 = cos(cbMtdParam._m0[18u].x);
    float _921 = ((((float(int(uint(int(_305 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_242 << 16u) >> int(16u)))) * _504)) + (float(int(uint(int(_368 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[18u].y;
    float _922 = ((((float(int(uint(int(_305) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_242) >> int(16u)))) * _504)) + (float(int(uint(int(_368) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[18u].y;
    float _928 = fma(_922, (-0.0) - _919, _920 * _921) + cbMtdParam._m0[18u].y;
    float _929 = fma(_922, _920, _921 * _919) + cbMtdParam._m0[18u].y;
    float _980;
    if (_662)
    {
        float _940 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _946 = (_594 * _579) - (_591 * _582);
        float _949 = (_588 * _582) - (_594 * _576);
        float _952 = (_591 * _576) - (_588 * _579);
        float _978 = ((log2((((float(_657.y) * 0.5) * float(_657.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_949 * _949) + (_952 * _952)) + (_946 * _946)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_940 * gl_WorldRayDirectionEXT.x, _940 * gl_WorldRayDirectionEXT.y, _940 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _980 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    }
    else
    {
        _980 = 0.0;
    }
    vec4 _982 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_654, _655), _980);
    float _990 = ((_982.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _992 = (-0.0) - (cbMtdParam._m0[17u].w * ((_982.x * 0.5) + (-0.25)));
    vec4 _1017 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_734 * _992) + _928) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_990 * _734) + _929) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1019 = _1017.x;
    float _1025 = ((textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_736 * _992) + _928) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_990 * _736) + _929) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0).x - _1019) * _748) + _1019;
    float _1028 = (cbMtdParam._m0[18u].w * (((((_894.x - _891) * _748) + _891) * cbMtdParam._m0[13u].x) + ((((_771.x - _768) * _748) + _768) * cbMtdParam._m0[11u].x))) * _1025;
    float _1030 = (cbMtdParam._m0[18u].w * (((((_894.y - _892) * _748) + _892) * cbMtdParam._m0[13u].y) + ((((_771.y - _769) * _748) + _769) * cbMtdParam._m0[11u].y))) * _1025;
    float _1032 = (cbMtdParam._m0[18u].w * (((((_894.z - _893) * _748) + _893) * cbMtdParam._m0[13u].z) + ((((_771.z - _770) * _748) + _770) * cbMtdParam._m0[11u].z))) * _1025;
    float _1034 = _1025 * cbMtdParam._m0[18u].z;
    float _1048 = (cbMtdParam._m0[19u].w * _630) + _595;
    float _1049 = (cbMtdParam._m0[20u].x * _630) + _596;
    float _1100;
    if (_662)
    {
        float _1060 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1066 = (_594 * _579) - (_591 * _582);
        float _1069 = (_588 * _582) - (_594 * _576);
        float _1072 = (_591 * _576) - (_588 * _579);
        float _1098 = ((log2((((float(_657.y) * 0.5) * float(_657.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_1069 * _1069) + (_1072 * _1072)) + (_1066 * _1066)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1060 * gl_WorldRayDirectionEXT.x, _1060 * gl_WorldRayDirectionEXT.y, _1060 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1100 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    }
    else
    {
        _1100 = 0.0;
    }
    vec4 _1102 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_654, _655), _1100);
    float _1110 = ((_1102.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _1112 = (-0.0) - (cbMtdParam._m0[17u].w * ((_1102.x * 0.5) + (-0.25)));
    vec4 _1137 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_734 * _1112) + _1048) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1110 * _734) + _1049) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1139 = _1137.x;
    float _1140 = _1137.y;
    float _1141 = _1137.z;
    vec4 _1142 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_736 * _1112) + _1048) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1110 * _736) + _1049) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1168 = (cbMtdParam._m0[21u].y * _630) + _595;
    float _1169 = (cbMtdParam._m0[21u].z * _630) + _596;
    float _1222;
    if (_662)
    {
        float _1182 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1188 = (_594 * _579) - (_591 * _582);
        float _1191 = (_588 * _582) - (_594 * _576);
        float _1194 = (_591 * _576) - (_588 * _579);
        float _1220 = ((log2((((float(_657.y) * 0.5) * float(_657.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_1191 * _1191) + (_1194 * _1194)) + (_1188 * _1188)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1182 * gl_WorldRayDirectionEXT.x, _1182 * gl_WorldRayDirectionEXT.y, _1182 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1222 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
    }
    else
    {
        _1222 = 0.0;
    }
    vec4 _1224 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_9, SS_WrapLinear), vec2(_654, _655), _1222);
    float _1228 = _723 * cbMtdParam._m0[19u].x;
    float _1233 = ((_1224.y * 0.5) + (-0.25)) * cbMtdParam._m0[19u].z;
    float _1235 = (-0.0) - (cbMtdParam._m0[19u].z * ((_1224.x * 0.5) + (-0.25)));
    float _1236 = fract(_1228);
    float _1238 = fract(_1228 + 0.5);
    float _1249 = abs((_1236 * 2.0) + (-1.0));
    vec4 _1266 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_12, SS_DiffuseMap), vec2((((_1236 * _1235) + _1168) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1233 * _1236) + _1169) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1268 = _1266.x;
    float _1269 = _1266.y;
    float _1270 = _1266.z;
    vec4 _1271 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_12, SS_DiffuseMap), vec2((((_1238 * _1235) + _1168) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_1233 * _1238) + _1169) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1293 = abs((fract(cbMtdParam._m0[17u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _2066 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
    float _1294 = isnan(1.0) ? _2066 : (isnan(_2066) ? 1.0 : min(_2066, 1.0));
    float _1301 = ((_1294 * _1294) * (3.0 - (_1294 * 2.0))) - cbMtdParam._m0[17u].y;
    float _1317 = ((_1034 * ((((((_1142.x - _1139) * _748) + _1139) * cbMtdParam._m0[14u].x) - _1028) + (((((_1271.x - _1268) * _1249) + _1268) * cbMtdParam._m0[12u].x) * _1301))) + _1028) * cbMtdParam._m0[16u].w;
    float _1318 = ((_1034 * ((((((_1142.y - _1140) * _748) + _1140) * cbMtdParam._m0[14u].y) - _1030) + (((((_1271.y - _1269) * _1249) + _1269) * cbMtdParam._m0[12u].y) * _1301))) + _1030) * cbMtdParam._m0[16u].w;
    float _1319 = ((_1034 * ((((((_1142.z - _1141) * _748) + _1141) * cbMtdParam._m0[14u].z) - _1032) + (((((_1271.z - _1270) * _1249) + _1270) * cbMtdParam._m0[12u].z) * _1301))) + _1032) * cbMtdParam._m0[16u].w;
    uvec2 _1331 = uvec2(textureSize(M_Transiton_Expansionfield_snp_0_Texture2D_5, int(0u)));
    float _1382;
    if (_662)
    {
        float _1342 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1348 = (_594 * _579) - (_591 * _582);
        float _1351 = (_588 * _582) - (_594 * _576);
        float _1354 = (_591 * _576) - (_588 * _579);
        float _1380 = ((log2((((float(_1331.y) * 0.5) * float(_1331.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_1351 * _1351) + (_1354 * _1354)) + (_1348 * _1348)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1342 * gl_WorldRayDirectionEXT.x, _1342 * gl_WorldRayDirectionEXT.y, _1342 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1382 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
    }
    else
    {
        _1382 = 0.0;
    }
    vec4 _1384 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_5, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _595) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _596) + cbTextureTilingScale._m0[4u].w), _1382);
    float _1386 = _1384.x;
    float _1388 = cbMtdParam._m0[19u].y * 0.16666667163372039794921875;
    float _1393 = fract(abs(_1388));
    float _1399 = (((((float(texelFetch(l_geomAttrib_0, int(((_294 + 12u) + _293) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_230 + 12u) + _229) >> 2u)).x & 255u) * _504)) + (float(texelFetch(l_geomAttrib_0, int(((_357 + 12u) + _356) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) + 0.5) - ((((_1388 >= ((-0.0) - _1388)) ? _1393 : ((-0.0) - _1393)) * 3.0) - _1386);
    float _1400 = ceil(_1399);
    float _2082 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
    float _1401 = isnan(1.0) ? _2082 : (isnan(_2082) ? 1.0 : min(_2082, 1.0));
    float _1407 = sin(cbMtdParam._m0[15u].y);
    float _1408 = cos(cbMtdParam._m0[15u].y);
    float _1409 = _595 - cbMtdParam._m0[15u].x;
    float _1410 = _596 - cbMtdParam._m0[15u].x;
    uvec2 _1429 = uvec2(textureSize(M_Transiton_Expansionfield_snp_0_Texture2D_4, int(0u)));
    float _1480;
    if (_662)
    {
        float _1440 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1446 = (_594 * _579) - (_591 * _582);
        float _1449 = (_588 * _582) - (_594 * _576);
        float _1452 = (_591 * _576) - (_588 * _579);
        float _1478 = ((log2((((float(_1429.y) * 0.5) * float(_1429.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_1449 * _1449) + (_1452 * _1452)) + (_1446 * _1446)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1440 * gl_WorldRayDirectionEXT.x, _1440 * gl_WorldRayDirectionEXT.y, _1440 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1480 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    }
    else
    {
        _1480 = 0.0;
    }
    vec4 _1482 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (fma(_1410, (-0.0) - _1407, _1408 * _1409) + cbMtdParam._m0[15u].x)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (fma(_1410, _1408, _1409 * _1407) + cbMtdParam._m0[15u].x)) + cbTextureTilingScale._m0[3u].w), _1480);
    float _1493 = cbMtdParam._m0[9u].x * _1482.x;
    float _1494 = cbMtdParam._m0[9u].y * _1482.y;
    float _1495 = cbMtdParam._m0[9u].z * _1482.z;
    float _1502 = ((_1493 - _1317) * _1401) + _1317;
    float _1503 = ((_1494 - _1318) * _1401) + _1318;
    float _1504 = ((_1495 - _1319) * _1401) + _1319;
    float _1508 = abs(cbMtdParam._m0[15u].z * _1399);
    float _1512 = (((_1508 * cbMtdParam._m0[15u].w) - _1386) * _1508) + _1386;
    float _2098 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
    float _1513 = isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0));
    uvec2 _1526 = uvec2(textureSize(M_Transiton_Expansionfield_snp_0_Texture2D_6, int(0u)));
    float _1530 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1531 = _1530 * gl_WorldRayDirectionEXT.x;
    float _1532 = _1530 * gl_WorldRayDirectionEXT.y;
    float _1533 = _1530 * gl_WorldRayDirectionEXT.z;
    float _1577;
    if (_662)
    {
        float _1543 = (_594 * _579) - (_591 * _582);
        float _1546 = (_588 * _582) - (_594 * _576);
        float _1549 = (_591 * _576) - (_588 * _579);
        float _1575 = ((log2((((float(_1526.y) * 0.5) * float(_1526.x)) * abs((_549 * _543) - (_548 * _545))) / (sqrt(((_1546 * _1546) + (_1549 * _1549)) + (_1543 * _1543)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1531, _1532, _1533), vec3(_609, _611, _612))));
        _1577 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
    }
    else
    {
        _1577 = 0.0;
    }
    vec4 _1579 = textureLod(sampler2D(M_Transiton_Expansionfield_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _595) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _596) + cbTextureTilingScale._m0[5u].w), _1577);
    float _1590 = cbMtdParam._m0[10u].x * _1579.x;
    float _1591 = cbMtdParam._m0[10u].y * _1579.y;
    float _1592 = cbMtdParam._m0[10u].z * _1579.z;
    float _1593 = _1590 * _1513;
    float _1594 = _1591 * _1513;
    float _1595 = _1592 * _1513;
    float _1599 = exp2(log2(_1513) * cbMtdParam._m0[16u].y);
    float _1609 = (_1599 * ((_1590 - _1502) - _1593)) + _1502;
    float _1610 = (_1599 * ((_1591 - _1503) - _1594)) + _1503;
    float _1611 = (_1599 * ((_1592 - _1504) - _1595)) + _1504;
    float _1612 = _1493 * _1401;
    float _1613 = _1494 * _1401;
    float _1614 = _1495 * _1401;
    float _1634 = inversesqrt(dot(vec3(_609, _611, _612), vec3(_609, _611, _612)));
    float _1635 = _1634 * _609;
    float _1636 = _1634 * _611;
    float _1637 = _1634 * _612;
    float _1649 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1650 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1651 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1652 = (-0.0) - _1531;
    float _1653 = (-0.0) - _1532;
    float _1654 = (-0.0) - _1533;
    float _1660 = float(gl_LaunchIDEXT.x);
    float _1661 = float(gl_LaunchIDEXT.y);
    float _1664 = float(gl_LaunchSizeEXT.x);
    float _1678 = fract(fract(sin(dot(vec2(_1660 / _1664, _1661 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1691 = fract(fract(sin(dot(vec2((_1660 + 128.0) / _1664, (_1661 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _1701 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1702 = _1701.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1702, _1701.w, _1702, vec3(_1649, _1650, _1651), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    if (_72._m0 == 0u)
    {
        float _1722 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1635, _1636, _1637));
        float _2114 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1725 = isnan(1.0) ? _2114 : (isnan(_2114) ? 1.0 : min(_2114, 1.0));
        float _1736 = g_sceneCB._m0[4u].x - _1531;
        float _1737 = g_sceneCB._m0[4u].y - _1532;
        float _1738 = g_sceneCB._m0[4u].z - _1533;
        float _1742 = inversesqrt(dot(vec3(_1736, _1737, _1738), vec3(_1736, _1737, _1738)));
        float _1746 = dot(vec3(_1635, _1636, _1637), vec3(g_sceneCB._m0[4u].xyz));
        float _2125 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1749 = isnan(1.0) ? _2125 : (isnan(_2125) ? 1.0 : min(_2125, 1.0));
        float _1750 = dot(vec3(_1635, _1636, _1637), vec3(_1652, _1653, _1654));
        float _2136 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1754 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1736 * _1742, _1737 * _1742, _1738 * _1742));
        float _2147 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1765 = (exp2(log2(1.0 - (isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1771 = (0.5 / ((_1749 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2136 : (isnan(_2136) ? 1.0 : min(_2136, 1.0))))) * _1749;
        float _2158 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1773 = (isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0))) * 0.31831014156341552734375;
        _1781 = ((_1609 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1725;
        _1782 = ((_1610 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1725;
        _1783 = ((_1611 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1725;
        _1784 = (_1765 * g_sceneCB._m0[5u].x) * _1773;
        _1785 = (_1765 * g_sceneCB._m0[5u].y) * _1773;
        _1786 = (_1765 * g_sceneCB._m0[5u].z) * _1773;
    }
    else
    {
        _1781 = 0.0;
        _1782 = 0.0;
        _1783 = 0.0;
        _1784 = 0.0;
        _1785 = 0.0;
        _1786 = 0.0;
    }
    bool _1788 = abs(_1636) < 0.89999997615814208984375;
    float _1790 = float(_1788);
    float _1791 = _1788 ? 0.0 : 1.0;
    float _1794 = (_1790 * _1637) - (_1791 * _1636);
    float _1795 = _1791 * _1635;
    float _1797 = (-0.0) - (_1635 * _1790);
    float _1801 = inversesqrt(dot(vec3(_1794, _1795, _1797), vec3(_1794, _1795, _1797)));
    float _1802 = _1794 * _1801;
    float _1803 = _1795 * _1801;
    float _1804 = _1801 * _1797;
    float _1807 = (_1803 * _1637) - (_1804 * _1636);
    float _1810 = (_1804 * _1635) - (_1802 * _1637);
    float _1813 = (_1802 * _1636) - (_1803 * _1635);
    float _1815;
    float _1823;
    float _1814 = 0.0;
    uint _1816 = 0u;
    float _1820;
    bool _1822;
    for (;;)
    {
        _1820 = (float(_1816) + _1678) * 0.03125;
        _1822 = _1816 == 0u;
        float frontier_phi_55_pred;
        if (_1822)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1958;
            float _1959;
            uint _1961;
            _1958 = 0.0;
            _1959 = 0.5;
            _1961 = _1816;
            float _1824;
            for (;;)
            {
                _1824 = ((_1961 & 1u) != 0u) ? (_1959 + _1958) : _1958;
                uint _1962 = _1961 >> 1u;
                if (_1962 == 0u)
                {
                    break;
                }
                else
                {
                    _1958 = _1824;
                    _1959 *= 0.5;
                    _1961 = _1962;
                }
            }
            frontier_phi_55_pred = _1824;
        }
        _1823 = frontier_phi_55_pred;
        float _1825 = _1823 + _1691;
        float _1829 = sqrt(_1820);
        float _1830 = ((_1825 > 1.0) ? (_1825 + (-1.0)) : _1825) * 6.283185482025146484375;
        float _1833 = cos(_1830) * _1829;
        float _1835 = sin(_1830) * _1829;
        float _1837 = sqrt(1.0 - _1820);
        float _1850 = ((_1837 * _1635) + (_1833 * _1807)) + (_1835 * _1802);
        float _1851 = ((_1837 * _1636) + (_1833 * _1810)) + (_1835 * _1803);
        float _1852 = ((_1837 * _1637) + (_1833 * _1813)) + (_1835 * _1804);
        _71._m0 = 1u;
        uvec4 _1856 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1857 = _1856.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1857, _1856.w, _1857, vec3(_1649, _1650, _1651), 9.9999997473787516355514526367188e-05, vec3(_1850, _1851, _1852), 10000.0, 1);
        float _1863 = dot(vec3(_1635, _1636, _1637), vec3(_1850, _1851, _1852));
        float _2169 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        float _1866 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
        _1815 = ((float(_71._m0 == 0u) * _1866) / (_1866 * 0.3183098733425140380859375)) + _1814;
        uint _1817 = _1816 + 1u;
        if (_1817 == 32u)
        {
            break;
        }
        else
        {
            _1814 = _1815;
            _1816 = _1817;
            continue;
        }
    }
    float _1874 = _1815 * 0.009947183541953563690185546875;
    float _1879 = dot(vec3(_1531, _1532, _1533), vec3(_1635, _1636, _1637)) * 2.0;
    vec4 _1891 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1531 - (_1879 * _1635), _1532 - (_1879 * _1636), _1533 - (_1879 * _1637)), 4.0);
    float _1896 = dot(vec3(_1652, _1653, _1654), vec3(_1635, _1636, _1637));
    float _2180 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
    float _1905 = (exp2(log2(1.0 - (isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1911 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1635, _1636, _1637), 0.0);
    float _1923 = ((_1781 + (cbMtdParam._m0[16u].z * ((_1599 * ((_1590 - _1612) - _1593)) + _1612))) + _1784) + (((_1911.x * _1609) + (_1905 * _1891.x)) * _1874);
    float _1928 = ((_1782 + (cbMtdParam._m0[16u].z * ((_1599 * ((_1591 - _1613) - _1594)) + _1613))) + _1785) + (((_1911.y * _1610) + (_1905 * _1891.y)) * _1874);
    float _1933 = ((_1783 + (((_1599 * ((_1592 - _1614) - _1595)) + _1614) * cbMtdParam._m0[16u].z)) + _1786) + (((_1911.z * _1611) + (_1905 * _1891.z)) * _1874);
    float _2191 = isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0));
    float _2202 = isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0));
    float _2213 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
    bool _1941 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1952;
    _1952.x = _1941 ? ((_602 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0)));
    _1952.y = _1941 ? ((_605 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0)));
    _1952.z = _1941 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0)));
    payload._m0 = _1952;
}


