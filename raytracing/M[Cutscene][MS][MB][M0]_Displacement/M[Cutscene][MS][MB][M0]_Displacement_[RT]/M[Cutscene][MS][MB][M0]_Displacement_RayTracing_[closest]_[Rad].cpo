#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_22;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_26;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _2166;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _163 & 65535u;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _164 >> 16u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        _169 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
        _172 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _220 = _219.x;
    uint _231 = _211 | 8u;
    bool _232 = _178 == 0u;
    uint _233;
    if (_232)
    {
        _233 = _231;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _231 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _231 + 8u;
        }
        _233 = frontier_phi_9_10_ladder;
    }
    uint _238 = _179 ? (_233 + 4u) : _233;
    uint _241 = ((_183 + 4u) + _238) >> 2u;
    uvec2 _247 = uvec2(texelFetch(l_geomAttrib_0, int(_241)).x, texelFetch(l_geomAttrib_0, int(_241 + 1u)).x);
    uint _248 = _247.x;
    uint _249 = _247.y;
    float _253 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _254 = float(int(uint(int(_248) >> int(16u))));
    float _258 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_249) >> int(16u))));
    uvec4 _277 = texelFetch(l_geomAttrib_0, int(((_183 + 20u) + _238) >> 2u));
    uint _278 = _277.x;
    uvec4 _287 = texelFetch(l_geomAttrib_0, int(((_183 + 24u) + _238) >> 2u));
    uint _288 = _287.x;
    uint _297 = _177 * _171;
    uint _298 = _297 + 12u;
    uint _319;
    uint _320;
    uint _321;
    uint _322;
    if (_182)
    {
        uvec4 _300 = texelFetch(l_geomAttrib_0, int(_298 >> 2u));
        uint _301 = _300.x;
        _319 = _301 & 255u;
        _320 = (_301 >> 8u) & 255u;
        _321 = (_301 >> 16u) & 255u;
        _322 = 16u;
    }
    else
    {
        uint _307 = _298 >> 2u;
        uvec2 _313 = uvec2(texelFetch(l_geomAttrib_0, int(_307)).x, texelFetch(l_geomAttrib_0, int(_307 + 1u)).x);
        uint _314 = _313.x;
        _319 = _314 & 65535u;
        _320 = _314 >> 16u;
        _321 = _313.y & 65535u;
        _322 = 20u;
    }
    uvec4 _328 = texelFetch(l_geomAttrib_0, int((_322 + _297) >> 2u));
    uint _329 = _328.x;
    uint _340 = _322 | 8u;
    uint _341;
    if (_232)
    {
        _341 = _340;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _340 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _340 + 8u;
        }
        _341 = frontier_phi_16_17_ladder;
    }
    uint _345 = _179 ? (_341 + 4u) : _341;
    uint _348 = ((_297 + 4u) + _345) >> 2u;
    uvec2 _354 = uvec2(texelFetch(l_geomAttrib_0, int(_348)).x, texelFetch(l_geomAttrib_0, int(_348 + 1u)).x);
    uint _355 = _354.x;
    uint _356 = _354.y;
    float _360 = float(int(uint(int(_355 << 16u) >> int(16u))));
    float _361 = float(int(uint(int(_355) >> int(16u))));
    float _365 = float(int(uint(int(_356 << 16u) >> int(16u))));
    float _366 = float(int(uint(int(_356) >> int(16u))));
    uvec4 _384 = texelFetch(l_geomAttrib_0, int(((_297 + 20u) + _345) >> 2u));
    uint _385 = _384.x;
    uvec4 _394 = texelFetch(l_geomAttrib_0, int(((_297 + 24u) + _345) >> 2u));
    uint _395 = _394.x;
    uint _404 = _177 * _172;
    uint _405 = _404 + 12u;
    uint _426;
    uint _427;
    uint _428;
    uint _429;
    if (_182)
    {
        uvec4 _407 = texelFetch(l_geomAttrib_0, int(_405 >> 2u));
        uint _408 = _407.x;
        _426 = _408 & 255u;
        _427 = (_408 >> 8u) & 255u;
        _428 = (_408 >> 16u) & 255u;
        _429 = 16u;
    }
    else
    {
        uint _414 = _405 >> 2u;
        uvec2 _420 = uvec2(texelFetch(l_geomAttrib_0, int(_414)).x, texelFetch(l_geomAttrib_0, int(_414 + 1u)).x);
        uint _421 = _420.x;
        _426 = _421 & 65535u;
        _427 = _421 >> 16u;
        _428 = _420.y & 65535u;
        _429 = 20u;
    }
    uvec4 _435 = texelFetch(l_geomAttrib_0, int((_429 + _404) >> 2u));
    uint _436 = _435.x;
    uint _447 = _429 | 8u;
    uint _448;
    if (_232)
    {
        _448 = _447;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _447 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _447 + 8u;
        }
        _448 = frontier_phi_23_24_ladder;
    }
    uint _452 = _179 ? (_448 + 4u) : _448;
    uint _455 = ((_404 + 4u) + _452) >> 2u;
    uvec2 _461 = uvec2(texelFetch(l_geomAttrib_0, int(_455)).x, texelFetch(l_geomAttrib_0, int(_455 + 1u)).x);
    uint _462 = _461.x;
    uint _463 = _461.y;
    float _467 = float(int(uint(int(_462 << 16u) >> int(16u))));
    float _468 = float(int(uint(int(_462) >> int(16u))));
    float _472 = float(int(uint(int(_463 << 16u) >> int(16u))));
    float _473 = float(int(uint(int(_463) >> int(16u))));
    uvec4 _491 = texelFetch(l_geomAttrib_0, int(((_404 + 20u) + _452) >> 2u));
    uint _492 = _491.x;
    uvec4 _501 = texelFetch(l_geomAttrib_0, int(((_404 + 24u) + _452) >> 2u));
    uint _502 = _501.x;
    bool _512 = _128.z == 0u;
    float _548;
    float _549;
    float _550;
    if (_512)
    {
        uint _515 = _169 * 3u;
        uvec3 _524 = uvec3(texelFetch(l_geomPositionBuffer, int(_515)).x, texelFetch(l_geomPositionBuffer, int(_515 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_515 + 2u)).x);
        _548 = uintBitsToFloat(_524.x);
        _549 = uintBitsToFloat(_524.y);
        _550 = uintBitsToFloat(_524.z);
    }
    else
    {
        uint _532 = _169 * 2u;
        uvec2 _538 = uvec2(texelFetch(l_geomPositionBuffer, int(_532)).x, texelFetch(l_geomPositionBuffer, int(_532 + 1u)).x);
        uint _539 = _538.x;
        _548 = unpackHalf2x16(_539).x;
        _549 = unpackHalf2x16(_539 >> 16u).x;
        _550 = unpackHalf2x16(_538.y).x;
    }
    float _586;
    float _587;
    float _588;
    if (_512)
    {
        uint _553 = _171 * 3u;
        uvec3 _562 = uvec3(texelFetch(l_geomPositionBuffer, int(_553)).x, texelFetch(l_geomPositionBuffer, int(_553 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_553 + 2u)).x);
        _586 = uintBitsToFloat(_562.x);
        _587 = uintBitsToFloat(_562.y);
        _588 = uintBitsToFloat(_562.z);
    }
    else
    {
        uint _570 = _171 * 2u;
        uvec2 _576 = uvec2(texelFetch(l_geomPositionBuffer, int(_570)).x, texelFetch(l_geomPositionBuffer, int(_570 + 1u)).x);
        uint _577 = _576.x;
        _586 = unpackHalf2x16(_577).x;
        _587 = unpackHalf2x16(_577 >> 16u).x;
        _588 = unpackHalf2x16(_576.y).x;
    }
    float _624;
    float _625;
    float _626;
    if (_512)
    {
        uint _591 = _172 * 3u;
        uvec3 _600 = uvec3(texelFetch(l_geomPositionBuffer, int(_591)).x, texelFetch(l_geomPositionBuffer, int(_591 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_591 + 2u)).x);
        _624 = uintBitsToFloat(_600.x);
        _625 = uintBitsToFloat(_600.y);
        _626 = uintBitsToFloat(_600.z);
    }
    else
    {
        uint _608 = _172 * 2u;
        uvec2 _614 = uvec2(texelFetch(l_geomPositionBuffer, int(_608)).x, texelFetch(l_geomPositionBuffer, int(_608 + 1u)).x);
        uint _615 = _614.x;
        _624 = unpackHalf2x16(_615).x;
        _625 = unpackHalf2x16(_615 >> 16u).x;
        _626 = unpackHalf2x16(_614.y).x;
    }
    float _629 = (1.0 - hit._m0.x) - hit._m0.y;
    float _671 = _629 * 0.0039215688593685626983642578125;
    float _674 = hit._m0.x * 0.0039215688593685626983642578125;
    float _676 = hit._m0.y * 0.0039215688593685626983642578125;
    float _689 = (((float(_385 & 255u) * hit._m0.x) + (float(_278 & 255u) * _629)) + (float(_492 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _713 = (_360 - _253) * 0.00048828125;
    float _715 = (_361 - _254) * 0.00048828125;
    float _718 = (_467 - _253) * 0.00048828125;
    float _719 = (_468 - _254) * 0.00048828125;
    float _722 = (_365 - _258) * 0.00048828125;
    float _723 = (_366 - _259) * 0.00048828125;
    float _726 = (_472 - _258) * 0.00048828125;
    float _727 = (_473 - _259) * 0.00048828125;
    float _749 = _586 - _548;
    float _750 = _587 - _549;
    float _751 = _588 - _550;
    float _754 = fma(_751, gl_ObjectToWorldEXT[2u].x, fma(_750, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _749));
    float _757 = fma(_751, gl_ObjectToWorldEXT[2u].y, fma(_750, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _749));
    float _760 = fma(_751, gl_ObjectToWorldEXT[2u].z, fma(_750, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _749));
    float _761 = _624 - _548;
    float _762 = _625 - _549;
    float _763 = _626 - _550;
    float _766 = fma(_763, gl_ObjectToWorldEXT[2u].x, fma(_762, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _761));
    float _769 = fma(_763, gl_ObjectToWorldEXT[2u].y, fma(_762, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _761));
    float _772 = fma(_763, gl_ObjectToWorldEXT[2u].z, fma(_762, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _761));
    float _773 = (((_360 * hit._m0.x) + (_253 * _629)) + (_467 * hit._m0.y)) * 0.00048828125;
    float _774 = (((_361 * hit._m0.x) + (_254 * _629)) + (_468 * hit._m0.y)) * 0.00048828125;
    float _775 = (((_365 * hit._m0.x) + (_258 * _629)) + (_472 * hit._m0.y)) * 0.00048828125;
    float _776 = (((_366 * hit._m0.x) + (_259 * _629)) + (_473 * hit._m0.y)) * 0.00048828125;
    float _780 = (((float(_208) * _629) + (-127.0)) + (float(_319) * hit._m0.x)) + (float(_426) * hit._m0.y);
    float _783 = (((float(_209) * _629) + (-127.0)) + (float(_320) * hit._m0.x)) + (float(_427) * hit._m0.y);
    float _786 = (((float(_210) * _629) + (-127.0)) + (float(_321) * hit._m0.x)) + (float(_428) * hit._m0.y);
    float _787 = _780 * 0.0078740157186985015869140625;
    float _789 = _783 * 0.0078740157186985015869140625;
    float _790 = _786 * 0.0078740157186985015869140625;
    float _803 = ((((float(_220 & 255u) * _629) + (-127.0)) + (float(_329 & 255u) * hit._m0.x)) + (float(_436 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _804 = ((((float((_220 >> 8u) & 255u) * _629) + (-127.0)) + (float((_329 >> 8u) & 255u) * hit._m0.x)) + (float((_436 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _805 = ((((float((_220 >> 16u) & 255u) * _629) + (-127.0)) + (float((_329 >> 16u) & 255u) * hit._m0.x)) + (float((_436 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _806 = ((((float(_220 >> 24u) * _629) + (-127.0)) + (float(_329 >> 24u) * hit._m0.x)) + (float(_436 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _816 = ((_804 * _790) - (_805 * _789)) * _806;
    float _817 = ((_805 * _787) - (_803 * _790)) * _806;
    float _818 = ((_803 * _789) - (_804 * _787)) * _806;
    float _822 = inversesqrt(dot(vec3(_816, _817, _818), vec3(_816, _817, _818)));
    float _833 = 1.0 - (((((float(_395 & 255u) * hit._m0.x) + (float(_288 & 255u) * _629)) + (float(_502 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[17u].w);
    float _834 = 1.0 - (((((float((_395 >> 8u) & 255u) * hit._m0.x) + (float((_288 >> 8u) & 255u) * _629)) + (float((_502 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[17u].w);
    float _835 = 1.0 - (((((float((_395 >> 16u) & 255u) * hit._m0.x) + (float((_288 >> 16u) & 255u) * _629)) + (float((_502 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[17u].w);
    float _2258 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _2269 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _2280 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    uvec2 _858 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_15, int(0u)));
    bool _863 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _915;
    if (_863)
    {
        float _874 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _880 = (_772 * _757) - (_769 * _760);
        float _883 = (_766 * _760) - (_772 * _754);
        float _886 = (_769 * _754) - (_766 * _757);
        float _913 = ((log2((((float(_858.y) * 0.5) * float(_858.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_883 * _883) + (_886 * _886)) + (_880 * _880)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_874 * gl_WorldRayDirectionEXT.x, _874 * gl_WorldRayDirectionEXT.y, _874 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _915 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    }
    else
    {
        _915 = 0.0;
    }
    vec4 _919 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _773) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _774) + cbTextureTilingScale._m0[5u].w), _915);
    float _924 = _919.x * cbMtdParam._m0[11u].x;
    float _925 = _919.y * cbMtdParam._m0[11u].y;
    float _926 = _919.z * cbMtdParam._m0[11u].z;
    uvec2 _943 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_13, int(0u)));
    float _994;
    if (_863)
    {
        float _954 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _960 = (_772 * _757) - (_769 * _760);
        float _963 = (_766 * _760) - (_772 * _754);
        float _966 = (_769 * _754) - (_766 * _757);
        float _992 = ((log2((((float(_943.y) * 0.5) * float(_943.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_963 * _963) + (_966 * _966)) + (_960 * _960)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_954 * gl_WorldRayDirectionEXT.x, _954 * gl_WorldRayDirectionEXT.y, _954 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _994 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    }
    else
    {
        _994 = 0.0;
    }
    vec4 _996 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _775) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _776) + cbTextureTilingScale._m0[3u].w), _994);
    uvec2 _1029 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_26, int(0u)));
    float _1080;
    if (_863)
    {
        float _1040 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1046 = (_772 * _757) - (_769 * _760);
        float _1049 = (_766 * _760) - (_772 * _754);
        float _1052 = (_769 * _754) - (_766 * _757);
        float _1078 = ((log2((((float(_1029.y) * 0.5) * float(_1029.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1049 * _1049) + (_1052 * _1052)) + (_1046 * _1046)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1040 * gl_WorldRayDirectionEXT.x, _1040 * gl_WorldRayDirectionEXT.y, _1040 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1080 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    }
    else
    {
        _1080 = 0.0;
    }
    vec4 _1083 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].x * _775) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, ((cbMtdParam._m0[20u].y * _776) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), _1080);
    float _1085 = _1083.x;
    float _1098 = dot(vec4(_1085, _1083.yzw), vec4(cbMtdParam._m0[22u].zw, cbMtdParam._m0[23u].x, 0.0));
    float _1114 = ((cbMtdParam._m0[14u].z * (-1.2000000476837158203125)) * (((((1.0 - (_671 * float(texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _238) >> 2u)).x & 255u))) - (_674 * float(texelFetch(l_geomAttrib_0, int(((_297 + 12u) + _345) >> 2u)).x & 255u))) - (_676 * float(texelFetch(l_geomAttrib_0, int(((_404 + 12u) + _452) >> 2u)).x & 255u))) * 2.0) - ((((_1085 - _1098) * cbMtdParam._m0[18u].y) + _1098) * cbMtdParam._m0[18u].x))) + 1.0;
    float _2306 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1115 = isnan(1.0) ? _2306 : (isnan(_2306) ? 1.0 : min(_2306, 1.0));
    float _1122 = (_1115 * ((_996.x * cbMtdParam._m0[12u].x) - _924)) + _924;
    float _1123 = (_1115 * ((_996.y * cbMtdParam._m0[12u].y) - _925)) + _925;
    float _1124 = (_1115 * ((_996.z * cbMtdParam._m0[12u].z) - _926)) + _926;
    uvec2 _1142 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_22, int(0u)));
    float _1193;
    if (_863)
    {
        float _1153 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1159 = (_772 * _757) - (_769 * _760);
        float _1162 = (_766 * _760) - (_772 * _754);
        float _1165 = (_769 * _754) - (_766 * _757);
        float _1191 = ((log2((((float(_1142.y) * 0.5) * float(_1142.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1162 * _1162) + (_1165 * _1165)) + (_1159 * _1159)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1153 * gl_WorldRayDirectionEXT.x, _1153 * gl_WorldRayDirectionEXT.y, _1153 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1193 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    }
    else
    {
        _1193 = 0.0;
    }
    vec4 _1195 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _775) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _776) + cbTextureTilingScale._m0[7u].w), _1193);
    float _1203 = ((_1122 * 4.55000019073486328125) * cbMtdParam._m0[13u].x) * _1195.x;
    float _1206 = ((_1123 * 4.55000019073486328125) * cbMtdParam._m0[13u].y) * _1195.y;
    float _1209 = ((_1124 * 4.55000019073486328125) * cbMtdParam._m0[13u].z) * _1195.z;
    uvec2 _1224 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_0, int(0u)));
    float _1275;
    if (_863)
    {
        float _1235 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1241 = (_772 * _757) - (_769 * _760);
        float _1244 = (_766 * _760) - (_772 * _754);
        float _1247 = (_769 * _754) - (_766 * _757);
        float _1273 = ((log2((((float(_1224.y) * 0.5) * float(_1224.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_1244 * _1244) + (_1247 * _1247)) + (_1241 * _1241)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1235 * gl_WorldRayDirectionEXT.x, _1235 * gl_WorldRayDirectionEXT.y, _1235 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1275 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
    }
    else
    {
        _1275 = 0.0;
    }
    float _1285 = ((cbMtdParam._m0[14u].w * (-1.2000000476837158203125)) * (((((1.0 - (_671 * float(texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _238) >> 2u)).x & 255u))) - (_674 * float(texelFetch(l_geomAttrib_0, int(((_297 + 16u) + _345) >> 2u)).x & 255u))) - (_676 * float(texelFetch(l_geomAttrib_0, int(((_404 + 16u) + _452) >> 2u)).x & 255u))) * 2.0) - textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _773) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _774) + cbTextureTilingScale._m0[0u].w), _1275).x)) + 1.0;
    float _2327 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
    float _1286 = isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0));
    float _1288 = cbMtdParam._m0[17u].z * _1286;
    float _1305 = sin(cbMtdParam._m0[19u].x);
    float _1306 = cos(cbMtdParam._m0[19u].x);
    float _1307 = _773 + (-0.5);
    float _1309 = _1307 + cbMtdParam._m0[19u].z;
    float _1310 = _774 + (-0.5);
    float _1311 = _1310 + cbMtdParam._m0[19u].w;
    uvec2 _1331 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_16, int(0u)));
    float _1382;
    if (_863)
    {
        float _1342 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1348 = (_772 * _757) - (_769 * _760);
        float _1351 = (_766 * _760) - (_772 * _754);
        float _1354 = (_769 * _754) - (_766 * _757);
        float _1380 = ((log2((((float(_1331.y) * 0.5) * float(_1331.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_1351 * _1351) + (_1354 * _1354)) + (_1348 * _1348)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1342 * gl_WorldRayDirectionEXT.x, _1342 * gl_WorldRayDirectionEXT.y, _1342 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1382 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
    }
    else
    {
        _1382 = 0.0;
    }
    vec4 _1385 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * (fma(_1311, (-0.0) - _1305, _1309 * _1306) + 0.5)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (fma(_1311, _1306, _1309 * _1305) + 0.5)) + cbTextureTilingScale._m0[6u].w), _1382);
    float _1396 = exp2(log2((1.0 - _1385.w) * cbMtdParam._m0[18u].z) * cbMtdParam._m0[18u].w);
    float _2343 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
    float _1397 = isnan(1.0) ? _2343 : (isnan(_2343) ? 1.0 : min(_2343, 1.0));
    float _1401 = _1397 * ((cbMtdParam._m0[9u].x * _1122) - _1122);
    float _1402 = _1397 * ((cbMtdParam._m0[9u].y * _1123) - _1123);
    float _1403 = _1397 * ((cbMtdParam._m0[9u].z * _1124) - _1124);
    float _1410 = (_1401 + _1122) - (_1288 * _1401);
    float _1411 = (_1402 + _1123) - (_1288 * _1402);
    float _1412 = (_1403 + _1124) - (_1288 * _1403);
    float _1428 = sin(cbMtdParam._m0[16u].x);
    float _1429 = cos(cbMtdParam._m0[16u].x);
    float _1430 = _1307 + cbMtdParam._m0[20u].z;
    float _1431 = _1310 + cbMtdParam._m0[20u].w;
    uvec2 _1450 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_1, int(0u)));
    float _1501;
    if (_863)
    {
        float _1461 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1467 = (_772 * _757) - (_769 * _760);
        float _1470 = (_766 * _760) - (_772 * _754);
        float _1473 = (_769 * _754) - (_766 * _757);
        float _1499 = ((log2((((float(_1450.y) * 0.5) * float(_1450.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_1470 * _1470) + (_1473 * _1473)) + (_1467 * _1467)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1461 * gl_WorldRayDirectionEXT.x, _1461 * gl_WorldRayDirectionEXT.y, _1461 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1501 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
    }
    else
    {
        _1501 = 0.0;
    }
    vec4 _1503 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (fma(_1431, (-0.0) - _1428, _1430 * _1429) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_1431, _1429, _1430 * _1428) + 0.5)) + cbTextureTilingScale._m0[1u].w), _1501);
    float _1513 = exp2(log2((1.0 - _1503.w) * cbMtdParam._m0[17u].y) * cbMtdParam._m0[16u].w);
    float _2359 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1514 = isnan(1.0) ? _2359 : (isnan(_2359) ? 1.0 : min(_2359, 1.0));
    float _1533 = (((_1410 - _1203) + ((((cbMtdParam._m0[10u].x * _1122) - _1410) * _1286) * _1514)) * (isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0)))) + _1203;
    float _1534 = (((_1411 - _1206) + ((((cbMtdParam._m0[10u].y * _1123) - _1411) * _1286) * _1514)) * (isnan(1.0) ? _2269 : (isnan(_2269) ? 1.0 : min(_2269, 1.0)))) + _1206;
    float _1535 = (((_1412 - _1209) + ((((cbMtdParam._m0[10u].z * _1124) - _1412) * _1286) * _1514)) * (isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0)))) + _1209;
    uvec2 _1547 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_12, int(0u)));
    float _1598;
    if (_863)
    {
        float _1558 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1564 = (_772 * _757) - (_769 * _760);
        float _1567 = (_766 * _760) - (_772 * _754);
        float _1570 = (_769 * _754) - (_766 * _757);
        float _1596 = ((log2((((float(_1547.y) * 0.5) * float(_1547.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1567 * _1567) + (_1570 * _1570)) + (_1564 * _1564)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1558 * gl_WorldRayDirectionEXT.x, _1558 * gl_WorldRayDirectionEXT.y, _1558 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1598 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
    }
    else
    {
        _1598 = 0.0;
    }
    vec4 _1600 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _775) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _776) + cbTextureTilingScale._m0[2u].w), _1598);
    uvec2 _1616 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_14, int(0u)));
    float _1667;
    if (_863)
    {
        float _1627 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1633 = (_772 * _757) - (_769 * _760);
        float _1636 = (_766 * _760) - (_772 * _754);
        float _1639 = (_769 * _754) - (_766 * _757);
        float _1665 = ((log2((((float(_1616.y) * 0.5) * float(_1616.x)) * abs((_719 * _713) - (_718 * _715))) / (sqrt(((_1636 * _1636) + (_1639 * _1639)) + (_1633 * _1633)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1627 * gl_WorldRayDirectionEXT.x, _1627 * gl_WorldRayDirectionEXT.y, _1627 * gl_WorldRayDirectionEXT.z), vec3(_787, _789, _790))));
        _1667 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
    }
    else
    {
        _1667 = 0.0;
    }
    vec4 _1669 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _773) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _774) + cbTextureTilingScale._m0[4u].w), _1667);
    float _1671 = _1669.x;
    float _1672 = _1669.y;
    float _1673 = _1669.z;
    float _1682 = ((_1600.z - _1673) * _1115) + _1673;
    float _1685 = ((((_1600.x - _1671) * _1115) + _1671) * 2.0) + (-1.0);
    float _1687 = ((((_1600.y - _1672) * _1115) + _1672) * 2.0) + (-1.0);
    float _1688 = dot(vec2(_1685, _1687), vec2(_1685, _1687));
    float _2380 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
    float _1693 = sqrt(1.0 - (isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0))));
    uvec2 _1705 = uvec2(textureSize(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_3, int(0u)));
    float _1709 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1710 = _1709 * gl_WorldRayDirectionEXT.x;
    float _1711 = _1709 * gl_WorldRayDirectionEXT.y;
    float _1712 = _1709 * gl_WorldRayDirectionEXT.z;
    float _1756;
    if (_863)
    {
        float _1722 = (_772 * _757) - (_769 * _760);
        float _1725 = (_766 * _760) - (_772 * _754);
        float _1728 = (_769 * _754) - (_766 * _757);
        float _1754 = ((log2((((float(_1705.y) * 0.5) * float(_1705.x)) * abs((_727 * _722) - (_726 * _723))) / (sqrt(((_1725 * _1725) + (_1728 * _1728)) + (_1722 * _1722)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1710, _1711, _1712), vec3(_787, _789, _790))));
        _1756 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
    }
    else
    {
        _1756 = 0.0;
    }
    vec4 _1758 = textureLod(sampler2D(M_Cutscene_MS_MB_M0_Displacement_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _775) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _776) + cbTextureTilingScale._m0[9u].w), _1756);
    float _1774 = (((_1758.z - _1682) * _689) * cbMtdParam._m0[15u].z) + _1682;
    float _1782 = ((_1385.z - _1774) * cbMtdParam._m0[15u].x) + _1774;
    float _1792 = cbMtdParam._m0[19u].y - (cbMtdParam._m0[19u].y * _1286);
    float _1798 = cbMtdParam._m0[17u].x * _1286;
    float _1805 = ((((((_1758.x * 2.0) + (-1.0)) * _689) * cbMtdParam._m0[15u].y) + _1685) + (_1792 * ((_1385.x * 2.0) + (-1.0)))) + (_1798 * ((_1503.x * 2.0) + (-1.0)));
    float _1806 = ((((((((float((_385 >> 8u) & 255u) * hit._m0.x) + (float((_278 >> 8u) & 255u) * _629)) + (float((_492 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * ((_1758.y * 2.0) + (-1.0))) * cbMtdParam._m0[15u].y) + _1687) + (_1792 * ((_1385.y * 2.0) + (-1.0)))) + (_1798 * ((_1503.y * 2.0) + (-1.0)));
    float _1809 = fma(_1693, _787, fma(_1806, _803, (_822 * _816) * _1805));
    float _1812 = fma(_1693, _789, fma(_1806, _804, (_822 * _817) * _1805));
    float _1815 = fma(_1693, _790, fma(_1806, _805, (_822 * _818) * _1805));
    float _1819 = inversesqrt(dot(vec3(_1809, _1812, _1815), vec3(_1809, _1812, _1815)));
    float _1820 = _1819 * _1809;
    float _1821 = _1819 * _1812;
    float _1822 = _1819 * _1815;
    float _1834 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1835 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1836 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1837 = (-0.0) - _1710;
    float _1838 = (-0.0) - _1711;
    float _1839 = (-0.0) - _1712;
    float _1845 = float(gl_LaunchIDEXT.x);
    float _1846 = float(gl_LaunchIDEXT.y);
    float _1849 = float(gl_LaunchSizeEXT.x);
    float _1863 = fract(fract(sin(dot(vec2(_1845 / _1849, _1846 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1876 = fract(fract(sin(dot(vec2((_1845 + 128.0) / _1849, (_1846 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1886 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1887 = _1886.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1887, _1886.w, _1887, vec3(_1834, _1835, _1836), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1995;
    float _1996;
    float _1997;
    float _1998;
    float _1999;
    float _2000;
    if (_70._m0 == 0u)
    {
        float _1907 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1820, _1821, _1822));
        float _2396 = isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0));
        float _1910 = isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0));
        float _1929 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1782) * 0.949999988079071044921875);
        float _1930 = _1929 * _1929;
        float _1931 = g_sceneCB._m0[4u].x - _1710;
        float _1932 = g_sceneCB._m0[4u].y - _1711;
        float _1933 = g_sceneCB._m0[4u].z - _1712;
        float _1937 = inversesqrt(dot(vec3(_1931, _1932, _1933), vec3(_1931, _1932, _1933)));
        float _1938 = _1937 * _1931;
        float _1939 = _1937 * _1932;
        float _1940 = _1937 * _1933;
        float _1941 = dot(vec3(_1820, _1821, _1822), vec3(g_sceneCB._m0[4u].xyz));
        float _2407 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
        float _1944 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        float _1945 = dot(vec3(_1820, _1821, _1822), vec3(_1837, _1838, _1839));
        float _2418 = isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0));
        float _1948 = isnan(1.0) ? _2418 : (isnan(_2418) ? 1.0 : min(_2418, 1.0));
        float _1949 = dot(vec3(_1820, _1821, _1822), vec3(_1938, _1939, _1940));
        float _2429 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
        float _1952 = isnan(1.0) ? _2429 : (isnan(_2429) ? 1.0 : min(_2429, 1.0));
        float _1953 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1938, _1939, _1940));
        float _2440 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
        float _1957 = _1930 * _1930;
        float _1961 = ((_1952 * _1952) * (_1957 + (-1.0))) + 1.0;
        float _1973 = (exp2(log2(1.0 - (isnan(1.0) ? _2440 : (isnan(_2440) ? 1.0 : min(_2440, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1975 = 1.0 - _1930;
        float _1986 = (0.5 / (((_1948 * ((_1944 * _1975) + _1930)) + 9.9999999392252902907785028219223e-09) + (((_1948 * _1975) + _1930) * _1944))) * _1944;
        float _2451 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
        float _1988 = (isnan(1.0) ? _2451 : (isnan(_2451) ? 1.0 : min(_2451, 1.0))) * (_1957 / ((_1961 * _1961) * 3.141590118408203125));
        _1995 = ((_1533 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1910;
        _1996 = ((_1534 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1910;
        _1997 = ((_1535 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1910;
        _1998 = (_1973 * g_sceneCB._m0[5u].x) * _1988;
        _1999 = (_1973 * g_sceneCB._m0[5u].y) * _1988;
        _2000 = (_1973 * g_sceneCB._m0[5u].z) * _1988;
    }
    else
    {
        _1995 = 0.0;
        _1996 = 0.0;
        _1997 = 0.0;
        _1998 = 0.0;
        _1999 = 0.0;
        _2000 = 0.0;
    }
    bool _2002 = abs(_1821) < 0.89999997615814208984375;
    float _2004 = float(_2002);
    float _2005 = _2002 ? 0.0 : 1.0;
    float _2008 = (_2004 * _1822) - (_2005 * _1821);
    float _2009 = _2005 * _1820;
    float _2011 = (-0.0) - (_1820 * _2004);
    float _2015 = inversesqrt(dot(vec3(_2008, _2009, _2011), vec3(_2008, _2009, _2011)));
    float _2016 = _2008 * _2015;
    float _2017 = _2009 * _2015;
    float _2018 = _2015 * _2011;
    float _2021 = (_2017 * _1822) - (_2018 * _1821);
    float _2024 = (_2018 * _1820) - (_2016 * _1822);
    float _2027 = (_2016 * _1821) - (_2017 * _1820);
    float _2029;
    float _2037;
    float _2028 = 0.0;
    uint _2030 = 0u;
    float _2034;
    bool _2036;
    for (;;)
    {
        _2034 = (float(_2030) + _1863) * 0.03125;
        _2036 = _2030 == 0u;
        float frontier_phi_59_pred;
        if (_2036)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _2171;
            float _2172;
            uint _2174;
            _2171 = 0.0;
            _2172 = 0.5;
            _2174 = _2030;
            float _2038;
            for (;;)
            {
                _2038 = ((_2174 & 1u) != 0u) ? (_2172 + _2171) : _2171;
                uint _2175 = _2174 >> 1u;
                if (_2175 == 0u)
                {
                    break;
                }
                else
                {
                    _2171 = _2038;
                    _2172 *= 0.5;
                    _2174 = _2175;
                }
            }
            frontier_phi_59_pred = _2038;
        }
        _2037 = frontier_phi_59_pred;
        float _2039 = _2037 + _1876;
        float _2043 = sqrt(_2034);
        float _2044 = ((_2039 > 1.0) ? (_2039 + (-1.0)) : _2039) * 6.283185482025146484375;
        float _2047 = cos(_2044) * _2043;
        float _2049 = sin(_2044) * _2043;
        float _2051 = sqrt(1.0 - _2034);
        float _2064 = ((_2051 * _1820) + (_2047 * _2021)) + (_2049 * _2016);
        float _2065 = ((_2051 * _1821) + (_2047 * _2024)) + (_2049 * _2017);
        float _2066 = ((_2051 * _1822) + (_2047 * _2027)) + (_2049 * _2018);
        _69._m0 = 1u;
        uvec4 _2070 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2071 = _2070.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2071, _2070.w, _2071, vec3(_1834, _1835, _1836), 9.9999997473787516355514526367188e-05, vec3(_2064, _2065, _2066), 10000.0, 1);
        float _2077 = dot(vec3(_1820, _1821, _1822), vec3(_2064, _2065, _2066));
        float _2462 = isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0));
        float _2080 = isnan(1.0) ? _2462 : (isnan(_2462) ? 1.0 : min(_2462, 1.0));
        _2029 = ((float(_69._m0 == 0u) * _2080) / (_2080 * 0.3183098733425140380859375)) + _2028;
        uint _2031 = _2030 + 1u;
        if (_2031 == 32u)
        {
            break;
        }
        else
        {
            _2028 = _2029;
            _2030 = _2031;
            continue;
        }
    }
    float _2088 = _2029 * 0.009947183541953563690185546875;
    float _2093 = dot(vec3(_1710, _1711, _1712), vec3(_1820, _1821, _1822)) * 2.0;
    vec4 _2107 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1710 - (_2093 * _1820), _1711 - (_2093 * _1821), _1712 - (_2093 * _1822)), 4.0 - (_1782 * 4.0));
    float _2112 = dot(vec3(_1837, _1838, _1839), vec3(_1820, _1821, _1822));
    float _2473 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    float _2121 = (exp2(log2(1.0 - (isnan(1.0) ? _2473 : (isnan(_2473) ? 1.0 : min(_2473, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2127 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1820, _1821, _1822), 0.0);
    float _2138 = (_1998 + _1995) + (((_2127.x * _1533) + (_2121 * _2107.x)) * _2088);
    float _2142 = (_1999 + _1996) + (((_2127.y * _1534) + (_2121 * _2107.y)) * _2088);
    float _2146 = (_2000 + _1997) + (((_2127.z * _1535) + (_2121 * _2107.z)) * _2088);
    float _2484 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2495 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
    float _2506 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
    bool _2154 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2165;
    _2165.x = _2154 ? ((_780 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2484 : (isnan(_2484) ? 1.0 : min(_2484, 1.0)));
    _2165.y = _2154 ? ((_783 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2495 : (isnan(_2495) ? 1.0 : min(_2495, 1.0)));
    _2165.z = _2154 ? ((_786 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2506 : (isnan(_2506) ? 1.0 : min(_2506, 1.0)));
    payload._m0 = _2165;
}


