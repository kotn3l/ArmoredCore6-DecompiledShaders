#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1851;

void main()
{
    float _76 = float(gl_LaunchSizeEXT.y);
    float _106 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _115 = sqrt(((_107 * _107) + (_106 * _106)) + (_108 * _108)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _76)))));
    uvec4 _126 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _127 = _126.y;
    uint _167;
    uint _169;
    uint _170;
    if (_126.x == 0u)
    {
        uint _135 = (_127 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_127 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _161 & 65535u;
            frontier_phi_3_2_ladder_2 = _165;
        }
        else
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _162 >> 16u;
        }
        _167 = frontier_phi_3_2_ladder_1;
        _169 = frontier_phi_3_2_ladder;
        _170 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    bool _179 = _126.w == 0u;
    bool _180 = _177 || _179;
    uint _181 = _175 * _167;
    uint _182 = _181 + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 16u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 20u;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((_209 + _181) >> 2u));
    uint _218 = _217.x;
    bool _232 = _176 == 0u;
    uint _233;
    if (_232)
    {
        _233 = _209 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_179)
        {
            frontier_phi_9_10_ladder = _209 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _209 + 12u;
        }
        _233 = frontier_phi_9_10_ladder;
    }
    uint _237 = _177 ? (_233 + 4u) : _233;
    uint _246 = ((_181 + 8u) + _237) >> 2u;
    uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
    uint _253 = _252.x;
    uint _254 = _252.y;
    float _258 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_253) >> int(16u))));
    float _263 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_254) >> int(16u))));
    uvec4 _268 = texelFetch(l_geomAttrib_0, int(((_181 + 16u) + _237) >> 2u));
    uint _269 = _268.x;
    uint _275 = _175 * _169;
    uint _276 = _275 + 12u;
    uint _297;
    uint _298;
    uint _299;
    uint _300;
    if (_180)
    {
        uvec4 _278 = texelFetch(l_geomAttrib_0, int(_276 >> 2u));
        uint _279 = _278.x;
        _297 = _279 & 255u;
        _298 = (_279 >> 8u) & 255u;
        _299 = (_279 >> 16u) & 255u;
        _300 = 16u;
    }
    else
    {
        uint _285 = _276 >> 2u;
        uvec2 _291 = uvec2(texelFetch(l_geomAttrib_0, int(_285)).x, texelFetch(l_geomAttrib_0, int(_285 + 1u)).x);
        uint _292 = _291.x;
        _297 = _292 & 65535u;
        _298 = _292 >> 16u;
        _299 = _291.y & 65535u;
        _300 = 20u;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int((_300 + _275) >> 2u));
    uint _307 = _306.x;
    uint _319;
    if (_232)
    {
        _319 = _300 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_179)
        {
            frontier_phi_16_17_ladder = _300 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _300 + 12u;
        }
        _319 = frontier_phi_16_17_ladder;
    }
    uint _323 = _177 ? (_319 + 4u) : _319;
    uint _332 = ((_275 + 8u) + _323) >> 2u;
    uvec2 _338 = uvec2(texelFetch(l_geomAttrib_0, int(_332)).x, texelFetch(l_geomAttrib_0, int(_332 + 1u)).x);
    uint _339 = _338.x;
    uint _340 = _338.y;
    float _344 = float(int(uint(int(_339 << 16u) >> int(16u))));
    float _345 = float(int(uint(int(_339) >> int(16u))));
    float _349 = float(int(uint(int(_340 << 16u) >> int(16u))));
    float _350 = float(int(uint(int(_340) >> int(16u))));
    uvec4 _354 = texelFetch(l_geomAttrib_0, int(((_275 + 16u) + _323) >> 2u));
    uint _355 = _354.x;
    uint _361 = _175 * _170;
    uint _362 = _361 + 12u;
    uint _383;
    uint _384;
    uint _385;
    uint _386;
    if (_180)
    {
        uvec4 _364 = texelFetch(l_geomAttrib_0, int(_362 >> 2u));
        uint _365 = _364.x;
        _383 = _365 & 255u;
        _384 = (_365 >> 8u) & 255u;
        _385 = (_365 >> 16u) & 255u;
        _386 = 16u;
    }
    else
    {
        uint _371 = _362 >> 2u;
        uvec2 _377 = uvec2(texelFetch(l_geomAttrib_0, int(_371)).x, texelFetch(l_geomAttrib_0, int(_371 + 1u)).x);
        uint _378 = _377.x;
        _383 = _378 & 65535u;
        _384 = _378 >> 16u;
        _385 = _377.y & 65535u;
        _386 = 20u;
    }
    uvec4 _392 = texelFetch(l_geomAttrib_0, int((_386 + _361) >> 2u));
    uint _393 = _392.x;
    uint _405;
    if (_232)
    {
        _405 = _386 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_179)
        {
            frontier_phi_23_24_ladder = _386 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _386 + 12u;
        }
        _405 = frontier_phi_23_24_ladder;
    }
    uint _409 = _177 ? (_405 + 4u) : _405;
    uint _418 = ((_361 + 8u) + _409) >> 2u;
    uvec2 _424 = uvec2(texelFetch(l_geomAttrib_0, int(_418)).x, texelFetch(l_geomAttrib_0, int(_418 + 1u)).x);
    uint _425 = _424.x;
    uint _426 = _424.y;
    float _430 = float(int(uint(int(_425 << 16u) >> int(16u))));
    float _431 = float(int(uint(int(_425) >> int(16u))));
    float _435 = float(int(uint(int(_426 << 16u) >> int(16u))));
    float _436 = float(int(uint(int(_426) >> int(16u))));
    uvec4 _440 = texelFetch(l_geomAttrib_0, int(((_361 + 16u) + _409) >> 2u));
    uint _441 = _440.x;
    bool _448 = _126.z == 0u;
    float _484;
    float _485;
    float _486;
    if (_448)
    {
        uint _451 = _167 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _167 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _522;
    float _523;
    float _524;
    if (_448)
    {
        uint _489 = _169 * 3u;
        uvec3 _498 = uvec3(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_489 + 2u)).x);
        _522 = uintBitsToFloat(_498.x);
        _523 = uintBitsToFloat(_498.y);
        _524 = uintBitsToFloat(_498.z);
    }
    else
    {
        uint _506 = _169 * 2u;
        uvec2 _512 = uvec2(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x);
        uint _513 = _512.x;
        _522 = unpackHalf2x16(_513).x;
        _523 = unpackHalf2x16(_513 >> 16u).x;
        _524 = unpackHalf2x16(_512.y).x;
    }
    float _560;
    float _561;
    float _562;
    if (_448)
    {
        uint _527 = _170 * 3u;
        uvec3 _536 = uvec3(texelFetch(l_geomPositionBuffer, int(_527)).x, texelFetch(l_geomPositionBuffer, int(_527 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_527 + 2u)).x);
        _560 = uintBitsToFloat(_536.x);
        _561 = uintBitsToFloat(_536.y);
        _562 = uintBitsToFloat(_536.z);
    }
    else
    {
        uint _544 = _170 * 2u;
        uvec2 _550 = uvec2(texelFetch(l_geomPositionBuffer, int(_544)).x, texelFetch(l_geomPositionBuffer, int(_544 + 1u)).x);
        uint _551 = _550.x;
        _560 = unpackHalf2x16(_551).x;
        _561 = unpackHalf2x16(_551 >> 16u).x;
        _562 = unpackHalf2x16(_550.y).x;
    }
    float _565 = (1.0 - hit._m0.x) - hit._m0.y;
    float _622 = (((float(_355 & 255u) * hit._m0.x) + (float(_269 & 255u) * _565)) + (float(_441 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _625 = (((float((_355 >> 8u) & 255u) * hit._m0.x) + (float((_269 >> 8u) & 255u) * _565)) + (float((_441 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _628 = (_344 - _258) * 0.00048828125;
    float _630 = (_345 - _259) * 0.00048828125;
    float _633 = (_430 - _258) * 0.00048828125;
    float _634 = (_431 - _259) * 0.00048828125;
    float _637 = (_349 - _263) * 0.00048828125;
    float _638 = (_350 - _264) * 0.00048828125;
    float _641 = (_435 - _263) * 0.00048828125;
    float _642 = (_436 - _264) * 0.00048828125;
    float _664 = _522 - _484;
    float _665 = _523 - _485;
    float _666 = _524 - _486;
    float _669 = fma(_666, gl_ObjectToWorldEXT[2u].x, fma(_665, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _664));
    float _672 = fma(_666, gl_ObjectToWorldEXT[2u].y, fma(_665, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _664));
    float _675 = fma(_666, gl_ObjectToWorldEXT[2u].z, fma(_665, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _664));
    float _676 = _560 - _484;
    float _677 = _561 - _485;
    float _678 = _562 - _486;
    float _681 = fma(_678, gl_ObjectToWorldEXT[2u].x, fma(_677, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _676));
    float _684 = fma(_678, gl_ObjectToWorldEXT[2u].y, fma(_677, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _676));
    float _687 = fma(_678, gl_ObjectToWorldEXT[2u].z, fma(_677, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _676));
    float _688 = (((_344 * hit._m0.x) + (_258 * _565)) + (_430 * hit._m0.y)) * 0.00048828125;
    float _689 = (((_345 * hit._m0.x) + (_259 * _565)) + (_431 * hit._m0.y)) * 0.00048828125;
    float _690 = (((_349 * hit._m0.x) + (_263 * _565)) + (_435 * hit._m0.y)) * 0.00048828125;
    float _691 = (((_350 * hit._m0.x) + (_264 * _565)) + (_436 * hit._m0.y)) * 0.00048828125;
    float _695 = (((float(_206) * _565) + (-127.0)) + (float(_297) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _698 = (((float(_207) * _565) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_384) * hit._m0.y);
    float _701 = (((float(_208) * _565) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_385) * hit._m0.y);
    float _702 = _695 * 0.0078740157186985015869140625;
    float _704 = _698 * 0.0078740157186985015869140625;
    float _705 = _701 * 0.0078740157186985015869140625;
    float _718 = ((((float(_218 & 255u) * _565) + (-127.0)) + (float(_307 & 255u) * hit._m0.x)) + (float(_393 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _719 = ((((float((_218 >> 8u) & 255u) * _565) + (-127.0)) + (float((_307 >> 8u) & 255u) * hit._m0.x)) + (float((_393 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _720 = ((((float((_218 >> 16u) & 255u) * _565) + (-127.0)) + (float((_307 >> 16u) & 255u) * hit._m0.x)) + (float((_393 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _721 = ((((float(_218 >> 24u) * _565) + (-127.0)) + (float(_307 >> 24u) * hit._m0.x)) + (float(_393 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _731 = ((_719 * _705) - (_720 * _704)) * _721;
    float _732 = ((_720 * _702) - (_718 * _705)) * _721;
    float _733 = ((_718 * _704) - (_719 * _702)) * _721;
    float _737 = inversesqrt(dot(vec3(_731, _732, _733), vec3(_731, _732, _733)));
    uvec2 _758 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_5, int(0u)));
    bool _763 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _816;
    if (_763)
    {
        float _774 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _780 = (_687 * _672) - (_684 * _675);
        float _783 = (_681 * _675) - (_687 * _669);
        float _786 = (_684 * _669) - (_681 * _672);
        float _813 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_783 * _783) + (_786 * _786)) + (_780 * _780)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_774 * gl_WorldRayDirectionEXT.x, _774 * gl_WorldRayDirectionEXT.y, _774 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _816 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _820 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _688) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _689) + cbTextureTilingScale._m0[5u].w), _816);
    uvec2 _848 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_1, int(0u)));
    float _899;
    if (_763)
    {
        float _859 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _865 = (_687 * _672) - (_684 * _675);
        float _868 = (_681 * _675) - (_687 * _669);
        float _871 = (_684 * _669) - (_681 * _672);
        float _897 = ((log2((((float(_848.y) * 0.5) * float(_848.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_868 * _868) + (_871 * _871)) + (_865 * _865)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_859 * gl_WorldRayDirectionEXT.x, _859 * gl_WorldRayDirectionEXT.y, _859 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _899 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    }
    else
    {
        _899 = 0.0;
    }
    vec4 _901 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _688) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _689) + cbTextureTilingScale._m0[1u].w), _899);
    float _906 = _901.x * cbMtdParam._m0[9u].x;
    float _907 = _901.y * cbMtdParam._m0[9u].y;
    float _908 = _901.z * cbMtdParam._m0[9u].z;
    uvec2 _926 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_2, int(0u)));
    float _977;
    if (_763)
    {
        float _937 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _943 = (_687 * _672) - (_684 * _675);
        float _946 = (_681 * _675) - (_687 * _669);
        float _949 = (_684 * _669) - (_681 * _672);
        float _975 = ((log2((((float(_926.y) * 0.5) * float(_926.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_946 * _946) + (_949 * _949)) + (_943 * _943)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_937 * gl_WorldRayDirectionEXT.x, _937 * gl_WorldRayDirectionEXT.y, _937 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _977 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    }
    else
    {
        _977 = 0.0;
    }
    vec4 _979 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _688) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _689) + cbTextureTilingScale._m0[4u].w), _977);
    uvec2 _1004 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _1055;
    if (_763)
    {
        float _1015 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1021 = (_687 * _672) - (_684 * _675);
        float _1024 = (_681 * _675) - (_687 * _669);
        float _1027 = (_684 * _669) - (_681 * _672);
        float _1053 = ((log2((((float(_1004.y) * 0.5) * float(_1004.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_1024 * _1024) + (_1027 * _1027)) + (_1021 * _1021)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1015 * gl_WorldRayDirectionEXT.x, _1015 * gl_WorldRayDirectionEXT.y, _1015 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _1055 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    }
    else
    {
        _1055 = 0.0;
    }
    vec4 _1057 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _688) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _689) + cbTextureTilingScale._m0[6u].w), _1055);
    uvec2 _1079 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_0, int(0u)));
    float _1130;
    if (_763)
    {
        float _1090 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1096 = (_687 * _672) - (_684 * _675);
        float _1099 = (_681 * _675) - (_687 * _669);
        float _1102 = (_684 * _669) - (_681 * _672);
        float _1128 = ((log2((((float(_1079.y) * 0.5) * float(_1079.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_1099 * _1099) + (_1102 * _1102)) + (_1096 * _1096)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1090 * gl_WorldRayDirectionEXT.x, _1090 * gl_WorldRayDirectionEXT.y, _1090 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _1130 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    }
    else
    {
        _1130 = 0.0;
    }
    float _1137 = (textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbMtdParam._m0[13u].z * _688) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[13u].z * _689) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1130).x + 0.00999999977648258209228515625) * cbMtdParam._m0[13u].x;
    float _1144 = (((((float(texelFetch(l_geomAttrib_0, int((_323 + _275) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_237 + _181) >> 2u)).x >> 24u) * _565)) + (float(texelFetch(l_geomAttrib_0, int((_409 + _361) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[13u].y) + 1.0;
    float _1145 = (_622 - (_1137 * (1.0 - _622))) * _1144;
    float _1146 = (_625 - (_1137 * (1.0 - _625))) * _1144;
    float _1966 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    float _1147 = isnan(1.0) ? _1966 : (isnan(_1966) ? 1.0 : min(_1966, 1.0));
    float _1977 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _1148 = isnan(1.0) ? _1977 : (isnan(_1977) ? 1.0 : min(_1977, 1.0));
    float _1155 = (_1147 * ((_979.x * cbMtdParam._m0[10u].x) - _906)) + _906;
    float _1156 = (_1147 * ((_979.y * cbMtdParam._m0[10u].y) - _907)) + _907;
    float _1157 = (_1147 * ((_979.z * cbMtdParam._m0[10u].z) - _908)) + _908;
    float _1170 = ((cbMtdParam._m0[12u].x * 4.55000019073486328125) * _820.x) * ((((_1057.x * cbMtdParam._m0[11u].x) - _1155) * _1148) + _1155);
    float _1173 = ((cbMtdParam._m0[12u].y * 4.55000019073486328125) * _820.y) * ((((_1057.y * cbMtdParam._m0[11u].y) - _1156) * _1148) + _1156);
    float _1176 = ((cbMtdParam._m0[12u].z * 4.55000019073486328125) * _820.z) * ((((_1057.z * cbMtdParam._m0[11u].z) - _1157) * _1148) + _1157);
    uvec2 _1188 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_13, int(0u)));
    float _1239;
    if (_763)
    {
        float _1199 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1205 = (_687 * _672) - (_684 * _675);
        float _1208 = (_681 * _675) - (_687 * _669);
        float _1211 = (_684 * _669) - (_681 * _672);
        float _1237 = ((log2((((float(_1188.y) * 0.5) * float(_1188.x)) * abs((_642 * _637) - (_641 * _638))) / (sqrt(((_1208 * _1208) + (_1211 * _1211)) + (_1205 * _1205)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1199 * gl_WorldRayDirectionEXT.x, _1199 * gl_WorldRayDirectionEXT.y, _1199 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _1239 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    }
    else
    {
        _1239 = 0.0;
    }
    vec4 _1241 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _690) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _691) + cbTextureTilingScale._m0[2u].w), _1239);
    float _1243 = _1241.x;
    float _1244 = _1241.y;
    float _1245 = _1241.z;
    uvec2 _1257 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_14, int(0u)));
    float _1308;
    if (_763)
    {
        float _1268 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1274 = (_687 * _672) - (_684 * _675);
        float _1277 = (_681 * _675) - (_687 * _669);
        float _1280 = (_684 * _669) - (_681 * _672);
        float _1306 = ((log2((((float(_1257.y) * 0.5) * float(_1257.x)) * abs((_642 * _637) - (_641 * _638))) / (sqrt(((_1277 * _1277) + (_1280 * _1280)) + (_1274 * _1274)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1268 * gl_WorldRayDirectionEXT.x, _1268 * gl_WorldRayDirectionEXT.y, _1268 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _1308 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
    }
    else
    {
        _1308 = 0.0;
    }
    vec4 _1310 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _690) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _691) + cbTextureTilingScale._m0[3u].w), _1308);
    uvec2 _1326 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_8, int(0u)));
    float _1377;
    if (_763)
    {
        float _1337 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1343 = (_687 * _672) - (_684 * _675);
        float _1346 = (_681 * _675) - (_687 * _669);
        float _1349 = (_684 * _669) - (_681 * _672);
        float _1375 = ((log2((((float(_1326.y) * 0.5) * float(_1326.x)) * abs((_642 * _637) - (_641 * _638))) / (sqrt(((_1346 * _1346) + (_1349 * _1349)) + (_1343 * _1343)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1337 * gl_WorldRayDirectionEXT.x, _1337 * gl_WorldRayDirectionEXT.y, _1337 * gl_WorldRayDirectionEXT.z), vec3(_702, _704, _705))));
        _1377 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
    }
    else
    {
        _1377 = 0.0;
    }
    vec4 _1379 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _690) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _691) + cbTextureTilingScale._m0[8u].w), _1377);
    float _1390 = (_1147 * (_1310.x - _1243)) + _1243;
    float _1391 = (_1147 * (_1310.y - _1244)) + _1244;
    float _1392 = (_1147 * (_1310.z - _1245)) + _1245;
    float _1401 = ((_1379.z - _1392) * _1148) + _1392;
    float _1404 = ((((_1379.x - _1390) * _1148) + _1390) * 2.0) + (-1.0);
    float _1406 = ((((_1379.y - _1391) * _1148) + _1391) * 2.0) + (-1.0);
    float _1407 = dot(vec2(_1404, _1406), vec2(_1404, _1406));
    float _2003 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
    float _1412 = sqrt(1.0 - (isnan(1.0) ? _2003 : (isnan(_2003) ? 1.0 : min(_2003, 1.0))));
    uvec2 _1425 = uvec2(textureSize(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_7, int(0u)));
    float _1429 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1430 = _1429 * gl_WorldRayDirectionEXT.x;
    float _1431 = _1429 * gl_WorldRayDirectionEXT.y;
    float _1432 = _1429 * gl_WorldRayDirectionEXT.z;
    float _1476;
    if (_763)
    {
        float _1442 = (_687 * _672) - (_684 * _675);
        float _1445 = (_681 * _675) - (_687 * _669);
        float _1448 = (_684 * _669) - (_681 * _672);
        float _1474 = ((log2((((float(_1425.y) * 0.5) * float(_1425.x)) * abs((_634 * _628) - (_633 * _630))) / (sqrt(((_1445 * _1445) + (_1448 * _1448)) + (_1442 * _1442)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1430, _1431, _1432), vec3(_702, _704, _705))));
        _1476 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    }
    else
    {
        _1476 = 0.0;
    }
    vec4 _1479 = textureLod(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _688) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _689) + cbTextureTilingScale._m0[7u].w), _1476);
    float _1489 = (((_1479.x * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w) + _1404;
    float _1490 = (((_1479.y * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w) + _1406;
    float _1493 = fma(_1412, _702, fma(_1490, _718, (_737 * _731) * _1489));
    float _1496 = fma(_1412, _704, fma(_1490, _719, (_737 * _732) * _1489));
    float _1499 = fma(_1412, _705, fma(_1490, _720, (_737 * _733) * _1489));
    float _1503 = inversesqrt(dot(vec3(_1493, _1496, _1499), vec3(_1493, _1496, _1499)));
    float _1504 = _1503 * _1493;
    float _1505 = _1503 * _1496;
    float _1506 = _1503 * _1499;
    float _1518 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1519 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1520 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1521 = (-0.0) - _1430;
    float _1523 = (-0.0) - _1431;
    float _1524 = (-0.0) - _1432;
    float _1530 = float(gl_LaunchIDEXT.x);
    float _1531 = float(gl_LaunchIDEXT.y);
    float _1534 = float(gl_LaunchSizeEXT.x);
    float _1548 = fract(fract(sin(dot(vec2(_1530 / _1534, _1531 / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1561 = fract(fract(sin(dot(vec2((_1530 + 128.0) / _1534, (_1531 + 128.0) / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _1571 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1572 = _1571.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1572, _1571.w, _1572, vec3(_1518, _1519, _1520), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    if (_68._m0 == 0u)
    {
        float _1592 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1504, _1505, _1506));
        float _2019 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1595 = isnan(1.0) ? _2019 : (isnan(_2019) ? 1.0 : min(_2019, 1.0));
        float _1614 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1401) * 0.949999988079071044921875);
        float _1615 = _1614 * _1614;
        float _1616 = g_sceneCB._m0[4u].x - _1430;
        float _1617 = g_sceneCB._m0[4u].y - _1431;
        float _1618 = g_sceneCB._m0[4u].z - _1432;
        float _1622 = inversesqrt(dot(vec3(_1616, _1617, _1618), vec3(_1616, _1617, _1618)));
        float _1623 = _1622 * _1616;
        float _1624 = _1622 * _1617;
        float _1625 = _1622 * _1618;
        float _1626 = dot(vec3(_1504, _1505, _1506), vec3(g_sceneCB._m0[4u].xyz));
        float _2030 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1629 = isnan(1.0) ? _2030 : (isnan(_2030) ? 1.0 : min(_2030, 1.0));
        float _1630 = dot(vec3(_1504, _1505, _1506), vec3(_1521, _1523, _1524));
        float _2041 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1633 = isnan(1.0) ? _2041 : (isnan(_2041) ? 1.0 : min(_2041, 1.0));
        float _1634 = dot(vec3(_1504, _1505, _1506), vec3(_1623, _1624, _1625));
        float _2052 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1637 = isnan(1.0) ? _2052 : (isnan(_2052) ? 1.0 : min(_2052, 1.0));
        float _1638 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1623, _1624, _1625));
        float _2063 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = _1615 * _1615;
        float _1646 = ((_1637 * _1637) * (_1642 + (-1.0))) + 1.0;
        float _1658 = (exp2(log2(1.0 - (isnan(1.0) ? _2063 : (isnan(_2063) ? 1.0 : min(_2063, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1660 = 1.0 - _1615;
        float _1671 = (0.5 / (((_1633 * ((_1629 * _1660) + _1615)) + 9.9999999392252902907785028219223e-09) + (((_1633 * _1660) + _1615) * _1629))) * _1629;
        float _2074 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1673 = (isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0))) * (_1642 / ((_1646 * _1646) * 3.141590118408203125));
        _1680 = ((_1170 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1595;
        _1681 = ((_1173 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1595;
        _1682 = ((_1176 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1595;
        _1683 = (_1658 * g_sceneCB._m0[5u].x) * _1673;
        _1684 = (_1658 * g_sceneCB._m0[5u].y) * _1673;
        _1685 = (_1658 * g_sceneCB._m0[5u].z) * _1673;
    }
    else
    {
        _1680 = 0.0;
        _1681 = 0.0;
        _1682 = 0.0;
        _1683 = 0.0;
        _1684 = 0.0;
        _1685 = 0.0;
    }
    bool _1687 = abs(_1505) < 0.89999997615814208984375;
    float _1689 = float(_1687);
    float _1690 = _1687 ? 0.0 : 1.0;
    float _1693 = (_1689 * _1506) - (_1690 * _1505);
    float _1694 = _1690 * _1504;
    float _1696 = (-0.0) - (_1504 * _1689);
    float _1700 = inversesqrt(dot(vec3(_1693, _1694, _1696), vec3(_1693, _1694, _1696)));
    float _1701 = _1693 * _1700;
    float _1702 = _1694 * _1700;
    float _1703 = _1700 * _1696;
    float _1706 = (_1702 * _1506) - (_1703 * _1505);
    float _1709 = (_1703 * _1504) - (_1701 * _1506);
    float _1712 = (_1701 * _1505) - (_1702 * _1504);
    float _1714;
    float _1722;
    float _1713 = 0.0;
    uint _1715 = 0u;
    float _1719;
    bool _1721;
    for (;;)
    {
        _1719 = (float(_1715) + _1548) * 0.03125;
        _1721 = _1715 == 0u;
        float frontier_phi_57_pred;
        if (_1721)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1856;
            float _1857;
            uint _1859;
            _1856 = 0.0;
            _1857 = 0.5;
            _1859 = _1715;
            float _1723;
            for (;;)
            {
                _1723 = ((_1859 & 1u) != 0u) ? (_1857 + _1856) : _1856;
                uint _1860 = _1859 >> 1u;
                if (_1860 == 0u)
                {
                    break;
                }
                else
                {
                    _1856 = _1723;
                    _1857 *= 0.5;
                    _1859 = _1860;
                }
            }
            frontier_phi_57_pred = _1723;
        }
        _1722 = frontier_phi_57_pred;
        float _1724 = _1722 + _1561;
        float _1728 = sqrt(_1719);
        float _1729 = ((_1724 > 1.0) ? (_1724 + (-1.0)) : _1724) * 6.283185482025146484375;
        float _1732 = cos(_1729) * _1728;
        float _1734 = sin(_1729) * _1728;
        float _1736 = sqrt(1.0 - _1719);
        float _1749 = ((_1736 * _1504) + (_1732 * _1706)) + (_1734 * _1701);
        float _1750 = ((_1736 * _1505) + (_1732 * _1709)) + (_1734 * _1702);
        float _1751 = ((_1736 * _1506) + (_1732 * _1712)) + (_1734 * _1703);
        _67._m0 = 1u;
        uvec4 _1755 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1756 = _1755.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1756, _1755.w, _1756, vec3(_1518, _1519, _1520), 9.9999997473787516355514526367188e-05, vec3(_1749, _1750, _1751), 10000.0, 1);
        float _1762 = dot(vec3(_1504, _1505, _1506), vec3(_1749, _1750, _1751));
        float _2085 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1765 = isnan(1.0) ? _2085 : (isnan(_2085) ? 1.0 : min(_2085, 1.0));
        _1714 = ((float(_67._m0 == 0u) * _1765) / (_1765 * 0.3183098733425140380859375)) + _1713;
        uint _1716 = _1715 + 1u;
        if (_1716 == 32u)
        {
            break;
        }
        else
        {
            _1713 = _1714;
            _1715 = _1716;
            continue;
        }
    }
    float _1773 = _1714 * 0.009947183541953563690185546875;
    float _1778 = dot(vec3(_1430, _1431, _1432), vec3(_1504, _1505, _1506)) * 2.0;
    vec4 _1792 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1430 - (_1778 * _1504), _1431 - (_1778 * _1505), _1432 - (_1778 * _1506)), 4.0 - (_1401 * 4.0));
    float _1797 = dot(vec3(_1521, _1523, _1524), vec3(_1504, _1505, _1506));
    float _2096 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
    float _1806 = (exp2(log2(1.0 - (isnan(1.0) ? _2096 : (isnan(_2096) ? 1.0 : min(_2096, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1812 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1504, _1505, _1506), 0.0);
    float _1823 = (_1683 + _1680) + (((_1812.x * _1170) + (_1806 * _1792.x)) * _1773);
    float _1827 = (_1684 + _1681) + (((_1812.y * _1173) + (_1806 * _1792.y)) * _1773);
    float _1831 = (_1685 + _1682) + (((_1812.z * _1176) + (_1806 * _1792.z)) * _1773);
    float _2107 = isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0));
    float _2118 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
    float _2129 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
    bool _1839 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1850;
    _1850.x = _1839 ? ((_695 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2107 : (isnan(_2107) ? 1.0 : min(_2107, 1.0)));
    _1850.y = _1839 ? ((_698 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2118 : (isnan(_2118) ? 1.0 : min(_2118, 1.0)));
    _1850.z = _1839 ? ((_701 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2129 : (isnan(_2129) ? 1.0 : min(_2129, 1.0)));
    payload._m0 = _1850;
}


