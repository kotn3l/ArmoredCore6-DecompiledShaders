#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_4;
layout(set = 0, binding = 1) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _984;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _153 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _154 >> 16u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        _159 = frontier_phi_3_2_ladder_2;
        _161 = frontier_phi_3_2_ladder_1;
        _162 = frontier_phi_3_2_ladder;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _166.z;
    bool _169 = _168 != 0u;
    bool _171 = _118.w == 0u;
    bool _172 = _169 || _171;
    uint _173 = _167 * _159;
    uint _174 = _173 + 12u;
    uint _198;
    uint _199;
    uint _200;
    uint _201;
    if (_172)
    {
        uvec4 _177 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _178 = _177.x;
        _198 = _178 & 255u;
        _199 = (_178 >> 8u) & 255u;
        _200 = (_178 >> 16u) & 255u;
        _201 = 16u;
    }
    else
    {
        uint _186 = _174 >> 2u;
        uvec2 _192 = uvec2(texelFetch(l_geomAttrib_0, int(_186)).x, texelFetch(l_geomAttrib_0, int(_186 + 1u)).x);
        uint _193 = _192.x;
        _198 = _193 & 65535u;
        _199 = _193 >> 16u;
        _200 = _192.y & 65535u;
        _201 = 20u;
    }
    uvec4 _209 = texelFetch(l_geomAttrib_0, int((_201 + _173) >> 2u));
    uint _210 = _209.x;
    bool _224 = _168 == 0u;
    uint _225;
    if (_224)
    {
        _225 = _201 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_171)
        {
            frontier_phi_9_10_ladder = _201 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _201 + 12u;
        }
        _225 = frontier_phi_9_10_ladder;
    }
    uvec4 _233 = texelFetch(l_geomAttrib_0, int(((_173 + 4u) + (_169 ? (_225 + 4u) : _225)) >> 2u));
    uint _234 = _233.x;
    uint _240 = _167 * _161;
    uint _241 = _240 + 12u;
    uint _262;
    uint _263;
    uint _264;
    uint _265;
    if (_172)
    {
        uvec4 _243 = texelFetch(l_geomAttrib_0, int(_241 >> 2u));
        uint _244 = _243.x;
        _262 = _244 & 255u;
        _263 = (_244 >> 8u) & 255u;
        _264 = (_244 >> 16u) & 255u;
        _265 = 16u;
    }
    else
    {
        uint _250 = _241 >> 2u;
        uvec2 _256 = uvec2(texelFetch(l_geomAttrib_0, int(_250)).x, texelFetch(l_geomAttrib_0, int(_250 + 1u)).x);
        uint _257 = _256.x;
        _262 = _257 & 65535u;
        _263 = _257 >> 16u;
        _264 = _256.y & 65535u;
        _265 = 20u;
    }
    uvec4 _271 = texelFetch(l_geomAttrib_0, int((_265 + _240) >> 2u));
    uint _272 = _271.x;
    uint _284;
    if (_224)
    {
        _284 = _265 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_171)
        {
            frontier_phi_16_17_ladder = _265 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _265 + 12u;
        }
        _284 = frontier_phi_16_17_ladder;
    }
    uvec4 _292 = texelFetch(l_geomAttrib_0, int(((_240 + 4u) + (_169 ? (_284 + 4u) : _284)) >> 2u));
    uint _293 = _292.x;
    uint _299 = _167 * _162;
    uint _300 = _299 + 12u;
    uint _321;
    uint _322;
    uint _323;
    uint _324;
    if (_172)
    {
        uvec4 _302 = texelFetch(l_geomAttrib_0, int(_300 >> 2u));
        uint _303 = _302.x;
        _321 = _303 & 255u;
        _322 = (_303 >> 8u) & 255u;
        _323 = (_303 >> 16u) & 255u;
        _324 = 16u;
    }
    else
    {
        uint _309 = _300 >> 2u;
        uvec2 _315 = uvec2(texelFetch(l_geomAttrib_0, int(_309)).x, texelFetch(l_geomAttrib_0, int(_309 + 1u)).x);
        uint _316 = _315.x;
        _321 = _316 & 65535u;
        _322 = _316 >> 16u;
        _323 = _315.y & 65535u;
        _324 = 20u;
    }
    uvec4 _330 = texelFetch(l_geomAttrib_0, int((_324 + _299) >> 2u));
    uint _331 = _330.x;
    uint _343;
    if (_224)
    {
        _343 = _324 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_171)
        {
            frontier_phi_23_24_ladder = _324 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _324 + 12u;
        }
        _343 = frontier_phi_23_24_ladder;
    }
    uvec4 _351 = texelFetch(l_geomAttrib_0, int(((_299 + 4u) + (_169 ? (_343 + 4u) : _343)) >> 2u));
    uint _352 = _351.x;
    float _360 = (1.0 - hit._m0.x) - hit._m0.y;
    float _398 = (((float(_198) * _360) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _401 = (((float(_199) * _360) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _404 = (((float(_200) * _360) + (-127.0)) + (float(_264) * hit._m0.x)) + (float(_323) * hit._m0.y);
    float _405 = _398 * 0.0078740157186985015869140625;
    float _407 = _401 * 0.0078740157186985015869140625;
    float _408 = _404 * 0.0078740157186985015869140625;
    float _421 = ((((float(_210 & 255u) * _360) + (-127.0)) + (float(_272 & 255u) * hit._m0.x)) + (float(_331 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _422 = ((((float((_210 >> 8u) & 255u) * _360) + (-127.0)) + (float((_272 >> 8u) & 255u) * hit._m0.x)) + (float((_331 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _423 = ((((float((_210 >> 16u) & 255u) * _360) + (-127.0)) + (float((_272 >> 16u) & 255u) * hit._m0.x)) + (float((_331 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _424 = ((((float(_210 >> 24u) * _360) + (-127.0)) + (float(_272 >> 24u) * hit._m0.x)) + (float(_331 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _434 = ((_422 * _408) - (_423 * _407)) * _424;
    float _435 = ((_423 * _405) - (_421 * _408)) * _424;
    float _436 = ((_421 * _407) - (_422 * _405)) * _424;
    float _440 = inversesqrt(dot(vec3(_434, _435, _436), vec3(_434, _435, _436)));
    float _448 = ((((float(int(uint(int(_293 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_234 << 16u) >> int(16u)))) * _360)) + (float(int(uint(int(_352 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) / cbMtdParam._m0[9u].y;
    float _449 = ((((float(int(uint(int(_293) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_234) >> int(16u)))) * _360)) + (float(int(uint(int(_352) >> int(16u)))) * hit._m0.y)) * 0.00048828125) / cbMtdParam._m0[9u].y;
    bool _464 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _489;
    if (_464)
    {
        float _471 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _479 = log2(0.0);
        float _487 = ((_479 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_471 * gl_WorldRayDirectionEXT.x, _471 * gl_WorldRayDirectionEXT.y, _471 * gl_WorldRayDirectionEXT.z), vec3(_405, _407, _408))));
        _489 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    }
    else
    {
        _489 = 0.0;
    }
    vec4 _494 = textureLod(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_4, SS_ClampLinear), vec2((cbTextureTilingScale._m0[0u].x * _448) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _449) + cbTextureTilingScale._m0[0u].w), _489);
    float _500 = 1.0 / _494.w;
    float _501 = _494.x * _500;
    float _502 = _500 * _494.y;
    float _503 = _500 * _494.z;
    float _536;
    if (_464)
    {
        float _520 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _528 = log2(0.0);
        float _534 = ((_528 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_520 * gl_WorldRayDirectionEXT.x, _520 * gl_WorldRayDirectionEXT.y, _520 * gl_WorldRayDirectionEXT.z), vec3(_405, _407, _408))));
        _536 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    }
    else
    {
        _536 = 0.0;
    }
    float _542 = textureLod(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_0, SS_ClampLinear), vec2((cbTextureTilingScale._m0[1u].x * _448) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _449) + cbTextureTilingScale._m0[1u].w), _536).x * _500;
    float _556 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _557 = _556 * gl_WorldRayDirectionEXT.x;
    float _558 = _556 * gl_WorldRayDirectionEXT.y;
    float _559 = _556 * gl_WorldRayDirectionEXT.z;
    float _575;
    if (_464)
    {
        float _567 = log2(0.0);
        float _573 = ((_567 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_557, _558, _559), vec3(_405, _407, _408))));
        _575 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    }
    else
    {
        _575 = 0.0;
    }
    vec4 _578 = textureLod(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_1, SS_ClampLinear), vec2((cbTextureTilingScale._m0[2u].x * _448) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _449) + cbTextureTilingScale._m0[2u].w), _575);
    float _585 = (_578.x * 2.0) + (-1.0);
    float _587 = (_578.y * 2.0) + (-1.0);
    float _588 = dot(vec2(_585, _587), vec2(_585, _587));
    float _1068 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _593 = sqrt(1.0 - (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0))));
    float _594 = _578.z * _500;
    float _597 = fma(_593, _405, fma(_587, _421, (_440 * _434) * _585));
    float _600 = fma(_593, _407, fma(_587, _422, (_440 * _435) * _585));
    float _603 = fma(_593, _408, fma(_587, _423, (_440 * _436) * _585));
    float _607 = inversesqrt(dot(vec3(_597, _600, _603), vec3(_597, _600, _603)));
    float _608 = _607 * _597;
    float _609 = _607 * _600;
    float _610 = _607 * _603;
    float _622 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _623 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _624 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _625 = (-0.0) - _557;
    float _627 = (-0.0) - _558;
    float _628 = (-0.0) - _559;
    float _634 = float(gl_LaunchIDEXT.x);
    float _635 = float(gl_LaunchIDEXT.y);
    float _638 = float(gl_LaunchSizeEXT.x);
    float _652 = fract(fract(sin(dot(vec2(_634 / _638, _635 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _665 = fract(fract(sin(dot(vec2((_634 + 128.0) / _638, (_635 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _666 = 1.0 - _542;
    float _667 = _666 * _501;
    float _668 = _666 * _502;
    float _669 = _666 * _503;
    float _674 = _542 * (_501 + (-0.039999999105930328369140625));
    float _675 = _542 * (_502 + (-0.039999999105930328369140625));
    float _676 = _542 * (_503 + (-0.039999999105930328369140625));
    float _677 = _674 + 0.039999999105930328369140625;
    float _679 = _675 + 0.039999999105930328369140625;
    float _680 = _676 + 0.039999999105930328369140625;
    _60._m0 = 1u;
    uvec4 _690 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _691 = _690.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _691, _690.w, _691, vec3(_622, _623, _624), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _806;
    float _807;
    float _808;
    float _809;
    float _810;
    float _811;
    if (_60._m0 == 0u)
    {
        float _712 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_608, _609, _610));
        float _1079 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
        float _715 = isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0));
        float _734 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _594) * 0.949999988079071044921875);
        float _735 = _734 * _734;
        float _736 = g_sceneCB._m0[4u].x - _557;
        float _737 = g_sceneCB._m0[4u].y - _558;
        float _738 = g_sceneCB._m0[4u].z - _559;
        float _742 = inversesqrt(dot(vec3(_736, _737, _738), vec3(_736, _737, _738)));
        float _743 = _742 * _736;
        float _744 = _742 * _737;
        float _745 = _742 * _738;
        float _746 = dot(vec3(_608, _609, _610), vec3(g_sceneCB._m0[4u].xyz));
        float _1090 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        float _749 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
        float _750 = dot(vec3(_608, _609, _610), vec3(_625, _627, _628));
        float _1101 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        float _753 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
        float _754 = dot(vec3(_608, _609, _610), vec3(_743, _744, _745));
        float _1112 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
        float _757 = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
        float _758 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_743, _744, _745));
        float _1123 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
        float _762 = _735 * _735;
        float _766 = ((_757 * _757) * (_762 + (-1.0))) + 1.0;
        float _775 = exp2(log2(1.0 - (isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0)))) * 5.0);
        float _786 = 1.0 - _735;
        float _797 = (0.5 / (((_753 * ((_749 * _786) + _735)) + 9.9999999392252902907785028219223e-09) + (((_753 * _786) + _735) * _749))) * _749;
        float _1134 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
        float _799 = (isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0))) * (_762 / ((_766 * _766) * 3.141590118408203125));
        _806 = ((_667 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _715;
        _807 = ((_668 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _715;
        _808 = ((_669 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _715;
        _809 = (((_775 * (0.959999978542327880859375 - _674)) + _677) * g_sceneCB._m0[5u].x) * _799;
        _810 = (((_775 * (0.959999978542327880859375 - _675)) + _679) * g_sceneCB._m0[5u].y) * _799;
        _811 = (((_775 * (0.959999978542327880859375 - _676)) + _680) * g_sceneCB._m0[5u].z) * _799;
    }
    else
    {
        _806 = 0.0;
        _807 = 0.0;
        _808 = 0.0;
        _809 = 0.0;
        _810 = 0.0;
        _811 = 0.0;
    }
    bool _813 = abs(_609) < 0.89999997615814208984375;
    float _815 = float(_813);
    float _816 = _813 ? 0.0 : 1.0;
    float _819 = (_815 * _610) - (_816 * _609);
    float _820 = _816 * _608;
    float _822 = (-0.0) - (_608 * _815);
    float _826 = inversesqrt(dot(vec3(_819, _820, _822), vec3(_819, _820, _822)));
    float _827 = _819 * _826;
    float _828 = _820 * _826;
    float _829 = _826 * _822;
    float _832 = (_828 * _610) - (_829 * _609);
    float _835 = (_829 * _608) - (_827 * _610);
    float _838 = (_827 * _609) - (_828 * _608);
    float _840;
    float _848;
    float _839 = 0.0;
    uint _841 = 0u;
    float _845;
    bool _847;
    for (;;)
    {
        _845 = (float(_841) + _652) * 0.03125;
        _847 = _841 == 0u;
        float frontier_phi_36_pred;
        if (_847)
        {
            frontier_phi_36_pred = 0.0;
        }
        else
        {
            float _989;
            float _990;
            uint _992;
            _989 = 0.0;
            _990 = 0.5;
            _992 = _841;
            float _849;
            for (;;)
            {
                _849 = ((_992 & 1u) != 0u) ? (_990 + _989) : _989;
                uint _993 = _992 >> 1u;
                if (_993 == 0u)
                {
                    break;
                }
                else
                {
                    _989 = _849;
                    _990 *= 0.5;
                    _992 = _993;
                }
            }
            frontier_phi_36_pred = _849;
        }
        _848 = frontier_phi_36_pred;
        float _850 = _848 + _665;
        float _854 = sqrt(_845);
        float _855 = ((_850 > 1.0) ? (_850 + (-1.0)) : _850) * 6.283185482025146484375;
        float _858 = cos(_855) * _854;
        float _860 = sin(_855) * _854;
        float _862 = sqrt(1.0 - _845);
        float _875 = ((_862 * _608) + (_858 * _832)) + (_860 * _827);
        float _876 = ((_862 * _609) + (_858 * _835)) + (_860 * _828);
        float _877 = ((_862 * _610) + (_858 * _838)) + (_860 * _829);
        _59._m0 = 1u;
        uvec4 _881 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _882 = _881.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _882, _881.w, _882, vec3(_622, _623, _624), 9.9999997473787516355514526367188e-05, vec3(_875, _876, _877), 10000.0, 1);
        float _888 = dot(vec3(_608, _609, _610), vec3(_875, _876, _877));
        float _1145 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _891 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        _840 = ((float(_59._m0 == 0u) * _891) / (_891 * 0.3183098733425140380859375)) + _839;
        uint _842 = _841 + 1u;
        if (_842 == 32u)
        {
            break;
        }
        else
        {
            _839 = _840;
            _841 = _842;
            continue;
        }
    }
    float _899 = _840 * 0.009947183541953563690185546875;
    float _904 = dot(vec3(_557, _558, _559), vec3(_608, _609, _610)) * 2.0;
    vec4 _918 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_557 - (_904 * _608), _558 - (_904 * _609), _559 - (_904 * _610)), 4.0 - (_594 * 4.0));
    float _923 = dot(vec3(_625, _627, _628), vec3(_608, _609, _610));
    float _1156 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _933 = exp2(log2(1.0 - (isnan(1.0) ? _1156 : (isnan(_1156) ? 1.0 : min(_1156, 1.0)))) * 5.0);
    vec4 _945 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_608, _609, _610), 0.0);
    float _956 = (_809 + _806) + (((_945.x * _667) + (((_933 * (0.959999978542327880859375 - _674)) + _677) * _918.x)) * _899);
    float _960 = (_810 + _807) + (((_945.y * _668) + (((_933 * (0.959999978542327880859375 - _675)) + _679) * _918.y)) * _899);
    float _964 = (_811 + _808) + (((_945.z * _669) + (((_933 * (0.959999978542327880859375 - _676)) + _680) * _918.z)) * _899);
    float _1167 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _1178 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _1189 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    bool _972 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _983;
    _983.x = _972 ? ((_398 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1167 : (isnan(_1167) ? 1.0 : min(_1167, 1.0)));
    _983.y = _972 ? ((_401 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1178 : (isnan(_1178) ? 1.0 : min(_1178, 1.0)));
    _983.z = _972 ? ((_404 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1189 : (isnan(_1189) ? 1.0 : min(_1189, 1.0)));
    payload._m0 = _983;
}


