#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Coral_halation_Low_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Coral_halation_Low_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _993;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _167;
    uint _169;
    uint _170;
    if (_127.x == 0u)
    {
        uint _135 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_128 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _161 & 65535u;
            frontier_phi_3_2_ladder_2 = _164;
        }
        else
        {
            frontier_phi_3_2_ladder = _162 >> 16u;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _165;
        }
        _167 = frontier_phi_3_2_ladder_1;
        _169 = frontier_phi_3_2_ladder_2;
        _170 = frontier_phi_3_2_ladder;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    bool _179 = _127.w == 0u;
    bool _180 = _177 || _179;
    uint _182 = (_175 * _167) + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 20u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 24u;
    }
    bool _215 = _176 == 0u;
    uint _216;
    if (_215)
    {
        _216 = _209;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_179)
        {
            frontier_phi_9_10_ladder = _209 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _209 + 8u;
        }
        _216 = frontier_phi_9_10_ladder;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((((_175 * _167) + 4u) + (_177 ? (_216 + 4u) : _216)) >> 2u));
    uint _228 = _227.x;
    float _232 = float(int(uint(int(_228 << 16u) >> int(16u))));
    float _233 = float(int(uint(int(_228) >> int(16u))));
    uint _235 = (_175 * _169) + 12u;
    uint _256;
    uint _257;
    uint _258;
    uint _259;
    if (_180)
    {
        uvec4 _237 = texelFetch(l_geomAttrib_0, int(_235 >> 2u));
        uint _238 = _237.x;
        _256 = _238 & 255u;
        _257 = (_238 >> 8u) & 255u;
        _258 = (_238 >> 16u) & 255u;
        _259 = 20u;
    }
    else
    {
        uint _244 = _235 >> 2u;
        uvec2 _250 = uvec2(texelFetch(l_geomAttrib_0, int(_244)).x, texelFetch(l_geomAttrib_0, int(_244 + 1u)).x);
        uint _251 = _250.x;
        _256 = _251 & 65535u;
        _257 = _251 >> 16u;
        _258 = _250.y & 65535u;
        _259 = 24u;
    }
    uint _263;
    if (_215)
    {
        _263 = _259;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_179)
        {
            frontier_phi_16_17_ladder = _259 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _259 + 8u;
        }
        _263 = frontier_phi_16_17_ladder;
    }
    uvec4 _272 = texelFetch(l_geomAttrib_0, int((((_175 * _169) + 4u) + (_177 ? (_263 + 4u) : _263)) >> 2u));
    uint _273 = _272.x;
    float _277 = float(int(uint(int(_273 << 16u) >> int(16u))));
    float _278 = float(int(uint(int(_273) >> int(16u))));
    uint _280 = (_175 * _170) + 12u;
    uint _301;
    uint _302;
    uint _303;
    uint _304;
    if (_180)
    {
        uvec4 _282 = texelFetch(l_geomAttrib_0, int(_280 >> 2u));
        uint _283 = _282.x;
        _301 = _283 & 255u;
        _302 = (_283 >> 8u) & 255u;
        _303 = (_283 >> 16u) & 255u;
        _304 = 20u;
    }
    else
    {
        uint _289 = _280 >> 2u;
        uvec2 _295 = uvec2(texelFetch(l_geomAttrib_0, int(_289)).x, texelFetch(l_geomAttrib_0, int(_289 + 1u)).x);
        uint _296 = _295.x;
        _301 = _296 & 65535u;
        _302 = _296 >> 16u;
        _303 = _295.y & 65535u;
        _304 = 24u;
    }
    uint _308;
    if (_215)
    {
        _308 = _304;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_179)
        {
            frontier_phi_23_24_ladder = _304 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _304 + 8u;
        }
        _308 = frontier_phi_23_24_ladder;
    }
    uvec4 _317 = texelFetch(l_geomAttrib_0, int((((_175 * _170) + 4u) + (_177 ? (_308 + 4u) : _308)) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    bool _325 = _127.z == 0u;
    float _361;
    float _362;
    float _363;
    if (_325)
    {
        uint _328 = _167 * 3u;
        uvec3 _337 = uvec3(texelFetch(l_geomPositionBuffer, int(_328)).x, texelFetch(l_geomPositionBuffer, int(_328 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_328 + 2u)).x);
        _361 = uintBitsToFloat(_337.x);
        _362 = uintBitsToFloat(_337.y);
        _363 = uintBitsToFloat(_337.z);
    }
    else
    {
        uint _345 = _167 * 2u;
        uvec2 _351 = uvec2(texelFetch(l_geomPositionBuffer, int(_345)).x, texelFetch(l_geomPositionBuffer, int(_345 + 1u)).x);
        uint _352 = _351.x;
        _361 = unpackHalf2x16(_352).x;
        _362 = unpackHalf2x16(_352 >> 16u).x;
        _363 = unpackHalf2x16(_351.y).x;
    }
    float _399;
    float _400;
    float _401;
    if (_325)
    {
        uint _366 = _169 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _169 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_325)
    {
        uint _404 = _170 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _170 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _442 = (1.0 - hit._m0.x) - hit._m0.y;
    float _483 = _399 - _361;
    float _484 = _400 - _362;
    float _485 = _401 - _363;
    float _488 = fma(_485, gl_ObjectToWorldEXT[2u].x, fma(_484, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _483));
    float _491 = fma(_485, gl_ObjectToWorldEXT[2u].y, fma(_484, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _483));
    float _494 = fma(_485, gl_ObjectToWorldEXT[2u].z, fma(_484, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _483));
    float _495 = _437 - _361;
    float _496 = _438 - _362;
    float _497 = _439 - _363;
    float _500 = fma(_497, gl_ObjectToWorldEXT[2u].x, fma(_496, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _495));
    float _503 = fma(_497, gl_ObjectToWorldEXT[2u].y, fma(_496, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _495));
    float _506 = fma(_497, gl_ObjectToWorldEXT[2u].z, fma(_496, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _495));
    float _507 = (((_277 * hit._m0.x) + (_232 * _442)) + (_322 * hit._m0.y)) * 0.00048828125;
    float _509 = (((_278 * hit._m0.x) + (_233 * _442)) + (_323 * hit._m0.y)) * 0.00048828125;
    float _513 = (((float(_206) * _442) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _516 = (((float(_207) * _442) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _519 = (((float(_208) * _442) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _520 = _513 * 0.0078740157186985015869140625;
    float _522 = _516 * 0.0078740157186985015869140625;
    float _523 = _519 * 0.0078740157186985015869140625;
    float _541 = (cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x) + _507;
    float _542 = (cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + _509;
    uvec2 _562 = uvec2(textureSize(M_Coral_halation_Low_snp_0_Texture2D_2, int(0u)));
    float _571 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _572 = _571 * gl_WorldRayDirectionEXT.x;
    float _573 = _571 * gl_WorldRayDirectionEXT.y;
    float _574 = _571 * gl_WorldRayDirectionEXT.z;
    float _626;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _588 = (_506 * _491) - (_503 * _494);
        float _591 = (_500 * _494) - (_506 * _488);
        float _594 = (_503 * _488) - (_500 * _491);
        float _623 = ((log2((((float(_562.y) * 0.5) * float(_562.x)) * abs((((_323 - _233) * (_277 - _232)) - ((_322 - _232) * (_278 - _233))) * 2.384185791015625e-07)) / (sqrt(((_591 * _591) + (_594 * _594)) + (_588 * _588)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))))) / abs(dot(vec3(_572, _573, _574), vec3(_520, _522, _523))));
        _626 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    }
    else
    {
        _626 = 0.0;
    }
    vec4 _630 = textureLod(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + _507)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + _509)) + cbTextureTilingScale._m0[1u].w), _626);
    float _635 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[10u].z;
    float _641 = ((_630.y * 0.5) + (-0.25)) * cbMtdParam._m0[10u].y;
    float _643 = (-0.0) - (cbMtdParam._m0[10u].y * ((_630.x * 0.5) + (-0.25)));
    float _645 = fract(_635);
    float _647 = fract(_635 + 0.5);
    float _659 = abs((_645 * 2.0) + (-1.0));
    vec4 _677 = textureLod(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_645 * _643) + _541) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_641 * _645) + _542) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _679 = _677.x;
    float _680 = _677.y;
    float _681 = _677.z;
    vec4 _682 = textureLod(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_647 * _643) + _541) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_641 * _647) + _542) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _705 = inversesqrt(dot(vec3(_520, _522, _523), vec3(_520, _522, _523)));
    float _706 = _705 * _520;
    float _707 = _705 * _522;
    float _708 = _705 * _523;
    float _720 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _721 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _722 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _723 = (-0.0) - _572;
    float _724 = (-0.0) - _573;
    float _725 = (-0.0) - _574;
    float _731 = float(gl_LaunchIDEXT.x);
    float _732 = float(gl_LaunchIDEXT.y);
    float _735 = float(gl_LaunchSizeEXT.x);
    float _749 = fract(fract(sin(dot(vec2(_731 / _735, _732 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _762 = fract(fract(sin(dot(vec2((_731 + 128.0) / _735, (_732 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _65._m0 = 1u;
    uvec4 _772 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _773 = _772.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _773, _772.w, _773, vec3(_720, _721, _722), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _839;
    float _840;
    float _841;
    if (_65._m0 == 0u)
    {
        float _794 = g_sceneCB._m0[4u].x - _572;
        float _795 = g_sceneCB._m0[4u].y - _573;
        float _796 = g_sceneCB._m0[4u].z - _574;
        float _800 = inversesqrt(dot(vec3(_794, _795, _796), vec3(_794, _795, _796)));
        float _804 = dot(vec3(_706, _707, _708), vec3(g_sceneCB._m0[4u].xyz));
        float _1072 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
        float _807 = isnan(1.0) ? _1072 : (isnan(_1072) ? 1.0 : min(_1072, 1.0));
        float _808 = dot(vec3(_706, _707, _708), vec3(_723, _724, _725));
        float _1083 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
        float _812 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_794 * _800, _795 * _800, _796 * _800));
        float _1094 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
        float _823 = (exp2(log2(1.0 - (isnan(1.0) ? _1094 : (isnan(_1094) ? 1.0 : min(_1094, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _829 = (0.5 / ((_807 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1083 : (isnan(_1083) ? 1.0 : min(_1083, 1.0))))) * _807;
        float _1105 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
        float _831 = (isnan(1.0) ? _1105 : (isnan(_1105) ? 1.0 : min(_1105, 1.0))) * 0.31831014156341552734375;
        _839 = (_823 * g_sceneCB._m0[5u].x) * _831;
        _840 = (_823 * g_sceneCB._m0[5u].y) * _831;
        _841 = (_823 * g_sceneCB._m0[5u].z) * _831;
    }
    else
    {
        _839 = 0.0;
        _840 = 0.0;
        _841 = 0.0;
    }
    bool _843 = abs(_707) < 0.89999997615814208984375;
    float _845 = float(_843);
    float _846 = _843 ? 0.0 : 1.0;
    float _849 = (_845 * _708) - (_846 * _707);
    float _850 = _846 * _706;
    float _852 = (-0.0) - (_706 * _845);
    float _856 = inversesqrt(dot(vec3(_849, _850, _852), vec3(_849, _850, _852)));
    float _857 = _849 * _856;
    float _858 = _850 * _856;
    float _859 = _856 * _852;
    float _862 = (_858 * _708) - (_859 * _707);
    float _865 = (_859 * _706) - (_857 * _708);
    float _868 = (_857 * _707) - (_858 * _706);
    float _870;
    float _878;
    float _869 = 0.0;
    uint _871 = 0u;
    float _875;
    bool _877;
    for (;;)
    {
        _875 = (float(_871) + _749) * 0.03125;
        _877 = _871 == 0u;
        float frontier_phi_41_pred;
        if (_877)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _998;
            float _999;
            uint _1001;
            _998 = 0.0;
            _999 = 0.5;
            _1001 = _871;
            float _879;
            for (;;)
            {
                _879 = ((_1001 & 1u) != 0u) ? (_999 + _998) : _998;
                uint _1002 = _1001 >> 1u;
                if (_1002 == 0u)
                {
                    break;
                }
                else
                {
                    _998 = _879;
                    _999 *= 0.5;
                    _1001 = _1002;
                }
            }
            frontier_phi_41_pred = _879;
        }
        _878 = frontier_phi_41_pred;
        float _880 = _878 + _762;
        float _884 = sqrt(_875);
        float _885 = ((_880 > 1.0) ? (_880 + (-1.0)) : _880) * 6.283185482025146484375;
        float _888 = cos(_885) * _884;
        float _890 = sin(_885) * _884;
        float _892 = sqrt(1.0 - _875);
        float _905 = ((_892 * _706) + (_888 * _862)) + (_890 * _857);
        float _906 = ((_892 * _707) + (_888 * _865)) + (_890 * _858);
        float _907 = ((_892 * _708) + (_888 * _868)) + (_890 * _859);
        _64._m0 = 1u;
        uvec4 _911 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _912 = _911.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _912, _911.w, _912, vec3(_720, _721, _722), 9.9999997473787516355514526367188e-05, vec3(_905, _906, _907), 10000.0, 1);
        float _918 = dot(vec3(_706, _707, _708), vec3(_905, _906, _907));
        float _1116 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
        float _921 = isnan(1.0) ? _1116 : (isnan(_1116) ? 1.0 : min(_1116, 1.0));
        _870 = ((float(_64._m0 == 0u) * _921) / (_921 * 0.3183098733425140380859375)) + _869;
        uint _872 = _871 + 1u;
        if (_872 == 32u)
        {
            break;
        }
        else
        {
            _869 = _870;
            _871 = _872;
            continue;
        }
    }
    float _930 = _870 * 0.009947183541953563690185546875;
    float _935 = dot(vec3(_572, _573, _574), vec3(_706, _707, _708)) * 2.0;
    vec4 _947 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_572 - (_935 * _706), _573 - (_935 * _707), _574 - (_935 * _708)), 4.0);
    float _952 = dot(vec3(_723, _724, _725), vec3(_706, _707, _708));
    float _1127 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _961 = (exp2(log2(1.0 - (isnan(1.0) ? _1127 : (isnan(_1127) ? 1.0 : min(_1127, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _969 = (_839 + ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * (((_682.x - _679) * _659) + _679))) + ((_947.x * _930) * _961);
    float _971 = (_840 + ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * (((_682.y - _680) * _659) + _680))) + ((_947.y * _930) * _961);
    float _973 = (_841 + ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * (((_682.z - _681) * _659) + _681))) + ((_947.z * _930) * _961);
    float _1138 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _1149 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _1160 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    bool _981 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _992;
    _992.x = _981 ? ((_513 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1138 : (isnan(_1138) ? 1.0 : min(_1138, 1.0)));
    _992.y = _981 ? ((_516 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1149 : (isnan(_1149) ? 1.0 : min(_1149, 1.0)));
    _992.z = _981 ? ((_519 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1160 : (isnan(_1160) ? 1.0 : min(_1160, 1.0)));
    payload._m0 = _992;
}


