#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1323;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _157 & 65535u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        else
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _158 >> 16u;
        }
        _163 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
        _166 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _212 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _213 = _212.x;
    bool _227 = _172 == 0u;
    uint _228;
    if (_227)
    {
        _228 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _228 = frontier_phi_9_10_ladder;
    }
    uvec4 _236 = texelFetch(l_geomAttrib_0, int(((_177 + 4u) + (_173 ? (_228 + 4u) : _228)) >> 2u));
    uint _237 = _236.x;
    float _241 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _242 = float(int(uint(int(_237) >> int(16u))));
    uint _243 = _171 * _165;
    uint _244 = _243 + 12u;
    uint _265;
    uint _266;
    uint _267;
    uint _268;
    if (_176)
    {
        uvec4 _246 = texelFetch(l_geomAttrib_0, int(_244 >> 2u));
        uint _247 = _246.x;
        _265 = _247 & 255u;
        _266 = (_247 >> 8u) & 255u;
        _267 = (_247 >> 16u) & 255u;
        _268 = 16u;
    }
    else
    {
        uint _253 = _244 >> 2u;
        uvec2 _259 = uvec2(texelFetch(l_geomAttrib_0, int(_253)).x, texelFetch(l_geomAttrib_0, int(_253 + 1u)).x);
        uint _260 = _259.x;
        _265 = _260 & 65535u;
        _266 = _260 >> 16u;
        _267 = _259.y & 65535u;
        _268 = 20u;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((_268 + _243) >> 2u));
    uint _275 = _274.x;
    uint _287;
    if (_227)
    {
        _287 = _268 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _268 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _268 + 12u;
        }
        _287 = frontier_phi_16_17_ladder;
    }
    uvec4 _295 = texelFetch(l_geomAttrib_0, int(((_243 + 4u) + (_173 ? (_287 + 4u) : _287)) >> 2u));
    uint _296 = _295.x;
    float _300 = float(int(uint(int(_296 << 16u) >> int(16u))));
    float _301 = float(int(uint(int(_296) >> int(16u))));
    uint _302 = _171 * _166;
    uint _303 = _302 + 12u;
    uint _324;
    uint _325;
    uint _326;
    uint _327;
    if (_176)
    {
        uvec4 _305 = texelFetch(l_geomAttrib_0, int(_303 >> 2u));
        uint _306 = _305.x;
        _324 = _306 & 255u;
        _325 = (_306 >> 8u) & 255u;
        _326 = (_306 >> 16u) & 255u;
        _327 = 16u;
    }
    else
    {
        uint _312 = _303 >> 2u;
        uvec2 _318 = uvec2(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x);
        uint _319 = _318.x;
        _324 = _319 & 65535u;
        _325 = _319 >> 16u;
        _326 = _318.y & 65535u;
        _327 = 20u;
    }
    uvec4 _333 = texelFetch(l_geomAttrib_0, int((_327 + _302) >> 2u));
    uint _334 = _333.x;
    uint _346;
    if (_227)
    {
        _346 = _327 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _327 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _327 + 12u;
        }
        _346 = frontier_phi_23_24_ladder;
    }
    uvec4 _354 = texelFetch(l_geomAttrib_0, int(((_302 + 4u) + (_173 ? (_346 + 4u) : _346)) >> 2u));
    uint _355 = _354.x;
    float _359 = float(int(uint(int(_355 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_355) >> int(16u))));
    bool _362 = _122.z == 0u;
    float _398;
    float _399;
    float _400;
    if (_362)
    {
        uint _365 = _163 * 3u;
        uvec3 _374 = uvec3(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_365 + 2u)).x);
        _398 = uintBitsToFloat(_374.x);
        _399 = uintBitsToFloat(_374.y);
        _400 = uintBitsToFloat(_374.z);
    }
    else
    {
        uint _382 = _163 * 2u;
        uvec2 _388 = uvec2(texelFetch(l_geomPositionBuffer, int(_382)).x, texelFetch(l_geomPositionBuffer, int(_382 + 1u)).x);
        uint _389 = _388.x;
        _398 = unpackHalf2x16(_389).x;
        _399 = unpackHalf2x16(_389 >> 16u).x;
        _400 = unpackHalf2x16(_388.y).x;
    }
    float _436;
    float _437;
    float _438;
    if (_362)
    {
        uint _403 = _165 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _165 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_362)
    {
        uint _441 = _166 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _166 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _479 = (1.0 - hit._m0.x) - hit._m0.y;
    float _513 = (_300 - _241) * 0.00048828125;
    float _515 = (_301 - _242) * 0.00048828125;
    float _518 = (_359 - _241) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _541 = _436 - _398;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _546 = fma(_543, gl_ObjectToWorldEXT[2u].x, fma(_542, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _541));
    float _549 = fma(_543, gl_ObjectToWorldEXT[2u].y, fma(_542, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _541));
    float _552 = fma(_543, gl_ObjectToWorldEXT[2u].z, fma(_542, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _541));
    float _553 = _474 - _398;
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _558 = fma(_555, gl_ObjectToWorldEXT[2u].x, fma(_554, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _553));
    float _561 = fma(_555, gl_ObjectToWorldEXT[2u].y, fma(_554, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _553));
    float _564 = fma(_555, gl_ObjectToWorldEXT[2u].z, fma(_554, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _553));
    float _565 = (((_300 * hit._m0.x) + (_241 * _479)) + (_359 * hit._m0.y)) * 0.00048828125;
    float _566 = (((_301 * hit._m0.x) + (_242 * _479)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _570 = (((float(_202) * _479) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _573 = (((float(_203) * _479) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _576 = (((float(_204) * _479) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = _570 * 0.0078740157186985015869140625;
    float _579 = _573 * 0.0078740157186985015869140625;
    float _580 = _576 * 0.0078740157186985015869140625;
    float _593 = ((((float(_213 & 255u) * _479) + (-127.0)) + (float(_275 & 255u) * hit._m0.x)) + (float(_334 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float((_213 >> 8u) & 255u) * _479) + (-127.0)) + (float((_275 >> 8u) & 255u) * hit._m0.x)) + (float((_334 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_213 >> 16u) & 255u) * _479) + (-127.0)) + (float((_275 >> 16u) & 255u) * hit._m0.x)) + (float((_334 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float(_213 >> 24u) * _479) + (-127.0)) + (float(_275 >> 24u) * hit._m0.x)) + (float(_334 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((_594 * _580) - (_595 * _579)) * _596;
    float _607 = ((_595 * _577) - (_593 * _580)) * _596;
    float _608 = ((_593 * _579) - (_594 * _577)) * _596;
    float _612 = inversesqrt(dot(vec3(_606, _607, _608), vec3(_606, _607, _608)));
    float _613 = _612 * _606;
    float _614 = _612 * _607;
    float _615 = _612 * _608;
    uvec2 _627 = uvec2(textureSize(M_Ice_M0_CV_snp_0_Texture2D_7, int(0u)));
    bool _632 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _685;
    if (_632)
    {
        float _643 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _649 = (_564 * _549) - (_561 * _552);
        float _652 = (_558 * _552) - (_564 * _546);
        float _655 = (_561 * _546) - (_558 * _549);
        float _682 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_652 * _652) + (_655 * _655)) + (_649 * _649)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_643 * gl_WorldRayDirectionEXT.x, _643 * gl_WorldRayDirectionEXT.y, _643 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _685 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    }
    else
    {
        _685 = 0.0;
    }
    vec4 _689 = textureLod(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _565) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _566) + cbTextureTilingScale._m0[7u].w), _685);
    float _696 = (_689.x * 2.0) + (-1.0);
    float _698 = (_689.y * 2.0) + (-1.0);
    float _699 = dot(vec2(_696, _698), vec2(_696, _698));
    float _1406 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _704 = sqrt(1.0 - (isnan(1.0) ? _1406 : (isnan(_1406) ? 1.0 : min(_1406, 1.0))));
    uvec2 _716 = uvec2(textureSize(M_Ice_M0_CV_snp_0_Texture2D_5, int(0u)));
    float _767;
    if (_632)
    {
        float _727 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _733 = (_564 * _549) - (_561 * _552);
        float _736 = (_558 * _552) - (_564 * _546);
        float _739 = (_561 * _546) - (_558 * _549);
        float _765 = ((log2((((float(_716.y) * 0.5) * float(_716.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_736 * _736) + (_739 * _739)) + (_733 * _733)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_727 * gl_WorldRayDirectionEXT.x, _727 * gl_WorldRayDirectionEXT.y, _727 * gl_WorldRayDirectionEXT.z), vec3(_577, _579, _580))));
        _767 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    }
    else
    {
        _767 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _565) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _566) + cbTextureTilingScale._m0[0u].w), _767);
    float _785 = dot(vec3(0.0), vec3(_613, _614, _615));
    float _788 = dot(vec3(0.0), vec3(_593, _594, _595));
    float _791 = dot(vec3(0.0), vec3(_577, _579, _580));
    float _797 = inversesqrt(dot(vec3(_785, _788, _791), vec3(_785, _788, _791)));
    float _820 = dot(vec4(textureLod(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _565) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _566) + cbTextureTilingScale._m0[4u].w), 0.0)), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    uvec2 _840 = uvec2(textureSize(M_Ice_M0_CV_snp_0_Texture2D_1, int(0u)));
    float _844 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _845 = _844 * gl_WorldRayDirectionEXT.x;
    float _846 = _844 * gl_WorldRayDirectionEXT.y;
    float _847 = _844 * gl_WorldRayDirectionEXT.z;
    float _891;
    if (_632)
    {
        float _857 = (_564 * _549) - (_561 * _552);
        float _860 = (_558 * _552) - (_564 * _546);
        float _863 = (_561 * _546) - (_558 * _549);
        float _889 = ((log2((((float(_840.y) * 0.5) * float(_840.x)) * abs((_519 * _513) - (_518 * _515))) / (sqrt(((_860 * _860) + (_863 * _863)) + (_857 * _857)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_845, _846, _847), vec3(_577, _579, _580))));
        _891 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    }
    else
    {
        _891 = 0.0;
    }
    vec4 _893 = textureLod(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_785 * cbMtdParam._m0[14u].x) * _797) * _820) + _565) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_788 * cbMtdParam._m0[14u].x) * _797) * _820) + _566) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _891);
    float _919 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_577, _579, _580, 0.0)) - cbMtdParam._m0[15u].z;
    float _1427 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _926 = exp2(log2(1.0 - (isnan(1.0) ? _1427 : (isnan(_1427) ? 1.0 : min(_1427, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _941 = ((((_770.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _893.x) * cbMtdParam._m0[9u].x) * ((_926 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _946 = ((((_770.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _893.y) * cbMtdParam._m0[9u].y) * ((_926 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _951 = ((((_770.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _893.z) * cbMtdParam._m0[9u].z) * ((_926 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _960 = (cbMtdParam._m0[16u].y + _689.z) + cbMtdParam._m0[17u].z;
    float _963 = fma(_704, _577, fma(_698, _593, _696 * _613));
    float _966 = fma(_704, _579, fma(_698, _594, _696 * _614));
    float _969 = fma(_704, _580, fma(_698, _595, _696 * _615));
    float _973 = inversesqrt(dot(vec3(_963, _966, _969), vec3(_963, _966, _969)));
    float _974 = _973 * _963;
    float _975 = _973 * _966;
    float _976 = _973 * _969;
    float _988 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _989 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _990 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _991 = (-0.0) - _845;
    float _993 = (-0.0) - _846;
    float _994 = (-0.0) - _847;
    float _1000 = float(gl_LaunchIDEXT.x);
    float _1001 = float(gl_LaunchIDEXT.y);
    float _1004 = float(gl_LaunchSizeEXT.x);
    float _1018 = fract(fract(sin(dot(vec2(_1000 / _1004, _1001 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1031 = fract(fract(sin(dot(vec2((_1000 + 128.0) / _1004, (_1001 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _64._m0 = 1u;
    uvec4 _1041 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1042 = _1041.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1042, _1041.w, _1042, vec3(_988, _989, _990), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    if (_64._m0 == 0u)
    {
        float _1063 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_974, _975, _976));
        float _1443 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
        float _1066 = isnan(1.0) ? _1443 : (isnan(_1443) ? 1.0 : min(_1443, 1.0));
        float _1085 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _960) * 0.949999988079071044921875);
        float _1086 = _1085 * _1085;
        float _1087 = g_sceneCB._m0[4u].x - _845;
        float _1088 = g_sceneCB._m0[4u].y - _846;
        float _1089 = g_sceneCB._m0[4u].z - _847;
        float _1093 = inversesqrt(dot(vec3(_1087, _1088, _1089), vec3(_1087, _1088, _1089)));
        float _1094 = _1093 * _1087;
        float _1095 = _1093 * _1088;
        float _1096 = _1093 * _1089;
        float _1097 = dot(vec3(_974, _975, _976), vec3(g_sceneCB._m0[4u].xyz));
        float _1454 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1100 = isnan(1.0) ? _1454 : (isnan(_1454) ? 1.0 : min(_1454, 1.0));
        float _1101 = dot(vec3(_974, _975, _976), vec3(_991, _993, _994));
        float _1465 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1104 = isnan(1.0) ? _1465 : (isnan(_1465) ? 1.0 : min(_1465, 1.0));
        float _1105 = dot(vec3(_974, _975, _976), vec3(_1094, _1095, _1096));
        float _1476 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1108 = isnan(1.0) ? _1476 : (isnan(_1476) ? 1.0 : min(_1476, 1.0));
        float _1109 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1094, _1095, _1096));
        float _1487 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1113 = _1086 * _1086;
        float _1117 = ((_1108 * _1108) * (_1113 + (-1.0))) + 1.0;
        float _1129 = (exp2(log2(1.0 - (isnan(1.0) ? _1487 : (isnan(_1487) ? 1.0 : min(_1487, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1131 = 1.0 - _1086;
        float _1142 = (0.5 / (((_1104 * ((_1100 * _1131) + _1086)) + 9.9999999392252902907785028219223e-09) + (((_1104 * _1131) + _1086) * _1100))) * _1100;
        float _1498 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1144 = (isnan(1.0) ? _1498 : (isnan(_1498) ? 1.0 : min(_1498, 1.0))) * (_1113 / ((_1117 * _1117) * 3.141590118408203125));
        _1151 = ((_941 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1066;
        _1152 = ((_946 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1066;
        _1153 = ((_951 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1066;
        _1154 = (_1129 * g_sceneCB._m0[5u].x) * _1144;
        _1155 = (_1129 * g_sceneCB._m0[5u].y) * _1144;
        _1156 = (_1129 * g_sceneCB._m0[5u].z) * _1144;
    }
    else
    {
        _1151 = 0.0;
        _1152 = 0.0;
        _1153 = 0.0;
        _1154 = 0.0;
        _1155 = 0.0;
        _1156 = 0.0;
    }
    bool _1158 = abs(_975) < 0.89999997615814208984375;
    float _1160 = float(_1158);
    float _1161 = _1158 ? 0.0 : 1.0;
    float _1164 = (_1160 * _976) - (_1161 * _975);
    float _1165 = _1161 * _974;
    float _1167 = (-0.0) - (_974 * _1160);
    float _1171 = inversesqrt(dot(vec3(_1164, _1165, _1167), vec3(_1164, _1165, _1167)));
    float _1172 = _1164 * _1171;
    float _1173 = _1165 * _1171;
    float _1174 = _1171 * _1167;
    float _1177 = (_1173 * _976) - (_1174 * _975);
    float _1180 = (_1174 * _974) - (_1172 * _976);
    float _1183 = (_1172 * _975) - (_1173 * _974);
    float _1185;
    float _1193;
    float _1184 = 0.0;
    uint _1186 = 0u;
    float _1190;
    bool _1192;
    for (;;)
    {
        _1190 = (float(_1186) + _1018) * 0.03125;
        _1192 = _1186 == 0u;
        float frontier_phi_45_pred;
        if (_1192)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1328;
            float _1329;
            uint _1331;
            _1328 = 0.0;
            _1329 = 0.5;
            _1331 = _1186;
            float _1194;
            for (;;)
            {
                _1194 = ((_1331 & 1u) != 0u) ? (_1329 + _1328) : _1328;
                uint _1332 = _1331 >> 1u;
                if (_1332 == 0u)
                {
                    break;
                }
                else
                {
                    _1328 = _1194;
                    _1329 *= 0.5;
                    _1331 = _1332;
                }
            }
            frontier_phi_45_pred = _1194;
        }
        _1193 = frontier_phi_45_pred;
        float _1195 = _1193 + _1031;
        float _1199 = sqrt(_1190);
        float _1200 = ((_1195 > 1.0) ? (_1195 + (-1.0)) : _1195) * 6.283185482025146484375;
        float _1203 = cos(_1200) * _1199;
        float _1205 = sin(_1200) * _1199;
        float _1207 = sqrt(1.0 - _1190);
        float _1220 = ((_1207 * _974) + (_1203 * _1177)) + (_1205 * _1172);
        float _1221 = ((_1207 * _975) + (_1203 * _1180)) + (_1205 * _1173);
        float _1222 = ((_1207 * _976) + (_1203 * _1183)) + (_1205 * _1174);
        _63._m0 = 1u;
        uvec4 _1226 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1227 = _1226.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1227, _1226.w, _1227, vec3(_988, _989, _990), 9.9999997473787516355514526367188e-05, vec3(_1220, _1221, _1222), 10000.0, 1);
        float _1233 = dot(vec3(_974, _975, _976), vec3(_1220, _1221, _1222));
        float _1509 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1236 = isnan(1.0) ? _1509 : (isnan(_1509) ? 1.0 : min(_1509, 1.0));
        _1185 = ((float(_63._m0 == 0u) * _1236) / (_1236 * 0.3183098733425140380859375)) + _1184;
        uint _1187 = _1186 + 1u;
        if (_1187 == 32u)
        {
            break;
        }
        else
        {
            _1184 = _1185;
            _1186 = _1187;
            continue;
        }
    }
    float _1244 = _1185 * 0.009947183541953563690185546875;
    float _1249 = dot(vec3(_845, _846, _847), vec3(_974, _975, _976)) * 2.0;
    vec4 _1263 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_845 - (_1249 * _974), _846 - (_1249 * _975), _847 - (_1249 * _976)), 4.0 - (_960 * 4.0));
    float _1268 = dot(vec3(_991, _993, _994), vec3(_974, _975, _976));
    float _1520 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
    float _1277 = (exp2(log2(1.0 - (isnan(1.0) ? _1520 : (isnan(_1520) ? 1.0 : min(_1520, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1283 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_974, _975, _976), 0.0);
    float _1294 = (_1154 + _1151) + (((_1283.x * _941) + (_1277 * _1263.x)) * _1244);
    float _1298 = (_1155 + _1152) + (((_1283.y * _946) + (_1277 * _1263.y)) * _1244);
    float _1302 = (_1156 + _1153) + (((_1283.z * _951) + (_1277 * _1263.z)) * _1244);
    float _1531 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
    float _1542 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
    float _1553 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
    bool _1311 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1322;
    _1322.x = _1311 ? ((_570 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1531 : (isnan(_1531) ? 1.0 : min(_1531, 1.0)));
    _1322.y = _1311 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1542 : (isnan(_1542) ? 1.0 : min(_1542, 1.0)));
    _1322.z = _1311 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1553 : (isnan(_1553) ? 1.0 : min(_1553, 1.0)));
    payload._m0 = _1322;
}


