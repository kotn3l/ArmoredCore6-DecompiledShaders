#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1659;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _165 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _166 >> 16u;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _171 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _219 = _180 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uint _225 = _181 ? (_220 + 4u) : _220;
    uint _226 = _179 * _171;
    uint _230 = ((_226 + 4u) + _225) >> 2u;
    uvec2 _236 = uvec2(texelFetch(l_geomAttrib_0, int(_230)).x, texelFetch(l_geomAttrib_0, int(_230 + 1u)).x);
    uint _237 = _236.x;
    uint _238 = _236.y;
    float _242 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_237) >> int(16u))));
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_226 + 12u) + _225) >> 2u));
    uint _253 = _252.x;
    uint _263 = (_179 * _173) + 12u;
    uint _284;
    uint _285;
    uint _286;
    uint _287;
    if (_184)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_263 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
        _287 = 20u;
    }
    else
    {
        uint _272 = _263 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
        _287 = 24u;
    }
    uint _291;
    if (_219)
    {
        _291 = _287;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _287 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _287 + 8u;
        }
        _291 = frontier_phi_16_17_ladder;
    }
    uint _295 = _181 ? (_291 + 4u) : _291;
    uint _296 = _179 * _173;
    uint _299 = ((_296 + 4u) + _295) >> 2u;
    uvec2 _305 = uvec2(texelFetch(l_geomAttrib_0, int(_299)).x, texelFetch(l_geomAttrib_0, int(_299 + 1u)).x);
    uint _306 = _305.x;
    uint _307 = _305.y;
    float _311 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_306) >> int(16u))));
    uvec4 _321 = texelFetch(l_geomAttrib_0, int(((_296 + 12u) + _295) >> 2u));
    uint _322 = _321.x;
    uint _332 = (_179 * _174) + 12u;
    uint _353;
    uint _354;
    uint _355;
    uint _356;
    if (_184)
    {
        uvec4 _334 = texelFetch(l_geomAttrib_0, int(_332 >> 2u));
        uint _335 = _334.x;
        _353 = _335 & 255u;
        _354 = (_335 >> 8u) & 255u;
        _355 = (_335 >> 16u) & 255u;
        _356 = 20u;
    }
    else
    {
        uint _341 = _332 >> 2u;
        uvec2 _347 = uvec2(texelFetch(l_geomAttrib_0, int(_341)).x, texelFetch(l_geomAttrib_0, int(_341 + 1u)).x);
        uint _348 = _347.x;
        _353 = _348 & 65535u;
        _354 = _348 >> 16u;
        _355 = _347.y & 65535u;
        _356 = 24u;
    }
    uint _360;
    if (_219)
    {
        _360 = _356;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _356 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _356 + 8u;
        }
        _360 = frontier_phi_23_24_ladder;
    }
    uint _364 = _181 ? (_360 + 4u) : _360;
    uint _365 = _179 * _174;
    uint _368 = ((_365 + 4u) + _364) >> 2u;
    uvec2 _374 = uvec2(texelFetch(l_geomAttrib_0, int(_368)).x, texelFetch(l_geomAttrib_0, int(_368 + 1u)).x);
    uint _375 = _374.x;
    uint _376 = _374.y;
    float _380 = float(int(uint(int(_375 << 16u) >> int(16u))));
    float _381 = float(int(uint(int(_375) >> int(16u))));
    uvec4 _390 = texelFetch(l_geomAttrib_0, int(((_365 + 12u) + _364) >> 2u));
    uint _391 = _390.x;
    bool _401 = _130.z == 0u;
    float _437;
    float _438;
    float _439;
    if (_401)
    {
        uint _404 = _171 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _171 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_401)
    {
        uint _442 = _173 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _173 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _513;
    float _514;
    float _515;
    if (_401)
    {
        uint _480 = _174 * 3u;
        uvec3 _489 = uvec3(texelFetch(l_geomPositionBuffer, int(_480)).x, texelFetch(l_geomPositionBuffer, int(_480 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_480 + 2u)).x);
        _513 = uintBitsToFloat(_489.x);
        _514 = uintBitsToFloat(_489.y);
        _515 = uintBitsToFloat(_489.z);
    }
    else
    {
        uint _497 = _174 * 2u;
        uvec2 _503 = uvec2(texelFetch(l_geomPositionBuffer, int(_497)).x, texelFetch(l_geomPositionBuffer, int(_497 + 1u)).x);
        uint _504 = _503.x;
        _513 = unpackHalf2x16(_504).x;
        _514 = unpackHalf2x16(_504 >> 16u).x;
        _515 = unpackHalf2x16(_503.y).x;
    }
    float _518 = (1.0 - hit._m0.x) - hit._m0.y;
    float _569 = (_311 - _242) * 0.00048828125;
    float _571 = (_312 - _243) * 0.00048828125;
    float _574 = (_380 - _242) * 0.00048828125;
    float _575 = (_381 - _243) * 0.00048828125;
    float _597 = _475 - _437;
    float _598 = _476 - _438;
    float _599 = _477 - _439;
    float _602 = fma(_599, gl_ObjectToWorldEXT[2u].x, fma(_598, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _597));
    float _605 = fma(_599, gl_ObjectToWorldEXT[2u].y, fma(_598, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _597));
    float _608 = fma(_599, gl_ObjectToWorldEXT[2u].z, fma(_598, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _597));
    float _609 = _513 - _437;
    float _610 = _514 - _438;
    float _611 = _515 - _439;
    float _614 = fma(_611, gl_ObjectToWorldEXT[2u].x, fma(_610, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _609));
    float _617 = fma(_611, gl_ObjectToWorldEXT[2u].y, fma(_610, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _609));
    float _620 = fma(_611, gl_ObjectToWorldEXT[2u].z, fma(_610, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _609));
    float _621 = (((_311 * hit._m0.x) + (_242 * _518)) + (_380 * hit._m0.y)) * 0.00048828125;
    float _622 = (((_312 * hit._m0.x) + (_243 * _518)) + (_381 * hit._m0.y)) * 0.00048828125;
    float _628 = (((float(_210) * _518) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_353) * hit._m0.y);
    float _631 = (((float(_211) * _518) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _634 = (((float(_212) * _518) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _635 = _628 * 0.0078740157186985015869140625;
    float _637 = _631 * 0.0078740157186985015869140625;
    float _638 = _634 * 0.0078740157186985015869140625;
    float _647 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    float _652 = fract(_647 * cbMtdParam._m0[20u].y) + _621;
    float _653 = fract(_647 * cbMtdParam._m0[20u].z) + _622;
    float _678 = (cbTextureTilingScale._m0[4u].x * (fract(cbMtdParam._m0[20u].w * cbPerFrame._m0[22u].x) + _621)) + cbTextureTilingScale._m0[4u].z;
    float _679 = (cbTextureTilingScale._m0[4u].y * (fract(cbMtdParam._m0[21u].x * cbPerFrame._m0[22u].x) + _622)) + cbTextureTilingScale._m0[4u].w;
    uvec2 _681 = uvec2(textureSize(M_CoralBurst_01_snp_0_Texture2D_4, int(0u)));
    bool _686 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _739;
    if (_686)
    {
        float _697 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _703 = (_620 * _605) - (_617 * _608);
        float _706 = (_614 * _608) - (_620 * _602);
        float _709 = (_617 * _602) - (_614 * _605);
        float _736 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_575 * _569) - (_574 * _571))) / (sqrt(((_706 * _706) + (_709 * _709)) + (_703 * _703)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_697 * gl_WorldRayDirectionEXT.x, _697 * gl_WorldRayDirectionEXT.y, _697 * gl_WorldRayDirectionEXT.z), vec3(_635, _637, _638))));
        _739 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    }
    else
    {
        _739 = 0.0;
    }
    vec4 _743 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_678, _679), _739);
    float _747 = cbPerFrame._m0[22u].x * 2.0;
    float _748 = _747 * cbMtdParam._m0[15u].z;
    float _754 = ((_743.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _756 = (-0.0) - (cbMtdParam._m0[15u].y * ((_743.x * 0.5) + (-0.25)));
    float _758 = fract(_748);
    float _760 = fract(_748 + 0.5);
    float _772 = abs((_758 * 2.0) + (-1.0));
    vec4 _790 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_758 * _756) + _652) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_754 * _758) + _653) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _792 = _790.x;
    float _793 = _790.y;
    float _794 = _790.z;
    vec4 _795 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_760 * _756) + _652) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_754 * _760) + _653) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _818 = fract(cbMtdParam._m0[19u].y * _647) + _621;
    float _819 = fract(cbMtdParam._m0[19u].z * _647) + _622;
    float _870;
    if (_686)
    {
        float _830 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _836 = (_620 * _605) - (_617 * _608);
        float _839 = (_614 * _608) - (_620 * _602);
        float _842 = (_617 * _602) - (_614 * _605);
        float _868 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_575 * _569) - (_574 * _571))) / (sqrt(((_839 * _839) + (_842 * _842)) + (_836 * _836)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_830 * gl_WorldRayDirectionEXT.x, _830 * gl_WorldRayDirectionEXT.y, _830 * gl_WorldRayDirectionEXT.z), vec3(_635, _637, _638))));
        _870 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    }
    else
    {
        _870 = 0.0;
    }
    vec4 _872 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_678, _679), _870);
    float _880 = ((_872.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _882 = (-0.0) - (cbMtdParam._m0[15u].y * ((_872.x * 0.5) + (-0.25)));
    vec4 _907 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_758 * _882) + _818) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_880 * _758) + _819) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _909 = _907.x;
    float _910 = _907.y;
    float _911 = _907.z;
    vec4 _912 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_760 * _882) + _818) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_880 * _760) + _819) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _931 = sin(cbMtdParam._m0[14u].z);
    float _932 = cos(cbMtdParam._m0[14u].z);
    float _933 = ((((float(int(uint(int(_307 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238 << 16u) >> int(16u)))) * _518)) + (float(int(uint(int(_376 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].y;
    float _934 = ((((float(int(uint(int(_307) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238) >> int(16u)))) * _518)) + (float(int(uint(int(_376) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].y;
    float _940 = fma(_934, (-0.0) - _931, _932 * _933) + cbMtdParam._m0[14u].y;
    float _941 = fma(_934, _932, _933 * _931) + cbMtdParam._m0[14u].y;
    float _992;
    if (_686)
    {
        float _952 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _958 = (_620 * _605) - (_617 * _608);
        float _961 = (_614 * _608) - (_620 * _602);
        float _964 = (_617 * _602) - (_614 * _605);
        float _990 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_575 * _569) - (_574 * _571))) / (sqrt(((_961 * _961) + (_964 * _964)) + (_958 * _958)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_952 * gl_WorldRayDirectionEXT.x, _952 * gl_WorldRayDirectionEXT.y, _952 * gl_WorldRayDirectionEXT.z), vec3(_635, _637, _638))));
        _992 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    }
    else
    {
        _992 = 0.0;
    }
    vec4 _994 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_678, _679), _992);
    float _1002 = ((_994.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _1004 = (-0.0) - (cbMtdParam._m0[15u].y * ((_994.x * 0.5) + (-0.25)));
    vec4 _1029 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_758 * _1004) + _940) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1002 * _758) + _941) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1031 = _1029.x;
    float _1066 = (cbMtdParam._m0[13u].x * (((_795.x - _792) * _772) + _792)) + (cbMtdParam._m0[11u].x * (((_912.x - _909) * _772) + _909));
    float _1067 = (cbMtdParam._m0[13u].y * (((_795.y - _793) * _772) + _793)) + (cbMtdParam._m0[11u].y * (((_912.y - _910) * _772) + _910));
    float _1068 = (cbMtdParam._m0[13u].z * (((_795.z - _794) * _772) + _794)) + (cbMtdParam._m0[11u].z * (((_912.z - _911) * _772) + _911));
    float _1076 = abs((fract(cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1756 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1077 = isnan(1.0) ? _1756 : (isnan(_1756) ? 1.0 : min(_1756, 1.0));
    float _1084 = ((_1077 * _1077) * (3.0 - (_1077 * 2.0))) - cbMtdParam._m0[15u].w;
    float _1097 = fract(cbMtdParam._m0[21u].y * _647) + _621;
    float _1098 = fract(cbMtdParam._m0[21u].z * _647) + _622;
    float _1149;
    if (_686)
    {
        float _1109 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1115 = (_620 * _605) - (_617 * _608);
        float _1118 = (_614 * _608) - (_620 * _602);
        float _1121 = (_617 * _602) - (_614 * _605);
        float _1147 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_575 * _569) - (_574 * _571))) / (sqrt(((_1118 * _1118) + (_1121 * _1121)) + (_1115 * _1115)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1109 * gl_WorldRayDirectionEXT.x, _1109 * gl_WorldRayDirectionEXT.y, _1109 * gl_WorldRayDirectionEXT.z), vec3(_635, _637, _638))));
        _1149 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
    }
    else
    {
        _1149 = 0.0;
    }
    vec4 _1151 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_678, _679), _1149);
    float _1159 = ((_1151.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].y;
    float _1161 = (-0.0) - (cbMtdParam._m0[15u].y * ((_1151.x * 0.5) + (-0.25)));
    vec4 _1187 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_758 * _1161) + _1097) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1159 * _758) + _1098) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1189 = _1187.x;
    float _1190 = _1187.y;
    float _1191 = _1187.z;
    vec4 _1192 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_760 * _1161) + _1097) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1159 * _760) + _1098) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1220 = fract(cbMtdParam._m0[19u].w * _647) + _621;
    float _1221 = fract(cbMtdParam._m0[20u].x * _647) + _622;
    float _1227 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1228 = _1227 * gl_WorldRayDirectionEXT.x;
    float _1229 = _1227 * gl_WorldRayDirectionEXT.y;
    float _1230 = _1227 * gl_WorldRayDirectionEXT.z;
    float _1274;
    if (_686)
    {
        float _1240 = (_620 * _605) - (_617 * _608);
        float _1243 = (_614 * _608) - (_620 * _602);
        float _1246 = (_617 * _602) - (_614 * _605);
        float _1272 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_575 * _569) - (_574 * _571))) / (sqrt(((_1243 * _1243) + (_1246 * _1246)) + (_1240 * _1240)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1228, _1229, _1230), vec3(_635, _637, _638))));
        _1274 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
    }
    else
    {
        _1274 = 0.0;
    }
    vec4 _1276 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_678, _679), _1274);
    float _1280 = _747 * cbMtdParam._m0[18u].z;
    float _1285 = ((_1276.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].y;
    float _1287 = (-0.0) - (cbMtdParam._m0[18u].y * ((_1276.x * 0.5) + (-0.25)));
    float _1288 = fract(_1280);
    float _1290 = fract(_1280 + 0.5);
    float _1301 = abs((_1288 * 2.0) + (-1.0));
    vec4 _1318 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1288 * _1287) + _1220) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1285 * _1288) + _1221) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1320 = _1318.x;
    float _1321 = _1318.y;
    float _1322 = _1318.z;
    vec4 _1323 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1290 * _1287) + _1220) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1285 * _1290) + _1221) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1347 = cbMtdParam._m0[14u].x * (((textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_760 * _1004) + _940) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1002 * _760) + _941) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0).x - _1031) * _772) + _1031);
    float _1354 = (_1347 * (((((((_1323.x - _1320) * _1301) + _1320) * cbMtdParam._m0[12u].x) + ((((_1192.x - _1189) * _772) + _1189) * cbMtdParam._m0[9u].x)) * _1084) - _1066)) + _1066;
    float _1355 = (_1347 * (((((((_1323.y - _1321) * _1301) + _1321) * cbMtdParam._m0[12u].y) + ((((_1192.y - _1190) * _772) + _1190) * cbMtdParam._m0[9u].y)) * _1084) - _1067)) + _1067;
    float _1356 = (_1347 * (((((((_1323.z - _1322) * _1301) + _1322) * cbMtdParam._m0[12u].z) + ((((_1192.z - _1191) * _772) + _1191) * cbMtdParam._m0[9u].z)) * _1084) - _1068)) + _1068;
    float _1372 = inversesqrt(dot(vec3(_635, _637, _638), vec3(_635, _637, _638)));
    float _1373 = _1372 * _635;
    float _1374 = _1372 * _637;
    float _1375 = _1372 * _638;
    float _1387 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1388 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1389 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1390 = (-0.0) - _1228;
    float _1391 = (-0.0) - _1229;
    float _1392 = (-0.0) - _1230;
    float _1398 = float(gl_LaunchIDEXT.x);
    float _1399 = float(gl_LaunchIDEXT.y);
    float _1402 = float(gl_LaunchSizeEXT.x);
    float _1416 = fract(fract(sin(dot(vec2(_1398 / _1402, _1399 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1429 = fract(fract(sin(dot(vec2((_1398 + 128.0) / _1402, (_1399 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _1439 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1440 = _1439.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1440, _1439.w, _1440, vec3(_1387, _1388, _1389), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1505;
    float _1506;
    float _1507;
    if (_68._m0 == 0u)
    {
        float _1460 = g_sceneCB._m0[4u].x - _1228;
        float _1461 = g_sceneCB._m0[4u].y - _1229;
        float _1462 = g_sceneCB._m0[4u].z - _1230;
        float _1466 = inversesqrt(dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462)));
        float _1470 = dot(vec3(_1373, _1374, _1375), vec3(g_sceneCB._m0[4u].xyz));
        float _1777 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1473 = isnan(1.0) ? _1777 : (isnan(_1777) ? 1.0 : min(_1777, 1.0));
        float _1474 = dot(vec3(_1373, _1374, _1375), vec3(_1390, _1391, _1392));
        float _1788 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1478 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1460 * _1466, _1461 * _1466, _1462 * _1466));
        float _1799 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1489 = (exp2(log2(1.0 - (isnan(1.0) ? _1799 : (isnan(_1799) ? 1.0 : min(_1799, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1495 = (0.5 / ((_1473 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1788 : (isnan(_1788) ? 1.0 : min(_1788, 1.0))))) * _1473;
        float _1810 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1497 = (isnan(1.0) ? _1810 : (isnan(_1810) ? 1.0 : min(_1810, 1.0))) * 0.31831014156341552734375;
        _1505 = (_1489 * g_sceneCB._m0[5u].x) * _1497;
        _1506 = (_1489 * g_sceneCB._m0[5u].y) * _1497;
        _1507 = (_1489 * g_sceneCB._m0[5u].z) * _1497;
    }
    else
    {
        _1505 = 0.0;
        _1506 = 0.0;
        _1507 = 0.0;
    }
    bool _1509 = abs(_1374) < 0.89999997615814208984375;
    float _1511 = float(_1509);
    float _1512 = _1509 ? 0.0 : 1.0;
    float _1515 = (_1511 * _1375) - (_1512 * _1374);
    float _1516 = _1512 * _1373;
    float _1518 = (-0.0) - (_1373 * _1511);
    float _1522 = inversesqrt(dot(vec3(_1515, _1516, _1518), vec3(_1515, _1516, _1518)));
    float _1523 = _1515 * _1522;
    float _1524 = _1516 * _1522;
    float _1525 = _1522 * _1518;
    float _1528 = (_1524 * _1375) - (_1525 * _1374);
    float _1531 = (_1525 * _1373) - (_1523 * _1375);
    float _1534 = (_1523 * _1374) - (_1524 * _1373);
    float _1536;
    float _1544;
    float _1535 = 0.0;
    uint _1537 = 0u;
    float _1541;
    bool _1543;
    for (;;)
    {
        _1541 = (float(_1537) + _1416) * 0.03125;
        _1543 = _1537 == 0u;
        float frontier_phi_49_pred;
        if (_1543)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1664;
            float _1665;
            uint _1667;
            _1664 = 0.0;
            _1665 = 0.5;
            _1667 = _1537;
            float _1545;
            for (;;)
            {
                _1545 = ((_1667 & 1u) != 0u) ? (_1665 + _1664) : _1664;
                uint _1668 = _1667 >> 1u;
                if (_1668 == 0u)
                {
                    break;
                }
                else
                {
                    _1664 = _1545;
                    _1665 *= 0.5;
                    _1667 = _1668;
                }
            }
            frontier_phi_49_pred = _1545;
        }
        _1544 = frontier_phi_49_pred;
        float _1546 = _1544 + _1429;
        float _1550 = sqrt(_1541);
        float _1551 = ((_1546 > 1.0) ? (_1546 + (-1.0)) : _1546) * 6.283185482025146484375;
        float _1554 = cos(_1551) * _1550;
        float _1556 = sin(_1551) * _1550;
        float _1558 = sqrt(1.0 - _1541);
        float _1571 = ((_1558 * _1373) + (_1554 * _1528)) + (_1556 * _1523);
        float _1572 = ((_1558 * _1374) + (_1554 * _1531)) + (_1556 * _1524);
        float _1573 = ((_1558 * _1375) + (_1554 * _1534)) + (_1556 * _1525);
        _67._m0 = 1u;
        uvec4 _1577 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1578 = _1577.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1578, _1577.w, _1578, vec3(_1387, _1388, _1389), 9.9999997473787516355514526367188e-05, vec3(_1571, _1572, _1573), 10000.0, 1);
        float _1584 = dot(vec3(_1373, _1374, _1375), vec3(_1571, _1572, _1573));
        float _1821 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1587 = isnan(1.0) ? _1821 : (isnan(_1821) ? 1.0 : min(_1821, 1.0));
        _1536 = ((float(_67._m0 == 0u) * _1587) / (_1587 * 0.3183098733425140380859375)) + _1535;
        uint _1538 = _1537 + 1u;
        if (_1538 == 32u)
        {
            break;
        }
        else
        {
            _1535 = _1536;
            _1537 = _1538;
            continue;
        }
    }
    float _1596 = _1536 * 0.009947183541953563690185546875;
    float _1601 = dot(vec3(_1228, _1229, _1230), vec3(_1373, _1374, _1375)) * 2.0;
    vec4 _1613 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1228 - (_1601 * _1373), _1229 - (_1601 * _1374), _1230 - (_1601 * _1375)), 4.0);
    float _1618 = dot(vec3(_1390, _1391, _1392), vec3(_1373, _1374, _1375));
    float _1832 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
    float _1627 = (exp2(log2(1.0 - (isnan(1.0) ? _1832 : (isnan(_1832) ? 1.0 : min(_1832, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1635 = (_1505 + (((((((float(_322 & 255u) * hit._m0.x) + (float(_253 & 255u) * _518)) + (float(_391 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].x - _1354)) + _1354) * cbMtdParam._m0[17u].w)) + ((_1613.x * _1596) * _1627);
    float _1637 = (_1506 + (((((((float((_322 >> 8u) & 255u) * hit._m0.x) + (float((_253 >> 8u) & 255u) * _518)) + (float((_391 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].y - _1355)) + _1355) * cbMtdParam._m0[17u].w)) + ((_1613.y * _1596) * _1627);
    float _1639 = (_1507 + (((((((float((_322 >> 16u) & 255u) * hit._m0.x) + (float((_253 >> 16u) & 255u) * _518)) + (float((_391 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].z - _1356)) + _1356) * cbMtdParam._m0[17u].w)) + ((_1613.z * _1596) * _1627);
    float _1843 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    float _1854 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
    float _1865 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
    bool _1647 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1658;
    _1658.x = _1647 ? ((_628 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1843 : (isnan(_1843) ? 1.0 : min(_1843, 1.0)));
    _1658.y = _1647 ? ((_631 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1854 : (isnan(_1854) ? 1.0 : min(_1854, 1.0)));
    _1658.z = _1647 ? ((_634 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1865 : (isnan(_1865) ? 1.0 : min(_1865, 1.0)));
    payload._m0 = _1658;
}


