#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _2218;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uint _245 = ((_186 + 4u) + (_182 ? (_238 + 4u) : _238)) >> 2u;
    uvec2 _251 = uvec2(texelFetch(l_geomAttrib_0, int(_245)).x, texelFetch(l_geomAttrib_0, int(_245 + 1u)).x);
    uint _252 = _251.x;
    uint _253 = _251.y;
    float _257 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_252) >> int(16u))));
    float _262 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _263 = float(int(uint(int(_253) >> int(16u))));
    uint _264 = _180 * _174;
    uint _265 = _264 + 12u;
    uint _286;
    uint _287;
    uint _288;
    uint _289;
    if (_185)
    {
        uvec4 _267 = texelFetch(l_geomAttrib_0, int(_265 >> 2u));
        uint _268 = _267.x;
        _286 = _268 & 255u;
        _287 = (_268 >> 8u) & 255u;
        _288 = (_268 >> 16u) & 255u;
        _289 = 16u;
    }
    else
    {
        uint _274 = _265 >> 2u;
        uvec2 _280 = uvec2(texelFetch(l_geomAttrib_0, int(_274)).x, texelFetch(l_geomAttrib_0, int(_274 + 1u)).x);
        uint _281 = _280.x;
        _286 = _281 & 65535u;
        _287 = _281 >> 16u;
        _288 = _280.y & 65535u;
        _289 = 20u;
    }
    uvec4 _295 = texelFetch(l_geomAttrib_0, int((_289 + _264) >> 2u));
    uint _296 = _295.x;
    uint _308;
    if (_237)
    {
        _308 = _289 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _289 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _289 + 12u;
        }
        _308 = frontier_phi_16_17_ladder;
    }
    uint _315 = ((_264 + 4u) + (_182 ? (_308 + 4u) : _308)) >> 2u;
    uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
    uint _322 = _321.x;
    uint _323 = _321.y;
    float _327 = float(int(uint(int(_322 << 16u) >> int(16u))));
    float _328 = float(int(uint(int(_322) >> int(16u))));
    float _332 = float(int(uint(int(_323 << 16u) >> int(16u))));
    float _333 = float(int(uint(int(_323) >> int(16u))));
    uint _334 = _180 * _175;
    uint _335 = _334 + 12u;
    uint _356;
    uint _357;
    uint _358;
    uint _359;
    if (_185)
    {
        uvec4 _337 = texelFetch(l_geomAttrib_0, int(_335 >> 2u));
        uint _338 = _337.x;
        _356 = _338 & 255u;
        _357 = (_338 >> 8u) & 255u;
        _358 = (_338 >> 16u) & 255u;
        _359 = 16u;
    }
    else
    {
        uint _344 = _335 >> 2u;
        uvec2 _350 = uvec2(texelFetch(l_geomAttrib_0, int(_344)).x, texelFetch(l_geomAttrib_0, int(_344 + 1u)).x);
        uint _351 = _350.x;
        _356 = _351 & 65535u;
        _357 = _351 >> 16u;
        _358 = _350.y & 65535u;
        _359 = 20u;
    }
    uvec4 _365 = texelFetch(l_geomAttrib_0, int((_359 + _334) >> 2u));
    uint _366 = _365.x;
    uint _378;
    if (_237)
    {
        _378 = _359 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _359 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _359 + 12u;
        }
        _378 = frontier_phi_23_24_ladder;
    }
    uint _385 = ((_334 + 4u) + (_182 ? (_378 + 4u) : _378)) >> 2u;
    uvec2 _391 = uvec2(texelFetch(l_geomAttrib_0, int(_385)).x, texelFetch(l_geomAttrib_0, int(_385 + 1u)).x);
    uint _392 = _391.x;
    uint _393 = _391.y;
    float _397 = float(int(uint(int(_392 << 16u) >> int(16u))));
    float _398 = float(int(uint(int(_392) >> int(16u))));
    float _402 = float(int(uint(int(_393 << 16u) >> int(16u))));
    float _403 = float(int(uint(int(_393) >> int(16u))));
    bool _405 = _131.z == 0u;
    float _441;
    float _442;
    float _443;
    if (_405)
    {
        uint _408 = _172 * 3u;
        uvec3 _417 = uvec3(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_408 + 2u)).x);
        _441 = uintBitsToFloat(_417.x);
        _442 = uintBitsToFloat(_417.y);
        _443 = uintBitsToFloat(_417.z);
    }
    else
    {
        uint _425 = _172 * 2u;
        uvec2 _431 = uvec2(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x);
        uint _432 = _431.x;
        _441 = unpackHalf2x16(_432).x;
        _442 = unpackHalf2x16(_432 >> 16u).x;
        _443 = unpackHalf2x16(_431.y).x;
    }
    float _479;
    float _480;
    float _481;
    if (_405)
    {
        uint _446 = _174 * 3u;
        uvec3 _455 = uvec3(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_446 + 2u)).x);
        _479 = uintBitsToFloat(_455.x);
        _480 = uintBitsToFloat(_455.y);
        _481 = uintBitsToFloat(_455.z);
    }
    else
    {
        uint _463 = _174 * 2u;
        uvec2 _469 = uvec2(texelFetch(l_geomPositionBuffer, int(_463)).x, texelFetch(l_geomPositionBuffer, int(_463 + 1u)).x);
        uint _470 = _469.x;
        _479 = unpackHalf2x16(_470).x;
        _480 = unpackHalf2x16(_470 >> 16u).x;
        _481 = unpackHalf2x16(_469.y).x;
    }
    float _517;
    float _518;
    float _519;
    if (_405)
    {
        uint _484 = _175 * 3u;
        uvec3 _493 = uvec3(texelFetch(l_geomPositionBuffer, int(_484)).x, texelFetch(l_geomPositionBuffer, int(_484 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_484 + 2u)).x);
        _517 = uintBitsToFloat(_493.x);
        _518 = uintBitsToFloat(_493.y);
        _519 = uintBitsToFloat(_493.z);
    }
    else
    {
        uint _501 = _175 * 2u;
        uvec2 _507 = uvec2(texelFetch(l_geomPositionBuffer, int(_501)).x, texelFetch(l_geomPositionBuffer, int(_501 + 1u)).x);
        uint _508 = _507.x;
        _517 = unpackHalf2x16(_508).x;
        _518 = unpackHalf2x16(_508 >> 16u).x;
        _519 = unpackHalf2x16(_507.y).x;
    }
    float _522 = (1.0 - hit._m0.x) - hit._m0.y;
    float _566 = (_327 - _257) * 0.00048828125;
    float _568 = (_328 - _258) * 0.00048828125;
    float _571 = (_397 - _257) * 0.00048828125;
    float _572 = (_398 - _258) * 0.00048828125;
    float _575 = (_332 - _262) * 0.00048828125;
    float _576 = (_333 - _263) * 0.00048828125;
    float _579 = (_402 - _262) * 0.00048828125;
    float _580 = (_403 - _263) * 0.00048828125;
    float _602 = _479 - _441;
    float _603 = _480 - _442;
    float _604 = _481 - _443;
    float _607 = fma(_604, gl_ObjectToWorldEXT[2u].x, fma(_603, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _602));
    float _610 = fma(_604, gl_ObjectToWorldEXT[2u].y, fma(_603, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _602));
    float _613 = fma(_604, gl_ObjectToWorldEXT[2u].z, fma(_603, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _602));
    float _614 = _517 - _441;
    float _615 = _518 - _442;
    float _616 = _519 - _443;
    float _619 = fma(_616, gl_ObjectToWorldEXT[2u].x, fma(_615, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _614));
    float _622 = fma(_616, gl_ObjectToWorldEXT[2u].y, fma(_615, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _614));
    float _625 = fma(_616, gl_ObjectToWorldEXT[2u].z, fma(_615, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _614));
    float _626 = (((_327 * hit._m0.x) + (_257 * _522)) + (_397 * hit._m0.y)) * 0.00048828125;
    float _627 = (((_328 * hit._m0.x) + (_258 * _522)) + (_398 * hit._m0.y)) * 0.00048828125;
    float _628 = (((_332 * hit._m0.x) + (_262 * _522)) + (_402 * hit._m0.y)) * 0.00048828125;
    float _629 = (((_333 * hit._m0.x) + (_263 * _522)) + (_403 * hit._m0.y)) * 0.00048828125;
    float _633 = (((float(_211) * _522) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _636 = (((float(_212) * _522) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_357) * hit._m0.y);
    float _639 = (((float(_213) * _522) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_358) * hit._m0.y);
    float _640 = _633 * 0.0078740157186985015869140625;
    float _642 = _636 * 0.0078740157186985015869140625;
    float _643 = _639 * 0.0078740157186985015869140625;
    float _656 = ((((float(_223 & 255u) * _522) + (-127.0)) + (float(_296 & 255u) * hit._m0.x)) + (float(_366 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float((_223 >> 8u) & 255u) * _522) + (-127.0)) + (float((_296 >> 8u) & 255u) * hit._m0.x)) + (float((_366 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _658 = ((((float((_223 >> 16u) & 255u) * _522) + (-127.0)) + (float((_296 >> 16u) & 255u) * hit._m0.x)) + (float((_366 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _659 = ((((float(_223 >> 24u) * _522) + (-127.0)) + (float(_296 >> 24u) * hit._m0.x)) + (float(_366 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _669 = ((_657 * _643) - (_658 * _642)) * _659;
    float _670 = ((_658 * _640) - (_656 * _643)) * _659;
    float _671 = ((_656 * _642) - (_657 * _640)) * _659;
    float _675 = inversesqrt(dot(vec3(_669, _670, _671), vec3(_669, _670, _671)));
    uvec2 _696 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, int(0u)));
    bool _701 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _754;
    if (_701)
    {
        float _712 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _718 = (_625 * _610) - (_622 * _613);
        float _721 = (_619 * _613) - (_625 * _607);
        float _724 = (_622 * _607) - (_619 * _610);
        float _751 = ((log2((((float(_696.y) * 0.5) * float(_696.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_721 * _721) + (_724 * _724)) + (_718 * _718)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_712 * gl_WorldRayDirectionEXT.x, _712 * gl_WorldRayDirectionEXT.y, _712 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _754 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    }
    else
    {
        _754 = 0.0;
    }
    vec4 _758 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _626) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _627) + cbTextureTilingScale._m0[10u].w), _754);
    uvec2 _782 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7, int(0u)));
    float _833;
    if (_701)
    {
        float _793 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _799 = (_625 * _610) - (_622 * _613);
        float _802 = (_619 * _613) - (_625 * _607);
        float _805 = (_622 * _607) - (_619 * _610);
        float _831 = ((log2((((float(_782.y) * 0.5) * float(_782.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_802 * _802) + (_805 * _805)) + (_799 * _799)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_793 * gl_WorldRayDirectionEXT.x, _793 * gl_WorldRayDirectionEXT.y, _793 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _833 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    }
    else
    {
        _833 = 0.0;
    }
    float _838 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _626) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _627) + cbTextureTilingScale._m0[11u].w), _833).x;
    float _845 = ((cbMtdParam._m0[14u].z * (-1.39999997615814208984375)) * (((1.0 - _758.x) * 2.0) - _838)) + 1.0;
    float _2328 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _846 = isnan(1.0) ? _2328 : (isnan(_2328) ? 1.0 : min(_2328, 1.0));
    uvec2 _858 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, int(0u)));
    float _909;
    if (_701)
    {
        float _869 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _875 = (_625 * _610) - (_622 * _613);
        float _878 = (_619 * _613) - (_625 * _607);
        float _881 = (_622 * _607) - (_619 * _610);
        float _907 = ((log2((((float(_858.y) * 0.5) * float(_858.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_878 * _878) + (_881 * _881)) + (_875 * _875)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_869 * gl_WorldRayDirectionEXT.x, _869 * gl_WorldRayDirectionEXT.y, _869 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _909 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    }
    else
    {
        _909 = 0.0;
    }
    vec4 _912 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _628) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _629) + cbTextureTilingScale._m0[3u].w), _909);
    uvec2 _929 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, int(0u)));
    float _980;
    if (_701)
    {
        float _940 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _946 = (_625 * _610) - (_622 * _613);
        float _949 = (_619 * _613) - (_625 * _607);
        float _952 = (_622 * _607) - (_619 * _610);
        float _978 = ((log2((((float(_929.y) * 0.5) * float(_929.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_949 * _949) + (_952 * _952)) + (_946 * _946)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_940 * gl_WorldRayDirectionEXT.x, _940 * gl_WorldRayDirectionEXT.y, _940 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _980 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    }
    else
    {
        _980 = 0.0;
    }
    vec4 _982 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _628) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _629) + cbTextureTilingScale._m0[5u].w), _980);
    float _984 = _982.x;
    float _985 = _982.y;
    float _986 = _982.z;
    float _993 = ((_912.x - _984) * _846) + _984;
    float _994 = ((_912.y - _985) * _846) + _985;
    float _995 = ((_912.z - _986) * _846) + _986;
    float _1001 = (((((1.0 - _758.y) * 2.0) - _838) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].z) + 1.0;
    float _2349 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1002 = isnan(1.0) ? _2349 : (isnan(_2349) ? 1.0 : min(_2349, 1.0));
    uvec2 _1014 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, int(0u)));
    float _1065;
    if (_701)
    {
        float _1025 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1031 = (_625 * _610) - (_622 * _613);
        float _1034 = (_619 * _613) - (_625 * _607);
        float _1037 = (_622 * _607) - (_619 * _610);
        float _1063 = ((log2((((float(_1014.y) * 0.5) * float(_1014.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1034 * _1034) + (_1037 * _1037)) + (_1031 * _1031)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1025 * gl_WorldRayDirectionEXT.x, _1025 * gl_WorldRayDirectionEXT.y, _1025 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1065 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    }
    else
    {
        _1065 = 0.0;
    }
    vec4 _1067 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _628) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _629) + cbTextureTilingScale._m0[1u].w), _1065);
    float _1078 = ((_1067.x - _993) * _1002) + _993;
    float _1079 = ((_1067.y - _994) * _1002) + _994;
    float _1080 = ((_1067.z - _995) * _1002) + _995;
    float _1086 = (((((1.0 - _758.z) * 2.0) - _838) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _2365 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1087 = isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0));
    uvec2 _1099 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, int(0u)));
    float _1150;
    if (_701)
    {
        float _1110 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1116 = (_625 * _610) - (_622 * _613);
        float _1119 = (_619 * _613) - (_625 * _607);
        float _1122 = (_622 * _607) - (_619 * _610);
        float _1148 = ((log2((((float(_1099.y) * 0.5) * float(_1099.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1119 * _1119) + (_1122 * _1122)) + (_1116 * _1116)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1110 * gl_WorldRayDirectionEXT.x, _1110 * gl_WorldRayDirectionEXT.y, _1110 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1150 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
    }
    else
    {
        _1150 = 0.0;
    }
    vec4 _1152 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _628) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _629) + cbTextureTilingScale._m0[12u].w), _1150);
    float _1165 = ((_1152.z - _1080) * _1087) + _1080;
    float _1168 = ((((_1152.x - _1078) * _1087) + _1078) * 2.0) + (-1.0);
    float _1170 = ((((_1152.y - _1079) * _1087) + _1079) * 2.0) + (-1.0);
    float _1171 = dot(vec2(_1168, _1170), vec2(_1168, _1170));
    float _2381 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
    float _1176 = sqrt(1.0 - (isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0))));
    float _1177 = fma(_1176, _640, 0.0);
    float _1178 = fma(_1176, _642, 0.0);
    float _1179 = fma(_1176, _643, 0.0);
    float _1188 = exp2(log2(inversesqrt(dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179))) * _1178) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[14u].y;
    float _2392 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
    float _1189 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
    uvec2 _1206 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, int(0u)));
    float _1257;
    if (_701)
    {
        float _1217 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1223 = (_625 * _610) - (_622 * _613);
        float _1226 = (_619 * _613) - (_625 * _607);
        float _1229 = (_622 * _607) - (_619 * _610);
        float _1255 = ((log2((((float(_1206.y) * 0.5) * float(_1206.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1226 * _1226) + (_1229 * _1229)) + (_1223 * _1223)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1217 * gl_WorldRayDirectionEXT.x, _1217 * gl_WorldRayDirectionEXT.y, _1217 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    vec4 _1260 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _628) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _629) + cbTextureTilingScale._m0[6u].w), _1257);
    float _1265 = _1260.x * cbMtdParam._m0[10u].x;
    float _1266 = _1260.y * cbMtdParam._m0[10u].y;
    float _1267 = _1260.z * cbMtdParam._m0[10u].z;
    uvec2 _1284 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, int(0u)));
    float _1335;
    if (_701)
    {
        float _1295 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1301 = (_625 * _610) - (_622 * _613);
        float _1304 = (_619 * _613) - (_625 * _607);
        float _1307 = (_622 * _607) - (_619 * _610);
        float _1333 = ((log2((((float(_1284.y) * 0.5) * float(_1284.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1304 * _1304) + (_1307 * _1307)) + (_1301 * _1301)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1295 * gl_WorldRayDirectionEXT.x, _1295 * gl_WorldRayDirectionEXT.y, _1295 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1335 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
    }
    else
    {
        _1335 = 0.0;
    }
    vec4 _1337 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _628) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _629) + cbTextureTilingScale._m0[4u].w), _1335);
    float _1351 = (((_1337.x * cbMtdParam._m0[11u].x) - _1265) * _846) + _1265;
    float _1352 = (((_1337.y * cbMtdParam._m0[11u].y) - _1266) * _846) + _1266;
    float _1353 = (((_1337.z * cbMtdParam._m0[11u].z) - _1267) * _846) + _1267;
    uvec2 _1370 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, int(0u)));
    float _1421;
    if (_701)
    {
        float _1381 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1387 = (_625 * _610) - (_622 * _613);
        float _1390 = (_619 * _613) - (_625 * _607);
        float _1393 = (_622 * _607) - (_619 * _610);
        float _1419 = ((log2((((float(_1370.y) * 0.5) * float(_1370.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1390 * _1390) + (_1393 * _1393)) + (_1387 * _1387)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1381 * gl_WorldRayDirectionEXT.x, _1381 * gl_WorldRayDirectionEXT.y, _1381 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1421 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    }
    else
    {
        _1421 = 0.0;
    }
    vec4 _1423 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _628) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _629) + cbTextureTilingScale._m0[2u].w), _1421);
    float _1437 = (((_1423.x * cbMtdParam._m0[12u].x) - _1351) * _1002) + _1351;
    float _1438 = (((_1423.y * cbMtdParam._m0[12u].y) - _1352) * _1002) + _1352;
    float _1439 = (((_1423.z * cbMtdParam._m0[12u].z) - _1353) * _1002) + _1353;
    uvec2 _1457 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, int(0u)));
    float _1508;
    if (_701)
    {
        float _1468 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1474 = (_625 * _610) - (_622 * _613);
        float _1477 = (_619 * _613) - (_625 * _607);
        float _1480 = (_622 * _607) - (_619 * _610);
        float _1506 = ((log2((((float(_1457.y) * 0.5) * float(_1457.x)) * abs((_580 * _575) - (_579 * _576))) / (sqrt(((_1477 * _1477) + (_1480 * _1480)) + (_1474 * _1474)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1468 * gl_WorldRayDirectionEXT.x, _1468 * gl_WorldRayDirectionEXT.y, _1468 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1508 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
    }
    else
    {
        _1508 = 0.0;
    }
    vec4 _1510 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _628) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _629) + cbTextureTilingScale._m0[13u].w), _1508);
    uvec2 _1544 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, int(0u)));
    float _1595;
    if (_701)
    {
        float _1555 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1561 = (_625 * _610) - (_622 * _613);
        float _1564 = (_619 * _613) - (_625 * _607);
        float _1567 = (_622 * _607) - (_619 * _610);
        float _1593 = ((log2((((float(_1544.y) * 0.5) * float(_1544.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1564 * _1564) + (_1567 * _1567)) + (_1561 * _1561)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1555 * gl_WorldRayDirectionEXT.x, _1555 * gl_WorldRayDirectionEXT.y, _1555 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1595 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
    }
    else
    {
        _1595 = 0.0;
    }
    vec4 _1597 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _626) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _627) + cbTextureTilingScale._m0[0u].w), _1595);
    float _1605 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_1510.x * cbMtdParam._m0[13u].x) - _1437) * _1087) + _1437)) * _1597.x;
    float _1608 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_1510.y * cbMtdParam._m0[13u].y) - _1438) * _1087) + _1438)) * _1597.y;
    float _1611 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_1510.z * cbMtdParam._m0[13u].z) - _1439) * _1087) + _1439)) * _1597.z;
    uvec2 _1623 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5, int(0u)));
    float _1674;
    if (_701)
    {
        float _1634 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1640 = (_625 * _610) - (_622 * _613);
        float _1643 = (_619 * _613) - (_625 * _607);
        float _1646 = (_622 * _607) - (_619 * _610);
        float _1672 = ((log2((((float(_1623.y) * 0.5) * float(_1623.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1643 * _1643) + (_1646 * _1646)) + (_1640 * _1640)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1634 * gl_WorldRayDirectionEXT.x, _1634 * gl_WorldRayDirectionEXT.y, _1634 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1674 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
    }
    else
    {
        _1674 = 0.0;
    }
    vec4 _1676 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _626) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _627) + cbTextureTilingScale._m0[9u].w), _1674);
    float _1687 = ((_1676.x - _1605) * _1189) + _1605;
    float _1688 = ((_1676.y - _1608) * _1189) + _1608;
    float _1689 = ((_1676.z - _1611) * _1189) + _1611;
    uvec2 _1701 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3, int(0u)));
    float _1752;
    if (_701)
    {
        float _1712 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1718 = (_625 * _610) - (_622 * _613);
        float _1721 = (_619 * _613) - (_625 * _607);
        float _1724 = (_622 * _607) - (_619 * _610);
        float _1750 = ((log2((((float(_1701.y) * 0.5) * float(_1701.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1721 * _1721) + (_1724 * _1724)) + (_1718 * _1718)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1712 * gl_WorldRayDirectionEXT.x, _1712 * gl_WorldRayDirectionEXT.y, _1712 * gl_WorldRayDirectionEXT.z), vec3(_640, _642, _643))));
        _1752 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
    }
    else
    {
        _1752 = 0.0;
    }
    vec4 _1754 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _626) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _627) + cbTextureTilingScale._m0[8u].w), _1752);
    float _1761 = (_1754.x * 2.0) + (-1.0);
    float _1762 = (_1754.y * 2.0) + (-1.0);
    float _1763 = dot(vec2(_1761, _1762), vec2(_1761, _1762));
    float _2438 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
    float _1771 = ((_1754.z - _1165) * _1189) + _1165;
    float _1780 = ((sqrt(1.0 - (isnan(1.0) ? _2438 : (isnan(_2438) ? 1.0 : min(_2438, 1.0)))) - _1176) * _1189) + _1176;
    uvec2 _1793 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, int(0u)));
    float _1797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1798 = _1797 * gl_WorldRayDirectionEXT.x;
    float _1799 = _1797 * gl_WorldRayDirectionEXT.y;
    float _1800 = _1797 * gl_WorldRayDirectionEXT.z;
    float _1844;
    if (_701)
    {
        float _1810 = (_625 * _610) - (_622 * _613);
        float _1813 = (_619 * _613) - (_625 * _607);
        float _1816 = (_622 * _607) - (_619 * _610);
        float _1842 = ((log2((((float(_1793.y) * 0.5) * float(_1793.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1813 * _1813) + (_1816 * _1816)) + (_1810 * _1810)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1798, _1799, _1800), vec3(_640, _642, _643))));
        _1844 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
    }
    else
    {
        _1844 = 0.0;
    }
    vec4 _1846 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _626) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _627) + cbTextureTilingScale._m0[7u].w), _1844);
    float _1856 = (((_1761 - _1168) * _1189) + _1168) + (((_1846.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].w);
    float _1857 = (((_1762 - _1170) * _1189) + _1170) + (((_1846.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].w);
    float _1860 = fma(_1780, _640, fma(_1857, _656, (_675 * _669) * _1856));
    float _1863 = fma(_1780, _642, fma(_1857, _657, (_675 * _670) * _1856));
    float _1866 = fma(_1780, _643, fma(_1857, _658, (_675 * _671) * _1856));
    float _1870 = inversesqrt(dot(vec3(_1860, _1863, _1866), vec3(_1860, _1863, _1866)));
    float _1871 = _1870 * _1860;
    float _1872 = _1870 * _1863;
    float _1873 = _1870 * _1866;
    float _1885 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1886 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1887 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1888 = (-0.0) - _1798;
    float _1890 = (-0.0) - _1799;
    float _1891 = (-0.0) - _1800;
    float _1897 = float(gl_LaunchIDEXT.x);
    float _1898 = float(gl_LaunchIDEXT.y);
    float _1901 = float(gl_LaunchSizeEXT.x);
    float _1915 = fract(fract(sin(dot(vec2(_1897 / _1901, _1898 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1928 = fract(fract(sin(dot(vec2((_1897 + 128.0) / _1901, (_1898 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _73._m0 = 1u;
    uvec4 _1938 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1939 = _1938.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1939, _1938.w, _1939, vec3(_1885, _1886, _1887), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2047;
    float _2048;
    float _2049;
    float _2050;
    float _2051;
    float _2052;
    if (_73._m0 == 0u)
    {
        float _1959 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1871, _1872, _1873));
        float _2454 = isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0));
        float _1962 = isnan(1.0) ? _2454 : (isnan(_2454) ? 1.0 : min(_2454, 1.0));
        float _1981 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1771) * 0.949999988079071044921875);
        float _1982 = _1981 * _1981;
        float _1983 = g_sceneCB._m0[4u].x - _1798;
        float _1984 = g_sceneCB._m0[4u].y - _1799;
        float _1985 = g_sceneCB._m0[4u].z - _1800;
        float _1989 = inversesqrt(dot(vec3(_1983, _1984, _1985), vec3(_1983, _1984, _1985)));
        float _1990 = _1989 * _1983;
        float _1991 = _1989 * _1984;
        float _1992 = _1989 * _1985;
        float _1993 = dot(vec3(_1871, _1872, _1873), vec3(g_sceneCB._m0[4u].xyz));
        float _2465 = isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0));
        float _1996 = isnan(1.0) ? _2465 : (isnan(_2465) ? 1.0 : min(_2465, 1.0));
        float _1997 = dot(vec3(_1871, _1872, _1873), vec3(_1888, _1890, _1891));
        float _2476 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _2000 = isnan(1.0) ? _2476 : (isnan(_2476) ? 1.0 : min(_2476, 1.0));
        float _2001 = dot(vec3(_1871, _1872, _1873), vec3(_1990, _1991, _1992));
        float _2487 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2004 = isnan(1.0) ? _2487 : (isnan(_2487) ? 1.0 : min(_2487, 1.0));
        float _2005 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1990, _1991, _1992));
        float _2498 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0));
        float _2009 = _1982 * _1982;
        float _2013 = ((_2004 * _2004) * (_2009 + (-1.0))) + 1.0;
        float _2025 = (exp2(log2(1.0 - (isnan(1.0) ? _2498 : (isnan(_2498) ? 1.0 : min(_2498, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2027 = 1.0 - _1982;
        float _2038 = (0.5 / (((_2000 * ((_1996 * _2027) + _1982)) + 9.9999999392252902907785028219223e-09) + (((_2000 * _2027) + _1982) * _1996))) * _1996;
        float _2509 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
        float _2040 = (isnan(1.0) ? _2509 : (isnan(_2509) ? 1.0 : min(_2509, 1.0))) * (_2009 / ((_2013 * _2013) * 3.141590118408203125));
        _2047 = ((_1687 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1962;
        _2048 = ((_1688 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1962;
        _2049 = ((_1689 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1962;
        _2050 = (_2025 * g_sceneCB._m0[5u].x) * _2040;
        _2051 = (_2025 * g_sceneCB._m0[5u].y) * _2040;
        _2052 = (_2025 * g_sceneCB._m0[5u].z) * _2040;
    }
    else
    {
        _2047 = 0.0;
        _2048 = 0.0;
        _2049 = 0.0;
        _2050 = 0.0;
        _2051 = 0.0;
        _2052 = 0.0;
    }
    bool _2054 = abs(_1872) < 0.89999997615814208984375;
    float _2056 = float(_2054);
    float _2057 = _2054 ? 0.0 : 1.0;
    float _2060 = (_2056 * _1873) - (_2057 * _1872);
    float _2061 = _2057 * _1871;
    float _2063 = (-0.0) - (_1871 * _2056);
    float _2067 = inversesqrt(dot(vec3(_2060, _2061, _2063), vec3(_2060, _2061, _2063)));
    float _2068 = _2060 * _2067;
    float _2069 = _2061 * _2067;
    float _2070 = _2067 * _2063;
    float _2073 = (_2069 * _1873) - (_2070 * _1872);
    float _2076 = (_2070 * _1871) - (_2068 * _1873);
    float _2079 = (_2068 * _1872) - (_2069 * _1871);
    float _2081;
    float _2089;
    float _2080 = 0.0;
    uint _2082 = 0u;
    float _2086;
    bool _2088;
    for (;;)
    {
        _2086 = (float(_2082) + _1915) * 0.03125;
        _2088 = _2082 == 0u;
        float frontier_phi_67_pred;
        if (_2088)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2223;
            float _2224;
            uint _2226;
            _2223 = 0.0;
            _2224 = 0.5;
            _2226 = _2082;
            float _2090;
            for (;;)
            {
                _2090 = ((_2226 & 1u) != 0u) ? (_2224 + _2223) : _2223;
                uint _2227 = _2226 >> 1u;
                if (_2227 == 0u)
                {
                    break;
                }
                else
                {
                    _2223 = _2090;
                    _2224 *= 0.5;
                    _2226 = _2227;
                }
            }
            frontier_phi_67_pred = _2090;
        }
        _2089 = frontier_phi_67_pred;
        float _2091 = _2089 + _1928;
        float _2095 = sqrt(_2086);
        float _2096 = ((_2091 > 1.0) ? (_2091 + (-1.0)) : _2091) * 6.283185482025146484375;
        float _2099 = cos(_2096) * _2095;
        float _2101 = sin(_2096) * _2095;
        float _2103 = sqrt(1.0 - _2086);
        float _2116 = ((_2103 * _1871) + (_2099 * _2073)) + (_2101 * _2068);
        float _2117 = ((_2103 * _1872) + (_2099 * _2076)) + (_2101 * _2069);
        float _2118 = ((_2103 * _1873) + (_2099 * _2079)) + (_2101 * _2070);
        _72._m0 = 1u;
        uvec4 _2122 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2123 = _2122.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2123, _2122.w, _2123, vec3(_1885, _1886, _1887), 9.9999997473787516355514526367188e-05, vec3(_2116, _2117, _2118), 10000.0, 1);
        float _2129 = dot(vec3(_1871, _1872, _1873), vec3(_2116, _2117, _2118));
        float _2520 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
        float _2132 = isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0));
        _2081 = ((float(_72._m0 == 0u) * _2132) / (_2132 * 0.3183098733425140380859375)) + _2080;
        uint _2083 = _2082 + 1u;
        if (_2083 == 32u)
        {
            break;
        }
        else
        {
            _2080 = _2081;
            _2082 = _2083;
            continue;
        }
    }
    float _2140 = _2081 * 0.009947183541953563690185546875;
    float _2145 = dot(vec3(_1798, _1799, _1800), vec3(_1871, _1872, _1873)) * 2.0;
    vec4 _2159 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1798 - (_2145 * _1871), _1799 - (_2145 * _1872), _1800 - (_2145 * _1873)), 4.0 - (_1771 * 4.0));
    float _2164 = dot(vec3(_1888, _1890, _1891), vec3(_1871, _1872, _1873));
    float _2531 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
    float _2173 = (exp2(log2(1.0 - (isnan(1.0) ? _2531 : (isnan(_2531) ? 1.0 : min(_2531, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2179 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1871, _1872, _1873), 0.0);
    float _2190 = (_2050 + _2047) + (((_2179.x * _1687) + (_2173 * _2159.x)) * _2140);
    float _2194 = (_2051 + _2048) + (((_2179.y * _1688) + (_2173 * _2159.y)) * _2140);
    float _2198 = (_2052 + _2049) + (((_2179.z * _1689) + (_2173 * _2159.z)) * _2140);
    float _2542 = isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0));
    float _2553 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2564 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    bool _2206 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2217;
    _2217.x = _2206 ? ((_633 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2542 : (isnan(_2542) ? 1.0 : min(_2542, 1.0)));
    _2217.y = _2206 ? ((_636 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2553 : (isnan(_2553) ? 1.0 : min(_2553, 1.0)));
    _2217.z = _2206 ? ((_639 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2564 : (isnan(_2564) ? 1.0 : min(_2564, 1.0)));
    payload._m0 = _2217;
}


