#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _76
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[29];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0;
layout(set = 0, binding = 14) uniform texture2DArray C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _76 _78;
layout(location = 2) rayPayloadEXT _76 _79;

vec3 _1990;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _117 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _119 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _126 = sqrt(((_118 * _118) + (_117 * _117)) + (_119 * _119)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _137 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _138 = _137.y;
    uint _178;
    uint _180;
    uint _181;
    if (_137.x == 0u)
    {
        uint _146 = (_138 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _155 = uvec3(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_146 + 2u)).x);
        _178 = _155.x;
        _180 = _155.y;
        _181 = _155.z;
    }
    else
    {
        uint _159 = uint(gl_PrimitiveID) * 6u;
        uint _161 = _159 & 4294967292u;
        uint _164 = (_138 + _161) >> 2u;
        uvec2 _171 = uvec2(texelFetch(l_geomIndexBuffer, int(_164)).x, texelFetch(l_geomIndexBuffer, int(_164 + 1u)).x);
        uint _172 = _171.x;
        uint _173 = _171.y;
        uint _175 = _172 >> 16u;
        uint _176 = _173 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_161 == _159)
        {
            frontier_phi_3_2_ladder = _172 & 65535u;
            frontier_phi_3_2_ladder_1 = _176;
            frontier_phi_3_2_ladder_2 = _175;
        }
        else
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _173 >> 16u;
            frontier_phi_3_2_ladder_2 = _176;
        }
        _178 = frontier_phi_3_2_ladder;
        _180 = frontier_phi_3_2_ladder_2;
        _181 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _185 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _186 = _185.x;
    uint _187 = _185.z;
    bool _188 = _187 != 0u;
    bool _190 = _137.w == 0u;
    bool _191 = _188 || _190;
    uint _192 = _186 * _178;
    uint _193 = _192 + 12u;
    uint _217;
    uint _218;
    uint _219;
    uint _220;
    if (_191)
    {
        uvec4 _196 = texelFetch(l_geomAttrib_0, int(_193 >> 2u));
        uint _197 = _196.x;
        _217 = _197 & 255u;
        _218 = (_197 >> 8u) & 255u;
        _219 = (_197 >> 16u) & 255u;
        _220 = 16u;
    }
    else
    {
        uint _205 = _193 >> 2u;
        uvec2 _211 = uvec2(texelFetch(l_geomAttrib_0, int(_205)).x, texelFetch(l_geomAttrib_0, int(_205 + 1u)).x);
        uint _212 = _211.x;
        _217 = _212 & 65535u;
        _218 = _212 >> 16u;
        _219 = _211.y & 65535u;
        _220 = 20u;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((_220 + _192) >> 2u));
    uint _229 = _228.x;
    bool _243 = _187 == 0u;
    uint _244;
    if (_243)
    {
        _244 = _220 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_190)
        {
            frontier_phi_9_10_ladder = _220 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _220 + 12u;
        }
        _244 = frontier_phi_9_10_ladder;
    }
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_192 + 4u) + (_188 ? (_244 + 4u) : _244)) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uint _259 = _186 * _180;
    uint _260 = _259 + 12u;
    uint _281;
    uint _282;
    uint _283;
    uint _284;
    if (_191)
    {
        uvec4 _262 = texelFetch(l_geomAttrib_0, int(_260 >> 2u));
        uint _263 = _262.x;
        _281 = _263 & 255u;
        _282 = (_263 >> 8u) & 255u;
        _283 = (_263 >> 16u) & 255u;
        _284 = 16u;
    }
    else
    {
        uint _269 = _260 >> 2u;
        uvec2 _275 = uvec2(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x);
        uint _276 = _275.x;
        _281 = _276 & 65535u;
        _282 = _276 >> 16u;
        _283 = _275.y & 65535u;
        _284 = 20u;
    }
    uvec4 _290 = texelFetch(l_geomAttrib_0, int((_284 + _259) >> 2u));
    uint _291 = _290.x;
    uint _303;
    if (_243)
    {
        _303 = _284 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_190)
        {
            frontier_phi_16_17_ladder = _284 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _284 + 12u;
        }
        _303 = frontier_phi_16_17_ladder;
    }
    uvec4 _311 = texelFetch(l_geomAttrib_0, int(((_259 + 4u) + (_188 ? (_303 + 4u) : _303)) >> 2u));
    uint _312 = _311.x;
    float _316 = float(int(uint(int(_312 << 16u) >> int(16u))));
    float _317 = float(int(uint(int(_312) >> int(16u))));
    uint _318 = _186 * _181;
    uint _319 = _318 + 12u;
    uint _340;
    uint _341;
    uint _342;
    uint _343;
    if (_191)
    {
        uvec4 _321 = texelFetch(l_geomAttrib_0, int(_319 >> 2u));
        uint _322 = _321.x;
        _340 = _322 & 255u;
        _341 = (_322 >> 8u) & 255u;
        _342 = (_322 >> 16u) & 255u;
        _343 = 16u;
    }
    else
    {
        uint _328 = _319 >> 2u;
        uvec2 _334 = uvec2(texelFetch(l_geomAttrib_0, int(_328)).x, texelFetch(l_geomAttrib_0, int(_328 + 1u)).x);
        uint _335 = _334.x;
        _340 = _335 & 65535u;
        _341 = _335 >> 16u;
        _342 = _334.y & 65535u;
        _343 = 20u;
    }
    uvec4 _349 = texelFetch(l_geomAttrib_0, int((_343 + _318) >> 2u));
    uint _350 = _349.x;
    uint _362;
    if (_243)
    {
        _362 = _343 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_190)
        {
            frontier_phi_23_24_ladder = _343 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _343 + 12u;
        }
        _362 = frontier_phi_23_24_ladder;
    }
    uvec4 _370 = texelFetch(l_geomAttrib_0, int(((_318 + 4u) + (_188 ? (_362 + 4u) : _362)) >> 2u));
    uint _371 = _370.x;
    float _375 = float(int(uint(int(_371 << 16u) >> int(16u))));
    float _376 = float(int(uint(int(_371) >> int(16u))));
    bool _378 = _137.z == 0u;
    float _414;
    float _415;
    float _416;
    if (_378)
    {
        uint _381 = _178 * 3u;
        uvec3 _390 = uvec3(texelFetch(l_geomPositionBuffer, int(_381)).x, texelFetch(l_geomPositionBuffer, int(_381 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_381 + 2u)).x);
        _414 = uintBitsToFloat(_390.x);
        _415 = uintBitsToFloat(_390.y);
        _416 = uintBitsToFloat(_390.z);
    }
    else
    {
        uint _398 = _178 * 2u;
        uvec2 _404 = uvec2(texelFetch(l_geomPositionBuffer, int(_398)).x, texelFetch(l_geomPositionBuffer, int(_398 + 1u)).x);
        uint _405 = _404.x;
        _414 = unpackHalf2x16(_405).x;
        _415 = unpackHalf2x16(_405 >> 16u).x;
        _416 = unpackHalf2x16(_404.y).x;
    }
    float _452;
    float _453;
    float _454;
    if (_378)
    {
        uint _419 = _180 * 3u;
        uvec3 _428 = uvec3(texelFetch(l_geomPositionBuffer, int(_419)).x, texelFetch(l_geomPositionBuffer, int(_419 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_419 + 2u)).x);
        _452 = uintBitsToFloat(_428.x);
        _453 = uintBitsToFloat(_428.y);
        _454 = uintBitsToFloat(_428.z);
    }
    else
    {
        uint _436 = _180 * 2u;
        uvec2 _442 = uvec2(texelFetch(l_geomPositionBuffer, int(_436)).x, texelFetch(l_geomPositionBuffer, int(_436 + 1u)).x);
        uint _443 = _442.x;
        _452 = unpackHalf2x16(_443).x;
        _453 = unpackHalf2x16(_443 >> 16u).x;
        _454 = unpackHalf2x16(_442.y).x;
    }
    float _490;
    float _491;
    float _492;
    if (_378)
    {
        uint _457 = _181 * 3u;
        uvec3 _466 = uvec3(texelFetch(l_geomPositionBuffer, int(_457)).x, texelFetch(l_geomPositionBuffer, int(_457 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_457 + 2u)).x);
        _490 = uintBitsToFloat(_466.x);
        _491 = uintBitsToFloat(_466.y);
        _492 = uintBitsToFloat(_466.z);
    }
    else
    {
        uint _474 = _181 * 2u;
        uvec2 _480 = uvec2(texelFetch(l_geomPositionBuffer, int(_474)).x, texelFetch(l_geomPositionBuffer, int(_474 + 1u)).x);
        uint _481 = _480.x;
        _490 = unpackHalf2x16(_481).x;
        _491 = unpackHalf2x16(_481 >> 16u).x;
        _492 = unpackHalf2x16(_480.y).x;
    }
    float _495 = (1.0 - hit._m0.x) - hit._m0.y;
    float _529 = (_316 - _257) * 0.00048828125;
    float _531 = (_317 - _258) * 0.00048828125;
    float _534 = (_375 - _257) * 0.00048828125;
    float _535 = (_376 - _258) * 0.00048828125;
    float _557 = _452 - _414;
    float _558 = _453 - _415;
    float _559 = _454 - _416;
    float _562 = fma(_559, gl_ObjectToWorldEXT[2u].x, fma(_558, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _557));
    float _565 = fma(_559, gl_ObjectToWorldEXT[2u].y, fma(_558, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _557));
    float _568 = fma(_559, gl_ObjectToWorldEXT[2u].z, fma(_558, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _557));
    float _569 = _490 - _414;
    float _570 = _491 - _415;
    float _571 = _492 - _416;
    float _574 = fma(_571, gl_ObjectToWorldEXT[2u].x, fma(_570, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _569));
    float _577 = fma(_571, gl_ObjectToWorldEXT[2u].y, fma(_570, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _569));
    float _580 = fma(_571, gl_ObjectToWorldEXT[2u].z, fma(_570, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _569));
    float _581 = (((_316 * hit._m0.x) + (_257 * _495)) + (_375 * hit._m0.y)) * 0.00048828125;
    float _582 = (((_317 * hit._m0.x) + (_258 * _495)) + (_376 * hit._m0.y)) * 0.00048828125;
    float _586 = (((float(_217) * _495) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_340) * hit._m0.y);
    float _589 = (((float(_218) * _495) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_341) * hit._m0.y);
    float _592 = (((float(_219) * _495) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _593 = _586 * 0.0078740157186985015869140625;
    float _595 = _589 * 0.0078740157186985015869140625;
    float _596 = _592 * 0.0078740157186985015869140625;
    float _609 = ((((float(_229 & 255u) * _495) + (-127.0)) + (float(_291 & 255u) * hit._m0.x)) + (float(_350 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _610 = ((((float((_229 >> 8u) & 255u) * _495) + (-127.0)) + (float((_291 >> 8u) & 255u) * hit._m0.x)) + (float((_350 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _611 = ((((float((_229 >> 16u) & 255u) * _495) + (-127.0)) + (float((_291 >> 16u) & 255u) * hit._m0.x)) + (float((_350 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _612 = ((((float(_229 >> 24u) * _495) + (-127.0)) + (float(_291 >> 24u) * hit._m0.x)) + (float(_350 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _622 = ((_610 * _596) - (_611 * _595)) * _612;
    float _623 = ((_611 * _593) - (_609 * _596)) * _612;
    float _624 = ((_609 * _595) - (_610 * _593)) * _612;
    float _628 = inversesqrt(dot(vec3(_622, _623, _624), vec3(_622, _623, _624)));
    uvec2 _644 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7, int(0u)));
    bool _649 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _702;
    if (_649)
    {
        float _660 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _666 = (_580 * _565) - (_577 * _568);
        float _669 = (_574 * _568) - (_580 * _562);
        float _672 = (_577 * _562) - (_574 * _565);
        float _699 = ((log2((((float(_644.y) * 0.5) * float(_644.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_669 * _669) + (_672 * _672)) + (_666 * _666)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_660 * gl_WorldRayDirectionEXT.x, _660 * gl_WorldRayDirectionEXT.y, _660 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _702 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    }
    else
    {
        _702 = 0.0;
    }
    vec4 _706 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _581) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _582) + cbTextureTilingScale._m0[10u].w), _702);
    float _715 = log2(0.0);
    float _717 = exp2(_715 * cbMtdParam._m0[22u].x);
    float _718 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _719 = isnan(1.0) ? _718 : (isnan(_718) ? 1.0 : min(_718, 1.0));
    uvec2 _732 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _783;
    if (_649)
    {
        float _743 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _749 = (_580 * _565) - (_577 * _568);
        float _752 = (_574 * _568) - (_580 * _562);
        float _755 = (_577 * _562) - (_574 * _565);
        float _781 = ((log2((((float(_732.y) * 0.5) * float(_732.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_752 * _752) + (_755 * _755)) + (_749 * _749)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_743 * gl_WorldRayDirectionEXT.x, _743 * gl_WorldRayDirectionEXT.y, _743 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _783 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    }
    else
    {
        _783 = 0.0;
    }
    vec4 _786 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _581) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _582) + cbTextureTilingScale._m0[0u].w), _783);
    float _790 = _786.z;
    float _799 = exp2(log2(_790 * cbMtdParam._m0[22u].y) * cbMtdParam._m0[21u].y);
    float _800 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _801 = isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0));
    uvec2 _813 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14, int(0u)));
    float _864;
    if (_649)
    {
        float _824 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _830 = (_580 * _565) - (_577 * _568);
        float _833 = (_574 * _568) - (_580 * _562);
        float _836 = (_577 * _562) - (_574 * _565);
        float _862 = ((log2((((float(_813.y) * 0.5) * float(_813.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_833 * _833) + (_836 * _836)) + (_830 * _830)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_824 * gl_WorldRayDirectionEXT.x, _824 * gl_WorldRayDirectionEXT.y, _824 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _864 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    }
    else
    {
        _864 = 0.0;
    }
    float _876 = roundEven(5.0 - ((textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _581) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _582) + cbTextureTilingScale._m0[2u].w), _864).x + (-0.02500000037252902984619140625)) * 8.0));
    float _877 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _878 = isnan(4.0) ? _877 : (isnan(_877) ? 4.0 : min(_877, 4.0));
    float _891 = floor(_878);
    vec4 _895 = textureLod(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[13u].x * _581) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _582) + cbTextureTilingScale._m0[13u].w, _891), 0.0);
    uvec2 _919 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _970;
    if (_649)
    {
        float _930 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _936 = (_580 * _565) - (_577 * _568);
        float _939 = (_574 * _568) - (_580 * _562);
        float _942 = (_577 * _562) - (_574 * _565);
        float _968 = ((log2((((float(_919.y) * 0.5) * float(_919.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_939 * _939) + (_942 * _942)) + (_936 * _936)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_930 * gl_WorldRayDirectionEXT.x, _930 * gl_WorldRayDirectionEXT.y, _930 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _970 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    }
    else
    {
        _970 = 0.0;
    }
    vec4 _972 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _581) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _582) + cbTextureTilingScale._m0[1u].w), _970);
    float _983 = cbMtdParam._m0[9u].x * _972.x;
    float _984 = cbMtdParam._m0[9u].y * _972.y;
    float _985 = cbMtdParam._m0[9u].z * _972.z;
    float _992 = (((cbMtdParam._m0[10u].x * _895.x) - _983) * _801) + _983;
    float _993 = (((cbMtdParam._m0[10u].y * _895.y) - _984) * _801) + _984;
    float _994 = (((cbMtdParam._m0[10u].z * _895.z) - _985) * _801) + _985;
    float _998 = exp2(log2(_786.w) * cbMtdParam._m0[22u].w);
    uvec2 _1010 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    float _1061;
    if (_649)
    {
        float _1021 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1027 = (_580 * _565) - (_577 * _568);
        float _1030 = (_574 * _568) - (_580 * _562);
        float _1033 = (_577 * _562) - (_574 * _565);
        float _1059 = ((log2((((float(_1010.y) * 0.5) * float(_1010.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1030 * _1030) + (_1033 * _1033)) + (_1027 * _1027)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1021 * gl_WorldRayDirectionEXT.x, _1021 * gl_WorldRayDirectionEXT.y, _1021 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1061 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    }
    else
    {
        _1061 = 0.0;
    }
    vec4 _1063 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _581) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _582) + cbTextureTilingScale._m0[7u].w), _1061);
    float _1082 = (((cbMtdParam._m0[16u].x * _1063.x) - _992) * _998) + _992;
    float _1083 = (((cbMtdParam._m0[16u].y * _1063.y) - _993) * _998) + _993;
    float _1084 = (((cbMtdParam._m0[16u].z * _1063.z) - _994) * _998) + _994;
    uvec2 _1096 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _1147;
    if (_649)
    {
        float _1107 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1113 = (_580 * _565) - (_577 * _568);
        float _1116 = (_574 * _568) - (_580 * _562);
        float _1119 = (_577 * _562) - (_574 * _565);
        float _1145 = ((log2((((float(_1096.y) * 0.5) * float(_1096.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1116 * _1116) + (_1119 * _1119)) + (_1113 * _1113)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1107 * gl_WorldRayDirectionEXT.x, _1107 * gl_WorldRayDirectionEXT.y, _1107 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1147 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    }
    else
    {
        _1147 = 0.0;
    }
    vec4 _1149 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _581) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _582) + cbTextureTilingScale._m0[8u].w), _1147);
    float _1174 = (_706.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _1149.x) - _1082) * _719) + _1082);
    float _1176 = (_706.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _1149.y) - _1083) * _719) + _1083);
    float _1178 = (_706.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _1149.z) - _1084) * _719) + _1084);
    float _74[5];
    float _75[5];
    _74[0u] = cbMtdParam._m0[25u].w;
    _75[0u] = cbMtdParam._m0[26u].x;
    _74[1u] = cbMtdParam._m0[27u].w;
    _75[1u] = cbMtdParam._m0[28u].x;
    _74[2u] = cbMtdParam._m0[27u].y;
    _75[2u] = cbMtdParam._m0[27u].z;
    _74[3u] = cbMtdParam._m0[26u].w;
    _75[3u] = cbMtdParam._m0[27u].x;
    _74[4u] = cbMtdParam._m0[26u].y;
    _75[4u] = cbMtdParam._m0[26u].z;
    float _1216 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    uint _1218 = uint(int(isnan(4.0) ? _1216 : (isnan(_1216) ? 4.0 : min(_1216, 4.0))));
    float _1225 = ((_75[_1218] - cbMtdParam._m0[21u].z) * _801) + cbMtdParam._m0[21u].z;
    float _1228 = ((cbMtdParam._m0[21u].w - _1225) * _998) + _1225;
    float _1231 = ((cbMtdParam._m0[24u].y - _1228) * _719) + _1228;
    vec4 _1249 = textureLod(sampler2DArray(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[14u].x * _581) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _582) + cbTextureTilingScale._m0[14u].w, _891), 0.0);
    uvec2 _1266 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _1317;
    if (_649)
    {
        float _1277 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1283 = (_580 * _565) - (_577 * _568);
        float _1286 = (_574 * _568) - (_580 * _562);
        float _1289 = (_577 * _562) - (_574 * _565);
        float _1315 = ((log2((((float(_1266.y) * 0.5) * float(_1266.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1286 * _1286) + (_1289 * _1289)) + (_1283 * _1283)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1277 * gl_WorldRayDirectionEXT.x, _1277 * gl_WorldRayDirectionEXT.y, _1277 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1317 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
    }
    else
    {
        _1317 = 0.0;
    }
    vec4 _1319 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _581) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _582) + cbTextureTilingScale._m0[9u].w), _1317);
    float _1321 = _1319.x;
    float _1322 = _1319.y;
    float _1325 = cbMtdParam._m0[21u].x + _1319.z;
    float _1328 = (((_1249.z + _74[_1218]) - _1325) * _801) + _1325;
    uvec2 _1341 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8, int(0u)));
    float _1392;
    if (_649)
    {
        float _1352 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1358 = (_580 * _565) - (_577 * _568);
        float _1361 = (_574 * _568) - (_580 * _562);
        float _1364 = (_577 * _562) - (_574 * _565);
        float _1390 = ((log2((((float(_1341.y) * 0.5) * float(_1341.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1361 * _1361) + (_1364 * _1364)) + (_1358 * _1358)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1352 * gl_WorldRayDirectionEXT.x, _1352 * gl_WorldRayDirectionEXT.y, _1352 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1392 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    }
    else
    {
        _1392 = 0.0;
    }
    vec4 _1394 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _581) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _582) + cbTextureTilingScale._m0[11u].w), _1392);
    float _1403 = (((_1394.z - _1328) + cbMtdParam._m0[25u].y) * _998) + _1328;
    float _1408 = ((((_790 * 2.0) * _1403) - _1403) * cbMtdParam._m0[23u].w) + _1403;
    uvec2 _1420 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9, int(0u)));
    float _1471;
    if (_649)
    {
        float _1431 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1437 = (_580 * _565) - (_577 * _568);
        float _1440 = (_574 * _568) - (_580 * _562);
        float _1443 = (_577 * _562) - (_574 * _565);
        float _1469 = ((log2((((float(_1420.y) * 0.5) * float(_1420.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1440 * _1440) + (_1443 * _1443)) + (_1437 * _1437)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1431 * gl_WorldRayDirectionEXT.x, _1431 * gl_WorldRayDirectionEXT.y, _1431 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1471 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    }
    else
    {
        _1471 = 0.0;
    }
    vec4 _1473 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _581) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _582) + cbTextureTilingScale._m0[12u].w), _1471);
    float _1482 = (((_1473.z - _1408) + cbMtdParam._m0[22u].z) * _719) + _1408;
    uvec2 _1500 = uvec2(textureSize(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19, int(0u)));
    float _1504 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1505 = _1504 * gl_WorldRayDirectionEXT.x;
    float _1506 = _1504 * gl_WorldRayDirectionEXT.y;
    float _1507 = _1504 * gl_WorldRayDirectionEXT.z;
    float _1551;
    if (_649)
    {
        float _1517 = (_580 * _565) - (_577 * _568);
        float _1520 = (_574 * _568) - (_580 * _562);
        float _1523 = (_577 * _562) - (_574 * _565);
        float _1549 = ((log2((((float(_1500.y) * 0.5) * float(_1500.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1520 * _1520) + (_1523 * _1523)) + (_1517 * _1517)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1505, _1506, _1507), vec3(_593, _595, _596))));
        _1551 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    }
    else
    {
        _1551 = 0.0;
    }
    vec4 _1553 = textureLod(sampler2D(C_Enemy_ColorMaterial_Emissive_Glow_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _581) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _582) + cbTextureTilingScale._m0[6u].w), _1551);
    float _1574 = ((_1249.x - _1321) * _801) + _1321;
    float _1575 = ((_1249.y - _1322) * _801) + _1322;
    float _1580 = ((_1394.x - _1574) * _998) + _1574;
    float _1581 = ((_1394.y - _1575) * _998) + _1575;
    float _1590 = ((((_1473.x - _1580) * _719) + _1580) * 2.0) + (-1.0);
    float _1591 = ((((_1473.y - _1581) * _719) + _1581) * 2.0) + (-1.0);
    float _1592 = dot(vec2(_1590, _1591), vec2(_1590, _1591));
    float _2172 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    float _1597 = sqrt(1.0 - (isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0))));
    float _1600 = (cbMtdParam._m0[24u].z * ((_786.x * 2.0) + (-1.0))) + _1590;
    float _1601 = (cbMtdParam._m0[24u].z * ((_786.y * 2.0) + (-1.0))) + _1591;
    float _1604 = fma(_1597, _593, fma(_1601, _609, (_628 * _622) * _1600));
    float _1607 = fma(_1597, _595, fma(_1601, _610, (_628 * _623) * _1600));
    float _1610 = fma(_1597, _596, fma(_1601, _611, (_628 * _624) * _1600));
    float _1614 = inversesqrt(dot(vec3(_1604, _1607, _1610), vec3(_1604, _1607, _1610)));
    float _1615 = _1614 * _1604;
    float _1616 = _1614 * _1607;
    float _1617 = _1614 * _1610;
    float _1629 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1630 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1631 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1632 = (-0.0) - _1505;
    float _1634 = (-0.0) - _1506;
    float _1635 = (-0.0) - _1507;
    float _1641 = float(gl_LaunchIDEXT.x);
    float _1642 = float(gl_LaunchIDEXT.y);
    float _1645 = float(gl_LaunchSizeEXT.x);
    float _1659 = fract(fract(sin(dot(vec2(_1641 / _1645, _1642 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1672 = fract(fract(sin(dot(vec2((_1641 + 128.0) / _1645, (_1642 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1673 = 1.0 - _1231;
    float _1674 = _1673 * _1174;
    float _1675 = _1673 * _1176;
    float _1676 = _1673 * _1178;
    float _1681 = _1231 * (_1174 + (-0.039999999105930328369140625));
    float _1682 = _1231 * (_1176 + (-0.039999999105930328369140625));
    float _1683 = _1231 * (_1178 + (-0.039999999105930328369140625));
    float _1684 = _1681 + 0.039999999105930328369140625;
    float _1686 = _1682 + 0.039999999105930328369140625;
    float _1687 = _1683 + 0.039999999105930328369140625;
    _79._m0 = 1u;
    uvec4 _1697 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1698 = _1697.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1698, _1697.w, _1698, vec3(_1629, _1630, _1631), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    if (_79._m0 == 0u)
    {
        float _1717 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1615, _1616, _1617));
        float _2183 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
        float _1720 = isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0));
        float _1739 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1482) * 0.949999988079071044921875);
        float _1740 = _1739 * _1739;
        float _1741 = g_sceneCB._m0[4u].x - _1505;
        float _1742 = g_sceneCB._m0[4u].y - _1506;
        float _1743 = g_sceneCB._m0[4u].z - _1507;
        float _1747 = inversesqrt(dot(vec3(_1741, _1742, _1743), vec3(_1741, _1742, _1743)));
        float _1748 = _1747 * _1741;
        float _1749 = _1747 * _1742;
        float _1750 = _1747 * _1743;
        float _1751 = dot(vec3(_1615, _1616, _1617), vec3(g_sceneCB._m0[4u].xyz));
        float _2194 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1754 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
        float _1755 = dot(vec3(_1615, _1616, _1617), vec3(_1632, _1634, _1635));
        float _2205 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
        float _1758 = isnan(1.0) ? _2205 : (isnan(_2205) ? 1.0 : min(_2205, 1.0));
        float _1759 = dot(vec3(_1615, _1616, _1617), vec3(_1748, _1749, _1750));
        float _2216 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
        float _1762 = isnan(1.0) ? _2216 : (isnan(_2216) ? 1.0 : min(_2216, 1.0));
        float _1763 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1748, _1749, _1750));
        float _2227 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1767 = _1740 * _1740;
        float _1771 = ((_1762 * _1762) * (_1767 + (-1.0))) + 1.0;
        float _1779 = exp2(log2(1.0 - (isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0)))) * 5.0);
        float _1790 = 1.0 - _1740;
        float _1801 = (0.5 / (((_1758 * ((_1754 * _1790) + _1740)) + 9.9999999392252902907785028219223e-09) + (((_1758 * _1790) + _1740) * _1754))) * _1754;
        float _2238 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1803 = (isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0))) * (_1767 / ((_1771 * _1771) * 3.141590118408203125));
        _1810 = ((_1674 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1720;
        _1811 = ((_1675 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1720;
        _1812 = ((_1676 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1720;
        _1813 = (((_1779 * (0.959999978542327880859375 - _1681)) + _1684) * g_sceneCB._m0[5u].x) * _1803;
        _1814 = (((_1779 * (0.959999978542327880859375 - _1682)) + _1686) * g_sceneCB._m0[5u].y) * _1803;
        _1815 = (((_1779 * (0.959999978542327880859375 - _1683)) + _1687) * g_sceneCB._m0[5u].z) * _1803;
    }
    else
    {
        _1810 = 0.0;
        _1811 = 0.0;
        _1812 = 0.0;
        _1813 = 0.0;
        _1814 = 0.0;
        _1815 = 0.0;
    }
    bool _1817 = abs(_1616) < 0.89999997615814208984375;
    float _1819 = float(_1817);
    float _1820 = _1817 ? 0.0 : 1.0;
    float _1823 = (_1819 * _1617) - (_1820 * _1616);
    float _1824 = _1820 * _1615;
    float _1826 = (-0.0) - (_1615 * _1819);
    float _1830 = inversesqrt(dot(vec3(_1823, _1824, _1826), vec3(_1823, _1824, _1826)));
    float _1831 = _1823 * _1830;
    float _1832 = _1824 * _1830;
    float _1833 = _1830 * _1826;
    float _1836 = (_1832 * _1617) - (_1833 * _1616);
    float _1839 = (_1833 * _1615) - (_1831 * _1617);
    float _1842 = (_1831 * _1616) - (_1832 * _1615);
    float _1844;
    float _1852;
    float _1843 = 0.0;
    uint _1845 = 0u;
    float _1849;
    bool _1851;
    for (;;)
    {
        _1849 = (float(_1845) + _1659) * 0.03125;
        _1851 = _1845 == 0u;
        float frontier_phi_59_pred;
        if (_1851)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _1995;
            float _1996;
            uint _1998;
            _1995 = 0.0;
            _1996 = 0.5;
            _1998 = _1845;
            float _1853;
            for (;;)
            {
                _1853 = ((_1998 & 1u) != 0u) ? (_1996 + _1995) : _1995;
                uint _1999 = _1998 >> 1u;
                if (_1999 == 0u)
                {
                    break;
                }
                else
                {
                    _1995 = _1853;
                    _1996 *= 0.5;
                    _1998 = _1999;
                }
            }
            frontier_phi_59_pred = _1853;
        }
        _1852 = frontier_phi_59_pred;
        float _1854 = _1852 + _1672;
        float _1858 = sqrt(_1849);
        float _1859 = ((_1854 > 1.0) ? (_1854 + (-1.0)) : _1854) * 6.283185482025146484375;
        float _1862 = cos(_1859) * _1858;
        float _1864 = sin(_1859) * _1858;
        float _1866 = sqrt(1.0 - _1849);
        float _1879 = ((_1866 * _1615) + (_1862 * _1836)) + (_1864 * _1831);
        float _1880 = ((_1866 * _1616) + (_1862 * _1839)) + (_1864 * _1832);
        float _1881 = ((_1866 * _1617) + (_1862 * _1842)) + (_1864 * _1833);
        _78._m0 = 1u;
        uvec4 _1885 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1886 = _1885.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1886, _1885.w, _1886, vec3(_1629, _1630, _1631), 9.9999997473787516355514526367188e-05, vec3(_1879, _1880, _1881), 10000.0, 1);
        float _1892 = dot(vec3(_1615, _1616, _1617), vec3(_1879, _1880, _1881));
        float _2249 = isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0));
        float _1895 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
        _1844 = ((float(_78._m0 == 0u) * _1895) / (_1895 * 0.3183098733425140380859375)) + _1843;
        uint _1846 = _1845 + 1u;
        if (_1846 == 32u)
        {
            break;
        }
        else
        {
            _1843 = _1844;
            _1845 = _1846;
            continue;
        }
    }
    float _1903 = _1844 * 0.009947183541953563690185546875;
    float _1908 = dot(vec3(_1505, _1506, _1507), vec3(_1615, _1616, _1617)) * 2.0;
    vec4 _1921 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1505 - (_1908 * _1615), _1506 - (_1908 * _1616), _1507 - (_1908 * _1617)), 4.0 - (_1482 * 4.0));
    float _1926 = dot(vec3(_1632, _1634, _1635), vec3(_1615, _1616, _1617));
    float _2260 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
    float _1936 = exp2(log2(1.0 - (isnan(1.0) ? _2260 : (isnan(_2260) ? 1.0 : min(_2260, 1.0)))) * 5.0);
    vec4 _1948 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1615, _1616, _1617), 0.0);
    float _1960 = ((_1810 + ((cbMtdParam._m0[20u].x * cbMtdParam._m0[25u].x) * _1553.x)) + _1813) + (((_1948.x * _1674) + (((_1936 * (0.959999978542327880859375 - _1681)) + _1684) * _1921.x)) * _1903);
    float _1965 = ((_1811 + ((cbMtdParam._m0[20u].y * cbMtdParam._m0[25u].x) * _1553.y)) + _1814) + (((_1948.y * _1675) + (((_1936 * (0.959999978542327880859375 - _1682)) + _1686) * _1921.y)) * _1903);
    float _1970 = ((_1812 + ((cbMtdParam._m0[20u].z * cbMtdParam._m0[25u].x) * _1553.z)) + _1815) + (((_1948.z * _1676) + (((_1936 * (0.959999978542327880859375 - _1683)) + _1687) * _1921.z)) * _1903);
    float _2271 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
    float _2282 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
    float _2293 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
    bool _1978 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1989;
    _1989.x = _1978 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2271 : (isnan(_2271) ? 1.0 : min(_2271, 1.0)));
    _1989.y = _1978 ? ((_589 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2282 : (isnan(_2282) ? 1.0 : min(_2282, 1.0)));
    _1989.z = _1978 ? ((_592 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2293 : (isnan(_2293) ? 1.0 : min(_2293, 1.0)));
    payload._m0 = _1989;
}


