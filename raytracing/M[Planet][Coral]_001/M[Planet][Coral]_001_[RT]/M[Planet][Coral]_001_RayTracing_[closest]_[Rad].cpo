#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1826;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _180 * _172;
    uint _183 = _181 >> 2u;
    uvec3 _192 = uvec3(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x, texelFetch(l_geomAttrib_0, int(_183 + 2u)).x);
    uint _199 = _179.z;
    bool _200 = _199 != 0u;
    bool _202 = _131.w == 0u;
    bool _203 = _200 || _202;
    uint _204 = _181 + 12u;
    uint _227;
    uint _228;
    uint _229;
    uint _230;
    if (_203)
    {
        uvec4 _206 = texelFetch(l_geomAttrib_0, int(_204 >> 2u));
        uint _207 = _206.x;
        _227 = _207 & 255u;
        _228 = (_207 >> 8u) & 255u;
        _229 = (_207 >> 16u) & 255u;
        _230 = 16u;
    }
    else
    {
        uint _215 = _204 >> 2u;
        uvec2 _221 = uvec2(texelFetch(l_geomAttrib_0, int(_215)).x, texelFetch(l_geomAttrib_0, int(_215 + 1u)).x);
        uint _222 = _221.x;
        _227 = _222 & 65535u;
        _228 = _222 >> 16u;
        _229 = _221.y & 65535u;
        _230 = 20u;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int((_230 + _181) >> 2u));
    uint _238 = _237.x;
    bool _252 = _199 == 0u;
    uint _253;
    if (_252)
    {
        _253 = _230 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_202)
        {
            frontier_phi_9_10_ladder = _230 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _230 + 12u;
        }
        _253 = frontier_phi_9_10_ladder;
    }
    uvec4 _261 = texelFetch(l_geomAttrib_0, int(((_181 + 4u) + (_200 ? (_253 + 4u) : _253)) >> 2u));
    uint _262 = _261.x;
    float _266 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _267 = float(int(uint(int(_262) >> int(16u))));
    uint _268 = _180 * _174;
    uint _269 = _268 >> 2u;
    uvec3 _278 = uvec3(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x, texelFetch(l_geomAttrib_0, int(_269 + 2u)).x);
    uint _285 = _268 + 12u;
    uint _306;
    uint _307;
    uint _308;
    uint _309;
    if (_203)
    {
        uvec4 _287 = texelFetch(l_geomAttrib_0, int(_285 >> 2u));
        uint _288 = _287.x;
        _306 = _288 & 255u;
        _307 = (_288 >> 8u) & 255u;
        _308 = (_288 >> 16u) & 255u;
        _309 = 16u;
    }
    else
    {
        uint _294 = _285 >> 2u;
        uvec2 _300 = uvec2(texelFetch(l_geomAttrib_0, int(_294)).x, texelFetch(l_geomAttrib_0, int(_294 + 1u)).x);
        uint _301 = _300.x;
        _306 = _301 & 65535u;
        _307 = _301 >> 16u;
        _308 = _300.y & 65535u;
        _309 = 20u;
    }
    uvec4 _315 = texelFetch(l_geomAttrib_0, int((_309 + _268) >> 2u));
    uint _316 = _315.x;
    uint _328;
    if (_252)
    {
        _328 = _309 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_202)
        {
            frontier_phi_16_17_ladder = _309 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _309 + 12u;
        }
        _328 = frontier_phi_16_17_ladder;
    }
    uvec4 _336 = texelFetch(l_geomAttrib_0, int(((_268 + 4u) + (_200 ? (_328 + 4u) : _328)) >> 2u));
    uint _337 = _336.x;
    float _341 = float(int(uint(int(_337 << 16u) >> int(16u))));
    float _342 = float(int(uint(int(_337) >> int(16u))));
    uint _343 = _180 * _175;
    uint _344 = _343 >> 2u;
    uvec3 _353 = uvec3(texelFetch(l_geomAttrib_0, int(_344)).x, texelFetch(l_geomAttrib_0, int(_344 + 1u)).x, texelFetch(l_geomAttrib_0, int(_344 + 2u)).x);
    uint _360 = _343 + 12u;
    uint _381;
    uint _382;
    uint _383;
    uint _384;
    if (_203)
    {
        uvec4 _362 = texelFetch(l_geomAttrib_0, int(_360 >> 2u));
        uint _363 = _362.x;
        _381 = _363 & 255u;
        _382 = (_363 >> 8u) & 255u;
        _383 = (_363 >> 16u) & 255u;
        _384 = 16u;
    }
    else
    {
        uint _369 = _360 >> 2u;
        uvec2 _375 = uvec2(texelFetch(l_geomAttrib_0, int(_369)).x, texelFetch(l_geomAttrib_0, int(_369 + 1u)).x);
        uint _376 = _375.x;
        _381 = _376 & 65535u;
        _382 = _376 >> 16u;
        _383 = _375.y & 65535u;
        _384 = 20u;
    }
    uvec4 _390 = texelFetch(l_geomAttrib_0, int((_384 + _343) >> 2u));
    uint _391 = _390.x;
    uint _403;
    if (_252)
    {
        _403 = _384 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_202)
        {
            frontier_phi_23_24_ladder = _384 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _384 + 12u;
        }
        _403 = frontier_phi_23_24_ladder;
    }
    uvec4 _411 = texelFetch(l_geomAttrib_0, int(((_343 + 4u) + (_200 ? (_403 + 4u) : _403)) >> 2u));
    uint _412 = _411.x;
    float _416 = float(int(uint(int(_412 << 16u) >> int(16u))));
    float _417 = float(int(uint(int(_412) >> int(16u))));
    bool _419 = _131.z == 0u;
    float _455;
    float _456;
    float _457;
    if (_419)
    {
        uint _422 = _172 * 3u;
        uvec3 _431 = uvec3(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_422 + 2u)).x);
        _455 = uintBitsToFloat(_431.x);
        _456 = uintBitsToFloat(_431.y);
        _457 = uintBitsToFloat(_431.z);
    }
    else
    {
        uint _439 = _172 * 2u;
        uvec2 _445 = uvec2(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x);
        uint _446 = _445.x;
        _455 = unpackHalf2x16(_446).x;
        _456 = unpackHalf2x16(_446 >> 16u).x;
        _457 = unpackHalf2x16(_445.y).x;
    }
    float _493;
    float _494;
    float _495;
    if (_419)
    {
        uint _460 = _174 * 3u;
        uvec3 _469 = uvec3(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_460 + 2u)).x);
        _493 = uintBitsToFloat(_469.x);
        _494 = uintBitsToFloat(_469.y);
        _495 = uintBitsToFloat(_469.z);
    }
    else
    {
        uint _477 = _174 * 2u;
        uvec2 _483 = uvec2(texelFetch(l_geomPositionBuffer, int(_477)).x, texelFetch(l_geomPositionBuffer, int(_477 + 1u)).x);
        uint _484 = _483.x;
        _493 = unpackHalf2x16(_484).x;
        _494 = unpackHalf2x16(_484 >> 16u).x;
        _495 = unpackHalf2x16(_483.y).x;
    }
    float _531;
    float _532;
    float _533;
    if (_419)
    {
        uint _498 = _175 * 3u;
        uvec3 _507 = uvec3(texelFetch(l_geomPositionBuffer, int(_498)).x, texelFetch(l_geomPositionBuffer, int(_498 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_498 + 2u)).x);
        _531 = uintBitsToFloat(_507.x);
        _532 = uintBitsToFloat(_507.y);
        _533 = uintBitsToFloat(_507.z);
    }
    else
    {
        uint _515 = _175 * 2u;
        uvec2 _521 = uvec2(texelFetch(l_geomPositionBuffer, int(_515)).x, texelFetch(l_geomPositionBuffer, int(_515 + 1u)).x);
        uint _522 = _521.x;
        _531 = unpackHalf2x16(_522).x;
        _532 = unpackHalf2x16(_522 >> 16u).x;
        _533 = unpackHalf2x16(_521.y).x;
    }
    float _536 = (1.0 - hit._m0.x) - hit._m0.y;
    float _549 = ((uintBitsToFloat(_278.x) * hit._m0.x) + (uintBitsToFloat(_192.x) * _536)) + (uintBitsToFloat(_353.x) * hit._m0.y);
    float _550 = ((uintBitsToFloat(_278.y) * hit._m0.x) + (uintBitsToFloat(_192.y) * _536)) + (uintBitsToFloat(_353.y) * hit._m0.y);
    float _551 = ((uintBitsToFloat(_278.z) * hit._m0.x) + (uintBitsToFloat(_192.z) * _536)) + (uintBitsToFloat(_353.z) * hit._m0.y);
    float _585 = (_341 - _266) * 0.00048828125;
    float _587 = (_342 - _267) * 0.00048828125;
    float _590 = (_416 - _266) * 0.00048828125;
    float _591 = (_417 - _267) * 0.00048828125;
    float _613 = _493 - _455;
    float _614 = _494 - _456;
    float _615 = _495 - _457;
    float _618 = fma(_615, gl_ObjectToWorldEXT[2u].x, fma(_614, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _613));
    float _621 = fma(_615, gl_ObjectToWorldEXT[2u].y, fma(_614, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _613));
    float _624 = fma(_615, gl_ObjectToWorldEXT[2u].z, fma(_614, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _613));
    float _625 = _531 - _455;
    float _626 = _532 - _456;
    float _627 = _533 - _457;
    float _630 = fma(_627, gl_ObjectToWorldEXT[2u].x, fma(_626, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _625));
    float _633 = fma(_627, gl_ObjectToWorldEXT[2u].y, fma(_626, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _625));
    float _636 = fma(_627, gl_ObjectToWorldEXT[2u].z, fma(_626, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _625));
    float _637 = (((_341 * hit._m0.x) + (_266 * _536)) + (_416 * hit._m0.y)) * 0.00048828125;
    float _638 = (((_342 * hit._m0.x) + (_267 * _536)) + (_417 * hit._m0.y)) * 0.00048828125;
    float _642 = (((float(_227) * _536) + (-127.0)) + (float(_306) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _645 = (((float(_228) * _536) + (-127.0)) + (float(_307) * hit._m0.x)) + (float(_382) * hit._m0.y);
    float _648 = (((float(_229) * _536) + (-127.0)) + (float(_308) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _649 = _642 * 0.0078740157186985015869140625;
    float _651 = _645 * 0.0078740157186985015869140625;
    float _652 = _648 * 0.0078740157186985015869140625;
    float _665 = ((((float(_238 & 255u) * _536) + (-127.0)) + (float(_316 & 255u) * hit._m0.x)) + (float(_391 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _666 = ((((float((_238 >> 8u) & 255u) * _536) + (-127.0)) + (float((_316 >> 8u) & 255u) * hit._m0.x)) + (float((_391 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _667 = ((((float((_238 >> 16u) & 255u) * _536) + (-127.0)) + (float((_316 >> 16u) & 255u) * hit._m0.x)) + (float((_391 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _668 = ((((float(_238 >> 24u) * _536) + (-127.0)) + (float(_316 >> 24u) * hit._m0.x)) + (float(_391 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _678 = ((_666 * _652) - (_667 * _651)) * _668;
    float _679 = ((_667 * _649) - (_665 * _652)) * _668;
    float _680 = ((_665 * _651) - (_666 * _649)) * _668;
    float _684 = inversesqrt(dot(vec3(_678, _679, _680), vec3(_678, _679, _680)));
    float _692 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    uvec2 _721 = uvec2(textureSize(M_Planet_Coral_001_snp_0_Texture2D_1, int(0u)));
    bool _726 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _779;
    if (_726)
    {
        float _737 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _743 = (_636 * _621) - (_633 * _624);
        float _746 = (_630 * _624) - (_636 * _618);
        float _749 = (_633 * _618) - (_630 * _621);
        float _776 = ((log2((((float(_721.y) * 0.5) * float(_721.x)) * abs((_591 * _585) - (_590 * _587))) / (sqrt(((_746 * _746) + (_749 * _749)) + (_743 * _743)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_737 * gl_WorldRayDirectionEXT.x, _737 * gl_WorldRayDirectionEXT.y, _737 * gl_WorldRayDirectionEXT.z), vec3(_649, _651, _652))));
        _779 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    }
    else
    {
        _779 = 0.0;
    }
    vec4 _783 = textureLod(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].x * _692) + _637) * cbMtdParam._m0[27u].z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[27u].w) * ((cbMtdParam._m0[27u].y * _692) + _638)) + cbTextureTilingScale._m0[1u].w), _779);
    float _785 = _783.x;
    float _801 = dot(vec3(0.0), vec3(_684 * _678, _684 * _679, _684 * _680));
    float _804 = dot(vec3(0.0), vec3(_665, _666, _667));
    float _807 = dot(vec3(0.0), vec3(_649, _651, _652));
    float _813 = inversesqrt(dot(vec3(_801, _804, _807), vec3(_801, _804, _807)));
    float _814 = _801 * 0.5;
    uvec2 _839 = uvec2(textureSize(M_Planet_Coral_001_snp_0_Texture2D_4, int(0u)));
    float _890;
    if (_726)
    {
        float _850 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _856 = (_636 * _621) - (_633 * _624);
        float _859 = (_630 * _624) - (_636 * _618);
        float _862 = (_633 * _618) - (_630 * _621);
        float _888 = ((log2((((float(_839.y) * 0.5) * float(_839.x)) * abs((_591 * _585) - (_590 * _587))) / (sqrt(((_859 * _859) + (_862 * _862)) + (_856 * _856)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_850 * gl_WorldRayDirectionEXT.x, _850 * gl_WorldRayDirectionEXT.y, _850 * gl_WorldRayDirectionEXT.z), vec3(_649, _651, _652))));
        _890 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    }
    else
    {
        _890 = 0.0;
    }
    vec4 _892 = textureLod(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((((_785 * cbMtdParam._m0[22u].z) + _637) + (cbMtdParam._m0[23u].x * _692)) + cbMtdParam._m0[24u].x) + ((_814 * cbMtdParam._m0[16u].z) * _813)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((((_785 * cbMtdParam._m0[22u].w) + _638) + (cbMtdParam._m0[23u].y * _692)) + cbMtdParam._m0[24u].y) + (((cbMtdParam._m0[16u].z * 0.5) * _804) * _813)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _890);
    float _897 = _892.w;
    uvec2 _939 = uvec2(textureSize(M_Planet_Coral_001_snp_0_Texture2D_0, int(0u)));
    float _990;
    if (_726)
    {
        float _950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _956 = (_636 * _621) - (_633 * _624);
        float _959 = (_630 * _624) - (_636 * _618);
        float _962 = (_633 * _618) - (_630 * _621);
        float _988 = ((log2((((float(_939.y) * 0.5) * float(_939.x)) * abs((_591 * _585) - (_590 * _587))) / (sqrt(((_959 * _959) + (_962 * _962)) + (_956 * _956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_950 * gl_WorldRayDirectionEXT.x, _950 * gl_WorldRayDirectionEXT.y, _950 * gl_WorldRayDirectionEXT.z), vec3(_649, _651, _652))));
        _990 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    }
    else
    {
        _990 = 0.0;
    }
    vec4 _993 = textureLod(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[28u].x + _637) * cbMtdParam._m0[26u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[28u].y + _638) * cbMtdParam._m0[26u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _990);
    float _1004 = (_993.x + (-0.5)) * cbMtdParam._m0[17u].x;
    float _1005 = (_993.y + (-0.5)) * cbMtdParam._m0[17u].x;
    uvec2 _1027 = uvec2(textureSize(M_Planet_Coral_001_snp_0_Texture2D_2, int(0u)));
    float _1078;
    if (_726)
    {
        float _1038 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1044 = (_636 * _621) - (_633 * _624);
        float _1047 = (_630 * _624) - (_636 * _618);
        float _1050 = (_633 * _618) - (_630 * _621);
        float _1076 = ((log2((((float(_1027.y) * 0.5) * float(_1027.x)) * abs((_591 * _585) - (_590 * _587))) / (sqrt(((_1047 * _1047) + (_1050 * _1050)) + (_1044 * _1044)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1038 * gl_WorldRayDirectionEXT.x, _1038 * gl_WorldRayDirectionEXT.y, _1038 * gl_WorldRayDirectionEXT.z), vec3(_649, _651, _652))));
        _1078 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    }
    else
    {
        _1078 = 0.0;
    }
    vec4 _1081 = textureLod(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((((cbMtdParam._m0[26u].z * _785) + _637) + (cbMtdParam._m0[23u].z * _692)) + cbMtdParam._m0[22u].x) + ((_814 * cbMtdParam._m0[16u].y) * _813)) + _1004) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((((cbMtdParam._m0[26u].w * _785) + _638) + (cbMtdParam._m0[23u].w * _692)) + cbMtdParam._m0[22u].y) + (((cbMtdParam._m0[16u].y * 0.5) * _804) * _813)) + _1005) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1078);
    float _1083 = _1081.x;
    float _1084 = _1081.y;
    float _1085 = _1081.z;
    uvec2 _1129 = uvec2(textureSize(M_Planet_Coral_001_snp_0_Texture2D_3, int(0u)));
    float _1180;
    if (_726)
    {
        float _1140 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1146 = (_636 * _621) - (_633 * _624);
        float _1149 = (_630 * _624) - (_636 * _618);
        float _1152 = (_633 * _618) - (_630 * _621);
        float _1178 = ((log2((((float(_1129.y) * 0.5) * float(_1129.x)) * abs((_591 * _585) - (_590 * _587))) / (sqrt(((_1149 * _1149) + (_1152 * _1152)) + (_1146 * _1146)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1140 * gl_WorldRayDirectionEXT.x, _1140 * gl_WorldRayDirectionEXT.y, _1140 * gl_WorldRayDirectionEXT.z), vec3(_649, _651, _652))));
        _1180 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
    }
    else
    {
        _1180 = 0.0;
    }
    vec4 _1182 = textureLod(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_3, SS_WrapLinear), vec2(((((((_1004 + _637) + (cbMtdParam._m0[28u].z * _785)) + (cbMtdParam._m0[29u].x * _692)) + cbMtdParam._m0[29u].z) + ((_814 * cbMtdParam._m0[19u].y) * _813)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((((_1005 + _638) + (cbMtdParam._m0[28u].w * _785)) + (cbMtdParam._m0[29u].y * _692)) + cbMtdParam._m0[29u].w) + (((cbMtdParam._m0[19u].y * 0.5) * _804) * _813)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1180);
    float _1187 = _1182.w;
    float _1195 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_649, _651, _652, 0.0)) - cbMtdParam._m0[18u].y;
    float _1963 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1203 = exp2(log2(1.0 - (isnan(1.0) ? _1963 : (isnan(_1963) ? 1.0 : min(_1963, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].z, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].w;
    float _1210 = inversesqrt(dot(vec3(_549, _550, _551), vec3(_549, _550, _551)));
    float _1211 = _1210 * _549;
    float _1212 = _1210 * _550;
    float _1213 = _1210 * _551;
    uvec4 _1217 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _1219 = _1217.y != 0u;
    float _1229 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].xyz), vec3(cbMtdParam._m0[30u].xyz)));
    float _1238 = _1219 ? g_sceneCB._m0[4u].x : (_1229 * cbMtdParam._m0[30u].x);
    float _1239 = _1219 ? g_sceneCB._m0[4u].y : (_1229 * cbMtdParam._m0[30u].y);
    float _1240 = _1219 ? g_sceneCB._m0[4u].z : (_1229 * cbMtdParam._m0[30u].z);
    float _1244 = inversesqrt(dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240)));
    float _1245 = _1238 * _1244;
    float _1246 = _1239 * _1244;
    float _1247 = _1240 * _1244;
    float _1248 = dot(vec4(_1211, _1212, _1213, 0.0), vec4(_1245, _1246, _1247, 0.0));
    float _1979 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
    float _1251 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    float _1253 = 1.0 - (_1251 * _1251);
    float _1255 = (-0.0) - (_1253 - cbMtdParam._m0[20u].y);
    float _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    float _1279 = (-0.0) - (_1253 - cbMtdParam._m0[21u].x);
    float _1280 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
    float _1302 = ((_1182.x - _1083) * _1187) + _1083;
    float _1303 = ((_1182.y - _1084) * _1187) + _1084;
    float _1304 = ((_1182.z - _1085) * _1187) + _1085;
    float _1327 = cbMtdParam._m0[13u].z - (cbMtdParam._m0[20u].x * cbMtdParam._m0[13u].z);
    float _1328 = cbMtdParam._m0[13u].w - (cbMtdParam._m0[20u].x * cbMtdParam._m0[13u].w);
    float _1329 = cbMtdParam._m0[14u].x - (cbMtdParam._m0[20u].x * cbMtdParam._m0[14u].x);
    float _1340 = inversesqrt(dot(vec3(_1245, _1246, _1247), vec3(_1245, _1246, _1247)));
    float _1355 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1211, _1212, _1213, 0.0), vec4(_1340 * _1245, _1340 * _1246, _1340 * _1247, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2010 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
    float _1357 = isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0));
    float _1363 = exp2(log2(_1357 * 6.5) * 7.0);
    float _2021 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
    float _1365 = (isnan(1.0) ? _2021 : (isnan(_2021) ? 1.0 : min(_2021, 1.0))) + _1357;
    float _2032 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
    float _1366 = isnan(1.0) ? _2032 : (isnan(_2032) ? 1.0 : min(_2032, 1.0));
    float _1378 = ((_1366 * ((cbMtdParam._m0[12u].z - (cbMtdParam._m0[12u].z * cbMtdParam._m0[20u].x)) - _1327)) + _1327) * (((_892.x - _1302) * _897) + _1302);
    float _1379 = ((_1366 * ((cbMtdParam._m0[12u].w - _1328) - (cbMtdParam._m0[12u].w * cbMtdParam._m0[20u].x))) + _1328) * (((_892.y - _1303) * _897) + _1303);
    float _1380 = ((_1366 * ((cbMtdParam._m0[13u].x - _1329) - (cbMtdParam._m0[13u].x * cbMtdParam._m0[20u].x))) + _1329) * (((_892.z - _1304) * _897) + _1304);
    float _1381 = isnan(_1379) ? _1378 : (isnan(_1378) ? _1379 : max(_1378, _1379));
    float _1382 = isnan(_1380) ? _1381 : (isnan(_1381) ? _1380 : max(_1381, _1380));
    float _1385;
    float _1387;
    if (_1382 < 1.1920928955078125e-07)
    {
        _1385 = 0.0;
        _1387 = 0.0;
    }
    else
    {
        float _1411 = isnan(_1379) ? _1378 : (isnan(_1378) ? _1379 : min(_1378, _1379));
        float _1413 = _1382 - (isnan(_1380) ? _1411 : (isnan(_1411) ? _1380 : min(_1411, _1380)));
        float _1388 = _1413 / _1382;
        float frontier_phi_46_47_ladder;
        float frontier_phi_46_47_ladder_1;
        if (_1413 < 1.1920928955078125e-07)
        {
            frontier_phi_46_47_ladder = _1388;
            frontier_phi_46_47_ladder_1 = 0.0;
        }
        else
        {
            float _1691;
            if (_1382 == _1378)
            {
                _1691 = ((_1379 - _1380) / _1413) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_58_55_ladder;
                if (_1382 == _1379)
                {
                    frontier_phi_58_55_ladder = (((_1380 - _1378) / _1413) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_58_55_ladder = (((_1378 - _1379) / _1413) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1691 = frontier_phi_58_55_ladder;
            }
            float _1696 = (_1691 < 0.0) ? (_1691 + 1.0) : _1691;
            precise float _1386 = (_1696 - floor(_1696)) * 6.0;
            frontier_phi_46_47_ladder = _1388;
            frontier_phi_46_47_ladder_1 = _1386;
        }
        _1385 = frontier_phi_46_47_ladder_1;
        _1387 = frontier_phi_46_47_ladder;
    }
    float _1390 = cbMtdParam._m0[20u].z + _1382;
    float _2063 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    float _1391 = isnan(1.0) ? _2063 : (isnan(_2063) ? 1.0 : min(_2063, 1.0));
    float _1393 = cbMtdParam._m0[21u].y + _1387;
    float _2074 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
    float _1394 = isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0));
    uint _1396 = uint(int(floor(_1385)));
    float _1398 = _1385 - float(int(_1396));
    float _1400 = (1.0 - _1394) * _1391;
    float _1403 = (1.0 - (_1398 * _1394)) * _1391;
    float _1407 = (1.0 - ((1.0 - _1398) * _1394)) * _1391;
    float _1415;
    float _1417;
    float _1418;
    if ((_1396 == 0u) || (_1396 == 6u))
    {
        _1415 = _1391;
        _1417 = _1407;
        _1418 = _1400;
    }
    else
    {
        float frontier_phi_48_49_ladder;
        float frontier_phi_48_49_ladder_1;
        float frontier_phi_48_49_ladder_2;
        if (_1396 == 1u)
        {
            frontier_phi_48_49_ladder = _1391;
            frontier_phi_48_49_ladder_1 = _1400;
            frontier_phi_48_49_ladder_2 = _1403;
        }
        else
        {
            float frontier_phi_48_49_ladder_53_ladder;
            float frontier_phi_48_49_ladder_53_ladder_1;
            float frontier_phi_48_49_ladder_53_ladder_2;
            if (_1396 == 2u)
            {
                frontier_phi_48_49_ladder_53_ladder = _1391;
                frontier_phi_48_49_ladder_53_ladder_1 = _1407;
                frontier_phi_48_49_ladder_53_ladder_2 = _1400;
            }
            else
            {
                float frontier_phi_48_49_ladder_53_ladder_57_ladder;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
                if (_1396 == 3u)
                {
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1403;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1391;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1400;
                }
                else
                {
                    bool _1760 = _1396 == 4u;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1400;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1760 ? _1391 : _1403;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1760 ? _1407 : _1391;
                }
                frontier_phi_48_49_ladder_53_ladder = frontier_phi_48_49_ladder_53_ladder_57_ladder;
                frontier_phi_48_49_ladder_53_ladder_1 = frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                frontier_phi_48_49_ladder_53_ladder_2 = frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
            }
            frontier_phi_48_49_ladder = frontier_phi_48_49_ladder_53_ladder;
            frontier_phi_48_49_ladder_1 = frontier_phi_48_49_ladder_53_ladder_1;
            frontier_phi_48_49_ladder_2 = frontier_phi_48_49_ladder_53_ladder_2;
        }
        _1415 = frontier_phi_48_49_ladder_2;
        _1417 = frontier_phi_48_49_ladder;
        _1418 = frontier_phi_48_49_ladder_1;
    }
    float _1427 = exp2(log2(_1415) * cbMtdParam._m0[21u].z);
    float _1428 = exp2(log2(_1417) * cbMtdParam._m0[21u].z);
    float _1429 = exp2(log2(_1418) * cbMtdParam._m0[21u].z);
    float _1442 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy), vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy)));
    float _1450 = (dot(vec4(_1211, _1212, _1213, 0.0), vec4(_1442 * cbMtdParam._m0[30u].w, _1442 * cbMtdParam._m0[31u].x, _1442 * cbMtdParam._m0[31u].y, 0.0)) + 1.0) * 0.5;
    float _2085 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
    float _1457 = cbMtdParam._m0[17u].y * exp2(log2(isnan(1.0) ? _2085 : (isnan(_2085) ? 1.0 : min(_2085, 1.0))) * cbMtdParam._m0[17u].w);
    float _2096 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _1458 = isnan(1.0) ? _2096 : (isnan(_2096) ? 1.0 : min(_2096, 1.0));
    float _1465 = (cbMtdParam._m0[19u].z * exp2(log2(isnan(64.0) ? _1280 : (isnan(_1280) ? 64.0 : min(_1280, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[19u].w * exp2(log2(isnan(64.0) ? _1257 : (isnan(_1257) ? 64.0 : min(_1257, 64.0))) * 1.64999997615814208984375));
    float _1468 = ((_1458 * ((_1427 * cbMtdParam._m0[9u].z) - _1427)) + _1427) + (_1465 * cbMtdParam._m0[11u].z);
    float _1471 = ((_1458 * ((_1428 * cbMtdParam._m0[9u].w) - _1428)) + _1428) + (_1465 * cbMtdParam._m0[11u].w);
    float _1474 = ((_1458 * ((_1429 * cbMtdParam._m0[10u].x) - _1429)) + _1429) + (_1465 * cbMtdParam._m0[12u].x);
    bool _1480 = _1217.x != 0u;
    float _1508 = inversesqrt(dot(vec3(_649, _651, _652), vec3(_649, _651, _652)));
    float _1509 = _1508 * _649;
    float _1510 = _1508 * _651;
    float _1511 = _1508 * _652;
    float _1523 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1524 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1525 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1529 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1530 = _1529 * gl_WorldRayDirectionEXT.x;
    float _1531 = _1529 * gl_WorldRayDirectionEXT.y;
    float _1532 = _1529 * gl_WorldRayDirectionEXT.z;
    float _1533 = (-0.0) - _1530;
    float _1534 = (-0.0) - _1531;
    float _1535 = (-0.0) - _1532;
    float _1541 = float(gl_LaunchIDEXT.x);
    float _1542 = float(gl_LaunchIDEXT.y);
    float _1545 = float(gl_LaunchSizeEXT.x);
    float _1559 = fract(fract(sin(dot(vec2(_1541 / _1545, _1542 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1572 = fract(fract(sin(dot(vec2((_1541 + 128.0) / _1545, (_1542 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1577 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1578 = _1577.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1578, _1577.w, _1578, vec3(_1523, _1524, _1525), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1645;
    float _1646;
    float _1647;
    if (_69._m0 == 0u)
    {
        float _1600 = g_sceneCB._m0[4u].x - _1530;
        float _1601 = g_sceneCB._m0[4u].y - _1531;
        float _1602 = g_sceneCB._m0[4u].z - _1532;
        float _1606 = inversesqrt(dot(vec3(_1600, _1601, _1602), vec3(_1600, _1601, _1602)));
        float _1610 = dot(vec3(_1509, _1510, _1511), vec3(g_sceneCB._m0[4u].xyz));
        float _2122 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1613 = isnan(1.0) ? _2122 : (isnan(_2122) ? 1.0 : min(_2122, 1.0));
        float _1614 = dot(vec3(_1509, _1510, _1511), vec3(_1533, _1534, _1535));
        float _2133 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1618 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1600 * _1606, _1601 * _1606, _1602 * _1606));
        float _2144 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        float _1629 = (exp2(log2(1.0 - (isnan(1.0) ? _2144 : (isnan(_2144) ? 1.0 : min(_2144, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1635 = (0.5 / ((_1613 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2133 : (isnan(_2133) ? 1.0 : min(_2133, 1.0))))) * _1613;
        float _2155 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1637 = (isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0))) * 0.31831014156341552734375;
        _1645 = (_1629 * g_sceneCB._m0[5u].x) * _1637;
        _1646 = (_1629 * g_sceneCB._m0[5u].y) * _1637;
        _1647 = (_1629 * g_sceneCB._m0[5u].z) * _1637;
    }
    else
    {
        _1645 = 0.0;
        _1646 = 0.0;
        _1647 = 0.0;
    }
    bool _1649 = abs(_1510) < 0.89999997615814208984375;
    float _1651 = float(_1649);
    float _1652 = _1649 ? 0.0 : 1.0;
    float _1655 = (_1651 * _1511) - (_1652 * _1510);
    float _1656 = _1652 * _1509;
    float _1658 = (-0.0) - (_1509 * _1651);
    float _1662 = inversesqrt(dot(vec3(_1655, _1656, _1658), vec3(_1655, _1656, _1658)));
    float _1663 = _1655 * _1662;
    float _1664 = _1656 * _1662;
    float _1665 = _1662 * _1658;
    float _1668 = (_1664 * _1511) - (_1665 * _1510);
    float _1671 = (_1665 * _1509) - (_1663 * _1511);
    float _1674 = (_1663 * _1510) - (_1664 * _1509);
    float _1682;
    float _1708;
    float _1681 = 0.0;
    uint _1683 = 0u;
    float _1687;
    bool _1689;
    for (;;)
    {
        _1687 = (float(_1683) + _1559) * 0.03125;
        _1689 = _1683 == 0u;
        float frontier_phi_61_pred;
        if (_1689)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _1831;
            float _1832;
            uint _1834;
            _1831 = 0.0;
            _1832 = 0.5;
            _1834 = _1683;
            float _1709;
            for (;;)
            {
                _1709 = ((_1834 & 1u) != 0u) ? (_1832 + _1831) : _1831;
                uint _1835 = _1834 >> 1u;
                if (_1835 == 0u)
                {
                    break;
                }
                else
                {
                    _1831 = _1709;
                    _1832 *= 0.5;
                    _1834 = _1835;
                }
            }
            frontier_phi_61_pred = _1709;
        }
        _1708 = frontier_phi_61_pred;
        float _1710 = _1708 + _1572;
        float _1715 = sqrt(_1687);
        float _1716 = ((_1710 > 1.0) ? (_1710 + (-1.0)) : _1710) * 6.283185482025146484375;
        float _1719 = cos(_1716) * _1715;
        float _1721 = sin(_1716) * _1715;
        float _1723 = sqrt(1.0 - _1687);
        float _1736 = ((_1723 * _1509) + (_1719 * _1668)) + (_1721 * _1663);
        float _1737 = ((_1723 * _1510) + (_1719 * _1671)) + (_1721 * _1664);
        float _1738 = ((_1723 * _1511) + (_1719 * _1674)) + (_1721 * _1665);
        _68._m0 = 1u;
        uvec4 _1742 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1743 = _1742.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1743, _1742.w, _1743, vec3(_1523, _1524, _1525), 9.9999997473787516355514526367188e-05, vec3(_1736, _1737, _1738), 10000.0, 1);
        float _1749 = dot(vec3(_1509, _1510, _1511), vec3(_1736, _1737, _1738));
        float _2166 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1752 = isnan(1.0) ? _2166 : (isnan(_2166) ? 1.0 : min(_2166, 1.0));
        _1682 = ((float(_68._m0 == 0u) * _1752) / (_1752 * 0.3183098733425140380859375)) + _1681;
        uint _1684 = _1683 + 1u;
        if (_1684 == 32u)
        {
            break;
        }
        else
        {
            _1681 = _1682;
            _1683 = _1684;
            continue;
        }
    }
    float _1761 = _1682 * 0.009947183541953563690185546875;
    float _1766 = dot(vec3(_1530, _1531, _1532), vec3(_1509, _1510, _1511)) * 2.0;
    vec4 _1777 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1530 - (_1766 * _1509), _1531 - (_1766 * _1510), _1532 - (_1766 * _1511)), 4.0);
    float _1782 = dot(vec3(_1533, _1534, _1535), vec3(_1509, _1510, _1511));
    float _2177 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
    float _1791 = (exp2(log2(1.0 - (isnan(1.0) ? _2177 : (isnan(_2177) ? 1.0 : min(_2177, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1800 = (((_1480 ? (_1203 * ((_1366 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z)) : 0.0) + (isnan(4.0) ? _1468 : (isnan(_1468) ? 4.0 : min(_1468, 4.0)))) + _1645) + ((_1777.x * _1761) * _1791);
    float _1803 = (((_1480 ? (_1203 * ((_1366 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _1471 : (isnan(_1471) ? 4.0 : min(_1471, 4.0)))) + _1646) + ((_1777.y * _1761) * _1791);
    float _1806 = (((_1480 ? (_1203 * ((_1366 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x)) : 0.0) + (isnan(4.0) ? _1474 : (isnan(_1474) ? 4.0 : min(_1474, 4.0)))) + _1647) + ((_1777.z * _1761) * _1791);
    float _2188 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
    float _2199 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
    float _2210 = isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0));
    bool _1814 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1825;
    _1825.x = _1814 ? ((_642 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0)));
    _1825.y = _1814 ? ((_645 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0)));
    _1825.z = _1814 ? ((_648 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0)));
    payload._m0 = _1825;
}


