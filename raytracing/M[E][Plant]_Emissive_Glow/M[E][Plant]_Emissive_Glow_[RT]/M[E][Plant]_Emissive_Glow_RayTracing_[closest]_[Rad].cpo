#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _48
{
    vec3 _m0;
};

struct _52
{
    vec2 _m0;
};

struct _55
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_E_Plant_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _48 payload;
hitAttributeEXT _52 hit;
layout(location = 1) rayPayloadEXT _55 _57;
layout(location = 2) rayPayloadEXT _55 _58;

vec3 _940;

void main()
{
    float _66 = float(gl_LaunchSizeEXT.y);
    float _96 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _97 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _116 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _117 = _116.y;
    uint _156;
    uint _158;
    uint _159;
    if (_116.x == 0u)
    {
        uint _124 = (_117 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _133 = uvec3(texelFetch(l_geomIndexBuffer, int(_124)).x, texelFetch(l_geomIndexBuffer, int(_124 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_124 + 2u)).x);
        _156 = _133.x;
        _158 = _133.y;
        _159 = _133.z;
    }
    else
    {
        uint _137 = uint(gl_PrimitiveID) * 6u;
        uint _139 = _137 & 4294967292u;
        uint _142 = (_117 + _139) >> 2u;
        uvec2 _149 = uvec2(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x);
        uint _150 = _149.x;
        uint _151 = _149.y;
        uint _153 = _150 >> 16u;
        uint _154 = _151 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_139 == _137)
        {
            frontier_phi_3_2_ladder = _154;
            frontier_phi_3_2_ladder_1 = _150 & 65535u;
            frontier_phi_3_2_ladder_2 = _153;
        }
        else
        {
            frontier_phi_3_2_ladder = _151 >> 16u;
            frontier_phi_3_2_ladder_1 = _153;
            frontier_phi_3_2_ladder_2 = _154;
        }
        _156 = frontier_phi_3_2_ladder_1;
        _158 = frontier_phi_3_2_ladder_2;
        _159 = frontier_phi_3_2_ladder;
    }
    uvec4 _163 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _164 = _163.x;
    uint _165 = _163.z;
    bool _166 = _165 != 0u;
    bool _168 = _116.w == 0u;
    bool _169 = _166 || _168;
    uint _171 = (_164 * _156) + 12u;
    uint _195;
    uint _196;
    uint _197;
    uint _198;
    if (_169)
    {
        uvec4 _174 = texelFetch(l_geomAttrib_0, int(_171 >> 2u));
        uint _175 = _174.x;
        _195 = _175 & 255u;
        _196 = (_175 >> 8u) & 255u;
        _197 = (_175 >> 16u) & 255u;
        _198 = 20u;
    }
    else
    {
        uint _183 = _171 >> 2u;
        uvec2 _189 = uvec2(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x);
        uint _190 = _189.x;
        _195 = _190 & 65535u;
        _196 = _190 >> 16u;
        _197 = _189.y & 65535u;
        _198 = 24u;
    }
    bool _204 = _165 == 0u;
    uint _205;
    if (_204)
    {
        _205 = _198;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_168)
        {
            frontier_phi_9_10_ladder = _198 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _198 + 8u;
        }
        _205 = frontier_phi_9_10_ladder;
    }
    uvec4 _216 = texelFetch(l_geomAttrib_0, int((((_164 * _156) + 4u) + (_166 ? (_205 + 4u) : _205)) >> 2u));
    uint _217 = _216.x;
    float _221 = float(int(uint(int(_217 << 16u) >> int(16u))));
    float _222 = float(int(uint(int(_217) >> int(16u))));
    uint _224 = (_164 * _158) + 12u;
    uint _245;
    uint _246;
    uint _247;
    uint _248;
    if (_169)
    {
        uvec4 _226 = texelFetch(l_geomAttrib_0, int(_224 >> 2u));
        uint _227 = _226.x;
        _245 = _227 & 255u;
        _246 = (_227 >> 8u) & 255u;
        _247 = (_227 >> 16u) & 255u;
        _248 = 20u;
    }
    else
    {
        uint _233 = _224 >> 2u;
        uvec2 _239 = uvec2(texelFetch(l_geomAttrib_0, int(_233)).x, texelFetch(l_geomAttrib_0, int(_233 + 1u)).x);
        uint _240 = _239.x;
        _245 = _240 & 65535u;
        _246 = _240 >> 16u;
        _247 = _239.y & 65535u;
        _248 = 24u;
    }
    uint _252;
    if (_204)
    {
        _252 = _248;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_168)
        {
            frontier_phi_16_17_ladder = _248 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _248 + 8u;
        }
        _252 = frontier_phi_16_17_ladder;
    }
    uvec4 _261 = texelFetch(l_geomAttrib_0, int((((_164 * _158) + 4u) + (_166 ? (_252 + 4u) : _252)) >> 2u));
    uint _262 = _261.x;
    float _266 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _267 = float(int(uint(int(_262) >> int(16u))));
    uint _269 = (_164 * _159) + 12u;
    uint _290;
    uint _291;
    uint _292;
    uint _293;
    if (_169)
    {
        uvec4 _271 = texelFetch(l_geomAttrib_0, int(_269 >> 2u));
        uint _272 = _271.x;
        _290 = _272 & 255u;
        _291 = (_272 >> 8u) & 255u;
        _292 = (_272 >> 16u) & 255u;
        _293 = 20u;
    }
    else
    {
        uint _278 = _269 >> 2u;
        uvec2 _284 = uvec2(texelFetch(l_geomAttrib_0, int(_278)).x, texelFetch(l_geomAttrib_0, int(_278 + 1u)).x);
        uint _285 = _284.x;
        _290 = _285 & 65535u;
        _291 = _285 >> 16u;
        _292 = _284.y & 65535u;
        _293 = 24u;
    }
    uint _297;
    if (_204)
    {
        _297 = _293;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_168)
        {
            frontier_phi_23_24_ladder = _293 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _293 + 8u;
        }
        _297 = frontier_phi_23_24_ladder;
    }
    uvec4 _306 = texelFetch(l_geomAttrib_0, int((((_164 * _159) + 4u) + (_166 ? (_297 + 4u) : _297)) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    bool _314 = _116.z == 0u;
    float _350;
    float _351;
    float _352;
    if (_314)
    {
        uint _317 = _156 * 3u;
        uvec3 _326 = uvec3(texelFetch(l_geomPositionBuffer, int(_317)).x, texelFetch(l_geomPositionBuffer, int(_317 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_317 + 2u)).x);
        _350 = uintBitsToFloat(_326.x);
        _351 = uintBitsToFloat(_326.y);
        _352 = uintBitsToFloat(_326.z);
    }
    else
    {
        uint _334 = _156 * 2u;
        uvec2 _340 = uvec2(texelFetch(l_geomPositionBuffer, int(_334)).x, texelFetch(l_geomPositionBuffer, int(_334 + 1u)).x);
        uint _341 = _340.x;
        _350 = unpackHalf2x16(_341).x;
        _351 = unpackHalf2x16(_341 >> 16u).x;
        _352 = unpackHalf2x16(_340.y).x;
    }
    float _388;
    float _389;
    float _390;
    if (_314)
    {
        uint _355 = _158 * 3u;
        uvec3 _364 = uvec3(texelFetch(l_geomPositionBuffer, int(_355)).x, texelFetch(l_geomPositionBuffer, int(_355 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_355 + 2u)).x);
        _388 = uintBitsToFloat(_364.x);
        _389 = uintBitsToFloat(_364.y);
        _390 = uintBitsToFloat(_364.z);
    }
    else
    {
        uint _372 = _158 * 2u;
        uvec2 _378 = uvec2(texelFetch(l_geomPositionBuffer, int(_372)).x, texelFetch(l_geomPositionBuffer, int(_372 + 1u)).x);
        uint _379 = _378.x;
        _388 = unpackHalf2x16(_379).x;
        _389 = unpackHalf2x16(_379 >> 16u).x;
        _390 = unpackHalf2x16(_378.y).x;
    }
    float _426;
    float _427;
    float _428;
    if (_314)
    {
        uint _393 = _159 * 3u;
        uvec3 _402 = uvec3(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_393 + 2u)).x);
        _426 = uintBitsToFloat(_402.x);
        _427 = uintBitsToFloat(_402.y);
        _428 = uintBitsToFloat(_402.z);
    }
    else
    {
        uint _410 = _159 * 2u;
        uvec2 _416 = uvec2(texelFetch(l_geomPositionBuffer, int(_410)).x, texelFetch(l_geomPositionBuffer, int(_410 + 1u)).x);
        uint _417 = _416.x;
        _426 = unpackHalf2x16(_417).x;
        _427 = unpackHalf2x16(_417 >> 16u).x;
        _428 = unpackHalf2x16(_416.y).x;
    }
    float _431 = (1.0 - hit._m0.x) - hit._m0.y;
    float _472 = _388 - _350;
    float _473 = _389 - _351;
    float _474 = _390 - _352;
    float _477 = fma(_474, gl_ObjectToWorldEXT[2u].x, fma(_473, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _472));
    float _480 = fma(_474, gl_ObjectToWorldEXT[2u].y, fma(_473, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _472));
    float _483 = fma(_474, gl_ObjectToWorldEXT[2u].z, fma(_473, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _472));
    float _484 = _426 - _350;
    float _485 = _427 - _351;
    float _486 = _428 - _352;
    float _489 = fma(_486, gl_ObjectToWorldEXT[2u].x, fma(_485, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _484));
    float _492 = fma(_486, gl_ObjectToWorldEXT[2u].y, fma(_485, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _484));
    float _495 = fma(_486, gl_ObjectToWorldEXT[2u].z, fma(_485, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _484));
    float _502 = (((float(_195) * _431) + (-127.0)) + (float(_245) * hit._m0.x)) + (float(_290) * hit._m0.y);
    float _505 = (((float(_196) * _431) + (-127.0)) + (float(_246) * hit._m0.x)) + (float(_291) * hit._m0.y);
    float _508 = (((float(_197) * _431) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _509 = _502 * 0.0078740157186985015869140625;
    float _511 = _505 * 0.0078740157186985015869140625;
    float _512 = _508 * 0.0078740157186985015869140625;
    uvec2 _534 = uvec2(textureSize(M_E_Plant_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _543 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _544 = _543 * gl_WorldRayDirectionEXT.x;
    float _545 = _543 * gl_WorldRayDirectionEXT.y;
    float _546 = _543 * gl_WorldRayDirectionEXT.z;
    float _598;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _560 = (_495 * _480) - (_492 * _483);
        float _563 = (_489 * _483) - (_495 * _477);
        float _566 = (_492 * _477) - (_489 * _480);
        float _595 = ((log2((((float(_534.y) * 0.5) * float(_534.x)) * abs((((_312 - _222) * (_266 - _221)) - ((_311 - _221) * (_267 - _222))) * 2.384185791015625e-07)) / (sqrt(((_563 * _563) + (_566 * _566)) + (_560 * _560)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_97 * _97) + (_96 * _96)) + (_98 * _98)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _66)))))) / abs(dot(vec3(_544, _545, _546), vec3(_509, _511, _512))));
        _598 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    }
    else
    {
        _598 = 0.0;
    }
    vec4 _602 = textureLod(sampler2D(M_E_Plant_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_266 * hit._m0.x) + (_221 * _431)) + (_311 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_267 * hit._m0.x) + (_222 * _431)) + (_312 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _598);
    float _608 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _602.x;
    float _610 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _602.y;
    float _612 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _602.z;
    float _624 = (1.0 - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _1019 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _625 = isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0));
    float _630 = (1.0 - cbMtdParam._m0[11u].x) * (1.0 / cbMtdParam._m0[11u].y);
    float _1030 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _631 = isnan(1.0) ? _1030 : (isnan(_1030) ? 1.0 : min(_1030, 1.0));
    float _635 = _608 - (_631 * _608);
    float _636 = _610 - (_631 * _610);
    float _637 = _612 - (_631 * _612);
    float _647 = inversesqrt(dot(vec3(_509, _511, _512), vec3(_509, _511, _512)));
    float _648 = _647 * _509;
    float _649 = _647 * _511;
    float _650 = _647 * _512;
    float _662 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _663 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _664 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _665 = (-0.0) - _544;
    float _667 = (-0.0) - _545;
    float _668 = (-0.0) - _546;
    float _674 = float(gl_LaunchIDEXT.x);
    float _675 = float(gl_LaunchIDEXT.y);
    float _678 = float(gl_LaunchSizeEXT.x);
    float _692 = fract(fract(sin(dot(vec2(_674 / _678, _675 / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _705 = fract(fract(sin(dot(vec2((_674 + 128.0) / _678, (_675 + 128.0) / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _58._m0 = 1u;
    uvec4 _715 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _716 = _715.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _716, _715.w, _716, vec3(_662, _663, _664), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _782;
    float _783;
    float _784;
    if (_58._m0 == 0u)
    {
        float _737 = g_sceneCB._m0[4u].x - _544;
        float _738 = g_sceneCB._m0[4u].y - _545;
        float _739 = g_sceneCB._m0[4u].z - _546;
        float _743 = inversesqrt(dot(vec3(_737, _738, _739), vec3(_737, _738, _739)));
        float _747 = dot(vec3(_648, _649, _650), vec3(g_sceneCB._m0[4u].xyz));
        float _1041 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
        float _750 = isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0));
        float _751 = dot(vec3(_648, _649, _650), vec3(_665, _667, _668));
        float _1052 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
        float _755 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_737 * _743, _738 * _743, _739 * _743));
        float _1063 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
        float _766 = (exp2(log2(1.0 - (isnan(1.0) ? _1063 : (isnan(_1063) ? 1.0 : min(_1063, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _772 = (0.5 / ((_750 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1052 : (isnan(_1052) ? 1.0 : min(_1052, 1.0))))) * _750;
        float _1074 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
        float _774 = (isnan(1.0) ? _1074 : (isnan(_1074) ? 1.0 : min(_1074, 1.0))) * 0.31831014156341552734375;
        _782 = (_766 * g_sceneCB._m0[5u].x) * _774;
        _783 = (_766 * g_sceneCB._m0[5u].y) * _774;
        _784 = (_766 * g_sceneCB._m0[5u].z) * _774;
    }
    else
    {
        _782 = 0.0;
        _783 = 0.0;
        _784 = 0.0;
    }
    bool _786 = abs(_649) < 0.89999997615814208984375;
    float _788 = float(_786);
    float _789 = _786 ? 0.0 : 1.0;
    float _792 = (_788 * _650) - (_789 * _649);
    float _793 = _789 * _648;
    float _795 = (-0.0) - (_648 * _788);
    float _799 = inversesqrt(dot(vec3(_792, _793, _795), vec3(_792, _793, _795)));
    float _800 = _792 * _799;
    float _801 = _793 * _799;
    float _802 = _799 * _795;
    float _805 = (_801 * _650) - (_802 * _649);
    float _808 = (_802 * _648) - (_800 * _650);
    float _811 = (_800 * _649) - (_801 * _648);
    float _813;
    float _821;
    float _812 = 0.0;
    uint _814 = 0u;
    float _818;
    bool _820;
    for (;;)
    {
        _818 = (float(_814) + _692) * 0.03125;
        _820 = _814 == 0u;
        float frontier_phi_41_pred;
        if (_820)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _945;
            float _946;
            uint _948;
            _945 = 0.0;
            _946 = 0.5;
            _948 = _814;
            float _822;
            for (;;)
            {
                _822 = ((_948 & 1u) != 0u) ? (_946 + _945) : _945;
                uint _949 = _948 >> 1u;
                if (_949 == 0u)
                {
                    break;
                }
                else
                {
                    _945 = _822;
                    _946 *= 0.5;
                    _948 = _949;
                }
            }
            frontier_phi_41_pred = _822;
        }
        _821 = frontier_phi_41_pred;
        float _823 = _821 + _705;
        float _828 = sqrt(_818);
        float _829 = ((_823 > 1.0) ? (_823 + (-1.0)) : _823) * 6.283185482025146484375;
        float _832 = cos(_829) * _828;
        float _834 = sin(_829) * _828;
        float _836 = sqrt(1.0 - _818);
        float _849 = ((_836 * _648) + (_832 * _805)) + (_834 * _800);
        float _850 = ((_836 * _649) + (_832 * _808)) + (_834 * _801);
        float _851 = ((_836 * _650) + (_832 * _811)) + (_834 * _802);
        _57._m0 = 1u;
        uvec4 _855 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _856 = _855.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _856, _855.w, _856, vec3(_662, _663, _664), 9.9999997473787516355514526367188e-05, vec3(_849, _850, _851), 10000.0, 1);
        float _862 = dot(vec3(_648, _649, _650), vec3(_849, _850, _851));
        float _1085 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
        float _865 = isnan(1.0) ? _1085 : (isnan(_1085) ? 1.0 : min(_1085, 1.0));
        _813 = ((float(_57._m0 == 0u) * _865) / (_865 * 0.3183098733425140380859375)) + _812;
        uint _815 = _814 + 1u;
        if (_815 == 32u)
        {
            break;
        }
        else
        {
            _812 = _813;
            _814 = _815;
            continue;
        }
    }
    float _874 = _813 * 0.009947183541953563690185546875;
    float _879 = dot(vec3(_544, _545, _546), vec3(_648, _649, _650)) * 2.0;
    vec4 _891 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_544 - (_879 * _648), _545 - (_879 * _649), _546 - (_879 * _650)), 4.0);
    float _896 = dot(vec3(_665, _667, _668), vec3(_648, _649, _650));
    float _1096 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _905 = (exp2(log2(1.0 - (isnan(1.0) ? _1096 : (isnan(_1096) ? 1.0 : min(_1096, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _914 = (((((_608 * cbMtdParam._m0[10u].y) - _635) * _625) + _635) + _782) + ((_891.x * _874) * _905);
    float _917 = (((((_610 * cbMtdParam._m0[10u].y) - _636) * _625) + _636) + _783) + ((_891.y * _874) * _905);
    float _920 = (((((_612 * cbMtdParam._m0[10u].y) - _637) * _625) + _637) + _784) + ((_891.z * _874) * _905);
    float _1107 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _1118 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _1129 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    bool _928 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _939;
    _939.x = _928 ? ((_502 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1107 : (isnan(_1107) ? 1.0 : min(_1107, 1.0)));
    _939.y = _928 ? ((_505 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1118 : (isnan(_1118) ? 1.0 : min(_1118, 1.0)));
    _939.z = _928 ? ((_508 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1129 : (isnan(_1129) ? 1.0 : min(_1129, 1.0)));
    payload._m0 = _939;
}


