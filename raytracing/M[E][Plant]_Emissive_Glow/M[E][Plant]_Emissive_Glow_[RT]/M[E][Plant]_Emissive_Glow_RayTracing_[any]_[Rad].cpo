#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _14
{
    vec3 _m0;
};

struct _18
{
    vec2 _m0;
};

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(location = 0) rayPayloadInEXT _14 payload;
hitAttributeEXT _18 hit;

void main()
{
    vec3 _24 = payload._m0;
    float _33 = cbMtdParam._m0[10u].x - cbMtdParam._m0[10u].z;
    if (float((((-0.0) - cbMtdParam._m0[10u].z) / (isnan(0.001000000047497451305389404296875) ? _33 : (isnan(_33) ? 0.001000000047497451305389404296875 : max(_33, 0.001000000047497451305389404296875)))) >= 1.0) < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _24;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _24;
        return;
    }
}


