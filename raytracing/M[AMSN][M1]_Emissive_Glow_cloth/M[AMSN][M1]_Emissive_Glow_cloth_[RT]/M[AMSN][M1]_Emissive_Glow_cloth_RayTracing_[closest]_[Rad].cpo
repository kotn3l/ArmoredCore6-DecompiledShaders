#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1263;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _161;
    uint _163;
    uint _164;
    if (_121.x == 0u)
    {
        uint _129 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _138 = uvec3(texelFetch(l_geomIndexBuffer, int(_129)).x, texelFetch(l_geomIndexBuffer, int(_129 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_129 + 2u)).x);
        _161 = _138.x;
        _163 = _138.y;
        _164 = _138.z;
    }
    else
    {
        uint _142 = uint(gl_PrimitiveID) * 6u;
        uint _144 = _142 & 4294967292u;
        uint _147 = (_122 + _144) >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomIndexBuffer, int(_147)).x, texelFetch(l_geomIndexBuffer, int(_147 + 1u)).x);
        uint _155 = _154.x;
        uint _156 = _154.y;
        uint _158 = _155 >> 16u;
        uint _159 = _156 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_144 == _142)
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _155 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _156 >> 16u;
            frontier_phi_3_2_ladder_1 = _159;
            frontier_phi_3_2_ladder_2 = _158;
        }
        _161 = frontier_phi_3_2_ladder_2;
        _163 = frontier_phi_3_2_ladder_1;
        _164 = frontier_phi_3_2_ladder;
    }
    uvec4 _168 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _169 = _168.x;
    uint _170 = _168.z;
    bool _171 = _170 != 0u;
    uint _172 = _121.w;
    bool _174 = _171 || (_172 == 0u);
    uint _175 = _169 * _161;
    uint _176 = _175 + 12u;
    uint _200;
    uint _201;
    uint _202;
    uint _203;
    if (_174)
    {
        uvec4 _179 = texelFetch(l_geomAttrib_0, int(_176 >> 2u));
        uint _180 = _179.x;
        _200 = _180 & 255u;
        _201 = (_180 >> 8u) & 255u;
        _202 = (_180 >> 16u) & 255u;
        _203 = 16u;
    }
    else
    {
        uint _188 = _176 >> 2u;
        uvec2 _194 = uvec2(texelFetch(l_geomAttrib_0, int(_188)).x, texelFetch(l_geomAttrib_0, int(_188 + 1u)).x);
        uint _195 = _194.x;
        _200 = _195 & 65535u;
        _201 = _195 >> 16u;
        _202 = _194.y & 65535u;
        _203 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_203 + _175) >> 2u));
    uint _212 = _211.x;
    uint _224 = _168.y;
    bool _225 = _170 == 0u;
    uint _228 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _237 = texelFetch(l_geomAttrib_1, int((((_224 * _161) + 4u) + (_171 ? (_228 + 4u) : _228)) >> 2u));
    uint _238 = _237.x;
    float _242 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_238) >> int(16u))));
    uint _244 = _169 * _163;
    uint _245 = _244 + 12u;
    uint _266;
    uint _267;
    uint _268;
    uint _269;
    if (_174)
    {
        uvec4 _247 = texelFetch(l_geomAttrib_0, int(_245 >> 2u));
        uint _248 = _247.x;
        _266 = _248 & 255u;
        _267 = (_248 >> 8u) & 255u;
        _268 = (_248 >> 16u) & 255u;
        _269 = 16u;
    }
    else
    {
        uint _254 = _245 >> 2u;
        uvec2 _260 = uvec2(texelFetch(l_geomAttrib_0, int(_254)).x, texelFetch(l_geomAttrib_0, int(_254 + 1u)).x);
        uint _261 = _260.x;
        _266 = _261 & 65535u;
        _267 = _261 >> 16u;
        _268 = _260.y & 65535u;
        _269 = 20u;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((_269 + _244) >> 2u));
    uint _276 = _275.x;
    uint _289 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _296 = texelFetch(l_geomAttrib_1, int((((_224 * _163) + 4u) + (_171 ? (_289 + 4u) : _289)) >> 2u));
    uint _297 = _296.x;
    float _301 = float(int(uint(int(_297 << 16u) >> int(16u))));
    float _302 = float(int(uint(int(_297) >> int(16u))));
    uint _303 = _169 * _164;
    uint _304 = _303 + 12u;
    uint _325;
    uint _326;
    uint _327;
    uint _328;
    if (_174)
    {
        uvec4 _306 = texelFetch(l_geomAttrib_0, int(_304 >> 2u));
        uint _307 = _306.x;
        _325 = _307 & 255u;
        _326 = (_307 >> 8u) & 255u;
        _327 = (_307 >> 16u) & 255u;
        _328 = 16u;
    }
    else
    {
        uint _313 = _304 >> 2u;
        uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
        uint _320 = _319.x;
        _325 = _320 & 65535u;
        _326 = _320 >> 16u;
        _327 = _319.y & 65535u;
        _328 = 20u;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int((_328 + _303) >> 2u));
    uint _335 = _334.x;
    uint _348 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _355 = texelFetch(l_geomAttrib_1, int((((_224 * _164) + 4u) + (_171 ? (_348 + 4u) : _348)) >> 2u));
    uint _356 = _355.x;
    float _360 = float(int(uint(int(_356 << 16u) >> int(16u))));
    float _361 = float(int(uint(int(_356) >> int(16u))));
    bool _363 = _121.z == 0u;
    float _399;
    float _400;
    float _401;
    if (_363)
    {
        uint _366 = _161 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _161 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_363)
    {
        uint _404 = _163 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _163 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_363)
    {
        uint _442 = _164 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _164 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _480 = (1.0 - hit._m0.x) - hit._m0.y;
    float _514 = (_301 - _242) * 0.00048828125;
    float _516 = (_302 - _243) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _520 = (_361 - _243) * 0.00048828125;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _544 = _439 - _401;
    float _547 = fma(_544, gl_ObjectToWorldEXT[2u].x, fma(_543, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _542));
    float _550 = fma(_544, gl_ObjectToWorldEXT[2u].y, fma(_543, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _542));
    float _553 = fma(_544, gl_ObjectToWorldEXT[2u].z, fma(_543, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _542));
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _556 = _477 - _401;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = (((_301 * hit._m0.x) + (_242 * _480)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _567 = (((_302 * hit._m0.x) + (_243 * _480)) + (_361 * hit._m0.y)) * 0.00048828125;
    float _571 = (((float(_200) * _480) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _574 = (((float(_201) * _480) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = (((float(_202) * _480) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _578 = _571 * 0.0078740157186985015869140625;
    float _580 = _574 * 0.0078740157186985015869140625;
    float _581 = _577 * 0.0078740157186985015869140625;
    float _594 = ((((float(_212 & 255u) * _480) + (-127.0)) + (float(_276 & 255u) * hit._m0.x)) + (float(_335 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_212 >> 8u) & 255u) * _480) + (-127.0)) + (float((_276 >> 8u) & 255u) * hit._m0.x)) + (float((_335 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float((_212 >> 16u) & 255u) * _480) + (-127.0)) + (float((_276 >> 16u) & 255u) * hit._m0.x)) + (float((_335 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float(_212 >> 24u) * _480) + (-127.0)) + (float(_276 >> 24u) * hit._m0.x)) + (float(_335 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((_595 * _581) - (_596 * _580)) * _597;
    float _608 = ((_596 * _578) - (_594 * _581)) * _597;
    float _609 = ((_594 * _580) - (_595 * _578)) * _597;
    float _613 = inversesqrt(dot(vec3(_607, _608, _609), vec3(_607, _608, _609)));
    uvec2 _634 = uvec2(textureSize(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _639 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _692;
    if (_639)
    {
        float _650 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _656 = (_565 * _550) - (_562 * _553);
        float _659 = (_559 * _553) - (_565 * _547);
        float _662 = (_562 * _547) - (_559 * _550);
        float _689 = ((log2((((float(_634.y) * 0.5) * float(_634.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_659 * _659) + (_662 * _662)) + (_656 * _656)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_650 * gl_WorldRayDirectionEXT.x, _650 * gl_WorldRayDirectionEXT.y, _650 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _692 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    }
    else
    {
        _692 = 0.0;
    }
    vec4 _696 = textureLod(sampler2D(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _566) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _567) + cbTextureTilingScale._m0[0u].w), _692);
    float _701 = _696.x * cbMtdParam._m0[9u].x;
    float _702 = _696.y * cbMtdParam._m0[9u].y;
    float _703 = _696.z * cbMtdParam._m0[9u].z;
    uvec2 _719 = uvec2(textureSize(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _770;
    if (_639)
    {
        float _730 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _736 = (_565 * _550) - (_562 * _553);
        float _739 = (_559 * _553) - (_565 * _547);
        float _742 = (_562 * _547) - (_559 * _550);
        float _768 = ((log2((((float(_719.y) * 0.5) * float(_719.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_739 * _739) + (_742 * _742)) + (_736 * _736)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_730 * gl_WorldRayDirectionEXT.x, _730 * gl_WorldRayDirectionEXT.y, _730 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _770 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    }
    else
    {
        _770 = 0.0;
    }
    vec4 _773 = textureLod(sampler2D(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _566) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _567) + cbTextureTilingScale._m0[1u].w), _770);
    float _777 = _773.z;
    float _780 = (_773.x * 2.0) + (-1.0);
    float _782 = (_773.y * 2.0) + (-1.0);
    float _783 = dot(vec2(_780, _782), vec2(_780, _782));
    float _1333 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _788 = sqrt(1.0 - (isnan(1.0) ? _1333 : (isnan(_1333) ? 1.0 : min(_1333, 1.0))));
    uvec2 _807 = uvec2(textureSize(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _811 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _812 = _811 * gl_WorldRayDirectionEXT.x;
    float _813 = _811 * gl_WorldRayDirectionEXT.y;
    float _814 = _811 * gl_WorldRayDirectionEXT.z;
    float _858;
    if (_639)
    {
        float _824 = (_565 * _550) - (_562 * _553);
        float _827 = (_559 * _553) - (_565 * _547);
        float _830 = (_562 * _547) - (_559 * _550);
        float _856 = ((log2((((float(_807.y) * 0.5) * float(_807.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_827 * _827) + (_830 * _830)) + (_824 * _824)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_812, _813, _814), vec3(_578, _580, _581))));
        _858 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    }
    else
    {
        _858 = 0.0;
    }
    vec4 _860 = textureLod(sampler2D(M_AMSN_M1_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _566) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _567) + cbTextureTilingScale._m0[3u].w), _858);
    float _873 = fma(_788, _578, fma(_782, _594, (_613 * _607) * _780));
    float _876 = fma(_788, _580, fma(_782, _595, (_613 * _608) * _780));
    float _879 = fma(_788, _581, fma(_782, _596, (_613 * _609) * _780));
    float _883 = inversesqrt(dot(vec3(_873, _876, _879), vec3(_873, _876, _879)));
    float _884 = _883 * _873;
    float _885 = _883 * _876;
    float _886 = _883 * _879;
    float _898 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _899 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _900 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _901 = (-0.0) - _812;
    float _903 = (-0.0) - _813;
    float _904 = (-0.0) - _814;
    float _910 = float(gl_LaunchIDEXT.x);
    float _911 = float(gl_LaunchIDEXT.y);
    float _914 = float(gl_LaunchSizeEXT.x);
    float _928 = fract(fract(sin(dot(vec2(_910 / _914, _911 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _941 = fract(fract(sin(dot(vec2((_910 + 128.0) / _914, (_911 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _942 = 1.0 - cbMtdParam._m0[11u].x;
    float _943 = _942 * _701;
    float _944 = _942 * _702;
    float _945 = _942 * _703;
    float _950 = (_701 + (-0.039999999105930328369140625)) * cbMtdParam._m0[11u].x;
    float _951 = (_702 + (-0.039999999105930328369140625)) * cbMtdParam._m0[11u].x;
    float _952 = (_703 + (-0.039999999105930328369140625)) * cbMtdParam._m0[11u].x;
    float _953 = _950 + 0.039999999105930328369140625;
    float _955 = _951 + 0.039999999105930328369140625;
    float _956 = _952 + 0.039999999105930328369140625;
    _63._m0 = 1u;
    uvec4 _966 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _967 = _966.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _967, _966.w, _967, vec3(_898, _899, _900), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1082;
    float _1083;
    float _1084;
    float _1085;
    float _1086;
    float _1087;
    if (_63._m0 == 0u)
    {
        float _988 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_884, _885, _886));
        float _1349 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _991 = isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0));
        float _1010 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _777) * 0.949999988079071044921875);
        float _1011 = _1010 * _1010;
        float _1012 = g_sceneCB._m0[4u].x - _812;
        float _1013 = g_sceneCB._m0[4u].y - _813;
        float _1014 = g_sceneCB._m0[4u].z - _814;
        float _1018 = inversesqrt(dot(vec3(_1012, _1013, _1014), vec3(_1012, _1013, _1014)));
        float _1019 = _1018 * _1012;
        float _1020 = _1018 * _1013;
        float _1021 = _1018 * _1014;
        float _1022 = dot(vec3(_884, _885, _886), vec3(g_sceneCB._m0[4u].xyz));
        float _1360 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
        float _1025 = isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0));
        float _1026 = dot(vec3(_884, _885, _886), vec3(_901, _903, _904));
        float _1371 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1029 = isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0));
        float _1030 = dot(vec3(_884, _885, _886), vec3(_1019, _1020, _1021));
        float _1382 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1033 = isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0));
        float _1034 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1019, _1020, _1021));
        float _1393 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
        float _1038 = _1011 * _1011;
        float _1042 = ((_1033 * _1033) * (_1038 + (-1.0))) + 1.0;
        float _1051 = exp2(log2(1.0 - (isnan(1.0) ? _1393 : (isnan(_1393) ? 1.0 : min(_1393, 1.0)))) * 5.0);
        float _1062 = 1.0 - _1011;
        float _1073 = (0.5 / (((_1029 * ((_1025 * _1062) + _1011)) + 9.9999999392252902907785028219223e-09) + (((_1029 * _1062) + _1011) * _1025))) * _1025;
        float _1404 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1075 = (isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0))) * (_1038 / ((_1042 * _1042) * 3.141590118408203125));
        _1082 = ((_943 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _991;
        _1083 = ((_944 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _991;
        _1084 = ((_945 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _991;
        _1085 = (((_1051 * (0.959999978542327880859375 - _950)) + _953) * g_sceneCB._m0[5u].x) * _1075;
        _1086 = (((_1051 * (0.959999978542327880859375 - _951)) + _955) * g_sceneCB._m0[5u].y) * _1075;
        _1087 = (((_1051 * (0.959999978542327880859375 - _952)) + _956) * g_sceneCB._m0[5u].z) * _1075;
    }
    else
    {
        _1082 = 0.0;
        _1083 = 0.0;
        _1084 = 0.0;
        _1085 = 0.0;
        _1086 = 0.0;
        _1087 = 0.0;
    }
    bool _1089 = abs(_885) < 0.89999997615814208984375;
    float _1091 = float(_1089);
    float _1092 = _1089 ? 0.0 : 1.0;
    float _1095 = (_1091 * _886) - (_1092 * _885);
    float _1096 = _1092 * _884;
    float _1098 = (-0.0) - (_884 * _1091);
    float _1102 = inversesqrt(dot(vec3(_1095, _1096, _1098), vec3(_1095, _1096, _1098)));
    float _1103 = _1095 * _1102;
    float _1104 = _1096 * _1102;
    float _1105 = _1102 * _1098;
    float _1108 = (_1104 * _886) - (_1105 * _885);
    float _1111 = (_1105 * _884) - (_1103 * _886);
    float _1114 = (_1103 * _885) - (_1104 * _884);
    float _1116;
    float _1124;
    float _1115 = 0.0;
    uint _1117 = 0u;
    float _1121;
    bool _1123;
    for (;;)
    {
        _1121 = (float(_1117) + _928) * 0.03125;
        _1123 = _1117 == 0u;
        float frontier_phi_33_pred;
        if (_1123)
        {
            frontier_phi_33_pred = 0.0;
        }
        else
        {
            float _1268;
            float _1269;
            uint _1271;
            _1268 = 0.0;
            _1269 = 0.5;
            _1271 = _1117;
            float _1125;
            for (;;)
            {
                _1125 = ((_1271 & 1u) != 0u) ? (_1269 + _1268) : _1268;
                uint _1272 = _1271 >> 1u;
                if (_1272 == 0u)
                {
                    break;
                }
                else
                {
                    _1268 = _1125;
                    _1269 *= 0.5;
                    _1271 = _1272;
                }
            }
            frontier_phi_33_pred = _1125;
        }
        _1124 = frontier_phi_33_pred;
        float _1126 = _1124 + _941;
        float _1130 = sqrt(_1121);
        float _1131 = ((_1126 > 1.0) ? (_1126 + (-1.0)) : _1126) * 6.283185482025146484375;
        float _1134 = cos(_1131) * _1130;
        float _1136 = sin(_1131) * _1130;
        float _1138 = sqrt(1.0 - _1121);
        float _1151 = ((_1138 * _884) + (_1134 * _1108)) + (_1136 * _1103);
        float _1152 = ((_1138 * _885) + (_1134 * _1111)) + (_1136 * _1104);
        float _1153 = ((_1138 * _886) + (_1134 * _1114)) + (_1136 * _1105);
        _62._m0 = 1u;
        uvec4 _1157 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1158 = _1157.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1158, _1157.w, _1158, vec3(_898, _899, _900), 9.9999997473787516355514526367188e-05, vec3(_1151, _1152, _1153), 10000.0, 1);
        float _1164 = dot(vec3(_884, _885, _886), vec3(_1151, _1152, _1153));
        float _1415 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1167 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
        _1116 = ((float(_62._m0 == 0u) * _1167) / (_1167 * 0.3183098733425140380859375)) + _1115;
        uint _1118 = _1117 + 1u;
        if (_1118 == 32u)
        {
            break;
        }
        else
        {
            _1115 = _1116;
            _1117 = _1118;
            continue;
        }
    }
    float _1175 = _1116 * 0.009947183541953563690185546875;
    float _1180 = dot(vec3(_812, _813, _814), vec3(_884, _885, _886)) * 2.0;
    vec4 _1194 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_812 - (_1180 * _884), _813 - (_1180 * _885), _814 - (_1180 * _886)), 4.0 - (_777 * 4.0));
    float _1199 = dot(vec3(_901, _903, _904), vec3(_884, _885, _886));
    float _1426 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1209 = exp2(log2(1.0 - (isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0)))) * 5.0);
    vec4 _1221 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_884, _885, _886), 0.0);
    float _1233 = ((_1082 + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].y) * _860.x)) + _1085) + (((_1221.x * _943) + (((_1209 * (0.959999978542327880859375 - _950)) + _953) * _1194.x)) * _1175);
    float _1238 = ((_1083 + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].y) * _860.y)) + _1086) + (((_1221.y * _944) + (((_1209 * (0.959999978542327880859375 - _951)) + _955) * _1194.y)) * _1175);
    float _1243 = ((_1084 + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].y) * _860.z)) + _1087) + (((_1221.z * _945) + (((_1209 * (0.959999978542327880859375 - _952)) + _956) * _1194.z)) * _1175);
    float _1437 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
    float _1448 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _1459 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
    bool _1251 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1262;
    _1262.x = _1251 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0)));
    _1262.y = _1251 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0)));
    _1262.z = _1251 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0)));
    payload._m0 = _1262;
}


