#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_snp_0_Texture2D_4;
layout(set = 0, binding = 1) uniform texture2D M_Waterfall_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Waterfall_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Waterfall_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Waterfall_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Waterfall_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1832;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _182 * _174;
    uint _185 = _183 >> 2u;
    uvec3 _194 = uvec3(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x, texelFetch(l_geomAttrib_0, int(_185 + 2u)).x);
    uint _201 = _181.z;
    bool _202 = _201 != 0u;
    bool _204 = _133.w == 0u;
    bool _205 = _202 || _204;
    uint _206 = _183 + 12u;
    uint _229;
    uint _230;
    uint _231;
    uint _232;
    if (_205)
    {
        uvec4 _208 = texelFetch(l_geomAttrib_0, int(_206 >> 2u));
        uint _209 = _208.x;
        _229 = _209 & 255u;
        _230 = (_209 >> 8u) & 255u;
        _231 = (_209 >> 16u) & 255u;
        _232 = 16u;
    }
    else
    {
        uint _217 = _206 >> 2u;
        uvec2 _223 = uvec2(texelFetch(l_geomAttrib_0, int(_217)).x, texelFetch(l_geomAttrib_0, int(_217 + 1u)).x);
        uint _224 = _223.x;
        _229 = _224 & 65535u;
        _230 = _224 >> 16u;
        _231 = _223.y & 65535u;
        _232 = 20u;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int((_232 + _183) >> 2u));
    uint _240 = _239.x;
    bool _254 = _201 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _232 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_204)
        {
            frontier_phi_9_10_ladder = _232 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _232 + 12u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uint _259 = _202 ? (_255 + 4u) : _255;
    uvec4 _263 = texelFetch(l_geomAttrib_0, int(((_183 + 4u) + _259) >> 2u));
    uint _264 = _263.x;
    float _268 = float(int(uint(int(_264 << 16u) >> int(16u))));
    float _269 = float(int(uint(int(_264) >> int(16u))));
    uint _277 = _182 * _176;
    uint _278 = _277 >> 2u;
    uvec3 _287 = uvec3(texelFetch(l_geomAttrib_0, int(_278)).x, texelFetch(l_geomAttrib_0, int(_278 + 1u)).x, texelFetch(l_geomAttrib_0, int(_278 + 2u)).x);
    uint _294 = _277 + 12u;
    uint _315;
    uint _316;
    uint _317;
    uint _318;
    if (_205)
    {
        uvec4 _296 = texelFetch(l_geomAttrib_0, int(_294 >> 2u));
        uint _297 = _296.x;
        _315 = _297 & 255u;
        _316 = (_297 >> 8u) & 255u;
        _317 = (_297 >> 16u) & 255u;
        _318 = 16u;
    }
    else
    {
        uint _303 = _294 >> 2u;
        uvec2 _309 = uvec2(texelFetch(l_geomAttrib_0, int(_303)).x, texelFetch(l_geomAttrib_0, int(_303 + 1u)).x);
        uint _310 = _309.x;
        _315 = _310 & 65535u;
        _316 = _310 >> 16u;
        _317 = _309.y & 65535u;
        _318 = 20u;
    }
    uvec4 _324 = texelFetch(l_geomAttrib_0, int((_318 + _277) >> 2u));
    uint _325 = _324.x;
    uint _337;
    if (_254)
    {
        _337 = _318 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_204)
        {
            frontier_phi_16_17_ladder = _318 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _318 + 12u;
        }
        _337 = frontier_phi_16_17_ladder;
    }
    uint _341 = _202 ? (_337 + 4u) : _337;
    uvec4 _345 = texelFetch(l_geomAttrib_0, int(((_277 + 4u) + _341) >> 2u));
    uint _346 = _345.x;
    float _350 = float(int(uint(int(_346 << 16u) >> int(16u))));
    float _351 = float(int(uint(int(_346) >> int(16u))));
    uint _359 = _182 * _177;
    uint _360 = _359 >> 2u;
    uvec3 _369 = uvec3(texelFetch(l_geomAttrib_0, int(_360)).x, texelFetch(l_geomAttrib_0, int(_360 + 1u)).x, texelFetch(l_geomAttrib_0, int(_360 + 2u)).x);
    uint _376 = _359 + 12u;
    uint _397;
    uint _398;
    uint _399;
    uint _400;
    if (_205)
    {
        uvec4 _378 = texelFetch(l_geomAttrib_0, int(_376 >> 2u));
        uint _379 = _378.x;
        _397 = _379 & 255u;
        _398 = (_379 >> 8u) & 255u;
        _399 = (_379 >> 16u) & 255u;
        _400 = 16u;
    }
    else
    {
        uint _385 = _376 >> 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomAttrib_0, int(_385)).x, texelFetch(l_geomAttrib_0, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _397 = _392 & 65535u;
        _398 = _392 >> 16u;
        _399 = _391.y & 65535u;
        _400 = 20u;
    }
    uvec4 _406 = texelFetch(l_geomAttrib_0, int((_400 + _359) >> 2u));
    uint _407 = _406.x;
    uint _419;
    if (_254)
    {
        _419 = _400 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_204)
        {
            frontier_phi_23_24_ladder = _400 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _400 + 12u;
        }
        _419 = frontier_phi_23_24_ladder;
    }
    uint _423 = _202 ? (_419 + 4u) : _419;
    uvec4 _427 = texelFetch(l_geomAttrib_0, int(((_359 + 4u) + _423) >> 2u));
    uint _428 = _427.x;
    float _432 = float(int(uint(int(_428 << 16u) >> int(16u))));
    float _433 = float(int(uint(int(_428) >> int(16u))));
    bool _442 = _133.z == 0u;
    float _478;
    float _479;
    float _480;
    if (_442)
    {
        uint _445 = _174 * 3u;
        uvec3 _454 = uvec3(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_445 + 2u)).x);
        _478 = uintBitsToFloat(_454.x);
        _479 = uintBitsToFloat(_454.y);
        _480 = uintBitsToFloat(_454.z);
    }
    else
    {
        uint _462 = _174 * 2u;
        uvec2 _468 = uvec2(texelFetch(l_geomPositionBuffer, int(_462)).x, texelFetch(l_geomPositionBuffer, int(_462 + 1u)).x);
        uint _469 = _468.x;
        _478 = unpackHalf2x16(_469).x;
        _479 = unpackHalf2x16(_469 >> 16u).x;
        _480 = unpackHalf2x16(_468.y).x;
    }
    float _516;
    float _517;
    float _518;
    if (_442)
    {
        uint _483 = _176 * 3u;
        uvec3 _492 = uvec3(texelFetch(l_geomPositionBuffer, int(_483)).x, texelFetch(l_geomPositionBuffer, int(_483 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_483 + 2u)).x);
        _516 = uintBitsToFloat(_492.x);
        _517 = uintBitsToFloat(_492.y);
        _518 = uintBitsToFloat(_492.z);
    }
    else
    {
        uint _500 = _176 * 2u;
        uvec2 _506 = uvec2(texelFetch(l_geomPositionBuffer, int(_500)).x, texelFetch(l_geomPositionBuffer, int(_500 + 1u)).x);
        uint _507 = _506.x;
        _516 = unpackHalf2x16(_507).x;
        _517 = unpackHalf2x16(_507 >> 16u).x;
        _518 = unpackHalf2x16(_506.y).x;
    }
    float _554;
    float _555;
    float _556;
    if (_442)
    {
        uint _521 = _177 * 3u;
        uvec3 _530 = uvec3(texelFetch(l_geomPositionBuffer, int(_521)).x, texelFetch(l_geomPositionBuffer, int(_521 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_521 + 2u)).x);
        _554 = uintBitsToFloat(_530.x);
        _555 = uintBitsToFloat(_530.y);
        _556 = uintBitsToFloat(_530.z);
    }
    else
    {
        uint _538 = _177 * 2u;
        uvec2 _544 = uvec2(texelFetch(l_geomPositionBuffer, int(_538)).x, texelFetch(l_geomPositionBuffer, int(_538 + 1u)).x);
        uint _545 = _544.x;
        _554 = unpackHalf2x16(_545).x;
        _555 = unpackHalf2x16(_545 >> 16u).x;
        _556 = unpackHalf2x16(_544.y).x;
    }
    float _559 = (1.0 - hit._m0.x) - hit._m0.y;
    float _611 = (((float(texelFetch(l_geomAttrib_0, int(((_277 + 8u) + _341) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 8u) + _259) >> 2u)).x & 255u) * _559)) + (float(texelFetch(l_geomAttrib_0, int(((_359 + 8u) + _423) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _615 = (_350 - _268) * 0.00048828125;
    float _617 = (_351 - _269) * 0.00048828125;
    float _620 = (_432 - _268) * 0.00048828125;
    float _621 = (_433 - _269) * 0.00048828125;
    float _643 = _516 - _478;
    float _644 = _517 - _479;
    float _645 = _518 - _480;
    float _648 = fma(_645, gl_ObjectToWorldEXT[2u].x, fma(_644, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _643));
    float _651 = fma(_645, gl_ObjectToWorldEXT[2u].y, fma(_644, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _643));
    float _654 = fma(_645, gl_ObjectToWorldEXT[2u].z, fma(_644, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _643));
    float _655 = _554 - _478;
    float _656 = _555 - _479;
    float _657 = _556 - _480;
    float _660 = fma(_657, gl_ObjectToWorldEXT[2u].x, fma(_656, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _655));
    float _663 = fma(_657, gl_ObjectToWorldEXT[2u].y, fma(_656, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _655));
    float _666 = fma(_657, gl_ObjectToWorldEXT[2u].z, fma(_656, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _655));
    float _667 = (((_350 * hit._m0.x) + (_268 * _559)) + (_432 * hit._m0.y)) * 0.00048828125;
    float _668 = (((_351 * hit._m0.x) + (_269 * _559)) + (_433 * hit._m0.y)) * 0.00048828125;
    float _672 = (((float(_229) * _559) + (-127.0)) + (float(_315) * hit._m0.x)) + (float(_397) * hit._m0.y);
    float _675 = (((float(_230) * _559) + (-127.0)) + (float(_316) * hit._m0.x)) + (float(_398) * hit._m0.y);
    float _678 = (((float(_231) * _559) + (-127.0)) + (float(_317) * hit._m0.x)) + (float(_399) * hit._m0.y);
    float _679 = _672 * 0.0078740157186985015869140625;
    float _681 = _675 * 0.0078740157186985015869140625;
    float _682 = _678 * 0.0078740157186985015869140625;
    float _695 = ((((float(_240 & 255u) * _559) + (-127.0)) + (float(_325 & 255u) * hit._m0.x)) + (float(_407 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _696 = ((((float((_240 >> 8u) & 255u) * _559) + (-127.0)) + (float((_325 >> 8u) & 255u) * hit._m0.x)) + (float((_407 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((((float((_240 >> 16u) & 255u) * _559) + (-127.0)) + (float((_325 >> 16u) & 255u) * hit._m0.x)) + (float((_407 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((((float(_240 >> 24u) * _559) + (-127.0)) + (float(_325 >> 24u) * hit._m0.x)) + (float(_407 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _708 = ((_696 * _682) - (_697 * _681)) * _698;
    float _709 = ((_697 * _679) - (_695 * _682)) * _698;
    float _710 = ((_695 * _681) - (_696 * _679)) * _698;
    float _714 = inversesqrt(dot(vec3(_708, _709, _710), vec3(_708, _709, _710)));
    float _728 = exp2(log2(abs(_679)) * 2.2000000476837158203125);
    float _729 = exp2(log2(abs(_681)) * 2.2000000476837158203125);
    float _730 = exp2(log2(abs(_682)) * 2.2000000476837158203125);
    float _1922 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _732 = isnan(1.0) ? _1922 : (isnan(_1922) ? 1.0 : min(_1922, 1.0));
    float _1933 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _1944 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _734 = isnan(1.0) ? _1944 : (isnan(_1944) ? 1.0 : min(_1944, 1.0));
    float _748 = cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x;
    float _749 = _748 * cbMtdParam._m0[16u].x;
    float _755 = (((uintBitsToFloat(_287.x) * hit._m0.x) + (uintBitsToFloat(_194.x) * _559)) + (uintBitsToFloat(_369.x) * hit._m0.y)) / cbMtdParam._m0[13u].z;
    float _756 = (((uintBitsToFloat(_287.y) * hit._m0.x) + (uintBitsToFloat(_194.y) * _559)) + (uintBitsToFloat(_369.y) * hit._m0.y)) / cbMtdParam._m0[13u].z;
    float _757 = (((uintBitsToFloat(_287.z) * hit._m0.x) + (uintBitsToFloat(_194.z) * _559)) + (uintBitsToFloat(_369.z) * hit._m0.y)) / cbMtdParam._m0[13u].z;
    float _771 = (((_756 + (_748 * cbMtdParam._m0[16u].y)) * cbMtdParam._m0[17u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    bool _776 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _800;
    if (_776)
    {
        float _783 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _791 = log2(0.0);
        float _798 = ((_791 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_783 * gl_WorldRayDirectionEXT.x, _783 * gl_WorldRayDirectionEXT.y, _783 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _800 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    }
    else
    {
        _800 = 0.0;
    }
    vec4 _805 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_757 + _749) * cbMtdParam._m0[17u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _771), _800);
    float _839;
    if (_776)
    {
        float _823 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _831 = log2(0.0);
        float _837 = ((_831 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_823 * gl_WorldRayDirectionEXT.x, _823 * gl_WorldRayDirectionEXT.y, _823 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _839 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    }
    else
    {
        _839 = 0.0;
    }
    vec4 _841 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_749 + _755) * cbMtdParam._m0[17u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _771), _839);
    uvec2 _884 = uvec2(textureSize(M_Waterfall_snp_0_Texture2D_2, int(0u)));
    float _935;
    if (_776)
    {
        float _895 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _901 = (_666 * _651) - (_663 * _654);
        float _904 = (_660 * _654) - (_666 * _648);
        float _907 = (_663 * _648) - (_660 * _651);
        float _933 = ((log2((((float(_884.y) * 0.5) * float(_884.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_904 * _904) + (_907 * _907)) + (_901 * _901)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_895 * gl_WorldRayDirectionEXT.x, _895 * gl_WorldRayDirectionEXT.y, _895 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _935 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    }
    else
    {
        _935 = 0.0;
    }
    float _943 = exp2(log2(textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_2, SS_WrapLinear), vec2((((cbMtdParam._m0[15u].x * _748) + _667) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[15u].y * _748) + _668) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _935).x) * cbMtdParam._m0[12u].y);
    float _951 = (cbMtdParam._m0[17u].z * _748) + _667;
    float _952 = (cbMtdParam._m0[17u].w * _748) + _668;
    uvec2 _964 = uvec2(textureSize(M_Waterfall_snp_0_Texture2D_3, int(0u)));
    float _1015;
    if (_776)
    {
        float _975 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _981 = (_666 * _651) - (_663 * _654);
        float _984 = (_660 * _654) - (_666 * _648);
        float _987 = (_663 * _648) - (_660 * _651);
        float _1013 = ((log2((((float(_964.y) * 0.5) * float(_964.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_984 * _984) + (_987 * _987)) + (_981 * _981)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_975 * gl_WorldRayDirectionEXT.x, _975 * gl_WorldRayDirectionEXT.y, _975 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1015 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    }
    else
    {
        _1015 = 0.0;
    }
    vec4 _1017 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_3, SS_WrapLinear), vec2((_951 * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (_952 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1015);
    float _1022 = (cbPerFrame._m0[22u].x * 2.0) * (cbMtdParam._m0[13u].y * cbMtdParam._m0[11u].w);
    float _1028 = ((_1017.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].x;
    float _1030 = (-0.0) - (cbMtdParam._m0[13u].x * ((_1017.x * 0.5) + (-0.25)));
    float _1032 = fract(_1022);
    float _1034 = fract(_1022 + 0.5);
    float _1046 = abs((_1032 * 2.0) + (-1.0));
    vec4 _1056 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1032 * _1030) + _951) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1028 * _1032) + _952) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1058 = _1056.x;
    float _1059 = _1056.y;
    float _1060 = _1056.z;
    vec4 _1061 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1034 * _1030) + _951) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1028 * _1034) + _952) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1086 = (((_841.x * _734) + (_805.x * _732)) + cbMtdParam._m0[9u].x) + (((cbMtdParam._m0[10u].x * _611) * _943) * (((_1061.x - _1058) * _1046) + _1058));
    float _1089 = (((_841.y * _734) + (_805.y * _732)) + cbMtdParam._m0[9u].y) + (((cbMtdParam._m0[10u].y * _611) * _943) * (((_1061.y - _1059) * _1046) + _1059));
    float _1092 = (((_841.z * _734) + (_805.z * _732)) + cbMtdParam._m0[9u].z) + (((cbMtdParam._m0[10u].z * _611) * _943) * (((_1061.z - _1060) * _1046) + _1060));
    uvec2 _1116 = uvec2(textureSize(M_Waterfall_snp_0_Texture2D_0, int(0u)));
    float _1167;
    if (_776)
    {
        float _1127 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1133 = (_666 * _651) - (_663 * _654);
        float _1136 = (_660 * _654) - (_666 * _648);
        float _1139 = (_663 * _648) - (_660 * _651);
        float _1165 = ((log2((((float(_1116.y) * 0.5) * float(_1116.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1136 * _1136) + (_1139 * _1139)) + (_1133 * _1133)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1127 * gl_WorldRayDirectionEXT.x, _1127 * gl_WorldRayDirectionEXT.y, _1127 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1167 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
    }
    else
    {
        _1167 = 0.0;
    }
    vec4 _1170 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[14u].z * _748) + _667) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[14u].w * _748) + _668) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1167);
    uvec2 _1195 = uvec2(textureSize(M_Waterfall_snp_0_Texture2D_1, int(0u)));
    float _1246;
    if (_776)
    {
        float _1206 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1212 = (_666 * _651) - (_663 * _654);
        float _1215 = (_660 * _654) - (_666 * _648);
        float _1218 = (_663 * _648) - (_660 * _651);
        float _1244 = ((log2((((float(_1195.y) * 0.5) * float(_1195.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1215 * _1215) + (_1218 * _1218)) + (_1212 * _1212)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1206 * gl_WorldRayDirectionEXT.x, _1206 * gl_WorldRayDirectionEXT.y, _1206 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1246 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
    }
    else
    {
        _1246 = 0.0;
    }
    vec4 _1248 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[14u].x * _748) + _667) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[14u].y * _748) + _668) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1246);
    float _1254 = (_1248.x * 2.0) + (-1.0);
    float _1255 = (_1248.y * 2.0) + (-1.0);
    float _1256 = dot(vec2(_1254, _1255), vec2(_1254, _1255));
    float _1985 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
    float _1261 = sqrt(1.0 - (isnan(1.0) ? _1985 : (isnan(_1985) ? 1.0 : min(_1985, 1.0))));
    float _1268 = (cbMtdParam._m0[15u].z * _748) + _667;
    float _1269 = (cbMtdParam._m0[15u].w * _748) + _668;
    float _1324;
    if (_776)
    {
        float _1284 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1290 = (_666 * _651) - (_663 * _654);
        float _1293 = (_660 * _654) - (_666 * _648);
        float _1296 = (_663 * _648) - (_660 * _651);
        float _1322 = ((log2((((float(_964.y) * 0.5) * float(_964.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1293 * _1293) + (_1296 * _1296)) + (_1290 * _1290)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1284 * gl_WorldRayDirectionEXT.x, _1284 * gl_WorldRayDirectionEXT.y, _1284 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1324 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
    }
    else
    {
        _1324 = 0.0;
    }
    vec4 _1326 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_3, SS_WrapLinear), vec2((_1268 * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (_1269 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1324);
    float _1334 = ((_1326.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].x;
    float _1336 = (-0.0) - (cbMtdParam._m0[13u].x * ((_1326.x * 0.5) + (-0.25)));
    vec4 _1354 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1032 * _1336) + _1268) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1334 * _1032) + _1269) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1356 = _1354.x;
    float _1357 = _1354.y;
    vec4 _1358 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1034 * _1336) + _1268) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1334 * _1034) + _1269) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1376 = cbMtdParam._m0[16u].z * _748;
    float _1390 = (((cbMtdParam._m0[16u].w * _748) + _756) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w;
    float _1413;
    if (_776)
    {
        float _1397 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1405 = log2(0.0);
        float _1411 = ((_1405 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1397 * gl_WorldRayDirectionEXT.x, _1397 * gl_WorldRayDirectionEXT.y, _1397 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1413 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
    }
    else
    {
        _1413 = 0.0;
    }
    vec4 _1416 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_6, SS_BumpMap), vec2(((_1376 + _755) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, _1390), _1413);
    float _1428 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1429 = _1428 * gl_WorldRayDirectionEXT.x;
    float _1430 = _1428 * gl_WorldRayDirectionEXT.y;
    float _1431 = _1428 * gl_WorldRayDirectionEXT.z;
    float _1447;
    if (_776)
    {
        float _1439 = log2(0.0);
        float _1445 = ((_1439 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1429, _1430, _1431), vec3(_679, _681, _682))));
        _1447 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
    }
    else
    {
        _1447 = 0.0;
    }
    vec4 _1449 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * (_1376 + _757)) + cbTextureTilingScale._m0[5u].z, _1390), _1447);
    float _1455 = (isnan(1.0) ? _1933 : (isnan(_1933) ? 1.0 : min(_1933, 1.0))) * 0.502016007900238037109375;
    float _1468 = ((((((_1170.x * 2.0) + (-1.0)) * cbMtdParam._m0[11u].z) + (-2.599999904632568359375)) + _1254) + ((((((_1358.x - _1356) * _1046) + _1356) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w)) + ((((_1416.x * _734) + _1455) + (_1449.x * _732)) * 5.19999980926513671875);
    float _1472 = ((((((_1170.y * 2.0) + (-1.0)) * cbMtdParam._m0[11u].z) + (-2.599999904632568359375)) + _1255) + ((((((_1358.y - _1357) * _1046) + _1357) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w)) + ((((_1416.y * _734) + _1455) + (_1449.y * _732)) * 5.19999980926513671875);
    float _1475 = fma(_1261, _679, fma(_1472, _695, (_714 * _708) * _1468));
    float _1478 = fma(_1261, _681, fma(_1472, _696, (_714 * _709) * _1468));
    float _1481 = fma(_1261, _682, fma(_1472, _697, (_714 * _710) * _1468));
    float _1485 = inversesqrt(dot(vec3(_1475, _1478, _1481), vec3(_1475, _1478, _1481)));
    float _1486 = _1485 * _1475;
    float _1487 = _1485 * _1478;
    float _1488 = _1485 * _1481;
    float _1500 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1501 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1502 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1503 = (-0.0) - _1429;
    float _1504 = (-0.0) - _1430;
    float _1505 = (-0.0) - _1431;
    float _1511 = float(gl_LaunchIDEXT.x);
    float _1512 = float(gl_LaunchIDEXT.y);
    float _1515 = float(gl_LaunchSizeEXT.x);
    float _1529 = fract(fract(sin(dot(vec2(_1511 / _1515, _1512 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1542 = fract(fract(sin(dot(vec2((_1511 + 128.0) / _1515, (_1512 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1552 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1553 = _1552.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1553, _1552.w, _1553, vec3(_1500, _1501, _1502), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    if (_71._m0 == 0u)
    {
        float _1573 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1486, _1487, _1488));
        float _2011 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1576 = isnan(1.0) ? _2011 : (isnan(_2011) ? 1.0 : min(_2011, 1.0));
        float _1595 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[11u].x) * 0.949999988079071044921875);
        float _1596 = _1595 * _1595;
        float _1597 = g_sceneCB._m0[4u].x - _1429;
        float _1598 = g_sceneCB._m0[4u].y - _1430;
        float _1599 = g_sceneCB._m0[4u].z - _1431;
        float _1603 = inversesqrt(dot(vec3(_1597, _1598, _1599), vec3(_1597, _1598, _1599)));
        float _1604 = _1603 * _1597;
        float _1605 = _1603 * _1598;
        float _1606 = _1603 * _1599;
        float _1607 = dot(vec3(_1486, _1487, _1488), vec3(g_sceneCB._m0[4u].xyz));
        float _2022 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1610 = isnan(1.0) ? _2022 : (isnan(_2022) ? 1.0 : min(_2022, 1.0));
        float _1611 = dot(vec3(_1486, _1487, _1488), vec3(_1503, _1504, _1505));
        float _2033 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1614 = isnan(1.0) ? _2033 : (isnan(_2033) ? 1.0 : min(_2033, 1.0));
        float _1615 = dot(vec3(_1486, _1487, _1488), vec3(_1604, _1605, _1606));
        float _2044 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
        float _1618 = isnan(1.0) ? _2044 : (isnan(_2044) ? 1.0 : min(_2044, 1.0));
        float _1619 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1604, _1605, _1606));
        float _2055 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1623 = _1596 * _1596;
        float _1627 = ((_1618 * _1618) * (_1623 + (-1.0))) + 1.0;
        float _1639 = (exp2(log2(1.0 - (isnan(1.0) ? _2055 : (isnan(_2055) ? 1.0 : min(_2055, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1641 = 1.0 - _1596;
        float _1652 = (0.5 / (((_1614 * ((_1610 * _1641) + _1596)) + 9.9999999392252902907785028219223e-09) + (((_1614 * _1641) + _1596) * _1610))) * _1610;
        float _2066 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
        float _1654 = (isnan(1.0) ? _2066 : (isnan(_2066) ? 1.0 : min(_2066, 1.0))) * (_1623 / ((_1627 * _1627) * 3.141590118408203125));
        _1661 = ((_1086 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1576;
        _1662 = ((_1089 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1576;
        _1663 = ((_1092 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1576;
        _1664 = (_1639 * g_sceneCB._m0[5u].x) * _1654;
        _1665 = (_1639 * g_sceneCB._m0[5u].y) * _1654;
        _1666 = (_1639 * g_sceneCB._m0[5u].z) * _1654;
    }
    else
    {
        _1661 = 0.0;
        _1662 = 0.0;
        _1663 = 0.0;
        _1664 = 0.0;
        _1665 = 0.0;
        _1666 = 0.0;
    }
    bool _1668 = abs(_1487) < 0.89999997615814208984375;
    float _1670 = float(_1668);
    float _1671 = _1668 ? 0.0 : 1.0;
    float _1674 = (_1670 * _1488) - (_1671 * _1487);
    float _1675 = _1671 * _1486;
    float _1677 = (-0.0) - (_1486 * _1670);
    float _1681 = inversesqrt(dot(vec3(_1674, _1675, _1677), vec3(_1674, _1675, _1677)));
    float _1682 = _1674 * _1681;
    float _1683 = _1675 * _1681;
    float _1684 = _1681 * _1677;
    float _1687 = (_1683 * _1488) - (_1684 * _1487);
    float _1690 = (_1684 * _1486) - (_1682 * _1488);
    float _1693 = (_1682 * _1487) - (_1683 * _1486);
    float _1695;
    float _1703;
    float _1694 = 0.0;
    uint _1696 = 0u;
    float _1700;
    bool _1702;
    for (;;)
    {
        _1700 = (float(_1696) + _1529) * 0.03125;
        _1702 = _1696 == 0u;
        float frontier_phi_57_pred;
        if (_1702)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1837;
            float _1838;
            uint _1840;
            _1837 = 0.0;
            _1838 = 0.5;
            _1840 = _1696;
            float _1704;
            for (;;)
            {
                _1704 = ((_1840 & 1u) != 0u) ? (_1838 + _1837) : _1837;
                uint _1841 = _1840 >> 1u;
                if (_1841 == 0u)
                {
                    break;
                }
                else
                {
                    _1837 = _1704;
                    _1838 *= 0.5;
                    _1840 = _1841;
                }
            }
            frontier_phi_57_pred = _1704;
        }
        _1703 = frontier_phi_57_pred;
        float _1705 = _1703 + _1542;
        float _1709 = sqrt(_1700);
        float _1710 = ((_1705 > 1.0) ? (_1705 + (-1.0)) : _1705) * 6.283185482025146484375;
        float _1713 = cos(_1710) * _1709;
        float _1715 = sin(_1710) * _1709;
        float _1717 = sqrt(1.0 - _1700);
        float _1730 = ((_1717 * _1486) + (_1713 * _1687)) + (_1715 * _1682);
        float _1731 = ((_1717 * _1487) + (_1713 * _1690)) + (_1715 * _1683);
        float _1732 = ((_1717 * _1488) + (_1713 * _1693)) + (_1715 * _1684);
        _70._m0 = 1u;
        uvec4 _1736 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1737 = _1736.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1737, _1736.w, _1737, vec3(_1500, _1501, _1502), 9.9999997473787516355514526367188e-05, vec3(_1730, _1731, _1732), 10000.0, 1);
        float _1743 = dot(vec3(_1486, _1487, _1488), vec3(_1730, _1731, _1732));
        float _2077 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1746 = isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0));
        _1695 = ((float(_70._m0 == 0u) * _1746) / (_1746 * 0.3183098733425140380859375)) + _1694;
        uint _1697 = _1696 + 1u;
        if (_1697 == 32u)
        {
            break;
        }
        else
        {
            _1694 = _1695;
            _1696 = _1697;
            continue;
        }
    }
    float _1754 = _1695 * 0.009947183541953563690185546875;
    float _1759 = dot(vec3(_1429, _1430, _1431), vec3(_1486, _1487, _1488)) * 2.0;
    vec4 _1773 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1429 - (_1759 * _1486), _1430 - (_1759 * _1487), _1431 - (_1759 * _1488)), 4.0 - (cbMtdParam._m0[11u].x * 4.0));
    float _1778 = dot(vec3(_1503, _1504, _1505), vec3(_1486, _1487, _1488));
    float _2088 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
    float _1787 = (exp2(log2(1.0 - (isnan(1.0) ? _2088 : (isnan(_2088) ? 1.0 : min(_2088, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1793 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1486, _1487, _1488), 0.0);
    float _1804 = (_1664 + _1661) + (((_1793.x * _1086) + (_1787 * _1773.x)) * _1754);
    float _1808 = (_1665 + _1662) + (((_1793.y * _1089) + (_1787 * _1773.y)) * _1754);
    float _1812 = (_1666 + _1663) + (((_1793.z * _1092) + (_1787 * _1773.z)) * _1754);
    float _2099 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
    float _2110 = isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0));
    float _2121 = isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0));
    bool _1820 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1831;
    _1831.x = _1820 ? ((_672 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2099 : (isnan(_2099) ? 1.0 : min(_2099, 1.0)));
    _1831.y = _1820 ? ((_675 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2110 : (isnan(_2110) ? 1.0 : min(_2110, 1.0)));
    _1831.z = _1820 ? ((_678 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2121 : (isnan(_2121) ? 1.0 : min(_2121, 1.0)));
    payload._m0 = _1831;
}


