#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_CoralGeyser_01_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1586;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _166 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _167 >> 16u;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _169;
        }
        _172 = frontier_phi_3_2_ladder_2;
        _174 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _220 = _181 == 0u;
    uint _221;
    if (_220)
    {
        _221 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _221 = frontier_phi_9_10_ladder;
    }
    uint _231 = (((_180 * _172) + 4u) + (_182 ? (_221 + 4u) : _221)) >> 2u;
    uvec2 _237 = uvec2(texelFetch(l_geomAttrib_0, int(_231)).x, texelFetch(l_geomAttrib_0, int(_231 + 1u)).x);
    uint _238 = _237.x;
    uint _239 = _237.y;
    float _243 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _244 = float(int(uint(int(_238) >> int(16u))));
    uint _251 = (_180 * _174) + 12u;
    uint _272;
    uint _273;
    uint _274;
    uint _275;
    if (_185)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
        _275 = 20u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
        _275 = 24u;
    }
    uint _279;
    if (_220)
    {
        _279 = _275;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _275 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _275 + 8u;
        }
        _279 = frontier_phi_16_17_ladder;
    }
    uint _287 = (((_180 * _174) + 4u) + (_182 ? (_279 + 4u) : _279)) >> 2u;
    uvec2 _293 = uvec2(texelFetch(l_geomAttrib_0, int(_287)).x, texelFetch(l_geomAttrib_0, int(_287 + 1u)).x);
    uint _294 = _293.x;
    uint _295 = _293.y;
    float _299 = float(int(uint(int(_294 << 16u) >> int(16u))));
    float _300 = float(int(uint(int(_294) >> int(16u))));
    uint _307 = (_180 * _175) + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_185)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 20u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 24u;
    }
    uint _335;
    if (_220)
    {
        _335 = _331;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _331 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _331 + 8u;
        }
        _335 = frontier_phi_23_24_ladder;
    }
    uint _343 = (((_180 * _175) + 4u) + (_182 ? (_335 + 4u) : _335)) >> 2u;
    uvec2 _349 = uvec2(texelFetch(l_geomAttrib_0, int(_343)).x, texelFetch(l_geomAttrib_0, int(_343 + 1u)).x);
    uint _350 = _349.x;
    uint _351 = _349.y;
    float _355 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _356 = float(int(uint(int(_350) >> int(16u))));
    bool _363 = _131.z == 0u;
    float _399;
    float _400;
    float _401;
    if (_363)
    {
        uint _366 = _172 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _172 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_363)
    {
        uint _404 = _174 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _174 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_363)
    {
        uint _442 = _175 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _175 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _480 = (1.0 - hit._m0.x) - hit._m0.y;
    float _512 = (_299 - _243) * 0.00048828125;
    float _514 = (_300 - _244) * 0.00048828125;
    float _517 = (_355 - _243) * 0.00048828125;
    float _518 = (_356 - _244) * 0.00048828125;
    float _540 = _437 - _399;
    float _541 = _438 - _400;
    float _542 = _439 - _401;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _552 = _475 - _399;
    float _553 = _476 - _400;
    float _554 = _477 - _401;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = (((_299 * hit._m0.x) + (_243 * _480)) + (_355 * hit._m0.y)) * 0.00048828125;
    float _565 = (((_300 * hit._m0.x) + (_244 * _480)) + (_356 * hit._m0.y)) * 0.00048828125;
    float _571 = (((float(_211) * _480) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _574 = (((float(_212) * _480) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _577 = (((float(_213) * _480) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _578 = _571 * 0.0078740157186985015869140625;
    float _580 = _574 * 0.0078740157186985015869140625;
    float _581 = _577 * 0.0078740157186985015869140625;
    float _587 = sin(cbMtdParam._m0[14u].w);
    float _588 = cos(cbMtdParam._m0[14u].w);
    float _589 = ((((float(int(uint(int(_295 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_239 << 16u) >> int(16u)))) * _480)) + (float(int(uint(int(_351 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _590 = ((((float(int(uint(int(_295) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_239) >> int(16u)))) * _480)) + (float(int(uint(int(_351) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].z;
    float _597 = fma(_590, (-0.0) - _587, _588 * _589) + cbMtdParam._m0[14u].z;
    float _598 = fma(_590, _588, _589 * _587) + cbMtdParam._m0[14u].z;
    float _624 = (cbTextureTilingScale._m0[4u].x * (fract(cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + _564)) + cbTextureTilingScale._m0[4u].z;
    float _625 = (cbTextureTilingScale._m0[4u].y * (fract(cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + _565)) + cbTextureTilingScale._m0[4u].w;
    uvec2 _627 = uvec2(textureSize(M_CoralGeyser_01_snp_0_Texture2D_4, int(0u)));
    bool _632 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _685;
    if (_632)
    {
        float _643 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _649 = (_563 * _548) - (_560 * _551);
        float _652 = (_557 * _551) - (_563 * _545);
        float _655 = (_560 * _545) - (_557 * _548);
        float _682 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_652 * _652) + (_655 * _655)) + (_649 * _649)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_643 * gl_WorldRayDirectionEXT.x, _643 * gl_WorldRayDirectionEXT.y, _643 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _685 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    }
    else
    {
        _685 = 0.0;
    }
    vec4 _689 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_624, _625), _685);
    float _693 = cbPerFrame._m0[22u].x * 2.0;
    float _694 = _693 * cbMtdParam._m0[16u].x;
    float _700 = ((_689.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _702 = (-0.0) - (cbMtdParam._m0[15u].z * ((_689.x * 0.5) + (-0.25)));
    float _703 = fract(_694);
    float _705 = fract(_694 + 0.5);
    float _717 = abs((_703 * 2.0) + (-1.0));
    vec4 _735 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_703 * _702) + _597) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_700 * _703) + _598) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _737 = _735.x;
    float _759 = cbMtdParam._m0[19u].y * cbPerFrame._m0[22u].x;
    float _764 = fract(_759 * cbMtdParam._m0[20u].z) + _564;
    float _765 = fract(_759 * cbMtdParam._m0[20u].w) + _565;
    float _816;
    if (_632)
    {
        float _776 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _782 = (_563 * _548) - (_560 * _551);
        float _785 = (_557 * _551) - (_563 * _545);
        float _788 = (_560 * _545) - (_557 * _548);
        float _814 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_785 * _785) + (_788 * _788)) + (_782 * _782)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_776 * gl_WorldRayDirectionEXT.x, _776 * gl_WorldRayDirectionEXT.y, _776 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _816 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _818 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_624, _625), _816);
    float _826 = ((_818.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _828 = (-0.0) - (cbMtdParam._m0[15u].z * ((_818.x * 0.5) + (-0.25)));
    vec4 _853 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_703 * _828) + _764) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_826 * _703) + _765) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _855 = _853.x;
    float _856 = _853.y;
    float _857 = _853.z;
    vec4 _858 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_705 * _828) + _764) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_826 * _705) + _765) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _887 = fract(cbMtdParam._m0[22u].x * _759) + _564;
    float _888 = fract(cbMtdParam._m0[22u].y * _759) + _565;
    float _939;
    if (_632)
    {
        float _899 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _905 = (_563 * _548) - (_560 * _551);
        float _908 = (_557 * _551) - (_563 * _545);
        float _911 = (_560 * _545) - (_557 * _548);
        float _937 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_908 * _908) + (_911 * _911)) + (_905 * _905)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_899 * gl_WorldRayDirectionEXT.x, _899 * gl_WorldRayDirectionEXT.y, _899 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _939 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    }
    else
    {
        _939 = 0.0;
    }
    vec4 _941 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_624, _625), _939);
    float _949 = ((_941.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _951 = (-0.0) - (cbMtdParam._m0[15u].z * ((_941.x * 0.5) + (-0.25)));
    vec4 _976 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_703 * _951) + _887) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_949 * _703) + _888) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _978 = _976.x;
    float _979 = _976.y;
    float _980 = _976.z;
    vec4 _981 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_705 * _951) + _887) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_949 * _705) + _888) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _998 = ((((_981.x - _978) * _717) + _978) * cbMtdParam._m0[13u].x) + ((((_858.x - _855) * _717) + _855) * cbMtdParam._m0[11u].x);
    float _999 = ((((_981.y - _979) * _717) + _979) * cbMtdParam._m0[13u].y) + ((((_858.y - _856) * _717) + _856) * cbMtdParam._m0[11u].y);
    float _1000 = ((((_981.z - _980) * _717) + _980) * cbMtdParam._m0[13u].z) + ((((_858.z - _857) * _717) + _857) * cbMtdParam._m0[11u].z);
    float _1006 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1683 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1007 = isnan(1.0) ? _1683 : (isnan(_1683) ? 1.0 : min(_1683, 1.0));
    float _1014 = ((_1007 * _1007) * (3.0 - (_1007 * 2.0))) - cbMtdParam._m0[16u].y;
    float _1029 = fract(cbMtdParam._m0[23u].x * _759) + _564;
    float _1030 = fract(cbMtdParam._m0[23u].y * _759) + _565;
    float _1081;
    if (_632)
    {
        float _1041 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1047 = (_563 * _548) - (_560 * _551);
        float _1050 = (_557 * _551) - (_563 * _545);
        float _1053 = (_560 * _545) - (_557 * _548);
        float _1079 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_1050 * _1050) + (_1053 * _1053)) + (_1047 * _1047)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1041 * gl_WorldRayDirectionEXT.x, _1041 * gl_WorldRayDirectionEXT.y, _1041 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _1081 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    }
    else
    {
        _1081 = 0.0;
    }
    vec4 _1083 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_624, _625), _1081);
    float _1091 = ((_1083.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1093 = (-0.0) - (cbMtdParam._m0[15u].z * ((_1083.x * 0.5) + (-0.25)));
    vec4 _1119 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_703 * _1093) + _1029) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1091 * _703) + _1030) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1121 = _1119.x;
    float _1122 = _1119.y;
    float _1123 = _1119.z;
    vec4 _1124 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_705 * _1093) + _1029) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1091 * _705) + _1030) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1155 = fract(cbMtdParam._m0[21u].z * _759) + _564;
    float _1156 = fract(cbMtdParam._m0[21u].w * _759) + _565;
    float _1162 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1163 = _1162 * gl_WorldRayDirectionEXT.x;
    float _1164 = _1162 * gl_WorldRayDirectionEXT.y;
    float _1165 = _1162 * gl_WorldRayDirectionEXT.z;
    float _1209;
    if (_632)
    {
        float _1175 = (_563 * _548) - (_560 * _551);
        float _1178 = (_557 * _551) - (_563 * _545);
        float _1181 = (_560 * _545) - (_557 * _548);
        float _1207 = ((log2((((float(_627.y) * 0.5) * float(_627.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_1178 * _1178) + (_1181 * _1181)) + (_1175 * _1175)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1163, _1164, _1165), vec3(_578, _580, _581))));
        _1209 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
    }
    else
    {
        _1209 = 0.0;
    }
    vec4 _1211 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_624, _625), _1209);
    float _1215 = _693 * cbMtdParam._m0[19u].w;
    float _1220 = ((_1211.y * 0.5) + (-0.25)) * cbMtdParam._m0[19u].z;
    float _1222 = (-0.0) - (cbMtdParam._m0[19u].z * ((_1211.x * 0.5) + (-0.25)));
    float _1223 = fract(_1215);
    float _1225 = fract(_1215 + 0.5);
    float _1236 = abs((_1223 * 2.0) + (-1.0));
    vec4 _1253 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1223 * _1222) + _1155) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1220 * _1223) + _1156) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1255 = _1253.x;
    float _1256 = _1253.y;
    float _1257 = _1253.z;
    vec4 _1258 = textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1225 * _1222) + _1155) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1220 * _1225) + _1156) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1282 = cbMtdParam._m0[14u].y * (((textureLod(sampler2D(M_CoralGeyser_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_705 * _702) + _597) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_700 * _705) + _598) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0).x - _737) * _717) + _737);
    float _1298 = inversesqrt(dot(vec3(_578, _580, _581), vec3(_578, _580, _581)));
    float _1299 = _1298 * _578;
    float _1300 = _1298 * _580;
    float _1301 = _1298 * _581;
    float _1313 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1314 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1315 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1316 = (-0.0) - _1163;
    float _1317 = (-0.0) - _1164;
    float _1318 = (-0.0) - _1165;
    float _1324 = float(gl_LaunchIDEXT.x);
    float _1325 = float(gl_LaunchIDEXT.y);
    float _1328 = float(gl_LaunchSizeEXT.x);
    float _1342 = fract(fract(sin(dot(vec2(_1324 / _1328, _1325 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1355 = fract(fract(sin(dot(vec2((_1324 + 128.0) / _1328, (_1325 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1365 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1366 = _1365.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1366, _1365.w, _1366, vec3(_1313, _1314, _1315), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1431;
    float _1432;
    float _1433;
    if (_69._m0 == 0u)
    {
        float _1386 = g_sceneCB._m0[4u].x - _1163;
        float _1387 = g_sceneCB._m0[4u].y - _1164;
        float _1388 = g_sceneCB._m0[4u].z - _1165;
        float _1392 = inversesqrt(dot(vec3(_1386, _1387, _1388), vec3(_1386, _1387, _1388)));
        float _1396 = dot(vec3(_1299, _1300, _1301), vec3(g_sceneCB._m0[4u].xyz));
        float _1704 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1399 = isnan(1.0) ? _1704 : (isnan(_1704) ? 1.0 : min(_1704, 1.0));
        float _1400 = dot(vec3(_1299, _1300, _1301), vec3(_1316, _1317, _1318));
        float _1715 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1386 * _1392, _1387 * _1392, _1388 * _1392));
        float _1726 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1415 = (exp2(log2(1.0 - (isnan(1.0) ? _1726 : (isnan(_1726) ? 1.0 : min(_1726, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1421 = (0.5 / ((_1399 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1715 : (isnan(_1715) ? 1.0 : min(_1715, 1.0))))) * _1399;
        float _1737 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1423 = (isnan(1.0) ? _1737 : (isnan(_1737) ? 1.0 : min(_1737, 1.0))) * 0.31831014156341552734375;
        _1431 = (_1415 * g_sceneCB._m0[5u].x) * _1423;
        _1432 = (_1415 * g_sceneCB._m0[5u].y) * _1423;
        _1433 = (_1415 * g_sceneCB._m0[5u].z) * _1423;
    }
    else
    {
        _1431 = 0.0;
        _1432 = 0.0;
        _1433 = 0.0;
    }
    bool _1435 = abs(_1300) < 0.89999997615814208984375;
    float _1437 = float(_1435);
    float _1438 = _1435 ? 0.0 : 1.0;
    float _1441 = (_1437 * _1301) - (_1438 * _1300);
    float _1442 = _1438 * _1299;
    float _1444 = (-0.0) - (_1299 * _1437);
    float _1448 = inversesqrt(dot(vec3(_1441, _1442, _1444), vec3(_1441, _1442, _1444)));
    float _1449 = _1441 * _1448;
    float _1450 = _1442 * _1448;
    float _1451 = _1448 * _1444;
    float _1454 = (_1450 * _1301) - (_1451 * _1300);
    float _1457 = (_1451 * _1299) - (_1449 * _1301);
    float _1460 = (_1449 * _1300) - (_1450 * _1299);
    float _1462;
    float _1470;
    float _1461 = 0.0;
    uint _1463 = 0u;
    float _1467;
    bool _1469;
    for (;;)
    {
        _1467 = (float(_1463) + _1342) * 0.03125;
        _1469 = _1463 == 0u;
        float frontier_phi_49_pred;
        if (_1469)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1591;
            float _1592;
            uint _1594;
            _1591 = 0.0;
            _1592 = 0.5;
            _1594 = _1463;
            float _1471;
            for (;;)
            {
                _1471 = ((_1594 & 1u) != 0u) ? (_1592 + _1591) : _1591;
                uint _1595 = _1594 >> 1u;
                if (_1595 == 0u)
                {
                    break;
                }
                else
                {
                    _1591 = _1471;
                    _1592 *= 0.5;
                    _1594 = _1595;
                }
            }
            frontier_phi_49_pred = _1471;
        }
        _1470 = frontier_phi_49_pred;
        float _1472 = _1470 + _1355;
        float _1476 = sqrt(_1467);
        float _1477 = ((_1472 > 1.0) ? (_1472 + (-1.0)) : _1472) * 6.283185482025146484375;
        float _1480 = cos(_1477) * _1476;
        float _1482 = sin(_1477) * _1476;
        float _1484 = sqrt(1.0 - _1467);
        float _1497 = ((_1484 * _1299) + (_1480 * _1454)) + (_1482 * _1449);
        float _1498 = ((_1484 * _1300) + (_1480 * _1457)) + (_1482 * _1450);
        float _1499 = ((_1484 * _1301) + (_1480 * _1460)) + (_1482 * _1451);
        _68._m0 = 1u;
        uvec4 _1503 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1504 = _1503.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1504, _1503.w, _1504, vec3(_1313, _1314, _1315), 9.9999997473787516355514526367188e-05, vec3(_1497, _1498, _1499), 10000.0, 1);
        float _1510 = dot(vec3(_1299, _1300, _1301), vec3(_1497, _1498, _1499));
        float _1748 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1513 = isnan(1.0) ? _1748 : (isnan(_1748) ? 1.0 : min(_1748, 1.0));
        _1462 = ((float(_68._m0 == 0u) * _1513) / (_1513 * 0.3183098733425140380859375)) + _1461;
        uint _1464 = _1463 + 1u;
        if (_1464 == 32u)
        {
            break;
        }
        else
        {
            _1461 = _1462;
            _1463 = _1464;
            continue;
        }
    }
    float _1522 = _1462 * 0.009947183541953563690185546875;
    float _1527 = dot(vec3(_1163, _1164, _1165), vec3(_1299, _1300, _1301)) * 2.0;
    vec4 _1539 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1163 - (_1527 * _1299), _1164 - (_1527 * _1300), _1165 - (_1527 * _1301)), 4.0);
    float _1544 = dot(vec3(_1316, _1317, _1318), vec3(_1299, _1300, _1301));
    float _1759 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
    float _1553 = (exp2(log2(1.0 - (isnan(1.0) ? _1759 : (isnan(_1759) ? 1.0 : min(_1759, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1561 = (_1431 + (((_1282 * (((((((_1258.x - _1255) * _1236) + _1255) * cbMtdParam._m0[12u].x) + ((((_1124.x - _1121) * _717) + _1121) * cbMtdParam._m0[9u].x)) * _1014) - _998)) + _998) * cbMtdParam._m0[19u].x)) + ((_1539.x * _1522) * _1553);
    float _1563 = (_1432 + (((_1282 * (((((((_1258.y - _1256) * _1236) + _1256) * cbMtdParam._m0[12u].y) + ((((_1124.y - _1122) * _717) + _1122) * cbMtdParam._m0[9u].y)) * _1014) - _999)) + _999) * cbMtdParam._m0[19u].x)) + ((_1539.y * _1522) * _1553);
    float _1565 = (_1433 + (((_1282 * (((((((_1258.z - _1257) * _1236) + _1257) * cbMtdParam._m0[12u].z) + ((((_1124.z - _1123) * _717) + _1123) * cbMtdParam._m0[9u].z)) * _1014) - _1000)) + _1000) * cbMtdParam._m0[19u].x)) + ((_1539.z * _1522) * _1553);
    float _1770 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
    float _1781 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
    float _1792 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    bool _1574 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1585;
    _1585.x = _1574 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1770 : (isnan(_1770) ? 1.0 : min(_1770, 1.0)));
    _1585.y = _1574 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1781 : (isnan(_1781) ? 1.0 : min(_1781, 1.0)));
    _1585.z = _1574 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1792 : (isnan(_1792) ? 1.0 : min(_1792, 1.0)));
    payload._m0 = _1585;
}


