#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _48
{
    vec3 _m0;
};

struct _52
{
    vec2 _m0;
};

struct _55
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_A_NoLight_FlipBook_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _48 payload;
hitAttributeEXT _52 hit;
layout(location = 1) rayPayloadEXT _55 _57;
layout(location = 2) rayPayloadEXT _55 _58;

vec3 _923;

void main()
{
    float _66 = float(gl_LaunchSizeEXT.y);
    float _96 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _97 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _116 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _117 = _116.y;
    uint _157;
    uint _159;
    uint _160;
    if (_116.x == 0u)
    {
        uint _125 = (_117 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _134 = uvec3(texelFetch(l_geomIndexBuffer, int(_125)).x, texelFetch(l_geomIndexBuffer, int(_125 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_125 + 2u)).x);
        _157 = _134.x;
        _159 = _134.y;
        _160 = _134.z;
    }
    else
    {
        uint _138 = uint(gl_PrimitiveID) * 6u;
        uint _140 = _138 & 4294967292u;
        uint _143 = (_117 + _140) >> 2u;
        uvec2 _150 = uvec2(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x);
        uint _151 = _150.x;
        uint _152 = _150.y;
        uint _154 = _151 >> 16u;
        uint _155 = _152 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_140 == _138)
        {
            frontier_phi_3_2_ladder = _155;
            frontier_phi_3_2_ladder_1 = _151 & 65535u;
            frontier_phi_3_2_ladder_2 = _154;
        }
        else
        {
            frontier_phi_3_2_ladder = _152 >> 16u;
            frontier_phi_3_2_ladder_1 = _154;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _157 = frontier_phi_3_2_ladder_1;
        _159 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder;
    }
    uvec4 _164 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _165 = _164.x;
    uint _166 = _164.z;
    bool _167 = _166 != 0u;
    bool _169 = _116.w == 0u;
    bool _170 = _167 || _169;
    uint _172 = (_165 * _157) + 12u;
    uint _196;
    uint _197;
    uint _198;
    uint _199;
    if (_170)
    {
        uvec4 _175 = texelFetch(l_geomAttrib_0, int(_172 >> 2u));
        uint _176 = _175.x;
        _196 = _176 & 255u;
        _197 = (_176 >> 8u) & 255u;
        _198 = (_176 >> 16u) & 255u;
        _199 = 20u;
    }
    else
    {
        uint _184 = _172 >> 2u;
        uvec2 _190 = uvec2(texelFetch(l_geomAttrib_0, int(_184)).x, texelFetch(l_geomAttrib_0, int(_184 + 1u)).x);
        uint _191 = _190.x;
        _196 = _191 & 65535u;
        _197 = _191 >> 16u;
        _198 = _190.y & 65535u;
        _199 = 24u;
    }
    bool _205 = _166 == 0u;
    uint _206;
    if (_205)
    {
        _206 = _199;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_169)
        {
            frontier_phi_9_10_ladder = _199 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _199 + 8u;
        }
        _206 = frontier_phi_9_10_ladder;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((((_165 * _157) + 4u) + (_167 ? (_206 + 4u) : _206)) >> 2u));
    uint _218 = _217.x;
    float _222 = float(int(uint(int(_218 << 16u) >> int(16u))));
    float _223 = float(int(uint(int(_218) >> int(16u))));
    uint _225 = (_165 * _159) + 12u;
    uint _246;
    uint _247;
    uint _248;
    uint _249;
    if (_170)
    {
        uvec4 _227 = texelFetch(l_geomAttrib_0, int(_225 >> 2u));
        uint _228 = _227.x;
        _246 = _228 & 255u;
        _247 = (_228 >> 8u) & 255u;
        _248 = (_228 >> 16u) & 255u;
        _249 = 20u;
    }
    else
    {
        uint _234 = _225 >> 2u;
        uvec2 _240 = uvec2(texelFetch(l_geomAttrib_0, int(_234)).x, texelFetch(l_geomAttrib_0, int(_234 + 1u)).x);
        uint _241 = _240.x;
        _246 = _241 & 65535u;
        _247 = _241 >> 16u;
        _248 = _240.y & 65535u;
        _249 = 24u;
    }
    uint _253;
    if (_205)
    {
        _253 = _249;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_169)
        {
            frontier_phi_16_17_ladder = _249 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _249 + 8u;
        }
        _253 = frontier_phi_16_17_ladder;
    }
    uvec4 _262 = texelFetch(l_geomAttrib_0, int((((_165 * _159) + 4u) + (_167 ? (_253 + 4u) : _253)) >> 2u));
    uint _263 = _262.x;
    float _267 = float(int(uint(int(_263 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_263) >> int(16u))));
    uint _270 = (_165 * _160) + 12u;
    uint _291;
    uint _292;
    uint _293;
    uint _294;
    if (_170)
    {
        uvec4 _272 = texelFetch(l_geomAttrib_0, int(_270 >> 2u));
        uint _273 = _272.x;
        _291 = _273 & 255u;
        _292 = (_273 >> 8u) & 255u;
        _293 = (_273 >> 16u) & 255u;
        _294 = 20u;
    }
    else
    {
        uint _279 = _270 >> 2u;
        uvec2 _285 = uvec2(texelFetch(l_geomAttrib_0, int(_279)).x, texelFetch(l_geomAttrib_0, int(_279 + 1u)).x);
        uint _286 = _285.x;
        _291 = _286 & 65535u;
        _292 = _286 >> 16u;
        _293 = _285.y & 65535u;
        _294 = 24u;
    }
    uint _298;
    if (_205)
    {
        _298 = _294;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_169)
        {
            frontier_phi_23_24_ladder = _294 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _294 + 8u;
        }
        _298 = frontier_phi_23_24_ladder;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int((((_165 * _160) + 4u) + (_167 ? (_298 + 4u) : _298)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    bool _315 = _116.z == 0u;
    float _351;
    float _352;
    float _353;
    if (_315)
    {
        uint _318 = _157 * 3u;
        uvec3 _327 = uvec3(texelFetch(l_geomPositionBuffer, int(_318)).x, texelFetch(l_geomPositionBuffer, int(_318 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_318 + 2u)).x);
        _351 = uintBitsToFloat(_327.x);
        _352 = uintBitsToFloat(_327.y);
        _353 = uintBitsToFloat(_327.z);
    }
    else
    {
        uint _335 = _157 * 2u;
        uvec2 _341 = uvec2(texelFetch(l_geomPositionBuffer, int(_335)).x, texelFetch(l_geomPositionBuffer, int(_335 + 1u)).x);
        uint _342 = _341.x;
        _351 = unpackHalf2x16(_342).x;
        _352 = unpackHalf2x16(_342 >> 16u).x;
        _353 = unpackHalf2x16(_341.y).x;
    }
    float _389;
    float _390;
    float _391;
    if (_315)
    {
        uint _356 = _159 * 3u;
        uvec3 _365 = uvec3(texelFetch(l_geomPositionBuffer, int(_356)).x, texelFetch(l_geomPositionBuffer, int(_356 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_356 + 2u)).x);
        _389 = uintBitsToFloat(_365.x);
        _390 = uintBitsToFloat(_365.y);
        _391 = uintBitsToFloat(_365.z);
    }
    else
    {
        uint _373 = _159 * 2u;
        uvec2 _379 = uvec2(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x);
        uint _380 = _379.x;
        _389 = unpackHalf2x16(_380).x;
        _390 = unpackHalf2x16(_380 >> 16u).x;
        _391 = unpackHalf2x16(_379.y).x;
    }
    float _427;
    float _428;
    float _429;
    if (_315)
    {
        uint _394 = _160 * 3u;
        uvec3 _403 = uvec3(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_394 + 2u)).x);
        _427 = uintBitsToFloat(_403.x);
        _428 = uintBitsToFloat(_403.y);
        _429 = uintBitsToFloat(_403.z);
    }
    else
    {
        uint _411 = _160 * 2u;
        uvec2 _417 = uvec2(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x);
        uint _418 = _417.x;
        _427 = unpackHalf2x16(_418).x;
        _428 = unpackHalf2x16(_418 >> 16u).x;
        _429 = unpackHalf2x16(_417.y).x;
    }
    float _432 = (1.0 - hit._m0.x) - hit._m0.y;
    float _473 = _389 - _351;
    float _474 = _390 - _352;
    float _475 = _391 - _353;
    float _478 = fma(_475, gl_ObjectToWorldEXT[2u].x, fma(_474, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _473));
    float _481 = fma(_475, gl_ObjectToWorldEXT[2u].y, fma(_474, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _473));
    float _484 = fma(_475, gl_ObjectToWorldEXT[2u].z, fma(_474, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _473));
    float _485 = _427 - _351;
    float _486 = _428 - _352;
    float _487 = _429 - _353;
    float _490 = fma(_487, gl_ObjectToWorldEXT[2u].x, fma(_486, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _485));
    float _493 = fma(_487, gl_ObjectToWorldEXT[2u].y, fma(_486, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _485));
    float _496 = fma(_487, gl_ObjectToWorldEXT[2u].z, fma(_486, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _485));
    float _503 = (((float(_196) * _432) + (-127.0)) + (float(_246) * hit._m0.x)) + (float(_291) * hit._m0.y);
    float _506 = (((float(_197) * _432) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _509 = (((float(_198) * _432) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _510 = _503 * 0.0078740157186985015869140625;
    float _512 = _506 * 0.0078740157186985015869140625;
    float _513 = _509 * 0.0078740157186985015869140625;
    uint _528 = uint(int(floor(cbMtdParam._m0[10u].x)));
    uint _529 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _531 = float(int(_528 - _529 * (_528 / _529)));
    uvec2 _554 = uvec2(textureSize(S_A_NoLight_FlipBook_snp_0_Texture2D_0, int(0u)));
    float _563 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _564 = _563 * gl_WorldRayDirectionEXT.x;
    float _565 = _563 * gl_WorldRayDirectionEXT.y;
    float _566 = _563 * gl_WorldRayDirectionEXT.z;
    float _618;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _580 = (_496 * _481) - (_493 * _484);
        float _583 = (_490 * _484) - (_496 * _478);
        float _586 = (_493 * _478) - (_490 * _481);
        float _615 = ((log2((((float(_554.y) * 0.5) * float(_554.x)) * abs((((_313 - _223) * (_267 - _222)) - ((_312 - _222) * (_268 - _223))) * 2.384185791015625e-07)) / (sqrt(((_583 * _583) + (_586 * _586)) + (_580 * _580)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_97 * _97) + (_96 * _96)) + (_98 * _98)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _66)))))) / abs(dot(vec3(_564, _565, _566), vec3(_510, _512, _513))));
        _618 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    }
    else
    {
        _618 = 0.0;
    }
    vec4 _622 = textureLod(sampler2D(S_A_NoLight_FlipBook_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((fract((((_267 * hit._m0.x) + (_222 * _432)) + (_312 * hit._m0.y)) * 0.00048828125) + (_531 - cbMtdParam._m0[10u].z * trunc(_531 / cbMtdParam._m0[10u].z))) * (1.0 / cbMtdParam._m0[10u].z)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((fract((((_268 * hit._m0.x) + (_223 * _432)) + (_313 * hit._m0.y)) * 0.00048828125) + floor(_531 / cbMtdParam._m0[10u].z)) * (1.0 / cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _618);
    float _633 = inversesqrt(dot(vec3(_510, _512, _513), vec3(_510, _512, _513)));
    float _634 = _633 * _510;
    float _635 = _633 * _512;
    float _636 = _633 * _513;
    float _648 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _649 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _650 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _651 = (-0.0) - _564;
    float _653 = (-0.0) - _565;
    float _654 = (-0.0) - _566;
    float _660 = float(gl_LaunchIDEXT.x);
    float _661 = float(gl_LaunchIDEXT.y);
    float _664 = float(gl_LaunchSizeEXT.x);
    float _678 = fract(fract(sin(dot(vec2(_660 / _664, _661 / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _691 = fract(fract(sin(dot(vec2((_660 + 128.0) / _664, (_661 + 128.0) / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _58._m0 = 1u;
    uvec4 _701 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _702 = _701.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _702, _701.w, _702, vec3(_648, _649, _650), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _768;
    float _769;
    float _770;
    if (_58._m0 == 0u)
    {
        float _723 = g_sceneCB._m0[4u].x - _564;
        float _724 = g_sceneCB._m0[4u].y - _565;
        float _725 = g_sceneCB._m0[4u].z - _566;
        float _729 = inversesqrt(dot(vec3(_723, _724, _725), vec3(_723, _724, _725)));
        float _733 = dot(vec3(_634, _635, _636), vec3(g_sceneCB._m0[4u].xyz));
        float _1002 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
        float _736 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
        float _737 = dot(vec3(_634, _635, _636), vec3(_651, _653, _654));
        float _1013 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
        float _741 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_723 * _729, _724 * _729, _725 * _729));
        float _1024 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
        float _752 = (exp2(log2(1.0 - (isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _758 = (0.5 / ((_736 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0))))) * _736;
        float _1035 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
        float _760 = (isnan(1.0) ? _1035 : (isnan(_1035) ? 1.0 : min(_1035, 1.0))) * 0.31831014156341552734375;
        _768 = (_752 * g_sceneCB._m0[5u].x) * _760;
        _769 = (_752 * g_sceneCB._m0[5u].y) * _760;
        _770 = (_752 * g_sceneCB._m0[5u].z) * _760;
    }
    else
    {
        _768 = 0.0;
        _769 = 0.0;
        _770 = 0.0;
    }
    bool _772 = abs(_635) < 0.89999997615814208984375;
    float _774 = float(_772);
    float _775 = _772 ? 0.0 : 1.0;
    float _778 = (_774 * _636) - (_775 * _635);
    float _779 = _775 * _634;
    float _781 = (-0.0) - (_634 * _774);
    float _785 = inversesqrt(dot(vec3(_778, _779, _781), vec3(_778, _779, _781)));
    float _786 = _778 * _785;
    float _787 = _779 * _785;
    float _788 = _785 * _781;
    float _791 = (_787 * _636) - (_788 * _635);
    float _794 = (_788 * _634) - (_786 * _636);
    float _797 = (_786 * _635) - (_787 * _634);
    float _799;
    float _807;
    float _798 = 0.0;
    uint _800 = 0u;
    float _804;
    bool _806;
    for (;;)
    {
        _804 = (float(_800) + _678) * 0.03125;
        _806 = _800 == 0u;
        float frontier_phi_41_pred;
        if (_806)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _928;
            float _929;
            uint _931;
            _928 = 0.0;
            _929 = 0.5;
            _931 = _800;
            float _808;
            for (;;)
            {
                _808 = ((_931 & 1u) != 0u) ? (_929 + _928) : _928;
                uint _932 = _931 >> 1u;
                if (_932 == 0u)
                {
                    break;
                }
                else
                {
                    _928 = _808;
                    _929 *= 0.5;
                    _931 = _932;
                }
            }
            frontier_phi_41_pred = _808;
        }
        _807 = frontier_phi_41_pred;
        float _809 = _807 + _691;
        float _814 = sqrt(_804);
        float _815 = ((_809 > 1.0) ? (_809 + (-1.0)) : _809) * 6.283185482025146484375;
        float _818 = cos(_815) * _814;
        float _820 = sin(_815) * _814;
        float _822 = sqrt(1.0 - _804);
        float _835 = ((_822 * _634) + (_818 * _791)) + (_820 * _786);
        float _836 = ((_822 * _635) + (_818 * _794)) + (_820 * _787);
        float _837 = ((_822 * _636) + (_818 * _797)) + (_820 * _788);
        _57._m0 = 1u;
        uvec4 _841 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _842 = _841.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _842, _841.w, _842, vec3(_648, _649, _650), 9.9999997473787516355514526367188e-05, vec3(_835, _836, _837), 10000.0, 1);
        float _848 = dot(vec3(_634, _635, _636), vec3(_835, _836, _837));
        float _1046 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        float _851 = isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0));
        _799 = ((float(_57._m0 == 0u) * _851) / (_851 * 0.3183098733425140380859375)) + _798;
        uint _801 = _800 + 1u;
        if (_801 == 32u)
        {
            break;
        }
        else
        {
            _798 = _799;
            _800 = _801;
            continue;
        }
    }
    float _860 = _799 * 0.009947183541953563690185546875;
    float _865 = dot(vec3(_564, _565, _566), vec3(_634, _635, _636)) * 2.0;
    vec4 _877 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_564 - (_865 * _634), _565 - (_865 * _635), _566 - (_865 * _636)), 4.0);
    float _882 = dot(vec3(_651, _653, _654), vec3(_634, _635, _636));
    float _1057 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _891 = (exp2(log2(1.0 - (isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _899 = (_768 + (_622.x * cbMtdParam._m0[9u].x)) + ((_877.x * _860) * _891);
    float _901 = (_769 + (_622.y * cbMtdParam._m0[9u].y)) + ((_877.y * _860) * _891);
    float _903 = (_770 + (_622.z * cbMtdParam._m0[9u].z)) + ((_877.z * _860) * _891);
    float _1068 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _1079 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _1090 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    bool _911 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _922;
    _922.x = _911 ? ((_503 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0)));
    _922.y = _911 ? ((_506 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0)));
    _922.z = _911 ? ((_509 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0)));
    payload._m0 = _922;
}


