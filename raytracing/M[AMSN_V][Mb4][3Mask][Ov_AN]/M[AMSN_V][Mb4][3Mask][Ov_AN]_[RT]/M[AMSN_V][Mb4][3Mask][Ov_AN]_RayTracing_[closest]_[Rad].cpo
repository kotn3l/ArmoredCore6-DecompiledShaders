#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _1981;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _165 & 65535u;
            frontier_phi_3_2_ladder_2 = _169;
        }
        else
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _166 >> 16u;
        }
        _171 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
        _174 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _185 = _179 * _171;
    uint _186 = _185 + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 16u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 20u;
    }
    uvec4 _221 = texelFetch(l_geomAttrib_0, int((_213 + _185) >> 2u));
    uint _222 = _221.x;
    bool _236 = _180 == 0u;
    uint _237;
    if (_236)
    {
        _237 = _213 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 12u;
        }
        _237 = frontier_phi_9_10_ladder;
    }
    uvec4 _245 = texelFetch(l_geomAttrib_0, int(((_185 + 4u) + (_181 ? (_237 + 4u) : _237)) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uint _252 = _179 * _173;
    uint _253 = _252 + 12u;
    uint _274;
    uint _275;
    uint _276;
    uint _277;
    if (_184)
    {
        uvec4 _255 = texelFetch(l_geomAttrib_0, int(_253 >> 2u));
        uint _256 = _255.x;
        _274 = _256 & 255u;
        _275 = (_256 >> 8u) & 255u;
        _276 = (_256 >> 16u) & 255u;
        _277 = 16u;
    }
    else
    {
        uint _262 = _253 >> 2u;
        uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
        uint _269 = _268.x;
        _274 = _269 & 65535u;
        _275 = _269 >> 16u;
        _276 = _268.y & 65535u;
        _277 = 20u;
    }
    uvec4 _283 = texelFetch(l_geomAttrib_0, int((_277 + _252) >> 2u));
    uint _284 = _283.x;
    uint _296;
    if (_236)
    {
        _296 = _277 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _277 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _277 + 12u;
        }
        _296 = frontier_phi_16_17_ladder;
    }
    uvec4 _304 = texelFetch(l_geomAttrib_0, int(((_252 + 4u) + (_181 ? (_296 + 4u) : _296)) >> 2u));
    uint _305 = _304.x;
    float _309 = float(int(uint(int(_305 << 16u) >> int(16u))));
    float _310 = float(int(uint(int(_305) >> int(16u))));
    uint _311 = _179 * _174;
    uint _312 = _311 + 12u;
    uint _333;
    uint _334;
    uint _335;
    uint _336;
    if (_184)
    {
        uvec4 _314 = texelFetch(l_geomAttrib_0, int(_312 >> 2u));
        uint _315 = _314.x;
        _333 = _315 & 255u;
        _334 = (_315 >> 8u) & 255u;
        _335 = (_315 >> 16u) & 255u;
        _336 = 16u;
    }
    else
    {
        uint _321 = _312 >> 2u;
        uvec2 _327 = uvec2(texelFetch(l_geomAttrib_0, int(_321)).x, texelFetch(l_geomAttrib_0, int(_321 + 1u)).x);
        uint _328 = _327.x;
        _333 = _328 & 65535u;
        _334 = _328 >> 16u;
        _335 = _327.y & 65535u;
        _336 = 20u;
    }
    uvec4 _342 = texelFetch(l_geomAttrib_0, int((_336 + _311) >> 2u));
    uint _343 = _342.x;
    uint _355;
    if (_236)
    {
        _355 = _336 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _336 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _336 + 12u;
        }
        _355 = frontier_phi_23_24_ladder;
    }
    uvec4 _363 = texelFetch(l_geomAttrib_0, int(((_311 + 4u) + (_181 ? (_355 + 4u) : _355)) >> 2u));
    uint _364 = _363.x;
    float _368 = float(int(uint(int(_364 << 16u) >> int(16u))));
    float _369 = float(int(uint(int(_364) >> int(16u))));
    bool _371 = _130.z == 0u;
    float _407;
    float _408;
    float _409;
    if (_371)
    {
        uint _374 = _171 * 3u;
        uvec3 _383 = uvec3(texelFetch(l_geomPositionBuffer, int(_374)).x, texelFetch(l_geomPositionBuffer, int(_374 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_374 + 2u)).x);
        _407 = uintBitsToFloat(_383.x);
        _408 = uintBitsToFloat(_383.y);
        _409 = uintBitsToFloat(_383.z);
    }
    else
    {
        uint _391 = _171 * 2u;
        uvec2 _397 = uvec2(texelFetch(l_geomPositionBuffer, int(_391)).x, texelFetch(l_geomPositionBuffer, int(_391 + 1u)).x);
        uint _398 = _397.x;
        _407 = unpackHalf2x16(_398).x;
        _408 = unpackHalf2x16(_398 >> 16u).x;
        _409 = unpackHalf2x16(_397.y).x;
    }
    float _445;
    float _446;
    float _447;
    if (_371)
    {
        uint _412 = _173 * 3u;
        uvec3 _421 = uvec3(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_412 + 2u)).x);
        _445 = uintBitsToFloat(_421.x);
        _446 = uintBitsToFloat(_421.y);
        _447 = uintBitsToFloat(_421.z);
    }
    else
    {
        uint _429 = _173 * 2u;
        uvec2 _435 = uvec2(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x);
        uint _436 = _435.x;
        _445 = unpackHalf2x16(_436).x;
        _446 = unpackHalf2x16(_436 >> 16u).x;
        _447 = unpackHalf2x16(_435.y).x;
    }
    float _483;
    float _484;
    float _485;
    if (_371)
    {
        uint _450 = _174 * 3u;
        uvec3 _459 = uvec3(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_450 + 2u)).x);
        _483 = uintBitsToFloat(_459.x);
        _484 = uintBitsToFloat(_459.y);
        _485 = uintBitsToFloat(_459.z);
    }
    else
    {
        uint _467 = _174 * 2u;
        uvec2 _473 = uvec2(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x);
        uint _474 = _473.x;
        _483 = unpackHalf2x16(_474).x;
        _484 = unpackHalf2x16(_474 >> 16u).x;
        _485 = unpackHalf2x16(_473.y).x;
    }
    float _488 = (1.0 - hit._m0.x) - hit._m0.y;
    float _522 = (_309 - _250) * 0.00048828125;
    float _524 = (_310 - _251) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _555 = fma(_552, gl_ObjectToWorldEXT[2u].x, fma(_551, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _550));
    float _558 = fma(_552, gl_ObjectToWorldEXT[2u].y, fma(_551, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _550));
    float _561 = fma(_552, gl_ObjectToWorldEXT[2u].z, fma(_551, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _550));
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _567 = fma(_564, gl_ObjectToWorldEXT[2u].x, fma(_563, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _562));
    float _570 = fma(_564, gl_ObjectToWorldEXT[2u].y, fma(_563, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _562));
    float _573 = fma(_564, gl_ObjectToWorldEXT[2u].z, fma(_563, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _562));
    float _574 = (((_309 * hit._m0.x) + (_250 * _488)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _575 = (((_310 * hit._m0.x) + (_251 * _488)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _579 = (((float(_210) * _488) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _582 = (((float(_211) * _488) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = (((float(_212) * _488) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = _579 * 0.0078740157186985015869140625;
    float _588 = _582 * 0.0078740157186985015869140625;
    float _589 = _585 * 0.0078740157186985015869140625;
    float _602 = ((((float(_222 & 255u) * _488) + (-127.0)) + (float(_284 & 255u) * hit._m0.x)) + (float(_343 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_222 >> 8u) & 255u) * _488) + (-127.0)) + (float((_284 >> 8u) & 255u) * hit._m0.x)) + (float((_343 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_222 >> 16u) & 255u) * _488) + (-127.0)) + (float((_284 >> 16u) & 255u) * hit._m0.x)) + (float((_343 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float(_222 >> 24u) * _488) + (-127.0)) + (float(_284 >> 24u) * hit._m0.x)) + (float(_343 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _615 = ((_603 * _589) - (_604 * _588)) * _605;
    float _616 = ((_604 * _586) - (_602 * _589)) * _605;
    float _617 = ((_602 * _588) - (_603 * _586)) * _605;
    float _621 = inversesqrt(dot(vec3(_615, _616, _617), vec3(_615, _616, _617)));
    uvec2 _642 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_1, int(0u)));
    bool _647 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _700;
    if (_647)
    {
        float _658 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _664 = (_573 * _558) - (_570 * _561);
        float _667 = (_567 * _561) - (_573 * _555);
        float _670 = (_570 * _555) - (_567 * _558);
        float _697 = ((log2((((float(_642.y) * 0.5) * float(_642.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_667 * _667) + (_670 * _670)) + (_664 * _664)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_658 * gl_WorldRayDirectionEXT.x, _658 * gl_WorldRayDirectionEXT.y, _658 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _700 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    }
    else
    {
        _700 = 0.0;
    }
    vec4 _704 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _574) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _575) + cbTextureTilingScale._m0[1u].w), _700);
    float _709 = _704.x * cbMtdParam._m0[10u].x;
    float _710 = _704.y * cbMtdParam._m0[10u].y;
    float _711 = _704.z * cbMtdParam._m0[10u].z;
    uvec2 _729 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_2, int(0u)));
    float _780;
    if (_647)
    {
        float _740 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _746 = (_573 * _558) - (_570 * _561);
        float _749 = (_567 * _561) - (_573 * _555);
        float _752 = (_570 * _555) - (_567 * _558);
        float _778 = ((log2((((float(_729.y) * 0.5) * float(_729.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_749 * _749) + (_752 * _752)) + (_746 * _746)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_740 * gl_WorldRayDirectionEXT.x, _740 * gl_WorldRayDirectionEXT.y, _740 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _780 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    }
    else
    {
        _780 = 0.0;
    }
    vec4 _782 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _574) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _575) + cbTextureTilingScale._m0[6u].w), _780);
    uvec2 _801 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_0, int(0u)));
    float _852;
    if (_647)
    {
        float _812 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _818 = (_573 * _558) - (_570 * _561);
        float _821 = (_567 * _561) - (_573 * _555);
        float _824 = (_570 * _555) - (_567 * _558);
        float _850 = ((log2((((float(_801.y) * 0.5) * float(_801.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_821 * _821) + (_824 * _824)) + (_818 * _818)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_812 * gl_WorldRayDirectionEXT.x, _812 * gl_WorldRayDirectionEXT.y, _812 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _852 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    }
    else
    {
        _852 = 0.0;
    }
    vec4 _855 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * _574) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _575) + cbTextureTilingScale._m0[0u].w), _852);
    uvec2 _878 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_3, int(0u)));
    float _929;
    if (_647)
    {
        float _889 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _895 = (_573 * _558) - (_570 * _561);
        float _898 = (_567 * _561) - (_573 * _555);
        float _901 = (_570 * _555) - (_567 * _558);
        float _927 = ((log2((((float(_878.y) * 0.5) * float(_878.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_898 * _898) + (_901 * _901)) + (_895 * _895)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_889 * gl_WorldRayDirectionEXT.x, _889 * gl_WorldRayDirectionEXT.y, _889 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _929 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    }
    else
    {
        _929 = 0.0;
    }
    float _935 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _574) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _575) + cbTextureTilingScale._m0[7u].w), _929).x;
    float _945 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _855.x) * 2.0) - _935)) + 1.0;
    float _2097 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
    float _946 = isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0));
    float _953 = (_946 * ((_782.x * cbMtdParam._m0[11u].x) - _709)) + _709;
    float _954 = (_946 * ((_782.y * cbMtdParam._m0[11u].y) - _710)) + _710;
    float _955 = (_946 * ((_782.z * cbMtdParam._m0[11u].z) - _711)) + _711;
    uvec2 _972 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_8, int(0u)));
    float _1023;
    if (_647)
    {
        float _983 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _989 = (_573 * _558) - (_570 * _561);
        float _992 = (_567 * _561) - (_573 * _555);
        float _995 = (_570 * _555) - (_567 * _558);
        float _1021 = ((log2((((float(_972.y) * 0.5) * float(_972.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_992 * _992) + (_995 * _995)) + (_989 * _989)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_983 * gl_WorldRayDirectionEXT.x, _983 * gl_WorldRayDirectionEXT.y, _983 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1023 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    }
    else
    {
        _1023 = 0.0;
    }
    vec4 _1025 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _574) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _575) + cbTextureTilingScale._m0[11u].w), _1023);
    float _1038 = (((((1.0 - _855.y) * 2.0) - _935) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].z) + 1.0;
    float _2113 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1039 = isnan(1.0) ? _2113 : (isnan(_2113) ? 1.0 : min(_2113, 1.0));
    float _1046 = (((_1025.x * cbMtdParam._m0[12u].x) - _953) * _1039) + _953;
    float _1047 = (_1039 * ((_1025.y * cbMtdParam._m0[12u].y) - _954)) + _954;
    float _1048 = (_1039 * ((_1025.z * cbMtdParam._m0[12u].z) - _955)) + _955;
    uvec2 _1066 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_11, int(0u)));
    float _1117;
    if (_647)
    {
        float _1077 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1083 = (_573 * _558) - (_570 * _561);
        float _1086 = (_567 * _561) - (_573 * _555);
        float _1089 = (_570 * _555) - (_567 * _558);
        float _1115 = ((log2((((float(_1066.y) * 0.5) * float(_1066.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1086 * _1086) + (_1089 * _1089)) + (_1083 * _1083)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1077 * gl_WorldRayDirectionEXT.x, _1077 * gl_WorldRayDirectionEXT.y, _1077 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1117 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    }
    else
    {
        _1117 = 0.0;
    }
    vec4 _1119 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _574) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _575) + cbTextureTilingScale._m0[2u].w), _1117);
    float _1132 = (((((1.0 - _855.z) * 2.0) - _935) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].w) + 1.0;
    float _2129 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1133 = isnan(1.0) ? _2129 : (isnan(_2129) ? 1.0 : min(_2129, 1.0));
    uvec2 _1160 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_13, int(0u)));
    float _1211;
    if (_647)
    {
        float _1171 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1177 = (_573 * _558) - (_570 * _561);
        float _1180 = (_567 * _561) - (_573 * _555);
        float _1183 = (_570 * _555) - (_567 * _558);
        float _1209 = ((log2((((float(_1160.y) * 0.5) * float(_1160.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1180 * _1180) + (_1183 * _1183)) + (_1177 * _1177)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1171 * gl_WorldRayDirectionEXT.x, _1171 * gl_WorldRayDirectionEXT.y, _1171 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1211 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    }
    else
    {
        _1211 = 0.0;
    }
    vec4 _1213 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_13, SS_ClampAniso), vec2((cbTextureTilingScale._m0[3u].x * _574) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _575) + cbTextureTilingScale._m0[3u].w), _1211);
    float _1221 = ((((((_1119.x * cbMtdParam._m0[13u].x) - _1046) * _1133) + _1046) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _1213.x;
    float _1224 = ((((_1133 * ((_1119.y * cbMtdParam._m0[13u].y) - _1047)) + _1047) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _1213.y;
    float _1227 = ((((_1133 * ((_1119.z * cbMtdParam._m0[13u].z) - _1048)) + _1048) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _1213.z;
    uvec2 _1239 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_5, int(0u)));
    float _1290;
    if (_647)
    {
        float _1250 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1256 = (_573 * _558) - (_570 * _561);
        float _1259 = (_567 * _561) - (_573 * _555);
        float _1262 = (_570 * _555) - (_567 * _558);
        float _1288 = ((log2((((float(_1239.y) * 0.5) * float(_1239.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1259 * _1259) + (_1262 * _1262)) + (_1256 * _1256)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1250 * gl_WorldRayDirectionEXT.x, _1250 * gl_WorldRayDirectionEXT.y, _1250 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1290 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
    }
    else
    {
        _1290 = 0.0;
    }
    vec4 _1293 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _574) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _575) + cbTextureTilingScale._m0[8u].w), _1290);
    float _1295 = _1293.x;
    float _1296 = _1293.y;
    float _1297 = _1293.z;
    uvec2 _1309 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _1360;
    if (_647)
    {
        float _1320 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1326 = (_573 * _558) - (_570 * _561);
        float _1329 = (_567 * _561) - (_573 * _555);
        float _1332 = (_570 * _555) - (_567 * _558);
        float _1358 = ((log2((((float(_1309.y) * 0.5) * float(_1309.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1329 * _1329) + (_1332 * _1332)) + (_1326 * _1326)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1320 * gl_WorldRayDirectionEXT.x, _1320 * gl_WorldRayDirectionEXT.y, _1320 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1360 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
    }
    else
    {
        _1360 = 0.0;
    }
    vec4 _1362 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _574) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _575) + cbTextureTilingScale._m0[9u].w), _1360);
    float _1373 = ((_1362.x - _1295) * _946) + _1295;
    float _1374 = ((_1362.y - _1296) * _946) + _1296;
    float _1375 = ((_1362.z - _1297) * _946) + _1297;
    uvec2 _1387 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_15, int(0u)));
    float _1438;
    if (_647)
    {
        float _1398 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1404 = (_573 * _558) - (_570 * _561);
        float _1407 = (_567 * _561) - (_573 * _555);
        float _1410 = (_570 * _555) - (_567 * _558);
        float _1436 = ((log2((((float(_1387.y) * 0.5) * float(_1387.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1407 * _1407) + (_1410 * _1410)) + (_1404 * _1404)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1398 * gl_WorldRayDirectionEXT.x, _1398 * gl_WorldRayDirectionEXT.y, _1398 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1438 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    }
    else
    {
        _1438 = 0.0;
    }
    vec4 _1440 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _574) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _575) + cbTextureTilingScale._m0[4u].w), _1438);
    float _1451 = ((_1440.x - _1373) * _1039) + _1373;
    float _1452 = ((_1440.y - _1374) * _1039) + _1374;
    float _1453 = ((_1440.z - _1375) * _1039) + _1375;
    uvec2 _1466 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_16, int(0u)));
    float _1517;
    if (_647)
    {
        float _1477 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1483 = (_573 * _558) - (_570 * _561);
        float _1486 = (_567 * _561) - (_573 * _555);
        float _1489 = (_570 * _555) - (_567 * _558);
        float _1515 = ((log2((((float(_1466.y) * 0.5) * float(_1466.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1486 * _1486) + (_1489 * _1489)) + (_1483 * _1483)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1477 * gl_WorldRayDirectionEXT.x, _1477 * gl_WorldRayDirectionEXT.y, _1477 * gl_WorldRayDirectionEXT.z), vec3(_586, _588, _589))));
        _1517 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
    }
    else
    {
        _1517 = 0.0;
    }
    vec4 _1519 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _574) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _575) + cbTextureTilingScale._m0[5u].w), _1517);
    float _1532 = ((_1519.z - _1453) * _1133) + _1453;
    float _1535 = ((((_1519.x - _1451) * _1133) + _1451) * 2.0) + (-1.0);
    float _1537 = ((((_1519.y - _1452) * _1133) + _1452) * 2.0) + (-1.0);
    float _1538 = dot(vec2(_1535, _1537), vec2(_1535, _1537));
    float _2165 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
    float _1543 = sqrt(1.0 - (isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0))));
    uvec2 _1556 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_7, int(0u)));
    float _1560 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1561 = _1560 * gl_WorldRayDirectionEXT.x;
    float _1562 = _1560 * gl_WorldRayDirectionEXT.y;
    float _1563 = _1560 * gl_WorldRayDirectionEXT.z;
    float _1607;
    if (_647)
    {
        float _1573 = (_573 * _558) - (_570 * _561);
        float _1576 = (_567 * _561) - (_573 * _555);
        float _1579 = (_570 * _555) - (_567 * _558);
        float _1605 = ((log2((((float(_1556.y) * 0.5) * float(_1556.x)) * abs((_528 * _522) - (_527 * _524))) / (sqrt(((_1576 * _1576) + (_1579 * _1579)) + (_1573 * _1573)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1561, _1562, _1563), vec3(_586, _588, _589))));
        _1607 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
    }
    else
    {
        _1607 = 0.0;
    }
    vec4 _1609 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Ov_AN_snp_0_Texture2D_7, SS_ClampAniso), vec2((cbTextureTilingScale._m0[10u].x * _574) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _575) + cbTextureTilingScale._m0[10u].w), _1607);
    float _1619 = (((_1609.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].y) + _1535;
    float _1620 = (((_1609.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].y) + _1537;
    float _1623 = fma(_1543, _586, fma(_1620, _602, (_621 * _615) * _1619));
    float _1626 = fma(_1543, _588, fma(_1620, _603, (_621 * _616) * _1619));
    float _1629 = fma(_1543, _589, fma(_1620, _604, (_621 * _617) * _1619));
    float _1633 = inversesqrt(dot(vec3(_1623, _1626, _1629), vec3(_1623, _1626, _1629)));
    float _1634 = _1633 * _1623;
    float _1635 = _1633 * _1626;
    float _1636 = _1633 * _1629;
    float _1648 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1649 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1650 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1651 = (-0.0) - _1561;
    float _1653 = (-0.0) - _1562;
    float _1654 = (-0.0) - _1563;
    float _1660 = float(gl_LaunchIDEXT.x);
    float _1661 = float(gl_LaunchIDEXT.y);
    float _1664 = float(gl_LaunchSizeEXT.x);
    float _1678 = fract(fract(sin(dot(vec2(_1660 / _1664, _1661 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1691 = fract(fract(sin(dot(vec2((_1660 + 128.0) / _1664, (_1661 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _1701 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1702 = _1701.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1702, _1701.w, _1702, vec3(_1648, _1649, _1650), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    if (_72._m0 == 0u)
    {
        float _1722 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1634, _1635, _1636));
        float _2181 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1725 = isnan(1.0) ? _2181 : (isnan(_2181) ? 1.0 : min(_2181, 1.0));
        float _1744 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1532) * 0.949999988079071044921875);
        float _1745 = _1744 * _1744;
        float _1746 = g_sceneCB._m0[4u].x - _1561;
        float _1747 = g_sceneCB._m0[4u].y - _1562;
        float _1748 = g_sceneCB._m0[4u].z - _1563;
        float _1752 = inversesqrt(dot(vec3(_1746, _1747, _1748), vec3(_1746, _1747, _1748)));
        float _1753 = _1752 * _1746;
        float _1754 = _1752 * _1747;
        float _1755 = _1752 * _1748;
        float _1756 = dot(vec3(_1634, _1635, _1636), vec3(g_sceneCB._m0[4u].xyz));
        float _2192 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1759 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        float _1760 = dot(vec3(_1634, _1635, _1636), vec3(_1651, _1653, _1654));
        float _2203 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1763 = isnan(1.0) ? _2203 : (isnan(_2203) ? 1.0 : min(_2203, 1.0));
        float _1764 = dot(vec3(_1634, _1635, _1636), vec3(_1753, _1754, _1755));
        float _2214 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1767 = isnan(1.0) ? _2214 : (isnan(_2214) ? 1.0 : min(_2214, 1.0));
        float _1768 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1753, _1754, _1755));
        float _2225 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1772 = _1745 * _1745;
        float _1776 = ((_1767 * _1767) * (_1772 + (-1.0))) + 1.0;
        float _1788 = (exp2(log2(1.0 - (isnan(1.0) ? _2225 : (isnan(_2225) ? 1.0 : min(_2225, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1790 = 1.0 - _1745;
        float _1801 = (0.5 / (((_1763 * ((_1759 * _1790) + _1745)) + 9.9999999392252902907785028219223e-09) + (((_1763 * _1790) + _1745) * _1759))) * _1759;
        float _2236 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1803 = (isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0))) * (_1772 / ((_1776 * _1776) * 3.141590118408203125));
        _1810 = ((_1221 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1725;
        _1811 = ((_1224 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1725;
        _1812 = ((_1227 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1725;
        _1813 = (_1788 * g_sceneCB._m0[5u].x) * _1803;
        _1814 = (_1788 * g_sceneCB._m0[5u].y) * _1803;
        _1815 = (_1788 * g_sceneCB._m0[5u].z) * _1803;
    }
    else
    {
        _1810 = 0.0;
        _1811 = 0.0;
        _1812 = 0.0;
        _1813 = 0.0;
        _1814 = 0.0;
        _1815 = 0.0;
    }
    bool _1817 = abs(_1635) < 0.89999997615814208984375;
    float _1819 = float(_1817);
    float _1820 = _1817 ? 0.0 : 1.0;
    float _1823 = (_1819 * _1636) - (_1820 * _1635);
    float _1824 = _1820 * _1634;
    float _1826 = (-0.0) - (_1634 * _1819);
    float _1830 = inversesqrt(dot(vec3(_1823, _1824, _1826), vec3(_1823, _1824, _1826)));
    float _1831 = _1823 * _1830;
    float _1832 = _1824 * _1830;
    float _1833 = _1830 * _1826;
    float _1836 = (_1832 * _1636) - (_1833 * _1635);
    float _1839 = (_1833 * _1634) - (_1831 * _1636);
    float _1842 = (_1831 * _1635) - (_1832 * _1634);
    float _1844;
    float _1852;
    float _1843 = 0.0;
    uint _1845 = 0u;
    float _1849;
    bool _1851;
    for (;;)
    {
        _1849 = (float(_1845) + _1678) * 0.03125;
        _1851 = _1845 == 0u;
        float frontier_phi_63_pred;
        if (_1851)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _1986;
            float _1987;
            uint _1989;
            _1986 = 0.0;
            _1987 = 0.5;
            _1989 = _1845;
            float _1853;
            for (;;)
            {
                _1853 = ((_1989 & 1u) != 0u) ? (_1987 + _1986) : _1986;
                uint _1990 = _1989 >> 1u;
                if (_1990 == 0u)
                {
                    break;
                }
                else
                {
                    _1986 = _1853;
                    _1987 *= 0.5;
                    _1989 = _1990;
                }
            }
            frontier_phi_63_pred = _1853;
        }
        _1852 = frontier_phi_63_pred;
        float _1854 = _1852 + _1691;
        float _1858 = sqrt(_1849);
        float _1859 = ((_1854 > 1.0) ? (_1854 + (-1.0)) : _1854) * 6.283185482025146484375;
        float _1862 = cos(_1859) * _1858;
        float _1864 = sin(_1859) * _1858;
        float _1866 = sqrt(1.0 - _1849);
        float _1879 = ((_1866 * _1634) + (_1862 * _1836)) + (_1864 * _1831);
        float _1880 = ((_1866 * _1635) + (_1862 * _1839)) + (_1864 * _1832);
        float _1881 = ((_1866 * _1636) + (_1862 * _1842)) + (_1864 * _1833);
        _71._m0 = 1u;
        uvec4 _1885 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1886 = _1885.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1886, _1885.w, _1886, vec3(_1648, _1649, _1650), 9.9999997473787516355514526367188e-05, vec3(_1879, _1880, _1881), 10000.0, 1);
        float _1892 = dot(vec3(_1634, _1635, _1636), vec3(_1879, _1880, _1881));
        float _2247 = isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0));
        float _1895 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _1844 = ((float(_71._m0 == 0u) * _1895) / (_1895 * 0.3183098733425140380859375)) + _1843;
        uint _1846 = _1845 + 1u;
        if (_1846 == 32u)
        {
            break;
        }
        else
        {
            _1843 = _1844;
            _1845 = _1846;
            continue;
        }
    }
    float _1903 = _1844 * 0.009947183541953563690185546875;
    float _1908 = dot(vec3(_1561, _1562, _1563), vec3(_1634, _1635, _1636)) * 2.0;
    vec4 _1922 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1561 - (_1908 * _1634), _1562 - (_1908 * _1635), _1563 - (_1908 * _1636)), 4.0 - (_1532 * 4.0));
    float _1927 = dot(vec3(_1651, _1653, _1654), vec3(_1634, _1635, _1636));
    float _2258 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
    float _1936 = (exp2(log2(1.0 - (isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1942 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1634, _1635, _1636), 0.0);
    float _1953 = (_1813 + _1810) + (((_1942.x * _1221) + (_1936 * _1922.x)) * _1903);
    float _1957 = (_1814 + _1811) + (((_1942.y * _1224) + (_1936 * _1922.y)) * _1903);
    float _1961 = (_1815 + _1812) + (((_1942.z * _1227) + (_1936 * _1922.z)) * _1903);
    float _2269 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
    float _2280 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
    float _2291 = isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0));
    bool _1969 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1980;
    _1980.x = _1969 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2269 : (isnan(_2269) ? 1.0 : min(_2269, 1.0)));
    _1980.y = _1969 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0)));
    _1980.z = _1969 ? ((_585 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2291 : (isnan(_2291) ? 1.0 : min(_2291, 1.0)));
    payload._m0 = _1980;
}


