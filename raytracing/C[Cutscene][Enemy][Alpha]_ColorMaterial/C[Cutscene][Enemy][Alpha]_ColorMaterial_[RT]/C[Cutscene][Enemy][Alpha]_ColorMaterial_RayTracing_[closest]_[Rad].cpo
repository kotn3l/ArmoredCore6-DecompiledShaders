#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _67
{
    vec3 _m0;
};

struct _71
{
    vec2 _m0;
};

struct _79
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _67 payload;
hitAttributeEXT _71 hit;
layout(location = 1) rayPayloadEXT _79 _81;
layout(location = 2) rayPayloadEXT _79 _82;

vec3 _2323;

void main()
{
    float _90 = float(gl_LaunchSizeEXT.y);
    float _120 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _121 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _122 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _129 = sqrt(((_121 * _121) + (_120 * _120)) + (_122 * _122)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _90)))));
    uvec4 _140 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _141 = _140.y;
    uint _181;
    uint _183;
    uint _184;
    if (_140.x == 0u)
    {
        uint _149 = (_141 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _158 = uvec3(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_149 + 2u)).x);
        _181 = _158.x;
        _183 = _158.y;
        _184 = _158.z;
    }
    else
    {
        uint _162 = uint(gl_PrimitiveID) * 6u;
        uint _164 = _162 & 4294967292u;
        uint _167 = (_141 + _164) >> 2u;
        uvec2 _174 = uvec2(texelFetch(l_geomIndexBuffer, int(_167)).x, texelFetch(l_geomIndexBuffer, int(_167 + 1u)).x);
        uint _175 = _174.x;
        uint _176 = _174.y;
        uint _178 = _175 >> 16u;
        uint _179 = _176 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_164 == _162)
        {
            frontier_phi_3_2_ladder = _178;
            frontier_phi_3_2_ladder_1 = _175 & 65535u;
            frontier_phi_3_2_ladder_2 = _179;
        }
        else
        {
            frontier_phi_3_2_ladder = _179;
            frontier_phi_3_2_ladder_1 = _178;
            frontier_phi_3_2_ladder_2 = _176 >> 16u;
        }
        _181 = frontier_phi_3_2_ladder_1;
        _183 = frontier_phi_3_2_ladder;
        _184 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _188 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _189 = _188.x;
    uint _190 = _188.z;
    bool _191 = _190 != 0u;
    bool _193 = _140.w == 0u;
    bool _194 = _191 || _193;
    uint _195 = _189 * _181;
    uint _196 = _195 + 12u;
    uint _220;
    uint _221;
    uint _222;
    uint _223;
    if (_194)
    {
        uvec4 _199 = texelFetch(l_geomAttrib_0, int(_196 >> 2u));
        uint _200 = _199.x;
        _220 = _200 & 255u;
        _221 = (_200 >> 8u) & 255u;
        _222 = (_200 >> 16u) & 255u;
        _223 = 16u;
    }
    else
    {
        uint _208 = _196 >> 2u;
        uvec2 _214 = uvec2(texelFetch(l_geomAttrib_0, int(_208)).x, texelFetch(l_geomAttrib_0, int(_208 + 1u)).x);
        uint _215 = _214.x;
        _220 = _215 & 65535u;
        _221 = _215 >> 16u;
        _222 = _214.y & 65535u;
        _223 = 20u;
    }
    uvec4 _231 = texelFetch(l_geomAttrib_0, int((_223 + _195) >> 2u));
    uint _232 = _231.x;
    uint _244 = _223 | 8u;
    bool _245 = _190 == 0u;
    uint _246;
    if (_245)
    {
        _246 = _244;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_193)
        {
            frontier_phi_9_10_ladder = _244 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _244 + 8u;
        }
        _246 = frontier_phi_9_10_ladder;
    }
    uint _251 = _191 ? (_246 + 4u) : _246;
    uvec4 _255 = texelFetch(l_geomAttrib_0, int(((_195 + 4u) + _251) >> 2u));
    uint _256 = _255.x;
    float _260 = float(int(uint(int(_256 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_256) >> int(16u))));
    uvec4 _265 = texelFetch(l_geomAttrib_0, int(((_195 + 16u) + _251) >> 2u));
    uint _266 = _265.x;
    uint _272 = _189 * _183;
    uint _273 = _272 + 12u;
    uint _294;
    uint _295;
    uint _296;
    uint _297;
    if (_194)
    {
        uvec4 _275 = texelFetch(l_geomAttrib_0, int(_273 >> 2u));
        uint _276 = _275.x;
        _294 = _276 & 255u;
        _295 = (_276 >> 8u) & 255u;
        _296 = (_276 >> 16u) & 255u;
        _297 = 16u;
    }
    else
    {
        uint _282 = _273 >> 2u;
        uvec2 _288 = uvec2(texelFetch(l_geomAttrib_0, int(_282)).x, texelFetch(l_geomAttrib_0, int(_282 + 1u)).x);
        uint _289 = _288.x;
        _294 = _289 & 65535u;
        _295 = _289 >> 16u;
        _296 = _288.y & 65535u;
        _297 = 20u;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int((_297 + _272) >> 2u));
    uint _304 = _303.x;
    uint _315 = _297 | 8u;
    uint _316;
    if (_245)
    {
        _316 = _315;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_193)
        {
            frontier_phi_16_17_ladder = _315 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _315 + 8u;
        }
        _316 = frontier_phi_16_17_ladder;
    }
    uint _320 = _191 ? (_316 + 4u) : _316;
    uvec4 _324 = texelFetch(l_geomAttrib_0, int(((_272 + 4u) + _320) >> 2u));
    uint _325 = _324.x;
    float _329 = float(int(uint(int(_325 << 16u) >> int(16u))));
    float _330 = float(int(uint(int(_325) >> int(16u))));
    uvec4 _334 = texelFetch(l_geomAttrib_0, int(((_272 + 16u) + _320) >> 2u));
    uint _335 = _334.x;
    uint _341 = _189 * _184;
    uint _342 = _341 + 12u;
    uint _363;
    uint _364;
    uint _365;
    uint _366;
    if (_194)
    {
        uvec4 _344 = texelFetch(l_geomAttrib_0, int(_342 >> 2u));
        uint _345 = _344.x;
        _363 = _345 & 255u;
        _364 = (_345 >> 8u) & 255u;
        _365 = (_345 >> 16u) & 255u;
        _366 = 16u;
    }
    else
    {
        uint _351 = _342 >> 2u;
        uvec2 _357 = uvec2(texelFetch(l_geomAttrib_0, int(_351)).x, texelFetch(l_geomAttrib_0, int(_351 + 1u)).x);
        uint _358 = _357.x;
        _363 = _358 & 65535u;
        _364 = _358 >> 16u;
        _365 = _357.y & 65535u;
        _366 = 20u;
    }
    uvec4 _372 = texelFetch(l_geomAttrib_0, int((_366 + _341) >> 2u));
    uint _373 = _372.x;
    uint _384 = _366 | 8u;
    uint _385;
    if (_245)
    {
        _385 = _384;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_193)
        {
            frontier_phi_23_24_ladder = _384 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _384 + 8u;
        }
        _385 = frontier_phi_23_24_ladder;
    }
    uint _389 = _191 ? (_385 + 4u) : _385;
    uvec4 _393 = texelFetch(l_geomAttrib_0, int(((_341 + 4u) + _389) >> 2u));
    uint _394 = _393.x;
    float _398 = float(int(uint(int(_394 << 16u) >> int(16u))));
    float _399 = float(int(uint(int(_394) >> int(16u))));
    uvec4 _403 = texelFetch(l_geomAttrib_0, int(((_341 + 16u) + _389) >> 2u));
    uint _404 = _403.x;
    bool _411 = _140.z == 0u;
    float _447;
    float _448;
    float _449;
    if (_411)
    {
        uint _414 = _181 * 3u;
        uvec3 _423 = uvec3(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_414 + 2u)).x);
        _447 = uintBitsToFloat(_423.x);
        _448 = uintBitsToFloat(_423.y);
        _449 = uintBitsToFloat(_423.z);
    }
    else
    {
        uint _431 = _181 * 2u;
        uvec2 _437 = uvec2(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x);
        uint _438 = _437.x;
        _447 = unpackHalf2x16(_438).x;
        _448 = unpackHalf2x16(_438 >> 16u).x;
        _449 = unpackHalf2x16(_437.y).x;
    }
    float _485;
    float _486;
    float _487;
    if (_411)
    {
        uint _452 = _183 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _183 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _523;
    float _524;
    float _525;
    if (_411)
    {
        uint _490 = _184 * 3u;
        uvec3 _499 = uvec3(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_490 + 2u)).x);
        _523 = uintBitsToFloat(_499.x);
        _524 = uintBitsToFloat(_499.y);
        _525 = uintBitsToFloat(_499.z);
    }
    else
    {
        uint _507 = _184 * 2u;
        uvec2 _513 = uvec2(texelFetch(l_geomPositionBuffer, int(_507)).x, texelFetch(l_geomPositionBuffer, int(_507 + 1u)).x);
        uint _514 = _513.x;
        _523 = unpackHalf2x16(_514).x;
        _524 = unpackHalf2x16(_514 >> 16u).x;
        _525 = unpackHalf2x16(_513.y).x;
    }
    float _528 = (1.0 - hit._m0.x) - hit._m0.y;
    float _575 = (_329 - _260) * 0.00048828125;
    float _577 = (_330 - _261) * 0.00048828125;
    float _580 = (_398 - _260) * 0.00048828125;
    float _581 = (_399 - _261) * 0.00048828125;
    float _603 = _485 - _447;
    float _604 = _486 - _448;
    float _605 = _487 - _449;
    float _608 = fma(_605, gl_ObjectToWorldEXT[2u].x, fma(_604, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _603));
    float _611 = fma(_605, gl_ObjectToWorldEXT[2u].y, fma(_604, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _603));
    float _614 = fma(_605, gl_ObjectToWorldEXT[2u].z, fma(_604, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _603));
    float _615 = _523 - _447;
    float _616 = _524 - _448;
    float _617 = _525 - _449;
    float _620 = fma(_617, gl_ObjectToWorldEXT[2u].x, fma(_616, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _615));
    float _623 = fma(_617, gl_ObjectToWorldEXT[2u].y, fma(_616, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _615));
    float _626 = fma(_617, gl_ObjectToWorldEXT[2u].z, fma(_616, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _615));
    float _627 = (((_329 * hit._m0.x) + (_260 * _528)) + (_398 * hit._m0.y)) * 0.00048828125;
    float _628 = (((_330 * hit._m0.x) + (_261 * _528)) + (_399 * hit._m0.y)) * 0.00048828125;
    float _632 = (((float(_220) * _528) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_363) * hit._m0.y);
    float _635 = (((float(_221) * _528) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_364) * hit._m0.y);
    float _638 = (((float(_222) * _528) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_365) * hit._m0.y);
    float _639 = _632 * 0.0078740157186985015869140625;
    float _641 = _635 * 0.0078740157186985015869140625;
    float _642 = _638 * 0.0078740157186985015869140625;
    float _655 = ((((float(_232 & 255u) * _528) + (-127.0)) + (float(_304 & 255u) * hit._m0.x)) + (float(_373 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float((_232 >> 8u) & 255u) * _528) + (-127.0)) + (float((_304 >> 8u) & 255u) * hit._m0.x)) + (float((_373 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float((_232 >> 16u) & 255u) * _528) + (-127.0)) + (float((_304 >> 16u) & 255u) * hit._m0.x)) + (float((_373 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _658 = ((((float(_232 >> 24u) * _528) + (-127.0)) + (float(_304 >> 24u) * hit._m0.x)) + (float(_373 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _668 = ((_656 * _642) - (_657 * _641)) * _658;
    float _669 = ((_657 * _639) - (_655 * _642)) * _658;
    float _670 = ((_655 * _641) - (_656 * _639)) * _658;
    float _674 = inversesqrt(dot(vec3(_668, _669, _670), vec3(_668, _669, _670)));
    uvec2 _701 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, int(0u)));
    bool _706 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _759;
    if (_706)
    {
        float _717 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _723 = (_626 * _611) - (_623 * _614);
        float _726 = (_620 * _614) - (_626 * _608);
        float _729 = (_623 * _608) - (_620 * _611);
        float _756 = ((log2((((float(_701.y) * 0.5) * float(_701.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_726 * _726) + (_729 * _729)) + (_723 * _723)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_717 * gl_WorldRayDirectionEXT.x, _717 * gl_WorldRayDirectionEXT.y, _717 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _759 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    }
    else
    {
        _759 = 0.0;
    }
    uvec2 _777 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, int(0u)));
    float _828;
    if (_706)
    {
        float _788 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _794 = (_626 * _611) - (_623 * _614);
        float _797 = (_620 * _614) - (_626 * _608);
        float _800 = (_623 * _608) - (_620 * _611);
        float _826 = ((log2((((float(_777.y) * 0.5) * float(_777.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_797 * _797) + (_800 * _800)) + (_794 * _794)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_788 * gl_WorldRayDirectionEXT.x, _788 * gl_WorldRayDirectionEXT.y, _788 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _828 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    }
    else
    {
        _828 = 0.0;
    }
    vec4 _831 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _627) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _628) + cbTextureTilingScale._m0[0u].w), _828);
    float _835 = _831.z;
    float _848 = exp2(log2((1.0 - _835) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _849 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _850 = isnan(1.0) ? _849 : (isnan(_849) ? 1.0 : min(_849, 1.0));
    uvec2 _863 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, int(0u)));
    float _914;
    if (_706)
    {
        float _874 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _880 = (_626 * _611) - (_623 * _614);
        float _883 = (_620 * _614) - (_626 * _608);
        float _886 = (_623 * _608) - (_620 * _611);
        float _912 = ((log2((((float(_863.y) * 0.5) * float(_863.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_883 * _883) + (_886 * _886)) + (_880 * _880)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_874 * gl_WorldRayDirectionEXT.x, _874 * gl_WorldRayDirectionEXT.y, _874 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _914 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    }
    else
    {
        _914 = 0.0;
    }
    vec4 _917 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _627) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _628) + cbTextureTilingScale._m0[14u].w), _914);
    float _926 = log2(0.0);
    float _928 = exp2(_926 * cbMtdParam._m0[23u].x);
    float _929 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _930 = isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0));
    float _939 = exp2(log2(cbMtdParam._m0[23u].y * _835) * cbMtdParam._m0[22u].y);
    float _940 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _941 = isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0));
    uvec2 _953 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, int(0u)));
    float _1004;
    if (_706)
    {
        float _964 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _970 = (_626 * _611) - (_623 * _614);
        float _973 = (_620 * _614) - (_626 * _608);
        float _976 = (_623 * _608) - (_620 * _611);
        float _1002 = ((log2((((float(_953.y) * 0.5) * float(_953.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_973 * _973) + (_976 * _976)) + (_970 * _970)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_964 * gl_WorldRayDirectionEXT.x, _964 * gl_WorldRayDirectionEXT.y, _964 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1004 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    }
    else
    {
        _1004 = 0.0;
    }
    float _1015 = roundEven(5.0 - ((textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _627) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _628) + cbTextureTilingScale._m0[2u].w), _1004).x + (-0.02500000037252902984619140625)) * 8.0));
    float _1016 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1017 = isnan(4.0) ? _1016 : (isnan(_1016) ? 4.0 : min(_1016, 4.0));
    float _1030 = floor(_1017);
    vec4 _1034 = textureLod(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * _627) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _628) + cbTextureTilingScale._m0[17u].w, _1030), 0.0);
    uvec2 _1058 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, int(0u)));
    float _1109;
    if (_706)
    {
        float _1069 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1075 = (_626 * _611) - (_623 * _614);
        float _1078 = (_620 * _614) - (_626 * _608);
        float _1081 = (_623 * _608) - (_620 * _611);
        float _1107 = ((log2((((float(_1058.y) * 0.5) * float(_1058.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1078 * _1078) + (_1081 * _1081)) + (_1075 * _1075)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1069 * gl_WorldRayDirectionEXT.x, _1069 * gl_WorldRayDirectionEXT.y, _1069 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1109 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    }
    else
    {
        _1109 = 0.0;
    }
    vec4 _1111 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _627) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _628) + cbTextureTilingScale._m0[1u].w), _1109);
    float _1122 = cbMtdParam._m0[9u].x * _1111.x;
    float _1123 = cbMtdParam._m0[9u].y * _1111.y;
    float _1124 = cbMtdParam._m0[9u].z * _1111.z;
    float _1131 = (((cbMtdParam._m0[10u].x * _1034.x) - _1122) * _941) + _1122;
    float _1132 = (((cbMtdParam._m0[10u].y * _1034.y) - _1123) * _941) + _1123;
    float _1133 = (((cbMtdParam._m0[10u].z * _1034.z) - _1124) * _941) + _1124;
    float _1137 = exp2(log2(_831.w) * cbMtdParam._m0[23u].w);
    uvec2 _1149 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, int(0u)));
    float _1200;
    if (_706)
    {
        float _1160 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1166 = (_626 * _611) - (_623 * _614);
        float _1169 = (_620 * _614) - (_626 * _608);
        float _1172 = (_623 * _608) - (_620 * _611);
        float _1198 = ((log2((((float(_1149.y) * 0.5) * float(_1149.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1169 * _1169) + (_1172 * _1172)) + (_1166 * _1166)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1160 * gl_WorldRayDirectionEXT.x, _1160 * gl_WorldRayDirectionEXT.y, _1160 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1200 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    }
    else
    {
        _1200 = 0.0;
    }
    vec4 _1202 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _627) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _628) + cbTextureTilingScale._m0[7u].w), _1200);
    float _1221 = (((cbMtdParam._m0[16u].x * _1202.x) - _1131) * _1137) + _1131;
    float _1222 = (((cbMtdParam._m0[16u].y * _1202.y) - _1132) * _1137) + _1132;
    float _1223 = (((cbMtdParam._m0[16u].z * _1202.z) - _1133) * _1137) + _1133;
    uvec2 _1235 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, int(0u)));
    float _1286;
    if (_706)
    {
        float _1246 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1252 = (_626 * _611) - (_623 * _614);
        float _1255 = (_620 * _614) - (_626 * _608);
        float _1258 = (_623 * _608) - (_620 * _611);
        float _1284 = ((log2((((float(_1235.y) * 0.5) * float(_1235.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1255 * _1255) + (_1258 * _1258)) + (_1252 * _1252)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1246 * gl_WorldRayDirectionEXT.x, _1246 * gl_WorldRayDirectionEXT.y, _1246 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1286 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
    }
    else
    {
        _1286 = 0.0;
    }
    vec4 _1288 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _627) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _628) + cbTextureTilingScale._m0[12u].w), _1286);
    float _1308 = (((cbMtdParam._m0[19u].x * _1288.x) - _1221) * _930) + _1221;
    float _1309 = (((cbMtdParam._m0[19u].y * _1288.y) - _1222) * _930) + _1222;
    float _1310 = (((cbMtdParam._m0[19u].z * _1288.z) - _1223) * _930) + _1223;
    uvec2 _1322 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, int(0u)));
    float _1373;
    if (_706)
    {
        float _1333 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1339 = (_626 * _611) - (_623 * _614);
        float _1342 = (_620 * _614) - (_626 * _608);
        float _1345 = (_623 * _608) - (_620 * _611);
        float _1371 = ((log2((((float(_1322.y) * 0.5) * float(_1322.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1342 * _1342) + (_1345 * _1345)) + (_1339 * _1339)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1333 * gl_WorldRayDirectionEXT.x, _1333 * gl_WorldRayDirectionEXT.y, _1333 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1373 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
    }
    else
    {
        _1373 = 0.0;
    }
    vec4 _1375 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _627) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _628) + cbTextureTilingScale._m0[6u].w), _1373);
    float _1399 = (_917.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _1375.x) - _1308) * _850) + _1308);
    float _1401 = (_917.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _1375.y) - _1309) * _850) + _1309);
    float _1403 = (_917.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _1375.z) - _1310) * _850) + _1310);
    float _1408 = ((((float(_335 & 255u) * hit._m0.x) + (float(_266 & 255u) * _528)) + (float(_404 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[28u].x;
    float _1417 = (_1408 - (((textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _627) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _628) + cbTextureTilingScale._m0[10u].w), _759).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _1408))) * (cbMtdParam._m0[27u].w + 1.0);
    float _2501 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
    float _1418 = isnan(1.0) ? _2501 : (isnan(_2501) ? 1.0 : min(_2501, 1.0));
    float _1425 = ((cbMtdParam._m0[21u].x - _1399) * _1418) + _1399;
    float _1426 = ((cbMtdParam._m0[21u].y - _1401) * _1418) + _1401;
    float _1427 = ((cbMtdParam._m0[21u].z - _1403) * _1418) + _1403;
    float _77[5];
    float _78[5];
    _77[0u] = cbMtdParam._m0[29u].z;
    _78[0u] = cbMtdParam._m0[29u].w;
    _77[1u] = cbMtdParam._m0[31u].z;
    _78[1u] = cbMtdParam._m0[31u].w;
    _77[2u] = cbMtdParam._m0[31u].x;
    _78[2u] = cbMtdParam._m0[31u].y;
    _77[3u] = cbMtdParam._m0[30u].z;
    _78[3u] = cbMtdParam._m0[30u].w;
    _77[4u] = cbMtdParam._m0[30u].x;
    _78[4u] = cbMtdParam._m0[30u].y;
    float _1462 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    uint _1464 = uint(int(isnan(4.0) ? _1462 : (isnan(_1462) ? 4.0 : min(_1462, 4.0))));
    float _1471 = ((_78[_1464] - cbMtdParam._m0[22u].z) * _941) + cbMtdParam._m0[22u].z;
    float _1474 = ((cbMtdParam._m0[22u].w - _1471) * _1137) + _1471;
    float _1477 = ((cbMtdParam._m0[25u].x - _1474) * _930) + _1474;
    float _1480 = ((cbMtdParam._m0[26u].x - _1477) * _850) + _1477;
    float _1482 = _1480 - (_1480 * _1408);
    vec4 _1499 = textureLod(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * _627) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _628) + cbTextureTilingScale._m0[18u].w, _1030), 0.0);
    uvec2 _1517 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, int(0u)));
    float _1568;
    if (_706)
    {
        float _1528 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1534 = (_626 * _611) - (_623 * _614);
        float _1537 = (_620 * _614) - (_626 * _608);
        float _1540 = (_623 * _608) - (_620 * _611);
        float _1566 = ((log2((((float(_1517.y) * 0.5) * float(_1517.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1537 * _1537) + (_1540 * _1540)) + (_1534 * _1534)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1528 * gl_WorldRayDirectionEXT.x, _1528 * gl_WorldRayDirectionEXT.y, _1528 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1568 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
    }
    else
    {
        _1568 = 0.0;
    }
    vec4 _1570 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _627) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _628) + cbTextureTilingScale._m0[13u].w), _1568);
    float _1572 = _1570.x;
    float _1573 = _1570.y;
    float _1576 = cbMtdParam._m0[22u].x + _1570.z;
    float _1579 = (((_1499.z + _77[_1464]) - _1576) * _941) + _1576;
    uvec2 _1592 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, int(0u)));
    float _1643;
    if (_706)
    {
        float _1603 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1609 = (_626 * _611) - (_623 * _614);
        float _1612 = (_620 * _614) - (_626 * _608);
        float _1615 = (_623 * _608) - (_620 * _611);
        float _1641 = ((log2((((float(_1592.y) * 0.5) * float(_1592.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1612 * _1612) + (_1615 * _1615)) + (_1609 * _1609)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1603 * gl_WorldRayDirectionEXT.x, _1603 * gl_WorldRayDirectionEXT.y, _1603 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1643 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
    }
    else
    {
        _1643 = 0.0;
    }
    vec4 _1645 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _627) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _628) + cbTextureTilingScale._m0[15u].w), _1643);
    float _1654 = (((_1645.z - _1579) + cbMtdParam._m0[29u].x) * _1137) + _1579;
    float _1659 = ((((_835 * 2.0) * _1654) - _1654) * cbMtdParam._m0[24u].w) + _1654;
    uvec2 _1671 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, int(0u)));
    float _1722;
    if (_706)
    {
        float _1682 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1688 = (_626 * _611) - (_623 * _614);
        float _1691 = (_620 * _614) - (_626 * _608);
        float _1694 = (_623 * _608) - (_620 * _611);
        float _1720 = ((log2((((float(_1671.y) * 0.5) * float(_1671.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1691 * _1691) + (_1694 * _1694)) + (_1688 * _1688)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1682 * gl_WorldRayDirectionEXT.x, _1682 * gl_WorldRayDirectionEXT.y, _1682 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1722 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
    }
    else
    {
        _1722 = 0.0;
    }
    vec4 _1724 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * _627) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _628) + cbTextureTilingScale._m0[16u].w), _1722);
    float _1733 = (((_1724.z - _1659) + cbMtdParam._m0[23u].z) * _930) + _1659;
    uvec2 _1745 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, int(0u)));
    float _1796;
    if (_706)
    {
        float _1756 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1762 = (_626 * _611) - (_623 * _614);
        float _1765 = (_620 * _614) - (_626 * _608);
        float _1768 = (_623 * _608) - (_620 * _611);
        float _1794 = ((log2((((float(_1745.y) * 0.5) * float(_1745.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1765 * _1765) + (_1768 * _1768)) + (_1762 * _1762)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1756 * gl_WorldRayDirectionEXT.x, _1756 * gl_WorldRayDirectionEXT.y, _1756 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _1796 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
    }
    else
    {
        _1796 = 0.0;
    }
    vec4 _1798 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _627) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _628) + cbTextureTilingScale._m0[8u].w), _1796);
    float _1807 = (((_1798.z - _1733) + cbMtdParam._m0[26u].y) * _850) + _1733;
    uvec2 _1820 = uvec2(textureSize(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, int(0u)));
    float _1824 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1825 = _1824 * gl_WorldRayDirectionEXT.x;
    float _1826 = _1824 * gl_WorldRayDirectionEXT.y;
    float _1827 = _1824 * gl_WorldRayDirectionEXT.z;
    float _1871;
    if (_706)
    {
        float _1837 = (_626 * _611) - (_623 * _614);
        float _1840 = (_620 * _614) - (_626 * _608);
        float _1843 = (_623 * _608) - (_620 * _611);
        float _1869 = ((log2((((float(_1820.y) * 0.5) * float(_1820.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1840 * _1840) + (_1843 * _1843)) + (_1837 * _1837)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_129) / abs(dot(vec3(_1825, _1826, _1827), vec3(_639, _641, _642))));
        _1871 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
    }
    else
    {
        _1871 = 0.0;
    }
    vec4 _1873 = textureLod(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _627) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _628) + cbTextureTilingScale._m0[9u].w), _1871);
    float _1888 = ((cbMtdParam._m0[27u].y * _1408) * ((_1873.z * cbMtdParam._m0[27u].x) - _1807)) + _1807;
    float _1898 = ((_1499.x - _1572) * _941) + _1572;
    float _1899 = ((_1499.y - _1573) * _941) + _1573;
    float _1904 = ((_1645.x - _1898) * _1137) + _1898;
    float _1905 = ((_1645.y - _1899) * _1137) + _1899;
    float _1910 = ((_1724.x - _1904) * _930) + _1904;
    float _1911 = ((_1724.y - _1905) * _930) + _1905;
    float _1920 = ((((_1798.x - _1910) * _850) + _1910) * 2.0) + (-1.0);
    float _1921 = ((((_1798.y - _1911) * _850) + _1911) * 2.0) + (-1.0);
    float _1922 = dot(vec2(_1920, _1921), vec2(_1920, _1921));
    float _2547 = isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0));
    float _1927 = sqrt(1.0 - (isnan(1.0) ? _2547 : (isnan(_2547) ? 1.0 : min(_2547, 1.0))));
    float _1937 = ((cbMtdParam._m0[25u].y * ((_831.x * 2.0) + (-1.0))) + _1920) + ((((_1873.x * 2.0) + (-1.0)) * _1408) * cbMtdParam._m0[26u].w);
    float _1938 = ((cbMtdParam._m0[25u].y * ((_831.y * 2.0) + (-1.0))) + _1921) + (((((((float((_335 >> 8u) & 255u) * hit._m0.x) + (float((_266 >> 8u) & 255u) * _528)) + (float((_404 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[28u].x) * ((_1873.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _1941 = fma(_1927, _639, fma(_1938, _655, (_674 * _668) * _1937));
    float _1944 = fma(_1927, _641, fma(_1938, _656, (_674 * _669) * _1937));
    float _1947 = fma(_1927, _642, fma(_1938, _657, (_674 * _670) * _1937));
    float _1951 = inversesqrt(dot(vec3(_1941, _1944, _1947), vec3(_1941, _1944, _1947)));
    float _1952 = _1951 * _1941;
    float _1953 = _1951 * _1944;
    float _1954 = _1951 * _1947;
    float _1966 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1967 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1968 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1969 = (-0.0) - _1825;
    float _1971 = (-0.0) - _1826;
    float _1972 = (-0.0) - _1827;
    float _1978 = float(gl_LaunchIDEXT.x);
    float _1979 = float(gl_LaunchIDEXT.y);
    float _1982 = float(gl_LaunchSizeEXT.x);
    float _1996 = fract(fract(sin(dot(vec2(_1978 / _1982, _1979 / _90), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2009 = fract(fract(sin(dot(vec2((_1978 + 128.0) / _1982, (_1979 + 128.0) / _90), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2010 = 1.0 - _1482;
    float _2011 = _2010 * _1425;
    float _2012 = _2010 * _1426;
    float _2013 = _2010 * _1427;
    float _2018 = _1482 * (_1425 + (-0.039999999105930328369140625));
    float _2019 = _1482 * (_1426 + (-0.039999999105930328369140625));
    float _2020 = _1482 * (_1427 + (-0.039999999105930328369140625));
    float _2021 = _2018 + 0.039999999105930328369140625;
    float _2023 = _2019 + 0.039999999105930328369140625;
    float _2024 = _2020 + 0.039999999105930328369140625;
    _82._m0 = 1u;
    uvec4 _2034 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2035 = _2034.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2035, _2034.w, _2035, vec3(_1966, _1967, _1968), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2147;
    float _2148;
    float _2149;
    float _2150;
    float _2151;
    float _2152;
    if (_82._m0 == 0u)
    {
        float _2054 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1952, _1953, _1954));
        float _2558 = isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0));
        float _2057 = isnan(1.0) ? _2558 : (isnan(_2558) ? 1.0 : min(_2558, 1.0));
        float _2076 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1888) * 0.949999988079071044921875);
        float _2077 = _2076 * _2076;
        float _2078 = g_sceneCB._m0[4u].x - _1825;
        float _2079 = g_sceneCB._m0[4u].y - _1826;
        float _2080 = g_sceneCB._m0[4u].z - _1827;
        float _2084 = inversesqrt(dot(vec3(_2078, _2079, _2080), vec3(_2078, _2079, _2080)));
        float _2085 = _2084 * _2078;
        float _2086 = _2084 * _2079;
        float _2087 = _2084 * _2080;
        float _2088 = dot(vec3(_1952, _1953, _1954), vec3(g_sceneCB._m0[4u].xyz));
        float _2569 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
        float _2091 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        float _2092 = dot(vec3(_1952, _1953, _1954), vec3(_1969, _1971, _1972));
        float _2580 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
        float _2095 = isnan(1.0) ? _2580 : (isnan(_2580) ? 1.0 : min(_2580, 1.0));
        float _2096 = dot(vec3(_1952, _1953, _1954), vec3(_2085, _2086, _2087));
        float _2591 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
        float _2099 = isnan(1.0) ? _2591 : (isnan(_2591) ? 1.0 : min(_2591, 1.0));
        float _2100 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2085, _2086, _2087));
        float _2602 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2104 = _2077 * _2077;
        float _2108 = ((_2099 * _2099) * (_2104 + (-1.0))) + 1.0;
        float _2116 = exp2(log2(1.0 - (isnan(1.0) ? _2602 : (isnan(_2602) ? 1.0 : min(_2602, 1.0)))) * 5.0);
        float _2127 = 1.0 - _2077;
        float _2138 = (0.5 / (((_2095 * ((_2091 * _2127) + _2077)) + 9.9999999392252902907785028219223e-09) + (((_2095 * _2127) + _2077) * _2091))) * _2091;
        float _2613 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
        float _2140 = (isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0))) * (_2104 / ((_2108 * _2108) * 3.141590118408203125));
        _2147 = ((_2011 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2057;
        _2148 = ((_2012 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2057;
        _2149 = ((_2013 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2057;
        _2150 = (((_2116 * (0.959999978542327880859375 - _2018)) + _2021) * g_sceneCB._m0[5u].x) * _2140;
        _2151 = (((_2116 * (0.959999978542327880859375 - _2019)) + _2023) * g_sceneCB._m0[5u].y) * _2140;
        _2152 = (((_2116 * (0.959999978542327880859375 - _2020)) + _2024) * g_sceneCB._m0[5u].z) * _2140;
    }
    else
    {
        _2147 = 0.0;
        _2148 = 0.0;
        _2149 = 0.0;
        _2150 = 0.0;
        _2151 = 0.0;
        _2152 = 0.0;
    }
    bool _2154 = abs(_1953) < 0.89999997615814208984375;
    float _2156 = float(_2154);
    float _2157 = _2154 ? 0.0 : 1.0;
    float _2160 = (_2156 * _1954) - (_2157 * _1953);
    float _2161 = _2157 * _1952;
    float _2163 = (-0.0) - (_1952 * _2156);
    float _2167 = inversesqrt(dot(vec3(_2160, _2161, _2163), vec3(_2160, _2161, _2163)));
    float _2168 = _2160 * _2167;
    float _2169 = _2161 * _2167;
    float _2170 = _2167 * _2163;
    float _2173 = (_2169 * _1954) - (_2170 * _1953);
    float _2176 = (_2170 * _1952) - (_2168 * _1954);
    float _2179 = (_2168 * _1953) - (_2169 * _1952);
    float _2181;
    float _2189;
    float _2180 = 0.0;
    uint _2182 = 0u;
    float _2186;
    bool _2188;
    for (;;)
    {
        _2186 = (float(_2182) + _1996) * 0.03125;
        _2188 = _2182 == 0u;
        float frontier_phi_65_pred;
        if (_2188)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2328;
            float _2329;
            uint _2331;
            _2328 = 0.0;
            _2329 = 0.5;
            _2331 = _2182;
            float _2190;
            for (;;)
            {
                _2190 = ((_2331 & 1u) != 0u) ? (_2329 + _2328) : _2328;
                uint _2332 = _2331 >> 1u;
                if (_2332 == 0u)
                {
                    break;
                }
                else
                {
                    _2328 = _2190;
                    _2329 *= 0.5;
                    _2331 = _2332;
                }
            }
            frontier_phi_65_pred = _2190;
        }
        _2189 = frontier_phi_65_pred;
        float _2191 = _2189 + _2009;
        float _2195 = sqrt(_2186);
        float _2196 = ((_2191 > 1.0) ? (_2191 + (-1.0)) : _2191) * 6.283185482025146484375;
        float _2199 = cos(_2196) * _2195;
        float _2201 = sin(_2196) * _2195;
        float _2203 = sqrt(1.0 - _2186);
        float _2216 = ((_2203 * _1952) + (_2199 * _2173)) + (_2201 * _2168);
        float _2217 = ((_2203 * _1953) + (_2199 * _2176)) + (_2201 * _2169);
        float _2218 = ((_2203 * _1954) + (_2199 * _2179)) + (_2201 * _2170);
        _81._m0 = 1u;
        uvec4 _2222 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2223 = _2222.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2223, _2222.w, _2223, vec3(_1966, _1967, _1968), 9.9999997473787516355514526367188e-05, vec3(_2216, _2217, _2218), 10000.0, 1);
        float _2229 = dot(vec3(_1952, _1953, _1954), vec3(_2216, _2217, _2218));
        float _2624 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
        float _2232 = isnan(1.0) ? _2624 : (isnan(_2624) ? 1.0 : min(_2624, 1.0));
        _2181 = ((float(_81._m0 == 0u) * _2232) / (_2232 * 0.3183098733425140380859375)) + _2180;
        uint _2183 = _2182 + 1u;
        if (_2183 == 32u)
        {
            break;
        }
        else
        {
            _2180 = _2181;
            _2182 = _2183;
            continue;
        }
    }
    float _2239 = _2181 * 0.009947183541953563690185546875;
    float _2244 = dot(vec3(_1825, _1826, _1827), vec3(_1952, _1953, _1954)) * 2.0;
    vec4 _2257 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1825 - (_2244 * _1952), _1826 - (_2244 * _1953), _1827 - (_2244 * _1954)), 4.0 - (_1888 * 4.0));
    float _2262 = dot(vec3(_1969, _1971, _1972), vec3(_1952, _1953, _1954));
    float _2635 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2272 = exp2(log2(1.0 - (isnan(1.0) ? _2635 : (isnan(_2635) ? 1.0 : min(_2635, 1.0)))) * 5.0);
    vec4 _2284 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1952, _1953, _1954), 0.0);
    float _2295 = (_2150 + _2147) + (((_2284.x * _2011) + (((_2272 * (0.959999978542327880859375 - _2018)) + _2021) * _2257.x)) * _2239);
    float _2299 = (_2151 + _2148) + (((_2284.y * _2012) + (((_2272 * (0.959999978542327880859375 - _2019)) + _2023) * _2257.y)) * _2239);
    float _2303 = (_2152 + _2149) + (((_2284.z * _2013) + (((_2272 * (0.959999978542327880859375 - _2020)) + _2024) * _2257.z)) * _2239);
    float _2646 = isnan(0.0) ? _2295 : (isnan(_2295) ? 0.0 : max(_2295, 0.0));
    float _2657 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
    float _2668 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
    bool _2311 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2322;
    _2322.x = _2311 ? ((_632 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0)));
    _2322.y = _2311 ? ((_635 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2657 : (isnan(_2657) ? 1.0 : min(_2657, 1.0)));
    _2322.z = _2311 ? ((_638 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2668 : (isnan(_2668) ? 1.0 : min(_2668, 1.0)));
    payload._m0 = _2322;
}


