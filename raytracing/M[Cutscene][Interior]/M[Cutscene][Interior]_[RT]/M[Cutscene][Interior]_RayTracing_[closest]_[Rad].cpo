#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

float _887;
vec3 _1332;

void main()
{
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _157 & 65535u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        else
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _158 >> 16u;
        }
        _163 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
        _166 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    uint _226 = _205 | 8u;
    bool _229 = _172 == 0u;
    uint _230;
    if (_229)
    {
        _230 = _226 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _226 + 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _226 + 12u;
        }
        _230 = frontier_phi_9_10_ladder;
    }
    uint _234 = _173 ? (_230 + 4u) : _230;
    uint _237 = ((_177 + 4u) + _234) >> 2u;
    uvec2 _243 = uvec2(texelFetch(l_geomAttrib_0, int(_237)).x, texelFetch(l_geomAttrib_0, int(_237 + 1u)).x);
    uint _244 = _243.x;
    uint _245 = _243.y;
    float _249 = float(int(uint(int(_244 << 16u) >> int(16u))));
    float _250 = float(int(uint(int(_244) >> int(16u))));
    float _254 = float(int(uint(int(_245 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_245) >> int(16u))));
    uvec4 _259 = texelFetch(l_geomAttrib_0, int(((_177 + 12u) + _234) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uint _266 = _171 * _165;
    uint _267 = _266 + 12u;
    uint _288;
    uint _289;
    uint _290;
    uint _291;
    if (_176)
    {
        uvec4 _269 = texelFetch(l_geomAttrib_0, int(_267 >> 2u));
        uint _270 = _269.x;
        _288 = _270 & 255u;
        _289 = (_270 >> 8u) & 255u;
        _290 = (_270 >> 16u) & 255u;
        _291 = 16u;
    }
    else
    {
        uint _276 = _267 >> 2u;
        uvec2 _282 = uvec2(texelFetch(l_geomAttrib_0, int(_276)).x, texelFetch(l_geomAttrib_0, int(_276 + 1u)).x);
        uint _283 = _282.x;
        _288 = _283 & 65535u;
        _289 = _283 >> 16u;
        _290 = _282.y & 65535u;
        _291 = 20u;
    }
    uvec4 _297 = texelFetch(l_geomAttrib_0, int((_291 + _266) >> 2u));
    uint _298 = _297.x;
    uint _309 = _291 | 8u;
    uint _311;
    if (_229)
    {
        _311 = _309 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _309 + 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _309 + 12u;
        }
        _311 = frontier_phi_16_17_ladder;
    }
    uint _315 = _173 ? (_311 + 4u) : _311;
    uint _318 = ((_266 + 4u) + _315) >> 2u;
    uvec2 _324 = uvec2(texelFetch(l_geomAttrib_0, int(_318)).x, texelFetch(l_geomAttrib_0, int(_318 + 1u)).x);
    uint _325 = _324.x;
    uint _326 = _324.y;
    float _330 = float(int(uint(int(_325 << 16u) >> int(16u))));
    float _331 = float(int(uint(int(_325) >> int(16u))));
    float _335 = float(int(uint(int(_326 << 16u) >> int(16u))));
    float _336 = float(int(uint(int(_326) >> int(16u))));
    uvec4 _340 = texelFetch(l_geomAttrib_0, int(((_266 + 12u) + _315) >> 2u));
    uint _341 = _340.x;
    float _345 = float(int(uint(int(_341 << 16u) >> int(16u))));
    float _346 = float(int(uint(int(_341) >> int(16u))));
    uint _347 = _171 * _166;
    uint _348 = _347 + 12u;
    uint _369;
    uint _370;
    uint _371;
    uint _372;
    if (_176)
    {
        uvec4 _350 = texelFetch(l_geomAttrib_0, int(_348 >> 2u));
        uint _351 = _350.x;
        _369 = _351 & 255u;
        _370 = (_351 >> 8u) & 255u;
        _371 = (_351 >> 16u) & 255u;
        _372 = 16u;
    }
    else
    {
        uint _357 = _348 >> 2u;
        uvec2 _363 = uvec2(texelFetch(l_geomAttrib_0, int(_357)).x, texelFetch(l_geomAttrib_0, int(_357 + 1u)).x);
        uint _364 = _363.x;
        _369 = _364 & 65535u;
        _370 = _364 >> 16u;
        _371 = _363.y & 65535u;
        _372 = 20u;
    }
    uvec4 _378 = texelFetch(l_geomAttrib_0, int((_372 + _347) >> 2u));
    uint _379 = _378.x;
    uint _390 = _372 | 8u;
    uint _392;
    if (_229)
    {
        _392 = _390 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _390 + 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _390 + 12u;
        }
        _392 = frontier_phi_23_24_ladder;
    }
    uint _396 = _173 ? (_392 + 4u) : _392;
    uint _399 = ((_347 + 4u) + _396) >> 2u;
    uvec2 _405 = uvec2(texelFetch(l_geomAttrib_0, int(_399)).x, texelFetch(l_geomAttrib_0, int(_399 + 1u)).x);
    uint _406 = _405.x;
    uint _407 = _405.y;
    float _411 = float(int(uint(int(_406 << 16u) >> int(16u))));
    float _412 = float(int(uint(int(_406) >> int(16u))));
    float _416 = float(int(uint(int(_407 << 16u) >> int(16u))));
    float _417 = float(int(uint(int(_407) >> int(16u))));
    uvec4 _421 = texelFetch(l_geomAttrib_0, int(((_347 + 12u) + _396) >> 2u));
    uint _422 = _421.x;
    float _426 = float(int(uint(int(_422 << 16u) >> int(16u))));
    float _427 = float(int(uint(int(_422) >> int(16u))));
    bool _429 = _122.z == 0u;
    float _465;
    float _466;
    float _467;
    if (_429)
    {
        uint _432 = _163 * 3u;
        uvec3 _441 = uvec3(texelFetch(l_geomPositionBuffer, int(_432)).x, texelFetch(l_geomPositionBuffer, int(_432 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_432 + 2u)).x);
        _465 = uintBitsToFloat(_441.x);
        _466 = uintBitsToFloat(_441.y);
        _467 = uintBitsToFloat(_441.z);
    }
    else
    {
        uint _449 = _163 * 2u;
        uvec2 _455 = uvec2(texelFetch(l_geomPositionBuffer, int(_449)).x, texelFetch(l_geomPositionBuffer, int(_449 + 1u)).x);
        uint _456 = _455.x;
        _465 = unpackHalf2x16(_456).x;
        _466 = unpackHalf2x16(_456 >> 16u).x;
        _467 = unpackHalf2x16(_455.y).x;
    }
    float _503;
    float _504;
    float _505;
    if (_429)
    {
        uint _470 = _165 * 3u;
        uvec3 _479 = uvec3(texelFetch(l_geomPositionBuffer, int(_470)).x, texelFetch(l_geomPositionBuffer, int(_470 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_470 + 2u)).x);
        _503 = uintBitsToFloat(_479.x);
        _504 = uintBitsToFloat(_479.y);
        _505 = uintBitsToFloat(_479.z);
    }
    else
    {
        uint _487 = _165 * 2u;
        uvec2 _493 = uvec2(texelFetch(l_geomPositionBuffer, int(_487)).x, texelFetch(l_geomPositionBuffer, int(_487 + 1u)).x);
        uint _494 = _493.x;
        _503 = unpackHalf2x16(_494).x;
        _504 = unpackHalf2x16(_494 >> 16u).x;
        _505 = unpackHalf2x16(_493.y).x;
    }
    float _541;
    float _542;
    float _543;
    if (_429)
    {
        uint _508 = _166 * 3u;
        uvec3 _517 = uvec3(texelFetch(l_geomPositionBuffer, int(_508)).x, texelFetch(l_geomPositionBuffer, int(_508 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_508 + 2u)).x);
        _541 = uintBitsToFloat(_517.x);
        _542 = uintBitsToFloat(_517.y);
        _543 = uintBitsToFloat(_517.z);
    }
    else
    {
        uint _525 = _166 * 2u;
        uvec2 _531 = uvec2(texelFetch(l_geomPositionBuffer, int(_525)).x, texelFetch(l_geomPositionBuffer, int(_525 + 1u)).x);
        uint _532 = _531.x;
        _541 = unpackHalf2x16(_532).x;
        _542 = unpackHalf2x16(_532 >> 16u).x;
        _543 = unpackHalf2x16(_531.y).x;
    }
    float _546 = (1.0 - hit._m0.x) - hit._m0.y;
    float _627 = _503 - _465;
    float _628 = _504 - _466;
    float _629 = _505 - _467;
    float _632 = fma(_629, gl_ObjectToWorldEXT[2u].x, fma(_628, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _627));
    float _635 = fma(_629, gl_ObjectToWorldEXT[2u].y, fma(_628, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _627));
    float _638 = fma(_629, gl_ObjectToWorldEXT[2u].z, fma(_628, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _627));
    float _639 = _541 - _465;
    float _640 = _542 - _466;
    float _641 = _543 - _467;
    float _644 = fma(_641, gl_ObjectToWorldEXT[2u].x, fma(_640, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _639));
    float _647 = fma(_641, gl_ObjectToWorldEXT[2u].y, fma(_640, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _639));
    float _650 = fma(_641, gl_ObjectToWorldEXT[2u].z, fma(_640, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _639));
    float _651 = (((_330 * hit._m0.x) + (_249 * _546)) + (_411 * hit._m0.y)) * 0.00048828125;
    float _653 = (((_331 * hit._m0.x) + (_250 * _546)) + (_412 * hit._m0.y)) * 0.00048828125;
    float _661 = (((float(_202) * _546) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_369) * hit._m0.y);
    float _664 = (((float(_203) * _546) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_370) * hit._m0.y);
    float _667 = (((float(_204) * _546) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_371) * hit._m0.y);
    float _668 = _661 * 0.0078740157186985015869140625;
    float _670 = _664 * 0.0078740157186985015869140625;
    float _671 = _667 * 0.0078740157186985015869140625;
    float _684 = ((((float(_214 & 255u) * _546) + (-127.0)) + (float(_298 & 255u) * hit._m0.x)) + (float(_379 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _685 = ((((float((_214 >> 8u) & 255u) * _546) + (-127.0)) + (float((_298 >> 8u) & 255u) * hit._m0.x)) + (float((_379 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _686 = ((((float((_214 >> 16u) & 255u) * _546) + (-127.0)) + (float((_298 >> 16u) & 255u) * hit._m0.x)) + (float((_379 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _687 = ((((float(_214 >> 24u) * _546) + (-127.0)) + (float(_298 >> 24u) * hit._m0.x)) + (float(_379 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((_685 * _671) - (_686 * _670)) * _687;
    float _698 = ((_686 * _668) - (_684 * _671)) * _687;
    float _699 = ((_684 * _670) - (_685 * _668)) * _687;
    float _703 = inversesqrt(dot(vec3(_697, _698, _699), vec3(_697, _698, _699)));
    float _704 = _703 * _697;
    float _705 = _703 * _698;
    float _706 = _703 * _699;
    uvec2 _739 = uvec2(textureSize(M_Cutscene_Interior_snp_0_Texture2D_4, int(0u)));
    bool _744 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _803;
    if (_744)
    {
        float _759 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _765 = (_650 * _635) - (_647 * _638);
        float _768 = (_644 * _638) - (_650 * _632);
        float _771 = (_647 * _632) - (_644 * _635);
        float _800 = ((log2((((float(_739.y) * 0.5) * float(_739.x)) * abs((((_412 - _250) * (_330 - _249)) - ((_411 - _249) * (_331 - _250))) * 2.384185791015625e-07)) / (sqrt(((_768 * _768) + (_771 * _771)) + (_765 * _765)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_759 * gl_WorldRayDirectionEXT.x, _759 * gl_WorldRayDirectionEXT.y, _759 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _803 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    }
    else
    {
        _803 = 0.0;
    }
    vec4 _807 = textureLod(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _651) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _653) + cbTextureTilingScale._m0[6u].w), _803);
    float _821 = inversesqrt(dot(vec3(_704, _705, _706), vec3(_704, _705, _706)));
    float _828 = inversesqrt(dot(vec3(_684, _685, _686), vec3(_684, _685, _686)));
    float _852 = (-0.0) - dot(vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy), vec3(_821 * _704, _821 * _705, _821 * _706));
    float _853 = (-0.0) - dot(vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy), vec3(_828 * _684, _828 * _685, _828 * _686));
    float _854 = (-0.0) - dot(vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy), vec3((-0.0) - _668, (-0.0) - _670, (-0.0) - _671));
    float _858 = inversesqrt(dot(vec3(_852, _853, _854), vec3(_852, _853, _854)));
    float _859 = _858 * _854;
    float _864 = ((cbMtdParam._m0[21u].z * _852) * _858) + (((_807.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _865 = ((cbMtdParam._m0[21u].w * _853) * _858) + (((_807.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _868 = fract(cbMtdParam._m0[21u].z * _651);
    float _869 = fract(cbMtdParam._m0[21u].w * _653);
    float _885;
    float _888;
    float _890;
    if (_864 > 0.0)
    {
        float _872 = (1.0 - _868) / _864;
        _885 = _872;
        _888 = ((cbMtdParam._m0[18u].w + 1.0) - fract(_872 * _859)) * 0.16666667163372039794921875;
        _890 = (fract((_872 * _865) + _869) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_40_39_ladder;
        float frontier_phi_40_39_ladder_1;
        float frontier_phi_40_39_ladder_2;
        if (_864 < 0.0)
        {
            float _886 = ((-0.0) - _868) / _864;
            frontier_phi_40_39_ladder = (fract((_886 * _865) + _869) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_40_39_ladder_1 = (fract(_886 * _859) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_40_39_ladder_2 = _886;
        }
        else
        {
            frontier_phi_40_39_ladder = 0.0;
            frontier_phi_40_39_ladder_1 = 0.0;
            frontier_phi_40_39_ladder_2 = _887;
        }
        _885 = frontier_phi_40_39_ladder_2;
        _888 = frontier_phi_40_39_ladder_1;
        _890 = frontier_phi_40_39_ladder;
    }
    float _916;
    float _918;
    float _920;
    if (_865 > 0.0)
    {
        float _903 = (1.0 - _869) / _865;
        float frontier_phi_45_42_ladder;
        float frontier_phi_45_42_ladder_1;
        float frontier_phi_45_42_ladder_2;
        if (_903 < _885)
        {
            frontier_phi_45_42_ladder = (fract(_903 * _859) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_45_42_ladder_1 = (fract((_903 * _864) + _868) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_45_42_ladder_2 = _903;
        }
        else
        {
            frontier_phi_45_42_ladder = _890;
            frontier_phi_45_42_ladder_1 = _888;
            frontier_phi_45_42_ladder_2 = _885;
        }
        _916 = frontier_phi_45_42_ladder_2;
        _918 = frontier_phi_45_42_ladder_1;
        _920 = frontier_phi_45_42_ladder;
    }
    else
    {
        float frontier_phi_45_43_ladder;
        float frontier_phi_45_43_ladder_1;
        float frontier_phi_45_43_ladder_2;
        if (_865 < 0.0)
        {
            float _917 = ((-0.0) - _869) / _865;
            float frontier_phi_45_43_ladder_46_ladder;
            float frontier_phi_45_43_ladder_46_ladder_1;
            float frontier_phi_45_43_ladder_46_ladder_2;
            if (_917 < _885)
            {
                frontier_phi_45_43_ladder_46_ladder = fract(_917 * _859) * 0.16666667163372039794921875;
                frontier_phi_45_43_ladder_46_ladder_1 = (fract((_917 * _864) + _868) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
                frontier_phi_45_43_ladder_46_ladder_2 = _917;
            }
            else
            {
                frontier_phi_45_43_ladder_46_ladder = _890;
                frontier_phi_45_43_ladder_46_ladder_1 = _888;
                frontier_phi_45_43_ladder_46_ladder_2 = _885;
            }
            frontier_phi_45_43_ladder = frontier_phi_45_43_ladder_46_ladder;
            frontier_phi_45_43_ladder_1 = frontier_phi_45_43_ladder_46_ladder_1;
            frontier_phi_45_43_ladder_2 = frontier_phi_45_43_ladder_46_ladder_2;
        }
        else
        {
            frontier_phi_45_43_ladder = _890;
            frontier_phi_45_43_ladder_1 = _888;
            frontier_phi_45_43_ladder_2 = _885;
        }
        _916 = frontier_phi_45_43_ladder_2;
        _918 = frontier_phi_45_43_ladder_1;
        _920 = frontier_phi_45_43_ladder;
    }
    float _924 = (_859 > 0.0) ? (cbMtdParam._m0[18u].z / _859) : 5000.0;
    float _937;
    float _938;
    if (_924 < _916)
    {
        _937 = ((_868 + cbMtdParam._m0[18u].w) + (_924 * _864)) * 0.16666667163372039794921875;
        _938 = (((_924 * _865) + _869) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _937 = _918;
        _938 = _920;
    }
    vec4 _942 = textureLod(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_937, _938), 0.0);
    float _1427 = isnan(0.0) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.0 : max(cbMtdParam._m0[17u].z, 0.0));
    float _957 = isnan(1.0) ? _1427 : (isnan(_1427) ? 1.0 : min(_1427, 1.0));
    float _1438 = isnan(0.0) ? cbMtdParam._m0[17u].y : (isnan(cbMtdParam._m0[17u].y) ? 0.0 : max(cbMtdParam._m0[17u].y, 0.0));
    uvec2 _975 = uvec2(textureSize(M_Cutscene_Interior_snp_0_Texture2D_12, int(0u)));
    float _1033;
    if (_744)
    {
        float _992 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _998 = (_650 * _635) - (_647 * _638);
        float _1001 = (_644 * _638) - (_650 * _632);
        float _1004 = (_647 * _632) - (_644 * _635);
        float _1031 = ((log2((((float(_975.y) * 0.5) * float(_975.x)) * abs((((_417 - _255) * (_335 - _254)) - ((_416 - _254) * (_336 - _255))) * 2.384185791015625e-07)) / (sqrt(((_1001 * _1001) + (_1004 * _1004)) + (_998 * _998)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_992 * gl_WorldRayDirectionEXT.x, _992 * gl_WorldRayDirectionEXT.y, _992 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _1033 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    }
    else
    {
        _1033 = 0.0;
    }
    uvec2 _1052 = uvec2(textureSize(M_Cutscene_Interior_snp_0_Texture2D_13, int(0u)));
    float _1056 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1057 = _1056 * gl_WorldRayDirectionEXT.x;
    float _1058 = _1056 * gl_WorldRayDirectionEXT.y;
    float _1059 = _1056 * gl_WorldRayDirectionEXT.z;
    float _1104;
    if (_744)
    {
        float _1069 = (_650 * _635) - (_647 * _638);
        float _1072 = (_644 * _638) - (_650 * _632);
        float _1075 = (_647 * _632) - (_644 * _635);
        float _1102 = ((log2((((float(_1052.y) * 0.5) * float(_1052.x)) * abs((((_427 - _265) * (_345 - _264)) - ((_426 - _264) * (_346 - _265))) * 2.384185791015625e-07)) / (sqrt(((_1072 * _1072) + (_1075 * _1075)) + (_1069 * _1069)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_1057, _1058, _1059), vec3(_668, _670, _671))));
        _1104 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    }
    else
    {
        _1104 = 0.0;
    }
    float _1112 = ((cbMtdParam._m0[18u].y * textureLod(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_13, SS_WrapLinear), vec2((((((_345 * hit._m0.x) + (_264 * _546)) + (_426 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((((_346 * hit._m0.x) + (_265 * _546)) + (_427 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1104).x) + (cbMtdParam._m0[17u].x * textureLod(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_12, SS_WrapLinear), vec2((((((_335 * hit._m0.x) + (_254 * _546)) + (_416 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_336 * hit._m0.x) + (_255 * _546)) + (_417 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1033).x)) / cbMtdParam._m0[17u].w;
    float _1115 = ((_957 - ((1.0 - (isnan(1.0) ? _1438 : (isnan(_1438) ? 1.0 : min(_1438, 1.0)))) * (_957 + 1.0))) + _1112) / _957;
    float _1459 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _1116 = isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0));
    float _1118 = 3.0 - (_1116 * 2.0);
    float _1123 = _1116 * _1116;
    float _1131 = (((_1123 * (cbMtdParam._m0[15u].x - cbMtdParam._m0[13u].x)) * _1118) + cbMtdParam._m0[13u].x) * _942.x;
    float _1133 = (((_1123 * (cbMtdParam._m0[15u].y - cbMtdParam._m0[13u].y)) * _1118) + cbMtdParam._m0[13u].y) * _942.y;
    float _1135 = (((_1123 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[13u].z)) * _1118) + cbMtdParam._m0[13u].z) * _942.z;
    float _1147 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1148 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1149 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1150 = (-0.0) - _1057;
    float _1151 = (-0.0) - _1058;
    float _1152 = (-0.0) - _1059;
    _64._m0 = 1u;
    uvec4 _1162 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1163 = _1162.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1163, _1162.w, _1163, vec3(_1147, _1148, _1149), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    if (_64._m0 == 0u)
    {
        float _1184 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(0.0));
        float _1470 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1187 = isnan(1.0) ? _1470 : (isnan(_1470) ? 1.0 : min(_1470, 1.0));
        float _1198 = g_sceneCB._m0[4u].x - _1057;
        float _1199 = g_sceneCB._m0[4u].y - _1058;
        float _1200 = g_sceneCB._m0[4u].z - _1059;
        float _1204 = inversesqrt(dot(vec3(_1198, _1199, _1200), vec3(_1198, _1199, _1200)));
        float _1208 = dot(vec3(0.0), vec3(g_sceneCB._m0[4u].xyz));
        float _1481 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1211 = isnan(1.0) ? _1481 : (isnan(_1481) ? 1.0 : min(_1481, 1.0));
        float _1212 = dot(vec3(0.0), vec3(_1150, _1151, _1152));
        float _1492 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1216 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1198 * _1204, _1199 * _1204, _1200 * _1204));
        float _1503 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1227 = (exp2(log2(1.0 - (isnan(1.0) ? _1503 : (isnan(_1503) ? 1.0 : min(_1503, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1233 = (0.5 / ((_1211 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1492 : (isnan(_1492) ? 1.0 : min(_1492, 1.0))))) * _1211;
        float _1514 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1235 = (isnan(1.0) ? _1514 : (isnan(_1514) ? 1.0 : min(_1514, 1.0))) * 0.31831014156341552734375;
        _1243 = ((_1131 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1187;
        _1244 = ((_1133 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1187;
        _1245 = ((_1135 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1187;
        _1246 = (_1227 * g_sceneCB._m0[5u].x) * _1235;
        _1247 = (_1227 * g_sceneCB._m0[5u].y) * _1235;
        _1248 = (_1227 * g_sceneCB._m0[5u].z) * _1235;
    }
    else
    {
        _1243 = 0.0;
        _1244 = 0.0;
        _1245 = 0.0;
        _1246 = 0.0;
        _1247 = 0.0;
        _1248 = 0.0;
    }
    float _1249;
    uint _1251;
    _1249 = 0.0;
    _1251 = 0u;
    float _1250;
    for (;;)
    {
        _63._m0 = 1u;
        uvec4 _1256 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1257 = _1256.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1257, _1256.w, _1257, vec3(_1147, _1148, _1149), 9.9999997473787516355514526367188e-05, vec3(0.0), 10000.0, 1);
        _1250 = _1249 + uintBitsToFloat(0x7fc00000u /* nan */);
        uint _1252 = _1251 + 1u;
        if (_1252 == 32u)
        {
            break;
        }
        else
        {
            _1249 = _1250;
            _1251 = _1252;
        }
    }
    float _1265 = _1250 * 0.009947183541953563690185546875;
    vec4 _1272 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1057, _1058, _1059), 4.0);
    float _1277 = dot(vec3(_1150, _1151, _1152), vec3(0.0));
    float _1525 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
    float _1286 = (exp2(log2(1.0 - (isnan(1.0) ? _1525 : (isnan(_1525) ? 1.0 : min(_1525, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1292 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(0.0), 0.0);
    float _1303 = (_1246 + _1243) + (((_1292.x * _1131) + (_1286 * _1272.x)) * _1265);
    float _1307 = (_1247 + _1244) + (((_1292.y * _1133) + (_1286 * _1272.y)) * _1265);
    float _1311 = (_1248 + _1245) + (((_1292.z * _1135) + (_1286 * _1272.z)) * _1265);
    float _1536 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
    float _1547 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
    float _1558 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
    bool _1320 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1331;
    _1331.x = _1320 ? ((_661 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1536 : (isnan(_1536) ? 1.0 : min(_1536, 1.0)));
    _1331.y = _1320 ? ((_664 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1547 : (isnan(_1547) ? 1.0 : min(_1547, 1.0)));
    _1331.z = _1320 ? ((_667 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1558 : (isnan(_1558) ? 1.0 : min(_1558, 1.0)));
    payload._m0 = _1331;
}


