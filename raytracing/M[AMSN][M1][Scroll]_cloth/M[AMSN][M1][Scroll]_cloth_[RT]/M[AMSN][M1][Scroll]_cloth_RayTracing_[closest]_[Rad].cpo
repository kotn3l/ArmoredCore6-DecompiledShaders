#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1193;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _165 >> 16u;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    uint _181 = _129.w;
    bool _183 = _180 || (_181 == 0u);
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    uint _233 = _177.y;
    bool _234 = _179 == 0u;
    uint _237 = _234 ? 4u : ((_181 != 0u) ? 12u : 8u);
    uvec4 _246 = texelFetch(l_geomAttrib_1, int((((_233 * _170) + 4u) + (_180 ? (_237 + 4u) : _237)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _178 * _172;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_183)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _298 = _234 ? 4u : ((_181 != 0u) ? 12u : 8u);
    uvec4 _305 = texelFetch(l_geomAttrib_1, int((((_233 * _172) + 4u) + (_180 ? (_298 + 4u) : _298)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _178 * _173;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_183)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _357 = _234 ? 4u : ((_181 != 0u) ? 12u : 8u);
    uvec4 _364 = texelFetch(l_geomAttrib_1, int((((_233 * _173) + 4u) + (_180 ? (_357 + 4u) : _357)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _129.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _170 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _170 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _172 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _172 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _173 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _173 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _580 = (((float(_209) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_210) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_211) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_221 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_221 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_221 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_221 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    float _639 = (cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) + ((((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125);
    float _640 = (cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + ((((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125);
    uvec2 _652 = uvec2(textureSize(M_AMSN_M1_Scroll_snp_0_Texture2D_0, int(0u)));
    bool _657 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _710;
    if (_657)
    {
        float _668 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _674 = (_574 * _559) - (_571 * _562);
        float _677 = (_568 * _562) - (_574 * _556);
        float _680 = (_571 * _556) - (_568 * _559);
        float _707 = ((log2((((float(_652.y) * 0.5) * float(_652.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_677 * _677) + (_680 * _680)) + (_674 * _674)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_668 * gl_WorldRayDirectionEXT.x, _668 * gl_WorldRayDirectionEXT.y, _668 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _710 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    }
    else
    {
        _710 = 0.0;
    }
    vec4 _714 = textureLod(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_639 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_640 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _710);
    float _719 = _714.x * cbMtdParam._m0[9u].x;
    float _720 = _714.y * cbMtdParam._m0[9u].y;
    float _721 = _714.z * cbMtdParam._m0[9u].z;
    uvec2 _734 = uvec2(textureSize(M_AMSN_M1_Scroll_snp_0_Texture2D_1, int(0u)));
    float _738 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _739 = _738 * gl_WorldRayDirectionEXT.x;
    float _740 = _738 * gl_WorldRayDirectionEXT.y;
    float _741 = _738 * gl_WorldRayDirectionEXT.z;
    float _785;
    if (_657)
    {
        float _751 = (_574 * _559) - (_571 * _562);
        float _754 = (_568 * _562) - (_574 * _556);
        float _757 = (_571 * _556) - (_568 * _559);
        float _783 = ((log2((((float(_734.y) * 0.5) * float(_734.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_754 * _754) + (_757 * _757)) + (_751 * _751)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_739, _740, _741), vec3(_587, _589, _590))));
        _785 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    }
    else
    {
        _785 = 0.0;
    }
    vec4 _788 = textureLod(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _639) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _640) + cbTextureTilingScale._m0[1u].w), _785);
    float _792 = _788.z;
    float _795 = (_788.x * 2.0) + (-1.0);
    float _797 = (_788.y * 2.0) + (-1.0);
    float _798 = dot(vec2(_795, _797), vec2(_795, _797));
    float _1261 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _803 = sqrt(1.0 - (isnan(1.0) ? _1261 : (isnan(_1261) ? 1.0 : min(_1261, 1.0))));
    float _806 = fma(_803, _587, fma(_797, _603, (_622 * _616) * _795));
    float _809 = fma(_803, _589, fma(_797, _604, (_622 * _617) * _795));
    float _812 = fma(_803, _590, fma(_797, _605, (_622 * _618) * _795));
    float _816 = inversesqrt(dot(vec3(_806, _809, _812), vec3(_806, _809, _812)));
    float _817 = _816 * _806;
    float _818 = _816 * _809;
    float _819 = _816 * _812;
    float _831 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _832 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _833 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _834 = (-0.0) - _739;
    float _836 = (-0.0) - _740;
    float _837 = (-0.0) - _741;
    float _843 = float(gl_LaunchIDEXT.x);
    float _844 = float(gl_LaunchIDEXT.y);
    float _847 = float(gl_LaunchSizeEXT.x);
    float _861 = fract(fract(sin(dot(vec2(_843 / _847, _844 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _874 = fract(fract(sin(dot(vec2((_843 + 128.0) / _847, (_844 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _875 = 1.0 - cbMtdParam._m0[10u].x;
    float _876 = _875 * _719;
    float _877 = _875 * _720;
    float _878 = _875 * _721;
    float _883 = (_719 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _884 = (_720 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _885 = (_721 + (-0.039999999105930328369140625)) * cbMtdParam._m0[10u].x;
    float _886 = _883 + 0.039999999105930328369140625;
    float _888 = _884 + 0.039999999105930328369140625;
    float _889 = _885 + 0.039999999105930328369140625;
    _67._m0 = 1u;
    uvec4 _899 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _900 = _899.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _900, _899.w, _900, vec3(_831, _832, _833), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1015;
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    float _1020;
    if (_67._m0 == 0u)
    {
        float _921 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_817, _818, _819));
        float _1272 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _924 = isnan(1.0) ? _1272 : (isnan(_1272) ? 1.0 : min(_1272, 1.0));
        float _943 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _792) * 0.949999988079071044921875);
        float _944 = _943 * _943;
        float _945 = g_sceneCB._m0[4u].x - _739;
        float _946 = g_sceneCB._m0[4u].y - _740;
        float _947 = g_sceneCB._m0[4u].z - _741;
        float _951 = inversesqrt(dot(vec3(_945, _946, _947), vec3(_945, _946, _947)));
        float _952 = _951 * _945;
        float _953 = _951 * _946;
        float _954 = _951 * _947;
        float _955 = dot(vec3(_817, _818, _819), vec3(g_sceneCB._m0[4u].xyz));
        float _1283 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _958 = isnan(1.0) ? _1283 : (isnan(_1283) ? 1.0 : min(_1283, 1.0));
        float _959 = dot(vec3(_817, _818, _819), vec3(_834, _836, _837));
        float _1294 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _962 = isnan(1.0) ? _1294 : (isnan(_1294) ? 1.0 : min(_1294, 1.0));
        float _963 = dot(vec3(_817, _818, _819), vec3(_952, _953, _954));
        float _1305 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
        float _966 = isnan(1.0) ? _1305 : (isnan(_1305) ? 1.0 : min(_1305, 1.0));
        float _967 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_952, _953, _954));
        float _1316 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
        float _971 = _944 * _944;
        float _975 = ((_966 * _966) * (_971 + (-1.0))) + 1.0;
        float _984 = exp2(log2(1.0 - (isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0)))) * 5.0);
        float _995 = 1.0 - _944;
        float _1006 = (0.5 / (((_962 * ((_958 * _995) + _944)) + 9.9999999392252902907785028219223e-09) + (((_962 * _995) + _944) * _958))) * _958;
        float _1327 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1008 = (isnan(1.0) ? _1327 : (isnan(_1327) ? 1.0 : min(_1327, 1.0))) * (_971 / ((_975 * _975) * 3.141590118408203125));
        _1015 = ((_876 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _924;
        _1016 = ((_877 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _924;
        _1017 = ((_878 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _924;
        _1018 = (((_984 * (0.959999978542327880859375 - _883)) + _886) * g_sceneCB._m0[5u].x) * _1008;
        _1019 = (((_984 * (0.959999978542327880859375 - _884)) + _888) * g_sceneCB._m0[5u].y) * _1008;
        _1020 = (((_984 * (0.959999978542327880859375 - _885)) + _889) * g_sceneCB._m0[5u].z) * _1008;
    }
    else
    {
        _1015 = 0.0;
        _1016 = 0.0;
        _1017 = 0.0;
        _1018 = 0.0;
        _1019 = 0.0;
        _1020 = 0.0;
    }
    bool _1022 = abs(_818) < 0.89999997615814208984375;
    float _1024 = float(_1022);
    float _1025 = _1022 ? 0.0 : 1.0;
    float _1028 = (_1024 * _819) - (_1025 * _818);
    float _1029 = _1025 * _817;
    float _1031 = (-0.0) - (_817 * _1024);
    float _1035 = inversesqrt(dot(vec3(_1028, _1029, _1031), vec3(_1028, _1029, _1031)));
    float _1036 = _1028 * _1035;
    float _1037 = _1029 * _1035;
    float _1038 = _1035 * _1031;
    float _1041 = (_1037 * _819) - (_1038 * _818);
    float _1044 = (_1038 * _817) - (_1036 * _819);
    float _1047 = (_1036 * _818) - (_1037 * _817);
    float _1049;
    float _1057;
    float _1048 = 0.0;
    uint _1050 = 0u;
    float _1054;
    bool _1056;
    for (;;)
    {
        _1054 = (float(_1050) + _861) * 0.03125;
        _1056 = _1050 == 0u;
        float frontier_phi_31_pred;
        if (_1056)
        {
            frontier_phi_31_pred = 0.0;
        }
        else
        {
            float _1198;
            float _1199;
            uint _1201;
            _1198 = 0.0;
            _1199 = 0.5;
            _1201 = _1050;
            float _1058;
            for (;;)
            {
                _1058 = ((_1201 & 1u) != 0u) ? (_1199 + _1198) : _1198;
                uint _1202 = _1201 >> 1u;
                if (_1202 == 0u)
                {
                    break;
                }
                else
                {
                    _1198 = _1058;
                    _1199 *= 0.5;
                    _1201 = _1202;
                }
            }
            frontier_phi_31_pred = _1058;
        }
        _1057 = frontier_phi_31_pred;
        float _1059 = _1057 + _874;
        float _1063 = sqrt(_1054);
        float _1064 = ((_1059 > 1.0) ? (_1059 + (-1.0)) : _1059) * 6.283185482025146484375;
        float _1067 = cos(_1064) * _1063;
        float _1069 = sin(_1064) * _1063;
        float _1071 = sqrt(1.0 - _1054);
        float _1084 = ((_1071 * _817) + (_1067 * _1041)) + (_1069 * _1036);
        float _1085 = ((_1071 * _818) + (_1067 * _1044)) + (_1069 * _1037);
        float _1086 = ((_1071 * _819) + (_1067 * _1047)) + (_1069 * _1038);
        _66._m0 = 1u;
        uvec4 _1090 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1091 = _1090.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1091, _1090.w, _1091, vec3(_831, _832, _833), 9.9999997473787516355514526367188e-05, vec3(_1084, _1085, _1086), 10000.0, 1);
        float _1097 = dot(vec3(_817, _818, _819), vec3(_1084, _1085, _1086));
        float _1338 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1100 = isnan(1.0) ? _1338 : (isnan(_1338) ? 1.0 : min(_1338, 1.0));
        _1049 = ((float(_66._m0 == 0u) * _1100) / (_1100 * 0.3183098733425140380859375)) + _1048;
        uint _1051 = _1050 + 1u;
        if (_1051 == 32u)
        {
            break;
        }
        else
        {
            _1048 = _1049;
            _1050 = _1051;
            continue;
        }
    }
    float _1108 = _1049 * 0.009947183541953563690185546875;
    float _1113 = dot(vec3(_739, _740, _741), vec3(_817, _818, _819)) * 2.0;
    vec4 _1127 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_739 - (_1113 * _817), _740 - (_1113 * _818), _741 - (_1113 * _819)), 4.0 - (_792 * 4.0));
    float _1132 = dot(vec3(_834, _836, _837), vec3(_817, _818, _819));
    float _1349 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1142 = exp2(log2(1.0 - (isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0)))) * 5.0);
    vec4 _1154 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_817, _818, _819), 0.0);
    float _1165 = (_1018 + _1015) + (((_1154.x * _876) + (((_1142 * (0.959999978542327880859375 - _883)) + _886) * _1127.x)) * _1108);
    float _1169 = (_1019 + _1016) + (((_1154.y * _877) + (((_1142 * (0.959999978542327880859375 - _884)) + _888) * _1127.y)) * _1108);
    float _1173 = (_1020 + _1017) + (((_1154.z * _878) + (((_1142 * (0.959999978542327880859375 - _885)) + _889) * _1127.z)) * _1108);
    float _1360 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
    float _1371 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
    float _1382 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
    bool _1181 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1192;
    _1192.x = _1181 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0)));
    _1192.y = _1181 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0)));
    _1192.z = _1181 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0)));
    payload._m0 = _1192;
}


