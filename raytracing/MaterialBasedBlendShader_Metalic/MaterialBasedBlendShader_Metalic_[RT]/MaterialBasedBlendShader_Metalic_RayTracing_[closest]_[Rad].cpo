#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[25];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2193;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uvec4 _253 = texelFetch(l_geomAttrib_0, int(((_187 + 8u) + _243) >> 2u));
    uint _254 = _253.x;
    float _258 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_254) >> int(16u))));
    uint _260 = _181 * _175;
    uint _261 = _260 + 12u;
    uint _282;
    uint _283;
    uint _284;
    uint _285;
    if (_186)
    {
        uvec4 _263 = texelFetch(l_geomAttrib_0, int(_261 >> 2u));
        uint _264 = _263.x;
        _282 = _264 & 255u;
        _283 = (_264 >> 8u) & 255u;
        _284 = (_264 >> 16u) & 255u;
        _285 = 16u;
    }
    else
    {
        uint _270 = _261 >> 2u;
        uvec2 _276 = uvec2(texelFetch(l_geomAttrib_0, int(_270)).x, texelFetch(l_geomAttrib_0, int(_270 + 1u)).x);
        uint _277 = _276.x;
        _282 = _277 & 65535u;
        _283 = _277 >> 16u;
        _284 = _276.y & 65535u;
        _285 = 20u;
    }
    uvec4 _291 = texelFetch(l_geomAttrib_0, int((_285 + _260) >> 2u));
    uint _292 = _291.x;
    uint _304;
    if (_238)
    {
        _304 = _285 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _285 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _285 + 12u;
        }
        _304 = frontier_phi_16_17_ladder;
    }
    uint _308 = _183 ? (_304 + 4u) : _304;
    uvec4 _318 = texelFetch(l_geomAttrib_0, int(((_260 + 8u) + _308) >> 2u));
    uint _319 = _318.x;
    float _323 = float(int(uint(int(_319 << 16u) >> int(16u))));
    float _324 = float(int(uint(int(_319) >> int(16u))));
    uint _325 = _181 * _176;
    uint _326 = _325 + 12u;
    uint _347;
    uint _348;
    uint _349;
    uint _350;
    if (_186)
    {
        uvec4 _328 = texelFetch(l_geomAttrib_0, int(_326 >> 2u));
        uint _329 = _328.x;
        _347 = _329 & 255u;
        _348 = (_329 >> 8u) & 255u;
        _349 = (_329 >> 16u) & 255u;
        _350 = 16u;
    }
    else
    {
        uint _335 = _326 >> 2u;
        uvec2 _341 = uvec2(texelFetch(l_geomAttrib_0, int(_335)).x, texelFetch(l_geomAttrib_0, int(_335 + 1u)).x);
        uint _342 = _341.x;
        _347 = _342 & 65535u;
        _348 = _342 >> 16u;
        _349 = _341.y & 65535u;
        _350 = 20u;
    }
    uvec4 _356 = texelFetch(l_geomAttrib_0, int((_350 + _325) >> 2u));
    uint _357 = _356.x;
    uint _369;
    if (_238)
    {
        _369 = _350 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _350 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _350 + 12u;
        }
        _369 = frontier_phi_23_24_ladder;
    }
    uint _373 = _183 ? (_369 + 4u) : _369;
    uvec4 _383 = texelFetch(l_geomAttrib_0, int(((_325 + 8u) + _373) >> 2u));
    uint _384 = _383.x;
    float _388 = float(int(uint(int(_384 << 16u) >> int(16u))));
    float _389 = float(int(uint(int(_384) >> int(16u))));
    bool _391 = _132.z == 0u;
    float _427;
    float _428;
    float _429;
    if (_391)
    {
        uint _394 = _173 * 3u;
        uvec3 _403 = uvec3(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_394 + 2u)).x);
        _427 = uintBitsToFloat(_403.x);
        _428 = uintBitsToFloat(_403.y);
        _429 = uintBitsToFloat(_403.z);
    }
    else
    {
        uint _411 = _173 * 2u;
        uvec2 _417 = uvec2(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x);
        uint _418 = _417.x;
        _427 = unpackHalf2x16(_418).x;
        _428 = unpackHalf2x16(_418 >> 16u).x;
        _429 = unpackHalf2x16(_417.y).x;
    }
    float _465;
    float _466;
    float _467;
    if (_391)
    {
        uint _432 = _175 * 3u;
        uvec3 _441 = uvec3(texelFetch(l_geomPositionBuffer, int(_432)).x, texelFetch(l_geomPositionBuffer, int(_432 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_432 + 2u)).x);
        _465 = uintBitsToFloat(_441.x);
        _466 = uintBitsToFloat(_441.y);
        _467 = uintBitsToFloat(_441.z);
    }
    else
    {
        uint _449 = _175 * 2u;
        uvec2 _455 = uvec2(texelFetch(l_geomPositionBuffer, int(_449)).x, texelFetch(l_geomPositionBuffer, int(_449 + 1u)).x);
        uint _456 = _455.x;
        _465 = unpackHalf2x16(_456).x;
        _466 = unpackHalf2x16(_456 >> 16u).x;
        _467 = unpackHalf2x16(_455.y).x;
    }
    float _503;
    float _504;
    float _505;
    if (_391)
    {
        uint _470 = _176 * 3u;
        uvec3 _479 = uvec3(texelFetch(l_geomPositionBuffer, int(_470)).x, texelFetch(l_geomPositionBuffer, int(_470 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_470 + 2u)).x);
        _503 = uintBitsToFloat(_479.x);
        _504 = uintBitsToFloat(_479.y);
        _505 = uintBitsToFloat(_479.z);
    }
    else
    {
        uint _487 = _176 * 2u;
        uvec2 _493 = uvec2(texelFetch(l_geomPositionBuffer, int(_487)).x, texelFetch(l_geomPositionBuffer, int(_487 + 1u)).x);
        uint _494 = _493.x;
        _503 = unpackHalf2x16(_494).x;
        _504 = unpackHalf2x16(_494 >> 16u).x;
        _505 = unpackHalf2x16(_493.y).x;
    }
    float _508 = (1.0 - hit._m0.x) - hit._m0.y;
    float _549 = (_323 - _258) * 0.00048828125;
    float _551 = (_324 - _259) * 0.00048828125;
    float _554 = (_388 - _258) * 0.00048828125;
    float _555 = (_389 - _259) * 0.00048828125;
    float _577 = _465 - _427;
    float _578 = _466 - _428;
    float _579 = _467 - _429;
    float _582 = fma(_579, gl_ObjectToWorldEXT[2u].x, fma(_578, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _577));
    float _585 = fma(_579, gl_ObjectToWorldEXT[2u].y, fma(_578, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _577));
    float _588 = fma(_579, gl_ObjectToWorldEXT[2u].z, fma(_578, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _577));
    float _589 = _503 - _427;
    float _590 = _504 - _428;
    float _591 = _505 - _429;
    float _594 = fma(_591, gl_ObjectToWorldEXT[2u].x, fma(_590, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _589));
    float _597 = fma(_591, gl_ObjectToWorldEXT[2u].y, fma(_590, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _589));
    float _600 = fma(_591, gl_ObjectToWorldEXT[2u].z, fma(_590, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _589));
    float _601 = (((_323 * hit._m0.x) + (_258 * _508)) + (_388 * hit._m0.y)) * 0.00048828125;
    float _602 = (((_324 * hit._m0.x) + (_259 * _508)) + (_389 * hit._m0.y)) * 0.00048828125;
    float _606 = (((float(_212) * _508) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_347) * hit._m0.y);
    float _609 = (((float(_213) * _508) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_348) * hit._m0.y);
    float _612 = (((float(_214) * _508) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _613 = _606 * 0.0078740157186985015869140625;
    float _615 = _609 * 0.0078740157186985015869140625;
    float _616 = _612 * 0.0078740157186985015869140625;
    float _629 = ((((float(_224 & 255u) * _508) + (-127.0)) + (float(_292 & 255u) * hit._m0.x)) + (float(_357 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float((_224 >> 8u) & 255u) * _508) + (-127.0)) + (float((_292 >> 8u) & 255u) * hit._m0.x)) + (float((_357 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _631 = ((((float((_224 >> 16u) & 255u) * _508) + (-127.0)) + (float((_292 >> 16u) & 255u) * hit._m0.x)) + (float((_357 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _632 = ((((float(_224 >> 24u) * _508) + (-127.0)) + (float(_292 >> 24u) * hit._m0.x)) + (float(_357 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _642 = ((_630 * _616) - (_631 * _615)) * _632;
    float _643 = ((_631 * _613) - (_629 * _616)) * _632;
    float _644 = ((_629 * _615) - (_630 * _613)) * _632;
    float _648 = inversesqrt(dot(vec3(_642, _643, _644), vec3(_642, _643, _644)));
    uvec2 _677 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11, int(0u)));
    bool _682 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _735;
    if (_682)
    {
        float _693 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _699 = (_600 * _585) - (_597 * _588);
        float _702 = (_594 * _588) - (_600 * _582);
        float _705 = (_597 * _582) - (_594 * _585);
        float _732 = ((log2((((float(_677.y) * 0.5) * float(_677.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_702 * _702) + (_705 * _705)) + (_699 * _699)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_693 * gl_WorldRayDirectionEXT.x, _693 * gl_WorldRayDirectionEXT.y, _693 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _735 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    }
    else
    {
        _735 = 0.0;
    }
    vec4 _739 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _601) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _602) + cbTextureTilingScale._m0[4u].w), _735);
    uvec2 _766 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8, int(0u)));
    float _817;
    if (_682)
    {
        float _777 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _783 = (_600 * _585) - (_597 * _588);
        float _786 = (_594 * _588) - (_600 * _582);
        float _789 = (_597 * _582) - (_594 * _585);
        float _815 = ((log2((((float(_766.y) * 0.5) * float(_766.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_786 * _786) + (_789 * _789)) + (_783 * _783)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_777 * gl_WorldRayDirectionEXT.x, _777 * gl_WorldRayDirectionEXT.y, _777 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _817 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    }
    else
    {
        _817 = 0.0;
    }
    vec4 _819 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _601) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _602) + cbTextureTilingScale._m0[13u].w), _817);
    uvec2 _845 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1, int(0u)));
    float _896;
    if (_682)
    {
        float _856 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _862 = (_600 * _585) - (_597 * _588);
        float _865 = (_594 * _588) - (_600 * _582);
        float _868 = (_597 * _582) - (_594 * _585);
        float _894 = ((log2((((float(_845.y) * 0.5) * float(_845.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_865 * _865) + (_868 * _868)) + (_862 * _862)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_856 * gl_WorldRayDirectionEXT.x, _856 * gl_WorldRayDirectionEXT.y, _856 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _896 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    }
    else
    {
        _896 = 0.0;
    }
    vec4 _898 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _601) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _602) + cbTextureTilingScale._m0[0u].w), _896);
    float _903 = _898.x * cbMatDynParam._m0[17u].x;
    float _904 = _898.y * cbMatDynParam._m0[17u].y;
    float _905 = _898.z * cbMatDynParam._m0[17u].z;
    uvec2 _923 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2, int(0u)));
    float _974;
    if (_682)
    {
        float _934 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _940 = (_600 * _585) - (_597 * _588);
        float _943 = (_594 * _588) - (_600 * _582);
        float _946 = (_597 * _582) - (_594 * _585);
        float _972 = ((log2((((float(_923.y) * 0.5) * float(_923.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_943 * _943) + (_946 * _946)) + (_940 * _940)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_934 * gl_WorldRayDirectionEXT.x, _934 * gl_WorldRayDirectionEXT.y, _934 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _974 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    }
    else
    {
        _974 = 0.0;
    }
    vec4 _976 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _601) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _602) + cbTextureTilingScale._m0[7u].w), _974);
    uvec2 _995 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0, int(0u)));
    float _1046;
    if (_682)
    {
        float _1006 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1012 = (_600 * _585) - (_597 * _588);
        float _1015 = (_594 * _588) - (_600 * _582);
        float _1018 = (_597 * _582) - (_594 * _585);
        float _1044 = ((log2((((float(_995.y) * 0.5) * float(_995.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1015 * _1015) + (_1018 * _1018)) + (_1012 * _1012)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1006 * gl_WorldRayDirectionEXT.x, _1006 * gl_WorldRayDirectionEXT.y, _1006 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1046 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
    }
    else
    {
        _1046 = 0.0;
    }
    vec4 _1049 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _601) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _602) + cbTextureTilingScale._m0[2u].w), _1046);
    float _1059 = (((((float(texelFetch(l_geomAttrib_0, int((_308 + _260) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_243 + _187) >> 2u)).x >> 24u) * _508)) + (float(texelFetch(l_geomAttrib_0, int((_373 + _325) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[21u].y) + 1.0;
    float _1060 = (0.5 - ((cbMatDynParam._m0[21u].x * 0.5) * (1.0099999904632568359375 - _1049.x))) * _1059;
    float _2318 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1061 = isnan(1.0) ? _2318 : (isnan(_2318) ? 1.0 : min(_2318, 1.0));
    float _1068 = (_1061 * ((_976.x * cbMatDynParam._m0[18u].x) - _903)) + _903;
    float _1069 = (_1061 * ((_976.y * cbMatDynParam._m0[18u].y) - _904)) + _904;
    float _1070 = (_1061 * ((_976.z * cbMatDynParam._m0[18u].z) - _905)) + _905;
    float _1075 = (0.5 - ((cbMatDynParam._m0[23u].z * 0.5) * (1.0099999904632568359375 - _1049.y))) * _1059;
    float _2329 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _1076 = isnan(1.0) ? _2329 : (isnan(_2329) ? 1.0 : min(_2329, 1.0));
    float _1083 = (((_819.x * cbMatDynParam._m0[19u].x) - _1068) * _1076) + _1068;
    float _1084 = (((_819.y * cbMatDynParam._m0[19u].y) - _1069) * _1076) + _1069;
    float _1085 = (((_819.z * cbMatDynParam._m0[19u].z) - _1070) * _1076) + _1070;
    float _1090 = (0.5 - ((cbMatDynParam._m0[23u].w * 0.5) * (1.0099999904632568359375 - _1049.z))) * _1059;
    float _2340 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    float _1091 = isnan(1.0) ? _2340 : (isnan(_2340) ? 1.0 : min(_2340, 1.0));
    float _1098 = (((_739.x * cbMatDynParam._m0[20u].x) - _1083) * _1091) + _1083;
    float _1099 = (((_739.y * cbMatDynParam._m0[20u].y) - _1084) * _1091) + _1084;
    float _1100 = (((_739.z * cbMatDynParam._m0[20u].z) - _1085) * _1091) + _1085;
    uvec2 _1113 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10, int(0u)));
    float _1164;
    if (_682)
    {
        float _1124 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1130 = (_600 * _585) - (_597 * _588);
        float _1133 = (_594 * _588) - (_600 * _582);
        float _1136 = (_597 * _582) - (_594 * _585);
        float _1162 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1133 * _1133) + (_1136 * _1136)) + (_1130 * _1130)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1124 * gl_WorldRayDirectionEXT.x, _1124 * gl_WorldRayDirectionEXT.y, _1124 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1164 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    }
    else
    {
        _1164 = 0.0;
    }
    float _1170 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10, SS_SpecularMap), vec2((cbTextureTilingScale._m0[3u].x * _601) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _602) + cbTextureTilingScale._m0[3u].w), _1164).x + cbMatDynParam._m0[23u].x;
    float _1171 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
    uvec2 _1188 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3, int(0u)));
    float _1239;
    if (_682)
    {
        float _1199 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1205 = (_600 * _585) - (_597 * _588);
        float _1208 = (_594 * _588) - (_600 * _582);
        float _1211 = (_597 * _582) - (_594 * _585);
        float _1237 = ((log2((((float(_1188.y) * 0.5) * float(_1188.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1208 * _1208) + (_1211 * _1211)) + (_1205 * _1205)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1199 * gl_WorldRayDirectionEXT.x, _1199 * gl_WorldRayDirectionEXT.y, _1199 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1239 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    }
    else
    {
        _1239 = 0.0;
    }
    float _1244 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3, SS_SpecularMap), vec2((cbTextureTilingScale._m0[8u].x * _601) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _602) + cbTextureTilingScale._m0[8u].w), _1239).x + cbMatDynParam._m0[22u].w;
    float _1245 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
    uvec2 _1260 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4, int(0u)));
    float _1311;
    if (_682)
    {
        float _1271 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1277 = (_600 * _585) - (_597 * _588);
        float _1280 = (_594 * _588) - (_600 * _582);
        float _1283 = (_597 * _582) - (_594 * _585);
        float _1309 = ((log2((((float(_1260.y) * 0.5) * float(_1260.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1280 * _1280) + (_1283 * _1283)) + (_1277 * _1277)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1271 * gl_WorldRayDirectionEXT.x, _1271 * gl_WorldRayDirectionEXT.y, _1271 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1311 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
    }
    else
    {
        _1311 = 0.0;
    }
    float _1316 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4, SS_SpecularMap), vec2((cbTextureTilingScale._m0[9u].x * _601) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _602) + cbTextureTilingScale._m0[9u].w), _1311).x + cbMatDynParam._m0[22u].y;
    float _1317 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
    float _1318 = isnan(1.0) ? _1317 : (isnan(_1317) ? 1.0 : min(_1317, 1.0));
    uvec2 _1332 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9, int(0u)));
    float _1383;
    if (_682)
    {
        float _1343 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1349 = (_600 * _585) - (_597 * _588);
        float _1352 = (_594 * _588) - (_600 * _582);
        float _1355 = (_597 * _582) - (_594 * _585);
        float _1381 = ((log2((((float(_1332.y) * 0.5) * float(_1332.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1352 * _1352) + (_1355 * _1355)) + (_1349 * _1349)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1343 * gl_WorldRayDirectionEXT.x, _1343 * gl_WorldRayDirectionEXT.y, _1343 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1383 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
    }
    else
    {
        _1383 = 0.0;
    }
    float _1388 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9, SS_SpecularMap), vec2((cbTextureTilingScale._m0[14u].x * _601) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _602) + cbTextureTilingScale._m0[14u].w), _1383).x + cbMatDynParam._m0[22u].z;
    float _1389 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
    float _1393 = (_1061 * ((isnan(1.0) ? _1389 : (isnan(_1389) ? 1.0 : min(_1389, 1.0))) - _1318)) + _1318;
    float _1396 = (((isnan(1.0) ? _1245 : (isnan(_1245) ? 1.0 : min(_1245, 1.0))) - _1393) * _1076) + _1393;
    float _1399 = (((isnan(1.0) ? _1171 : (isnan(_1171) ? 1.0 : min(_1171, 1.0))) - _1396) * _1091) + _1396;
    uvec2 _1414 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16, int(0u)));
    float _1465;
    if (_682)
    {
        float _1425 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1431 = (_600 * _585) - (_597 * _588);
        float _1434 = (_594 * _588) - (_600 * _582);
        float _1437 = (_597 * _582) - (_594 * _585);
        float _1463 = ((log2((((float(_1414.y) * 0.5) * float(_1414.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1434 * _1434) + (_1437 * _1437)) + (_1431 * _1431)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1425 * gl_WorldRayDirectionEXT.x, _1425 * gl_WorldRayDirectionEXT.y, _1425 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1465 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
    }
    else
    {
        _1465 = 0.0;
    }
    vec4 _1468 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _601) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _602) + cbTextureTilingScale._m0[6u].w), _1465);
    uvec2 _1487 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15, int(0u)));
    float _1538;
    if (_682)
    {
        float _1498 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1504 = (_600 * _585) - (_597 * _588);
        float _1507 = (_594 * _588) - (_600 * _582);
        float _1510 = (_597 * _582) - (_594 * _585);
        float _1536 = ((log2((((float(_1487.y) * 0.5) * float(_1487.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1507 * _1507) + (_1510 * _1510)) + (_1504 * _1504)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1498 * gl_WorldRayDirectionEXT.x, _1498 * gl_WorldRayDirectionEXT.y, _1498 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1538 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
    }
    else
    {
        _1538 = 0.0;
    }
    vec4 _1540 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _601) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _602) + cbTextureTilingScale._m0[5u].w), _1538);
    uvec2 _1559 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5, int(0u)));
    float _1610;
    if (_682)
    {
        float _1570 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1576 = (_600 * _585) - (_597 * _588);
        float _1579 = (_594 * _588) - (_600 * _582);
        float _1582 = (_597 * _582) - (_594 * _585);
        float _1608 = ((log2((((float(_1559.y) * 0.5) * float(_1559.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1579 * _1579) + (_1582 * _1582)) + (_1576 * _1576)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1570 * gl_WorldRayDirectionEXT.x, _1570 * gl_WorldRayDirectionEXT.y, _1570 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1610 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
    }
    else
    {
        _1610 = 0.0;
    }
    vec4 _1612 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _601) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _602) + cbTextureTilingScale._m0[10u].w), _1610);
    float _1614 = _1612.x;
    float _1615 = _1612.y;
    float _1617 = _1612.z * cbMatDynParam._m0[22u].x;
    uvec2 _1631 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6, int(0u)));
    float _1682;
    if (_682)
    {
        float _1642 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1648 = (_600 * _585) - (_597 * _588);
        float _1651 = (_594 * _588) - (_600 * _582);
        float _1654 = (_597 * _582) - (_594 * _585);
        float _1680 = ((log2((((float(_1631.y) * 0.5) * float(_1631.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1651 * _1651) + (_1654 * _1654)) + (_1648 * _1648)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1642 * gl_WorldRayDirectionEXT.x, _1642 * gl_WorldRayDirectionEXT.y, _1642 * gl_WorldRayDirectionEXT.z), vec3(_613, _615, _616))));
        _1682 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
    }
    else
    {
        _1682 = 0.0;
    }
    vec4 _1684 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _601) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _602) + cbTextureTilingScale._m0[11u].w), _1682);
    float _1692 = (((_1684.z * cbMatDynParam._m0[21u].w) - _1617) * _1061) + _1617;
    float _1695 = (((_1540.z * cbMatDynParam._m0[21u].z) - _1692) * _1076) + _1692;
    float _1698 = (((_1468.z * cbMatDynParam._m0[24u].x) - _1695) * _1091) + _1695;
    uvec2 _1710 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7, int(0u)));
    float _1714 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1715 = _1714 * gl_WorldRayDirectionEXT.x;
    float _1716 = _1714 * gl_WorldRayDirectionEXT.y;
    float _1717 = _1714 * gl_WorldRayDirectionEXT.z;
    float _1761;
    if (_682)
    {
        float _1727 = (_600 * _585) - (_597 * _588);
        float _1730 = (_594 * _588) - (_600 * _582);
        float _1733 = (_597 * _582) - (_594 * _585);
        float _1759 = ((log2((((float(_1710.y) * 0.5) * float(_1710.x)) * abs((_555 * _549) - (_554 * _551))) / (sqrt(((_1730 * _1730) + (_1733 * _1733)) + (_1727 * _1727)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1715, _1716, _1717), vec3(_613, _615, _616))));
        _1761 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
    }
    else
    {
        _1761 = 0.0;
    }
    vec4 _1763 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _601) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _602) + cbTextureTilingScale._m0[12u].w), _1761);
    float _1776 = (_1061 * (_1684.x - _1614)) + _1614;
    float _1777 = (_1061 * (_1684.y - _1615)) + _1615;
    float _1782 = ((_1540.x - _1776) * _1076) + _1776;
    float _1783 = ((_1540.y - _1777) * _1076) + _1777;
    float _1792 = ((((_1468.x - _1782) * _1091) + _1782) * 2.0) + (-1.0);
    float _1793 = ((((_1468.y - _1783) * _1091) + _1783) * 2.0) + (-1.0);
    float _1794 = dot(vec2(_1792, _1793), vec2(_1792, _1793));
    float _2436 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
    float _1799 = sqrt(1.0 - (isnan(1.0) ? _2436 : (isnan(_2436) ? 1.0 : min(_2436, 1.0))));
    float _1803 = _1792 + (cbMatDynParam._m0[23u].y * ((_1763.x * 2.0) + (-1.0)));
    float _1804 = _1793 + (cbMatDynParam._m0[23u].y * ((_1763.y * 2.0) + (-1.0)));
    float _1807 = fma(_1799, _613, fma(_1804, _629, (_648 * _642) * _1803));
    float _1810 = fma(_1799, _615, fma(_1804, _630, (_648 * _643) * _1803));
    float _1813 = fma(_1799, _616, fma(_1804, _631, (_648 * _644) * _1803));
    float _1817 = inversesqrt(dot(vec3(_1807, _1810, _1813), vec3(_1807, _1810, _1813)));
    float _1818 = _1817 * _1807;
    float _1819 = _1817 * _1810;
    float _1820 = _1817 * _1813;
    float _1832 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1833 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1834 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1835 = (-0.0) - _1715;
    float _1837 = (-0.0) - _1716;
    float _1838 = (-0.0) - _1717;
    float _1844 = float(gl_LaunchIDEXT.x);
    float _1845 = float(gl_LaunchIDEXT.y);
    float _1848 = float(gl_LaunchSizeEXT.x);
    float _1862 = fract(fract(sin(dot(vec2(_1844 / _1848, _1845 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1875 = fract(fract(sin(dot(vec2((_1844 + 128.0) / _1848, (_1845 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1876 = 1.0 - _1399;
    float _1877 = _1876 * _1098;
    float _1878 = _1876 * _1099;
    float _1879 = _1876 * _1100;
    float _1884 = _1399 * (_1098 + (-0.039999999105930328369140625));
    float _1885 = _1399 * (_1099 + (-0.039999999105930328369140625));
    float _1886 = _1399 * (_1100 + (-0.039999999105930328369140625));
    float _1887 = _1884 + 0.039999999105930328369140625;
    float _1889 = _1885 + 0.039999999105930328369140625;
    float _1890 = _1886 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1900 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1901 = _1900.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1901, _1900.w, _1901, vec3(_1832, _1833, _1834), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2015;
    float _2016;
    float _2017;
    float _2018;
    float _2019;
    float _2020;
    if (_74._m0 == 0u)
    {
        float _1921 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1818, _1819, _1820));
        float _2447 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
        float _1924 = isnan(1.0) ? _2447 : (isnan(_2447) ? 1.0 : min(_2447, 1.0));
        float _1943 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1698) * 0.949999988079071044921875);
        float _1944 = _1943 * _1943;
        float _1945 = g_sceneCB._m0[4u].x - _1715;
        float _1946 = g_sceneCB._m0[4u].y - _1716;
        float _1947 = g_sceneCB._m0[4u].z - _1717;
        float _1951 = inversesqrt(dot(vec3(_1945, _1946, _1947), vec3(_1945, _1946, _1947)));
        float _1952 = _1951 * _1945;
        float _1953 = _1951 * _1946;
        float _1954 = _1951 * _1947;
        float _1955 = dot(vec3(_1818, _1819, _1820), vec3(g_sceneCB._m0[4u].xyz));
        float _2458 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
        float _1958 = isnan(1.0) ? _2458 : (isnan(_2458) ? 1.0 : min(_2458, 1.0));
        float _1959 = dot(vec3(_1818, _1819, _1820), vec3(_1835, _1837, _1838));
        float _2469 = isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0));
        float _1962 = isnan(1.0) ? _2469 : (isnan(_2469) ? 1.0 : min(_2469, 1.0));
        float _1963 = dot(vec3(_1818, _1819, _1820), vec3(_1952, _1953, _1954));
        float _2480 = isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0));
        float _1966 = isnan(1.0) ? _2480 : (isnan(_2480) ? 1.0 : min(_2480, 1.0));
        float _1967 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1952, _1953, _1954));
        float _2491 = isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0));
        float _1971 = _1944 * _1944;
        float _1975 = ((_1966 * _1966) * (_1971 + (-1.0))) + 1.0;
        float _1984 = exp2(log2(1.0 - (isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0)))) * 5.0);
        float _1995 = 1.0 - _1944;
        float _2006 = (0.5 / (((_1962 * ((_1958 * _1995) + _1944)) + 9.9999999392252902907785028219223e-09) + (((_1962 * _1995) + _1944) * _1958))) * _1958;
        float _2502 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
        float _2008 = (isnan(1.0) ? _2502 : (isnan(_2502) ? 1.0 : min(_2502, 1.0))) * (_1971 / ((_1975 * _1975) * 3.141590118408203125));
        _2015 = ((_1877 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1924;
        _2016 = ((_1878 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1924;
        _2017 = ((_1879 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1924;
        _2018 = (((_1984 * (0.959999978542327880859375 - _1884)) + _1887) * g_sceneCB._m0[5u].x) * _2008;
        _2019 = (((_1984 * (0.959999978542327880859375 - _1885)) + _1889) * g_sceneCB._m0[5u].y) * _2008;
        _2020 = (((_1984 * (0.959999978542327880859375 - _1886)) + _1890) * g_sceneCB._m0[5u].z) * _2008;
    }
    else
    {
        _2015 = 0.0;
        _2016 = 0.0;
        _2017 = 0.0;
        _2018 = 0.0;
        _2019 = 0.0;
        _2020 = 0.0;
    }
    bool _2022 = abs(_1819) < 0.89999997615814208984375;
    float _2024 = float(_2022);
    float _2025 = _2022 ? 0.0 : 1.0;
    float _2028 = (_2024 * _1820) - (_2025 * _1819);
    float _2029 = _2025 * _1818;
    float _2031 = (-0.0) - (_1818 * _2024);
    float _2035 = inversesqrt(dot(vec3(_2028, _2029, _2031), vec3(_2028, _2029, _2031)));
    float _2036 = _2028 * _2035;
    float _2037 = _2029 * _2035;
    float _2038 = _2035 * _2031;
    float _2041 = (_2037 * _1820) - (_2038 * _1819);
    float _2044 = (_2038 * _1818) - (_2036 * _1820);
    float _2047 = (_2036 * _1819) - (_2037 * _1818);
    float _2049;
    float _2057;
    float _2048 = 0.0;
    uint _2050 = 0u;
    float _2054;
    bool _2056;
    for (;;)
    {
        _2054 = (float(_2050) + _1862) * 0.03125;
        _2056 = _2050 == 0u;
        float frontier_phi_67_pred;
        if (_2056)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2198;
            float _2199;
            uint _2201;
            _2198 = 0.0;
            _2199 = 0.5;
            _2201 = _2050;
            float _2058;
            for (;;)
            {
                _2058 = ((_2201 & 1u) != 0u) ? (_2199 + _2198) : _2198;
                uint _2202 = _2201 >> 1u;
                if (_2202 == 0u)
                {
                    break;
                }
                else
                {
                    _2198 = _2058;
                    _2199 *= 0.5;
                    _2201 = _2202;
                }
            }
            frontier_phi_67_pred = _2058;
        }
        _2057 = frontier_phi_67_pred;
        float _2059 = _2057 + _1875;
        float _2063 = sqrt(_2054);
        float _2064 = ((_2059 > 1.0) ? (_2059 + (-1.0)) : _2059) * 6.283185482025146484375;
        float _2067 = cos(_2064) * _2063;
        float _2069 = sin(_2064) * _2063;
        float _2071 = sqrt(1.0 - _2054);
        float _2084 = ((_2071 * _1818) + (_2067 * _2041)) + (_2069 * _2036);
        float _2085 = ((_2071 * _1819) + (_2067 * _2044)) + (_2069 * _2037);
        float _2086 = ((_2071 * _1820) + (_2067 * _2047)) + (_2069 * _2038);
        _73._m0 = 1u;
        uvec4 _2090 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2091 = _2090.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2091, _2090.w, _2091, vec3(_1832, _1833, _1834), 9.9999997473787516355514526367188e-05, vec3(_2084, _2085, _2086), 10000.0, 1);
        float _2097 = dot(vec3(_1818, _1819, _1820), vec3(_2084, _2085, _2086));
        float _2513 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
        float _2100 = isnan(1.0) ? _2513 : (isnan(_2513) ? 1.0 : min(_2513, 1.0));
        _2049 = ((float(_73._m0 == 0u) * _2100) / (_2100 * 0.3183098733425140380859375)) + _2048;
        uint _2051 = _2050 + 1u;
        if (_2051 == 32u)
        {
            break;
        }
        else
        {
            _2048 = _2049;
            _2050 = _2051;
            continue;
        }
    }
    float _2108 = _2049 * 0.009947183541953563690185546875;
    float _2113 = dot(vec3(_1715, _1716, _1717), vec3(_1818, _1819, _1820)) * 2.0;
    vec4 _2127 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1715 - (_2113 * _1818), _1716 - (_2113 * _1819), _1717 - (_2113 * _1820)), 4.0 - (_1698 * 4.0));
    float _2132 = dot(vec3(_1835, _1837, _1838), vec3(_1818, _1819, _1820));
    float _2524 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
    float _2142 = exp2(log2(1.0 - (isnan(1.0) ? _2524 : (isnan(_2524) ? 1.0 : min(_2524, 1.0)))) * 5.0);
    vec4 _2154 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1818, _1819, _1820), 0.0);
    float _2165 = (_2018 + _2015) + (((_2154.x * _1877) + (((_2142 * (0.959999978542327880859375 - _1884)) + _1887) * _2127.x)) * _2108);
    float _2169 = (_2019 + _2016) + (((_2154.y * _1878) + (((_2142 * (0.959999978542327880859375 - _1885)) + _1889) * _2127.y)) * _2108);
    float _2173 = (_2020 + _2017) + (((_2154.z * _1879) + (((_2142 * (0.959999978542327880859375 - _1886)) + _1890) * _2127.z)) * _2108);
    float _2535 = isnan(0.0) ? _2165 : (isnan(_2165) ? 0.0 : max(_2165, 0.0));
    float _2546 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
    float _2557 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
    bool _2181 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2192;
    _2192.x = _2181 ? ((_606 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2535 : (isnan(_2535) ? 1.0 : min(_2535, 1.0)));
    _2192.y = _2181 ? ((_609 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2546 : (isnan(_2546) ? 1.0 : min(_2546, 1.0)));
    _2192.z = _2181 ? ((_612 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2557 : (isnan(_2557) ? 1.0 : min(_2557, 1.0)));
    payload._m0 = _2192;
}


