#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_c4260_blade_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D S_c4260_blade_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D S_c4260_blade_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1130;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _164 >> 16u;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _167;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder_2;
        _172 = frontier_phi_3_2_ladder;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _184 = (_177 * _169) + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 20u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 24u;
    }
    bool _217 = _178 == 0u;
    uint _218;
    if (_217)
    {
        _218 = _211;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 8u;
        }
        _218 = frontier_phi_9_10_ladder;
    }
    uvec4 _229 = texelFetch(l_geomAttrib_0, int((((_177 * _169) + 4u) + (_179 ? (_218 + 4u) : _218)) >> 2u));
    uint _230 = _229.x;
    float _234 = float(int(uint(int(_230 << 16u) >> int(16u))));
    float _235 = float(int(uint(int(_230) >> int(16u))));
    uint _237 = (_177 * _171) + 12u;
    uint _258;
    uint _259;
    uint _260;
    uint _261;
    if (_182)
    {
        uvec4 _239 = texelFetch(l_geomAttrib_0, int(_237 >> 2u));
        uint _240 = _239.x;
        _258 = _240 & 255u;
        _259 = (_240 >> 8u) & 255u;
        _260 = (_240 >> 16u) & 255u;
        _261 = 20u;
    }
    else
    {
        uint _246 = _237 >> 2u;
        uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
        uint _253 = _252.x;
        _258 = _253 & 65535u;
        _259 = _253 >> 16u;
        _260 = _252.y & 65535u;
        _261 = 24u;
    }
    uint _265;
    if (_217)
    {
        _265 = _261;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _261 + 8u;
        }
        _265 = frontier_phi_16_17_ladder;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((((_177 * _171) + 4u) + (_179 ? (_265 + 4u) : _265)) >> 2u));
    uint _275 = _274.x;
    float _279 = float(int(uint(int(_275 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_275) >> int(16u))));
    uint _282 = (_177 * _172) + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_182)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 20u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 24u;
    }
    uint _310;
    if (_217)
    {
        _310 = _306;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _306 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _306 + 8u;
        }
        _310 = frontier_phi_23_24_ladder;
    }
    uvec4 _319 = texelFetch(l_geomAttrib_0, int((((_177 * _172) + 4u) + (_179 ? (_310 + 4u) : _310)) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    bool _327 = _128.z == 0u;
    float _363;
    float _364;
    float _365;
    if (_327)
    {
        uint _330 = _169 * 3u;
        uvec3 _339 = uvec3(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_330 + 2u)).x);
        _363 = uintBitsToFloat(_339.x);
        _364 = uintBitsToFloat(_339.y);
        _365 = uintBitsToFloat(_339.z);
    }
    else
    {
        uint _347 = _169 * 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomPositionBuffer, int(_347)).x, texelFetch(l_geomPositionBuffer, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _363 = unpackHalf2x16(_354).x;
        _364 = unpackHalf2x16(_354 >> 16u).x;
        _365 = unpackHalf2x16(_353.y).x;
    }
    float _401;
    float _402;
    float _403;
    if (_327)
    {
        uint _368 = _171 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _171 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_327)
    {
        uint _406 = _172 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _172 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _444 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = (_279 - _234) * 0.00048828125;
    float _468 = (_280 - _235) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _511 = fma(_508, gl_ObjectToWorldEXT[2u].x, fma(_507, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _506));
    float _514 = fma(_508, gl_ObjectToWorldEXT[2u].y, fma(_507, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _506));
    float _517 = fma(_508, gl_ObjectToWorldEXT[2u].z, fma(_507, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _506));
    float _518 = (((_279 * hit._m0.x) + (_234 * _444)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _519 = (((_280 * hit._m0.x) + (_235 * _444)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _523 = (((float(_208) * _444) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _526 = (((float(_209) * _444) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = (((float(_210) * _444) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = _523 * 0.0078740157186985015869140625;
    float _532 = _526 * 0.0078740157186985015869140625;
    float _533 = _529 * 0.0078740157186985015869140625;
    float _549 = cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x;
    float _552 = (_549 * cbMtdParam._m0[15u].y) + _518;
    float _553 = (_549 * cbMtdParam._m0[15u].z) + _519;
    float _577 = (cbTextureTilingScale._m0[2u].x * ((cbMtdParam._m0[15u].w * cbPerFrame._m0[22u].x) + _518)) + cbTextureTilingScale._m0[2u].z;
    float _578 = (cbTextureTilingScale._m0[2u].y * ((cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) + _519)) + cbTextureTilingScale._m0[2u].w;
    uvec2 _580 = uvec2(textureSize(S_c4260_blade_snp_0_Texture2D_4, int(0u)));
    bool _585 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _638;
    if (_585)
    {
        float _596 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _602 = (_517 * _502) - (_514 * _505);
        float _605 = (_511 * _505) - (_517 * _499);
        float _608 = (_514 * _499) - (_511 * _502);
        float _635 = ((log2((((float(_580.y) * 0.5) * float(_580.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_605 * _605) + (_608 * _608)) + (_602 * _602)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_596 * gl_WorldRayDirectionEXT.x, _596 * gl_WorldRayDirectionEXT.y, _596 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _638 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    }
    else
    {
        _638 = 0.0;
    }
    vec4 _642 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_4, SS_WrapLinear), vec2(_577, _578), _638);
    float _647 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].y;
    float _653 = ((_642.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _655 = (-0.0) - (cbMtdParam._m0[12u].w * ((_642.x * 0.5) + (-0.25)));
    float _657 = fract(_647);
    float _659 = fract(_647 + 0.5);
    float _671 = abs((_657 * 2.0) + (-1.0));
    vec4 _689 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_657 * _655) + _552) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_653 * _657) + _553) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _691 = _689.x;
    float _692 = _689.y;
    float _693 = _689.z;
    vec4 _694 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_659 * _655) + _552) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_653 * _659) + _553) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _721 = (cbMtdParam._m0[14u].w * _549) + _518;
    float _722 = (cbMtdParam._m0[15u].x * _549) + _519;
    float _726 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _727 = _726 * gl_WorldRayDirectionEXT.x;
    float _728 = _726 * gl_WorldRayDirectionEXT.y;
    float _729 = _726 * gl_WorldRayDirectionEXT.z;
    float _773;
    if (_585)
    {
        float _739 = (_517 * _502) - (_514 * _505);
        float _742 = (_511 * _505) - (_517 * _499);
        float _745 = (_514 * _499) - (_511 * _502);
        float _771 = ((log2((((float(_580.y) * 0.5) * float(_580.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_742 * _742) + (_745 * _745)) + (_739 * _739)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_727, _728, _729), vec3(_530, _532, _533))));
        _773 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    }
    else
    {
        _773 = 0.0;
    }
    vec4 _775 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_4, SS_WrapLinear), vec2(_577, _578), _773);
    float _783 = ((_775.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _785 = (-0.0) - (cbMtdParam._m0[12u].w * ((_775.x * 0.5) + (-0.25)));
    vec4 _810 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_657 * _785) + _721) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_783 * _657) + _722) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _812 = _810.x;
    float _813 = _810.y;
    float _814 = _810.z;
    vec4 _815 = textureLod(sampler2D(S_c4260_blade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_659 * _785) + _721) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_783 * _659) + _722) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _842 = inversesqrt(dot(vec3(_530, _532, _533), vec3(_530, _532, _533)));
    float _843 = _842 * _530;
    float _844 = _842 * _532;
    float _845 = _842 * _533;
    float _857 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _858 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _859 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _860 = (-0.0) - _727;
    float _861 = (-0.0) - _728;
    float _862 = (-0.0) - _729;
    float _868 = float(gl_LaunchIDEXT.x);
    float _869 = float(gl_LaunchIDEXT.y);
    float _872 = float(gl_LaunchSizeEXT.x);
    float _886 = fract(fract(sin(dot(vec2(_868 / _872, _869 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _899 = fract(fract(sin(dot(vec2((_868 + 128.0) / _872, (_869 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _909 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _910 = _909.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _910, _909.w, _910, vec3(_857, _858, _859), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _976;
    float _977;
    float _978;
    if (_66._m0 == 0u)
    {
        float _931 = g_sceneCB._m0[4u].x - _727;
        float _932 = g_sceneCB._m0[4u].y - _728;
        float _933 = g_sceneCB._m0[4u].z - _729;
        float _937 = inversesqrt(dot(vec3(_931, _932, _933), vec3(_931, _932, _933)));
        float _941 = dot(vec3(_843, _844, _845), vec3(g_sceneCB._m0[4u].xyz));
        float _1216 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
        float _944 = isnan(1.0) ? _1216 : (isnan(_1216) ? 1.0 : min(_1216, 1.0));
        float _945 = dot(vec3(_843, _844, _845), vec3(_860, _861, _862));
        float _1227 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
        float _949 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_931 * _937, _932 * _937, _933 * _937));
        float _1238 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _960 = (exp2(log2(1.0 - (isnan(1.0) ? _1238 : (isnan(_1238) ? 1.0 : min(_1238, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _966 = (0.5 / ((_944 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1227 : (isnan(_1227) ? 1.0 : min(_1227, 1.0))))) * _944;
        float _1249 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
        float _968 = (isnan(1.0) ? _1249 : (isnan(_1249) ? 1.0 : min(_1249, 1.0))) * 0.31831014156341552734375;
        _976 = (_960 * g_sceneCB._m0[5u].x) * _968;
        _977 = (_960 * g_sceneCB._m0[5u].y) * _968;
        _978 = (_960 * g_sceneCB._m0[5u].z) * _968;
    }
    else
    {
        _976 = 0.0;
        _977 = 0.0;
        _978 = 0.0;
    }
    bool _980 = abs(_844) < 0.89999997615814208984375;
    float _982 = float(_980);
    float _983 = _980 ? 0.0 : 1.0;
    float _986 = (_982 * _845) - (_983 * _844);
    float _987 = _983 * _843;
    float _989 = (-0.0) - (_843 * _982);
    float _993 = inversesqrt(dot(vec3(_986, _987, _989), vec3(_986, _987, _989)));
    float _994 = _986 * _993;
    float _995 = _987 * _993;
    float _996 = _993 * _989;
    float _999 = (_995 * _845) - (_996 * _844);
    float _1002 = (_996 * _843) - (_994 * _845);
    float _1005 = (_994 * _844) - (_995 * _843);
    float _1007;
    float _1015;
    float _1006 = 0.0;
    uint _1008 = 0u;
    float _1012;
    bool _1014;
    for (;;)
    {
        _1012 = (float(_1008) + _886) * 0.03125;
        _1014 = _1008 == 0u;
        float frontier_phi_43_pred;
        if (_1014)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1135;
            float _1136;
            uint _1138;
            _1135 = 0.0;
            _1136 = 0.5;
            _1138 = _1008;
            float _1016;
            for (;;)
            {
                _1016 = ((_1138 & 1u) != 0u) ? (_1136 + _1135) : _1135;
                uint _1139 = _1138 >> 1u;
                if (_1139 == 0u)
                {
                    break;
                }
                else
                {
                    _1135 = _1016;
                    _1136 *= 0.5;
                    _1138 = _1139;
                }
            }
            frontier_phi_43_pred = _1016;
        }
        _1015 = frontier_phi_43_pred;
        float _1017 = _1015 + _899;
        float _1021 = sqrt(_1012);
        float _1022 = ((_1017 > 1.0) ? (_1017 + (-1.0)) : _1017) * 6.283185482025146484375;
        float _1025 = cos(_1022) * _1021;
        float _1027 = sin(_1022) * _1021;
        float _1029 = sqrt(1.0 - _1012);
        float _1042 = ((_1029 * _843) + (_1025 * _999)) + (_1027 * _994);
        float _1043 = ((_1029 * _844) + (_1025 * _1002)) + (_1027 * _995);
        float _1044 = ((_1029 * _845) + (_1025 * _1005)) + (_1027 * _996);
        _65._m0 = 1u;
        uvec4 _1048 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1049 = _1048.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1049, _1048.w, _1049, vec3(_857, _858, _859), 9.9999997473787516355514526367188e-05, vec3(_1042, _1043, _1044), 10000.0, 1);
        float _1055 = dot(vec3(_843, _844, _845), vec3(_1042, _1043, _1044));
        float _1260 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
        float _1058 = isnan(1.0) ? _1260 : (isnan(_1260) ? 1.0 : min(_1260, 1.0));
        _1007 = ((float(_65._m0 == 0u) * _1058) / (_1058 * 0.3183098733425140380859375)) + _1006;
        uint _1009 = _1008 + 1u;
        if (_1009 == 32u)
        {
            break;
        }
        else
        {
            _1006 = _1007;
            _1008 = _1009;
            continue;
        }
    }
    float _1067 = _1007 * 0.009947183541953563690185546875;
    float _1072 = dot(vec3(_727, _728, _729), vec3(_843, _844, _845)) * 2.0;
    vec4 _1084 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_727 - (_1072 * _843), _728 - (_1072 * _844), _729 - (_1072 * _845)), 4.0);
    float _1089 = dot(vec3(_860, _861, _862), vec3(_843, _844, _845));
    float _1271 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _1098 = (exp2(log2(1.0 - (isnan(1.0) ? _1271 : (isnan(_1271) ? 1.0 : min(_1271, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1106 = (_976 + ((((((_815.x - _812) * _671) + _812) * cbMtdParam._m0[10u].x) + ((((_694.x - _691) * _671) + _691) * cbMtdParam._m0[11u].x)) * cbMtdParam._m0[14u].y)) + ((_1084.x * _1067) * _1098);
    float _1108 = (_977 + ((((((_815.y - _813) * _671) + _813) * cbMtdParam._m0[10u].y) + ((((_694.y - _692) * _671) + _692) * cbMtdParam._m0[11u].y)) * cbMtdParam._m0[14u].y)) + ((_1084.y * _1067) * _1098);
    float _1110 = (_978 + ((((((_815.z - _814) * _671) + _814) * cbMtdParam._m0[10u].z) + ((((_694.z - _693) * _671) + _693) * cbMtdParam._m0[11u].z)) * cbMtdParam._m0[14u].y)) + ((_1084.z * _1067) * _1098);
    float _1282 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1293 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    float _1304 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    bool _1118 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1129;
    _1129.x = _1118 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1282 : (isnan(_1282) ? 1.0 : min(_1282, 1.0)));
    _1129.y = _1118 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1293 : (isnan(_1293) ? 1.0 : min(_1293, 1.0)));
    _1129.z = _1118 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1304 : (isnan(_1304) ? 1.0 : min(_1304, 1.0)));
    payload._m0 = _1129;
}


