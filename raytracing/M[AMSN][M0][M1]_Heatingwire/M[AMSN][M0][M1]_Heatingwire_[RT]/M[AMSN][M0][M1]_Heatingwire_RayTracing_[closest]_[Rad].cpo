#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1505;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uint _242 = _182 ? (_238 + 4u) : _238;
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_186 + 4u) + _242) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uint _259 = _180 * _174;
    uint _260 = _259 + 12u;
    uint _281;
    uint _282;
    uint _283;
    uint _284;
    if (_185)
    {
        uvec4 _262 = texelFetch(l_geomAttrib_0, int(_260 >> 2u));
        uint _263 = _262.x;
        _281 = _263 & 255u;
        _282 = (_263 >> 8u) & 255u;
        _283 = (_263 >> 16u) & 255u;
        _284 = 16u;
    }
    else
    {
        uint _269 = _260 >> 2u;
        uvec2 _275 = uvec2(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x);
        uint _276 = _275.x;
        _281 = _276 & 65535u;
        _282 = _276 >> 16u;
        _283 = _275.y & 65535u;
        _284 = 20u;
    }
    uvec4 _290 = texelFetch(l_geomAttrib_0, int((_284 + _259) >> 2u));
    uint _291 = _290.x;
    uint _303;
    if (_237)
    {
        _303 = _284 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _284 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _284 + 12u;
        }
        _303 = frontier_phi_16_17_ladder;
    }
    uint _307 = _182 ? (_303 + 4u) : _303;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_259 + 4u) + _307) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uint _324 = _180 * _175;
    uint _325 = _324 + 12u;
    uint _346;
    uint _347;
    uint _348;
    uint _349;
    if (_185)
    {
        uvec4 _327 = texelFetch(l_geomAttrib_0, int(_325 >> 2u));
        uint _328 = _327.x;
        _346 = _328 & 255u;
        _347 = (_328 >> 8u) & 255u;
        _348 = (_328 >> 16u) & 255u;
        _349 = 16u;
    }
    else
    {
        uint _334 = _325 >> 2u;
        uvec2 _340 = uvec2(texelFetch(l_geomAttrib_0, int(_334)).x, texelFetch(l_geomAttrib_0, int(_334 + 1u)).x);
        uint _341 = _340.x;
        _346 = _341 & 65535u;
        _347 = _341 >> 16u;
        _348 = _340.y & 65535u;
        _349 = 20u;
    }
    uvec4 _355 = texelFetch(l_geomAttrib_0, int((_349 + _324) >> 2u));
    uint _356 = _355.x;
    uint _368;
    if (_237)
    {
        _368 = _349 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _349 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _349 + 12u;
        }
        _368 = frontier_phi_23_24_ladder;
    }
    uint _372 = _182 ? (_368 + 4u) : _368;
    uvec4 _382 = texelFetch(l_geomAttrib_0, int(((_324 + 4u) + _372) >> 2u));
    uint _383 = _382.x;
    float _387 = float(int(uint(int(_383 << 16u) >> int(16u))));
    float _388 = float(int(uint(int(_383) >> int(16u))));
    bool _390 = _131.z == 0u;
    float _426;
    float _427;
    float _428;
    if (_390)
    {
        uint _393 = _172 * 3u;
        uvec3 _402 = uvec3(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_393 + 2u)).x);
        _426 = uintBitsToFloat(_402.x);
        _427 = uintBitsToFloat(_402.y);
        _428 = uintBitsToFloat(_402.z);
    }
    else
    {
        uint _410 = _172 * 2u;
        uvec2 _416 = uvec2(texelFetch(l_geomPositionBuffer, int(_410)).x, texelFetch(l_geomPositionBuffer, int(_410 + 1u)).x);
        uint _417 = _416.x;
        _426 = unpackHalf2x16(_417).x;
        _427 = unpackHalf2x16(_417 >> 16u).x;
        _428 = unpackHalf2x16(_416.y).x;
    }
    float _464;
    float _465;
    float _466;
    if (_390)
    {
        uint _431 = _174 * 3u;
        uvec3 _440 = uvec3(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_431 + 2u)).x);
        _464 = uintBitsToFloat(_440.x);
        _465 = uintBitsToFloat(_440.y);
        _466 = uintBitsToFloat(_440.z);
    }
    else
    {
        uint _448 = _174 * 2u;
        uvec2 _454 = uvec2(texelFetch(l_geomPositionBuffer, int(_448)).x, texelFetch(l_geomPositionBuffer, int(_448 + 1u)).x);
        uint _455 = _454.x;
        _464 = unpackHalf2x16(_455).x;
        _465 = unpackHalf2x16(_455 >> 16u).x;
        _466 = unpackHalf2x16(_454.y).x;
    }
    float _502;
    float _503;
    float _504;
    if (_390)
    {
        uint _469 = _175 * 3u;
        uvec3 _478 = uvec3(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_469 + 2u)).x);
        _502 = uintBitsToFloat(_478.x);
        _503 = uintBitsToFloat(_478.y);
        _504 = uintBitsToFloat(_478.z);
    }
    else
    {
        uint _486 = _175 * 2u;
        uvec2 _492 = uvec2(texelFetch(l_geomPositionBuffer, int(_486)).x, texelFetch(l_geomPositionBuffer, int(_486 + 1u)).x);
        uint _493 = _492.x;
        _502 = unpackHalf2x16(_493).x;
        _503 = unpackHalf2x16(_493 >> 16u).x;
        _504 = unpackHalf2x16(_492.y).x;
    }
    float _507 = (1.0 - hit._m0.x) - hit._m0.y;
    float _534 = (((float(texelFetch(l_geomAttrib_0, int((_307 + _259) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_242 + _186) >> 2u)).x >> 24u) * _507)) + (float(texelFetch(l_geomAttrib_0, int((_372 + _324) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _548 = (_322 - _257) * 0.00048828125;
    float _550 = (_323 - _258) * 0.00048828125;
    float _553 = (_387 - _257) * 0.00048828125;
    float _554 = (_388 - _258) * 0.00048828125;
    float _576 = _464 - _426;
    float _577 = _465 - _427;
    float _578 = _466 - _428;
    float _581 = fma(_578, gl_ObjectToWorldEXT[2u].x, fma(_577, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _576));
    float _584 = fma(_578, gl_ObjectToWorldEXT[2u].y, fma(_577, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _576));
    float _587 = fma(_578, gl_ObjectToWorldEXT[2u].z, fma(_577, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _576));
    float _588 = _502 - _426;
    float _589 = _503 - _427;
    float _590 = _504 - _428;
    float _593 = fma(_590, gl_ObjectToWorldEXT[2u].x, fma(_589, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _588));
    float _596 = fma(_590, gl_ObjectToWorldEXT[2u].y, fma(_589, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _588));
    float _599 = fma(_590, gl_ObjectToWorldEXT[2u].z, fma(_589, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _588));
    float _600 = (((_322 * hit._m0.x) + (_257 * _507)) + (_387 * hit._m0.y)) * 0.00048828125;
    float _601 = (((_323 * hit._m0.x) + (_258 * _507)) + (_388 * hit._m0.y)) * 0.00048828125;
    float _605 = (((float(_211) * _507) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _608 = (((float(_212) * _507) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_347) * hit._m0.y);
    float _611 = (((float(_213) * _507) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_348) * hit._m0.y);
    float _612 = _605 * 0.0078740157186985015869140625;
    float _614 = _608 * 0.0078740157186985015869140625;
    float _615 = _611 * 0.0078740157186985015869140625;
    float _628 = ((((float(_223 & 255u) * _507) + (-127.0)) + (float(_291 & 255u) * hit._m0.x)) + (float(_356 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float((_223 >> 8u) & 255u) * _507) + (-127.0)) + (float((_291 >> 8u) & 255u) * hit._m0.x)) + (float((_356 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float((_223 >> 16u) & 255u) * _507) + (-127.0)) + (float((_291 >> 16u) & 255u) * hit._m0.x)) + (float((_356 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _631 = ((((float(_223 >> 24u) * _507) + (-127.0)) + (float(_291 >> 24u) * hit._m0.x)) + (float(_356 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _641 = ((_629 * _615) - (_630 * _614)) * _631;
    float _642 = ((_630 * _612) - (_628 * _615)) * _631;
    float _643 = ((_628 * _614) - (_629 * _612)) * _631;
    float _647 = inversesqrt(dot(vec3(_641, _642, _643), vec3(_641, _642, _643)));
    float _648 = _647 * _641;
    float _649 = _647 * _642;
    float _650 = _647 * _643;
    float _667 = (cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _600;
    float _668 = (cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + _601;
    uvec2 _680 = uvec2(textureSize(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_0, int(0u)));
    bool _685 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _738;
    if (_685)
    {
        float _696 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _702 = (_599 * _584) - (_596 * _587);
        float _705 = (_593 * _587) - (_599 * _581);
        float _708 = (_596 * _581) - (_593 * _584);
        float _735 = ((log2((((float(_680.y) * 0.5) * float(_680.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_705 * _705) + (_708 * _708)) + (_702 * _702)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_696 * gl_WorldRayDirectionEXT.x, _696 * gl_WorldRayDirectionEXT.y, _696 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _738 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    }
    else
    {
        _738 = 0.0;
    }
    vec4 _742 = textureLod(sampler2D(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_667 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_668 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _738);
    float _747 = _742.x * cbMtdParam._m0[9u].x;
    float _748 = _742.y * cbMtdParam._m0[9u].y;
    float _749 = _742.z * cbMtdParam._m0[9u].z;
    uvec2 _763 = uvec2(textureSize(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_5, int(0u)));
    float _814;
    if (_685)
    {
        float _774 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _780 = (_599 * _584) - (_596 * _587);
        float _783 = (_593 * _587) - (_599 * _581);
        float _786 = (_596 * _581) - (_593 * _584);
        float _812 = ((log2((((float(_763.y) * 0.5) * float(_763.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_783 * _783) + (_786 * _786)) + (_780 * _780)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_774 * gl_WorldRayDirectionEXT.x, _774 * gl_WorldRayDirectionEXT.y, _774 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _814 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    }
    else
    {
        _814 = 0.0;
    }
    vec4 _817 = textureLod(sampler2D(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _667) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _668) + cbTextureTilingScale._m0[5u].w), _814);
    float _821 = _817.z;
    float _824 = (_817.x * 2.0) + (-1.0);
    float _826 = (_817.y * 2.0) + (-1.0);
    float _827 = dot(vec2(_824, _826), vec2(_824, _826));
    float _1597 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _832 = sqrt(1.0 - (isnan(1.0) ? _1597 : (isnan(_1597) ? 1.0 : min(_1597, 1.0))));
    float _844 = fma(0.9591662883758544921875, _612, fma(0.2000000476837158203125, _628, _648 * 0.2000000476837158203125));
    float _848 = fma(0.9591662883758544921875, _614, fma(0.2000000476837158203125, _629, _649 * 0.2000000476837158203125));
    float _851 = fma(0.9591662883758544921875, _615, fma(0.2000000476837158203125, _630, _650 * 0.2000000476837158203125));
    float _855 = inversesqrt(dot(vec3(_844, _848, _851), vec3(_844, _848, _851)));
    float _863 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_855 * _844, _855 * _848, _855 * _851, 0.0)) - cbMtdParam._m0[14u].x;
    float _1608 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _870 = exp2(log2(1.0 - (isnan(1.0) ? _1608 : (isnan(_1608) ? 1.0 : min(_1608, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].y, 0.001000000047497451305389404296875))));
    uvec2 _900 = uvec2(textureSize(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_2, int(0u)));
    float _951;
    if (_685)
    {
        float _911 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _917 = (_599 * _584) - (_596 * _587);
        float _920 = (_593 * _587) - (_599 * _581);
        float _923 = (_596 * _581) - (_593 * _584);
        float _949 = ((log2((((float(_900.y) * 0.5) * float(_900.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_920 * _920) + (_923 * _923)) + (_917 * _917)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_911 * gl_WorldRayDirectionEXT.x, _911 * gl_WorldRayDirectionEXT.y, _911 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _951 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    }
    else
    {
        _951 = 0.0;
    }
    vec4 _953 = textureLod(sampler2D(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + _600) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + _601) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _951);
    uvec2 _985 = uvec2(textureSize(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_1, int(0u)));
    float _1036;
    if (_685)
    {
        float _996 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1002 = (_599 * _584) - (_596 * _587);
        float _1005 = (_593 * _587) - (_599 * _581);
        float _1008 = (_596 * _581) - (_593 * _584);
        float _1034 = ((log2((((float(_985.y) * 0.5) * float(_985.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1005 * _1005) + (_1008 * _1008)) + (_1002 * _1002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_996 * gl_WorldRayDirectionEXT.x, _996 * gl_WorldRayDirectionEXT.y, _996 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1036 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    }
    else
    {
        _1036 = 0.0;
    }
    vec4 _1038 = textureLod(sampler2D(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].w * cbPerFrame._m0[22u].x) + _600) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) + _601) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1036);
    uvec2 _1069 = uvec2(textureSize(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_3, int(0u)));
    float _1073 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1074 = _1073 * gl_WorldRayDirectionEXT.x;
    float _1075 = _1073 * gl_WorldRayDirectionEXT.y;
    float _1076 = _1073 * gl_WorldRayDirectionEXT.z;
    float _1120;
    if (_685)
    {
        float _1086 = (_599 * _584) - (_596 * _587);
        float _1089 = (_593 * _587) - (_599 * _581);
        float _1092 = (_596 * _581) - (_593 * _584);
        float _1118 = ((log2((((float(_1069.y) * 0.5) * float(_1069.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1089 * _1089) + (_1092 * _1092)) + (_1086 * _1086)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1074, _1075, _1076), vec3(_612, _614, _615))));
        _1120 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    }
    else
    {
        _1120 = 0.0;
    }
    vec4 _1122 = textureLod(sampler2D(M_AMSN_M0_M1_Heatingwire_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x) + _600) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) + _601) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1120);
    float _1132 = fma(_832, _612, fma(_826, _628, _824 * _648));
    float _1135 = fma(_832, _614, fma(_826, _629, _824 * _649));
    float _1138 = fma(_832, _615, fma(_826, _630, _824 * _650));
    float _1142 = inversesqrt(dot(vec3(_1132, _1135, _1138), vec3(_1132, _1135, _1138)));
    float _1143 = _1142 * _1132;
    float _1144 = _1142 * _1135;
    float _1145 = _1142 * _1138;
    float _1157 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1158 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1159 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1160 = (-0.0) - _1074;
    float _1162 = (-0.0) - _1075;
    float _1163 = (-0.0) - _1076;
    float _1169 = float(gl_LaunchIDEXT.x);
    float _1170 = float(gl_LaunchIDEXT.y);
    float _1173 = float(gl_LaunchSizeEXT.x);
    float _1187 = fract(fract(sin(dot(vec2(_1169 / _1173, _1170 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1200 = fract(fract(sin(dot(vec2((_1169 + 128.0) / _1173, (_1170 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1210 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1211 = _1210.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1211, _1210.w, _1211, vec3(_1157, _1158, _1159), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    if (_69._m0 == 0u)
    {
        float _1231 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1143, _1144, _1145));
        float _1639 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1234 = isnan(1.0) ? _1639 : (isnan(_1639) ? 1.0 : min(_1639, 1.0));
        float _1253 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _821) * 0.949999988079071044921875);
        float _1254 = _1253 * _1253;
        float _1255 = g_sceneCB._m0[4u].x - _1074;
        float _1256 = g_sceneCB._m0[4u].y - _1075;
        float _1257 = g_sceneCB._m0[4u].z - _1076;
        float _1261 = inversesqrt(dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257)));
        float _1262 = _1261 * _1255;
        float _1263 = _1261 * _1256;
        float _1264 = _1261 * _1257;
        float _1265 = dot(vec3(_1143, _1144, _1145), vec3(g_sceneCB._m0[4u].xyz));
        float _1650 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1268 = isnan(1.0) ? _1650 : (isnan(_1650) ? 1.0 : min(_1650, 1.0));
        float _1269 = dot(vec3(_1143, _1144, _1145), vec3(_1160, _1162, _1163));
        float _1661 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1272 = isnan(1.0) ? _1661 : (isnan(_1661) ? 1.0 : min(_1661, 1.0));
        float _1273 = dot(vec3(_1143, _1144, _1145), vec3(_1262, _1263, _1264));
        float _1672 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1276 = isnan(1.0) ? _1672 : (isnan(_1672) ? 1.0 : min(_1672, 1.0));
        float _1277 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1262, _1263, _1264));
        float _1683 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1281 = _1254 * _1254;
        float _1285 = ((_1276 * _1276) * (_1281 + (-1.0))) + 1.0;
        float _1297 = (exp2(log2(1.0 - (isnan(1.0) ? _1683 : (isnan(_1683) ? 1.0 : min(_1683, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1299 = 1.0 - _1254;
        float _1310 = (0.5 / (((_1272 * ((_1268 * _1299) + _1254)) + 9.9999999392252902907785028219223e-09) + (((_1272 * _1299) + _1254) * _1268))) * _1268;
        float _1694 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1312 = (isnan(1.0) ? _1694 : (isnan(_1694) ? 1.0 : min(_1694, 1.0))) * (_1281 / ((_1285 * _1285) * 3.141590118408203125));
        _1319 = ((_747 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1234;
        _1320 = ((_748 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1234;
        _1321 = ((_749 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1234;
        _1322 = (_1297 * g_sceneCB._m0[5u].x) * _1312;
        _1323 = (_1297 * g_sceneCB._m0[5u].y) * _1312;
        _1324 = (_1297 * g_sceneCB._m0[5u].z) * _1312;
    }
    else
    {
        _1319 = 0.0;
        _1320 = 0.0;
        _1321 = 0.0;
        _1322 = 0.0;
        _1323 = 0.0;
        _1324 = 0.0;
    }
    bool _1326 = abs(_1144) < 0.89999997615814208984375;
    float _1328 = float(_1326);
    float _1329 = _1326 ? 0.0 : 1.0;
    float _1332 = (_1328 * _1145) - (_1329 * _1144);
    float _1333 = _1329 * _1143;
    float _1335 = (-0.0) - (_1143 * _1328);
    float _1339 = inversesqrt(dot(vec3(_1332, _1333, _1335), vec3(_1332, _1333, _1335)));
    float _1340 = _1332 * _1339;
    float _1341 = _1333 * _1339;
    float _1342 = _1339 * _1335;
    float _1345 = (_1341 * _1145) - (_1342 * _1144);
    float _1348 = (_1342 * _1143) - (_1340 * _1145);
    float _1351 = (_1340 * _1144) - (_1341 * _1143);
    float _1353;
    float _1361;
    float _1352 = 0.0;
    uint _1354 = 0u;
    float _1358;
    bool _1360;
    for (;;)
    {
        _1358 = (float(_1354) + _1187) * 0.03125;
        _1360 = _1354 == 0u;
        float frontier_phi_49_pred;
        if (_1360)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1510;
            float _1511;
            uint _1513;
            _1510 = 0.0;
            _1511 = 0.5;
            _1513 = _1354;
            float _1362;
            for (;;)
            {
                _1362 = ((_1513 & 1u) != 0u) ? (_1511 + _1510) : _1510;
                uint _1514 = _1513 >> 1u;
                if (_1514 == 0u)
                {
                    break;
                }
                else
                {
                    _1510 = _1362;
                    _1511 *= 0.5;
                    _1513 = _1514;
                }
            }
            frontier_phi_49_pred = _1362;
        }
        _1361 = frontier_phi_49_pred;
        float _1363 = _1361 + _1200;
        float _1367 = sqrt(_1358);
        float _1368 = ((_1363 > 1.0) ? (_1363 + (-1.0)) : _1363) * 6.283185482025146484375;
        float _1371 = cos(_1368) * _1367;
        float _1373 = sin(_1368) * _1367;
        float _1375 = sqrt(1.0 - _1358);
        float _1388 = ((_1375 * _1143) + (_1371 * _1345)) + (_1373 * _1340);
        float _1389 = ((_1375 * _1144) + (_1371 * _1348)) + (_1373 * _1341);
        float _1390 = ((_1375 * _1145) + (_1371 * _1351)) + (_1373 * _1342);
        _68._m0 = 1u;
        uvec4 _1394 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1395 = _1394.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1395, _1394.w, _1395, vec3(_1157, _1158, _1159), 9.9999997473787516355514526367188e-05, vec3(_1388, _1389, _1390), 10000.0, 1);
        float _1401 = dot(vec3(_1143, _1144, _1145), vec3(_1388, _1389, _1390));
        float _1705 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1404 = isnan(1.0) ? _1705 : (isnan(_1705) ? 1.0 : min(_1705, 1.0));
        _1353 = ((float(_68._m0 == 0u) * _1404) / (_1404 * 0.3183098733425140380859375)) + _1352;
        uint _1355 = _1354 + 1u;
        if (_1355 == 32u)
        {
            break;
        }
        else
        {
            _1352 = _1353;
            _1354 = _1355;
            continue;
        }
    }
    float _1412 = _1353 * 0.009947183541953563690185546875;
    float _1417 = dot(vec3(_1074, _1075, _1076), vec3(_1143, _1144, _1145)) * 2.0;
    vec4 _1431 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1074 - (_1417 * _1143), _1075 - (_1417 * _1144), _1076 - (_1417 * _1145)), 4.0 - (_821 * 4.0));
    float _1436 = dot(vec3(_1160, _1162, _1163), vec3(_1143, _1144, _1145));
    float _1716 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    float _1445 = (exp2(log2(1.0 - (isnan(1.0) ? _1716 : (isnan(_1716) ? 1.0 : min(_1716, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1451 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1143, _1144, _1145), 0.0);
    float _1467 = ((_1322 + _1319) + (((_1451.x * _747) + (_1445 * _1431.x)) * _1412)) + (((((_953.x * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[10u].x * _534) * _870)) + (_1038.x * cbMtdParam._m0[12u].x)) + (_1122.x * cbMtdParam._m0[13u].x)) * cbMtdParam._m0[14u].z);
    float _1476 = ((_1323 + _1320) + (((_1451.y * _748) + (_1445 * _1431.y)) * _1412)) + (((((_953.y * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[10u].y * _534) * _870)) + (_1038.y * cbMtdParam._m0[12u].y)) + (_1122.y * cbMtdParam._m0[13u].y)) * cbMtdParam._m0[14u].z);
    float _1485 = ((_1324 + _1321) + (((_1451.z * _749) + (_1445 * _1431.z)) * _1412)) + (((((_953.z * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[10u].z * _534) * _870)) + (_1038.z * cbMtdParam._m0[12u].z)) + (_1122.z * cbMtdParam._m0[13u].z)) * cbMtdParam._m0[14u].z);
    float _1727 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
    float _1738 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
    float _1749 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    bool _1493 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1504;
    _1504.x = _1493 ? ((_605 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1727 : (isnan(_1727) ? 1.0 : min(_1727, 1.0)));
    _1504.y = _1493 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1738 : (isnan(_1738) ? 1.0 : min(_1738, 1.0)));
    _1504.z = _1493 ? ((_611 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1749 : (isnan(_1749) ? 1.0 : min(_1749, 1.0)));
    payload._m0 = _1504;
}


