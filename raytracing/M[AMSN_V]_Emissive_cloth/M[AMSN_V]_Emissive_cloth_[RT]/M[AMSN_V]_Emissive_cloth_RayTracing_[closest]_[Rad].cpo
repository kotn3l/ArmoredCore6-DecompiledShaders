#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Emissive_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Emissive_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1246;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _162;
    uint _164;
    uint _165;
    if (_121.x == 0u)
    {
        uint _130 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _139 = uvec3(texelFetch(l_geomIndexBuffer, int(_130)).x, texelFetch(l_geomIndexBuffer, int(_130 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_130 + 2u)).x);
        _162 = _139.x;
        _164 = _139.y;
        _165 = _139.z;
    }
    else
    {
        uint _143 = uint(gl_PrimitiveID) * 6u;
        uint _145 = _143 & 4294967292u;
        uint _148 = (_122 + _145) >> 2u;
        uvec2 _155 = uvec2(texelFetch(l_geomIndexBuffer, int(_148)).x, texelFetch(l_geomIndexBuffer, int(_148 + 1u)).x);
        uint _156 = _155.x;
        uint _157 = _155.y;
        uint _159 = _156 >> 16u;
        uint _160 = _157 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_145 == _143)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _159;
            frontier_phi_3_2_ladder_2 = _156 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _157 >> 16u;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _159;
        }
        _162 = frontier_phi_3_2_ladder_2;
        _164 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
    }
    uvec4 _169 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _170 = _169.x;
    uint _171 = _169.z;
    bool _172 = _171 != 0u;
    uint _173 = _121.w;
    bool _175 = _172 || (_173 == 0u);
    uint _176 = _170 * _162;
    uint _177 = _176 + 12u;
    uint _201;
    uint _202;
    uint _203;
    uint _204;
    if (_175)
    {
        uvec4 _180 = texelFetch(l_geomAttrib_0, int(_177 >> 2u));
        uint _181 = _180.x;
        _201 = _181 & 255u;
        _202 = (_181 >> 8u) & 255u;
        _203 = (_181 >> 16u) & 255u;
        _204 = 16u;
    }
    else
    {
        uint _189 = _177 >> 2u;
        uvec2 _195 = uvec2(texelFetch(l_geomAttrib_0, int(_189)).x, texelFetch(l_geomAttrib_0, int(_189 + 1u)).x);
        uint _196 = _195.x;
        _201 = _196 & 65535u;
        _202 = _196 >> 16u;
        _203 = _195.y & 65535u;
        _204 = 20u;
    }
    uvec4 _212 = texelFetch(l_geomAttrib_0, int((_204 + _176) >> 2u));
    uint _213 = _212.x;
    uint _225 = _169.y;
    bool _226 = _171 == 0u;
    uint _229 = _226 ? 4u : ((_173 != 0u) ? 12u : 8u);
    uvec4 _238 = texelFetch(l_geomAttrib_1, int((((_225 * _162) + 4u) + (_172 ? (_229 + 4u) : _229)) >> 2u));
    uint _239 = _238.x;
    float _243 = float(int(uint(int(_239 << 16u) >> int(16u))));
    float _244 = float(int(uint(int(_239) >> int(16u))));
    uint _245 = _170 * _164;
    uint _246 = _245 + 12u;
    uint _267;
    uint _268;
    uint _269;
    uint _270;
    if (_175)
    {
        uvec4 _248 = texelFetch(l_geomAttrib_0, int(_246 >> 2u));
        uint _249 = _248.x;
        _267 = _249 & 255u;
        _268 = (_249 >> 8u) & 255u;
        _269 = (_249 >> 16u) & 255u;
        _270 = 16u;
    }
    else
    {
        uint _255 = _246 >> 2u;
        uvec2 _261 = uvec2(texelFetch(l_geomAttrib_0, int(_255)).x, texelFetch(l_geomAttrib_0, int(_255 + 1u)).x);
        uint _262 = _261.x;
        _267 = _262 & 65535u;
        _268 = _262 >> 16u;
        _269 = _261.y & 65535u;
        _270 = 20u;
    }
    uvec4 _276 = texelFetch(l_geomAttrib_0, int((_270 + _245) >> 2u));
    uint _277 = _276.x;
    uint _290 = _226 ? 4u : ((_173 != 0u) ? 12u : 8u);
    uvec4 _297 = texelFetch(l_geomAttrib_1, int((((_225 * _164) + 4u) + (_172 ? (_290 + 4u) : _290)) >> 2u));
    uint _298 = _297.x;
    float _302 = float(int(uint(int(_298 << 16u) >> int(16u))));
    float _303 = float(int(uint(int(_298) >> int(16u))));
    uint _304 = _170 * _165;
    uint _305 = _304 + 12u;
    uint _326;
    uint _327;
    uint _328;
    uint _329;
    if (_175)
    {
        uvec4 _307 = texelFetch(l_geomAttrib_0, int(_305 >> 2u));
        uint _308 = _307.x;
        _326 = _308 & 255u;
        _327 = (_308 >> 8u) & 255u;
        _328 = (_308 >> 16u) & 255u;
        _329 = 16u;
    }
    else
    {
        uint _314 = _305 >> 2u;
        uvec2 _320 = uvec2(texelFetch(l_geomAttrib_0, int(_314)).x, texelFetch(l_geomAttrib_0, int(_314 + 1u)).x);
        uint _321 = _320.x;
        _326 = _321 & 65535u;
        _327 = _321 >> 16u;
        _328 = _320.y & 65535u;
        _329 = 20u;
    }
    uvec4 _335 = texelFetch(l_geomAttrib_0, int((_329 + _304) >> 2u));
    uint _336 = _335.x;
    uint _349 = _226 ? 4u : ((_173 != 0u) ? 12u : 8u);
    uvec4 _356 = texelFetch(l_geomAttrib_1, int((((_225 * _165) + 4u) + (_172 ? (_349 + 4u) : _349)) >> 2u));
    uint _357 = _356.x;
    float _361 = float(int(uint(int(_357 << 16u) >> int(16u))));
    float _362 = float(int(uint(int(_357) >> int(16u))));
    bool _364 = _121.z == 0u;
    float _400;
    float _401;
    float _402;
    if (_364)
    {
        uint _367 = _162 * 3u;
        uvec3 _376 = uvec3(texelFetch(l_geomPositionBuffer, int(_367)).x, texelFetch(l_geomPositionBuffer, int(_367 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_367 + 2u)).x);
        _400 = uintBitsToFloat(_376.x);
        _401 = uintBitsToFloat(_376.y);
        _402 = uintBitsToFloat(_376.z);
    }
    else
    {
        uint _384 = _162 * 2u;
        uvec2 _390 = uvec2(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x);
        uint _391 = _390.x;
        _400 = unpackHalf2x16(_391).x;
        _401 = unpackHalf2x16(_391 >> 16u).x;
        _402 = unpackHalf2x16(_390.y).x;
    }
    float _438;
    float _439;
    float _440;
    if (_364)
    {
        uint _405 = _164 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _164 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _476;
    float _477;
    float _478;
    if (_364)
    {
        uint _443 = _165 * 3u;
        uvec3 _452 = uvec3(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_443 + 2u)).x);
        _476 = uintBitsToFloat(_452.x);
        _477 = uintBitsToFloat(_452.y);
        _478 = uintBitsToFloat(_452.z);
    }
    else
    {
        uint _460 = _165 * 2u;
        uvec2 _466 = uvec2(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x);
        uint _467 = _466.x;
        _476 = unpackHalf2x16(_467).x;
        _477 = unpackHalf2x16(_467 >> 16u).x;
        _478 = unpackHalf2x16(_466.y).x;
    }
    float _481 = (1.0 - hit._m0.x) - hit._m0.y;
    float _515 = (_302 - _243) * 0.00048828125;
    float _517 = (_303 - _244) * 0.00048828125;
    float _520 = (_361 - _243) * 0.00048828125;
    float _521 = (_362 - _244) * 0.00048828125;
    float _543 = _438 - _400;
    float _544 = _439 - _401;
    float _545 = _440 - _402;
    float _548 = fma(_545, gl_ObjectToWorldEXT[2u].x, fma(_544, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _543));
    float _551 = fma(_545, gl_ObjectToWorldEXT[2u].y, fma(_544, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _543));
    float _554 = fma(_545, gl_ObjectToWorldEXT[2u].z, fma(_544, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _543));
    float _555 = _476 - _400;
    float _556 = _477 - _401;
    float _557 = _478 - _402;
    float _560 = fma(_557, gl_ObjectToWorldEXT[2u].x, fma(_556, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _555));
    float _563 = fma(_557, gl_ObjectToWorldEXT[2u].y, fma(_556, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _555));
    float _566 = fma(_557, gl_ObjectToWorldEXT[2u].z, fma(_556, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _555));
    float _567 = (((_302 * hit._m0.x) + (_243 * _481)) + (_361 * hit._m0.y)) * 0.00048828125;
    float _568 = (((_303 * hit._m0.x) + (_244 * _481)) + (_362 * hit._m0.y)) * 0.00048828125;
    float _572 = (((float(_201) * _481) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _575 = (((float(_202) * _481) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _578 = (((float(_203) * _481) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _579 = _572 * 0.0078740157186985015869140625;
    float _581 = _575 * 0.0078740157186985015869140625;
    float _582 = _578 * 0.0078740157186985015869140625;
    float _595 = ((((float(_213 & 255u) * _481) + (-127.0)) + (float(_277 & 255u) * hit._m0.x)) + (float(_336 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float((_213 >> 8u) & 255u) * _481) + (-127.0)) + (float((_277 >> 8u) & 255u) * hit._m0.x)) + (float((_336 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float((_213 >> 16u) & 255u) * _481) + (-127.0)) + (float((_277 >> 16u) & 255u) * hit._m0.x)) + (float((_336 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float(_213 >> 24u) * _481) + (-127.0)) + (float(_277 >> 24u) * hit._m0.x)) + (float(_336 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _608 = ((_596 * _582) - (_597 * _581)) * _598;
    float _609 = ((_597 * _579) - (_595 * _582)) * _598;
    float _610 = ((_595 * _581) - (_596 * _579)) * _598;
    float _614 = inversesqrt(dot(vec3(_608, _609, _610), vec3(_608, _609, _610)));
    uvec2 _629 = uvec2(textureSize(M_AMSN_V_Emissive_snp_0_Texture2D_0, int(0u)));
    bool _634 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _687;
    if (_634)
    {
        float _645 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _651 = (_566 * _551) - (_563 * _554);
        float _654 = (_560 * _554) - (_566 * _548);
        float _657 = (_563 * _548) - (_560 * _551);
        float _684 = ((log2((((float(_629.y) * 0.5) * float(_629.x)) * abs((_521 * _515) - (_520 * _517))) / (sqrt(((_654 * _654) + (_657 * _657)) + (_651 * _651)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_645 * gl_WorldRayDirectionEXT.x, _645 * gl_WorldRayDirectionEXT.y, _645 * gl_WorldRayDirectionEXT.z), vec3(_579, _581, _582))));
        _687 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    }
    else
    {
        _687 = 0.0;
    }
    vec4 _691 = textureLod(sampler2D(M_AMSN_V_Emissive_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _567) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _568) + cbTextureTilingScale._m0[0u].w), _687);
    float _693 = _691.x;
    float _694 = _691.y;
    float _695 = _691.z;
    uvec2 _711 = uvec2(textureSize(M_AMSN_V_Emissive_snp_0_Texture2D_1, int(0u)));
    float _762;
    if (_634)
    {
        float _722 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _728 = (_566 * _551) - (_563 * _554);
        float _731 = (_560 * _554) - (_566 * _548);
        float _734 = (_563 * _548) - (_560 * _551);
        float _760 = ((log2((((float(_711.y) * 0.5) * float(_711.x)) * abs((_521 * _515) - (_520 * _517))) / (sqrt(((_731 * _731) + (_734 * _734)) + (_728 * _728)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_722 * gl_WorldRayDirectionEXT.x, _722 * gl_WorldRayDirectionEXT.y, _722 * gl_WorldRayDirectionEXT.z), vec3(_579, _581, _582))));
        _762 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    }
    else
    {
        _762 = 0.0;
    }
    vec4 _765 = textureLod(sampler2D(M_AMSN_V_Emissive_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _567) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _568) + cbTextureTilingScale._m0[1u].w), _762);
    float _769 = _765.z;
    float _772 = (_765.x * 2.0) + (-1.0);
    float _774 = (_765.y * 2.0) + (-1.0);
    float _775 = dot(vec2(_772, _774), vec2(_772, _774));
    float _1316 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _780 = sqrt(1.0 - (isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0))));
    uvec2 _793 = uvec2(textureSize(M_AMSN_V_Emissive_snp_0_Texture2D_4, int(0u)));
    float _797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _798 = _797 * gl_WorldRayDirectionEXT.x;
    float _799 = _797 * gl_WorldRayDirectionEXT.y;
    float _800 = _797 * gl_WorldRayDirectionEXT.z;
    float _844;
    if (_634)
    {
        float _810 = (_566 * _551) - (_563 * _554);
        float _813 = (_560 * _554) - (_566 * _548);
        float _816 = (_563 * _548) - (_560 * _551);
        float _842 = ((log2((((float(_793.y) * 0.5) * float(_793.x)) * abs((_521 * _515) - (_520 * _517))) / (sqrt(((_813 * _813) + (_816 * _816)) + (_810 * _810)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_798, _799, _800), vec3(_579, _581, _582))));
        _844 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    }
    else
    {
        _844 = 0.0;
    }
    vec4 _846 = textureLod(sampler2D(M_AMSN_V_Emissive_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _567) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _568) + cbTextureTilingScale._m0[2u].w), _844);
    float _856 = fma(_780, _579, fma(_774, _595, (_614 * _608) * _772));
    float _859 = fma(_780, _581, fma(_774, _596, (_614 * _609) * _772));
    float _862 = fma(_780, _582, fma(_774, _597, (_614 * _610) * _772));
    float _866 = inversesqrt(dot(vec3(_856, _859, _862), vec3(_856, _859, _862)));
    float _867 = _866 * _856;
    float _868 = _866 * _859;
    float _869 = _866 * _862;
    float _881 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _882 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _883 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _884 = (-0.0) - _798;
    float _886 = (-0.0) - _799;
    float _887 = (-0.0) - _800;
    float _893 = float(gl_LaunchIDEXT.x);
    float _894 = float(gl_LaunchIDEXT.y);
    float _897 = float(gl_LaunchSizeEXT.x);
    float _911 = fract(fract(sin(dot(vec2(_893 / _897, _894 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _924 = fract(fract(sin(dot(vec2((_893 + 128.0) / _897, (_894 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _925 = 1.0 - cbMtdParam._m0[9u].y;
    float _926 = _925 * _693;
    float _927 = _925 * _694;
    float _928 = _925 * _695;
    float _933 = cbMtdParam._m0[9u].y * (_693 + (-0.039999999105930328369140625));
    float _934 = cbMtdParam._m0[9u].y * (_694 + (-0.039999999105930328369140625));
    float _935 = cbMtdParam._m0[9u].y * (_695 + (-0.039999999105930328369140625));
    float _936 = _933 + 0.039999999105930328369140625;
    float _938 = _934 + 0.039999999105930328369140625;
    float _939 = _935 + 0.039999999105930328369140625;
    _63._m0 = 1u;
    uvec4 _949 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _950 = _949.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _950, _949.w, _950, vec3(_881, _882, _883), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    if (_63._m0 == 0u)
    {
        float _971 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_867, _868, _869));
        float _1332 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _974 = isnan(1.0) ? _1332 : (isnan(_1332) ? 1.0 : min(_1332, 1.0));
        float _993 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _769) * 0.949999988079071044921875);
        float _994 = _993 * _993;
        float _995 = g_sceneCB._m0[4u].x - _798;
        float _996 = g_sceneCB._m0[4u].y - _799;
        float _997 = g_sceneCB._m0[4u].z - _800;
        float _1001 = inversesqrt(dot(vec3(_995, _996, _997), vec3(_995, _996, _997)));
        float _1002 = _1001 * _995;
        float _1003 = _1001 * _996;
        float _1004 = _1001 * _997;
        float _1005 = dot(vec3(_867, _868, _869), vec3(g_sceneCB._m0[4u].xyz));
        float _1343 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1008 = isnan(1.0) ? _1343 : (isnan(_1343) ? 1.0 : min(_1343, 1.0));
        float _1009 = dot(vec3(_867, _868, _869), vec3(_884, _886, _887));
        float _1354 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1012 = isnan(1.0) ? _1354 : (isnan(_1354) ? 1.0 : min(_1354, 1.0));
        float _1013 = dot(vec3(_867, _868, _869), vec3(_1002, _1003, _1004));
        float _1365 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
        float _1016 = isnan(1.0) ? _1365 : (isnan(_1365) ? 1.0 : min(_1365, 1.0));
        float _1017 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1002, _1003, _1004));
        float _1376 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
        float _1021 = _994 * _994;
        float _1025 = ((_1016 * _1016) * (_1021 + (-1.0))) + 1.0;
        float _1034 = exp2(log2(1.0 - (isnan(1.0) ? _1376 : (isnan(_1376) ? 1.0 : min(_1376, 1.0)))) * 5.0);
        float _1045 = 1.0 - _994;
        float _1056 = (0.5 / (((_1012 * ((_1008 * _1045) + _994)) + 9.9999999392252902907785028219223e-09) + (((_1012 * _1045) + _994) * _1008))) * _1008;
        float _1387 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1058 = (isnan(1.0) ? _1387 : (isnan(_1387) ? 1.0 : min(_1387, 1.0))) * (_1021 / ((_1025 * _1025) * 3.141590118408203125));
        _1065 = ((_926 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _974;
        _1066 = ((_927 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _974;
        _1067 = ((_928 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _974;
        _1068 = (((_1034 * (0.959999978542327880859375 - _933)) + _936) * g_sceneCB._m0[5u].x) * _1058;
        _1069 = (((_1034 * (0.959999978542327880859375 - _934)) + _938) * g_sceneCB._m0[5u].y) * _1058;
        _1070 = (((_1034 * (0.959999978542327880859375 - _935)) + _939) * g_sceneCB._m0[5u].z) * _1058;
    }
    else
    {
        _1065 = 0.0;
        _1066 = 0.0;
        _1067 = 0.0;
        _1068 = 0.0;
        _1069 = 0.0;
        _1070 = 0.0;
    }
    bool _1072 = abs(_868) < 0.89999997615814208984375;
    float _1074 = float(_1072);
    float _1075 = _1072 ? 0.0 : 1.0;
    float _1078 = (_1074 * _869) - (_1075 * _868);
    float _1079 = _1075 * _867;
    float _1081 = (-0.0) - (_867 * _1074);
    float _1085 = inversesqrt(dot(vec3(_1078, _1079, _1081), vec3(_1078, _1079, _1081)));
    float _1086 = _1078 * _1085;
    float _1087 = _1079 * _1085;
    float _1088 = _1085 * _1081;
    float _1091 = (_1087 * _869) - (_1088 * _868);
    float _1094 = (_1088 * _867) - (_1086 * _869);
    float _1097 = (_1086 * _868) - (_1087 * _867);
    float _1099;
    float _1107;
    float _1098 = 0.0;
    uint _1100 = 0u;
    float _1104;
    bool _1106;
    for (;;)
    {
        _1104 = (float(_1100) + _911) * 0.03125;
        _1106 = _1100 == 0u;
        float frontier_phi_33_pred;
        if (_1106)
        {
            frontier_phi_33_pred = 0.0;
        }
        else
        {
            float _1251;
            float _1252;
            uint _1254;
            _1251 = 0.0;
            _1252 = 0.5;
            _1254 = _1100;
            float _1108;
            for (;;)
            {
                _1108 = ((_1254 & 1u) != 0u) ? (_1252 + _1251) : _1251;
                uint _1255 = _1254 >> 1u;
                if (_1255 == 0u)
                {
                    break;
                }
                else
                {
                    _1251 = _1108;
                    _1252 *= 0.5;
                    _1254 = _1255;
                }
            }
            frontier_phi_33_pred = _1108;
        }
        _1107 = frontier_phi_33_pred;
        float _1109 = _1107 + _924;
        float _1113 = sqrt(_1104);
        float _1114 = ((_1109 > 1.0) ? (_1109 + (-1.0)) : _1109) * 6.283185482025146484375;
        float _1117 = cos(_1114) * _1113;
        float _1119 = sin(_1114) * _1113;
        float _1121 = sqrt(1.0 - _1104);
        float _1134 = ((_1121 * _867) + (_1117 * _1091)) + (_1119 * _1086);
        float _1135 = ((_1121 * _868) + (_1117 * _1094)) + (_1119 * _1087);
        float _1136 = ((_1121 * _869) + (_1117 * _1097)) + (_1119 * _1088);
        _62._m0 = 1u;
        uvec4 _1140 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1141 = _1140.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1141, _1140.w, _1141, vec3(_881, _882, _883), 9.9999997473787516355514526367188e-05, vec3(_1134, _1135, _1136), 10000.0, 1);
        float _1147 = dot(vec3(_867, _868, _869), vec3(_1134, _1135, _1136));
        float _1398 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1150 = isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0));
        _1099 = ((float(_62._m0 == 0u) * _1150) / (_1150 * 0.3183098733425140380859375)) + _1098;
        uint _1101 = _1100 + 1u;
        if (_1101 == 32u)
        {
            break;
        }
        else
        {
            _1098 = _1099;
            _1100 = _1101;
            continue;
        }
    }
    float _1158 = _1099 * 0.009947183541953563690185546875;
    float _1163 = dot(vec3(_798, _799, _800), vec3(_867, _868, _869)) * 2.0;
    vec4 _1177 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_798 - (_1163 * _867), _799 - (_1163 * _868), _800 - (_1163 * _869)), 4.0 - (_769 * 4.0));
    float _1182 = dot(vec3(_884, _886, _887), vec3(_867, _868, _869));
    float _1409 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    float _1192 = exp2(log2(1.0 - (isnan(1.0) ? _1409 : (isnan(_1409) ? 1.0 : min(_1409, 1.0)))) * 5.0);
    vec4 _1204 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_867, _868, _869), 0.0);
    float _1216 = ((_1065 + (_846.x * cbMtdParam._m0[9u].x)) + _1068) + (((_1204.x * _926) + (((_1192 * (0.959999978542327880859375 - _933)) + _936) * _1177.x)) * _1158);
    float _1221 = ((_1066 + (_846.y * cbMtdParam._m0[9u].x)) + _1069) + (((_1204.y * _927) + (((_1192 * (0.959999978542327880859375 - _934)) + _938) * _1177.y)) * _1158);
    float _1226 = ((_1067 + (_846.z * cbMtdParam._m0[9u].x)) + _1070) + (((_1204.z * _928) + (((_1192 * (0.959999978542327880859375 - _935)) + _939) * _1177.z)) * _1158);
    float _1420 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1431 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1442 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    bool _1234 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1245;
    _1245.x = _1234 ? ((_572 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1420 : (isnan(_1420) ? 1.0 : min(_1420, 1.0)));
    _1245.y = _1234 ? ((_575 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1431 : (isnan(_1431) ? 1.0 : min(_1431, 1.0)));
    _1245.z = _1234 ? ((_578 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1442 : (isnan(_1442) ? 1.0 : min(_1442, 1.0)));
    payload._m0 = _1245;
}


