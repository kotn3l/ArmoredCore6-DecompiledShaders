#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_oceanB_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_oceanB_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_oceanB_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1691;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _220 = _219.x;
    bool _234 = _178 == 0u;
    uint _235;
    if (_234)
    {
        _235 = _211 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 12u;
        }
        _235 = frontier_phi_9_10_ladder;
    }
    uint _239 = _179 ? (_235 + 4u) : _235;
    uint _242 = ((_183 + 4u) + _239) >> 2u;
    uvec2 _248 = uvec2(texelFetch(l_geomAttrib_0, int(_242)).x, texelFetch(l_geomAttrib_0, int(_242 + 1u)).x);
    uint _249 = _248.x;
    uint _250 = _248.y;
    float _254 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_249) >> int(16u))));
    float _259 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _260 = float(int(uint(int(_250) >> int(16u))));
    uvec4 _264 = texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _239) >> 2u));
    uint _265 = _264.x;
    uint _271 = _177 * _171;
    uint _272 = _271 + 12u;
    uint _293;
    uint _294;
    uint _295;
    uint _296;
    if (_182)
    {
        uvec4 _274 = texelFetch(l_geomAttrib_0, int(_272 >> 2u));
        uint _275 = _274.x;
        _293 = _275 & 255u;
        _294 = (_275 >> 8u) & 255u;
        _295 = (_275 >> 16u) & 255u;
        _296 = 16u;
    }
    else
    {
        uint _281 = _272 >> 2u;
        uvec2 _287 = uvec2(texelFetch(l_geomAttrib_0, int(_281)).x, texelFetch(l_geomAttrib_0, int(_281 + 1u)).x);
        uint _288 = _287.x;
        _293 = _288 & 65535u;
        _294 = _288 >> 16u;
        _295 = _287.y & 65535u;
        _296 = 20u;
    }
    uvec4 _302 = texelFetch(l_geomAttrib_0, int((_296 + _271) >> 2u));
    uint _303 = _302.x;
    uint _315;
    if (_234)
    {
        _315 = _296 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _296 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _296 + 12u;
        }
        _315 = frontier_phi_16_17_ladder;
    }
    uint _319 = _179 ? (_315 + 4u) : _315;
    uint _322 = ((_271 + 4u) + _319) >> 2u;
    uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
    uint _329 = _328.x;
    uint _330 = _328.y;
    float _334 = float(int(uint(int(_329 << 16u) >> int(16u))));
    float _335 = float(int(uint(int(_329) >> int(16u))));
    float _339 = float(int(uint(int(_330 << 16u) >> int(16u))));
    float _340 = float(int(uint(int(_330) >> int(16u))));
    uvec4 _344 = texelFetch(l_geomAttrib_0, int(((_271 + 12u) + _319) >> 2u));
    uint _345 = _344.x;
    uint _351 = _177 * _172;
    uint _352 = _351 + 12u;
    uint _373;
    uint _374;
    uint _375;
    uint _376;
    if (_182)
    {
        uvec4 _354 = texelFetch(l_geomAttrib_0, int(_352 >> 2u));
        uint _355 = _354.x;
        _373 = _355 & 255u;
        _374 = (_355 >> 8u) & 255u;
        _375 = (_355 >> 16u) & 255u;
        _376 = 16u;
    }
    else
    {
        uint _361 = _352 >> 2u;
        uvec2 _367 = uvec2(texelFetch(l_geomAttrib_0, int(_361)).x, texelFetch(l_geomAttrib_0, int(_361 + 1u)).x);
        uint _368 = _367.x;
        _373 = _368 & 65535u;
        _374 = _368 >> 16u;
        _375 = _367.y & 65535u;
        _376 = 20u;
    }
    uvec4 _382 = texelFetch(l_geomAttrib_0, int((_376 + _351) >> 2u));
    uint _383 = _382.x;
    uint _395;
    if (_234)
    {
        _395 = _376 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _376 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _376 + 12u;
        }
        _395 = frontier_phi_23_24_ladder;
    }
    uint _399 = _179 ? (_395 + 4u) : _395;
    uint _402 = ((_351 + 4u) + _399) >> 2u;
    uvec2 _408 = uvec2(texelFetch(l_geomAttrib_0, int(_402)).x, texelFetch(l_geomAttrib_0, int(_402 + 1u)).x);
    uint _409 = _408.x;
    uint _410 = _408.y;
    float _414 = float(int(uint(int(_409 << 16u) >> int(16u))));
    float _415 = float(int(uint(int(_409) >> int(16u))));
    float _419 = float(int(uint(int(_410 << 16u) >> int(16u))));
    float _420 = float(int(uint(int(_410) >> int(16u))));
    uvec4 _424 = texelFetch(l_geomAttrib_0, int(((_351 + 12u) + _399) >> 2u));
    uint _425 = _424.x;
    bool _432 = _128.z == 0u;
    float _468;
    float _469;
    float _470;
    if (_432)
    {
        uint _435 = _169 * 3u;
        uvec3 _444 = uvec3(texelFetch(l_geomPositionBuffer, int(_435)).x, texelFetch(l_geomPositionBuffer, int(_435 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_435 + 2u)).x);
        _468 = uintBitsToFloat(_444.x);
        _469 = uintBitsToFloat(_444.y);
        _470 = uintBitsToFloat(_444.z);
    }
    else
    {
        uint _452 = _169 * 2u;
        uvec2 _458 = uvec2(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x);
        uint _459 = _458.x;
        _468 = unpackHalf2x16(_459).x;
        _469 = unpackHalf2x16(_459 >> 16u).x;
        _470 = unpackHalf2x16(_458.y).x;
    }
    float _506;
    float _507;
    float _508;
    if (_432)
    {
        uint _473 = _171 * 3u;
        uvec3 _482 = uvec3(texelFetch(l_geomPositionBuffer, int(_473)).x, texelFetch(l_geomPositionBuffer, int(_473 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_473 + 2u)).x);
        _506 = uintBitsToFloat(_482.x);
        _507 = uintBitsToFloat(_482.y);
        _508 = uintBitsToFloat(_482.z);
    }
    else
    {
        uint _490 = _171 * 2u;
        uvec2 _496 = uvec2(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x);
        uint _497 = _496.x;
        _506 = unpackHalf2x16(_497).x;
        _507 = unpackHalf2x16(_497 >> 16u).x;
        _508 = unpackHalf2x16(_496.y).x;
    }
    float _544;
    float _545;
    float _546;
    if (_432)
    {
        uint _511 = _172 * 3u;
        uvec3 _520 = uvec3(texelFetch(l_geomPositionBuffer, int(_511)).x, texelFetch(l_geomPositionBuffer, int(_511 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_511 + 2u)).x);
        _544 = uintBitsToFloat(_520.x);
        _545 = uintBitsToFloat(_520.y);
        _546 = uintBitsToFloat(_520.z);
    }
    else
    {
        uint _528 = _172 * 2u;
        uvec2 _534 = uvec2(texelFetch(l_geomPositionBuffer, int(_528)).x, texelFetch(l_geomPositionBuffer, int(_528 + 1u)).x);
        uint _535 = _534.x;
        _544 = unpackHalf2x16(_535).x;
        _545 = unpackHalf2x16(_535 >> 16u).x;
        _546 = unpackHalf2x16(_534.y).x;
    }
    float _549 = (1.0 - hit._m0.x) - hit._m0.y;
    float _603 = (((float((_345 >> 8u) & 255u) * hit._m0.x) + (float((_265 >> 8u) & 255u) * _549)) + (float((_425 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _606 = (_334 - _254) * 0.00048828125;
    float _608 = (_335 - _255) * 0.00048828125;
    float _611 = (_414 - _254) * 0.00048828125;
    float _612 = (_415 - _255) * 0.00048828125;
    float _638 = _506 - _468;
    float _639 = _507 - _469;
    float _640 = _508 - _470;
    float _643 = fma(_640, gl_ObjectToWorldEXT[2u].x, fma(_639, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _638));
    float _646 = fma(_640, gl_ObjectToWorldEXT[2u].y, fma(_639, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _638));
    float _649 = fma(_640, gl_ObjectToWorldEXT[2u].z, fma(_639, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _638));
    float _650 = _544 - _468;
    float _651 = _545 - _469;
    float _652 = _546 - _470;
    float _655 = fma(_652, gl_ObjectToWorldEXT[2u].x, fma(_651, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _650));
    float _658 = fma(_652, gl_ObjectToWorldEXT[2u].y, fma(_651, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _650));
    float _661 = fma(_652, gl_ObjectToWorldEXT[2u].z, fma(_651, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _650));
    float _662 = (((_334 * hit._m0.x) + (_254 * _549)) + (_414 * hit._m0.y)) * 0.00048828125;
    float _663 = (((_335 * hit._m0.x) + (_255 * _549)) + (_415 * hit._m0.y)) * 0.00048828125;
    float _669 = (((float(_208) * _549) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_373) * hit._m0.y);
    float _672 = (((float(_209) * _549) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_374) * hit._m0.y);
    float _675 = (((float(_210) * _549) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_375) * hit._m0.y);
    float _676 = _669 * 0.0078740157186985015869140625;
    float _678 = _672 * 0.0078740157186985015869140625;
    float _679 = _675 * 0.0078740157186985015869140625;
    float _692 = ((((float(_220 & 255u) * _549) + (-127.0)) + (float(_303 & 255u) * hit._m0.x)) + (float(_383 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _693 = ((((float((_220 >> 8u) & 255u) * _549) + (-127.0)) + (float((_303 >> 8u) & 255u) * hit._m0.x)) + (float((_383 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _694 = ((((float((_220 >> 16u) & 255u) * _549) + (-127.0)) + (float((_303 >> 16u) & 255u) * hit._m0.x)) + (float((_383 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _695 = ((((float(_220 >> 24u) * _549) + (-127.0)) + (float(_303 >> 24u) * hit._m0.x)) + (float(_383 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _705 = ((_693 * _679) - (_694 * _678)) * _695;
    float _706 = ((_694 * _676) - (_692 * _679)) * _695;
    float _707 = ((_692 * _678) - (_693 * _676)) * _695;
    float _711 = inversesqrt(dot(vec3(_705, _706, _707), vec3(_705, _706, _707)));
    float _732 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    uvec2 _748 = uvec2(textureSize(M_Cutscene_Water_oceanB_snp_0_Texture2D_2, int(0u)));
    bool _753 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _806;
    if (_753)
    {
        float _764 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _770 = (_661 * _646) - (_658 * _649);
        float _773 = (_655 * _649) - (_661 * _643);
        float _776 = (_658 * _643) - (_655 * _646);
        float _803 = ((log2((((float(_748.y) * 0.5) * float(_748.x)) * abs((_612 * _606) - (_611 * _608))) / (sqrt(((_773 * _773) + (_776 * _776)) + (_770 * _770)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_764 * gl_WorldRayDirectionEXT.x, _764 * gl_WorldRayDirectionEXT.y, _764 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _806 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    }
    else
    {
        _806 = 0.0;
    }
    vec4 _810 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_2, SS_BumpMap), vec2((((_732 * cbMtdParam._m0[19u].w) + _662) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_732 * cbMtdParam._m0[20u].x) + _663) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _806);
    float _812 = _810.x;
    float _813 = _810.y;
    float _823 = cbMtdParam._m0[13u].y - cbMtdParam._m0[13u].x;
    float _825 = ((-0.0) - cbMtdParam._m0[13u].x) / (isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0)));
    float _830 = 1.0 - (isnan(cbMtdParam._m0[16u].z) ? 0.0 : (isnan(0.0) ? cbMtdParam._m0[16u].z : max(0.0, cbMtdParam._m0[16u].z)));
    float _1790 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _831 = isnan(1.0) ? _1790 : (isnan(_1790) ? 1.0 : min(_1790, 1.0));
    float _832 = _810.z - _831;
    float _1801 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _833 = isnan(1.0) ? _1801 : (isnan(_1801) ? 1.0 : min(_1801, 1.0));
    float _845 = (_833 * 0.004999999888241291046142578125) + _662;
    float _847 = (_833 * (-0.004999999888241291046142578125)) + _663;
    uvec2 _860 = uvec2(textureSize(M_Cutscene_Water_oceanB_snp_0_Texture2D_0, int(0u)));
    float _911;
    if (_753)
    {
        float _871 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _877 = (_661 * _646) - (_658 * _649);
        float _880 = (_655 * _649) - (_661 * _643);
        float _883 = (_658 * _643) - (_655 * _646);
        float _909 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_612 * _606) - (_611 * _608))) / (sqrt(((_880 * _880) + (_883 * _883)) + (_877 * _877)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_871 * gl_WorldRayDirectionEXT.x, _871 * gl_WorldRayDirectionEXT.y, _871 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _911 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    }
    else
    {
        _911 = 0.0;
    }
    vec4 _913 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((_845 + (cbMtdParam._m0[18u].y * _732)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_847 + (cbMtdParam._m0[18u].z * _732)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _911);
    float _917 = _913.z;
    float _981;
    if (_753)
    {
        float _941 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _947 = (_661 * _646) - (_658 * _649);
        float _950 = (_655 * _649) - (_661 * _643);
        float _953 = (_658 * _643) - (_655 * _646);
        float _979 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_612 * _606) - (_611 * _608))) / (sqrt(((_950 * _950) + (_953 * _953)) + (_947 * _947)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_941 * gl_WorldRayDirectionEXT.x, _941 * gl_WorldRayDirectionEXT.y, _941 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _981 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    }
    else
    {
        _981 = 0.0;
    }
    vec4 _983 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((_845 + (cbMtdParam._m0[17u].w * _732)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_847 + (cbMtdParam._m0[18u].x * _732)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _981);
    float _987 = _983.z;
    float _990 = (_830 - _810.w) + (isnan(_987) ? _917 : (isnan(_917) ? _987 : max(_917, _987)));
    float _1827 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _994 = (((((float(_345 & 255u) * hit._m0.x) + (float(_265 & 255u) * _549)) + (float(_425 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) - _830) + cbMtdParam._m0[16u].y;
    float _995 = _994 * (isnan(1.0) ? _1827 : (isnan(_1827) ? 1.0 : min(_1827, 1.0)));
    float _1008 = (_995 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _833);
    float _1009 = (_995 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _833);
    float _1010 = (_995 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _833);
    float _1838 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _1012 = 1.0 - (isnan(1.0) ? _1838 : (isnan(_1838) ? 1.0 : min(_1838, 1.0)));
    float _1019 = ((_1012 - _1008) * _831) + _1008;
    float _1020 = ((_1012 - _1009) * _831) + _1009;
    float _1021 = ((_1012 - _1010) * _831) + _1010;
    float _1035 = (cbMtdParam._m0[15u].x + _825) * cbMtdParam._m0[14u].y;
    float _1849 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
    float _1039 = ((isnan(1.0) ? _1849 : (isnan(_1849) ? 1.0 : min(_1849, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _1860 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _1040 = isnan(1.0) ? _1860 : (isnan(_1860) ? 1.0 : min(_1860, 1.0));
    float _1048 = _825 / cbMtdParam._m0[14u].w;
    float _1871 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    float _1049 = isnan(1.0) ? _1871 : (isnan(_1871) ? 1.0 : min(_1871, 1.0));
    uvec2 _1067 = uvec2(textureSize(M_Cutscene_Water_oceanB_snp_0_Texture2D_1, int(0u)));
    float _1120;
    if (_753)
    {
        float _1078 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1084 = (_661 * _646) - (_658 * _649);
        float _1087 = (_655 * _649) - (_661 * _643);
        float _1090 = (_658 * _643) - (_655 * _646);
        float _1118 = ((log2((((float(_1067.y) * 0.5) * float(_1067.x)) * abs((((_420 - _260) * (_339 - _259)) - ((_419 - _259) * (_340 - _260))) * 2.384185791015625e-07)) / (sqrt(((_1087 * _1087) + (_1090 * _1090)) + (_1084 * _1084)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1078 * gl_WorldRayDirectionEXT.x, _1078 * gl_WorldRayDirectionEXT.y, _1078 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1120 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    }
    else
    {
        _1120 = 0.0;
    }
    vec4 _1122 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[20u].y * _732) + ((((_339 * hit._m0.x) + (_259 * _549)) + (_419 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[20u].z * _732) + ((((_340 * hit._m0.x) + (_260 * _549)) + (_420 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1120);
    float _1131 = ((_983.x + (-0.5)) * 0.5) + _913.x;
    float _1132 = ((_983.y + (-0.5)) * 0.5) + _913.y;
    float _1140 = _833 * 0.119999997317790985107421875;
    float _1142 = _833 * (-0.100000001490116119384765625);
    float _1153 = cbMtdParam._m0[21u].y * _662;
    float _1154 = cbMtdParam._m0[21u].z * _663;
    float _1213;
    if (_753)
    {
        float _1173 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1179 = (_661 * _646) - (_658 * _649);
        float _1182 = (_655 * _649) - (_661 * _643);
        float _1185 = (_658 * _643) - (_655 * _646);
        float _1211 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_612 * _606) - (_611 * _608))) / (sqrt(((_1182 * _1182) + (_1185 * _1185)) + (_1179 * _1179)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1173 * gl_WorldRayDirectionEXT.x, _1173 * gl_WorldRayDirectionEXT.y, _1173 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1213 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
    }
    else
    {
        _1213 = 0.0;
    }
    vec4 _1215 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[20u].w * _732) + _1140) + _1153) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[21u].x * _732) + _1142) + _1154) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1213);
    float _1236 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1237 = _1236 * gl_WorldRayDirectionEXT.x;
    float _1238 = _1236 * gl_WorldRayDirectionEXT.y;
    float _1239 = _1236 * gl_WorldRayDirectionEXT.z;
    float _1283;
    if (_753)
    {
        float _1249 = (_661 * _646) - (_658 * _649);
        float _1252 = (_655 * _649) - (_661 * _643);
        float _1255 = (_658 * _643) - (_655 * _646);
        float _1281 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_612 * _606) - (_611 * _608))) / (sqrt(((_1252 * _1252) + (_1255 * _1255)) + (_1249 * _1249)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1237, _1238, _1239), vec3(_676, _678, _679))));
        _1283 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
    }
    else
    {
        _1283 = 0.0;
    }
    vec4 _1285 = textureLod(sampler2D(M_Cutscene_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1153 + _1140) + (cbMtdParam._m0[21u].w * _732)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1154 + _1142) + (cbMtdParam._m0[22u].x * _732)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1283);
    float _1297 = (((0.5 - _1131) * 0.10999999940395355224609375) + _1131) + (((_1215.x + (-1.0)) + _1285.x) * cbMtdParam._m0[16u].x);
    float _1298 = (((0.5 - _1132) * 0.10999999940395355224609375) + _1132) + (((_1215.y + (-1.0)) + _1285.y) * cbMtdParam._m0[16u].x);
    float _1303 = ((_1122.x - _1297) * _1049) + _1297;
    float _1304 = ((_1122.y - _1298) * _1049) + _1298;
    float _1306 = _825 / cbMtdParam._m0[14u].z;
    float _1897 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
    float _1307 = isnan(1.0) ? _1897 : (isnan(_1897) ? 1.0 : min(_1897, 1.0));
    float _1323 = ((((_1040 * (0.5 - _812)) + _812) + (((_1303 + (-0.5)) + ((0.5 - _1303) * _1307)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1324 = ((((_1040 * (0.5 - _813)) + _813) + (((_1304 + (-0.5)) + ((0.5 - _1304) * _1307)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1325 = dot(vec2(_1323, _1324), vec2(_1323, _1324));
    float _1908 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
    float _1330 = sqrt(1.0 - (isnan(1.0) ? _1908 : (isnan(_1908) ? 1.0 : min(_1908, 1.0))));
    float _1333 = fma(_1330, _676, fma(_1324, _692, (_711 * _705) * _1323));
    float _1336 = fma(_1330, _678, fma(_1324, _693, (_711 * _706) * _1323));
    float _1339 = fma(_1330, _679, fma(_1324, _694, (_711 * _707) * _1323));
    float _1343 = inversesqrt(dot(vec3(_1333, _1336, _1339), vec3(_1333, _1336, _1339)));
    float _1344 = _1343 * _1333;
    float _1345 = _1343 * _1336;
    float _1346 = _1343 * _1339;
    float _1358 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1359 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1360 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1361 = (-0.0) - _1237;
    float _1362 = (-0.0) - _1238;
    float _1363 = (-0.0) - _1239;
    float _1369 = float(gl_LaunchIDEXT.x);
    float _1370 = float(gl_LaunchIDEXT.y);
    float _1373 = float(gl_LaunchSizeEXT.x);
    float _1387 = fract(fract(sin(dot(vec2(_1369 / _1373, _1370 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1400 = fract(fract(sin(dot(vec2((_1369 + 128.0) / _1373, (_1370 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _1410 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1411 = _1410.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1411, _1410.w, _1411, vec3(_1358, _1359, _1360), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    if (_66._m0 == 0u)
    {
        float _1432 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1344, _1345, _1346));
        float _1919 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1435 = isnan(1.0) ? _1919 : (isnan(_1919) ? 1.0 : min(_1919, 1.0));
        float _1454 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1039) * 0.949999988079071044921875);
        float _1455 = _1454 * _1454;
        float _1456 = g_sceneCB._m0[4u].x - _1237;
        float _1457 = g_sceneCB._m0[4u].y - _1238;
        float _1458 = g_sceneCB._m0[4u].z - _1239;
        float _1462 = inversesqrt(dot(vec3(_1456, _1457, _1458), vec3(_1456, _1457, _1458)));
        float _1463 = _1462 * _1456;
        float _1464 = _1462 * _1457;
        float _1465 = _1462 * _1458;
        float _1466 = dot(vec3(_1344, _1345, _1346), vec3(g_sceneCB._m0[4u].xyz));
        float _1930 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1469 = isnan(1.0) ? _1930 : (isnan(_1930) ? 1.0 : min(_1930, 1.0));
        float _1470 = dot(vec3(_1344, _1345, _1346), vec3(_1361, _1362, _1363));
        float _1941 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1473 = isnan(1.0) ? _1941 : (isnan(_1941) ? 1.0 : min(_1941, 1.0));
        float _1474 = dot(vec3(_1344, _1345, _1346), vec3(_1463, _1464, _1465));
        float _1952 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1477 = isnan(1.0) ? _1952 : (isnan(_1952) ? 1.0 : min(_1952, 1.0));
        float _1478 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1463, _1464, _1465));
        float _1963 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1482 = _1455 * _1455;
        float _1486 = ((_1477 * _1477) * (_1482 + (-1.0))) + 1.0;
        float _1498 = (exp2(log2(1.0 - (isnan(1.0) ? _1963 : (isnan(_1963) ? 1.0 : min(_1963, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1500 = 1.0 - _1455;
        float _1511 = (0.5 / (((_1473 * ((_1469 * _1500) + _1455)) + 9.9999999392252902907785028219223e-09) + (((_1473 * _1500) + _1455) * _1469))) * _1469;
        float _1974 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1513 = (isnan(1.0) ? _1974 : (isnan(_1974) ? 1.0 : min(_1974, 1.0))) * (_1482 / ((_1486 * _1486) * 3.141590118408203125));
        _1520 = ((_1019 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1435;
        _1521 = ((_1020 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1435;
        _1522 = ((_1021 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1435;
        _1523 = (_1498 * g_sceneCB._m0[5u].x) * _1513;
        _1524 = (_1498 * g_sceneCB._m0[5u].y) * _1513;
        _1525 = (_1498 * g_sceneCB._m0[5u].z) * _1513;
    }
    else
    {
        _1520 = 0.0;
        _1521 = 0.0;
        _1522 = 0.0;
        _1523 = 0.0;
        _1524 = 0.0;
        _1525 = 0.0;
    }
    bool _1527 = abs(_1345) < 0.89999997615814208984375;
    float _1529 = float(_1527);
    float _1530 = _1527 ? 0.0 : 1.0;
    float _1533 = (_1529 * _1346) - (_1530 * _1345);
    float _1534 = _1530 * _1344;
    float _1536 = (-0.0) - (_1344 * _1529);
    float _1540 = inversesqrt(dot(vec3(_1533, _1534, _1536), vec3(_1533, _1534, _1536)));
    float _1541 = _1533 * _1540;
    float _1542 = _1534 * _1540;
    float _1543 = _1540 * _1536;
    float _1546 = (_1542 * _1346) - (_1543 * _1345);
    float _1549 = (_1543 * _1344) - (_1541 * _1346);
    float _1552 = (_1541 * _1345) - (_1542 * _1344);
    float _1554;
    float _1562;
    float _1553 = 0.0;
    uint _1555 = 0u;
    float _1559;
    bool _1561;
    for (;;)
    {
        _1559 = (float(_1555) + _1387) * 0.03125;
        _1561 = _1555 == 0u;
        float frontier_phi_51_pred;
        if (_1561)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1696;
            float _1697;
            uint _1699;
            _1696 = 0.0;
            _1697 = 0.5;
            _1699 = _1555;
            float _1563;
            for (;;)
            {
                _1563 = ((_1699 & 1u) != 0u) ? (_1697 + _1696) : _1696;
                uint _1700 = _1699 >> 1u;
                if (_1700 == 0u)
                {
                    break;
                }
                else
                {
                    _1696 = _1563;
                    _1697 *= 0.5;
                    _1699 = _1700;
                }
            }
            frontier_phi_51_pred = _1563;
        }
        _1562 = frontier_phi_51_pred;
        float _1564 = _1562 + _1400;
        float _1568 = sqrt(_1559);
        float _1569 = ((_1564 > 1.0) ? (_1564 + (-1.0)) : _1564) * 6.283185482025146484375;
        float _1572 = cos(_1569) * _1568;
        float _1574 = sin(_1569) * _1568;
        float _1576 = sqrt(1.0 - _1559);
        float _1589 = ((_1576 * _1344) + (_1572 * _1546)) + (_1574 * _1541);
        float _1590 = ((_1576 * _1345) + (_1572 * _1549)) + (_1574 * _1542);
        float _1591 = ((_1576 * _1346) + (_1572 * _1552)) + (_1574 * _1543);
        _65._m0 = 1u;
        uvec4 _1595 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1596 = _1595.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1596, _1595.w, _1596, vec3(_1358, _1359, _1360), 9.9999997473787516355514526367188e-05, vec3(_1589, _1590, _1591), 10000.0, 1);
        float _1602 = dot(vec3(_1344, _1345, _1346), vec3(_1589, _1590, _1591));
        float _1985 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1605 = isnan(1.0) ? _1985 : (isnan(_1985) ? 1.0 : min(_1985, 1.0));
        _1554 = ((float(_65._m0 == 0u) * _1605) / (_1605 * 0.3183098733425140380859375)) + _1553;
        uint _1556 = _1555 + 1u;
        if (_1556 == 32u)
        {
            break;
        }
        else
        {
            _1553 = _1554;
            _1555 = _1556;
            continue;
        }
    }
    float _1613 = _1554 * 0.009947183541953563690185546875;
    float _1618 = dot(vec3(_1237, _1238, _1239), vec3(_1344, _1345, _1346)) * 2.0;
    vec4 _1632 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1237 - (_1618 * _1344), _1238 - (_1618 * _1345), _1239 - (_1618 * _1346)), 4.0 - (_1039 * 4.0));
    float _1637 = dot(vec3(_1361, _1362, _1363), vec3(_1344, _1345, _1346));
    float _1996 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
    float _1646 = (exp2(log2(1.0 - (isnan(1.0) ? _1996 : (isnan(_1996) ? 1.0 : min(_1996, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1652 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1344, _1345, _1346), 0.0);
    float _1663 = (_1523 + _1520) + (((_1652.x * _1019) + (_1646 * _1632.x)) * _1613);
    float _1667 = (_1524 + _1521) + (((_1652.y * _1020) + (_1646 * _1632.y)) * _1613);
    float _1671 = (_1525 + _1522) + (((_1652.z * _1021) + (_1646 * _1632.z)) * _1613);
    float _2007 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
    float _2018 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
    float _2029 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
    bool _1679 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1690;
    _1690.x = _1679 ? ((_669 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2007 : (isnan(_2007) ? 1.0 : min(_2007, 1.0)));
    _1690.y = _1679 ? ((_672 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2018 : (isnan(_2018) ? 1.0 : min(_2018, 1.0)));
    _1690.z = _1679 ? ((_675 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2029 : (isnan(_2029) ? 1.0 : min(_2029, 1.0)));
    payload._m0 = _1690;
}


