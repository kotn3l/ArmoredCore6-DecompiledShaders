#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_12;
layout(set = 0, binding = 2) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2420;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _168 & 65535u;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _169 >> 16u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        _174 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
        _177 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _182 * _174;
    uint _185 = _183 >> 2u;
    uvec3 _194 = uvec3(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x, texelFetch(l_geomAttrib_0, int(_185 + 2u)).x);
    uint _201 = _181.z;
    bool _202 = _201 != 0u;
    bool _204 = _133.w == 0u;
    bool _205 = _202 || _204;
    uint _206 = _183 + 12u;
    uint _229;
    uint _230;
    uint _231;
    uint _232;
    if (_205)
    {
        uvec4 _208 = texelFetch(l_geomAttrib_0, int(_206 >> 2u));
        uint _209 = _208.x;
        _229 = _209 & 255u;
        _230 = (_209 >> 8u) & 255u;
        _231 = (_209 >> 16u) & 255u;
        _232 = 16u;
    }
    else
    {
        uint _217 = _206 >> 2u;
        uvec2 _223 = uvec2(texelFetch(l_geomAttrib_0, int(_217)).x, texelFetch(l_geomAttrib_0, int(_217 + 1u)).x);
        uint _224 = _223.x;
        _229 = _224 & 65535u;
        _230 = _224 >> 16u;
        _231 = _223.y & 65535u;
        _232 = 20u;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int((_232 + _183) >> 2u));
    uint _240 = _239.x;
    bool _254 = _201 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _232 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_204)
        {
            frontier_phi_9_10_ladder = _232 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _232 + 12u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uint _259 = _202 ? (_255 + 4u) : _255;
    uint _262 = ((_183 + 4u) + _259) >> 2u;
    uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
    uint _269 = _268.x;
    uint _270 = _268.y;
    float _279 = float(int(uint(int(_270 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_270) >> int(16u))));
    uvec4 _284 = texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _259) >> 2u));
    uint _285 = _284.x;
    uvec4 _294 = texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _259) >> 2u));
    uint _295 = _294.x;
    uint _311 = _182 * _176;
    uint _312 = _311 >> 2u;
    uvec3 _321 = uvec3(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x, texelFetch(l_geomAttrib_0, int(_312 + 2u)).x);
    uint _328 = _311 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_205)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _311) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_254)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_204)
        {
            frontier_phi_16_17_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _352 + 12u;
        }
        _371 = frontier_phi_16_17_ladder;
    }
    uint _375 = _202 ? (_371 + 4u) : _371;
    uint _378 = ((_311 + 4u) + _375) >> 2u;
    uvec2 _384 = uvec2(texelFetch(l_geomAttrib_0, int(_378)).x, texelFetch(l_geomAttrib_0, int(_378 + 1u)).x);
    uint _385 = _384.x;
    uint _386 = _384.y;
    float _395 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _396 = float(int(uint(int(_386) >> int(16u))));
    uvec4 _400 = texelFetch(l_geomAttrib_0, int(((_311 + 12u) + _375) >> 2u));
    uint _401 = _400.x;
    uvec4 _410 = texelFetch(l_geomAttrib_0, int(((_311 + 16u) + _375) >> 2u));
    uint _411 = _410.x;
    uint _427 = _182 * _177;
    uint _428 = _427 >> 2u;
    uvec3 _437 = uvec3(texelFetch(l_geomAttrib_0, int(_428)).x, texelFetch(l_geomAttrib_0, int(_428 + 1u)).x, texelFetch(l_geomAttrib_0, int(_428 + 2u)).x);
    uint _444 = _427 + 12u;
    uint _465;
    uint _466;
    uint _467;
    uint _468;
    if (_205)
    {
        uvec4 _446 = texelFetch(l_geomAttrib_0, int(_444 >> 2u));
        uint _447 = _446.x;
        _465 = _447 & 255u;
        _466 = (_447 >> 8u) & 255u;
        _467 = (_447 >> 16u) & 255u;
        _468 = 16u;
    }
    else
    {
        uint _453 = _444 >> 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomAttrib_0, int(_453)).x, texelFetch(l_geomAttrib_0, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _465 = _460 & 65535u;
        _466 = _460 >> 16u;
        _467 = _459.y & 65535u;
        _468 = 20u;
    }
    uvec4 _474 = texelFetch(l_geomAttrib_0, int((_468 + _427) >> 2u));
    uint _475 = _474.x;
    uint _487;
    if (_254)
    {
        _487 = _468 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_204)
        {
            frontier_phi_23_24_ladder = _468 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _468 + 12u;
        }
        _487 = frontier_phi_23_24_ladder;
    }
    uint _491 = _202 ? (_487 + 4u) : _487;
    uint _494 = ((_427 + 4u) + _491) >> 2u;
    uvec2 _500 = uvec2(texelFetch(l_geomAttrib_0, int(_494)).x, texelFetch(l_geomAttrib_0, int(_494 + 1u)).x);
    uint _501 = _500.x;
    uint _502 = _500.y;
    float _511 = float(int(uint(int(_502 << 16u) >> int(16u))));
    float _512 = float(int(uint(int(_502) >> int(16u))));
    uvec4 _516 = texelFetch(l_geomAttrib_0, int(((_427 + 12u) + _491) >> 2u));
    uint _517 = _516.x;
    uvec4 _526 = texelFetch(l_geomAttrib_0, int(((_427 + 16u) + _491) >> 2u));
    uint _527 = _526.x;
    bool _544 = _133.z == 0u;
    float _580;
    float _581;
    float _582;
    if (_544)
    {
        uint _547 = _174 * 3u;
        uvec3 _556 = uvec3(texelFetch(l_geomPositionBuffer, int(_547)).x, texelFetch(l_geomPositionBuffer, int(_547 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_547 + 2u)).x);
        _580 = uintBitsToFloat(_556.x);
        _581 = uintBitsToFloat(_556.y);
        _582 = uintBitsToFloat(_556.z);
    }
    else
    {
        uint _564 = _174 * 2u;
        uvec2 _570 = uvec2(texelFetch(l_geomPositionBuffer, int(_564)).x, texelFetch(l_geomPositionBuffer, int(_564 + 1u)).x);
        uint _571 = _570.x;
        _580 = unpackHalf2x16(_571).x;
        _581 = unpackHalf2x16(_571 >> 16u).x;
        _582 = unpackHalf2x16(_570.y).x;
    }
    float _618;
    float _619;
    float _620;
    if (_544)
    {
        uint _585 = _176 * 3u;
        uvec3 _594 = uvec3(texelFetch(l_geomPositionBuffer, int(_585)).x, texelFetch(l_geomPositionBuffer, int(_585 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_585 + 2u)).x);
        _618 = uintBitsToFloat(_594.x);
        _619 = uintBitsToFloat(_594.y);
        _620 = uintBitsToFloat(_594.z);
    }
    else
    {
        uint _602 = _176 * 2u;
        uvec2 _608 = uvec2(texelFetch(l_geomPositionBuffer, int(_602)).x, texelFetch(l_geomPositionBuffer, int(_602 + 1u)).x);
        uint _609 = _608.x;
        _618 = unpackHalf2x16(_609).x;
        _619 = unpackHalf2x16(_609 >> 16u).x;
        _620 = unpackHalf2x16(_608.y).x;
    }
    float _656;
    float _657;
    float _658;
    if (_544)
    {
        uint _623 = _177 * 3u;
        uvec3 _632 = uvec3(texelFetch(l_geomPositionBuffer, int(_623)).x, texelFetch(l_geomPositionBuffer, int(_623 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_623 + 2u)).x);
        _656 = uintBitsToFloat(_632.x);
        _657 = uintBitsToFloat(_632.y);
        _658 = uintBitsToFloat(_632.z);
    }
    else
    {
        uint _640 = _177 * 2u;
        uvec2 _646 = uvec2(texelFetch(l_geomPositionBuffer, int(_640)).x, texelFetch(l_geomPositionBuffer, int(_640 + 1u)).x);
        uint _647 = _646.x;
        _656 = unpackHalf2x16(_647).x;
        _657 = unpackHalf2x16(_647 >> 16u).x;
        _658 = unpackHalf2x16(_646.y).x;
    }
    float _661 = (1.0 - hit._m0.x) - hit._m0.y;
    float _674 = ((uintBitsToFloat(_321.x) * hit._m0.x) + (uintBitsToFloat(_194.x) * _661)) + (uintBitsToFloat(_437.x) * hit._m0.y);
    float _675 = ((uintBitsToFloat(_321.y) * hit._m0.x) + (uintBitsToFloat(_194.y) * _661)) + (uintBitsToFloat(_437.y) * hit._m0.y);
    float _676 = ((uintBitsToFloat(_321.z) * hit._m0.x) + (uintBitsToFloat(_194.z) * _661)) + (uintBitsToFloat(_437.z) * hit._m0.y);
    float _739 = (((float(_411 & 255u) * hit._m0.x) + (float(_295 & 255u) * _661)) + (float(_527 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _743 = (((float((_411 >> 8u) & 255u) * hit._m0.x) + (float((_295 >> 8u) & 255u) * _661)) + (float((_527 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _746 = (((float((_411 >> 16u) & 255u) * hit._m0.x) + (float((_295 >> 16u) & 255u) * _661)) + (float((_527 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _754 = (_395 - _279) * 0.00048828125;
    float _756 = (_396 - _280) * 0.00048828125;
    float _759 = (_511 - _279) * 0.00048828125;
    float _760 = (_512 - _280) * 0.00048828125;
    float _782 = _618 - _580;
    float _783 = _619 - _581;
    float _784 = _620 - _582;
    float _787 = fma(_784, gl_ObjectToWorldEXT[2u].x, fma(_783, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _782));
    float _790 = fma(_784, gl_ObjectToWorldEXT[2u].y, fma(_783, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _782));
    float _793 = fma(_784, gl_ObjectToWorldEXT[2u].z, fma(_783, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _782));
    float _794 = _656 - _580;
    float _795 = _657 - _581;
    float _796 = _658 - _582;
    float _799 = fma(_796, gl_ObjectToWorldEXT[2u].x, fma(_795, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _794));
    float _802 = fma(_796, gl_ObjectToWorldEXT[2u].y, fma(_795, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _794));
    float _805 = fma(_796, gl_ObjectToWorldEXT[2u].z, fma(_795, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _794));
    float _806 = (((float(int(uint(int(_385 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_501 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _807 = (((float(int(uint(int(_385) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269) >> int(16u)))) * _661)) + (float(int(uint(int(_501) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _808 = (((_395 * hit._m0.x) + (_279 * _661)) + (_511 * hit._m0.y)) * 0.00048828125;
    float _809 = (((_396 * hit._m0.x) + (_280 * _661)) + (_512 * hit._m0.y)) * 0.00048828125;
    float _815 = (((float(_229) * _661) + (-127.0)) + (float(_349) * hit._m0.x)) + (float(_465) * hit._m0.y);
    float _818 = (((float(_230) * _661) + (-127.0)) + (float(_350) * hit._m0.x)) + (float(_466) * hit._m0.y);
    float _821 = (((float(_231) * _661) + (-127.0)) + (float(_351) * hit._m0.x)) + (float(_467) * hit._m0.y);
    float _822 = _815 * 0.0078740157186985015869140625;
    float _824 = _818 * 0.0078740157186985015869140625;
    float _825 = _821 * 0.0078740157186985015869140625;
    float _838 = ((((float(_240 & 255u) * _661) + (-127.0)) + (float(_359 & 255u) * hit._m0.x)) + (float(_475 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _839 = ((((float((_240 >> 8u) & 255u) * _661) + (-127.0)) + (float((_359 >> 8u) & 255u) * hit._m0.x)) + (float((_475 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _840 = ((((float((_240 >> 16u) & 255u) * _661) + (-127.0)) + (float((_359 >> 16u) & 255u) * hit._m0.x)) + (float((_475 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _841 = ((((float(_240 >> 24u) * _661) + (-127.0)) + (float(_359 >> 24u) * hit._m0.x)) + (float(_475 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _851 = ((_839 * _825) - (_840 * _824)) * _841;
    float _852 = ((_840 * _822) - (_838 * _825)) * _841;
    float _853 = ((_838 * _824) - (_839 * _822)) * _841;
    float _857 = inversesqrt(dot(vec3(_851, _852, _853), vec3(_851, _852, _853)));
    uvec4 _878 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _888 = (_878.w != 0u) ? cbMtdParam._m0[25u].z : (cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x);
    uvec2 _911 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_1, int(0u)));
    bool _916 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _969;
    if (_916)
    {
        float _927 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _933 = (_805 * _790) - (_802 * _793);
        float _936 = (_799 * _793) - (_805 * _787);
        float _939 = (_802 * _787) - (_799 * _790);
        float _966 = ((log2((((float(_911.y) * 0.5) * float(_911.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_936 * _936) + (_939 * _939)) + (_933 * _933)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_927 * gl_WorldRayDirectionEXT.x, _927 * gl_WorldRayDirectionEXT.y, _927 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _969 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    }
    else
    {
        _969 = 0.0;
    }
    vec4 _973 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[37u].y) * ((_888 * cbMtdParam._m0[36u].w) + _808)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[37u].z) * ((_888 * cbMtdParam._m0[37u].x) + _809)) + cbTextureTilingScale._m0[0u].w), _969);
    float _975 = _973.x;
    uvec2 _1017 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_2, int(0u)));
    float _1068;
    if (_916)
    {
        float _1028 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1034 = (_805 * _790) - (_802 * _793);
        float _1037 = (_799 * _793) - (_805 * _787);
        float _1040 = (_802 * _787) - (_799 * _790);
        float _1066 = ((log2((((float(_1017.y) * 0.5) * float(_1017.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1037 * _1037) + (_1040 * _1040)) + (_1034 * _1034)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1028 * gl_WorldRayDirectionEXT.x, _1028 * gl_WorldRayDirectionEXT.y, _1028 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1068 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    }
    else
    {
        _1068 = 0.0;
    }
    vec4 _1071 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((cbMtdParam._m0[29u].w * _888) + (_975 * cbMtdParam._m0[27u].y)) + cbMtdParam._m0[37u].w) + (cbMtdParam._m0[27u].w * _808)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((cbMtdParam._m0[30u].x * _888) + (_975 * cbMtdParam._m0[27u].z)) + cbMtdParam._m0[38u].x) + (cbMtdParam._m0[28u].x * _809)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1068);
    uvec2 _1117 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_12, int(0u)));
    float _1168;
    if (_916)
    {
        float _1128 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1134 = (_805 * _790) - (_802 * _793);
        float _1137 = (_799 * _793) - (_805 * _787);
        float _1140 = (_802 * _787) - (_799 * _790);
        float _1166 = ((log2((((float(_1117.y) * 0.5) * float(_1117.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1137 * _1137) + (_1140 * _1140)) + (_1134 * _1134)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1128 * gl_WorldRayDirectionEXT.x, _1128 * gl_WorldRayDirectionEXT.y, _1128 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1168 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
    }
    else
    {
        _1168 = 0.0;
    }
    vec4 _1170 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_12, SS_WrapLinear), vec2((((((cbMtdParam._m0[35u].w * _888) + (cbMtdParam._m0[36u].y * _975)) + cbMtdParam._m0[34u].w) + (cbMtdParam._m0[35u].y * _808)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((cbMtdParam._m0[36u].x * _888) + (cbMtdParam._m0[36u].z * _975)) + cbMtdParam._m0[35u].x) + (cbMtdParam._m0[35u].z * _809)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1168);
    float _1177 = (cbMtdParam._m0[20u].z * _743) * _1170.w;
    float _1178 = _1177 + ((cbMtdParam._m0[20u].y * _743) * _1071.w);
    float _2551 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
    float _1179 = isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0));
    uvec4 _1183 = floatBitsToUint(cbMtdParam._m0[10u]);
    bool _1185 = _1183.y != 0u;
    uvec4 _1189 = floatBitsToUint(cbMtdParam._m0[11u]);
    float _1194 = cbMtdParam._m0[34u].y * _975;
    float _1195 = cbMtdParam._m0[34u].z * _975;
    float _1201 = (((float(texelFetch(l_geomAttrib_0, int(((_311 + 20u) + _375) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 20u) + _259) >> 2u)).x & 255u) * _661)) + (float(texelFetch(l_geomAttrib_0, int(((_427 + 20u) + _491) >> 2u)).x & 255u) * hit._m0.y)) * 0.007843137718737125396728515625;
    float _1221 = (((cbMtdParam._m0[32u].z * _888) + _1195) + cbMtdParam._m0[29u].z) + (cbMtdParam._m0[32u].x * _807);
    float _2562 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1257;
    if (_916)
    {
        float _1241 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1249 = log2(0.0);
        float _1255 = ((_1249 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1241 * gl_WorldRayDirectionEXT.x, _1241 * gl_WorldRayDirectionEXT.y, _1241 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    vec4 _1260 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((((cbMtdParam._m0[29u].y + _1194) + ((cbMtdParam._m0[32u].y - (cbMtdParam._m0[32u].y * _1201)) * _888)) + (cbMtdParam._m0[31u].w * _806)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1189.x != 0u) ? _1221 : (isnan(1.0) ? _2562 : (isnan(_2562) ? 1.0 : min(_2562, 1.0)))) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1257);
    float _1262 = _1260.x;
    float _1263 = _1260.y;
    float _1264 = _1260.z;
    float _1286 = ((cbMtdParam._m0[31u].y + _1194) + ((cbMtdParam._m0[28u].y - (cbMtdParam._m0[28u].y * _1201)) * _888)) + (cbMtdParam._m0[30u].w * _806);
    float _1289 = ((cbMtdParam._m0[31u].z + _1195) + ((cbMtdParam._m0[28u].z - (cbMtdParam._m0[28u].z * _1201)) * _888)) + (cbMtdParam._m0[31u].x * _807);
    float _2578 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
    float _2589 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
    float _1328;
    if (_916)
    {
        float _1312 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1320 = log2(0.0);
        float _1326 = ((_1320 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1312 * gl_WorldRayDirectionEXT.x, _1312 * gl_WorldRayDirectionEXT.y, _1312 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1328 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
    }
    else
    {
        _1328 = 0.0;
    }
    vec4 _1331 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_878.x != 0u) ? _1286 : (isnan(1.0) ? _2578 : (isnan(_2578) ? 1.0 : min(_2578, 1.0)))) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1183.w != 0u) ? _1289 : (isnan(1.0) ? _2589 : (isnan(_2589) ? 1.0 : min(_2589, 1.0)))) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1328);
    float _1338 = (cbMtdParam._m0[25u].x * _739) * _1331.w;
    float _1339 = _1338 + (_1260.w * _739);
    float _2605 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
    float _1340 = isnan(1.0) ? _2605 : (isnan(_2605) ? 1.0 : min(_2605, 1.0));
    float _1365 = ((cbMtdParam._m0[33u].y + _1194) + ((cbMtdParam._m0[32u].w - (cbMtdParam._m0[32u].w * _1201)) * _888)) + (cbMtdParam._m0[33u].w * _806);
    float _1368 = ((cbMtdParam._m0[33u].z + _1195) + ((cbMtdParam._m0[33u].x - (cbMtdParam._m0[33u].x * _1201)) * _888)) + (cbMtdParam._m0[34u].x * _807);
    float _2616 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
    float _2627 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
    float _1407;
    if (_916)
    {
        float _1391 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1399 = log2(0.0);
        float _1405 = ((_1399 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1391 * gl_WorldRayDirectionEXT.x, _1391 * gl_WorldRayDirectionEXT.y, _1391 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1407 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
    }
    else
    {
        _1407 = 0.0;
    }
    vec4 _1410 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_878.y != 0u) ? _1365 : (isnan(1.0) ? _2627 : (isnan(_2627) ? 1.0 : min(_2627, 1.0)))) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1183.x != 0u) ? _1368 : (isnan(1.0) ? _2616 : (isnan(_2616) ? 1.0 : min(_2616, 1.0)))) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1407);
    float _1417 = (cbMtdParam._m0[24u].z * _739) * _1410.w;
    float _1418 = _1417 + _1340;
    float _2643 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
    float _1421 = (_1185 ? _1340 : (isnan(1.0) ? _2643 : (isnan(_2643) ? 1.0 : min(_2643, 1.0)))) + _1179;
    float _1422 = _1421 + _1417;
    float _2654 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _1447 = (((cbMtdParam._m0[30u].y * _888) + (cbMtdParam._m0[28u].w * _975)) + cbMtdParam._m0[38u].y) + (((((float(int(uint(int(_401 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_517 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[38u].w);
    float _1450 = (((cbMtdParam._m0[30u].z * _888) + (cbMtdParam._m0[29u].x * _975)) + cbMtdParam._m0[38u].z) + (((((float(int(uint(int(_401) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285) >> int(16u)))) * _661)) + (float(int(uint(int(_517) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[39u].x);
    float _2665 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
    float _1452 = (_1183.z != 0u) ? _1450 : (isnan(1.0) ? _2665 : (isnan(_2665) ? 1.0 : min(_2665, 1.0)));
    float _1463 = inversesqrt(dot(vec3(cbMtdParam._m0[40u].xyz), vec3(cbMtdParam._m0[40u].xyz)));
    float _1464 = _1463 * cbMtdParam._m0[40u].x;
    float _1465 = _1463 * cbMtdParam._m0[40u].y;
    float _1466 = _1463 * cbMtdParam._m0[40u].z;
    float _1475 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[22u].w) * cbMtdParam._m0[24u].x;
    float _1478 = (cbMtdParam._m0[24u].y * 0.25) * dot(vec4(_1464, _1465, _1466, 0.0), vec4(_857 * _851, _857 * _852, _857 * _853, 0.0));
    float _1481 = (cbMtdParam._m0[24u].y * (-0.25)) * dot(vec4(_1464, _1465, _1466, 0.0), vec4(_838, _839, _840, 0.0));
    float _1482 = fract(_1475);
    float _1484 = fract(_1475 + 0.5);
    float _1496 = abs((_1482 * 2.0) + (-1.0));
    vec4 _1520 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((_1482 * _1481) + _1447)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((_1478 * _1482) + _1452)) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1522 = _1520.x;
    float _1523 = _1520.y;
    float _1524 = _1520.z;
    float _1525 = _1520.w;
    vec4 _1526 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((_1484 * _1481) + _1447) + cbMtdParam._m0[26u].w)) + cbTextureTilingScale._m0[3u].z, ((((_1484 * _1478) + _1452) + cbMtdParam._m0[27u].x) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1544 = (((_1526.w - _1525) * _1496) + _1525) * _746;
    float _1545 = _1544 + (_1185 ? (isnan(1.0) ? _2654 : (isnan(_2654) ? 1.0 : min(_2654, 1.0))) : _1421);
    float _2676 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
    float _1549 = ((isnan(1.0) ? _2676 : (isnan(_2676) ? 1.0 : min(_2676, 1.0))) * cbMtdParam._m0[20u].w) * cbMtdParam._m0[26u].y;
    float _1568 = cbMtdParam._m0[17u].z + dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(0.0, -1.0, 0.0, 0.0));
    float _1569 = isnan(cbMtdParam._m0[18u].x) ? _1568 : (isnan(_1568) ? cbMtdParam._m0[18u].x : max(_1568, cbMtdParam._m0[18u].x));
    float _1616;
    if (_916)
    {
        float _1600 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1608 = log2(0.0);
        float _1614 = ((_1608 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1600 * gl_WorldRayDirectionEXT.x, _1600 * gl_WorldRayDirectionEXT.y, _1600 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1616 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
    }
    else
    {
        _1616 = 0.0;
    }
    vec4 _1619 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_003_snp_0_Texture2D_6, SS_WrapLinear), vec2((((_878.z != 0u) ? (1.0 - ((g_sceneCB._m0[4u].y + 1.0) * 0.25)) : (cbMtdParam._m0[22u].z * 0.0416666679084300994873046875)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (1.0 - (isnan(cbMtdParam._m0[18u].y) ? _1569 : (isnan(_1569) ? cbMtdParam._m0[18u].y : min(_1569, cbMtdParam._m0[18u].y))))) + cbTextureTilingScale._m0[6u].w), _1616);
    float _1638 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
    float _1639 = _1638 * _674;
    float _1640 = _1638 * _675;
    float _1641 = _1638 * _676;
    bool _1643 = _1189.y != 0u;
    float _1650 = inversesqrt(dot(vec3(cbMtdParam._m0[39u].yzw), vec3(cbMtdParam._m0[39u].yzw)));
    float _1656 = _1643 ? g_sceneCB._m0[4u].x : (_1650 * cbMtdParam._m0[39u].y);
    float _1657 = _1643 ? g_sceneCB._m0[4u].y : (_1650 * cbMtdParam._m0[39u].z);
    float _1658 = _1643 ? g_sceneCB._m0[4u].z : (_1650 * cbMtdParam._m0[39u].w);
    float _1662 = inversesqrt(dot(vec3(_1656, _1657, _1658), vec3(_1656, _1657, _1658)));
    float _1663 = _1656 * _1662;
    float _1664 = _1657 * _1662;
    float _1665 = _1658 * _1662;
    float _1669 = inversesqrt(dot(vec3(_1663, _1664, _1665), vec3(_1663, _1664, _1665)));
    float _1684 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1669 * _1663, _1669 * _1664, _1669 * _1665, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2702 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
    float _1686 = isnan(1.0) ? _2702 : (isnan(_2702) ? 1.0 : min(_2702, 1.0));
    float _1692 = exp2(log2(_1686 * 6.5) * 7.0);
    float _2713 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
    float _1694 = (isnan(1.0) ? _2713 : (isnan(_2713) ? 1.0 : min(_2713, 1.0))) + _1686;
    float _2724 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
    float _1695 = isnan(1.0) ? _2724 : (isnan(_2724) ? 1.0 : min(_2724, 1.0));
    float _1705 = ((_1695 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * _1619.x;
    float _1706 = ((_1695 * (cbMtdParam._m0[15u].w - cbMtdParam._m0[16u].w)) + cbMtdParam._m0[16u].w) * _1619.y;
    float _1707 = ((_1695 * (cbMtdParam._m0[16u].x - cbMtdParam._m0[17u].x)) + cbMtdParam._m0[17u].x) * _1619.z;
    float _1708 = isnan(_1706) ? _1705 : (isnan(_1705) ? _1706 : max(_1705, _1706));
    float _1709 = isnan(_1707) ? _1708 : (isnan(_1708) ? _1707 : max(_1708, _1707));
    float _1712;
    float _1714;
    if (_1709 < 1.1920928955078125e-07)
    {
        _1712 = 0.0;
        _1714 = 0.0;
    }
    else
    {
        float _1738 = isnan(_1706) ? _1705 : (isnan(_1705) ? _1706 : min(_1705, _1706));
        float _1740 = _1709 - (isnan(_1707) ? _1738 : (isnan(_1738) ? _1707 : min(_1738, _1707)));
        float _1715 = _1740 / _1709;
        float frontier_phi_50_51_ladder;
        float frontier_phi_50_51_ladder_1;
        if (_1740 < 1.1920928955078125e-07)
        {
            frontier_phi_50_51_ladder = _1715;
            frontier_phi_50_51_ladder_1 = 0.0;
        }
        else
        {
            float _2289;
            if (_1709 == _1705)
            {
                _2289 = ((_1706 - _1707) / _1740) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_62_59_ladder;
                if (_1709 == _1706)
                {
                    frontier_phi_62_59_ladder = (((_1707 - _1705) / _1740) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_62_59_ladder = (((_1705 - _1706) / _1740) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _2289 = frontier_phi_62_59_ladder;
            }
            float _2294 = (_2289 < 0.0) ? (_2289 + 1.0) : _2289;
            precise float _1713 = (_2294 - floor(_2294)) * 6.0;
            frontier_phi_50_51_ladder = _1715;
            frontier_phi_50_51_ladder_1 = _1713;
        }
        _1712 = frontier_phi_50_51_ladder_1;
        _1714 = frontier_phi_50_51_ladder;
    }
    float _1717 = cbMtdParam._m0[19u].y + _1714;
    float _2755 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
    float _1718 = isnan(1.0) ? _2755 : (isnan(_2755) ? 1.0 : min(_2755, 1.0));
    float _1720 = cbMtdParam._m0[22u].y + _1709;
    float _2766 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
    float _1721 = isnan(1.0) ? _2766 : (isnan(_2766) ? 1.0 : min(_2766, 1.0));
    uint _1723 = uint(int(floor(_1712)));
    float _1725 = _1712 - float(int(_1723));
    float _1727 = _1721 * (1.0 - _1718);
    float _1730 = (1.0 - (_1725 * _1718)) * _1721;
    float _1734 = (1.0 - ((1.0 - _1725) * _1718)) * _1721;
    float _1742;
    float _1744;
    float _1745;
    if ((_1723 == 0u) || (_1723 == 6u))
    {
        _1742 = _1721;
        _1744 = _1734;
        _1745 = _1727;
    }
    else
    {
        float frontier_phi_52_53_ladder;
        float frontier_phi_52_53_ladder_1;
        float frontier_phi_52_53_ladder_2;
        if (_1723 == 1u)
        {
            frontier_phi_52_53_ladder = _1727;
            frontier_phi_52_53_ladder_1 = _1721;
            frontier_phi_52_53_ladder_2 = _1730;
        }
        else
        {
            float frontier_phi_52_53_ladder_57_ladder;
            float frontier_phi_52_53_ladder_57_ladder_1;
            float frontier_phi_52_53_ladder_57_ladder_2;
            if (_1723 == 2u)
            {
                frontier_phi_52_53_ladder_57_ladder = _1734;
                frontier_phi_52_53_ladder_57_ladder_1 = _1721;
                frontier_phi_52_53_ladder_57_ladder_2 = _1727;
            }
            else
            {
                float frontier_phi_52_53_ladder_57_ladder_61_ladder;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
                if (_1723 == 3u)
                {
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _1721;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1730;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _1727;
                }
                else
                {
                    bool _2357 = _1723 == 4u;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _2357 ? _1721 : _1730;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1727;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _2357 ? _1734 : _1721;
                }
                frontier_phi_52_53_ladder_57_ladder = frontier_phi_52_53_ladder_57_ladder_61_ladder;
                frontier_phi_52_53_ladder_57_ladder_1 = frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                frontier_phi_52_53_ladder_57_ladder_2 = frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
            }
            frontier_phi_52_53_ladder = frontier_phi_52_53_ladder_57_ladder;
            frontier_phi_52_53_ladder_1 = frontier_phi_52_53_ladder_57_ladder_1;
            frontier_phi_52_53_ladder_2 = frontier_phi_52_53_ladder_57_ladder_2;
        }
        _1742 = frontier_phi_52_53_ladder_2;
        _1744 = frontier_phi_52_53_ladder_1;
        _1745 = frontier_phi_52_53_ladder;
    }
    float _1754 = exp2(log2(_1742) * cbMtdParam._m0[19u].x);
    float _1755 = exp2(log2(_1744) * cbMtdParam._m0[19u].x);
    float _1756 = exp2(log2(_1745) * cbMtdParam._m0[19u].x);
    float _1775 = (_1262 - _1754) + (_1338 * (_1331.x - _1262));
    float _1777 = (_1775 * _739) + _1754;
    float _1778 = (_1263 - _1755) + (_1338 * (_1331.y - _1263));
    float _1780 = (_1778 * _739) + _1755;
    float _1781 = (_1264 - _1756) + (_1338 * (_1331.z - _1264));
    float _1783 = (_1781 * _739) + _1756;
    float _1784 = _1410.x - _1754;
    float _1785 = _1410.y - _1755;
    float _1786 = _1410.z - _1756;
    float _1805 = _1185 ? _1777 : (((_739 * (_1784 - _1775)) * _1417) + _1777);
    float _1806 = _1185 ? _1780 : (((_739 * (_1785 - _1778)) * _1417) + _1780);
    float _1807 = _1185 ? _1783 : (((_739 * (_1786 - _1781)) * _1417) + _1783);
    float _1823 = (((_1754 - _1805) + (((_1071.x - _1754) + (_1177 * (_1170.x - _1071.x))) * _743)) * _1179) + _1805;
    float _1824 = (((_1755 - _1806) + (((_1071.y - _1755) + (_1177 * (_1170.y - _1071.y))) * _743)) * _1179) + _1806;
    float _1825 = (((_1756 - _1807) + (((_1071.z - _1756) + (_1177 * (_1170.z - _1071.z))) * _743)) * _1179) + _1807;
    float _1835 = _1185 ? (((((_1784 * _739) + _1754) - _1823) * _1417) + _1823) : _1823;
    float _1836 = _1185 ? (((((_1785 * _739) + _1755) - _1824) * _1417) + _1824) : _1824;
    float _1837 = _1185 ? (((((_1786 * _739) + _1756) - _1825) * _1417) + _1825) : _1825;
    float _1853 = ((((((((_1526.x - _1522) * _1496) + _1522) - _1754) * _746) + _1754) - _1835) * _1544) + _1835;
    float _1854 = ((((((((_1526.y - _1523) * _1496) + _1523) - _1755) * _746) + _1755) - _1836) * _1544) + _1836;
    float _1855 = ((((((((_1526.z - _1524) * _1496) + _1524) - _1756) * _746) + _1756) - _1837) * _1544) + _1837;
    float _2777 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
    float _2788 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
    float _2799 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
    float _1868 = exp2(log2((isnan(1.0) ? _2777 : (isnan(_2777) ? 1.0 : min(_2777, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1869 = exp2(log2((isnan(1.0) ? _2788 : (isnan(_2788) ? 1.0 : min(_2788, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1870 = exp2(log2((isnan(1.0) ? _2799 : (isnan(_2799) ? 1.0 : min(_2799, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1871 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
    float _1872 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
    float _1873 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
    float _1879 = 1.0 - _1871;
    float _1880 = 1.0 - _1872;
    float _1881 = 1.0 - _1873;
    float _1889 = (_1871 / (isnan(0.001000000047497451305389404296875) ? _1879 : (isnan(_1879) ? 0.001000000047497451305389404296875 : max(_1879, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1890 = (_1872 / (isnan(0.001000000047497451305389404296875) ? _1880 : (isnan(_1880) ? 0.001000000047497451305389404296875 : max(_1880, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1891 = (_1873 / (isnan(0.001000000047497451305389404296875) ? _1881 : (isnan(_1881) ? 0.001000000047497451305389404296875 : max(_1881, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1908 = dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1663, _1664, _1665, 0.0));
    float _2855 = isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0));
    float _1911 = isnan(1.0) ? _2855 : (isnan(_2855) ? 1.0 : min(_2855, 1.0));
    float _1913 = 1.0 - (_1911 * _1911);
    float _1915 = (-0.0) - (_1913 - cbMtdParam._m0[23u].w);
    float _1920 = exp2(log2(isnan(0.001000000047497451305389404296875) ? _1915 : (isnan(_1915) ? 0.001000000047497451305389404296875 : max(_1915, 0.001000000047497451305389404296875))) * cbMtdParam._m0[22u].x);
    float _2871 = isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0));
    float _1921 = isnan(1.0) ? _2871 : (isnan(_2871) ? 1.0 : min(_2871, 1.0));
    float _2882 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    float _1957 = isnan(1.0) ? _2882 : (isnan(_2882) ? 1.0 : min(_2882, 1.0));
    float _1964 = (((((_1695 * (cbMtdParam._m0[12u].z - cbMtdParam._m0[13u].z)) + cbMtdParam._m0[13u].z) * ((_1921 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1889 : (isnan(_1889) ? 0.001000000047497451305389404296875 : max(_1889, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1871)) + _1871)) - _1754) * _1957) + _1754;
    float _1965 = (((((_1695 * (cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].w)) + cbMtdParam._m0[13u].w) * ((_1921 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1890 : (isnan(_1890) ? 0.001000000047497451305389404296875 : max(_1890, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1872)) + _1872)) - _1755) * _1957) + _1755;
    float _1966 = (((((_1695 * (cbMtdParam._m0[13u].x - cbMtdParam._m0[14u].x)) + cbMtdParam._m0[14u].x) * ((_1921 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1891 : (isnan(_1891) ? 0.001000000047497451305389404296875 : max(_1891, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1873)) + _1873)) - _1756) * _1957) + _1756;
    float _1984 = inversesqrt(dot(vec3(cbMtdParam._m0[40u].w, cbMtdParam._m0[41u].xy), vec3(cbMtdParam._m0[40u].w, cbMtdParam._m0[41u].xy)));
    float _1992 = (dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1984 * cbMtdParam._m0[40u].w, _1984 * cbMtdParam._m0[41u].x, _1984 * cbMtdParam._m0[41u].y, 0.0)) + 1.0) * 0.5;
    float _2893 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
    float _1999 = cbMtdParam._m0[24u].w * exp2(log2(isnan(1.0) ? _2893 : (isnan(_2893) ? 1.0 : min(_2893, 1.0))) * cbMtdParam._m0[25u].y);
    float _2904 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
    float _2000 = isnan(1.0) ? _2904 : (isnan(_2904) ? 1.0 : min(_2904, 1.0));
    float _2012 = (-0.0) - (_1913 - cbMtdParam._m0[21u].z);
    float _2013 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0));
    float _2027 = (-0.0) - (_1913 - cbMtdParam._m0[23u].x);
    float _2028 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
    float _2041 = 1.0 - exp2(log2(_1911) * cbMtdParam._m0[26u].z);
    float _2043 = (-0.0) - (_2041 - cbMtdParam._m0[17u].w);
    float _2044 = isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0));
    float _2052 = (-0.0) - (_2041 - cbMtdParam._m0[19u].w);
    float _2053 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2063 = ((cbMtdParam._m0[23u].y * exp2(log2(isnan(64.0) ? _2028 : (isnan(_2028) ? 64.0 : min(_2028, 64.0))) * 1.64999997615814208984375)) + (cbMtdParam._m0[23u].z * exp2(log2(isnan(64.0) ? _2013 : (isnan(_2013) ? 64.0 : min(_2013, 64.0))) * 2.599999904632568359375))) + (cbMtdParam._m0[20u].x * (exp2(log2(isnan(64.0) ? _2053 : (isnan(_2053) ? 64.0 : min(_2053, 64.0))) * 4.0) + exp2(log2(isnan(64.0) ? _2044 : (isnan(_2044) ? 64.0 : min(_2044, 64.0))) * 1.87000000476837158203125)));
    float _2065 = ((_2000 * ((cbMtdParam._m0[11u].z * _1964) - _1964)) + _1964) + (_2063 * cbMtdParam._m0[14u].z);
    float _2067 = ((_2000 * ((cbMtdParam._m0[11u].w * _1965) - _1965)) + _1965) + (_2063 * cbMtdParam._m0[14u].w);
    float _2069 = ((_2000 * ((cbMtdParam._m0[12u].x * _1966) - _1966)) + _1966) + (_2063 * cbMtdParam._m0[15u].x);
    float _2077 = float(gl_LaunchIDEXT.x);
    float _2078 = float(gl_LaunchIDEXT.y);
    float _2081 = float(gl_LaunchSizeEXT.x);
    float _2086 = ((_2077 + 0.5) / _2081) + (-0.5);
    float _2088 = ((_2078 + 0.5) / _85) + (-0.5);
    float _2095 = exp2(log2(sqrt((_2088 * _2088) + (_2086 * _2086))) * cbMtdParam._m0[18u].w);
    float _2955 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
    float _2097 = 1.0 - (isnan(1.0) ? _2955 : (isnan(_2955) ? 1.0 : min(_2955, 1.0)));
    float _2107 = (((_2097 * _2065) - _2065) * cbMtdParam._m0[18u].z) + _2065;
    float _2108 = (((_2097 * _2067) - _2067) * cbMtdParam._m0[18u].z) + _2067;
    float _2109 = (((_2097 * _2069) - _2069) * cbMtdParam._m0[18u].z) + _2069;
    float _2117 = inversesqrt(dot(vec3(_822, _824, _825), vec3(_822, _824, _825)));
    float _2118 = _2117 * _822;
    float _2119 = _2117 * _824;
    float _2120 = _2117 * _825;
    float _2132 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2133 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2134 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2138 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2139 = _2138 * gl_WorldRayDirectionEXT.x;
    float _2140 = _2138 * gl_WorldRayDirectionEXT.y;
    float _2141 = _2138 * gl_WorldRayDirectionEXT.z;
    float _2142 = (-0.0) - _2139;
    float _2143 = (-0.0) - _2140;
    float _2144 = (-0.0) - _2141;
    float _2158 = fract(fract(sin(dot(vec2(_2077 / _2081, _2078 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2171 = fract(fract(sin(dot(vec2((_2077 + 128.0) / _2081, (_2078 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _2176 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2177 = _2176.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2177, _2176.w, _2177, vec3(_2132, _2133, _2134), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2243;
    float _2244;
    float _2245;
    if (_71._m0 == 0u)
    {
        float _2198 = g_sceneCB._m0[4u].x - _2139;
        float _2199 = g_sceneCB._m0[4u].y - _2140;
        float _2200 = g_sceneCB._m0[4u].z - _2141;
        float _2204 = inversesqrt(dot(vec3(_2198, _2199, _2200), vec3(_2198, _2199, _2200)));
        float _2208 = dot(vec3(_2118, _2119, _2120), vec3(g_sceneCB._m0[4u].xyz));
        float _2981 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
        float _2211 = isnan(1.0) ? _2981 : (isnan(_2981) ? 1.0 : min(_2981, 1.0));
        float _2212 = dot(vec3(_2118, _2119, _2120), vec3(_2142, _2143, _2144));
        float _2992 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
        float _2216 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2198 * _2204, _2199 * _2204, _2200 * _2204));
        float _3003 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
        float _2227 = (exp2(log2(1.0 - (isnan(1.0) ? _3003 : (isnan(_3003) ? 1.0 : min(_3003, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2233 = (0.5 / ((_2211 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2992 : (isnan(_2992) ? 1.0 : min(_2992, 1.0))))) * _2211;
        float _3014 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
        float _2235 = (isnan(1.0) ? _3014 : (isnan(_3014) ? 1.0 : min(_3014, 1.0))) * 0.31831014156341552734375;
        _2243 = (_2227 * g_sceneCB._m0[5u].x) * _2235;
        _2244 = (_2227 * g_sceneCB._m0[5u].y) * _2235;
        _2245 = (_2227 * g_sceneCB._m0[5u].z) * _2235;
    }
    else
    {
        _2243 = 0.0;
        _2244 = 0.0;
        _2245 = 0.0;
    }
    bool _2247 = abs(_2119) < 0.89999997615814208984375;
    float _2249 = float(_2247);
    float _2250 = _2247 ? 0.0 : 1.0;
    float _2253 = (_2249 * _2120) - (_2250 * _2119);
    float _2254 = _2250 * _2118;
    float _2256 = (-0.0) - (_2118 * _2249);
    float _2260 = inversesqrt(dot(vec3(_2253, _2254, _2256), vec3(_2253, _2254, _2256)));
    float _2261 = _2253 * _2260;
    float _2262 = _2254 * _2260;
    float _2263 = _2260 * _2256;
    float _2266 = (_2262 * _2120) - (_2263 * _2119);
    float _2269 = (_2263 * _2118) - (_2261 * _2120);
    float _2272 = (_2261 * _2119) - (_2262 * _2118);
    float _2280;
    float _2306;
    float _2279 = 0.0;
    uint _2281 = 0u;
    float _2285;
    bool _2287;
    for (;;)
    {
        _2285 = (float(_2281) + _2158) * 0.03125;
        _2287 = _2281 == 0u;
        float frontier_phi_65_pred;
        if (_2287)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2425;
            float _2426;
            uint _2428;
            _2425 = 0.0;
            _2426 = 0.5;
            _2428 = _2281;
            float _2307;
            for (;;)
            {
                _2307 = ((_2428 & 1u) != 0u) ? (_2426 + _2425) : _2425;
                uint _2429 = _2428 >> 1u;
                if (_2429 == 0u)
                {
                    break;
                }
                else
                {
                    _2425 = _2307;
                    _2426 *= 0.5;
                    _2428 = _2429;
                }
            }
            frontier_phi_65_pred = _2307;
        }
        _2306 = frontier_phi_65_pred;
        float _2308 = _2306 + _2171;
        float _2312 = sqrt(_2285);
        float _2313 = ((_2308 > 1.0) ? (_2308 + (-1.0)) : _2308) * 6.283185482025146484375;
        float _2316 = cos(_2313) * _2312;
        float _2318 = sin(_2313) * _2312;
        float _2320 = sqrt(1.0 - _2285);
        float _2333 = ((_2320 * _2118) + (_2316 * _2266)) + (_2318 * _2261);
        float _2334 = ((_2320 * _2119) + (_2316 * _2269)) + (_2318 * _2262);
        float _2335 = ((_2320 * _2120) + (_2316 * _2272)) + (_2318 * _2263);
        _70._m0 = 1u;
        uvec4 _2339 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2340 = _2339.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2340, _2339.w, _2340, vec3(_2132, _2133, _2134), 9.9999997473787516355514526367188e-05, vec3(_2333, _2334, _2335), 10000.0, 1);
        float _2346 = dot(vec3(_2118, _2119, _2120), vec3(_2333, _2334, _2335));
        float _3025 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
        float _2349 = isnan(1.0) ? _3025 : (isnan(_3025) ? 1.0 : min(_3025, 1.0));
        _2280 = ((float(_70._m0 == 0u) * _2349) / (_2349 * 0.3183098733425140380859375)) + _2279;
        uint _2282 = _2281 + 1u;
        if (_2282 == 32u)
        {
            break;
        }
        else
        {
            _2279 = _2280;
            _2281 = _2282;
            continue;
        }
    }
    float _2358 = _2280 * 0.009947183541953563690185546875;
    float _2363 = dot(vec3(_2139, _2140, _2141), vec3(_2118, _2119, _2120)) * 2.0;
    vec4 _2374 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2139 - (_2363 * _2118), _2140 - (_2363 * _2119), _2141 - (_2363 * _2120)), 4.0);
    float _2379 = dot(vec3(_2142, _2143, _2144), vec3(_2118, _2119, _2120));
    float _3036 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2388 = (exp2(log2(1.0 - (isnan(1.0) ? _3036 : (isnan(_3036) ? 1.0 : min(_3036, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2396 = (_2243 + (isnan(cbMtdParam._m0[26u].x) ? _2107 : (isnan(_2107) ? cbMtdParam._m0[26u].x : min(_2107, cbMtdParam._m0[26u].x)))) + ((_2374.x * _2358) * _2388);
    float _2398 = (_2244 + (isnan(cbMtdParam._m0[26u].x) ? _2108 : (isnan(_2108) ? cbMtdParam._m0[26u].x : min(_2108, cbMtdParam._m0[26u].x)))) + ((_2374.y * _2358) * _2388);
    float _2400 = (_2245 + (isnan(cbMtdParam._m0[26u].x) ? _2109 : (isnan(_2109) ? cbMtdParam._m0[26u].x : min(_2109, cbMtdParam._m0[26u].x)))) + ((_2374.z * _2358) * _2388);
    float _3047 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _3058 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _3069 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    bool _2408 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2419;
    _2419.x = _2408 ? ((_815 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3047 : (isnan(_3047) ? 1.0 : min(_3047, 1.0)));
    _2419.y = _2408 ? ((_818 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3058 : (isnan(_3058) ? 1.0 : min(_3058, 1.0)));
    _2419.z = _2408 ? ((_821 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3069 : (isnan(_3069) ? 1.0 : min(_3069, 1.0)));
    payload._m0 = _2419;
}


