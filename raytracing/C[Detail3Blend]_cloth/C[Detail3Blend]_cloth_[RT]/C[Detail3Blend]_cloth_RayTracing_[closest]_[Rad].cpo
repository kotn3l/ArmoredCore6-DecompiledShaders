#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1688;

void main()
{
    float _76 = float(gl_LaunchSizeEXT.y);
    float _106 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _115 = sqrt(((_107 * _107) + (_106 * _106)) + (_108 * _108)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _76)))));
    uvec4 _126 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _127 = _126.y;
    uint _167;
    uint _169;
    uint _170;
    if (_126.x == 0u)
    {
        uint _135 = (_127 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_127 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _161 & 65535u;
            frontier_phi_3_2_ladder_2 = _165;
        }
        else
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _162 >> 16u;
        }
        _167 = frontier_phi_3_2_ladder_1;
        _169 = frontier_phi_3_2_ladder;
        _170 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    uint _178 = _126.w;
    bool _180 = _177 || (_178 == 0u);
    uint _181 = _175 * _167;
    uint _182 = _181 + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 16u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 20u;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((_209 + _181) >> 2u));
    uint _218 = _217.x;
    uint _230 = _174.y;
    bool _231 = _176 == 0u;
    uint _234 = _231 ? 4u : ((_178 != 0u) ? 12u : 8u);
    uvec4 _243 = texelFetch(l_geomAttrib_1, int((((_230 * _167) + 4u) + (_177 ? (_234 + 4u) : _234)) >> 2u));
    uint _244 = _243.x;
    float _248 = float(int(uint(int(_244 << 16u) >> int(16u))));
    float _249 = float(int(uint(int(_244) >> int(16u))));
    uint _250 = _175 * _169;
    uint _251 = _250 + 12u;
    uint _272;
    uint _273;
    uint _274;
    uint _275;
    if (_180)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
        _275 = 16u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
        _275 = 20u;
    }
    uvec4 _281 = texelFetch(l_geomAttrib_0, int((_275 + _250) >> 2u));
    uint _282 = _281.x;
    uint _295 = _231 ? 4u : ((_178 != 0u) ? 12u : 8u);
    uvec4 _302 = texelFetch(l_geomAttrib_1, int((((_230 * _169) + 4u) + (_177 ? (_295 + 4u) : _295)) >> 2u));
    uint _303 = _302.x;
    float _307 = float(int(uint(int(_303 << 16u) >> int(16u))));
    float _308 = float(int(uint(int(_303) >> int(16u))));
    uint _309 = _175 * _170;
    uint _310 = _309 + 12u;
    uint _331;
    uint _332;
    uint _333;
    uint _334;
    if (_180)
    {
        uvec4 _312 = texelFetch(l_geomAttrib_0, int(_310 >> 2u));
        uint _313 = _312.x;
        _331 = _313 & 255u;
        _332 = (_313 >> 8u) & 255u;
        _333 = (_313 >> 16u) & 255u;
        _334 = 16u;
    }
    else
    {
        uint _319 = _310 >> 2u;
        uvec2 _325 = uvec2(texelFetch(l_geomAttrib_0, int(_319)).x, texelFetch(l_geomAttrib_0, int(_319 + 1u)).x);
        uint _326 = _325.x;
        _331 = _326 & 65535u;
        _332 = _326 >> 16u;
        _333 = _325.y & 65535u;
        _334 = 20u;
    }
    uvec4 _340 = texelFetch(l_geomAttrib_0, int((_334 + _309) >> 2u));
    uint _341 = _340.x;
    uint _354 = _231 ? 4u : ((_178 != 0u) ? 12u : 8u);
    uvec4 _361 = texelFetch(l_geomAttrib_1, int((((_230 * _170) + 4u) + (_177 ? (_354 + 4u) : _354)) >> 2u));
    uint _362 = _361.x;
    float _366 = float(int(uint(int(_362 << 16u) >> int(16u))));
    float _367 = float(int(uint(int(_362) >> int(16u))));
    bool _369 = _126.z == 0u;
    float _405;
    float _406;
    float _407;
    if (_369)
    {
        uint _372 = _167 * 3u;
        uvec3 _381 = uvec3(texelFetch(l_geomPositionBuffer, int(_372)).x, texelFetch(l_geomPositionBuffer, int(_372 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_372 + 2u)).x);
        _405 = uintBitsToFloat(_381.x);
        _406 = uintBitsToFloat(_381.y);
        _407 = uintBitsToFloat(_381.z);
    }
    else
    {
        uint _389 = _167 * 2u;
        uvec2 _395 = uvec2(texelFetch(l_geomPositionBuffer, int(_389)).x, texelFetch(l_geomPositionBuffer, int(_389 + 1u)).x);
        uint _396 = _395.x;
        _405 = unpackHalf2x16(_396).x;
        _406 = unpackHalf2x16(_396 >> 16u).x;
        _407 = unpackHalf2x16(_395.y).x;
    }
    float _443;
    float _444;
    float _445;
    if (_369)
    {
        uint _410 = _169 * 3u;
        uvec3 _419 = uvec3(texelFetch(l_geomPositionBuffer, int(_410)).x, texelFetch(l_geomPositionBuffer, int(_410 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_410 + 2u)).x);
        _443 = uintBitsToFloat(_419.x);
        _444 = uintBitsToFloat(_419.y);
        _445 = uintBitsToFloat(_419.z);
    }
    else
    {
        uint _427 = _169 * 2u;
        uvec2 _433 = uvec2(texelFetch(l_geomPositionBuffer, int(_427)).x, texelFetch(l_geomPositionBuffer, int(_427 + 1u)).x);
        uint _434 = _433.x;
        _443 = unpackHalf2x16(_434).x;
        _444 = unpackHalf2x16(_434 >> 16u).x;
        _445 = unpackHalf2x16(_433.y).x;
    }
    float _481;
    float _482;
    float _483;
    if (_369)
    {
        uint _448 = _170 * 3u;
        uvec3 _457 = uvec3(texelFetch(l_geomPositionBuffer, int(_448)).x, texelFetch(l_geomPositionBuffer, int(_448 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_448 + 2u)).x);
        _481 = uintBitsToFloat(_457.x);
        _482 = uintBitsToFloat(_457.y);
        _483 = uintBitsToFloat(_457.z);
    }
    else
    {
        uint _465 = _170 * 2u;
        uvec2 _471 = uvec2(texelFetch(l_geomPositionBuffer, int(_465)).x, texelFetch(l_geomPositionBuffer, int(_465 + 1u)).x);
        uint _472 = _471.x;
        _481 = unpackHalf2x16(_472).x;
        _482 = unpackHalf2x16(_472 >> 16u).x;
        _483 = unpackHalf2x16(_471.y).x;
    }
    float _486 = (1.0 - hit._m0.x) - hit._m0.y;
    float _520 = (_307 - _248) * 0.00048828125;
    float _522 = (_308 - _249) * 0.00048828125;
    float _525 = (_366 - _248) * 0.00048828125;
    float _526 = (_367 - _249) * 0.00048828125;
    float _548 = _443 - _405;
    float _549 = _444 - _406;
    float _550 = _445 - _407;
    float _553 = fma(_550, gl_ObjectToWorldEXT[2u].x, fma(_549, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _548));
    float _556 = fma(_550, gl_ObjectToWorldEXT[2u].y, fma(_549, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _548));
    float _559 = fma(_550, gl_ObjectToWorldEXT[2u].z, fma(_549, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _548));
    float _560 = _481 - _405;
    float _561 = _482 - _406;
    float _562 = _483 - _407;
    float _565 = fma(_562, gl_ObjectToWorldEXT[2u].x, fma(_561, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _560));
    float _568 = fma(_562, gl_ObjectToWorldEXT[2u].y, fma(_561, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _560));
    float _571 = fma(_562, gl_ObjectToWorldEXT[2u].z, fma(_561, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _560));
    float _572 = (((_307 * hit._m0.x) + (_248 * _486)) + (_366 * hit._m0.y)) * 0.00048828125;
    float _573 = (((_308 * hit._m0.x) + (_249 * _486)) + (_367 * hit._m0.y)) * 0.00048828125;
    float _577 = (((float(_206) * _486) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_331) * hit._m0.y);
    float _580 = (((float(_207) * _486) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _583 = (((float(_208) * _486) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _584 = _577 * 0.0078740157186985015869140625;
    float _586 = _580 * 0.0078740157186985015869140625;
    float _587 = _583 * 0.0078740157186985015869140625;
    float _600 = ((((float(_218 & 255u) * _486) + (-127.0)) + (float(_282 & 255u) * hit._m0.x)) + (float(_341 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _601 = ((((float((_218 >> 8u) & 255u) * _486) + (-127.0)) + (float((_282 >> 8u) & 255u) * hit._m0.x)) + (float((_341 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float((_218 >> 16u) & 255u) * _486) + (-127.0)) + (float((_282 >> 16u) & 255u) * hit._m0.x)) + (float((_341 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float(_218 >> 24u) * _486) + (-127.0)) + (float(_282 >> 24u) * hit._m0.x)) + (float(_341 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _613 = ((_601 * _587) - (_602 * _586)) * _603;
    float _614 = ((_602 * _584) - (_600 * _587)) * _603;
    float _615 = ((_600 * _586) - (_601 * _584)) * _603;
    float _619 = inversesqrt(dot(vec3(_613, _614, _615), vec3(_613, _614, _615)));
    uvec2 _634 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_0, int(0u)));
    bool _639 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _692;
    if (_639)
    {
        float _650 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _656 = (_571 * _556) - (_568 * _559);
        float _659 = (_565 * _559) - (_571 * _553);
        float _662 = (_568 * _553) - (_565 * _556);
        float _689 = ((log2((((float(_634.y) * 0.5) * float(_634.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_659 * _659) + (_662 * _662)) + (_656 * _656)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_650 * gl_WorldRayDirectionEXT.x, _650 * gl_WorldRayDirectionEXT.y, _650 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _692 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    }
    else
    {
        _692 = 0.0;
    }
    vec4 _696 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _572) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _573) + cbTextureTilingScale._m0[1u].w), _692);
    float _701 = _696.w;
    float _706 = exp2(log2(1.0 - _701) * 10.0);
    uvec2 _718 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_3, int(0u)));
    float _769;
    if (_639)
    {
        float _729 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _735 = (_571 * _556) - (_568 * _559);
        float _738 = (_565 * _559) - (_571 * _553);
        float _741 = (_568 * _553) - (_565 * _556);
        float _767 = ((log2((((float(_718.y) * 0.5) * float(_718.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_738 * _738) + (_741 * _741)) + (_735 * _735)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_729 * gl_WorldRayDirectionEXT.x, _729 * gl_WorldRayDirectionEXT.y, _729 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _769 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    }
    else
    {
        _769 = 0.0;
    }
    vec4 _772 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _572) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _573) + cbTextureTilingScale._m0[4u].w), _769);
    uvec2 _797 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_1, int(0u)));
    float _848;
    if (_639)
    {
        float _808 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _814 = (_571 * _556) - (_568 * _559);
        float _817 = (_565 * _559) - (_571 * _553);
        float _820 = (_568 * _553) - (_565 * _556);
        float _846 = ((log2((((float(_797.y) * 0.5) * float(_797.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_817 * _817) + (_820 * _820)) + (_814 * _814)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_808 * gl_WorldRayDirectionEXT.x, _808 * gl_WorldRayDirectionEXT.y, _808 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _848 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    }
    else
    {
        _848 = 0.0;
    }
    vec4 _850 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _572) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _573) + cbTextureTilingScale._m0[2u].w), _848);
    float _861 = cbMtdParam._m0[9u].x * _850.x;
    float _862 = cbMtdParam._m0[9u].y * _850.y;
    float _863 = cbMtdParam._m0[9u].z * _850.z;
    float _870 = (((cbMtdParam._m0[10u].x * _772.x) - _861) * _706) + _861;
    float _871 = (((cbMtdParam._m0[10u].y * _772.y) - _862) * _706) + _862;
    float _872 = (((cbMtdParam._m0[10u].z * _772.z) - _863) * _706) + _863;
    float _875 = exp2(log2(_701) * 10.0);
    uvec2 _887 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_2, int(0u)));
    float _938;
    if (_639)
    {
        float _898 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _904 = (_571 * _556) - (_568 * _559);
        float _907 = (_565 * _559) - (_571 * _553);
        float _910 = (_568 * _553) - (_565 * _556);
        float _936 = ((log2((((float(_887.y) * 0.5) * float(_887.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_907 * _907) + (_910 * _910)) + (_904 * _904)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_898 * gl_WorldRayDirectionEXT.x, _898 * gl_WorldRayDirectionEXT.y, _898 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _938 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    }
    else
    {
        _938 = 0.0;
    }
    vec4 _940 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _572) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _573) + cbTextureTilingScale._m0[3u].w), _938);
    uvec2 _974 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_7, int(0u)));
    float _1025;
    if (_639)
    {
        float _985 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _991 = (_571 * _556) - (_568 * _559);
        float _994 = (_565 * _559) - (_571 * _553);
        float _997 = (_568 * _553) - (_565 * _556);
        float _1023 = ((log2((((float(_974.y) * 0.5) * float(_974.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_994 * _994) + (_997 * _997)) + (_991 * _991)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_985 * gl_WorldRayDirectionEXT.x, _985 * gl_WorldRayDirectionEXT.y, _985 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _1025 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    }
    else
    {
        _1025 = 0.0;
    }
    vec4 _1027 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _572) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _573) + cbTextureTilingScale._m0[0u].w), _1025);
    float _1034 = (((((cbMtdParam._m0[11u].x * _940.x) - _870) * _875) + _870) * 4.55000019073486328125) * _1027.x;
    float _1036 = (((((cbMtdParam._m0[11u].y * _940.y) - _871) * _875) + _871) * 4.55000019073486328125) * _1027.y;
    float _1038 = (((((cbMtdParam._m0[11u].z * _940.z) - _872) * _875) + _872) * 4.55000019073486328125) * _1027.z;
    uvec2 _1054 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_5, int(0u)));
    float _1105;
    if (_639)
    {
        float _1065 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1071 = (_571 * _556) - (_568 * _559);
        float _1074 = (_565 * _559) - (_571 * _553);
        float _1077 = (_568 * _553) - (_565 * _556);
        float _1103 = ((log2((((float(_1054.y) * 0.5) * float(_1054.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_1074 * _1074) + (_1077 * _1077)) + (_1071 * _1071)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1065 * gl_WorldRayDirectionEXT.x, _1065 * gl_WorldRayDirectionEXT.y, _1065 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _1105 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    }
    else
    {
        _1105 = 0.0;
    }
    vec4 _1107 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _572) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _573) + cbTextureTilingScale._m0[5u].w), _1105);
    uvec2 _1125 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_6, int(0u)));
    float _1176;
    if (_639)
    {
        float _1136 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1142 = (_571 * _556) - (_568 * _559);
        float _1145 = (_565 * _559) - (_571 * _553);
        float _1148 = (_568 * _553) - (_565 * _556);
        float _1174 = ((log2((((float(_1125.y) * 0.5) * float(_1125.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_1145 * _1145) + (_1148 * _1148)) + (_1142 * _1142)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1136 * gl_WorldRayDirectionEXT.x, _1136 * gl_WorldRayDirectionEXT.y, _1136 * gl_WorldRayDirectionEXT.z), vec3(_584, _586, _587))));
        _1176 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
    }
    else
    {
        _1176 = 0.0;
    }
    vec4 _1178 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _572) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _573) + cbTextureTilingScale._m0[6u].w), _1176);
    float _1180 = _1178.x;
    float _1181 = _1178.y;
    float _1184 = cbMtdParam._m0[12u].x + _1178.z;
    float _1187 = (((cbMtdParam._m0[12u].y + _1107.z) - _1184) * _706) + _1184;
    uvec2 _1199 = uvec2(textureSize(C_Detail3Blend_snp_0_Texture2D_8, int(0u)));
    float _1203 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1204 = _1203 * gl_WorldRayDirectionEXT.x;
    float _1205 = _1203 * gl_WorldRayDirectionEXT.y;
    float _1206 = _1203 * gl_WorldRayDirectionEXT.z;
    float _1250;
    if (_639)
    {
        float _1216 = (_571 * _556) - (_568 * _559);
        float _1219 = (_565 * _559) - (_571 * _553);
        float _1222 = (_568 * _553) - (_565 * _556);
        float _1248 = ((log2((((float(_1199.y) * 0.5) * float(_1199.x)) * abs((_526 * _520) - (_525 * _522))) / (sqrt(((_1219 * _1219) + (_1222 * _1222)) + (_1216 * _1216)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_1204, _1205, _1206), vec3(_584, _586, _587))));
        _1250 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
    }
    else
    {
        _1250 = 0.0;
    }
    vec4 _1252 = textureLod(sampler2D(C_Detail3Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _572) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _573) + cbTextureTilingScale._m0[7u].w), _1250);
    float _1265 = ((((_1252.z - _1187) + cbMtdParam._m0[13u].x) * _875) + _1187) * _696.z;
    float _1276 = ((_1107.x - _1180) * _706) + _1180;
    float _1277 = ((_1107.y - _1181) * _706) + _1181;
    float _1286 = ((((_1252.x - _1276) * _875) + _1276) * 2.0) + (-1.0);
    float _1287 = ((((_1252.y - _1277) * _875) + _1277) * 2.0) + (-1.0);
    float _1288 = dot(vec2(_1286, _1287), vec2(_1286, _1287));
    float _1798 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
    float _1293 = sqrt(1.0 - (isnan(1.0) ? _1798 : (isnan(_1798) ? 1.0 : min(_1798, 1.0))));
    float _1296 = _1286 + (cbMtdParam._m0[12u].z * ((_696.x * 2.0) + (-1.0)));
    float _1297 = _1287 + (cbMtdParam._m0[12u].z * ((_696.y * 2.0) + (-1.0)));
    float _1300 = fma(_1293, _584, fma(_1297, _600, (_619 * _613) * _1296));
    float _1303 = fma(_1293, _586, fma(_1297, _601, (_619 * _614) * _1296));
    float _1306 = fma(_1293, _587, fma(_1297, _602, (_619 * _615) * _1296));
    float _1310 = inversesqrt(dot(vec3(_1300, _1303, _1306), vec3(_1300, _1303, _1306)));
    float _1311 = _1310 * _1300;
    float _1312 = _1310 * _1303;
    float _1313 = _1310 * _1306;
    float _1325 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1326 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1327 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1328 = (-0.0) - _1204;
    float _1330 = (-0.0) - _1205;
    float _1331 = (-0.0) - _1206;
    float _1337 = float(gl_LaunchIDEXT.x);
    float _1338 = float(gl_LaunchIDEXT.y);
    float _1341 = float(gl_LaunchSizeEXT.x);
    float _1355 = fract(fract(sin(dot(vec2(_1337 / _1341, _1338 / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1368 = fract(fract(sin(dot(vec2((_1337 + 128.0) / _1341, (_1338 + 128.0) / _76), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1369 = 1.0 - cbMtdParam._m0[12u].w;
    float _1370 = _1034 * _1369;
    float _1371 = _1036 * _1369;
    float _1372 = _1038 * _1369;
    float _1377 = (_1034 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1378 = (_1036 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1379 = (_1038 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].w;
    float _1380 = _1377 + 0.039999999105930328369140625;
    float _1382 = _1378 + 0.039999999105930328369140625;
    float _1383 = _1379 + 0.039999999105930328369140625;
    _68._m0 = 1u;
    uvec4 _1393 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1394 = _1393.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1394, _1393.w, _1394, vec3(_1325, _1326, _1327), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    if (_68._m0 == 0u)
    {
        float _1415 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1311, _1312, _1313));
        float _1809 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1418 = isnan(1.0) ? _1809 : (isnan(_1809) ? 1.0 : min(_1809, 1.0));
        float _1437 = 1.0 - (sqrt((_1265 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1438 = _1437 * _1437;
        float _1439 = g_sceneCB._m0[4u].x - _1204;
        float _1440 = g_sceneCB._m0[4u].y - _1205;
        float _1441 = g_sceneCB._m0[4u].z - _1206;
        float _1445 = inversesqrt(dot(vec3(_1439, _1440, _1441), vec3(_1439, _1440, _1441)));
        float _1446 = _1445 * _1439;
        float _1447 = _1445 * _1440;
        float _1448 = _1445 * _1441;
        float _1449 = dot(vec3(_1311, _1312, _1313), vec3(g_sceneCB._m0[4u].xyz));
        float _1820 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1452 = isnan(1.0) ? _1820 : (isnan(_1820) ? 1.0 : min(_1820, 1.0));
        float _1453 = dot(vec3(_1311, _1312, _1313), vec3(_1328, _1330, _1331));
        float _1831 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1456 = isnan(1.0) ? _1831 : (isnan(_1831) ? 1.0 : min(_1831, 1.0));
        float _1457 = dot(vec3(_1311, _1312, _1313), vec3(_1446, _1447, _1448));
        float _1842 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1460 = isnan(1.0) ? _1842 : (isnan(_1842) ? 1.0 : min(_1842, 1.0));
        float _1461 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1446, _1447, _1448));
        float _1853 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = _1438 * _1438;
        float _1469 = ((_1460 * _1460) * (_1465 + (-1.0))) + 1.0;
        float _1478 = exp2(log2(1.0 - (isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0)))) * 5.0);
        float _1489 = 1.0 - _1438;
        float _1500 = (0.5 / (((_1456 * ((_1452 * _1489) + _1438)) + 9.9999999392252902907785028219223e-09) + (((_1456 * _1489) + _1438) * _1452))) * _1452;
        float _1864 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1502 = (isnan(1.0) ? _1864 : (isnan(_1864) ? 1.0 : min(_1864, 1.0))) * (_1465 / ((_1469 * _1469) * 3.141590118408203125));
        _1509 = ((_1370 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1418;
        _1510 = ((_1371 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1418;
        _1511 = ((_1372 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1418;
        _1512 = (((_1478 * (0.959999978542327880859375 - _1377)) + _1380) * g_sceneCB._m0[5u].x) * _1502;
        _1513 = (((_1478 * (0.959999978542327880859375 - _1378)) + _1382) * g_sceneCB._m0[5u].y) * _1502;
        _1514 = (((_1478 * (0.959999978542327880859375 - _1379)) + _1383) * g_sceneCB._m0[5u].z) * _1502;
    }
    else
    {
        _1509 = 0.0;
        _1510 = 0.0;
        _1511 = 0.0;
        _1512 = 0.0;
        _1513 = 0.0;
        _1514 = 0.0;
    }
    bool _1516 = abs(_1312) < 0.89999997615814208984375;
    float _1518 = float(_1516);
    float _1519 = _1516 ? 0.0 : 1.0;
    float _1522 = (_1518 * _1313) - (_1519 * _1312);
    float _1523 = _1519 * _1311;
    float _1525 = (-0.0) - (_1311 * _1518);
    float _1529 = inversesqrt(dot(vec3(_1522, _1523, _1525), vec3(_1522, _1523, _1525)));
    float _1530 = _1522 * _1529;
    float _1531 = _1523 * _1529;
    float _1532 = _1529 * _1525;
    float _1535 = (_1531 * _1313) - (_1532 * _1312);
    float _1538 = (_1532 * _1311) - (_1530 * _1313);
    float _1541 = (_1530 * _1312) - (_1531 * _1311);
    float _1543;
    float _1551;
    float _1542 = 0.0;
    uint _1544 = 0u;
    float _1548;
    bool _1550;
    for (;;)
    {
        _1548 = (float(_1544) + _1355) * 0.03125;
        _1550 = _1544 == 0u;
        float frontier_phi_43_pred;
        if (_1550)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1693;
            float _1694;
            uint _1696;
            _1693 = 0.0;
            _1694 = 0.5;
            _1696 = _1544;
            float _1552;
            for (;;)
            {
                _1552 = ((_1696 & 1u) != 0u) ? (_1694 + _1693) : _1693;
                uint _1697 = _1696 >> 1u;
                if (_1697 == 0u)
                {
                    break;
                }
                else
                {
                    _1693 = _1552;
                    _1694 *= 0.5;
                    _1696 = _1697;
                }
            }
            frontier_phi_43_pred = _1552;
        }
        _1551 = frontier_phi_43_pred;
        float _1553 = _1551 + _1368;
        float _1557 = sqrt(_1548);
        float _1558 = ((_1553 > 1.0) ? (_1553 + (-1.0)) : _1553) * 6.283185482025146484375;
        float _1561 = cos(_1558) * _1557;
        float _1563 = sin(_1558) * _1557;
        float _1565 = sqrt(1.0 - _1548);
        float _1578 = ((_1565 * _1311) + (_1561 * _1535)) + (_1563 * _1530);
        float _1579 = ((_1565 * _1312) + (_1561 * _1538)) + (_1563 * _1531);
        float _1580 = ((_1565 * _1313) + (_1561 * _1541)) + (_1563 * _1532);
        _67._m0 = 1u;
        uvec4 _1584 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1585 = _1584.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1585, _1584.w, _1585, vec3(_1325, _1326, _1327), 9.9999997473787516355514526367188e-05, vec3(_1578, _1579, _1580), 10000.0, 1);
        float _1591 = dot(vec3(_1311, _1312, _1313), vec3(_1578, _1579, _1580));
        float _1875 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1594 = isnan(1.0) ? _1875 : (isnan(_1875) ? 1.0 : min(_1875, 1.0));
        _1543 = ((float(_67._m0 == 0u) * _1594) / (_1594 * 0.3183098733425140380859375)) + _1542;
        uint _1545 = _1544 + 1u;
        if (_1545 == 32u)
        {
            break;
        }
        else
        {
            _1542 = _1543;
            _1544 = _1545;
            continue;
        }
    }
    float _1602 = _1543 * 0.009947183541953563690185546875;
    float _1607 = dot(vec3(_1204, _1205, _1206), vec3(_1311, _1312, _1313)) * 2.0;
    vec4 _1622 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1204 - (_1607 * _1311), _1205 - (_1607 * _1312), _1206 - (_1607 * _1313)), 4.0 - (_1265 * 8.0));
    float _1627 = dot(vec3(_1328, _1330, _1331), vec3(_1311, _1312, _1313));
    float _1886 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
    float _1637 = exp2(log2(1.0 - (isnan(1.0) ? _1886 : (isnan(_1886) ? 1.0 : min(_1886, 1.0)))) * 5.0);
    vec4 _1649 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1311, _1312, _1313), 0.0);
    float _1660 = (_1512 + _1509) + (((_1649.x * _1370) + (((_1637 * (0.959999978542327880859375 - _1377)) + _1380) * _1622.x)) * _1602);
    float _1664 = (_1513 + _1510) + (((_1649.y * _1371) + (((_1637 * (0.959999978542327880859375 - _1378)) + _1382) * _1622.y)) * _1602);
    float _1668 = (_1514 + _1511) + (((_1649.z * _1372) + (((_1637 * (0.959999978542327880859375 - _1379)) + _1383) * _1622.z)) * _1602);
    float _1897 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
    float _1908 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
    float _1919 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
    bool _1676 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1687;
    _1687.x = _1676 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1897 : (isnan(_1897) ? 1.0 : min(_1897, 1.0)));
    _1687.y = _1676 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1908 : (isnan(_1908) ? 1.0 : min(_1908, 1.0)));
    _1687.z = _1676 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1919 : (isnan(_1919) ? 1.0 : min(_1919, 1.0)));
    payload._m0 = _1687;
}


