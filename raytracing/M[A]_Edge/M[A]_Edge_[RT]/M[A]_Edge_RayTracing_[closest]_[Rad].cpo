#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _44
{
    vec3 _m0;
};

struct _48
{
    vec2 _m0;
};

struct _51
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _44 payload;
hitAttributeEXT _48 hit;
layout(location = 1) rayPayloadEXT _51 _53;
layout(location = 2) rayPayloadEXT _51 _54;

vec3 _917;

void main()
{
    float _62 = float(gl_LaunchSizeEXT.y);
    float _92 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _93 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _94 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _112 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _113 = _112.y;
    uint _153;
    uint _155;
    uint _156;
    if (_112.x == 0u)
    {
        uint _121 = (_113 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _130 = uvec3(texelFetch(l_geomIndexBuffer, int(_121)).x, texelFetch(l_geomIndexBuffer, int(_121 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_121 + 2u)).x);
        _153 = _130.x;
        _155 = _130.y;
        _156 = _130.z;
    }
    else
    {
        uint _134 = uint(gl_PrimitiveID) * 6u;
        uint _136 = _134 & 4294967292u;
        uint _139 = (_113 + _136) >> 2u;
        uvec2 _146 = uvec2(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x);
        uint _147 = _146.x;
        uint _148 = _146.y;
        uint _150 = _147 >> 16u;
        uint _151 = _148 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_136 == _134)
        {
            frontier_phi_3_2_ladder = _151;
            frontier_phi_3_2_ladder_1 = _150;
            frontier_phi_3_2_ladder_2 = _147 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _148 >> 16u;
            frontier_phi_3_2_ladder_1 = _151;
            frontier_phi_3_2_ladder_2 = _150;
        }
        _153 = frontier_phi_3_2_ladder_2;
        _155 = frontier_phi_3_2_ladder_1;
        _156 = frontier_phi_3_2_ladder;
    }
    uvec4 _160 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _161 = _160.x;
    uint _162 = _160.z;
    bool _163 = _162 != 0u;
    bool _165 = _112.w == 0u;
    bool _166 = _163 || _165;
    uint _168 = (_161 * _153) + 12u;
    uint _192;
    uint _193;
    uint _194;
    uint _195;
    if (_166)
    {
        uvec4 _171 = texelFetch(l_geomAttrib_0, int(_168 >> 2u));
        uint _172 = _171.x;
        _192 = _172 & 255u;
        _193 = (_172 >> 8u) & 255u;
        _194 = (_172 >> 16u) & 255u;
        _195 = 20u;
    }
    else
    {
        uint _180 = _168 >> 2u;
        uvec2 _186 = uvec2(texelFetch(l_geomAttrib_0, int(_180)).x, texelFetch(l_geomAttrib_0, int(_180 + 1u)).x);
        uint _187 = _186.x;
        _192 = _187 & 65535u;
        _193 = _187 >> 16u;
        _194 = _186.y & 65535u;
        _195 = 24u;
    }
    bool _201 = _162 == 0u;
    uint _202;
    if (_201)
    {
        _202 = _195;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_165)
        {
            frontier_phi_9_10_ladder = _195 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _195 + 8u;
        }
        _202 = frontier_phi_9_10_ladder;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((((_161 * _153) + 4u) + (_163 ? (_202 + 4u) : _202)) >> 2u));
    uint _214 = _213.x;
    float _218 = float(int(uint(int(_214 << 16u) >> int(16u))));
    float _219 = float(int(uint(int(_214) >> int(16u))));
    uint _221 = (_161 * _155) + 12u;
    uint _242;
    uint _243;
    uint _244;
    uint _245;
    if (_166)
    {
        uvec4 _223 = texelFetch(l_geomAttrib_0, int(_221 >> 2u));
        uint _224 = _223.x;
        _242 = _224 & 255u;
        _243 = (_224 >> 8u) & 255u;
        _244 = (_224 >> 16u) & 255u;
        _245 = 20u;
    }
    else
    {
        uint _230 = _221 >> 2u;
        uvec2 _236 = uvec2(texelFetch(l_geomAttrib_0, int(_230)).x, texelFetch(l_geomAttrib_0, int(_230 + 1u)).x);
        uint _237 = _236.x;
        _242 = _237 & 65535u;
        _243 = _237 >> 16u;
        _244 = _236.y & 65535u;
        _245 = 24u;
    }
    uint _249;
    if (_201)
    {
        _249 = _245;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_165)
        {
            frontier_phi_16_17_ladder = _245 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _245 + 8u;
        }
        _249 = frontier_phi_16_17_ladder;
    }
    uvec4 _258 = texelFetch(l_geomAttrib_0, int((((_161 * _155) + 4u) + (_163 ? (_249 + 4u) : _249)) >> 2u));
    uint _259 = _258.x;
    float _263 = float(int(uint(int(_259 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_259) >> int(16u))));
    uint _266 = (_161 * _156) + 12u;
    uint _287;
    uint _288;
    uint _289;
    uint _290;
    if (_166)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_266 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
        _290 = 20u;
    }
    else
    {
        uint _275 = _266 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
        _290 = 24u;
    }
    uint _294;
    if (_201)
    {
        _294 = _290;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_165)
        {
            frontier_phi_23_24_ladder = _290 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _290 + 8u;
        }
        _294 = frontier_phi_23_24_ladder;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int((((_161 * _156) + 4u) + (_163 ? (_294 + 4u) : _294)) >> 2u));
    uint _304 = _303.x;
    float _308 = float(int(uint(int(_304 << 16u) >> int(16u))));
    float _309 = float(int(uint(int(_304) >> int(16u))));
    bool _311 = _112.z == 0u;
    float _347;
    float _348;
    float _349;
    if (_311)
    {
        uint _314 = _153 * 3u;
        uvec3 _323 = uvec3(texelFetch(l_geomPositionBuffer, int(_314)).x, texelFetch(l_geomPositionBuffer, int(_314 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_314 + 2u)).x);
        _347 = uintBitsToFloat(_323.x);
        _348 = uintBitsToFloat(_323.y);
        _349 = uintBitsToFloat(_323.z);
    }
    else
    {
        uint _331 = _153 * 2u;
        uvec2 _337 = uvec2(texelFetch(l_geomPositionBuffer, int(_331)).x, texelFetch(l_geomPositionBuffer, int(_331 + 1u)).x);
        uint _338 = _337.x;
        _347 = unpackHalf2x16(_338).x;
        _348 = unpackHalf2x16(_338 >> 16u).x;
        _349 = unpackHalf2x16(_337.y).x;
    }
    float _385;
    float _386;
    float _387;
    if (_311)
    {
        uint _352 = _155 * 3u;
        uvec3 _361 = uvec3(texelFetch(l_geomPositionBuffer, int(_352)).x, texelFetch(l_geomPositionBuffer, int(_352 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_352 + 2u)).x);
        _385 = uintBitsToFloat(_361.x);
        _386 = uintBitsToFloat(_361.y);
        _387 = uintBitsToFloat(_361.z);
    }
    else
    {
        uint _369 = _155 * 2u;
        uvec2 _375 = uvec2(texelFetch(l_geomPositionBuffer, int(_369)).x, texelFetch(l_geomPositionBuffer, int(_369 + 1u)).x);
        uint _376 = _375.x;
        _385 = unpackHalf2x16(_376).x;
        _386 = unpackHalf2x16(_376 >> 16u).x;
        _387 = unpackHalf2x16(_375.y).x;
    }
    float _423;
    float _424;
    float _425;
    if (_311)
    {
        uint _390 = _156 * 3u;
        uvec3 _399 = uvec3(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_390 + 2u)).x);
        _423 = uintBitsToFloat(_399.x);
        _424 = uintBitsToFloat(_399.y);
        _425 = uintBitsToFloat(_399.z);
    }
    else
    {
        uint _407 = _156 * 2u;
        uvec2 _413 = uvec2(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x);
        uint _414 = _413.x;
        _423 = unpackHalf2x16(_414).x;
        _424 = unpackHalf2x16(_414 >> 16u).x;
        _425 = unpackHalf2x16(_413.y).x;
    }
    float _428 = (1.0 - hit._m0.x) - hit._m0.y;
    float _469 = _385 - _347;
    float _470 = _386 - _348;
    float _471 = _387 - _349;
    float _474 = fma(_471, gl_ObjectToWorldEXT[2u].x, fma(_470, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _469));
    float _477 = fma(_471, gl_ObjectToWorldEXT[2u].y, fma(_470, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _469));
    float _480 = fma(_471, gl_ObjectToWorldEXT[2u].z, fma(_470, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _469));
    float _481 = _423 - _347;
    float _482 = _424 - _348;
    float _483 = _425 - _349;
    float _486 = fma(_483, gl_ObjectToWorldEXT[2u].x, fma(_482, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _481));
    float _489 = fma(_483, gl_ObjectToWorldEXT[2u].y, fma(_482, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _481));
    float _492 = fma(_483, gl_ObjectToWorldEXT[2u].z, fma(_482, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _481));
    float _499 = (((float(_192) * _428) + (-127.0)) + (float(_242) * hit._m0.x)) + (float(_287) * hit._m0.y);
    float _502 = (((float(_193) * _428) + (-127.0)) + (float(_243) * hit._m0.x)) + (float(_288) * hit._m0.y);
    float _505 = (((float(_194) * _428) + (-127.0)) + (float(_244) * hit._m0.x)) + (float(_289) * hit._m0.y);
    float _506 = _499 * 0.0078740157186985015869140625;
    float _508 = _502 * 0.0078740157186985015869140625;
    float _509 = _505 * 0.0078740157186985015869140625;
    uvec2 _521 = uvec2(textureSize(M_A_Edge_snp_0_Texture2D_0, int(0u)));
    float _530 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _531 = _530 * gl_WorldRayDirectionEXT.x;
    float _532 = _530 * gl_WorldRayDirectionEXT.y;
    float _533 = _530 * gl_WorldRayDirectionEXT.z;
    float _585;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _547 = (_492 * _477) - (_489 * _480);
        float _550 = (_486 * _480) - (_492 * _474);
        float _553 = (_489 * _474) - (_486 * _477);
        float _582 = ((log2((((float(_521.y) * 0.5) * float(_521.x)) * abs((((_309 - _219) * (_263 - _218)) - ((_308 - _218) * (_264 - _219))) * 2.384185791015625e-07)) / (sqrt(((_550 * _550) + (_553 * _553)) + (_547 * _547)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_93 * _93) + (_92 * _92)) + (_94 * _94)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _62)))))) / abs(dot(vec3(_531, _532, _533), vec3(_506, _508, _509))));
        _585 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    }
    else
    {
        _585 = 0.0;
    }
    vec4 _589 = textureLod(sampler2D(M_A_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_263 * hit._m0.x) + (_218 * _428)) + (_308 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_264 * hit._m0.x) + (_219 * _428)) + (_309 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _585);
    float _591 = _589.x;
    float _592 = _589.y;
    float _593 = _589.z;
    float _597 = inversesqrt(dot(vec3(_506, _508, _509), vec3(_506, _508, _509)));
    float _598 = _597 * _506;
    float _599 = _597 * _508;
    float _600 = _597 * _509;
    float _612 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _613 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _614 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _615 = (-0.0) - _531;
    float _617 = (-0.0) - _532;
    float _618 = (-0.0) - _533;
    float _624 = float(gl_LaunchIDEXT.x);
    float _625 = float(gl_LaunchIDEXT.y);
    float _628 = float(gl_LaunchSizeEXT.x);
    float _642 = fract(fract(sin(dot(vec2(_624 / _628, _625 / _62), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _655 = fract(fract(sin(dot(vec2((_624 + 128.0) / _628, (_625 + 128.0) / _62), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _54._m0 = 1u;
    uvec4 _665 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _666 = _665.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _666, _665.w, _666, vec3(_612, _613, _614), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _746;
    float _747;
    float _748;
    float _749;
    float _750;
    float _751;
    if (_54._m0 == 0u)
    {
        float _687 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_598, _599, _600));
        float _996 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
        float _690 = isnan(1.0) ? _996 : (isnan(_996) ? 1.0 : min(_996, 1.0));
        float _701 = g_sceneCB._m0[4u].x - _531;
        float _702 = g_sceneCB._m0[4u].y - _532;
        float _703 = g_sceneCB._m0[4u].z - _533;
        float _707 = inversesqrt(dot(vec3(_701, _702, _703), vec3(_701, _702, _703)));
        float _711 = dot(vec3(_598, _599, _600), vec3(g_sceneCB._m0[4u].xyz));
        float _1007 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
        float _714 = isnan(1.0) ? _1007 : (isnan(_1007) ? 1.0 : min(_1007, 1.0));
        float _715 = dot(vec3(_598, _599, _600), vec3(_615, _617, _618));
        float _1018 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
        float _719 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_701 * _707, _702 * _707, _703 * _707));
        float _1029 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
        float _730 = (exp2(log2(1.0 - (isnan(1.0) ? _1029 : (isnan(_1029) ? 1.0 : min(_1029, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _736 = (0.5 / ((_714 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1018 : (isnan(_1018) ? 1.0 : min(_1018, 1.0))))) * _714;
        float _1040 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
        float _738 = (isnan(1.0) ? _1040 : (isnan(_1040) ? 1.0 : min(_1040, 1.0))) * 0.31831014156341552734375;
        _746 = ((_591 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _690;
        _747 = ((_592 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _690;
        _748 = ((_593 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _690;
        _749 = (_730 * g_sceneCB._m0[5u].x) * _738;
        _750 = (_730 * g_sceneCB._m0[5u].y) * _738;
        _751 = (_730 * g_sceneCB._m0[5u].z) * _738;
    }
    else
    {
        _746 = 0.0;
        _747 = 0.0;
        _748 = 0.0;
        _749 = 0.0;
        _750 = 0.0;
        _751 = 0.0;
    }
    bool _753 = abs(_599) < 0.89999997615814208984375;
    float _755 = float(_753);
    float _756 = _753 ? 0.0 : 1.0;
    float _759 = (_755 * _600) - (_756 * _599);
    float _760 = _756 * _598;
    float _762 = (-0.0) - (_598 * _755);
    float _766 = inversesqrt(dot(vec3(_759, _760, _762), vec3(_759, _760, _762)));
    float _767 = _759 * _766;
    float _768 = _760 * _766;
    float _769 = _766 * _762;
    float _772 = (_768 * _600) - (_769 * _599);
    float _775 = (_769 * _598) - (_767 * _600);
    float _778 = (_767 * _599) - (_768 * _598);
    float _780;
    float _788;
    float _779 = 0.0;
    uint _781 = 0u;
    float _785;
    bool _787;
    for (;;)
    {
        _785 = (float(_781) + _642) * 0.03125;
        _787 = _781 == 0u;
        float frontier_phi_41_pred;
        if (_787)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _922;
            float _923;
            uint _925;
            _922 = 0.0;
            _923 = 0.5;
            _925 = _781;
            float _789;
            for (;;)
            {
                _789 = ((_925 & 1u) != 0u) ? (_923 + _922) : _922;
                uint _926 = _925 >> 1u;
                if (_926 == 0u)
                {
                    break;
                }
                else
                {
                    _922 = _789;
                    _923 *= 0.5;
                    _925 = _926;
                }
            }
            frontier_phi_41_pred = _789;
        }
        _788 = frontier_phi_41_pred;
        float _790 = _788 + _655;
        float _795 = sqrt(_785);
        float _796 = ((_790 > 1.0) ? (_790 + (-1.0)) : _790) * 6.283185482025146484375;
        float _799 = cos(_796) * _795;
        float _801 = sin(_796) * _795;
        float _803 = sqrt(1.0 - _785);
        float _816 = ((_803 * _598) + (_799 * _772)) + (_801 * _767);
        float _817 = ((_803 * _599) + (_799 * _775)) + (_801 * _768);
        float _818 = ((_803 * _600) + (_799 * _778)) + (_801 * _769);
        _53._m0 = 1u;
        uvec4 _822 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _823 = _822.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _823, _822.w, _823, vec3(_612, _613, _614), 9.9999997473787516355514526367188e-05, vec3(_816, _817, _818), 10000.0, 1);
        float _829 = dot(vec3(_598, _599, _600), vec3(_816, _817, _818));
        float _1051 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
        float _832 = isnan(1.0) ? _1051 : (isnan(_1051) ? 1.0 : min(_1051, 1.0));
        _780 = ((float(_53._m0 == 0u) * _832) / (_832 * 0.3183098733425140380859375)) + _779;
        uint _782 = _781 + 1u;
        if (_782 == 32u)
        {
            break;
        }
        else
        {
            _779 = _780;
            _781 = _782;
            continue;
        }
    }
    float _840 = _780 * 0.009947183541953563690185546875;
    float _845 = dot(vec3(_531, _532, _533), vec3(_598, _599, _600)) * 2.0;
    vec4 _857 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_531 - (_845 * _598), _532 - (_845 * _599), _533 - (_845 * _600)), 4.0);
    float _862 = dot(vec3(_615, _617, _618), vec3(_598, _599, _600));
    float _1062 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _871 = (exp2(log2(1.0 - (isnan(1.0) ? _1062 : (isnan(_1062) ? 1.0 : min(_1062, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _877 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_598, _599, _600), 0.0);
    float _888 = (_749 + _746) + (((_877.x * _591) + (_871 * _857.x)) * _840);
    float _892 = (_750 + _747) + (((_877.y * _592) + (_871 * _857.y)) * _840);
    float _896 = (_751 + _748) + (((_877.z * _593) + (_871 * _857.z)) * _840);
    float _1073 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _1084 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _1095 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    bool _905 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _916;
    _916.x = _905 ? ((_499 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1073 : (isnan(_1073) ? 1.0 : min(_1073, 1.0)));
    _916.y = _905 ? ((_502 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0)));
    _916.z = _905 ? ((_505 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0)));
    payload._m0 = _916;
}


