#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2225;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _246 = ((_187 + 4u) + (_183 ? (_239 + 4u) : _239)) >> 2u;
    uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
    uint _253 = _252.x;
    uint _254 = _252.y;
    float _258 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _259 = float(int(uint(int(_253) >> int(16u))));
    float _263 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_254) >> int(16u))));
    uint _265 = _181 * _175;
    uint _266 = _265 + 12u;
    uint _287;
    uint _288;
    uint _289;
    uint _290;
    if (_186)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_266 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
        _290 = 16u;
    }
    else
    {
        uint _275 = _266 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
        _290 = 20u;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int((_290 + _265) >> 2u));
    uint _297 = _296.x;
    uint _309;
    if (_238)
    {
        _309 = _290 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _290 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _290 + 12u;
        }
        _309 = frontier_phi_16_17_ladder;
    }
    uint _316 = ((_265 + 4u) + (_183 ? (_309 + 4u) : _309)) >> 2u;
    uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
    uint _323 = _322.x;
    uint _324 = _322.y;
    float _328 = float(int(uint(int(_323 << 16u) >> int(16u))));
    float _329 = float(int(uint(int(_323) >> int(16u))));
    float _333 = float(int(uint(int(_324 << 16u) >> int(16u))));
    float _334 = float(int(uint(int(_324) >> int(16u))));
    uint _335 = _181 * _176;
    uint _336 = _335 + 12u;
    uint _357;
    uint _358;
    uint _359;
    uint _360;
    if (_186)
    {
        uvec4 _338 = texelFetch(l_geomAttrib_0, int(_336 >> 2u));
        uint _339 = _338.x;
        _357 = _339 & 255u;
        _358 = (_339 >> 8u) & 255u;
        _359 = (_339 >> 16u) & 255u;
        _360 = 16u;
    }
    else
    {
        uint _345 = _336 >> 2u;
        uvec2 _351 = uvec2(texelFetch(l_geomAttrib_0, int(_345)).x, texelFetch(l_geomAttrib_0, int(_345 + 1u)).x);
        uint _352 = _351.x;
        _357 = _352 & 65535u;
        _358 = _352 >> 16u;
        _359 = _351.y & 65535u;
        _360 = 20u;
    }
    uvec4 _366 = texelFetch(l_geomAttrib_0, int((_360 + _335) >> 2u));
    uint _367 = _366.x;
    uint _379;
    if (_238)
    {
        _379 = _360 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _360 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _360 + 12u;
        }
        _379 = frontier_phi_23_24_ladder;
    }
    uint _386 = ((_335 + 4u) + (_183 ? (_379 + 4u) : _379)) >> 2u;
    uvec2 _392 = uvec2(texelFetch(l_geomAttrib_0, int(_386)).x, texelFetch(l_geomAttrib_0, int(_386 + 1u)).x);
    uint _393 = _392.x;
    uint _394 = _392.y;
    float _398 = float(int(uint(int(_393 << 16u) >> int(16u))));
    float _399 = float(int(uint(int(_393) >> int(16u))));
    float _403 = float(int(uint(int(_394 << 16u) >> int(16u))));
    float _404 = float(int(uint(int(_394) >> int(16u))));
    bool _406 = _132.z == 0u;
    float _442;
    float _443;
    float _444;
    if (_406)
    {
        uint _409 = _173 * 3u;
        uvec3 _418 = uvec3(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_409 + 2u)).x);
        _442 = uintBitsToFloat(_418.x);
        _443 = uintBitsToFloat(_418.y);
        _444 = uintBitsToFloat(_418.z);
    }
    else
    {
        uint _426 = _173 * 2u;
        uvec2 _432 = uvec2(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x);
        uint _433 = _432.x;
        _442 = unpackHalf2x16(_433).x;
        _443 = unpackHalf2x16(_433 >> 16u).x;
        _444 = unpackHalf2x16(_432.y).x;
    }
    float _480;
    float _481;
    float _482;
    if (_406)
    {
        uint _447 = _175 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _175 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _518;
    float _519;
    float _520;
    if (_406)
    {
        uint _485 = _176 * 3u;
        uvec3 _494 = uvec3(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_485 + 2u)).x);
        _518 = uintBitsToFloat(_494.x);
        _519 = uintBitsToFloat(_494.y);
        _520 = uintBitsToFloat(_494.z);
    }
    else
    {
        uint _502 = _176 * 2u;
        uvec2 _508 = uvec2(texelFetch(l_geomPositionBuffer, int(_502)).x, texelFetch(l_geomPositionBuffer, int(_502 + 1u)).x);
        uint _509 = _508.x;
        _518 = unpackHalf2x16(_509).x;
        _519 = unpackHalf2x16(_509 >> 16u).x;
        _520 = unpackHalf2x16(_508.y).x;
    }
    float _523 = (1.0 - hit._m0.x) - hit._m0.y;
    float _567 = (_328 - _258) * 0.00048828125;
    float _569 = (_329 - _259) * 0.00048828125;
    float _572 = (_398 - _258) * 0.00048828125;
    float _573 = (_399 - _259) * 0.00048828125;
    float _576 = (_333 - _263) * 0.00048828125;
    float _577 = (_334 - _264) * 0.00048828125;
    float _580 = (_403 - _263) * 0.00048828125;
    float _581 = (_404 - _264) * 0.00048828125;
    float _603 = _480 - _442;
    float _604 = _481 - _443;
    float _605 = _482 - _444;
    float _608 = fma(_605, gl_ObjectToWorldEXT[2u].x, fma(_604, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _603));
    float _611 = fma(_605, gl_ObjectToWorldEXT[2u].y, fma(_604, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _603));
    float _614 = fma(_605, gl_ObjectToWorldEXT[2u].z, fma(_604, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _603));
    float _615 = _518 - _442;
    float _616 = _519 - _443;
    float _617 = _520 - _444;
    float _620 = fma(_617, gl_ObjectToWorldEXT[2u].x, fma(_616, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _615));
    float _623 = fma(_617, gl_ObjectToWorldEXT[2u].y, fma(_616, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _615));
    float _626 = fma(_617, gl_ObjectToWorldEXT[2u].z, fma(_616, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _615));
    float _627 = (((_328 * hit._m0.x) + (_258 * _523)) + (_398 * hit._m0.y)) * 0.00048828125;
    float _628 = (((_329 * hit._m0.x) + (_259 * _523)) + (_399 * hit._m0.y)) * 0.00048828125;
    float _629 = (((_333 * hit._m0.x) + (_263 * _523)) + (_403 * hit._m0.y)) * 0.00048828125;
    float _630 = (((_334 * hit._m0.x) + (_264 * _523)) + (_404 * hit._m0.y)) * 0.00048828125;
    float _634 = (((float(_212) * _523) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_357) * hit._m0.y);
    float _637 = (((float(_213) * _523) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_358) * hit._m0.y);
    float _640 = (((float(_214) * _523) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_359) * hit._m0.y);
    float _641 = _634 * 0.0078740157186985015869140625;
    float _643 = _637 * 0.0078740157186985015869140625;
    float _644 = _640 * 0.0078740157186985015869140625;
    float _657 = ((((float(_224 & 255u) * _523) + (-127.0)) + (float(_297 & 255u) * hit._m0.x)) + (float(_367 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _658 = ((((float((_224 >> 8u) & 255u) * _523) + (-127.0)) + (float((_297 >> 8u) & 255u) * hit._m0.x)) + (float((_367 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _659 = ((((float((_224 >> 16u) & 255u) * _523) + (-127.0)) + (float((_297 >> 16u) & 255u) * hit._m0.x)) + (float((_367 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _660 = ((((float(_224 >> 24u) * _523) + (-127.0)) + (float(_297 >> 24u) * hit._m0.x)) + (float(_367 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _670 = ((_658 * _644) - (_659 * _643)) * _660;
    float _671 = ((_659 * _641) - (_657 * _644)) * _660;
    float _672 = ((_657 * _643) - (_658 * _641)) * _660;
    float _676 = inversesqrt(dot(vec3(_670, _671, _672), vec3(_670, _671, _672)));
    uvec2 _700 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6, int(0u)));
    bool _705 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _758;
    if (_705)
    {
        float _716 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _722 = (_626 * _611) - (_623 * _614);
        float _725 = (_620 * _614) - (_626 * _608);
        float _728 = (_623 * _608) - (_620 * _611);
        float _755 = ((log2((((float(_700.y) * 0.5) * float(_700.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_725 * _725) + (_728 * _728)) + (_722 * _722)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_716 * gl_WorldRayDirectionEXT.x, _716 * gl_WorldRayDirectionEXT.y, _716 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _758 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    }
    else
    {
        _758 = 0.0;
    }
    vec4 _762 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _627) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _628) + cbTextureTilingScale._m0[10u].w), _758);
    uvec2 _786 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7, int(0u)));
    float _837;
    if (_705)
    {
        float _797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _803 = (_626 * _611) - (_623 * _614);
        float _806 = (_620 * _614) - (_626 * _608);
        float _809 = (_623 * _608) - (_620 * _611);
        float _835 = ((log2((((float(_786.y) * 0.5) * float(_786.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_806 * _806) + (_809 * _809)) + (_803 * _803)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_797 * gl_WorldRayDirectionEXT.x, _797 * gl_WorldRayDirectionEXT.y, _797 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _837 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    }
    else
    {
        _837 = 0.0;
    }
    float _842 = cbMtdParam._m0[14u].w * textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _627) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _628) + cbTextureTilingScale._m0[11u].w), _837).x;
    float _849 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _762.x) * 2.0) - _842)) + 1.0;
    float _2335 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _850 = isnan(1.0) ? _2335 : (isnan(_2335) ? 1.0 : min(_2335, 1.0));
    uvec2 _862 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12, int(0u)));
    float _913;
    if (_705)
    {
        float _873 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _879 = (_626 * _611) - (_623 * _614);
        float _882 = (_620 * _614) - (_626 * _608);
        float _885 = (_623 * _608) - (_620 * _611);
        float _911 = ((log2((((float(_862.y) * 0.5) * float(_862.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_882 * _882) + (_885 * _885)) + (_879 * _879)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_873 * gl_WorldRayDirectionEXT.x, _873 * gl_WorldRayDirectionEXT.y, _873 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _913 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    }
    else
    {
        _913 = 0.0;
    }
    vec4 _916 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _629) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _630) + cbTextureTilingScale._m0[3u].w), _913);
    uvec2 _933 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14, int(0u)));
    float _984;
    if (_705)
    {
        float _944 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _950 = (_626 * _611) - (_623 * _614);
        float _953 = (_620 * _614) - (_626 * _608);
        float _956 = (_623 * _608) - (_620 * _611);
        float _982 = ((log2((((float(_933.y) * 0.5) * float(_933.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_953 * _953) + (_956 * _956)) + (_950 * _950)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_944 * gl_WorldRayDirectionEXT.x, _944 * gl_WorldRayDirectionEXT.y, _944 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _984 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    }
    else
    {
        _984 = 0.0;
    }
    vec4 _986 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _629) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _630) + cbTextureTilingScale._m0[5u].w), _984);
    float _988 = _986.x;
    float _989 = _986.y;
    float _990 = _986.z;
    float _997 = ((_916.x - _988) * _850) + _988;
    float _998 = ((_916.y - _989) * _850) + _989;
    float _999 = ((_916.z - _990) * _850) + _990;
    float _1005 = (((((1.0 - _762.y) * 2.0) - _842) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _2356 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1006 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
    uvec2 _1018 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10, int(0u)));
    float _1069;
    if (_705)
    {
        float _1029 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1035 = (_626 * _611) - (_623 * _614);
        float _1038 = (_620 * _614) - (_626 * _608);
        float _1041 = (_623 * _608) - (_620 * _611);
        float _1067 = ((log2((((float(_1018.y) * 0.5) * float(_1018.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1038 * _1038) + (_1041 * _1041)) + (_1035 * _1035)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1029 * gl_WorldRayDirectionEXT.x, _1029 * gl_WorldRayDirectionEXT.y, _1029 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1069 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    }
    else
    {
        _1069 = 0.0;
    }
    vec4 _1071 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _629) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _630) + cbTextureTilingScale._m0[1u].w), _1069);
    float _1082 = ((_1071.x - _997) * _1006) + _997;
    float _1083 = ((_1071.y - _998) * _1006) + _998;
    float _1084 = ((_1071.z - _999) * _1006) + _999;
    float _1090 = (((((1.0 - _762.z) * 2.0) - _842) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _2372 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    float _1091 = isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0));
    uvec2 _1103 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8, int(0u)));
    float _1154;
    if (_705)
    {
        float _1114 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1120 = (_626 * _611) - (_623 * _614);
        float _1123 = (_620 * _614) - (_626 * _608);
        float _1126 = (_623 * _608) - (_620 * _611);
        float _1152 = ((log2((((float(_1103.y) * 0.5) * float(_1103.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1123 * _1123) + (_1126 * _1126)) + (_1120 * _1120)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1114 * gl_WorldRayDirectionEXT.x, _1114 * gl_WorldRayDirectionEXT.y, _1114 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1154 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    }
    else
    {
        _1154 = 0.0;
    }
    vec4 _1156 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _629) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _630) + cbTextureTilingScale._m0[12u].w), _1154);
    float _1169 = ((_1156.z - _1084) * _1091) + _1084;
    float _1172 = ((((_1156.x - _1082) * _1091) + _1082) * 2.0) + (-1.0);
    float _1174 = ((((_1156.y - _1083) * _1091) + _1083) * 2.0) + (-1.0);
    float _1175 = dot(vec2(_1172, _1174), vec2(_1172, _1174));
    float _2388 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
    float _1180 = sqrt(1.0 - (isnan(1.0) ? _2388 : (isnan(_2388) ? 1.0 : min(_2388, 1.0))));
    float _1181 = fma(_1180, _641, 0.0);
    float _1182 = fma(_1180, _643, 0.0);
    float _1183 = fma(_1180, _644, 0.0);
    float _1187 = inversesqrt(dot(vec3(_1181, _1182, _1183), vec3(_1181, _1182, _1183)));
    float _1195 = cbMtdParam._m0[14u].y + dot(vec4(_1187 * _1181, _1187 * _1182, _1187 * _1183, 0.0), vec4(cbMtdParam._m0[15u].zw, cbMtdParam._m0[16u].x, 0.0));
    float _2399 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1196 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
    uvec2 _1213 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15, int(0u)));
    float _1264;
    if (_705)
    {
        float _1224 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1230 = (_626 * _611) - (_623 * _614);
        float _1233 = (_620 * _614) - (_626 * _608);
        float _1236 = (_623 * _608) - (_620 * _611);
        float _1262 = ((log2((((float(_1213.y) * 0.5) * float(_1213.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1233 * _1233) + (_1236 * _1236)) + (_1230 * _1230)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1224 * gl_WorldRayDirectionEXT.x, _1224 * gl_WorldRayDirectionEXT.y, _1224 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1264 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    }
    else
    {
        _1264 = 0.0;
    }
    vec4 _1267 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _629) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _630) + cbTextureTilingScale._m0[6u].w), _1264);
    float _1272 = _1267.x * cbMtdParam._m0[10u].x;
    float _1273 = _1267.y * cbMtdParam._m0[10u].y;
    float _1274 = _1267.z * cbMtdParam._m0[10u].z;
    uvec2 _1291 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13, int(0u)));
    float _1342;
    if (_705)
    {
        float _1302 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1308 = (_626 * _611) - (_623 * _614);
        float _1311 = (_620 * _614) - (_626 * _608);
        float _1314 = (_623 * _608) - (_620 * _611);
        float _1340 = ((log2((((float(_1291.y) * 0.5) * float(_1291.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1311 * _1311) + (_1314 * _1314)) + (_1308 * _1308)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1302 * gl_WorldRayDirectionEXT.x, _1302 * gl_WorldRayDirectionEXT.y, _1302 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1342 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
    }
    else
    {
        _1342 = 0.0;
    }
    vec4 _1344 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _629) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _630) + cbTextureTilingScale._m0[4u].w), _1342);
    float _1358 = (((_1344.x * cbMtdParam._m0[11u].x) - _1272) * _850) + _1272;
    float _1359 = (((_1344.y * cbMtdParam._m0[11u].y) - _1273) * _850) + _1273;
    float _1360 = (((_1344.z * cbMtdParam._m0[11u].z) - _1274) * _850) + _1274;
    uvec2 _1377 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11, int(0u)));
    float _1428;
    if (_705)
    {
        float _1388 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1394 = (_626 * _611) - (_623 * _614);
        float _1397 = (_620 * _614) - (_626 * _608);
        float _1400 = (_623 * _608) - (_620 * _611);
        float _1426 = ((log2((((float(_1377.y) * 0.5) * float(_1377.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1397 * _1397) + (_1400 * _1400)) + (_1394 * _1394)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1388 * gl_WorldRayDirectionEXT.x, _1388 * gl_WorldRayDirectionEXT.y, _1388 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1428 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    }
    else
    {
        _1428 = 0.0;
    }
    vec4 _1430 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _629) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _630) + cbTextureTilingScale._m0[2u].w), _1428);
    float _1444 = (((_1430.x * cbMtdParam._m0[12u].x) - _1358) * _1006) + _1358;
    float _1445 = (((_1430.y * cbMtdParam._m0[12u].y) - _1359) * _1006) + _1359;
    float _1446 = (((_1430.z * cbMtdParam._m0[12u].z) - _1360) * _1006) + _1360;
    uvec2 _1464 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9, int(0u)));
    float _1515;
    if (_705)
    {
        float _1475 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1481 = (_626 * _611) - (_623 * _614);
        float _1484 = (_620 * _614) - (_626 * _608);
        float _1487 = (_623 * _608) - (_620 * _611);
        float _1513 = ((log2((((float(_1464.y) * 0.5) * float(_1464.x)) * abs((_581 * _576) - (_580 * _577))) / (sqrt(((_1484 * _1484) + (_1487 * _1487)) + (_1481 * _1481)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1475 * gl_WorldRayDirectionEXT.x, _1475 * gl_WorldRayDirectionEXT.y, _1475 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1515 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    }
    else
    {
        _1515 = 0.0;
    }
    vec4 _1517 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _629) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _630) + cbTextureTilingScale._m0[13u].w), _1515);
    uvec2 _1551 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0, int(0u)));
    float _1602;
    if (_705)
    {
        float _1562 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1568 = (_626 * _611) - (_623 * _614);
        float _1571 = (_620 * _614) - (_626 * _608);
        float _1574 = (_623 * _608) - (_620 * _611);
        float _1600 = ((log2((((float(_1551.y) * 0.5) * float(_1551.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1571 * _1571) + (_1574 * _1574)) + (_1568 * _1568)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1562 * gl_WorldRayDirectionEXT.x, _1562 * gl_WorldRayDirectionEXT.y, _1562 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1602 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
    }
    else
    {
        _1602 = 0.0;
    }
    vec4 _1604 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _627) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _628) + cbTextureTilingScale._m0[0u].w), _1602);
    float _1612 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_1517.x * cbMtdParam._m0[13u].x) - _1444) * _1091) + _1444)) * _1604.x;
    float _1615 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_1517.y * cbMtdParam._m0[13u].y) - _1445) * _1091) + _1445)) * _1604.y;
    float _1618 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_1517.z * cbMtdParam._m0[13u].z) - _1446) * _1091) + _1446)) * _1604.z;
    uvec2 _1630 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5, int(0u)));
    float _1681;
    if (_705)
    {
        float _1641 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1647 = (_626 * _611) - (_623 * _614);
        float _1650 = (_620 * _614) - (_626 * _608);
        float _1653 = (_623 * _608) - (_620 * _611);
        float _1679 = ((log2((((float(_1630.y) * 0.5) * float(_1630.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1650 * _1650) + (_1653 * _1653)) + (_1647 * _1647)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1641 * gl_WorldRayDirectionEXT.x, _1641 * gl_WorldRayDirectionEXT.y, _1641 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1681 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
    }
    else
    {
        _1681 = 0.0;
    }
    vec4 _1683 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _627) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _628) + cbTextureTilingScale._m0[9u].w), _1681);
    float _1694 = ((_1683.x - _1612) * _1196) + _1612;
    float _1695 = ((_1683.y - _1615) * _1196) + _1615;
    float _1696 = ((_1683.z - _1618) * _1196) + _1618;
    uvec2 _1708 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3, int(0u)));
    float _1759;
    if (_705)
    {
        float _1719 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1725 = (_626 * _611) - (_623 * _614);
        float _1728 = (_620 * _614) - (_626 * _608);
        float _1731 = (_623 * _608) - (_620 * _611);
        float _1757 = ((log2((((float(_1708.y) * 0.5) * float(_1708.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1728 * _1728) + (_1731 * _1731)) + (_1725 * _1725)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1719 * gl_WorldRayDirectionEXT.x, _1719 * gl_WorldRayDirectionEXT.y, _1719 * gl_WorldRayDirectionEXT.z), vec3(_641, _643, _644))));
        _1759 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
    }
    else
    {
        _1759 = 0.0;
    }
    vec4 _1761 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _627) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _628) + cbTextureTilingScale._m0[8u].w), _1759);
    float _1768 = (_1761.x * 2.0) + (-1.0);
    float _1769 = (_1761.y * 2.0) + (-1.0);
    float _1770 = dot(vec2(_1768, _1769), vec2(_1768, _1769));
    float _2445 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
    float _1778 = ((_1761.z - _1169) * _1196) + _1169;
    float _1787 = ((sqrt(1.0 - (isnan(1.0) ? _2445 : (isnan(_2445) ? 1.0 : min(_2445, 1.0)))) - _1180) * _1196) + _1180;
    uvec2 _1800 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16, int(0u)));
    float _1804 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1805 = _1804 * gl_WorldRayDirectionEXT.x;
    float _1806 = _1804 * gl_WorldRayDirectionEXT.y;
    float _1807 = _1804 * gl_WorldRayDirectionEXT.z;
    float _1851;
    if (_705)
    {
        float _1817 = (_626 * _611) - (_623 * _614);
        float _1820 = (_620 * _614) - (_626 * _608);
        float _1823 = (_623 * _608) - (_620 * _611);
        float _1849 = ((log2((((float(_1800.y) * 0.5) * float(_1800.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1820 * _1820) + (_1823 * _1823)) + (_1817 * _1817)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1805, _1806, _1807), vec3(_641, _643, _644))));
        _1851 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
    }
    else
    {
        _1851 = 0.0;
    }
    vec4 _1853 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _627) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _628) + cbTextureTilingScale._m0[7u].w), _1851);
    float _1863 = (((_1768 - _1172) * _1196) + _1172) + (((_1853.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z);
    float _1864 = (((_1769 - _1174) * _1196) + _1174) + (((_1853.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z);
    float _1867 = fma(_1787, _641, fma(_1864, _657, (_676 * _670) * _1863));
    float _1870 = fma(_1787, _643, fma(_1864, _658, (_676 * _671) * _1863));
    float _1873 = fma(_1787, _644, fma(_1864, _659, (_676 * _672) * _1863));
    float _1877 = inversesqrt(dot(vec3(_1867, _1870, _1873), vec3(_1867, _1870, _1873)));
    float _1878 = _1877 * _1867;
    float _1879 = _1877 * _1870;
    float _1880 = _1877 * _1873;
    float _1892 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1893 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1894 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1895 = (-0.0) - _1805;
    float _1897 = (-0.0) - _1806;
    float _1898 = (-0.0) - _1807;
    float _1904 = float(gl_LaunchIDEXT.x);
    float _1905 = float(gl_LaunchIDEXT.y);
    float _1908 = float(gl_LaunchSizeEXT.x);
    float _1922 = fract(fract(sin(dot(vec2(_1904 / _1908, _1905 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1935 = fract(fract(sin(dot(vec2((_1904 + 128.0) / _1908, (_1905 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _74._m0 = 1u;
    uvec4 _1945 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1946 = _1945.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1946, _1945.w, _1946, vec3(_1892, _1893, _1894), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2054;
    float _2055;
    float _2056;
    float _2057;
    float _2058;
    float _2059;
    if (_74._m0 == 0u)
    {
        float _1966 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1878, _1879, _1880));
        float _2461 = isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0));
        float _1969 = isnan(1.0) ? _2461 : (isnan(_2461) ? 1.0 : min(_2461, 1.0));
        float _1988 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1778) * 0.949999988079071044921875);
        float _1989 = _1988 * _1988;
        float _1990 = g_sceneCB._m0[4u].x - _1805;
        float _1991 = g_sceneCB._m0[4u].y - _1806;
        float _1992 = g_sceneCB._m0[4u].z - _1807;
        float _1996 = inversesqrt(dot(vec3(_1990, _1991, _1992), vec3(_1990, _1991, _1992)));
        float _1997 = _1996 * _1990;
        float _1998 = _1996 * _1991;
        float _1999 = _1996 * _1992;
        float _2000 = dot(vec3(_1878, _1879, _1880), vec3(g_sceneCB._m0[4u].xyz));
        float _2472 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
        float _2003 = isnan(1.0) ? _2472 : (isnan(_2472) ? 1.0 : min(_2472, 1.0));
        float _2004 = dot(vec3(_1878, _1879, _1880), vec3(_1895, _1897, _1898));
        float _2483 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0));
        float _2007 = isnan(1.0) ? _2483 : (isnan(_2483) ? 1.0 : min(_2483, 1.0));
        float _2008 = dot(vec3(_1878, _1879, _1880), vec3(_1997, _1998, _1999));
        float _2494 = isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0));
        float _2011 = isnan(1.0) ? _2494 : (isnan(_2494) ? 1.0 : min(_2494, 1.0));
        float _2012 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1997, _1998, _1999));
        float _2505 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0));
        float _2016 = _1989 * _1989;
        float _2020 = ((_2011 * _2011) * (_2016 + (-1.0))) + 1.0;
        float _2032 = (exp2(log2(1.0 - (isnan(1.0) ? _2505 : (isnan(_2505) ? 1.0 : min(_2505, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2034 = 1.0 - _1989;
        float _2045 = (0.5 / (((_2007 * ((_2003 * _2034) + _1989)) + 9.9999999392252902907785028219223e-09) + (((_2007 * _2034) + _1989) * _2003))) * _2003;
        float _2516 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _2047 = (isnan(1.0) ? _2516 : (isnan(_2516) ? 1.0 : min(_2516, 1.0))) * (_2016 / ((_2020 * _2020) * 3.141590118408203125));
        _2054 = ((_1694 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1969;
        _2055 = ((_1695 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1969;
        _2056 = ((_1696 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1969;
        _2057 = (_2032 * g_sceneCB._m0[5u].x) * _2047;
        _2058 = (_2032 * g_sceneCB._m0[5u].y) * _2047;
        _2059 = (_2032 * g_sceneCB._m0[5u].z) * _2047;
    }
    else
    {
        _2054 = 0.0;
        _2055 = 0.0;
        _2056 = 0.0;
        _2057 = 0.0;
        _2058 = 0.0;
        _2059 = 0.0;
    }
    bool _2061 = abs(_1879) < 0.89999997615814208984375;
    float _2063 = float(_2061);
    float _2064 = _2061 ? 0.0 : 1.0;
    float _2067 = (_2063 * _1880) - (_2064 * _1879);
    float _2068 = _2064 * _1878;
    float _2070 = (-0.0) - (_1878 * _2063);
    float _2074 = inversesqrt(dot(vec3(_2067, _2068, _2070), vec3(_2067, _2068, _2070)));
    float _2075 = _2067 * _2074;
    float _2076 = _2068 * _2074;
    float _2077 = _2074 * _2070;
    float _2080 = (_2076 * _1880) - (_2077 * _1879);
    float _2083 = (_2077 * _1878) - (_2075 * _1880);
    float _2086 = (_2075 * _1879) - (_2076 * _1878);
    float _2088;
    float _2096;
    float _2087 = 0.0;
    uint _2089 = 0u;
    float _2093;
    bool _2095;
    for (;;)
    {
        _2093 = (float(_2089) + _1922) * 0.03125;
        _2095 = _2089 == 0u;
        float frontier_phi_67_pred;
        if (_2095)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2230;
            float _2231;
            uint _2233;
            _2230 = 0.0;
            _2231 = 0.5;
            _2233 = _2089;
            float _2097;
            for (;;)
            {
                _2097 = ((_2233 & 1u) != 0u) ? (_2231 + _2230) : _2230;
                uint _2234 = _2233 >> 1u;
                if (_2234 == 0u)
                {
                    break;
                }
                else
                {
                    _2230 = _2097;
                    _2231 *= 0.5;
                    _2233 = _2234;
                }
            }
            frontier_phi_67_pred = _2097;
        }
        _2096 = frontier_phi_67_pred;
        float _2098 = _2096 + _1935;
        float _2102 = sqrt(_2093);
        float _2103 = ((_2098 > 1.0) ? (_2098 + (-1.0)) : _2098) * 6.283185482025146484375;
        float _2106 = cos(_2103) * _2102;
        float _2108 = sin(_2103) * _2102;
        float _2110 = sqrt(1.0 - _2093);
        float _2123 = ((_2110 * _1878) + (_2106 * _2080)) + (_2108 * _2075);
        float _2124 = ((_2110 * _1879) + (_2106 * _2083)) + (_2108 * _2076);
        float _2125 = ((_2110 * _1880) + (_2106 * _2086)) + (_2108 * _2077);
        _73._m0 = 1u;
        uvec4 _2129 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2130 = _2129.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2130, _2129.w, _2130, vec3(_1892, _1893, _1894), 9.9999997473787516355514526367188e-05, vec3(_2123, _2124, _2125), 10000.0, 1);
        float _2136 = dot(vec3(_1878, _1879, _1880), vec3(_2123, _2124, _2125));
        float _2527 = isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0));
        float _2139 = isnan(1.0) ? _2527 : (isnan(_2527) ? 1.0 : min(_2527, 1.0));
        _2088 = ((float(_73._m0 == 0u) * _2139) / (_2139 * 0.3183098733425140380859375)) + _2087;
        uint _2090 = _2089 + 1u;
        if (_2090 == 32u)
        {
            break;
        }
        else
        {
            _2087 = _2088;
            _2089 = _2090;
            continue;
        }
    }
    float _2147 = _2088 * 0.009947183541953563690185546875;
    float _2152 = dot(vec3(_1805, _1806, _1807), vec3(_1878, _1879, _1880)) * 2.0;
    vec4 _2166 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1805 - (_2152 * _1878), _1806 - (_2152 * _1879), _1807 - (_2152 * _1880)), 4.0 - (_1778 * 4.0));
    float _2171 = dot(vec3(_1895, _1897, _1898), vec3(_1878, _1879, _1880));
    float _2538 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _2180 = (exp2(log2(1.0 - (isnan(1.0) ? _2538 : (isnan(_2538) ? 1.0 : min(_2538, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2186 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1878, _1879, _1880), 0.0);
    float _2197 = (_2057 + _2054) + (((_2186.x * _1694) + (_2180 * _2166.x)) * _2147);
    float _2201 = (_2058 + _2055) + (((_2186.y * _1695) + (_2180 * _2166.y)) * _2147);
    float _2205 = (_2059 + _2056) + (((_2186.z * _1696) + (_2180 * _2166.z)) * _2147);
    float _2549 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _2560 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
    float _2571 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    bool _2213 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2224;
    _2224.x = _2213 ? ((_634 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0)));
    _2224.y = _2213 ? ((_637 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2560 : (isnan(_2560) ? 1.0 : min(_2560, 1.0)));
    _2224.z = _2213 ? ((_640 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2571 : (isnan(_2571) ? 1.0 : min(_2571, 1.0)));
    payload._m0 = _2224;
}


