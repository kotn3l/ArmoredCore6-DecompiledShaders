#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _39
{
    vec3 _m0;
};

struct _43
{
    vec2 _m0;
};

struct _46
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(location = 0) rayPayloadInEXT _39 payload;
hitAttributeEXT _43 hit;
layout(location = 1) rayPayloadEXT _46 _48;
layout(location = 2) rayPayloadEXT _46 _49;

vec3 _696;

void main()
{
    uvec4 _63 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _64 = _63.y;
    uint _106;
    uint _108;
    uint _109;
    if (_63.x == 0u)
    {
        uint _72 = (_64 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _83 = uvec3(texelFetch(l_geomIndexBuffer, int(_72)).x, texelFetch(l_geomIndexBuffer, int(_72 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_72 + 2u)).x);
        _106 = _83.x;
        _108 = _83.y;
        _109 = _83.z;
    }
    else
    {
        uint _87 = uint(gl_PrimitiveID) * 6u;
        uint _89 = _87 & 4294967292u;
        uint _92 = (_64 + _89) >> 2u;
        uvec2 _99 = uvec2(texelFetch(l_geomIndexBuffer, int(_92)).x, texelFetch(l_geomIndexBuffer, int(_92 + 1u)).x);
        uint _100 = _99.x;
        uint _101 = _99.y;
        uint _103 = _100 >> 16u;
        uint _104 = _101 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_89 == _87)
        {
            frontier_phi_3_2_ladder = _100 & 65535u;
            frontier_phi_3_2_ladder_1 = _103;
            frontier_phi_3_2_ladder_2 = _104;
        }
        else
        {
            frontier_phi_3_2_ladder = _103;
            frontier_phi_3_2_ladder_1 = _104;
            frontier_phi_3_2_ladder_2 = _101 >> 16u;
        }
        _106 = frontier_phi_3_2_ladder;
        _108 = frontier_phi_3_2_ladder_1;
        _109 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _113 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _114 = _113.x;
    uint _115 = _113.z;
    bool _116 = _115 != 0u;
    bool _118 = _63.w == 0u;
    bool _119 = _116 || _118;
    uint _121 = (_114 * _106) + 12u;
    uint _145;
    uint _146;
    uint _147;
    uint _148;
    if (_119)
    {
        uvec4 _124 = texelFetch(l_geomAttrib_0, int(_121 >> 2u));
        uint _125 = _124.x;
        _145 = _125 & 255u;
        _146 = (_125 >> 8u) & 255u;
        _147 = (_125 >> 16u) & 255u;
        _148 = 20u;
    }
    else
    {
        uint _133 = _121 >> 2u;
        uvec2 _139 = uvec2(texelFetch(l_geomAttrib_0, int(_133)).x, texelFetch(l_geomAttrib_0, int(_133 + 1u)).x);
        uint _140 = _139.x;
        _145 = _140 & 65535u;
        _146 = _140 >> 16u;
        _147 = _139.y & 65535u;
        _148 = 24u;
    }
    bool _154 = _115 == 0u;
    uint _155;
    if (_154)
    {
        _155 = _148;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_118)
        {
            frontier_phi_9_10_ladder = _148 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _148 + 8u;
        }
        _155 = frontier_phi_9_10_ladder;
    }
    uvec4 _166 = texelFetch(l_geomAttrib_0, int((((_114 * _106) + 4u) + (_116 ? (_155 + 4u) : _155)) >> 2u));
    uint _167 = _166.x;
    uint _174 = (_114 * _108) + 12u;
    uint _195;
    uint _196;
    uint _197;
    uint _198;
    if (_119)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _177 = _176.x;
        _195 = _177 & 255u;
        _196 = (_177 >> 8u) & 255u;
        _197 = (_177 >> 16u) & 255u;
        _198 = 20u;
    }
    else
    {
        uint _183 = _174 >> 2u;
        uvec2 _189 = uvec2(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x);
        uint _190 = _189.x;
        _195 = _190 & 65535u;
        _196 = _190 >> 16u;
        _197 = _189.y & 65535u;
        _198 = 24u;
    }
    uint _202;
    if (_154)
    {
        _202 = _198;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_118)
        {
            frontier_phi_16_17_ladder = _198 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _198 + 8u;
        }
        _202 = frontier_phi_16_17_ladder;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((((_114 * _108) + 4u) + (_116 ? (_202 + 4u) : _202)) >> 2u));
    uint _212 = _211.x;
    uint _219 = (_114 * _109) + 12u;
    uint _240;
    uint _241;
    uint _242;
    uint _243;
    if (_119)
    {
        uvec4 _221 = texelFetch(l_geomAttrib_0, int(_219 >> 2u));
        uint _222 = _221.x;
        _240 = _222 & 255u;
        _241 = (_222 >> 8u) & 255u;
        _242 = (_222 >> 16u) & 255u;
        _243 = 20u;
    }
    else
    {
        uint _228 = _219 >> 2u;
        uvec2 _234 = uvec2(texelFetch(l_geomAttrib_0, int(_228)).x, texelFetch(l_geomAttrib_0, int(_228 + 1u)).x);
        uint _235 = _234.x;
        _240 = _235 & 65535u;
        _241 = _235 >> 16u;
        _242 = _234.y & 65535u;
        _243 = 24u;
    }
    uint _247;
    if (_154)
    {
        _247 = _243;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_118)
        {
            frontier_phi_23_24_ladder = _243 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _243 + 8u;
        }
        _247 = frontier_phi_23_24_ladder;
    }
    uvec4 _256 = texelFetch(l_geomAttrib_0, int((((_114 * _109) + 4u) + (_116 ? (_247 + 4u) : _247)) >> 2u));
    uint _257 = _256.x;
    float _265 = (1.0 - hit._m0.x) - hit._m0.y;
    float _291 = (((float(_145) * _265) + (-127.0)) + (float(_195) * hit._m0.x)) + (float(_240) * hit._m0.y);
    float _294 = (((float(_146) * _265) + (-127.0)) + (float(_196) * hit._m0.x)) + (float(_241) * hit._m0.y);
    float _297 = (((float(_147) * _265) + (-127.0)) + (float(_197) * hit._m0.x)) + (float(_242) * hit._m0.y);
    float _298 = _291 * 0.0078740157186985015869140625;
    float _300 = _294 * 0.0078740157186985015869140625;
    float _301 = _297 * 0.0078740157186985015869140625;
    float _306 = ((((float(int(uint(int(_212 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_167 << 16u) >> int(16u)))) * _265)) + (float(int(uint(int(_257 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) + (-0.5);
    float _308 = ((((float(int(uint(int(_212) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_167) >> int(16u)))) * _265)) + (float(int(uint(int(_257) >> int(16u)))) * hit._m0.y)) * 0.00048828125) + (-0.5);
    float _314 = 1.0 - sqrt((_306 * _306) + (_308 * _308));
    float _334 = exp2(log2(cbMtdParam._m0[14u].w * exp2(log2(cbMtdParam._m0[13u].z * _314) * cbMtdParam._m0[13u].w)) * cbMtdParam._m0[14u].z);
    float _759 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _336 = isnan(1.0) ? _759 : (isnan(_759) ? 1.0 : min(_759, 1.0));
    float _770 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _343 = exp2(log2(cbMtdParam._m0[14u].y * _314) * cbMtdParam._m0[14u].x);
    float _781 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _345 = (isnan(1.0) ? _781 : (isnan(_781) ? 1.0 : min(_781, 1.0))) - (isnan(1.0) ? _770 : (isnan(_770) ? 1.0 : min(_770, 1.0)));
    float _346 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _347 = _346 * cbMtdParam._m0[10u].x;
    float _348 = _346 * cbMtdParam._m0[10u].y;
    float _349 = _346 * cbMtdParam._m0[10u].z;
    float _357 = inversesqrt(dot(vec3(_298, _300, _301), vec3(_298, _300, _301)));
    float _358 = _357 * _298;
    float _359 = _357 * _300;
    float _360 = _357 * _301;
    float _382 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _383 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _384 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _388 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _389 = _388 * gl_WorldRayDirectionEXT.x;
    float _390 = _388 * gl_WorldRayDirectionEXT.y;
    float _391 = _388 * gl_WorldRayDirectionEXT.z;
    float _392 = (-0.0) - _389;
    float _394 = (-0.0) - _390;
    float _395 = (-0.0) - _391;
    float _402 = float(gl_LaunchIDEXT.x);
    float _403 = float(gl_LaunchIDEXT.y);
    float _409 = float(gl_LaunchSizeEXT.x);
    float _410 = float(gl_LaunchSizeEXT.y);
    float _424 = fract(fract(sin(dot(vec2(_402 / _409, _403 / _410), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _437 = fract(fract(sin(dot(vec2((_402 + 128.0) / _409, (_403 + 128.0) / _410), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _49._m0 = 1u;
    uvec4 _447 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _448 = _447.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _448, _447.w, _448, vec3(_382, _383, _384), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _526;
    float _527;
    float _528;
    float _529;
    float _530;
    float _531;
    if (_49._m0 == 0u)
    {
        float _469 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_358, _359, _360));
        float _812 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
        float _472 = isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0));
        float _480 = g_sceneCB._m0[4u].x - _389;
        float _481 = g_sceneCB._m0[4u].y - _390;
        float _482 = g_sceneCB._m0[4u].z - _391;
        float _486 = inversesqrt(dot(vec3(_480, _481, _482), vec3(_480, _481, _482)));
        float _490 = dot(vec3(_358, _359, _360), vec3(g_sceneCB._m0[4u].xyz));
        float _823 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
        float _493 = isnan(1.0) ? _823 : (isnan(_823) ? 1.0 : min(_823, 1.0));
        float _494 = dot(vec3(_358, _359, _360), vec3(_392, _394, _395));
        float _834 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
        float _498 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_480 * _486, _481 * _486, _482 * _486));
        float _845 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
        float _509 = (exp2(log2(1.0 - (isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _516 = (0.5 / ((_493 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _834 : (isnan(_834) ? 1.0 : min(_834, 1.0))))) * _493;
        float _856 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
        float _518 = (isnan(1.0) ? _856 : (isnan(_856) ? 1.0 : min(_856, 1.0))) * 0.31831014156341552734375;
        _526 = (g_sceneCB._m0[5u].x * 0.3183098733425140380859375) * _472;
        _527 = (g_sceneCB._m0[5u].y * 0.3183098733425140380859375) * _472;
        _528 = (g_sceneCB._m0[5u].z * 0.3183098733425140380859375) * _472;
        _529 = (_509 * g_sceneCB._m0[5u].x) * _518;
        _530 = (_509 * g_sceneCB._m0[5u].y) * _518;
        _531 = (_509 * g_sceneCB._m0[5u].z) * _518;
    }
    else
    {
        _526 = 0.0;
        _527 = 0.0;
        _528 = 0.0;
        _529 = 0.0;
        _530 = 0.0;
        _531 = 0.0;
    }
    bool _533 = abs(_359) < 0.89999997615814208984375;
    float _535 = float(_533);
    float _536 = _533 ? 0.0 : 1.0;
    float _539 = (_535 * _360) - (_536 * _359);
    float _540 = _536 * _358;
    float _542 = (-0.0) - (_358 * _535);
    float _546 = inversesqrt(dot(vec3(_539, _540, _542), vec3(_539, _540, _542)));
    float _547 = _539 * _546;
    float _548 = _540 * _546;
    float _549 = _546 * _542;
    float _552 = (_548 * _360) - (_549 * _359);
    float _555 = (_549 * _358) - (_547 * _360);
    float _558 = (_547 * _359) - (_548 * _358);
    float _560;
    float _568;
    float _559 = 0.0;
    uint _561 = 0u;
    float _565;
    bool _567;
    for (;;)
    {
        _565 = (float(_561) + _424) * 0.03125;
        _567 = _561 == 0u;
        float frontier_phi_30_pred;
        if (_567)
        {
            frontier_phi_30_pred = 0.0;
        }
        else
        {
            float _701;
            float _702;
            uint _704;
            _701 = 0.0;
            _702 = 0.5;
            _704 = _561;
            float _569;
            for (;;)
            {
                _569 = ((_704 & 1u) != 0u) ? (_702 + _701) : _701;
                uint _705 = _704 >> 1u;
                if (_705 == 0u)
                {
                    break;
                }
                else
                {
                    _701 = _569;
                    _702 *= 0.5;
                    _704 = _705;
                }
            }
            frontier_phi_30_pred = _569;
        }
        _568 = frontier_phi_30_pred;
        float _570 = _568 + _437;
        float _575 = sqrt(_565);
        float _576 = ((_570 > 1.0) ? (_570 + (-1.0)) : _570) * 6.283185482025146484375;
        float _579 = cos(_576) * _575;
        float _581 = sin(_576) * _575;
        float _583 = sqrt(1.0 - _565);
        float _596 = ((_583 * _358) + (_579 * _552)) + (_581 * _547);
        float _597 = ((_583 * _359) + (_579 * _555)) + (_581 * _548);
        float _598 = ((_583 * _360) + (_579 * _558)) + (_581 * _549);
        _48._m0 = 1u;
        uvec4 _602 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _603 = _602.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _603, _602.w, _603, vec3(_382, _383, _384), 9.9999997473787516355514526367188e-05, vec3(_596, _597, _598), 10000.0, 1);
        float _609 = dot(vec3(_358, _359, _360), vec3(_596, _597, _598));
        float _867 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
        float _612 = isnan(1.0) ? _867 : (isnan(_867) ? 1.0 : min(_867, 1.0));
        _560 = ((float(_48._m0 == 0u) * _612) / (_612 * 0.3183098733425140380859375)) + _559;
        uint _562 = _561 + 1u;
        if (_562 == 32u)
        {
            break;
        }
        else
        {
            _559 = _560;
            _561 = _562;
            continue;
        }
    }
    float _620 = _560 * 0.009947183541953563690185546875;
    float _625 = dot(vec3(_389, _390, _391), vec3(_358, _359, _360)) * 2.0;
    vec4 _637 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_389 - (_625 * _358), _390 - (_625 * _359), _391 - (_625 * _360)), 4.0);
    float _642 = dot(vec3(_392, _394, _395), vec3(_358, _359, _360));
    float _878 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _651 = (exp2(log2(1.0 - (isnan(1.0) ? _878 : (isnan(_878) ? 1.0 : min(_878, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _657 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_358, _359, _360), 0.0);
    float _666 = ((_526 + (isnan(4.0) ? _347 : (isnan(_347) ? 4.0 : min(_347, 4.0)))) + _529) + ((_657.x + (_651 * _637.x)) * _620);
    float _671 = ((_527 + (isnan(4.0) ? _348 : (isnan(_348) ? 4.0 : min(_348, 4.0)))) + _530) + ((_657.y + (_651 * _637.y)) * _620);
    float _676 = ((_528 + (isnan(4.0) ? _349 : (isnan(_349) ? 4.0 : min(_349, 4.0)))) + _531) + ((_657.z + (_651 * _637.z)) * _620);
    float _889 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _900 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _911 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    bool _684 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _695;
    _695.x = _684 ? ((_291 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _889 : (isnan(_889) ? 1.0 : min(_889, 1.0)));
    _695.y = _684 ? ((_294 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _900 : (isnan(_900) ? 1.0 : min(_900, 1.0)));
    _695.z = _684 ? ((_297 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0)));
    payload._m0 = _695;
}


