#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D M_Water_Melange_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Water_Melange_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

uint _190;
uint _282;
uint _363;
vec3 _2442;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _115 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _124 = sqrt(((_116 * _116) + (_115 * _115)) + (_117 * _117)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _135 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _136 = _135.y;
    uint _176;
    uint _178;
    uint _179;
    if (_135.x == 0u)
    {
        uint _144 = (_136 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _153 = uvec3(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_144 + 2u)).x);
        _176 = _153.x;
        _178 = _153.y;
        _179 = _153.z;
    }
    else
    {
        uint _157 = uint(gl_PrimitiveID) * 6u;
        uint _159 = _157 & 4294967292u;
        uint _162 = (_136 + _159) >> 2u;
        uvec2 _169 = uvec2(texelFetch(l_geomIndexBuffer, int(_162)).x, texelFetch(l_geomIndexBuffer, int(_162 + 1u)).x);
        uint _170 = _169.x;
        uint _171 = _169.y;
        uint _173 = _170 >> 16u;
        uint _174 = _171 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_159 == _157)
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _170 & 65535u;
            frontier_phi_3_2_ladder_2 = _174;
        }
        else
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _171 >> 16u;
        }
        _176 = frontier_phi_3_2_ladder_1;
        _178 = frontier_phi_3_2_ladder;
        _179 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _183 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _184 = _183.x;
    uint _185 = _184 * _176;
    uint _187 = _185 >> 2u;
    uvec3 _194 = uvec3(texelFetch(l_geomAttrib_0, int(_187)).x, _190, texelFetch(l_geomAttrib_0, int(_187 + 2u)).x);
    uint _199 = _183.z;
    bool _200 = _199 != 0u;
    bool _202 = _135.w == 0u;
    bool _203 = _200 || _202;
    uint _204 = _185 + 12u;
    uint _227;
    uint _228;
    uint _229;
    uint _230;
    if (_203)
    {
        uvec4 _206 = texelFetch(l_geomAttrib_0, int(_204 >> 2u));
        uint _207 = _206.x;
        _227 = _207 & 255u;
        _228 = (_207 >> 8u) & 255u;
        _229 = (_207 >> 16u) & 255u;
        _230 = 16u;
    }
    else
    {
        uint _215 = _204 >> 2u;
        uvec2 _221 = uvec2(texelFetch(l_geomAttrib_0, int(_215)).x, texelFetch(l_geomAttrib_0, int(_215 + 1u)).x);
        uint _222 = _221.x;
        _227 = _222 & 65535u;
        _228 = _222 >> 16u;
        _229 = _221.y & 65535u;
        _230 = 20u;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int((_230 + _185) >> 2u));
    uint _238 = _237.x;
    bool _252 = _199 == 0u;
    uint _253;
    if (_252)
    {
        _253 = _230 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_202)
        {
            frontier_phi_9_10_ladder = _230 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _230 + 12u;
        }
        _253 = frontier_phi_9_10_ladder;
    }
    uint _257 = _200 ? (_253 + 4u) : _253;
    uvec4 _261 = texelFetch(l_geomAttrib_0, int(((_185 + 4u) + _257) >> 2u));
    uint _262 = _261.x;
    float _266 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _267 = float(int(uint(int(_262) >> int(16u))));
    uvec4 _271 = texelFetch(l_geomAttrib_0, int(((_185 + 8u) + _257) >> 2u));
    uint _272 = _271.x;
    uint _278 = _184 * _178;
    uint _279 = _278 >> 2u;
    uvec3 _286 = uvec3(texelFetch(l_geomAttrib_0, int(_279)).x, _282, texelFetch(l_geomAttrib_0, int(_279 + 2u)).x);
    uint _291 = _278 + 12u;
    uint _312;
    uint _313;
    uint _314;
    uint _315;
    if (_203)
    {
        uvec4 _293 = texelFetch(l_geomAttrib_0, int(_291 >> 2u));
        uint _294 = _293.x;
        _312 = _294 & 255u;
        _313 = (_294 >> 8u) & 255u;
        _314 = (_294 >> 16u) & 255u;
        _315 = 16u;
    }
    else
    {
        uint _300 = _291 >> 2u;
        uvec2 _306 = uvec2(texelFetch(l_geomAttrib_0, int(_300)).x, texelFetch(l_geomAttrib_0, int(_300 + 1u)).x);
        uint _307 = _306.x;
        _312 = _307 & 65535u;
        _313 = _307 >> 16u;
        _314 = _306.y & 65535u;
        _315 = 20u;
    }
    uvec4 _321 = texelFetch(l_geomAttrib_0, int((_315 + _278) >> 2u));
    uint _322 = _321.x;
    uint _334;
    if (_252)
    {
        _334 = _315 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_202)
        {
            frontier_phi_16_17_ladder = _315 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _315 + 12u;
        }
        _334 = frontier_phi_16_17_ladder;
    }
    uint _338 = _200 ? (_334 + 4u) : _334;
    uvec4 _342 = texelFetch(l_geomAttrib_0, int(((_278 + 4u) + _338) >> 2u));
    uint _343 = _342.x;
    float _347 = float(int(uint(int(_343 << 16u) >> int(16u))));
    float _348 = float(int(uint(int(_343) >> int(16u))));
    uvec4 _352 = texelFetch(l_geomAttrib_0, int(((_278 + 8u) + _338) >> 2u));
    uint _353 = _352.x;
    uint _359 = _184 * _179;
    uint _360 = _359 >> 2u;
    uvec3 _367 = uvec3(texelFetch(l_geomAttrib_0, int(_360)).x, _363, texelFetch(l_geomAttrib_0, int(_360 + 2u)).x);
    uint _372 = _359 + 12u;
    uint _393;
    uint _394;
    uint _395;
    uint _396;
    if (_203)
    {
        uvec4 _374 = texelFetch(l_geomAttrib_0, int(_372 >> 2u));
        uint _375 = _374.x;
        _393 = _375 & 255u;
        _394 = (_375 >> 8u) & 255u;
        _395 = (_375 >> 16u) & 255u;
        _396 = 16u;
    }
    else
    {
        uint _381 = _372 >> 2u;
        uvec2 _387 = uvec2(texelFetch(l_geomAttrib_0, int(_381)).x, texelFetch(l_geomAttrib_0, int(_381 + 1u)).x);
        uint _388 = _387.x;
        _393 = _388 & 65535u;
        _394 = _388 >> 16u;
        _395 = _387.y & 65535u;
        _396 = 20u;
    }
    uvec4 _402 = texelFetch(l_geomAttrib_0, int((_396 + _359) >> 2u));
    uint _403 = _402.x;
    uint _415;
    if (_252)
    {
        _415 = _396 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_202)
        {
            frontier_phi_23_24_ladder = _396 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _396 + 12u;
        }
        _415 = frontier_phi_23_24_ladder;
    }
    uint _419 = _200 ? (_415 + 4u) : _415;
    uvec4 _423 = texelFetch(l_geomAttrib_0, int(((_359 + 4u) + _419) >> 2u));
    uint _424 = _423.x;
    float _428 = float(int(uint(int(_424 << 16u) >> int(16u))));
    float _429 = float(int(uint(int(_424) >> int(16u))));
    uvec4 _433 = texelFetch(l_geomAttrib_0, int(((_359 + 8u) + _419) >> 2u));
    uint _434 = _433.x;
    bool _441 = _135.z == 0u;
    float _477;
    float _478;
    float _479;
    if (_441)
    {
        uint _444 = _176 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _176 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _515;
    float _516;
    float _517;
    if (_441)
    {
        uint _482 = _178 * 3u;
        uvec3 _491 = uvec3(texelFetch(l_geomPositionBuffer, int(_482)).x, texelFetch(l_geomPositionBuffer, int(_482 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_482 + 2u)).x);
        _515 = uintBitsToFloat(_491.x);
        _516 = uintBitsToFloat(_491.y);
        _517 = uintBitsToFloat(_491.z);
    }
    else
    {
        uint _499 = _178 * 2u;
        uvec2 _505 = uvec2(texelFetch(l_geomPositionBuffer, int(_499)).x, texelFetch(l_geomPositionBuffer, int(_499 + 1u)).x);
        uint _506 = _505.x;
        _515 = unpackHalf2x16(_506).x;
        _516 = unpackHalf2x16(_506 >> 16u).x;
        _517 = unpackHalf2x16(_505.y).x;
    }
    float _553;
    float _554;
    float _555;
    if (_441)
    {
        uint _520 = _179 * 3u;
        uvec3 _529 = uvec3(texelFetch(l_geomPositionBuffer, int(_520)).x, texelFetch(l_geomPositionBuffer, int(_520 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_520 + 2u)).x);
        _553 = uintBitsToFloat(_529.x);
        _554 = uintBitsToFloat(_529.y);
        _555 = uintBitsToFloat(_529.z);
    }
    else
    {
        uint _537 = _179 * 2u;
        uvec2 _543 = uvec2(texelFetch(l_geomPositionBuffer, int(_537)).x, texelFetch(l_geomPositionBuffer, int(_537 + 1u)).x);
        uint _544 = _543.x;
        _553 = unpackHalf2x16(_544).x;
        _554 = unpackHalf2x16(_544 >> 16u).x;
        _555 = unpackHalf2x16(_543.y).x;
    }
    float _558 = (1.0 - hit._m0.x) - hit._m0.y;
    float _612 = (((float((_353 >> 8u) & 255u) * hit._m0.x) + (float((_272 >> 8u) & 255u) * _558)) + (float((_434 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _615 = (_347 - _266) * 0.00048828125;
    float _617 = (_348 - _267) * 0.00048828125;
    float _620 = (_428 - _266) * 0.00048828125;
    float _621 = (_429 - _267) * 0.00048828125;
    float _643 = _515 - _477;
    float _644 = _516 - _478;
    float _645 = _517 - _479;
    float _648 = fma(_645, gl_ObjectToWorldEXT[2u].x, fma(_644, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _643));
    float _651 = fma(_645, gl_ObjectToWorldEXT[2u].y, fma(_644, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _643));
    float _654 = fma(_645, gl_ObjectToWorldEXT[2u].z, fma(_644, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _643));
    float _655 = _553 - _477;
    float _656 = _554 - _478;
    float _657 = _555 - _479;
    float _660 = fma(_657, gl_ObjectToWorldEXT[2u].x, fma(_656, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _655));
    float _663 = fma(_657, gl_ObjectToWorldEXT[2u].y, fma(_656, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _655));
    float _666 = fma(_657, gl_ObjectToWorldEXT[2u].z, fma(_656, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _655));
    float _667 = (((_347 * hit._m0.x) + (_266 * _558)) + (_428 * hit._m0.y)) * 0.00048828125;
    float _668 = (((_348 * hit._m0.x) + (_267 * _558)) + (_429 * hit._m0.y)) * 0.00048828125;
    float _672 = (((float(_227) * _558) + (-127.0)) + (float(_312) * hit._m0.x)) + (float(_393) * hit._m0.y);
    float _675 = (((float(_228) * _558) + (-127.0)) + (float(_313) * hit._m0.x)) + (float(_394) * hit._m0.y);
    float _678 = (((float(_229) * _558) + (-127.0)) + (float(_314) * hit._m0.x)) + (float(_395) * hit._m0.y);
    float _679 = _672 * 0.0078740157186985015869140625;
    float _681 = _675 * 0.0078740157186985015869140625;
    float _682 = _678 * 0.0078740157186985015869140625;
    float _695 = ((((float(_238 & 255u) * _558) + (-127.0)) + (float(_322 & 255u) * hit._m0.x)) + (float(_403 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _696 = ((((float((_238 >> 8u) & 255u) * _558) + (-127.0)) + (float((_322 >> 8u) & 255u) * hit._m0.x)) + (float((_403 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((((float((_238 >> 16u) & 255u) * _558) + (-127.0)) + (float((_322 >> 16u) & 255u) * hit._m0.x)) + (float((_403 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((((float(_238 >> 24u) * _558) + (-127.0)) + (float(_322 >> 24u) * hit._m0.x)) + (float(_403 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _708 = ((_696 * _682) - (_697 * _681)) * _698;
    float _709 = ((_697 * _679) - (_695 * _682)) * _698;
    float _710 = ((_695 * _681) - (_696 * _679)) * _698;
    float _714 = inversesqrt(dot(vec3(_708, _709, _710), vec3(_708, _709, _710)));
    float _715 = _714 * _708;
    float _716 = _714 * _709;
    float _717 = _714 * _710;
    float _727 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _730 = ((-0.0) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0)));
    float _734 = _730 / cbMtdParam._m0[22u].z;
    float _735 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _736 = isnan(8.0) ? _735 : (isnan(_735) ? 8.0 : min(_735, 8.0));
    float _744 = cbMtdParam._m0[10u].x * _736;
    float _745 = cbMtdParam._m0[10u].y * _736;
    float _746 = cbMtdParam._m0[10u].z * _736;
    float _747 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _748 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _749 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _765 = (cbMtdParam._m0[21u].y + _730) * cbMtdParam._m0[23u].z;
    float _2581 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _774 = 1.0 - (isnan(cbMtdParam._m0[25u].y) ? 0.0 : (isnan(0.0) ? cbMtdParam._m0[25u].y : max(0.0, cbMtdParam._m0[25u].y)));
    float _776 = (cbMtdParam._m0[25u].x + ((((float(_353 & 255u) * hit._m0.x) + (float(_272 & 255u) * _558)) + (float(_434 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) - (_774 * cbMtdParam._m0[20u].z);
    float _787 = cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x;
    float _792 = cbMtdParam._m0[35u].x * _667;
    float _793 = cbMtdParam._m0[35u].y * _668;
    uvec2 _807 = uvec2(textureSize(M_Water_Melange_snp_0_Texture2D_2, int(0u)));
    bool _812 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _864;
    if (_812)
    {
        float _823 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _829 = (_666 * _651) - (_663 * _654);
        float _832 = (_660 * _654) - (_666 * _648);
        float _835 = (_663 * _648) - (_660 * _651);
        float _862 = ((log2((((float(_807.y) * 0.5) * float(_807.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_832 * _832) + (_835 * _835)) + (_829 * _829)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_823 * gl_WorldRayDirectionEXT.x, _823 * gl_WorldRayDirectionEXT.y, _823 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _864 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    }
    else
    {
        _864 = 0.0;
    }
    vec4 _868 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(((_792 + (_787 * cbMtdParam._m0[35u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_793 + (_787 * cbMtdParam._m0[35u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _864);
    float _870 = _868.x;
    float _871 = _868.y;
    float _2602 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _874 = isnan(1.0) ? _2602 : (isnan(_2602) ? 1.0 : min(_2602, 1.0));
    float _875 = _868.z - _874;
    float _2613 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _876 = isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0));
    float _888 = (_876 * 0.00999999977648258209228515625) + _667;
    float _890 = (_876 * (-0.00999999977648258209228515625)) + _668;
    uvec2 _903 = uvec2(textureSize(M_Water_Melange_snp_0_Texture2D_0, int(0u)));
    float _954;
    if (_812)
    {
        float _914 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _920 = (_666 * _651) - (_663 * _654);
        float _923 = (_660 * _654) - (_666 * _648);
        float _926 = (_663 * _648) - (_660 * _651);
        float _952 = ((log2((((float(_903.y) * 0.5) * float(_903.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_923 * _923) + (_926 * _926)) + (_920 * _920)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_914 * gl_WorldRayDirectionEXT.x, _914 * gl_WorldRayDirectionEXT.y, _914 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _954 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    }
    else
    {
        _954 = 0.0;
    }
    vec4 _956 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_888 + (cbMtdParam._m0[30u].z * _787)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_890 + (cbMtdParam._m0[30u].w * _787)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _954);
    float _960 = _956.z;
    float _1021;
    if (_812)
    {
        float _981 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _987 = (_666 * _651) - (_663 * _654);
        float _990 = (_660 * _654) - (_666 * _648);
        float _993 = (_663 * _648) - (_660 * _651);
        float _1019 = ((log2((((float(_903.y) * 0.5) * float(_903.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_990 * _990) + (_993 * _993)) + (_987 * _987)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_981 * gl_WorldRayDirectionEXT.x, _981 * gl_WorldRayDirectionEXT.y, _981 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1021 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    }
    else
    {
        _1021 = 0.0;
    }
    vec4 _1023 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_888 + (cbMtdParam._m0[30u].x * _787)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_890 + (cbMtdParam._m0[30u].y * _787)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1021);
    float _1027 = _1023.z;
    float _1030 = (_774 - _868.w) + (isnan(_1027) ? _960 : (isnan(_960) ? _1027 : max(_960, _1027)));
    float _2639 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    float _1032 = (_776 * (isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0)))) * (isnan(1.0) ? _2639 : (isnan(_2639) ? 1.0 : min(_2639, 1.0)));
    float _1045 = (_1032 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[14u].x * _876);
    float _1046 = (_1032 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[14u].y * _876);
    float _1047 = (_1032 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[14u].z * _876);
    float _1092;
    if (_812)
    {
        float _1076 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1084 = log2(0.0);
        float _1090 = ((_1084 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1076 * gl_WorldRayDirectionEXT.x, _1076 * gl_WorldRayDirectionEXT.y, _1076 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1092 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    }
    else
    {
        _1092 = 0.0;
    }
    vec4 _1095 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (((((uintBitsToFloat(_286.x) * hit._m0.x) + (uintBitsToFloat(_194.x) * _558)) + (uintBitsToFloat(_367.x) * hit._m0.y)) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].x * _787))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (((((uintBitsToFloat(_286.z) * hit._m0.x) + (uintBitsToFloat(_194.z) * _558)) + (uintBitsToFloat(_367.z) * hit._m0.y)) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].y * _787))) + cbTextureTilingScale._m0[1u].w), _1092);
    float _1100 = _1095.z * 0.099999986588954925537109375;
    float _2655 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _1102 = isnan(1.0) ? _2655 : (isnan(_2655) ? 1.0 : min(_2655, 1.0));
    float _1104 = cbMtdParam._m0[23u].x * _730;
    float _2666 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1105 = isnan(1.0) ? _2666 : (isnan(_2666) ? 1.0 : min(_2666, 1.0));
    float _1119 = (_1045 + (isnan(0.07999999821186065673828125) ? _747 : (isnan(_747) ? 0.07999999821186065673828125 : min(_747, 0.07999999821186065673828125)))) + (_1105 * (((1.0 - _1045) - _1102) + _1100));
    float _1121 = (_1046 + (isnan(0.07999999821186065673828125) ? _748 : (isnan(_748) ? 0.07999999821186065673828125 : min(_748, 0.07999999821186065673828125)))) + (_1105 * (((1.0 - _1046) - _1102) + _1100));
    float _1123 = (_1047 + (isnan(0.07999999821186065673828125) ? _749 : (isnan(_749) ? 0.07999999821186065673828125 : min(_749, 0.07999999821186065673828125)))) + (_1105 * (((1.0 - _1047) + _1100) - _1102));
    float _2677 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _1124 = isnan(1.0) ? _2677 : (isnan(_2677) ? 1.0 : min(_2677, 1.0));
    float _2688 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
    float _1125 = isnan(1.0) ? _2688 : (isnan(_2688) ? 1.0 : min(_2688, 1.0));
    float _2699 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
    float _1126 = isnan(1.0) ? _2699 : (isnan(_2699) ? 1.0 : min(_2699, 1.0));
    float _1131 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _874) + cbMtdParam._m0[19u].x;
    float _1139 = (1.0 - cbMtdParam._m0[28u].z) * (1.0 / cbMtdParam._m0[28u].y);
    float _2710 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _1140 = isnan(1.0) ? _2710 : (isnan(_2710) ? 1.0 : min(_2710, 1.0));
    float _1154 = (cbMtdParam._m0[33u].z * _787) + _792;
    float _1155 = (cbMtdParam._m0[33u].w * _787) + _793;
    float _1181 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[32u].z * _787) + _792)) + cbTextureTilingScale._m0[3u].z;
    float _1182 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[32u].w * _787) + _793)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _1184 = uvec2(textureSize(M_Water_Melange_snp_0_Texture2D_3, int(0u)));
    float _1235;
    if (_812)
    {
        float _1195 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1201 = (_666 * _651) - (_663 * _654);
        float _1204 = (_660 * _654) - (_666 * _648);
        float _1207 = (_663 * _648) - (_660 * _651);
        float _1233 = ((log2((((float(_1184.y) * 0.5) * float(_1184.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1204 * _1204) + (_1207 * _1207)) + (_1201 * _1201)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1195 * gl_WorldRayDirectionEXT.x, _1195 * gl_WorldRayDirectionEXT.y, _1195 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1235 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
    }
    else
    {
        _1235 = 0.0;
    }
    vec4 _1237 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2(_1181, _1182), _1235);
    float _1243 = (_1237.x * 2.0) + (-1.0);
    float _1245 = (_1237.y * 2.0) + (-1.0);
    float _1249 = 1.0 - dot(vec2(_1243, _1245), vec2(_1243, _1245));
    float _2726 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    float _1251 = sqrt(isnan(1.0) ? _2726 : (isnan(_2726) ? 1.0 : min(_2726, 1.0)));
    float _1254 = fma(_1251, _679, fma(_1245, _695, _1243 * _715));
    float _1257 = fma(_1251, _681, fma(_1245, _696, _1243 * _716));
    float _1260 = fma(_1251, _682, fma(_1245, _697, _1243 * _717));
    float _1264 = inversesqrt(dot(vec3(_1254, _1257, _1260), vec3(_1254, _1257, _1260)));
    float _1265 = cbPerFrame._m0[22u].x * 2.0;
    float _1266 = _1265 * cbMtdParam._m0[26u].w;
    float _1274 = (((_1257 * 0.5) * _1264) + (-0.25)) * cbMtdParam._m0[27u].x;
    float _1276 = (-0.0) - (cbMtdParam._m0[27u].x * (((_1254 * 0.5) * _1264) + (-0.25)));
    float _1277 = fract(_1266);
    float _1279 = fract(_1266 + 0.5);
    float _1290 = abs((_1277 * 2.0) + (-1.0));
    vec4 _1309 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1277 * _1276) + _1154) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1274 * _1277) + _1155) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1311 = _1309.x;
    float _1312 = _1309.y;
    float _1313 = _1309.z;
    vec4 _1314 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1279 * _1276) + _1154) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1274 * _1279) + _1155) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1325 = ((_1314.x - _1311) * _1290) + _1311;
    float _1326 = ((_1314.y - _1312) * _1290) + _1312;
    float _1327 = ((_1314.z - _1313) * _1290) + _1313;
    float _1341 = (cbMtdParam._m0[32u].x * _787) + _792;
    float _1342 = (cbMtdParam._m0[32u].y * _787) + _793;
    float _1395;
    if (_812)
    {
        float _1355 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1361 = (_666 * _651) - (_663 * _654);
        float _1364 = (_660 * _654) - (_666 * _648);
        float _1367 = (_663 * _648) - (_660 * _651);
        float _1393 = ((log2((((float(_1184.y) * 0.5) * float(_1184.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1364 * _1364) + (_1367 * _1367)) + (_1361 * _1361)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1355 * gl_WorldRayDirectionEXT.x, _1355 * gl_WorldRayDirectionEXT.y, _1355 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1395 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
    }
    else
    {
        _1395 = 0.0;
    }
    vec4 _1397 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2(_1181, _1182), _1395);
    float _1403 = (_1397.x * 2.0) + (-1.0);
    float _1404 = (_1397.y * 2.0) + (-1.0);
    float _1408 = 1.0 - dot(vec2(_1403, _1404), vec2(_1403, _1404));
    float _2742 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
    float _1410 = sqrt(isnan(1.0) ? _2742 : (isnan(_2742) ? 1.0 : min(_2742, 1.0)));
    float _1413 = fma(_1410, _679, fma(_1404, _695, _1403 * _715));
    float _1416 = fma(_1410, _681, fma(_1404, _696, _1403 * _716));
    float _1419 = fma(_1410, _682, fma(_1404, _697, _1403 * _717));
    float _1423 = inversesqrt(dot(vec3(_1413, _1416, _1419), vec3(_1413, _1416, _1419)));
    float _1424 = _1265 * cbMtdParam._m0[26u].x;
    float _1431 = (((_1416 * 0.5) * _1423) + (-0.25)) * cbMtdParam._m0[25u].w;
    float _1433 = (-0.0) - (cbMtdParam._m0[25u].w * (((_1413 * 0.5) * _1423) + (-0.25)));
    float _1434 = fract(_1424);
    float _1436 = fract(_1424 + 0.5);
    float _1447 = abs((_1434 * 2.0) + (-1.0));
    vec4 _1464 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1434 * _1433) + _1341) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1431 * _1434) + _1342) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1466 = _1464.x;
    float _1467 = _1464.y;
    float _1468 = _1464.z;
    vec4 _1469 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1436 * _1433) + _1341) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1431 * _1436) + _1342) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1508 = (cbMtdParam._m0[33u].x * _787) + _792;
    float _1509 = (cbMtdParam._m0[33u].y * _787) + _793;
    float _1562;
    if (_812)
    {
        float _1522 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1528 = (_666 * _651) - (_663 * _654);
        float _1531 = (_660 * _654) - (_666 * _648);
        float _1534 = (_663 * _648) - (_660 * _651);
        float _1560 = ((log2((((float(_1184.y) * 0.5) * float(_1184.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1531 * _1531) + (_1534 * _1534)) + (_1528 * _1528)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1522 * gl_WorldRayDirectionEXT.x, _1522 * gl_WorldRayDirectionEXT.y, _1522 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1562 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
    }
    else
    {
        _1562 = 0.0;
    }
    vec4 _1564 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2(_1181, _1182), _1562);
    float _1570 = (_1564.x * 2.0) + (-1.0);
    float _1571 = (_1564.y * 2.0) + (-1.0);
    float _1575 = 1.0 - dot(vec2(_1570, _1571), vec2(_1570, _1571));
    float _2758 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
    float _1577 = sqrt(isnan(1.0) ? _2758 : (isnan(_2758) ? 1.0 : min(_2758, 1.0)));
    float _1580 = fma(_1577, _679, fma(_1571, _695, _1570 * _715));
    float _1583 = fma(_1577, _681, fma(_1571, _696, _1570 * _716));
    float _1586 = fma(_1577, _682, fma(_1571, _697, _1570 * _717));
    float _1590 = inversesqrt(dot(vec3(_1580, _1583, _1586), vec3(_1580, _1583, _1586)));
    float _1591 = _1265 * cbMtdParam._m0[26u].z;
    float _1598 = (((_1583 * 0.5) * _1590) + (-0.25)) * cbMtdParam._m0[26u].y;
    float _1600 = (-0.0) - (cbMtdParam._m0[26u].y * (((_1580 * 0.5) * _1590) + (-0.25)));
    float _1601 = fract(_1591);
    float _1603 = fract(_1591 + 0.5);
    float _1614 = abs((_1601 * 2.0) + (-1.0));
    vec4 _1631 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1601 * _1600) + _1508) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1598 * _1601) + _1509) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1633 = _1631.x;
    float _1634 = _1631.y;
    float _1635 = _1631.z;
    vec4 _1636 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_1603 * _1600) + _1508) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1598 * _1603) + _1509) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1656 = (((((_1636.x - _1633) * _1614) + _1633) * cbMtdParam._m0[16u].x) + (_1325 * cbMtdParam._m0[17u].x)) + (((((cbMtdParam._m0[15u].x - cbMtdParam._m0[18u].x) * _1325) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].x) * (((_1469.x - _1466) * _1447) + _1466));
    float _1660 = (((((_1636.y - _1634) * _1614) + _1634) * cbMtdParam._m0[16u].y) + (_1326 * cbMtdParam._m0[17u].y)) + (((((cbMtdParam._m0[15u].y - cbMtdParam._m0[18u].y) * _1326) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].y) * (((_1469.y - _1467) * _1447) + _1467));
    float _1664 = (((((_1636.z - _1635) * _1614) + _1635) * cbMtdParam._m0[16u].z) + (_1327 * cbMtdParam._m0[17u].z)) + ((((cbMtdParam._m0[28u].w * _1327) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_1469.z - _1468) * _1447) + _1468));
    float _1668 = _1656 - (_1656 * _1140);
    float _1669 = _1660 - (_1660 * _1140);
    float _1670 = _1664 - (_1664 * _1140);
    float _1675 = (1.0 - cbMtdParam._m0[28u].x) * (1.0 / cbMtdParam._m0[27u].w);
    float _2769 = isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0));
    float _1676 = isnan(1.0) ? _2769 : (isnan(_2769) ? 1.0 : min(_2769, 1.0));
    float _1690 = (cbMtdParam._m0[34u].z * _787) + _792;
    float _1691 = (cbMtdParam._m0[34u].w * _787) + _793;
    uvec2 _1703 = uvec2(textureSize(M_Water_Melange_snp_0_Texture2D_8, int(0u)));
    float _1754;
    if (_812)
    {
        float _1714 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1720 = (_666 * _651) - (_663 * _654);
        float _1723 = (_660 * _654) - (_666 * _648);
        float _1726 = (_663 * _648) - (_660 * _651);
        float _1752 = ((log2((((float(_1703.y) * 0.5) * float(_1703.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1723 * _1723) + (_1726 * _1726)) + (_1720 * _1720)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1714 * gl_WorldRayDirectionEXT.x, _1714 * gl_WorldRayDirectionEXT.y, _1714 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1754 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
    }
    else
    {
        _1754 = 0.0;
    }
    vec4 _1756 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_1690 * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (_1691 * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), _1754);
    float _1758 = _1756.x;
    float _1759 = _1756.y;
    float _1760 = _1756.z;
    uvec2 _1780 = uvec2(textureSize(M_Water_Melange_snp_0_Texture2D_9, int(0u)));
    float _1831;
    if (_812)
    {
        float _1791 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1797 = (_666 * _651) - (_663 * _654);
        float _1800 = (_660 * _654) - (_666 * _648);
        float _1803 = (_663 * _648) - (_660 * _651);
        float _1829 = ((log2((((float(_1780.y) * 0.5) * float(_1780.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1800 * _1800) + (_1803 * _1803)) + (_1797 * _1797)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1791 * gl_WorldRayDirectionEXT.x, _1791 * gl_WorldRayDirectionEXT.y, _1791 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1831 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
    }
    else
    {
        _1831 = 0.0;
    }
    vec4 _1833 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _1690) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _1691) + cbTextureTilingScale._m0[9u].w), _1831);
    float _2790 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _1872 = isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0));
    float _1880 = _730 / cbMtdParam._m0[22u].w;
    float _2801 = isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0));
    float _1881 = isnan(1.0) ? _2801 : (isnan(_2801) ? 1.0 : min(_2801, 1.0));
    float _1882 = _876 * 0.23999999463558197021484375;
    float _1884 = _876 * (-0.20000000298023223876953125);
    float _1895 = cbMtdParam._m0[37u].x * _667;
    float _1896 = cbMtdParam._m0[37u].y * _668;
    float _1955;
    if (_812)
    {
        float _1915 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1921 = (_666 * _651) - (_663 * _654);
        float _1924 = (_660 * _654) - (_666 * _648);
        float _1927 = (_663 * _648) - (_660 * _651);
        float _1953 = ((log2((((float(_903.y) * 0.5) * float(_903.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1924 * _1924) + (_1927 * _1927)) + (_1921 * _1921)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1915 * gl_WorldRayDirectionEXT.x, _1915 * gl_WorldRayDirectionEXT.y, _1915 * gl_WorldRayDirectionEXT.z), vec3(_679, _681, _682))));
        _1955 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
    }
    else
    {
        _1955 = 0.0;
    }
    vec4 _1957 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].z * _787) + _1882) + _1895) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].w * _787) + _1884) + _1896) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1955);
    float _1976 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1977 = _1976 * gl_WorldRayDirectionEXT.x;
    float _1978 = _1976 * gl_WorldRayDirectionEXT.y;
    float _1979 = _1976 * gl_WorldRayDirectionEXT.z;
    float _2023;
    if (_812)
    {
        float _1989 = (_666 * _651) - (_663 * _654);
        float _1992 = (_660 * _654) - (_666 * _648);
        float _1995 = (_663 * _648) - (_660 * _651);
        float _2021 = ((log2((((float(_903.y) * 0.5) * float(_903.x)) * abs((_621 * _615) - (_620 * _617))) / (sqrt(((_1992 * _1992) + (_1995 * _1995)) + (_1989 * _1989)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1977, _1978, _1979), vec3(_679, _681, _682))));
        _2023 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
    }
    else
    {
        _2023 = 0.0;
    }
    vec4 _2025 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1895 + _1882) + (cbMtdParam._m0[37u].z * _787)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1896 + _1884) + (cbMtdParam._m0[37u].w * _787)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2023);
    float _2045 = (((_1023.x + (-0.5)) * 0.5) + _956.x) + (((_1957.x + (-1.0)) + _2025.x) * cbMtdParam._m0[24u].w);
    float _2046 = (((_1023.y + (-0.5)) * 0.5) + _956.y) + (((_1957.y + (-1.0)) + _2025.y) * cbMtdParam._m0[24u].w);
    float _2051 = ((_1095.x - _2045) * _1881) + _2045;
    float _2052 = ((_1095.y - _2046) * _1881) + _2046;
    float _2054 = _730 / cbMtdParam._m0[22u].y;
    float _2822 = isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0));
    float _2055 = isnan(1.0) ? _2822 : (isnan(_2822) ? 1.0 : min(_2822, 1.0));
    float _2071 = ((((_1872 * (0.5 - _870)) + _870) + (((_2051 + (-0.5)) + ((0.5 - _2051) * _2055)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2072 = ((((_1872 * (0.5 - _871)) + _871) + (((_2052 + (-0.5)) + ((0.5 - _2052) * _2055)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2073 = dot(vec2(_2071, _2072), vec2(_2071, _2072));
    float _2833 = isnan(0.0) ? _2073 : (isnan(_2073) ? 0.0 : max(_2073, 0.0));
    float _2078 = sqrt(1.0 - (isnan(1.0) ? _2833 : (isnan(_2833) ? 1.0 : min(_2833, 1.0))));
    float _2081 = fma(_2078, _679, fma(_2072, _695, _2071 * _715));
    float _2084 = fma(_2078, _681, fma(_2072, _696, _2071 * _716));
    float _2087 = fma(_2078, _682, fma(_2072, _697, _2071 * _717));
    float _2091 = inversesqrt(dot(vec3(_2081, _2084, _2087), vec3(_2081, _2084, _2087)));
    float _2092 = _2091 * _2081;
    float _2093 = _2091 * _2084;
    float _2094 = _2091 * _2087;
    float _2106 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2107 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2108 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2109 = (-0.0) - _1977;
    float _2110 = (-0.0) - _1978;
    float _2111 = (-0.0) - _1979;
    float _2117 = float(gl_LaunchIDEXT.x);
    float _2118 = float(gl_LaunchIDEXT.y);
    float _2121 = float(gl_LaunchSizeEXT.x);
    float _2135 = fract(fract(sin(dot(vec2(_2117 / _2121, _2118 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2148 = fract(fract(sin(dot(vec2((_2117 + 128.0) / _2121, (_2118 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _73._m0 = 1u;
    uvec4 _2158 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2159 = _2158.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2159, _2158.w, _2159, vec3(_2106, _2107, _2108), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2266;
    float _2267;
    float _2268;
    float _2269;
    float _2270;
    float _2271;
    if (_73._m0 == 0u)
    {
        float _2178 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2092, _2093, _2094));
        float _2844 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
        float _2181 = isnan(1.0) ? _2844 : (isnan(_2844) ? 1.0 : min(_2844, 1.0));
        float _2200 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1131) * 0.949999988079071044921875);
        float _2201 = _2200 * _2200;
        float _2202 = g_sceneCB._m0[4u].x - _1977;
        float _2203 = g_sceneCB._m0[4u].y - _1978;
        float _2204 = g_sceneCB._m0[4u].z - _1979;
        float _2208 = inversesqrt(dot(vec3(_2202, _2203, _2204), vec3(_2202, _2203, _2204)));
        float _2209 = _2208 * _2202;
        float _2210 = _2208 * _2203;
        float _2211 = _2208 * _2204;
        float _2212 = dot(vec3(_2092, _2093, _2094), vec3(g_sceneCB._m0[4u].xyz));
        float _2855 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
        float _2215 = isnan(1.0) ? _2855 : (isnan(_2855) ? 1.0 : min(_2855, 1.0));
        float _2216 = dot(vec3(_2092, _2093, _2094), vec3(_2109, _2110, _2111));
        float _2866 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
        float _2219 = isnan(1.0) ? _2866 : (isnan(_2866) ? 1.0 : min(_2866, 1.0));
        float _2220 = dot(vec3(_2092, _2093, _2094), vec3(_2209, _2210, _2211));
        float _2877 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
        float _2223 = isnan(1.0) ? _2877 : (isnan(_2877) ? 1.0 : min(_2877, 1.0));
        float _2224 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2209, _2210, _2211));
        float _2888 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
        float _2228 = _2201 * _2201;
        float _2232 = ((_2223 * _2223) * (_2228 + (-1.0))) + 1.0;
        float _2244 = (exp2(log2(1.0 - (isnan(1.0) ? _2888 : (isnan(_2888) ? 1.0 : min(_2888, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2246 = 1.0 - _2201;
        float _2257 = (0.5 / (((_2219 * ((_2215 * _2246) + _2201)) + 9.9999999392252902907785028219223e-09) + (((_2219 * _2246) + _2201) * _2215))) * _2215;
        float _2899 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
        float _2259 = (isnan(1.0) ? _2899 : (isnan(_2899) ? 1.0 : min(_2899, 1.0))) * (_2228 / ((_2232 * _2232) * 3.141590118408203125));
        _2266 = ((_1124 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2181;
        _2267 = ((_1125 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2181;
        _2268 = ((_1126 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2181;
        _2269 = (_2244 * g_sceneCB._m0[5u].x) * _2259;
        _2270 = (_2244 * g_sceneCB._m0[5u].y) * _2259;
        _2271 = (_2244 * g_sceneCB._m0[5u].z) * _2259;
    }
    else
    {
        _2266 = 0.0;
        _2267 = 0.0;
        _2268 = 0.0;
        _2269 = 0.0;
        _2270 = 0.0;
        _2271 = 0.0;
    }
    bool _2273 = abs(_2093) < 0.89999997615814208984375;
    float _2275 = float(_2273);
    float _2276 = _2273 ? 0.0 : 1.0;
    float _2279 = (_2275 * _2094) - (_2276 * _2093);
    float _2280 = _2276 * _2092;
    float _2282 = (-0.0) - (_2092 * _2275);
    float _2286 = inversesqrt(dot(vec3(_2279, _2280, _2282), vec3(_2279, _2280, _2282)));
    float _2287 = _2279 * _2286;
    float _2288 = _2280 * _2286;
    float _2289 = _2286 * _2282;
    float _2292 = (_2288 * _2094) - (_2289 * _2093);
    float _2295 = (_2289 * _2092) - (_2287 * _2094);
    float _2298 = (_2287 * _2093) - (_2288 * _2092);
    float _2300;
    float _2308;
    float _2299 = 0.0;
    uint _2301 = 0u;
    float _2305;
    bool _2307;
    for (;;)
    {
        _2305 = (float(_2301) + _2135) * 0.03125;
        _2307 = _2301 == 0u;
        float frontier_phi_61_pred;
        if (_2307)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _2447;
            float _2448;
            uint _2450;
            _2447 = 0.0;
            _2448 = 0.5;
            _2450 = _2301;
            float _2309;
            for (;;)
            {
                _2309 = ((_2450 & 1u) != 0u) ? (_2448 + _2447) : _2447;
                uint _2451 = _2450 >> 1u;
                if (_2451 == 0u)
                {
                    break;
                }
                else
                {
                    _2447 = _2309;
                    _2448 *= 0.5;
                    _2450 = _2451;
                }
            }
            frontier_phi_61_pred = _2309;
        }
        _2308 = frontier_phi_61_pred;
        float _2310 = _2308 + _2148;
        float _2314 = sqrt(_2305);
        float _2315 = ((_2310 > 1.0) ? (_2310 + (-1.0)) : _2310) * 6.283185482025146484375;
        float _2318 = cos(_2315) * _2314;
        float _2320 = sin(_2315) * _2314;
        float _2322 = sqrt(1.0 - _2305);
        float _2335 = ((_2322 * _2092) + (_2318 * _2292)) + (_2320 * _2287);
        float _2336 = ((_2322 * _2093) + (_2318 * _2295)) + (_2320 * _2288);
        float _2337 = ((_2322 * _2094) + (_2318 * _2298)) + (_2320 * _2289);
        _72._m0 = 1u;
        uvec4 _2341 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2342 = _2341.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2342, _2341.w, _2342, vec3(_2106, _2107, _2108), 9.9999997473787516355514526367188e-05, vec3(_2335, _2336, _2337), 10000.0, 1);
        float _2348 = dot(vec3(_2092, _2093, _2094), vec3(_2335, _2336, _2337));
        float _2910 = isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0));
        float _2351 = isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0));
        _2300 = ((float(_72._m0 == 0u) * _2351) / (_2351 * 0.3183098733425140380859375)) + _2299;
        uint _2302 = _2301 + 1u;
        if (_2302 == 32u)
        {
            break;
        }
        else
        {
            _2299 = _2300;
            _2301 = _2302;
            continue;
        }
    }
    float _2358 = _2300 * 0.009947183541953563690185546875;
    float _2363 = dot(vec3(_1977, _1978, _1979), vec3(_2092, _2093, _2094)) * 2.0;
    vec4 _2377 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1977 - (_2363 * _2092), _1978 - (_2363 * _2093), _1979 - (_2363 * _2094)), 4.0 - (_1131 * 4.0));
    float _2382 = dot(vec3(_2109, _2110, _2111), vec3(_2092, _2093, _2094));
    float _2921 = isnan(0.0) ? _2382 : (isnan(_2382) ? 0.0 : max(_2382, 0.0));
    float _2391 = (exp2(log2(1.0 - (isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2397 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2092, _2093, _2094), 0.0);
    float _2410 = (((((((_1758 * cbMtdParam._m0[11u].x) - _1668) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _1758) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].x) * _1833.x)) * _1676) + _1668) + _2266) + _2269) + (((_2397.x * _1124) + (_2391 * _2377.x)) * _2358);
    float _2416 = (((((((_1759 * cbMtdParam._m0[11u].y) - _1669) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _1759) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].y) * _1833.y)) * _1676) + _1669) + _2267) + _2270) + (((_2397.y * _1125) + (_2391 * _2377.y)) * _2358);
    float _2422 = (((((((_1760 * cbMtdParam._m0[11u].z) - _1670) + ((((cbMtdParam._m0[29u].x * _1760) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _1833.z)) * _1676) + _1670) + _2268) + _2271) + (((_2397.z * _1126) + (_2391 * _2377.z)) * _2358);
    float _2932 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
    float _2943 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2954 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    bool _2430 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2441;
    _2441.x = _2430 ? ((_672 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0)));
    _2441.y = _2430 ? ((_675 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2943 : (isnan(_2943) ? 1.0 : min(_2943, 1.0)));
    _2441.z = _2430 ? ((_678 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0)));
    payload._m0 = _2441;
}


