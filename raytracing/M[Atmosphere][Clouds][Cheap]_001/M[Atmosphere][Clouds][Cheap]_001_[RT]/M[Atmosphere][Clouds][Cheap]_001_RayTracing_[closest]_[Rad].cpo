#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_12;
layout(set = 0, binding = 2) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2385;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _168 & 65535u;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _169 >> 16u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        _174 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
        _177 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _182 * _174;
    uint _185 = _183 >> 2u;
    uvec3 _194 = uvec3(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x, texelFetch(l_geomAttrib_0, int(_185 + 2u)).x);
    uint _201 = _181.z;
    bool _202 = _201 != 0u;
    bool _204 = _133.w == 0u;
    bool _205 = _202 || _204;
    uint _206 = _183 + 12u;
    uint _229;
    uint _230;
    uint _231;
    uint _232;
    if (_205)
    {
        uvec4 _208 = texelFetch(l_geomAttrib_0, int(_206 >> 2u));
        uint _209 = _208.x;
        _229 = _209 & 255u;
        _230 = (_209 >> 8u) & 255u;
        _231 = (_209 >> 16u) & 255u;
        _232 = 16u;
    }
    else
    {
        uint _217 = _206 >> 2u;
        uvec2 _223 = uvec2(texelFetch(l_geomAttrib_0, int(_217)).x, texelFetch(l_geomAttrib_0, int(_217 + 1u)).x);
        uint _224 = _223.x;
        _229 = _224 & 65535u;
        _230 = _224 >> 16u;
        _231 = _223.y & 65535u;
        _232 = 20u;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int((_232 + _183) >> 2u));
    uint _240 = _239.x;
    bool _254 = _201 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _232 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_204)
        {
            frontier_phi_9_10_ladder = _232 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _232 + 12u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uint _259 = _202 ? (_255 + 4u) : _255;
    uint _262 = ((_183 + 4u) + _259) >> 2u;
    uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
    uint _269 = _268.x;
    uint _270 = _268.y;
    float _279 = float(int(uint(int(_270 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_270) >> int(16u))));
    uvec4 _284 = texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _259) >> 2u));
    uint _285 = _284.x;
    uvec4 _294 = texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _259) >> 2u));
    uint _295 = _294.x;
    uint _311 = _182 * _176;
    uint _312 = _311 >> 2u;
    uvec3 _321 = uvec3(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x, texelFetch(l_geomAttrib_0, int(_312 + 2u)).x);
    uint _328 = _311 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_205)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _311) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_254)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_204)
        {
            frontier_phi_16_17_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _352 + 12u;
        }
        _371 = frontier_phi_16_17_ladder;
    }
    uint _375 = _202 ? (_371 + 4u) : _371;
    uint _378 = ((_311 + 4u) + _375) >> 2u;
    uvec2 _384 = uvec2(texelFetch(l_geomAttrib_0, int(_378)).x, texelFetch(l_geomAttrib_0, int(_378 + 1u)).x);
    uint _385 = _384.x;
    uint _386 = _384.y;
    float _395 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _396 = float(int(uint(int(_386) >> int(16u))));
    uvec4 _400 = texelFetch(l_geomAttrib_0, int(((_311 + 12u) + _375) >> 2u));
    uint _401 = _400.x;
    uvec4 _410 = texelFetch(l_geomAttrib_0, int(((_311 + 16u) + _375) >> 2u));
    uint _411 = _410.x;
    uint _427 = _182 * _177;
    uint _428 = _427 >> 2u;
    uvec3 _437 = uvec3(texelFetch(l_geomAttrib_0, int(_428)).x, texelFetch(l_geomAttrib_0, int(_428 + 1u)).x, texelFetch(l_geomAttrib_0, int(_428 + 2u)).x);
    uint _444 = _427 + 12u;
    uint _465;
    uint _466;
    uint _467;
    uint _468;
    if (_205)
    {
        uvec4 _446 = texelFetch(l_geomAttrib_0, int(_444 >> 2u));
        uint _447 = _446.x;
        _465 = _447 & 255u;
        _466 = (_447 >> 8u) & 255u;
        _467 = (_447 >> 16u) & 255u;
        _468 = 16u;
    }
    else
    {
        uint _453 = _444 >> 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomAttrib_0, int(_453)).x, texelFetch(l_geomAttrib_0, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _465 = _460 & 65535u;
        _466 = _460 >> 16u;
        _467 = _459.y & 65535u;
        _468 = 20u;
    }
    uvec4 _474 = texelFetch(l_geomAttrib_0, int((_468 + _427) >> 2u));
    uint _475 = _474.x;
    uint _487;
    if (_254)
    {
        _487 = _468 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_204)
        {
            frontier_phi_23_24_ladder = _468 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _468 + 12u;
        }
        _487 = frontier_phi_23_24_ladder;
    }
    uint _491 = _202 ? (_487 + 4u) : _487;
    uint _494 = ((_427 + 4u) + _491) >> 2u;
    uvec2 _500 = uvec2(texelFetch(l_geomAttrib_0, int(_494)).x, texelFetch(l_geomAttrib_0, int(_494 + 1u)).x);
    uint _501 = _500.x;
    uint _502 = _500.y;
    float _511 = float(int(uint(int(_502 << 16u) >> int(16u))));
    float _512 = float(int(uint(int(_502) >> int(16u))));
    uvec4 _516 = texelFetch(l_geomAttrib_0, int(((_427 + 12u) + _491) >> 2u));
    uint _517 = _516.x;
    uvec4 _526 = texelFetch(l_geomAttrib_0, int(((_427 + 16u) + _491) >> 2u));
    uint _527 = _526.x;
    bool _544 = _133.z == 0u;
    float _580;
    float _581;
    float _582;
    if (_544)
    {
        uint _547 = _174 * 3u;
        uvec3 _556 = uvec3(texelFetch(l_geomPositionBuffer, int(_547)).x, texelFetch(l_geomPositionBuffer, int(_547 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_547 + 2u)).x);
        _580 = uintBitsToFloat(_556.x);
        _581 = uintBitsToFloat(_556.y);
        _582 = uintBitsToFloat(_556.z);
    }
    else
    {
        uint _564 = _174 * 2u;
        uvec2 _570 = uvec2(texelFetch(l_geomPositionBuffer, int(_564)).x, texelFetch(l_geomPositionBuffer, int(_564 + 1u)).x);
        uint _571 = _570.x;
        _580 = unpackHalf2x16(_571).x;
        _581 = unpackHalf2x16(_571 >> 16u).x;
        _582 = unpackHalf2x16(_570.y).x;
    }
    float _618;
    float _619;
    float _620;
    if (_544)
    {
        uint _585 = _176 * 3u;
        uvec3 _594 = uvec3(texelFetch(l_geomPositionBuffer, int(_585)).x, texelFetch(l_geomPositionBuffer, int(_585 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_585 + 2u)).x);
        _618 = uintBitsToFloat(_594.x);
        _619 = uintBitsToFloat(_594.y);
        _620 = uintBitsToFloat(_594.z);
    }
    else
    {
        uint _602 = _176 * 2u;
        uvec2 _608 = uvec2(texelFetch(l_geomPositionBuffer, int(_602)).x, texelFetch(l_geomPositionBuffer, int(_602 + 1u)).x);
        uint _609 = _608.x;
        _618 = unpackHalf2x16(_609).x;
        _619 = unpackHalf2x16(_609 >> 16u).x;
        _620 = unpackHalf2x16(_608.y).x;
    }
    float _656;
    float _657;
    float _658;
    if (_544)
    {
        uint _623 = _177 * 3u;
        uvec3 _632 = uvec3(texelFetch(l_geomPositionBuffer, int(_623)).x, texelFetch(l_geomPositionBuffer, int(_623 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_623 + 2u)).x);
        _656 = uintBitsToFloat(_632.x);
        _657 = uintBitsToFloat(_632.y);
        _658 = uintBitsToFloat(_632.z);
    }
    else
    {
        uint _640 = _177 * 2u;
        uvec2 _646 = uvec2(texelFetch(l_geomPositionBuffer, int(_640)).x, texelFetch(l_geomPositionBuffer, int(_640 + 1u)).x);
        uint _647 = _646.x;
        _656 = unpackHalf2x16(_647).x;
        _657 = unpackHalf2x16(_647 >> 16u).x;
        _658 = unpackHalf2x16(_646.y).x;
    }
    float _661 = (1.0 - hit._m0.x) - hit._m0.y;
    float _674 = ((uintBitsToFloat(_321.x) * hit._m0.x) + (uintBitsToFloat(_194.x) * _661)) + (uintBitsToFloat(_437.x) * hit._m0.y);
    float _675 = ((uintBitsToFloat(_321.y) * hit._m0.x) + (uintBitsToFloat(_194.y) * _661)) + (uintBitsToFloat(_437.y) * hit._m0.y);
    float _676 = ((uintBitsToFloat(_321.z) * hit._m0.x) + (uintBitsToFloat(_194.z) * _661)) + (uintBitsToFloat(_437.z) * hit._m0.y);
    float _739 = (((float(_411 & 255u) * hit._m0.x) + (float(_295 & 255u) * _661)) + (float(_527 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _743 = (((float((_411 >> 8u) & 255u) * hit._m0.x) + (float((_295 >> 8u) & 255u) * _661)) + (float((_527 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _754 = (_395 - _279) * 0.00048828125;
    float _756 = (_396 - _280) * 0.00048828125;
    float _759 = (_511 - _279) * 0.00048828125;
    float _760 = (_512 - _280) * 0.00048828125;
    float _782 = _618 - _580;
    float _783 = _619 - _581;
    float _784 = _620 - _582;
    float _787 = fma(_784, gl_ObjectToWorldEXT[2u].x, fma(_783, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _782));
    float _790 = fma(_784, gl_ObjectToWorldEXT[2u].y, fma(_783, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _782));
    float _793 = fma(_784, gl_ObjectToWorldEXT[2u].z, fma(_783, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _782));
    float _794 = _656 - _580;
    float _795 = _657 - _581;
    float _796 = _658 - _582;
    float _799 = fma(_796, gl_ObjectToWorldEXT[2u].x, fma(_795, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _794));
    float _802 = fma(_796, gl_ObjectToWorldEXT[2u].y, fma(_795, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _794));
    float _805 = fma(_796, gl_ObjectToWorldEXT[2u].z, fma(_795, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _794));
    float _806 = (((float(int(uint(int(_385 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_501 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _807 = (((float(int(uint(int(_385) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269) >> int(16u)))) * _661)) + (float(int(uint(int(_501) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _808 = (((_395 * hit._m0.x) + (_279 * _661)) + (_511 * hit._m0.y)) * 0.00048828125;
    float _809 = (((_396 * hit._m0.x) + (_280 * _661)) + (_512 * hit._m0.y)) * 0.00048828125;
    float _815 = (((float(_229) * _661) + (-127.0)) + (float(_349) * hit._m0.x)) + (float(_465) * hit._m0.y);
    float _818 = (((float(_230) * _661) + (-127.0)) + (float(_350) * hit._m0.x)) + (float(_466) * hit._m0.y);
    float _821 = (((float(_231) * _661) + (-127.0)) + (float(_351) * hit._m0.x)) + (float(_467) * hit._m0.y);
    float _822 = _815 * 0.0078740157186985015869140625;
    float _824 = _818 * 0.0078740157186985015869140625;
    float _825 = _821 * 0.0078740157186985015869140625;
    float _838 = ((((float(_240 & 255u) * _661) + (-127.0)) + (float(_359 & 255u) * hit._m0.x)) + (float(_475 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _839 = ((((float((_240 >> 8u) & 255u) * _661) + (-127.0)) + (float((_359 >> 8u) & 255u) * hit._m0.x)) + (float((_475 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _840 = ((((float((_240 >> 16u) & 255u) * _661) + (-127.0)) + (float((_359 >> 16u) & 255u) * hit._m0.x)) + (float((_475 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _841 = ((((float(_240 >> 24u) * _661) + (-127.0)) + (float(_359 >> 24u) * hit._m0.x)) + (float(_475 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _851 = ((_839 * _825) - (_840 * _824)) * _841;
    float _852 = ((_840 * _822) - (_838 * _825)) * _841;
    float _853 = ((_838 * _824) - (_839 * _822)) * _841;
    float _857 = inversesqrt(dot(vec3(_851, _852, _853), vec3(_851, _852, _853)));
    uvec4 _881 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _891 = (_881.w != 0u) ? cbMtdParam._m0[24u].w : (cbMtdParam._m0[22u].x * cbPerFrame._m0[22u].x);
    uvec2 _911 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_1, int(0u)));
    bool _916 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _969;
    if (_916)
    {
        float _927 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _933 = (_805 * _790) - (_802 * _793);
        float _936 = (_799 * _793) - (_805 * _787);
        float _939 = (_802 * _787) - (_799 * _790);
        float _966 = ((log2((((float(_911.y) * 0.5) * float(_911.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_936 * _936) + (_939 * _939)) + (_933 * _933)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_927 * gl_WorldRayDirectionEXT.x, _927 * gl_WorldRayDirectionEXT.y, _927 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _969 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    }
    else
    {
        _969 = 0.0;
    }
    vec4 _973 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[36u].z) * ((_891 * cbMtdParam._m0[36u].x) + _808)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[36u].w) * ((_891 * cbMtdParam._m0[36u].y) + _809)) + cbTextureTilingScale._m0[0u].w), _969);
    float _975 = _973.x;
    uvec2 _1014 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_2, int(0u)));
    float _1065;
    if (_916)
    {
        float _1025 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1031 = (_805 * _790) - (_802 * _793);
        float _1034 = (_799 * _793) - (_805 * _787);
        float _1037 = (_802 * _787) - (_799 * _790);
        float _1063 = ((log2((((float(_1014.y) * 0.5) * float(_1014.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1034 * _1034) + (_1037 * _1037)) + (_1031 * _1031)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1025 * gl_WorldRayDirectionEXT.x, _1025 * gl_WorldRayDirectionEXT.y, _1025 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1065 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    }
    else
    {
        _1065 = 0.0;
    }
    vec4 _1068 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((cbMtdParam._m0[29u].x * _891) + (_975 * cbMtdParam._m0[26u].z)) + cbMtdParam._m0[37u].x) + (cbMtdParam._m0[27u].x * _808)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((cbMtdParam._m0[29u].y * _891) + (_975 * cbMtdParam._m0[26u].w)) + cbMtdParam._m0[37u].y) + (cbMtdParam._m0[27u].y * _809)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1065);
    float _1070 = _1068.x;
    float _1071 = _1068.y;
    float _1072 = _1068.z;
    uvec2 _1114 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_12, int(0u)));
    float _1165;
    if (_916)
    {
        float _1125 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1131 = (_805 * _790) - (_802 * _793);
        float _1134 = (_799 * _793) - (_805 * _787);
        float _1137 = (_802 * _787) - (_799 * _790);
        float _1163 = ((log2((((float(_1114.y) * 0.5) * float(_1114.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1134 * _1134) + (_1137 * _1137)) + (_1131 * _1131)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1125 * gl_WorldRayDirectionEXT.x, _1125 * gl_WorldRayDirectionEXT.y, _1125 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1165 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    }
    else
    {
        _1165 = 0.0;
    }
    vec4 _1167 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_12, SS_WrapLinear), vec2((((((cbMtdParam._m0[35u].x * _891) + (cbMtdParam._m0[35u].z * _975)) + cbMtdParam._m0[34u].x) + (cbMtdParam._m0[34u].z * _808)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((cbMtdParam._m0[35u].y * _891) + (cbMtdParam._m0[35u].w * _975)) + cbMtdParam._m0[34u].y) + (cbMtdParam._m0[34u].w * _809)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1165);
    float _1174 = (cbMtdParam._m0[19u].w * _743) * _1167.w;
    float _1175 = _1174 + ((cbMtdParam._m0[19u].z * _743) * _1068.w);
    float _2516 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
    float _1176 = isnan(1.0) ? _2516 : (isnan(_2516) ? 1.0 : min(_2516, 1.0));
    uvec4 _1180 = floatBitsToUint(cbMtdParam._m0[10u]);
    bool _1182 = _1180.y != 0u;
    uvec4 _1186 = floatBitsToUint(cbMtdParam._m0[11u]);
    float _1194 = cbMtdParam._m0[33u].z * _975;
    float _1195 = cbMtdParam._m0[33u].w * _975;
    float _1201 = (((float(texelFetch(l_geomAttrib_0, int(((_311 + 20u) + _375) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 20u) + _259) >> 2u)).x & 255u) * _661)) + (float(texelFetch(l_geomAttrib_0, int(((_427 + 20u) + _491) >> 2u)).x & 255u) * hit._m0.y)) * 0.007843137718737125396728515625;
    float _1221 = (((cbMtdParam._m0[31u].w * _891) + _1195) + cbMtdParam._m0[28u].w) + (cbMtdParam._m0[31u].y * _807);
    float _2527 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1257;
    if (_916)
    {
        float _1241 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1249 = log2(0.0);
        float _1255 = ((_1249 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1241 * gl_WorldRayDirectionEXT.x, _1241 * gl_WorldRayDirectionEXT.y, _1241 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    vec4 _1260 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((((cbMtdParam._m0[28u].z + _1194) + ((cbMtdParam._m0[31u].z - (cbMtdParam._m0[31u].z * _1201)) * _891)) + (cbMtdParam._m0[31u].x * _806)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1186.x != 0u) ? _1221 : (isnan(1.0) ? _2527 : (isnan(_2527) ? 1.0 : min(_2527, 1.0)))) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1257);
    float _1262 = _1260.x;
    float _1263 = _1260.y;
    float _1264 = _1260.z;
    float _1289 = ((cbMtdParam._m0[30u].z + _1194) + ((cbMtdParam._m0[27u].z - (cbMtdParam._m0[27u].z * _1201)) * _891)) + (cbMtdParam._m0[30u].x * _806);
    float _1292 = ((cbMtdParam._m0[30u].w + _1195) + ((cbMtdParam._m0[27u].w - (cbMtdParam._m0[27u].w * _1201)) * _891)) + (cbMtdParam._m0[30u].y * _807);
    float _2543 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
    float _2554 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
    float _1331;
    if (_916)
    {
        float _1315 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1323 = log2(0.0);
        float _1329 = ((_1323 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1315 * gl_WorldRayDirectionEXT.x, _1315 * gl_WorldRayDirectionEXT.y, _1315 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1331 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
    }
    else
    {
        _1331 = 0.0;
    }
    vec4 _1334 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_881.x != 0u) ? _1289 : (isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0)))) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1180.w != 0u) ? _1292 : (isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0)))) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1331);
    float _1341 = (cbMtdParam._m0[24u].y * _739) * _1334.w;
    float _1342 = _1341 + (_1260.w * _739);
    float _2570 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    float _1343 = isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0));
    float _1368 = ((cbMtdParam._m0[32u].z + _1194) + ((cbMtdParam._m0[32u].x - (cbMtdParam._m0[32u].x * _1201)) * _891)) + (cbMtdParam._m0[33u].x * _806);
    float _1371 = ((cbMtdParam._m0[32u].w + _1195) + ((cbMtdParam._m0[32u].y - (cbMtdParam._m0[32u].y * _1201)) * _891)) + (cbMtdParam._m0[33u].y * _807);
    float _2581 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
    float _2592 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
    float _1410;
    if (_916)
    {
        float _1394 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1402 = log2(0.0);
        float _1408 = ((_1402 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1394 * gl_WorldRayDirectionEXT.x, _1394 * gl_WorldRayDirectionEXT.y, _1394 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1410 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
    }
    else
    {
        _1410 = 0.0;
    }
    vec4 _1413 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_881.y != 0u) ? _1368 : (isnan(1.0) ? _2592 : (isnan(_2592) ? 1.0 : min(_2592, 1.0)))) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1180.x != 0u) ? _1371 : (isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0)))) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1410);
    float _1415 = _1413.x;
    float _1416 = _1413.y;
    float _1417 = _1413.z;
    float _1420 = (cbMtdParam._m0[23u].w * _739) * _1413.w;
    float _1421 = _1420 + _1343;
    float _2608 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    float _1424 = (_1182 ? _1343 : (isnan(1.0) ? _2608 : (isnan(_2608) ? 1.0 : min(_2608, 1.0)))) + _1176;
    float _1425 = _1424 + _1420;
    float _2619 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
    float _1450 = (((cbMtdParam._m0[29u].z * _891) + (cbMtdParam._m0[28u].x * _975)) + cbMtdParam._m0[37u].z) + (((((float(int(uint(int(_401 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_517 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[38u].x);
    float _1453 = (((cbMtdParam._m0[29u].w * _891) + (cbMtdParam._m0[28u].y * _975)) + cbMtdParam._m0[37u].w) + (((((float(int(uint(int(_401) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285) >> int(16u)))) * _661)) + (float(int(uint(int(_517) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[38u].y);
    float _2630 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
    float _1455 = (_1180.z != 0u) ? _1453 : (isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0)));
    float _1466 = inversesqrt(dot(vec3(cbMtdParam._m0[39u].yzw), vec3(cbMtdParam._m0[39u].yzw)));
    float _1467 = _1466 * cbMtdParam._m0[39u].y;
    float _1468 = _1466 * cbMtdParam._m0[39u].z;
    float _1469 = _1466 * cbMtdParam._m0[39u].w;
    float _1478 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[22u].x) * cbMtdParam._m0[23u].y;
    float _1481 = (cbMtdParam._m0[23u].z * 0.25) * dot(vec4(_1467, _1468, _1469, 0.0), vec4(_857 * _851, _857 * _852, _857 * _853, 0.0));
    float _1484 = (cbMtdParam._m0[23u].z * (-0.25)) * dot(vec4(_1467, _1468, _1469, 0.0), vec4(_838, _839, _840, 0.0));
    float _1485 = fract(_1478);
    float _1487 = fract(_1478 + 0.5);
    float _1499 = abs((_1485 * 2.0) + (-1.0));
    vec4 _1520 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((_1485 * _1484) + _1450)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((_1481 * _1485) + _1455)) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1522 = _1520.x;
    float _1523 = _1520.y;
    float _1524 = _1520.z;
    float _1525 = _1520.w;
    vec4 _1526 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((_1487 * _1484) + _1450) + cbMtdParam._m0[26u].x)) + cbTextureTilingScale._m0[3u].z, ((((_1487 * _1481) + _1455) + cbMtdParam._m0[26u].y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1541 = (((_1526.w - _1525) * _1499) + _1525) * ((((float((_411 >> 16u) & 255u) * hit._m0.x) + (float((_295 >> 16u) & 255u) * _661)) + (float((_527 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1542 = _1541 + (_1182 ? (isnan(1.0) ? _2619 : (isnan(_2619) ? 1.0 : min(_2619, 1.0))) : _1424);
    float _2641 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
    float _1548 = ((isnan(1.0) ? _2641 : (isnan(_2641) ? 1.0 : min(_2641, 1.0))) * cbMtdParam._m0[20u].x) * cbMtdParam._m0[25u].z;
    float _1569 = (_1341 * (_1334.x - _1262)) + _1262;
    float _1570 = _1569 * _739;
    float _1571 = (_1341 * (_1334.y - _1263)) + _1263;
    float _1572 = _1571 * _739;
    float _1573 = (_1341 * (_1334.z - _1264)) + _1264;
    float _1574 = _1573 * _739;
    float _1590 = _1182 ? _1570 : ((_1420 * (_739 * (_1415 - _1569))) + _1570);
    float _1591 = _1182 ? _1572 : ((_1420 * (_739 * (_1416 - _1571))) + _1572);
    float _1592 = _1182 ? _1574 : ((_1420 * (_739 * (_1417 - _1573))) + _1574);
    float _1599 = ((((_1174 * (_1167.x - _1070)) + _1070) - _1590) * _1176) + _1590;
    float _1600 = ((((_1174 * (_1167.y - _1071)) + _1071) - _1591) * _1176) + _1591;
    float _1601 = ((((_1174 * (_1167.z - _1072)) + _1072) - _1592) * _1176) + _1592;
    float _1611 = _1182 ? ((((_1415 * _739) - _1599) * _1420) + _1599) : _1599;
    float _1612 = _1182 ? ((((_1416 * _739) - _1600) * _1420) + _1600) : _1600;
    float _1613 = _1182 ? ((((_1417 * _739) - _1601) * _1420) + _1601) : _1601;
    float _1623 = (_1541 * ((_1522 - _1611) + ((_1526.x - _1522) * _1499))) + _1611;
    float _1624 = (_1541 * ((_1523 - _1612) + ((_1526.y - _1523) * _1499))) + _1612;
    float _1625 = (_1541 * ((_1524 - _1613) + ((_1526.z - _1524) * _1499))) + _1613;
    float _2652 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
    float _2663 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
    float _2674 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
    float _1638 = exp2(log2((isnan(1.0) ? _2652 : (isnan(_2652) ? 1.0 : min(_2652, 1.0))) * cbMtdParam._m0[25u].x) * cbMtdParam._m0[18u].w);
    float _1639 = exp2(log2((isnan(1.0) ? _2663 : (isnan(_2663) ? 1.0 : min(_2663, 1.0))) * cbMtdParam._m0[25u].x) * cbMtdParam._m0[18u].w);
    float _1640 = exp2(log2((isnan(1.0) ? _2674 : (isnan(_2674) ? 1.0 : min(_2674, 1.0))) * cbMtdParam._m0[25u].x) * cbMtdParam._m0[18u].w);
    float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
    float _1642 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
    float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
    float _1649 = 1.0 - _1641;
    float _1650 = 1.0 - _1642;
    float _1651 = 1.0 - _1643;
    float _1659 = (_1641 / (isnan(0.001000000047497451305389404296875) ? _1649 : (isnan(_1649) ? 0.001000000047497451305389404296875 : max(_1649, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[20u].z;
    float _1660 = (_1642 / (isnan(0.001000000047497451305389404296875) ? _1650 : (isnan(_1650) ? 0.001000000047497451305389404296875 : max(_1650, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[20u].z;
    float _1661 = (_1643 / (isnan(0.001000000047497451305389404296875) ? _1651 : (isnan(_1651) ? 0.001000000047497451305389404296875 : max(_1651, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[20u].z;
    float _1679 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
    float _1680 = _1679 * _674;
    float _1681 = _1679 * _675;
    float _1682 = _1679 * _676;
    bool _1684 = _1186.y != 0u;
    float _1691 = inversesqrt(dot(vec3(cbMtdParam._m0[38u].zw, cbMtdParam._m0[39u].x), vec3(cbMtdParam._m0[38u].zw, cbMtdParam._m0[39u].x)));
    float _1700 = _1684 ? g_sceneCB._m0[4u].x : (_1691 * cbMtdParam._m0[38u].z);
    float _1701 = _1684 ? g_sceneCB._m0[4u].y : (_1691 * cbMtdParam._m0[38u].w);
    float _1702 = _1684 ? g_sceneCB._m0[4u].z : (_1691 * cbMtdParam._m0[39u].x);
    float _1706 = inversesqrt(dot(vec3(_1700, _1701, _1702), vec3(_1700, _1701, _1702)));
    float _1707 = _1700 * _1706;
    float _1708 = _1701 * _1706;
    float _1709 = _1702 * _1706;
    float _1710 = dot(vec4(_1680, _1681, _1682, 0.0), vec4(_1707, _1708, _1709, 0.0));
    float _2730 = isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0));
    float _1713 = isnan(1.0) ? _2730 : (isnan(_2730) ? 1.0 : min(_2730, 1.0));
    float _1715 = 1.0 - (_1713 * _1713);
    float _1717 = (-0.0) - (_1715 - cbMtdParam._m0[23u].x);
    float _1722 = exp2(log2(isnan(0.001000000047497451305389404296875) ? _1717 : (isnan(_1717) ? 0.001000000047497451305389404296875 : max(_1717, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].y);
    float _2746 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    float _1723 = isnan(1.0) ? _2746 : (isnan(_2746) ? 1.0 : min(_2746, 1.0));
    float _1750 = inversesqrt(dot(vec3(_1707, _1708, _1709), vec3(_1707, _1708, _1709)));
    float _1765 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1680, _1681, _1682, 0.0), vec4(_1750 * _1707, _1750 * _1708, _1750 * _1709, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2757 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
    float _1767 = isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0));
    float _1773 = exp2(log2(_1767 * 6.5) * 7.0);
    float _2768 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
    float _1775 = (isnan(1.0) ? _2768 : (isnan(_2768) ? 1.0 : min(_2768, 1.0))) + _1767;
    float _2779 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
    float _1776 = isnan(1.0) ? _2779 : (isnan(_2779) ? 1.0 : min(_2779, 1.0));
    float _2790 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    float _1789 = isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0));
    float _1790 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(0.0, -1.0, 0.0, 0.0));
    float _1794 = isnan(0.004999999888241291046142578125) ? _1790 : (isnan(_1790) ? 0.004999999888241291046142578125 : max(_1790, 0.004999999888241291046142578125));
    float _1840;
    if (_916)
    {
        float _1824 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1832 = log2(0.0);
        float _1838 = ((_1832 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1824 * gl_WorldRayDirectionEXT.x, _1824 * gl_WorldRayDirectionEXT.y, _1824 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1840 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
    }
    else
    {
        _1840 = 0.0;
    }
    vec4 _1843 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_001_snp_0_Texture2D_6, SS_WrapLinear), vec2((((_881.z != 0u) ? (1.0 - ((g_sceneCB._m0[4u].y + 1.0) * 0.25)) : (cbMtdParam._m0[21u].w * 0.0416666679084300994873046875)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (1.0 - (isnan(0.99500000476837158203125) ? _1794 : (isnan(_1794) ? 0.99500000476837158203125 : min(_1794, 0.99500000476837158203125))))) + cbTextureTilingScale._m0[6u].w), _1840);
    float _1871 = ((_1776 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * _1843.x;
    float _1872 = ((_1776 * (cbMtdParam._m0[15u].w - cbMtdParam._m0[16u].w)) + cbMtdParam._m0[16u].w) * _1843.y;
    float _1873 = ((_1776 * (cbMtdParam._m0[16u].x - cbMtdParam._m0[17u].x)) + cbMtdParam._m0[17u].x) * _1843.z;
    float _1874 = isnan(_1872) ? _1871 : (isnan(_1871) ? _1872 : max(_1871, _1872));
    float _1875 = isnan(_1873) ? _1874 : (isnan(_1874) ? _1873 : max(_1874, _1873));
    float _1878;
    float _1880;
    if (_1875 < 1.1920928955078125e-07)
    {
        _1878 = 0.0;
        _1880 = 0.0;
    }
    else
    {
        float _1904 = isnan(_1872) ? _1871 : (isnan(_1871) ? _1872 : min(_1871, _1872));
        float _1906 = _1875 - (isnan(_1873) ? _1904 : (isnan(_1904) ? _1873 : min(_1904, _1873)));
        float _1881 = _1906 / _1875;
        float frontier_phi_50_51_ladder;
        float frontier_phi_50_51_ladder_1;
        if (_1906 < 1.1920928955078125e-07)
        {
            frontier_phi_50_51_ladder = _1881;
            frontier_phi_50_51_ladder_1 = 0.0;
        }
        else
        {
            float _2254;
            if (_1875 == _1871)
            {
                _2254 = ((_1872 - _1873) / _1906) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_62_59_ladder;
                if (_1875 == _1872)
                {
                    frontier_phi_62_59_ladder = (((_1873 - _1871) / _1906) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_62_59_ladder = (((_1871 - _1872) / _1906) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _2254 = frontier_phi_62_59_ladder;
            }
            float _2259 = (_2254 < 0.0) ? (_2254 + 1.0) : _2254;
            precise float _1879 = (_2259 - floor(_2259)) * 6.0;
            frontier_phi_50_51_ladder = _1881;
            frontier_phi_50_51_ladder_1 = _1879;
        }
        _1878 = frontier_phi_50_51_ladder_1;
        _1880 = frontier_phi_50_51_ladder;
    }
    float _1883 = cbMtdParam._m0[18u].z + _1880;
    float _2836 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0));
    float _1884 = isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0));
    float _1886 = cbMtdParam._m0[21u].z + _1875;
    float _2847 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
    float _1887 = isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0));
    uint _1889 = uint(int(floor(_1878)));
    float _1891 = _1878 - float(int(_1889));
    float _1893 = _1887 * (1.0 - _1884);
    float _1896 = (1.0 - (_1891 * _1884)) * _1887;
    float _1900 = (1.0 - ((1.0 - _1891) * _1884)) * _1887;
    float _1908;
    float _1910;
    float _1911;
    if ((_1889 == 0u) || (_1889 == 6u))
    {
        _1908 = _1887;
        _1910 = _1900;
        _1911 = _1893;
    }
    else
    {
        float frontier_phi_52_53_ladder;
        float frontier_phi_52_53_ladder_1;
        float frontier_phi_52_53_ladder_2;
        if (_1889 == 1u)
        {
            frontier_phi_52_53_ladder = _1893;
            frontier_phi_52_53_ladder_1 = _1887;
            frontier_phi_52_53_ladder_2 = _1896;
        }
        else
        {
            float frontier_phi_52_53_ladder_57_ladder;
            float frontier_phi_52_53_ladder_57_ladder_1;
            float frontier_phi_52_53_ladder_57_ladder_2;
            if (_1889 == 2u)
            {
                frontier_phi_52_53_ladder_57_ladder = _1900;
                frontier_phi_52_53_ladder_57_ladder_1 = _1887;
                frontier_phi_52_53_ladder_57_ladder_2 = _1893;
            }
            else
            {
                float frontier_phi_52_53_ladder_57_ladder_61_ladder;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
                if (_1889 == 3u)
                {
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _1887;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1896;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _1893;
                }
                else
                {
                    bool _2322 = _1889 == 4u;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _2322 ? _1887 : _1896;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1893;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _2322 ? _1900 : _1887;
                }
                frontier_phi_52_53_ladder_57_ladder = frontier_phi_52_53_ladder_57_ladder_61_ladder;
                frontier_phi_52_53_ladder_57_ladder_1 = frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                frontier_phi_52_53_ladder_57_ladder_2 = frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
            }
            frontier_phi_52_53_ladder = frontier_phi_52_53_ladder_57_ladder;
            frontier_phi_52_53_ladder_1 = frontier_phi_52_53_ladder_57_ladder_1;
            frontier_phi_52_53_ladder_2 = frontier_phi_52_53_ladder_57_ladder_2;
        }
        _1908 = frontier_phi_52_53_ladder_2;
        _1910 = frontier_phi_52_53_ladder_1;
        _1911 = frontier_phi_52_53_ladder;
    }
    float _1920 = exp2(log2(_1908) * cbMtdParam._m0[18u].y);
    float _1921 = exp2(log2(_1910) * cbMtdParam._m0[18u].y);
    float _1922 = exp2(log2(_1911) * cbMtdParam._m0[18u].y);
    float _1929 = (((((_1776 * (cbMtdParam._m0[12u].z - cbMtdParam._m0[13u].z)) + cbMtdParam._m0[13u].z) * ((_1723 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1659 : (isnan(_1659) ? 0.001000000047497451305389404296875 : max(_1659, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].x) - _1641)) + _1641)) - _1920) * _1789) + _1920;
    float _1930 = (((((_1776 * (cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].w)) + cbMtdParam._m0[13u].w) * ((_1723 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1660 : (isnan(_1660) ? 0.001000000047497451305389404296875 : max(_1660, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].x) - _1642)) + _1642)) - _1921) * _1789) + _1921;
    float _1931 = (((((_1776 * (cbMtdParam._m0[13u].x - cbMtdParam._m0[14u].x)) + cbMtdParam._m0[14u].x) * ((_1723 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1661 : (isnan(_1661) ? 0.001000000047497451305389404296875 : max(_1661, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].x) - _1643)) + _1643)) - _1922) * _1789) + _1922;
    float _1949 = inversesqrt(dot(vec3(cbMtdParam._m0[40u].xyz), vec3(cbMtdParam._m0[40u].xyz)));
    float _1957 = (dot(vec4(_1680, _1681, _1682, 0.0), vec4(_1949 * cbMtdParam._m0[40u].x, _1949 * cbMtdParam._m0[40u].y, _1949 * cbMtdParam._m0[40u].z, 0.0)) + 1.0) * 0.5;
    float _2858 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
    float _1964 = cbMtdParam._m0[24u].x * exp2(log2(isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0))) * cbMtdParam._m0[24u].z);
    float _2869 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
    float _1965 = isnan(1.0) ? _2869 : (isnan(_2869) ? 1.0 : min(_2869, 1.0));
    float _1977 = (-0.0) - (_1715 - cbMtdParam._m0[20u].w);
    float _1978 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
    float _1992 = (-0.0) - (_1715 - cbMtdParam._m0[22u].y);
    float _1993 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
    float _2006 = 1.0 - exp2(log2(_1713) * cbMtdParam._m0[25u].w);
    float _2008 = (-0.0) - (_2006 - cbMtdParam._m0[17u].z);
    float _2009 = isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0));
    float _2017 = (-0.0) - (_2006 - cbMtdParam._m0[19u].x);
    float _2018 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2028 = ((cbMtdParam._m0[22u].z * exp2(log2(isnan(64.0) ? _1993 : (isnan(_1993) ? 64.0 : min(_1993, 64.0))) * 1.64999997615814208984375)) + (cbMtdParam._m0[22u].w * exp2(log2(isnan(64.0) ? _1978 : (isnan(_1978) ? 64.0 : min(_1978, 64.0))) * 2.599999904632568359375))) + (cbMtdParam._m0[19u].y * (exp2(log2(isnan(64.0) ? _2018 : (isnan(_2018) ? 64.0 : min(_2018, 64.0))) * 4.0) + exp2(log2(isnan(64.0) ? _2009 : (isnan(_2009) ? 64.0 : min(_2009, 64.0))) * 1.87000000476837158203125)));
    float _2030 = ((_1965 * ((cbMtdParam._m0[11u].z * _1929) - _1929)) + _1929) + (_2028 * cbMtdParam._m0[14u].z);
    float _2032 = ((_1965 * ((cbMtdParam._m0[11u].w * _1930) - _1930)) + _1930) + (_2028 * cbMtdParam._m0[14u].w);
    float _2034 = ((_1965 * ((cbMtdParam._m0[12u].x * _1931) - _1931)) + _1931) + (_2028 * cbMtdParam._m0[15u].x);
    float _2042 = float(gl_LaunchIDEXT.x);
    float _2043 = float(gl_LaunchIDEXT.y);
    float _2046 = float(gl_LaunchSizeEXT.x);
    float _2051 = ((_2042 + 0.5) / _2046) + (-0.5);
    float _2053 = ((_2043 + 0.5) / _85) + (-0.5);
    float _2060 = exp2(log2(sqrt((_2053 * _2053) + (_2051 * _2051))) * cbMtdParam._m0[18u].x);
    float _2920 = isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0));
    float _2062 = 1.0 - (isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0)));
    float _2072 = (((_2062 * _2030) - _2030) * cbMtdParam._m0[17u].w) + _2030;
    float _2073 = (((_2062 * _2032) - _2032) * cbMtdParam._m0[17u].w) + _2032;
    float _2074 = (((_2062 * _2034) - _2034) * cbMtdParam._m0[17u].w) + _2034;
    float _2082 = inversesqrt(dot(vec3(_822, _824, _825), vec3(_822, _824, _825)));
    float _2083 = _2082 * _822;
    float _2084 = _2082 * _824;
    float _2085 = _2082 * _825;
    float _2097 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2098 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2099 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2103 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2104 = _2103 * gl_WorldRayDirectionEXT.x;
    float _2105 = _2103 * gl_WorldRayDirectionEXT.y;
    float _2106 = _2103 * gl_WorldRayDirectionEXT.z;
    float _2107 = (-0.0) - _2104;
    float _2108 = (-0.0) - _2105;
    float _2109 = (-0.0) - _2106;
    float _2123 = fract(fract(sin(dot(vec2(_2042 / _2046, _2043 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2136 = fract(fract(sin(dot(vec2((_2042 + 128.0) / _2046, (_2043 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _2141 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2142 = _2141.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2142, _2141.w, _2142, vec3(_2097, _2098, _2099), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2208;
    float _2209;
    float _2210;
    if (_71._m0 == 0u)
    {
        float _2163 = g_sceneCB._m0[4u].x - _2104;
        float _2164 = g_sceneCB._m0[4u].y - _2105;
        float _2165 = g_sceneCB._m0[4u].z - _2106;
        float _2169 = inversesqrt(dot(vec3(_2163, _2164, _2165), vec3(_2163, _2164, _2165)));
        float _2173 = dot(vec3(_2083, _2084, _2085), vec3(g_sceneCB._m0[4u].xyz));
        float _2946 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
        float _2176 = isnan(1.0) ? _2946 : (isnan(_2946) ? 1.0 : min(_2946, 1.0));
        float _2177 = dot(vec3(_2083, _2084, _2085), vec3(_2107, _2108, _2109));
        float _2957 = isnan(0.0) ? _2177 : (isnan(_2177) ? 0.0 : max(_2177, 0.0));
        float _2181 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2163 * _2169, _2164 * _2169, _2165 * _2169));
        float _2968 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
        float _2192 = (exp2(log2(1.0 - (isnan(1.0) ? _2968 : (isnan(_2968) ? 1.0 : min(_2968, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2198 = (0.5 / ((_2176 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2957 : (isnan(_2957) ? 1.0 : min(_2957, 1.0))))) * _2176;
        float _2979 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
        float _2200 = (isnan(1.0) ? _2979 : (isnan(_2979) ? 1.0 : min(_2979, 1.0))) * 0.31831014156341552734375;
        _2208 = (_2192 * g_sceneCB._m0[5u].x) * _2200;
        _2209 = (_2192 * g_sceneCB._m0[5u].y) * _2200;
        _2210 = (_2192 * g_sceneCB._m0[5u].z) * _2200;
    }
    else
    {
        _2208 = 0.0;
        _2209 = 0.0;
        _2210 = 0.0;
    }
    bool _2212 = abs(_2084) < 0.89999997615814208984375;
    float _2214 = float(_2212);
    float _2215 = _2212 ? 0.0 : 1.0;
    float _2218 = (_2214 * _2085) - (_2215 * _2084);
    float _2219 = _2215 * _2083;
    float _2221 = (-0.0) - (_2083 * _2214);
    float _2225 = inversesqrt(dot(vec3(_2218, _2219, _2221), vec3(_2218, _2219, _2221)));
    float _2226 = _2218 * _2225;
    float _2227 = _2219 * _2225;
    float _2228 = _2225 * _2221;
    float _2231 = (_2227 * _2085) - (_2228 * _2084);
    float _2234 = (_2228 * _2083) - (_2226 * _2085);
    float _2237 = (_2226 * _2084) - (_2227 * _2083);
    float _2245;
    float _2271;
    float _2244 = 0.0;
    uint _2246 = 0u;
    float _2250;
    bool _2252;
    for (;;)
    {
        _2250 = (float(_2246) + _2123) * 0.03125;
        _2252 = _2246 == 0u;
        float frontier_phi_65_pred;
        if (_2252)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2390;
            float _2391;
            uint _2393;
            _2390 = 0.0;
            _2391 = 0.5;
            _2393 = _2246;
            float _2272;
            for (;;)
            {
                _2272 = ((_2393 & 1u) != 0u) ? (_2391 + _2390) : _2390;
                uint _2394 = _2393 >> 1u;
                if (_2394 == 0u)
                {
                    break;
                }
                else
                {
                    _2390 = _2272;
                    _2391 *= 0.5;
                    _2393 = _2394;
                }
            }
            frontier_phi_65_pred = _2272;
        }
        _2271 = frontier_phi_65_pred;
        float _2273 = _2271 + _2136;
        float _2277 = sqrt(_2250);
        float _2278 = ((_2273 > 1.0) ? (_2273 + (-1.0)) : _2273) * 6.283185482025146484375;
        float _2281 = cos(_2278) * _2277;
        float _2283 = sin(_2278) * _2277;
        float _2285 = sqrt(1.0 - _2250);
        float _2298 = ((_2285 * _2083) + (_2281 * _2231)) + (_2283 * _2226);
        float _2299 = ((_2285 * _2084) + (_2281 * _2234)) + (_2283 * _2227);
        float _2300 = ((_2285 * _2085) + (_2281 * _2237)) + (_2283 * _2228);
        _70._m0 = 1u;
        uvec4 _2304 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2305 = _2304.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2305, _2304.w, _2305, vec3(_2097, _2098, _2099), 9.9999997473787516355514526367188e-05, vec3(_2298, _2299, _2300), 10000.0, 1);
        float _2311 = dot(vec3(_2083, _2084, _2085), vec3(_2298, _2299, _2300));
        float _2990 = isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0));
        float _2314 = isnan(1.0) ? _2990 : (isnan(_2990) ? 1.0 : min(_2990, 1.0));
        _2245 = ((float(_70._m0 == 0u) * _2314) / (_2314 * 0.3183098733425140380859375)) + _2244;
        uint _2247 = _2246 + 1u;
        if (_2247 == 32u)
        {
            break;
        }
        else
        {
            _2244 = _2245;
            _2246 = _2247;
            continue;
        }
    }
    float _2323 = _2245 * 0.009947183541953563690185546875;
    float _2328 = dot(vec3(_2104, _2105, _2106), vec3(_2083, _2084, _2085)) * 2.0;
    vec4 _2339 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2104 - (_2328 * _2083), _2105 - (_2328 * _2084), _2106 - (_2328 * _2085)), 4.0);
    float _2344 = dot(vec3(_2107, _2108, _2109), vec3(_2083, _2084, _2085));
    float _3001 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
    float _2353 = (exp2(log2(1.0 - (isnan(1.0) ? _3001 : (isnan(_3001) ? 1.0 : min(_3001, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2361 = (_2208 + (isnan(cbMtdParam._m0[25u].y) ? _2072 : (isnan(_2072) ? cbMtdParam._m0[25u].y : min(_2072, cbMtdParam._m0[25u].y)))) + ((_2339.x * _2323) * _2353);
    float _2363 = (_2209 + (isnan(cbMtdParam._m0[25u].y) ? _2073 : (isnan(_2073) ? cbMtdParam._m0[25u].y : min(_2073, cbMtdParam._m0[25u].y)))) + ((_2339.y * _2323) * _2353);
    float _2365 = (_2210 + (isnan(cbMtdParam._m0[25u].y) ? _2074 : (isnan(_2074) ? cbMtdParam._m0[25u].y : min(_2074, cbMtdParam._m0[25u].y)))) + ((_2339.z * _2323) * _2353);
    float _3012 = isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0));
    float _3023 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _3034 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
    bool _2373 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2384;
    _2384.x = _2373 ? ((_815 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3012 : (isnan(_3012) ? 1.0 : min(_3012, 1.0)));
    _2384.y = _2373 ? ((_818 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3023 : (isnan(_3023) ? 1.0 : min(_3023, 1.0)));
    _2384.z = _2373 ? ((_821 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3034 : (isnan(_3034) ? 1.0 : min(_3034, 1.0)));
    payload._m0 = _2384;
}


