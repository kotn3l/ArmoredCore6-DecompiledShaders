#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_5;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_6;
layout(set = 0, binding = 5) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_8;
layout(set = 0, binding = 6) uniform texture2D M_Planet_Melange_Sky4_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1623;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _166 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _167 >> 16u;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _169;
        }
        _172 = frontier_phi_3_2_ladder_2;
        _174 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _220 = _181 == 0u;
    uint _221;
    if (_220)
    {
        _221 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _221 = frontier_phi_9_10_ladder;
    }
    uvec4 _232 = texelFetch(l_geomAttrib_0, int((((_180 * _172) + 4u) + (_182 ? (_221 + 4u) : _221)) >> 2u));
    uint _233 = _232.x;
    float _237 = float(int(uint(int(_233 << 16u) >> int(16u))));
    float _238 = float(int(uint(int(_233) >> int(16u))));
    uint _240 = (_180 * _174) + 12u;
    uint _261;
    uint _262;
    uint _263;
    uint _264;
    if (_185)
    {
        uvec4 _242 = texelFetch(l_geomAttrib_0, int(_240 >> 2u));
        uint _243 = _242.x;
        _261 = _243 & 255u;
        _262 = (_243 >> 8u) & 255u;
        _263 = (_243 >> 16u) & 255u;
        _264 = 20u;
    }
    else
    {
        uint _249 = _240 >> 2u;
        uvec2 _255 = uvec2(texelFetch(l_geomAttrib_0, int(_249)).x, texelFetch(l_geomAttrib_0, int(_249 + 1u)).x);
        uint _256 = _255.x;
        _261 = _256 & 65535u;
        _262 = _256 >> 16u;
        _263 = _255.y & 65535u;
        _264 = 24u;
    }
    uint _268;
    if (_220)
    {
        _268 = _264;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _264 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _264 + 8u;
        }
        _268 = frontier_phi_16_17_ladder;
    }
    uvec4 _277 = texelFetch(l_geomAttrib_0, int((((_180 * _174) + 4u) + (_182 ? (_268 + 4u) : _268)) >> 2u));
    uint _278 = _277.x;
    float _282 = float(int(uint(int(_278 << 16u) >> int(16u))));
    float _283 = float(int(uint(int(_278) >> int(16u))));
    uint _285 = (_180 * _175) + 12u;
    uint _306;
    uint _307;
    uint _308;
    uint _309;
    if (_185)
    {
        uvec4 _287 = texelFetch(l_geomAttrib_0, int(_285 >> 2u));
        uint _288 = _287.x;
        _306 = _288 & 255u;
        _307 = (_288 >> 8u) & 255u;
        _308 = (_288 >> 16u) & 255u;
        _309 = 20u;
    }
    else
    {
        uint _294 = _285 >> 2u;
        uvec2 _300 = uvec2(texelFetch(l_geomAttrib_0, int(_294)).x, texelFetch(l_geomAttrib_0, int(_294 + 1u)).x);
        uint _301 = _300.x;
        _306 = _301 & 65535u;
        _307 = _301 >> 16u;
        _308 = _300.y & 65535u;
        _309 = 24u;
    }
    uint _313;
    if (_220)
    {
        _313 = _309;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _309 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _309 + 8u;
        }
        _313 = frontier_phi_23_24_ladder;
    }
    uvec4 _322 = texelFetch(l_geomAttrib_0, int((((_180 * _175) + 4u) + (_182 ? (_313 + 4u) : _313)) >> 2u));
    uint _323 = _322.x;
    float _327 = float(int(uint(int(_323 << 16u) >> int(16u))));
    float _328 = float(int(uint(int(_323) >> int(16u))));
    bool _330 = _131.z == 0u;
    float _366;
    float _367;
    float _368;
    if (_330)
    {
        uint _333 = _172 * 3u;
        uvec3 _342 = uvec3(texelFetch(l_geomPositionBuffer, int(_333)).x, texelFetch(l_geomPositionBuffer, int(_333 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_333 + 2u)).x);
        _366 = uintBitsToFloat(_342.x);
        _367 = uintBitsToFloat(_342.y);
        _368 = uintBitsToFloat(_342.z);
    }
    else
    {
        uint _350 = _172 * 2u;
        uvec2 _356 = uvec2(texelFetch(l_geomPositionBuffer, int(_350)).x, texelFetch(l_geomPositionBuffer, int(_350 + 1u)).x);
        uint _357 = _356.x;
        _366 = unpackHalf2x16(_357).x;
        _367 = unpackHalf2x16(_357 >> 16u).x;
        _368 = unpackHalf2x16(_356.y).x;
    }
    float _404;
    float _405;
    float _406;
    if (_330)
    {
        uint _371 = _174 * 3u;
        uvec3 _380 = uvec3(texelFetch(l_geomPositionBuffer, int(_371)).x, texelFetch(l_geomPositionBuffer, int(_371 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_371 + 2u)).x);
        _404 = uintBitsToFloat(_380.x);
        _405 = uintBitsToFloat(_380.y);
        _406 = uintBitsToFloat(_380.z);
    }
    else
    {
        uint _388 = _174 * 2u;
        uvec2 _394 = uvec2(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x);
        uint _395 = _394.x;
        _404 = unpackHalf2x16(_395).x;
        _405 = unpackHalf2x16(_395 >> 16u).x;
        _406 = unpackHalf2x16(_394.y).x;
    }
    float _442;
    float _443;
    float _444;
    if (_330)
    {
        uint _409 = _175 * 3u;
        uvec3 _418 = uvec3(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_409 + 2u)).x);
        _442 = uintBitsToFloat(_418.x);
        _443 = uintBitsToFloat(_418.y);
        _444 = uintBitsToFloat(_418.z);
    }
    else
    {
        uint _426 = _175 * 2u;
        uvec2 _432 = uvec2(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x);
        uint _433 = _432.x;
        _442 = unpackHalf2x16(_433).x;
        _443 = unpackHalf2x16(_433 >> 16u).x;
        _444 = unpackHalf2x16(_432.y).x;
    }
    float _447 = (1.0 - hit._m0.x) - hit._m0.y;
    float _469 = (_282 - _237) * 0.00048828125;
    float _471 = (_283 - _238) * 0.00048828125;
    float _474 = (_327 - _237) * 0.00048828125;
    float _475 = (_328 - _238) * 0.00048828125;
    float _497 = _404 - _366;
    float _498 = _405 - _367;
    float _499 = _406 - _368;
    float _502 = fma(_499, gl_ObjectToWorldEXT[2u].x, fma(_498, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _497));
    float _505 = fma(_499, gl_ObjectToWorldEXT[2u].y, fma(_498, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _497));
    float _508 = fma(_499, gl_ObjectToWorldEXT[2u].z, fma(_498, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _497));
    float _509 = _442 - _366;
    float _510 = _443 - _367;
    float _511 = _444 - _368;
    float _514 = fma(_511, gl_ObjectToWorldEXT[2u].x, fma(_510, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _509));
    float _517 = fma(_511, gl_ObjectToWorldEXT[2u].y, fma(_510, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _509));
    float _520 = fma(_511, gl_ObjectToWorldEXT[2u].z, fma(_510, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _509));
    float _521 = (((_282 * hit._m0.x) + (_237 * _447)) + (_327 * hit._m0.y)) * 0.00048828125;
    float _522 = (((_283 * hit._m0.x) + (_238 * _447)) + (_328 * hit._m0.y)) * 0.00048828125;
    float _526 = (((float(_211) * _447) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_306) * hit._m0.y);
    float _529 = (((float(_212) * _447) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_307) * hit._m0.y);
    float _532 = (((float(_213) * _447) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_308) * hit._m0.y);
    float _533 = _526 * 0.0078740157186985015869140625;
    float _535 = _529 * 0.0078740157186985015869140625;
    float _536 = _532 * 0.0078740157186985015869140625;
    float _549 = cbMtdParam._m0[23u].w * _521;
    float _550 = cbMtdParam._m0[24u].x * _522;
    float _554 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _561 = (_554 * cbMtdParam._m0[22u].w) + _549;
    float _562 = (cbMtdParam._m0[23u].x * _554) + _550;
    float _585 = (cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[21u].w * _554) + _549)) + cbTextureTilingScale._m0[1u].z;
    float _586 = (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[22u].x * _554) + _550)) + cbTextureTilingScale._m0[1u].w;
    uvec2 _588 = uvec2(textureSize(M_Planet_Melange_Sky4_snp_0_Texture2D_3, int(0u)));
    bool _593 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _646;
    if (_593)
    {
        float _604 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _610 = (_520 * _505) - (_517 * _508);
        float _613 = (_514 * _508) - (_520 * _502);
        float _616 = (_517 * _502) - (_514 * _505);
        float _643 = ((log2((((float(_588.y) * 0.5) * float(_588.x)) * abs((_475 * _469) - (_474 * _471))) / (sqrt(((_613 * _613) + (_616 * _616)) + (_610 * _610)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_604 * gl_WorldRayDirectionEXT.x, _604 * gl_WorldRayDirectionEXT.y, _604 * gl_WorldRayDirectionEXT.z), vec3(_533, _535, _536))));
        _646 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    }
    else
    {
        _646 = 0.0;
    }
    vec4 _650 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_3, SS_WrapLinear), vec2(_585, _586), _646);
    float _654 = cbPerFrame._m0[22u].x * 2.0;
    float _655 = _654 * cbMtdParam._m0[18u].y;
    float _661 = ((_650.y * 0.5) + (-0.25)) * cbMtdParam._m0[18u].z;
    float _663 = (-0.0) - (cbMtdParam._m0[18u].z * ((_650.x * 0.5) + (-0.25)));
    float _665 = fract(_655);
    float _667 = fract(_655 + 0.5);
    float _679 = abs((_665 * 2.0) + (-1.0));
    vec4 _697 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_665 * _663) + _561) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_661 * _665) + _562) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _699 = _697.x;
    float _700 = _697.y;
    float _701 = _697.z;
    vec4 _702 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_667 * _663) + _561) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_661 * _667) + _562) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _713 = ((_702.x - _699) * _679) + _699;
    float _714 = ((_702.y - _700) * _679) + _700;
    float _715 = ((_702.z - _701) * _679) + _701;
    float _729 = (cbMtdParam._m0[21u].y * _554) + _549;
    float _730 = (cbMtdParam._m0[21u].z * _554) + _550;
    float _786;
    if (_593)
    {
        float _746 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _752 = (_520 * _505) - (_517 * _508);
        float _755 = (_514 * _508) - (_520 * _502);
        float _758 = (_517 * _502) - (_514 * _505);
        float _784 = ((log2((((float(_588.y) * 0.5) * float(_588.x)) * abs((_475 * _469) - (_474 * _471))) / (sqrt(((_755 * _755) + (_758 * _758)) + (_752 * _752)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_746 * gl_WorldRayDirectionEXT.x, _746 * gl_WorldRayDirectionEXT.y, _746 * gl_WorldRayDirectionEXT.z), vec3(_533, _535, _536))));
        _786 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    }
    else
    {
        _786 = 0.0;
    }
    vec4 _788 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_3, SS_WrapLinear), vec2(_585, _586), _786);
    float _792 = _654 * cbMtdParam._m0[17u].z;
    float _797 = ((_788.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].y;
    float _799 = (-0.0) - (cbMtdParam._m0[17u].y * ((_788.x * 0.5) + (-0.25)));
    float _800 = fract(_792);
    float _802 = fract(_792 + 0.5);
    float _813 = abs((_800 * 2.0) + (-1.0));
    vec4 _830 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_800 * _799) + _729) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_797 * _800) + _730) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _832 = _830.x;
    float _833 = _830.y;
    float _834 = _830.z;
    vec4 _835 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_802 * _799) + _729) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_797 * _802) + _730) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _876 = (cbMtdParam._m0[22u].y * _554) + _549;
    float _877 = (cbMtdParam._m0[22u].z * _554) + _550;
    float _930;
    if (_593)
    {
        float _890 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _896 = (_520 * _505) - (_517 * _508);
        float _899 = (_514 * _508) - (_520 * _502);
        float _902 = (_517 * _502) - (_514 * _505);
        float _928 = ((log2((((float(_588.y) * 0.5) * float(_588.x)) * abs((_475 * _469) - (_474 * _471))) / (sqrt(((_899 * _899) + (_902 * _902)) + (_896 * _896)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_890 * gl_WorldRayDirectionEXT.x, _890 * gl_WorldRayDirectionEXT.y, _890 * gl_WorldRayDirectionEXT.z), vec3(_533, _535, _536))));
        _930 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    }
    else
    {
        _930 = 0.0;
    }
    vec4 _932 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_3, SS_WrapLinear), vec2(_585, _586), _930);
    float _936 = _654 * cbMtdParam._m0[18u].x;
    float _941 = ((_932.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].w;
    float _943 = (-0.0) - (cbMtdParam._m0[17u].w * ((_932.x * 0.5) + (-0.25)));
    float _944 = fract(_936);
    float _946 = fract(_936 + 0.5);
    float _957 = abs((_944 * 2.0) + (-1.0));
    vec4 _974 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_944 * _943) + _876) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_941 * _944) + _877) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _976 = _974.x;
    float _977 = _974.y;
    float _978 = _974.z;
    vec4 _979 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_946 * _943) + _876) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_941 * _946) + _877) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _999 = (((((_979.x - _976) * _957) + _976) * cbMtdParam._m0[13u].x) + (_713 * cbMtdParam._m0[14u].x)) + (((((cbMtdParam._m0[12u].x - cbMtdParam._m0[15u].x) * _713) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[15u].x) * (((_835.x - _832) * _813) + _832));
    float _1003 = (((((_979.y - _977) * _957) + _977) * cbMtdParam._m0[13u].y) + (_714 * cbMtdParam._m0[14u].y)) + (((((cbMtdParam._m0[12u].y - cbMtdParam._m0[15u].y) * _714) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[15u].y) * (((_835.y - _833) * _813) + _833));
    float _1007 = (((((_979.z - _978) * _957) + _978) * cbMtdParam._m0[13u].z) + (_715 * cbMtdParam._m0[14u].z)) + ((((cbMtdParam._m0[20u].y * _715) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z) * (((_835.z - _834) * _813) + _834));
    float _1015 = (1.0 - cbMtdParam._m0[19u].z) * (1.0 / cbMtdParam._m0[19u].y);
    float _1720 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1016 = isnan(1.0) ? _1720 : (isnan(_1720) ? 1.0 : min(_1720, 1.0));
    float _1020 = _999 - (_999 * _1016);
    float _1021 = _1003 - (_1003 * _1016);
    float _1022 = _1007 - (_1016 * _1007);
    float _1027 = (1.0 - cbMtdParam._m0[19u].x) * (1.0 / cbMtdParam._m0[18u].w);
    float _1731 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1028 = isnan(1.0) ? _1731 : (isnan(_1731) ? 1.0 : min(_1731, 1.0));
    float _1039 = (cbMtdParam._m0[23u].y * _554) + _549;
    float _1040 = (cbMtdParam._m0[23u].z * _554) + _550;
    float _1057 = (cbTextureTilingScale._m0[0u].x * ((cbMtdParam._m0[24u].y * _554) + _521)) + cbTextureTilingScale._m0[0u].z;
    float _1058 = (cbTextureTilingScale._m0[0u].y * ((cbMtdParam._m0[24u].z * _554) + _522)) + cbTextureTilingScale._m0[0u].w;
    uvec2 _1060 = uvec2(textureSize(M_Planet_Melange_Sky4_snp_0_Texture2D_10, int(0u)));
    float _1111;
    if (_593)
    {
        float _1071 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1077 = (_520 * _505) - (_517 * _508);
        float _1080 = (_514 * _508) - (_520 * _502);
        float _1083 = (_517 * _502) - (_514 * _505);
        float _1109 = ((log2((((float(_1060.y) * 0.5) * float(_1060.x)) * abs((_475 * _469) - (_474 * _471))) / (sqrt(((_1080 * _1080) + (_1083 * _1083)) + (_1077 * _1077)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1071 * gl_WorldRayDirectionEXT.x, _1071 * gl_WorldRayDirectionEXT.y, _1071 * gl_WorldRayDirectionEXT.z), vec3(_533, _535, _536))));
        _1111 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    }
    else
    {
        _1111 = 0.0;
    }
    vec4 _1113 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_10, SS_WrapLinear), vec2(_1057, _1058), _1111);
    float _1117 = _654 * cbMtdParam._m0[20u].x;
    float _1122 = ((_1113.y * 0.5) + (-0.25)) * cbMtdParam._m0[19u].w;
    float _1124 = (-0.0) - (cbMtdParam._m0[19u].w * ((_1113.x * 0.5) + (-0.25)));
    float _1125 = fract(_1117);
    float _1127 = fract(_1117 + 0.5);
    float _1138 = abs((_1125 * 2.0) + (-1.0));
    vec4 _1156 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1125 * _1124) + _1039) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1122 * _1125) + _1040) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1158 = _1156.x;
    float _1159 = _1156.y;
    float _1160 = _1156.z;
    vec4 _1161 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1127 * _1124) + _1039) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1122 * _1127) + _1040) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1172 = ((_1161.x - _1158) * _1138) + _1158;
    float _1173 = ((_1161.y - _1159) * _1138) + _1159;
    float _1174 = ((_1161.z - _1160) * _1138) + _1160;
    float _1189 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1190 = _1189 * gl_WorldRayDirectionEXT.x;
    float _1191 = _1189 * gl_WorldRayDirectionEXT.y;
    float _1192 = _1189 * gl_WorldRayDirectionEXT.z;
    float _1236;
    if (_593)
    {
        float _1202 = (_520 * _505) - (_517 * _508);
        float _1205 = (_514 * _508) - (_520 * _502);
        float _1208 = (_517 * _502) - (_514 * _505);
        float _1234 = ((log2((((float(_1060.y) * 0.5) * float(_1060.x)) * abs((_475 * _469) - (_474 * _471))) / (sqrt(((_1205 * _1205) + (_1208 * _1208)) + (_1202 * _1202)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1190, _1191, _1192), vec3(_533, _535, _536))));
        _1236 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
    }
    else
    {
        _1236 = 0.0;
    }
    vec4 _1238 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_10, SS_WrapLinear), vec2(_1057, _1058), _1236);
    float _1242 = _654 * cbMtdParam._m0[21u].x;
    float _1247 = ((_1238.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].w;
    float _1249 = (-0.0) - (cbMtdParam._m0[20u].w * ((_1238.x * 0.5) + (-0.25)));
    float _1250 = fract(_1242);
    float _1252 = fract(_1242 + 0.5);
    float _1263 = abs((_1250 * 2.0) + (-1.0));
    vec4 _1280 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_1250 * _1249) + _1039) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1247 * _1250) + _1040) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1282 = _1280.x;
    float _1283 = _1280.y;
    float _1284 = _1280.z;
    vec4 _1285 = textureLod(sampler2D(M_Planet_Melange_Sky4_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_1252 * _1249) + _1039) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1247 * _1252) + _1040) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1333 = inversesqrt(dot(vec3(_533, _535, _536), vec3(_533, _535, _536)));
    float _1334 = _1333 * _533;
    float _1335 = _1333 * _535;
    float _1336 = _1333 * _536;
    float _1348 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1349 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1350 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1351 = (-0.0) - _1190;
    float _1352 = (-0.0) - _1191;
    float _1353 = (-0.0) - _1192;
    float _1359 = float(gl_LaunchIDEXT.x);
    float _1360 = float(gl_LaunchIDEXT.y);
    float _1363 = float(gl_LaunchSizeEXT.x);
    float _1377 = fract(fract(sin(dot(vec2(_1359 / _1363, _1360 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1390 = fract(fract(sin(dot(vec2((_1359 + 128.0) / _1363, (_1360 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1400 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1401 = _1400.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1401, _1400.w, _1401, vec3(_1348, _1349, _1350), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1466;
    float _1467;
    float _1468;
    if (_69._m0 == 0u)
    {
        float _1421 = g_sceneCB._m0[4u].x - _1190;
        float _1422 = g_sceneCB._m0[4u].y - _1191;
        float _1423 = g_sceneCB._m0[4u].z - _1192;
        float _1427 = inversesqrt(dot(vec3(_1421, _1422, _1423), vec3(_1421, _1422, _1423)));
        float _1431 = dot(vec3(_1334, _1335, _1336), vec3(g_sceneCB._m0[4u].xyz));
        float _1752 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1434 = isnan(1.0) ? _1752 : (isnan(_1752) ? 1.0 : min(_1752, 1.0));
        float _1435 = dot(vec3(_1334, _1335, _1336), vec3(_1351, _1352, _1353));
        float _1763 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1439 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1421 * _1427, _1422 * _1427, _1423 * _1427));
        float _1774 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1450 = (exp2(log2(1.0 - (isnan(1.0) ? _1774 : (isnan(_1774) ? 1.0 : min(_1774, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1456 = (0.5 / ((_1434 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0))))) * _1434;
        float _1785 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1458 = (isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0))) * 0.31831014156341552734375;
        _1466 = (_1450 * g_sceneCB._m0[5u].x) * _1458;
        _1467 = (_1450 * g_sceneCB._m0[5u].y) * _1458;
        _1468 = (_1450 * g_sceneCB._m0[5u].z) * _1458;
    }
    else
    {
        _1466 = 0.0;
        _1467 = 0.0;
        _1468 = 0.0;
    }
    bool _1470 = abs(_1335) < 0.89999997615814208984375;
    float _1472 = float(_1470);
    float _1473 = _1470 ? 0.0 : 1.0;
    float _1476 = (_1472 * _1336) - (_1473 * _1335);
    float _1477 = _1473 * _1334;
    float _1479 = (-0.0) - (_1334 * _1472);
    float _1483 = inversesqrt(dot(vec3(_1476, _1477, _1479), vec3(_1476, _1477, _1479)));
    float _1484 = _1476 * _1483;
    float _1485 = _1477 * _1483;
    float _1486 = _1483 * _1479;
    float _1489 = (_1485 * _1336) - (_1486 * _1335);
    float _1492 = (_1486 * _1334) - (_1484 * _1336);
    float _1495 = (_1484 * _1335) - (_1485 * _1334);
    float _1497;
    float _1505;
    float _1496 = 0.0;
    uint _1498 = 0u;
    float _1502;
    bool _1504;
    for (;;)
    {
        _1502 = (float(_1498) + _1377) * 0.03125;
        _1504 = _1498 == 0u;
        float frontier_phi_49_pred;
        if (_1504)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1628;
            float _1629;
            uint _1631;
            _1628 = 0.0;
            _1629 = 0.5;
            _1631 = _1498;
            float _1506;
            for (;;)
            {
                _1506 = ((_1631 & 1u) != 0u) ? (_1629 + _1628) : _1628;
                uint _1632 = _1631 >> 1u;
                if (_1632 == 0u)
                {
                    break;
                }
                else
                {
                    _1628 = _1506;
                    _1629 *= 0.5;
                    _1631 = _1632;
                }
            }
            frontier_phi_49_pred = _1506;
        }
        _1505 = frontier_phi_49_pred;
        float _1507 = _1505 + _1390;
        float _1511 = sqrt(_1502);
        float _1512 = ((_1507 > 1.0) ? (_1507 + (-1.0)) : _1507) * 6.283185482025146484375;
        float _1515 = cos(_1512) * _1511;
        float _1517 = sin(_1512) * _1511;
        float _1519 = sqrt(1.0 - _1502);
        float _1532 = ((_1519 * _1334) + (_1515 * _1489)) + (_1517 * _1484);
        float _1533 = ((_1519 * _1335) + (_1515 * _1492)) + (_1517 * _1485);
        float _1534 = ((_1519 * _1336) + (_1515 * _1495)) + (_1517 * _1486);
        _68._m0 = 1u;
        uvec4 _1538 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1539 = _1538.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1539, _1538.w, _1539, vec3(_1348, _1349, _1350), 9.9999997473787516355514526367188e-05, vec3(_1532, _1533, _1534), 10000.0, 1);
        float _1545 = dot(vec3(_1334, _1335, _1336), vec3(_1532, _1533, _1534));
        float _1796 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1548 = isnan(1.0) ? _1796 : (isnan(_1796) ? 1.0 : min(_1796, 1.0));
        _1497 = ((float(_68._m0 == 0u) * _1548) / (_1548 * 0.3183098733425140380859375)) + _1496;
        uint _1499 = _1498 + 1u;
        if (_1499 == 32u)
        {
            break;
        }
        else
        {
            _1496 = _1497;
            _1498 = _1499;
            continue;
        }
    }
    float _1557 = _1497 * 0.009947183541953563690185546875;
    float _1562 = dot(vec3(_1190, _1191, _1192), vec3(_1334, _1335, _1336)) * 2.0;
    vec4 _1574 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1190 - (_1562 * _1334), _1191 - (_1562 * _1335), _1192 - (_1562 * _1336)), 4.0);
    float _1579 = dot(vec3(_1351, _1352, _1353), vec3(_1334, _1335, _1336));
    float _1807 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
    float _1588 = (exp2(log2(1.0 - (isnan(1.0) ? _1807 : (isnan(_1807) ? 1.0 : min(_1807, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1597 = ((((((_1172 * cbMtdParam._m0[9u].x) - _1020) + (((((cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x) * _1172) * cbMtdParam._m0[20u].z) + cbMtdParam._m0[10u].x) * (((_1285.x - _1282) * _1263) + _1282))) * _1028) + _1020) + _1466) + ((_1574.x * _1557) * _1588);
    float _1600 = ((((((_1173 * cbMtdParam._m0[9u].y) - _1021) + (((((cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y) * _1173) * cbMtdParam._m0[20u].z) + cbMtdParam._m0[10u].y) * (((_1285.y - _1283) * _1263) + _1283))) * _1028) + _1021) + _1467) + ((_1574.y * _1557) * _1588);
    float _1603 = ((((((_1174 * cbMtdParam._m0[9u].z) - _1022) + ((((cbMtdParam._m0[20u].z * _1174) * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * (((_1285.z - _1284) * _1263) + _1284))) * _1028) + _1022) + _1468) + ((_1574.z * _1557) * _1588);
    float _1818 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
    float _1829 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
    float _1840 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0));
    bool _1611 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1622;
    _1622.x = _1611 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1818 : (isnan(_1818) ? 1.0 : min(_1818, 1.0)));
    _1622.y = _1611 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1829 : (isnan(_1829) ? 1.0 : min(_1829, 1.0)));
    _1622.z = _1611 ? ((_532 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1840 : (isnan(_1840) ? 1.0 : min(_1840, 1.0)));
    payload._m0 = _1622;
}


