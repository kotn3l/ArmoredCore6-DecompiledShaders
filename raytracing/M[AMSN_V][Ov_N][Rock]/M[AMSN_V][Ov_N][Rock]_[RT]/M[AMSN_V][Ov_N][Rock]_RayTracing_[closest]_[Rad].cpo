#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1431;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _162;
    uint _164;
    uint _165;
    if (_121.x == 0u)
    {
        uint _130 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _139 = uvec3(texelFetch(l_geomIndexBuffer, int(_130)).x, texelFetch(l_geomIndexBuffer, int(_130 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_130 + 2u)).x);
        _162 = _139.x;
        _164 = _139.y;
        _165 = _139.z;
    }
    else
    {
        uint _143 = uint(gl_PrimitiveID) * 6u;
        uint _145 = _143 & 4294967292u;
        uint _148 = (_122 + _145) >> 2u;
        uvec2 _155 = uvec2(texelFetch(l_geomIndexBuffer, int(_148)).x, texelFetch(l_geomIndexBuffer, int(_148 + 1u)).x);
        uint _156 = _155.x;
        uint _157 = _155.y;
        uint _159 = _156 >> 16u;
        uint _160 = _157 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_145 == _143)
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _156 & 65535u;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _159;
            frontier_phi_3_2_ladder_2 = _157 >> 16u;
        }
        _162 = frontier_phi_3_2_ladder_1;
        _164 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _169 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _170 = _169.x;
    uint _171 = _170 * _162;
    uint _173 = _171 >> 2u;
    uvec3 _182 = uvec3(texelFetch(l_geomAttrib_0, int(_173)).x, texelFetch(l_geomAttrib_0, int(_173 + 1u)).x, texelFetch(l_geomAttrib_0, int(_173 + 2u)).x);
    uint _189 = _169.z;
    bool _190 = _189 != 0u;
    bool _192 = _121.w == 0u;
    bool _193 = _190 || _192;
    uint _194 = _171 + 12u;
    uint _217;
    uint _218;
    uint _219;
    uint _220;
    if (_193)
    {
        uvec4 _196 = texelFetch(l_geomAttrib_0, int(_194 >> 2u));
        uint _197 = _196.x;
        _217 = _197 & 255u;
        _218 = (_197 >> 8u) & 255u;
        _219 = (_197 >> 16u) & 255u;
        _220 = 16u;
    }
    else
    {
        uint _205 = _194 >> 2u;
        uvec2 _211 = uvec2(texelFetch(l_geomAttrib_0, int(_205)).x, texelFetch(l_geomAttrib_0, int(_205 + 1u)).x);
        uint _212 = _211.x;
        _217 = _212 & 65535u;
        _218 = _212 >> 16u;
        _219 = _211.y & 65535u;
        _220 = 20u;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((_220 + _171) >> 2u));
    uint _228 = _227.x;
    bool _242 = _189 == 0u;
    uint _243;
    if (_242)
    {
        _243 = _220 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_192)
        {
            frontier_phi_9_10_ladder = _220 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _220 + 12u;
        }
        _243 = frontier_phi_9_10_ladder;
    }
    uvec4 _251 = texelFetch(l_geomAttrib_0, int(((_171 + 4u) + (_190 ? (_243 + 4u) : _243)) >> 2u));
    uint _252 = _251.x;
    float _256 = float(int(uint(int(_252 << 16u) >> int(16u))));
    float _257 = float(int(uint(int(_252) >> int(16u))));
    uint _258 = _170 * _164;
    uint _259 = _258 >> 2u;
    uvec3 _268 = uvec3(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x, texelFetch(l_geomAttrib_0, int(_259 + 2u)).x);
    uint _275 = _258 + 12u;
    uint _296;
    uint _297;
    uint _298;
    uint _299;
    if (_193)
    {
        uvec4 _277 = texelFetch(l_geomAttrib_0, int(_275 >> 2u));
        uint _278 = _277.x;
        _296 = _278 & 255u;
        _297 = (_278 >> 8u) & 255u;
        _298 = (_278 >> 16u) & 255u;
        _299 = 16u;
    }
    else
    {
        uint _284 = _275 >> 2u;
        uvec2 _290 = uvec2(texelFetch(l_geomAttrib_0, int(_284)).x, texelFetch(l_geomAttrib_0, int(_284 + 1u)).x);
        uint _291 = _290.x;
        _296 = _291 & 65535u;
        _297 = _291 >> 16u;
        _298 = _290.y & 65535u;
        _299 = 20u;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int((_299 + _258) >> 2u));
    uint _306 = _305.x;
    uint _318;
    if (_242)
    {
        _318 = _299 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_192)
        {
            frontier_phi_16_17_ladder = _299 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _299 + 12u;
        }
        _318 = frontier_phi_16_17_ladder;
    }
    uvec4 _326 = texelFetch(l_geomAttrib_0, int(((_258 + 4u) + (_190 ? (_318 + 4u) : _318)) >> 2u));
    uint _327 = _326.x;
    float _331 = float(int(uint(int(_327 << 16u) >> int(16u))));
    float _332 = float(int(uint(int(_327) >> int(16u))));
    uint _333 = _170 * _165;
    uint _334 = _333 >> 2u;
    uvec3 _343 = uvec3(texelFetch(l_geomAttrib_0, int(_334)).x, texelFetch(l_geomAttrib_0, int(_334 + 1u)).x, texelFetch(l_geomAttrib_0, int(_334 + 2u)).x);
    uint _350 = _333 + 12u;
    uint _371;
    uint _372;
    uint _373;
    uint _374;
    if (_193)
    {
        uvec4 _352 = texelFetch(l_geomAttrib_0, int(_350 >> 2u));
        uint _353 = _352.x;
        _371 = _353 & 255u;
        _372 = (_353 >> 8u) & 255u;
        _373 = (_353 >> 16u) & 255u;
        _374 = 16u;
    }
    else
    {
        uint _359 = _350 >> 2u;
        uvec2 _365 = uvec2(texelFetch(l_geomAttrib_0, int(_359)).x, texelFetch(l_geomAttrib_0, int(_359 + 1u)).x);
        uint _366 = _365.x;
        _371 = _366 & 65535u;
        _372 = _366 >> 16u;
        _373 = _365.y & 65535u;
        _374 = 20u;
    }
    uvec4 _380 = texelFetch(l_geomAttrib_0, int((_374 + _333) >> 2u));
    uint _381 = _380.x;
    uint _393;
    if (_242)
    {
        _393 = _374 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_192)
        {
            frontier_phi_23_24_ladder = _374 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _374 + 12u;
        }
        _393 = frontier_phi_23_24_ladder;
    }
    uvec4 _401 = texelFetch(l_geomAttrib_0, int(((_333 + 4u) + (_190 ? (_393 + 4u) : _393)) >> 2u));
    uint _402 = _401.x;
    float _406 = float(int(uint(int(_402 << 16u) >> int(16u))));
    float _407 = float(int(uint(int(_402) >> int(16u))));
    bool _409 = _121.z == 0u;
    float _445;
    float _446;
    float _447;
    if (_409)
    {
        uint _412 = _162 * 3u;
        uvec3 _421 = uvec3(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_412 + 2u)).x);
        _445 = uintBitsToFloat(_421.x);
        _446 = uintBitsToFloat(_421.y);
        _447 = uintBitsToFloat(_421.z);
    }
    else
    {
        uint _429 = _162 * 2u;
        uvec2 _435 = uvec2(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x);
        uint _436 = _435.x;
        _445 = unpackHalf2x16(_436).x;
        _446 = unpackHalf2x16(_436 >> 16u).x;
        _447 = unpackHalf2x16(_435.y).x;
    }
    float _483;
    float _484;
    float _485;
    if (_409)
    {
        uint _450 = _164 * 3u;
        uvec3 _459 = uvec3(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_450 + 2u)).x);
        _483 = uintBitsToFloat(_459.x);
        _484 = uintBitsToFloat(_459.y);
        _485 = uintBitsToFloat(_459.z);
    }
    else
    {
        uint _467 = _164 * 2u;
        uvec2 _473 = uvec2(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x);
        uint _474 = _473.x;
        _483 = unpackHalf2x16(_474).x;
        _484 = unpackHalf2x16(_474 >> 16u).x;
        _485 = unpackHalf2x16(_473.y).x;
    }
    float _521;
    float _522;
    float _523;
    if (_409)
    {
        uint _488 = _165 * 3u;
        uvec3 _497 = uvec3(texelFetch(l_geomPositionBuffer, int(_488)).x, texelFetch(l_geomPositionBuffer, int(_488 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_488 + 2u)).x);
        _521 = uintBitsToFloat(_497.x);
        _522 = uintBitsToFloat(_497.y);
        _523 = uintBitsToFloat(_497.z);
    }
    else
    {
        uint _505 = _165 * 2u;
        uvec2 _511 = uvec2(texelFetch(l_geomPositionBuffer, int(_505)).x, texelFetch(l_geomPositionBuffer, int(_505 + 1u)).x);
        uint _512 = _511.x;
        _521 = unpackHalf2x16(_512).x;
        _522 = unpackHalf2x16(_512 >> 16u).x;
        _523 = unpackHalf2x16(_511.y).x;
    }
    float _526 = (1.0 - hit._m0.x) - hit._m0.y;
    float _575 = (_331 - _256) * 0.00048828125;
    float _577 = (_332 - _257) * 0.00048828125;
    float _580 = (_406 - _256) * 0.00048828125;
    float _581 = (_407 - _257) * 0.00048828125;
    float _603 = _483 - _445;
    float _604 = _484 - _446;
    float _605 = _485 - _447;
    float _608 = fma(_605, gl_ObjectToWorldEXT[2u].x, fma(_604, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _603));
    float _611 = fma(_605, gl_ObjectToWorldEXT[2u].y, fma(_604, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _603));
    float _614 = fma(_605, gl_ObjectToWorldEXT[2u].z, fma(_604, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _603));
    float _615 = _521 - _445;
    float _616 = _522 - _446;
    float _617 = _523 - _447;
    float _620 = fma(_617, gl_ObjectToWorldEXT[2u].x, fma(_616, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _615));
    float _623 = fma(_617, gl_ObjectToWorldEXT[2u].y, fma(_616, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _615));
    float _626 = fma(_617, gl_ObjectToWorldEXT[2u].z, fma(_616, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _615));
    float _627 = (((_331 * hit._m0.x) + (_256 * _526)) + (_406 * hit._m0.y)) * 0.00048828125;
    float _628 = (((_332 * hit._m0.x) + (_257 * _526)) + (_407 * hit._m0.y)) * 0.00048828125;
    float _632 = (((float(_217) * _526) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_371) * hit._m0.y);
    float _635 = (((float(_218) * _526) + (-127.0)) + (float(_297) * hit._m0.x)) + (float(_372) * hit._m0.y);
    float _638 = (((float(_219) * _526) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_373) * hit._m0.y);
    float _639 = _632 * 0.0078740157186985015869140625;
    float _641 = _635 * 0.0078740157186985015869140625;
    float _642 = _638 * 0.0078740157186985015869140625;
    float _655 = ((((float(_228 & 255u) * _526) + (-127.0)) + (float(_306 & 255u) * hit._m0.x)) + (float(_381 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float((_228 >> 8u) & 255u) * _526) + (-127.0)) + (float((_306 >> 8u) & 255u) * hit._m0.x)) + (float((_381 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float((_228 >> 16u) & 255u) * _526) + (-127.0)) + (float((_306 >> 16u) & 255u) * hit._m0.x)) + (float((_381 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _658 = ((((float(_228 >> 24u) * _526) + (-127.0)) + (float(_306 >> 24u) * hit._m0.x)) + (float(_381 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _668 = ((_656 * _642) - (_657 * _641)) * _658;
    float _669 = ((_657 * _639) - (_655 * _642)) * _658;
    float _670 = ((_655 * _641) - (_656 * _639)) * _658;
    float _674 = inversesqrt(dot(vec3(_668, _669, _670), vec3(_668, _669, _670)));
    float _688 = abs(_639);
    float _689 = abs(_641);
    float _690 = abs(_642);
    float _691 = _688 * _688;
    float _692 = _689 * _689;
    float _693 = _690 * _690;
    float _696 = (((uintBitsToFloat(_268.y) * hit._m0.x) + (uintBitsToFloat(_182.y) * _526)) + (uintBitsToFloat(_343.y) * hit._m0.y)) * 0.0500000007450580596923828125;
    float _706 = (cbTextureTilingScale._m0[3u].x * ((((uintBitsToFloat(_268.x) * hit._m0.x) + (uintBitsToFloat(_182.x) * _526)) + (uintBitsToFloat(_343.x) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[3u].z;
    bool _712 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _737;
    if (_712)
    {
        float _719 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _727 = log2(0.0);
        float _735 = ((_727 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_719 * gl_WorldRayDirectionEXT.x, _719 * gl_WorldRayDirectionEXT.y, _719 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _737 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    }
    else
    {
        _737 = 0.0;
    }
    vec4 _742 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_4, SS_BumpMap), vec2(_706, (cbTextureTilingScale._m0[3u].y * _696) + cbTextureTilingScale._m0[3u].w), _737);
    float _751 = (cbTextureTilingScale._m0[3u].y * ((((uintBitsToFloat(_268.z) * hit._m0.x) + (uintBitsToFloat(_182.z) * _526)) + (uintBitsToFloat(_343.z) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[3u].w;
    float _774;
    if (_712)
    {
        float _758 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _766 = log2(0.0);
        float _772 = ((_766 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_758 * gl_WorldRayDirectionEXT.x, _758 * gl_WorldRayDirectionEXT.y, _758 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _774 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    }
    else
    {
        _774 = 0.0;
    }
    vec4 _776 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_4, SS_BumpMap), vec2(_706, _751), _774);
    float _811;
    if (_712)
    {
        float _795 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _803 = log2(0.0);
        float _809 = ((_803 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_795 * gl_WorldRayDirectionEXT.x, _795 * gl_WorldRayDirectionEXT.y, _795 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _811 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    }
    else
    {
        _811 = 0.0;
    }
    vec4 _813 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _696) + cbTextureTilingScale._m0[3u].z, _751), _811);
    uvec2 _840 = uvec2(textureSize(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_1, int(0u)));
    float _891;
    if (_712)
    {
        float _851 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _857 = (_626 * _611) - (_623 * _614);
        float _860 = (_620 * _614) - (_626 * _608);
        float _863 = (_623 * _608) - (_620 * _611);
        float _889 = ((log2((((float(_840.y) * 0.5) * float(_840.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_860 * _860) + (_863 * _863)) + (_857 * _857)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_851 * gl_WorldRayDirectionEXT.x, _851 * gl_WorldRayDirectionEXT.y, _851 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _891 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    }
    else
    {
        _891 = 0.0;
    }
    vec4 _893 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _627) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _628) + cbTextureTilingScale._m0[1u].w), _891);
    float _897 = _893.z;
    float _900 = (_893.x * 2.0) + (-1.0);
    float _901 = (_893.y * 2.0) + (-1.0);
    float _902 = dot(vec2(_900, _901), vec2(_900, _901));
    float _1535 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _907 = sqrt(1.0 - (isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0))));
    float _910 = _900 + ((((((_776.x * _692) + (_742.x * _693)) + (_813.x * _691)) * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _911 = _901 + ((((((_776.y * _692) + (_742.y * _693)) + (_813.y * _691)) * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _914 = fma(_907, _639, fma(_911, _655, _910 * (_674 * _668)));
    float _917 = fma(_907, _641, fma(_911, _656, _910 * (_674 * _669)));
    float _920 = fma(_907, _642, fma(_911, _657, _910 * (_674 * _670)));
    float _924 = inversesqrt(dot(vec3(_914, _917, _920), vec3(_914, _917, _920)));
    float _925 = _924 * _914;
    float _926 = _924 * _917;
    float _927 = _924 * _920;
    float _932 = cbMtdParam._m0[9u].x + dot(vec4(_925, _926, _927, 0.0), vec4(cbMtdParam._m0[9u].zw, cbMtdParam._m0[10u].x, 0.0));
    float _1546 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _933 = isnan(1.0) ? _1546 : (isnan(_1546) ? 1.0 : min(_1546, 1.0));
    uvec2 _945 = uvec2(textureSize(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_0, int(0u)));
    float _996;
    if (_712)
    {
        float _956 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _962 = (_626 * _611) - (_623 * _614);
        float _965 = (_620 * _614) - (_626 * _608);
        float _968 = (_623 * _608) - (_620 * _611);
        float _994 = ((log2((((float(_945.y) * 0.5) * float(_945.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_965 * _965) + (_968 * _968)) + (_962 * _962)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_956 * gl_WorldRayDirectionEXT.x, _956 * gl_WorldRayDirectionEXT.y, _956 * gl_WorldRayDirectionEXT.z), vec3(_639, _641, _642))));
        _996 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    }
    else
    {
        _996 = 0.0;
    }
    vec4 _999 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _627) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _628) + cbTextureTilingScale._m0[0u].w), _996);
    uvec2 _1015 = uvec2(textureSize(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_2, int(0u)));
    float _1019 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1020 = _1019 * gl_WorldRayDirectionEXT.x;
    float _1021 = _1019 * gl_WorldRayDirectionEXT.y;
    float _1022 = _1019 * gl_WorldRayDirectionEXT.z;
    float _1066;
    if (_712)
    {
        float _1032 = (_626 * _611) - (_623 * _614);
        float _1035 = (_620 * _614) - (_626 * _608);
        float _1038 = (_623 * _608) - (_620 * _611);
        float _1064 = ((log2((((float(_1015.y) * 0.5) * float(_1015.x)) * abs((_581 * _575) - (_580 * _577))) / (sqrt(((_1035 * _1035) + (_1038 * _1038)) + (_1032 * _1032)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1020, _1021, _1022), vec3(_639, _641, _642))));
        _1066 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    }
    else
    {
        _1066 = 0.0;
    }
    vec4 _1068 = textureLod(sampler2D(M_AMSN_V_Ov_N_Rock_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _627) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _628) + cbTextureTilingScale._m0[2u].w), _1066);
    float _1070 = _1068.x;
    float _1071 = _1068.y;
    float _1072 = _1068.z;
    float _1079 = ((_999.x - _1070) * _933) + _1070;
    float _1080 = ((_999.y - _1071) * _933) + _1071;
    float _1081 = ((_999.z - _1072) * _933) + _1072;
    float _1084 = (((((_776.z * _692) + (_742.z * _693)) + (_813.z * _691)) - _897) * cbMtdParam._m0[9u].y) + _897;
    float _1567 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1085 = isnan(1.0) ? _1567 : (isnan(_1567) ? 1.0 : min(_1567, 1.0));
    float _1097 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1098 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1099 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1100 = (-0.0) - _1020;
    float _1102 = (-0.0) - _1021;
    float _1103 = (-0.0) - _1022;
    float _1109 = float(gl_LaunchIDEXT.x);
    float _1110 = float(gl_LaunchIDEXT.y);
    float _1113 = float(gl_LaunchSizeEXT.x);
    float _1127 = fract(fract(sin(dot(vec2(_1109 / _1113, _1110 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1140 = fract(fract(sin(dot(vec2((_1109 + 128.0) / _1113, (_1110 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _1150 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1151 = _1150.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1151, _1150.w, _1151, vec3(_1097, _1098, _1099), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    if (_63._m0 == 0u)
    {
        float _1172 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_925, _926, _927));
        float _1578 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1175 = isnan(1.0) ? _1578 : (isnan(_1578) ? 1.0 : min(_1578, 1.0));
        float _1194 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1085) * 0.949999988079071044921875);
        float _1195 = _1194 * _1194;
        float _1196 = g_sceneCB._m0[4u].x - _1020;
        float _1197 = g_sceneCB._m0[4u].y - _1021;
        float _1198 = g_sceneCB._m0[4u].z - _1022;
        float _1202 = inversesqrt(dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198)));
        float _1203 = _1202 * _1196;
        float _1204 = _1202 * _1197;
        float _1205 = _1202 * _1198;
        float _1206 = dot(vec3(_925, _926, _927), vec3(g_sceneCB._m0[4u].xyz));
        float _1589 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1209 = isnan(1.0) ? _1589 : (isnan(_1589) ? 1.0 : min(_1589, 1.0));
        float _1210 = dot(vec3(_925, _926, _927), vec3(_1100, _1102, _1103));
        float _1600 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1213 = isnan(1.0) ? _1600 : (isnan(_1600) ? 1.0 : min(_1600, 1.0));
        float _1214 = dot(vec3(_925, _926, _927), vec3(_1203, _1204, _1205));
        float _1611 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1217 = isnan(1.0) ? _1611 : (isnan(_1611) ? 1.0 : min(_1611, 1.0));
        float _1218 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1203, _1204, _1205));
        float _1622 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1222 = _1195 * _1195;
        float _1226 = ((_1217 * _1217) * (_1222 + (-1.0))) + 1.0;
        float _1238 = (exp2(log2(1.0 - (isnan(1.0) ? _1622 : (isnan(_1622) ? 1.0 : min(_1622, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1240 = 1.0 - _1195;
        float _1251 = (0.5 / (((_1213 * ((_1209 * _1240) + _1195)) + 9.9999999392252902907785028219223e-09) + (((_1213 * _1240) + _1195) * _1209))) * _1209;
        float _1633 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1253 = (isnan(1.0) ? _1633 : (isnan(_1633) ? 1.0 : min(_1633, 1.0))) * (_1222 / ((_1226 * _1226) * 3.141590118408203125));
        _1260 = ((_1079 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1175;
        _1261 = ((_1080 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1175;
        _1262 = ((_1081 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1175;
        _1263 = (_1238 * g_sceneCB._m0[5u].x) * _1253;
        _1264 = (_1238 * g_sceneCB._m0[5u].y) * _1253;
        _1265 = (_1238 * g_sceneCB._m0[5u].z) * _1253;
    }
    else
    {
        _1260 = 0.0;
        _1261 = 0.0;
        _1262 = 0.0;
        _1263 = 0.0;
        _1264 = 0.0;
        _1265 = 0.0;
    }
    bool _1267 = abs(_926) < 0.89999997615814208984375;
    float _1269 = float(_1267);
    float _1270 = _1267 ? 0.0 : 1.0;
    float _1273 = (_1269 * _927) - (_1270 * _926);
    float _1274 = _1270 * _925;
    float _1276 = (-0.0) - (_925 * _1269);
    float _1280 = inversesqrt(dot(vec3(_1273, _1274, _1276), vec3(_1273, _1274, _1276)));
    float _1281 = _1273 * _1280;
    float _1282 = _1274 * _1280;
    float _1283 = _1280 * _1276;
    float _1286 = (_1282 * _927) - (_1283 * _926);
    float _1289 = (_1283 * _925) - (_1281 * _927);
    float _1292 = (_1281 * _926) - (_1282 * _925);
    float _1294;
    float _1302;
    float _1293 = 0.0;
    uint _1295 = 0u;
    float _1299;
    bool _1301;
    for (;;)
    {
        _1299 = (float(_1295) + _1127) * 0.03125;
        _1301 = _1295 == 0u;
        float frontier_phi_51_pred;
        if (_1301)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1436;
            float _1437;
            uint _1439;
            _1436 = 0.0;
            _1437 = 0.5;
            _1439 = _1295;
            float _1303;
            for (;;)
            {
                _1303 = ((_1439 & 1u) != 0u) ? (_1437 + _1436) : _1436;
                uint _1440 = _1439 >> 1u;
                if (_1440 == 0u)
                {
                    break;
                }
                else
                {
                    _1436 = _1303;
                    _1437 *= 0.5;
                    _1439 = _1440;
                }
            }
            frontier_phi_51_pred = _1303;
        }
        _1302 = frontier_phi_51_pred;
        float _1304 = _1302 + _1140;
        float _1308 = sqrt(_1299);
        float _1309 = ((_1304 > 1.0) ? (_1304 + (-1.0)) : _1304) * 6.283185482025146484375;
        float _1312 = cos(_1309) * _1308;
        float _1314 = sin(_1309) * _1308;
        float _1316 = sqrt(1.0 - _1299);
        float _1329 = ((_1316 * _925) + (_1312 * _1286)) + (_1314 * _1281);
        float _1330 = ((_1316 * _926) + (_1312 * _1289)) + (_1314 * _1282);
        float _1331 = ((_1316 * _927) + (_1312 * _1292)) + (_1314 * _1283);
        _62._m0 = 1u;
        uvec4 _1335 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1336 = _1335.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1336, _1335.w, _1336, vec3(_1097, _1098, _1099), 9.9999997473787516355514526367188e-05, vec3(_1329, _1330, _1331), 10000.0, 1);
        float _1342 = dot(vec3(_925, _926, _927), vec3(_1329, _1330, _1331));
        float _1644 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1345 = isnan(1.0) ? _1644 : (isnan(_1644) ? 1.0 : min(_1644, 1.0));
        _1294 = ((float(_62._m0 == 0u) * _1345) / (_1345 * 0.3183098733425140380859375)) + _1293;
        uint _1296 = _1295 + 1u;
        if (_1296 == 32u)
        {
            break;
        }
        else
        {
            _1293 = _1294;
            _1295 = _1296;
            continue;
        }
    }
    float _1353 = _1294 * 0.009947183541953563690185546875;
    float _1358 = dot(vec3(_1020, _1021, _1022), vec3(_925, _926, _927)) * 2.0;
    vec4 _1372 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1020 - (_1358 * _925), _1021 - (_1358 * _926), _1022 - (_1358 * _927)), 4.0 - (_1085 * 4.0));
    float _1377 = dot(vec3(_1100, _1102, _1103), vec3(_925, _926, _927));
    float _1655 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
    float _1386 = (exp2(log2(1.0 - (isnan(1.0) ? _1655 : (isnan(_1655) ? 1.0 : min(_1655, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1392 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_925, _926, _927), 0.0);
    float _1403 = (_1263 + _1260) + (((_1392.x * _1079) + (_1386 * _1372.x)) * _1353);
    float _1407 = (_1264 + _1261) + (((_1392.y * _1080) + (_1386 * _1372.y)) * _1353);
    float _1411 = (_1265 + _1262) + (((_1392.z * _1081) + (_1386 * _1372.z)) * _1353);
    float _1666 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
    float _1677 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
    float _1688 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
    bool _1419 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1430;
    _1430.x = _1419 ? ((_632 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1666 : (isnan(_1666) ? 1.0 : min(_1666, 1.0)));
    _1430.y = _1419 ? ((_635 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1677 : (isnan(_1677) ? 1.0 : min(_1677, 1.0)));
    _1430.z = _1419 ? ((_638 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1688 : (isnan(_1688) ? 1.0 : min(_1688, 1.0)));
    payload._m0 = _1430;
}


