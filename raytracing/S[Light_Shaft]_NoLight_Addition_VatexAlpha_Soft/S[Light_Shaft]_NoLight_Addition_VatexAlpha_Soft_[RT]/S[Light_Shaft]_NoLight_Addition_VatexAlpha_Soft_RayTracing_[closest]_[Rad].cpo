#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1010;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _106 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _115 = sqrt(((_107 * _107) + (_106 * _106)) + (_108 * _108)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _126 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _127 = _126.y;
    uint _167;
    uint _169;
    uint _170;
    if (_126.x == 0u)
    {
        uint _135 = (_127 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _144 = uvec3(texelFetch(l_geomIndexBuffer, int(_135)).x, texelFetch(l_geomIndexBuffer, int(_135 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_135 + 2u)).x);
        _167 = _144.x;
        _169 = _144.y;
        _170 = _144.z;
    }
    else
    {
        uint _148 = uint(gl_PrimitiveID) * 6u;
        uint _150 = _148 & 4294967292u;
        uint _153 = (_127 + _150) >> 2u;
        uvec2 _160 = uvec2(texelFetch(l_geomIndexBuffer, int(_153)).x, texelFetch(l_geomIndexBuffer, int(_153 + 1u)).x);
        uint _161 = _160.x;
        uint _162 = _160.y;
        uint _164 = _161 >> 16u;
        uint _165 = _162 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_150 == _148)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _161 & 65535u;
            frontier_phi_3_2_ladder_2 = _164;
        }
        else
        {
            frontier_phi_3_2_ladder = _162 >> 16u;
            frontier_phi_3_2_ladder_1 = _164;
            frontier_phi_3_2_ladder_2 = _165;
        }
        _167 = frontier_phi_3_2_ladder_1;
        _169 = frontier_phi_3_2_ladder_2;
        _170 = frontier_phi_3_2_ladder;
    }
    uvec4 _174 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _175 = _174.x;
    uint _176 = _174.z;
    bool _177 = _176 != 0u;
    bool _179 = _126.w == 0u;
    bool _180 = _177 || _179;
    uint _182 = (_175 * _167) + 12u;
    uint _206;
    uint _207;
    uint _208;
    uint _209;
    if (_180)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_182 >> 2u));
        uint _186 = _185.x;
        _206 = _186 & 255u;
        _207 = (_186 >> 8u) & 255u;
        _208 = (_186 >> 16u) & 255u;
        _209 = 20u;
    }
    else
    {
        uint _194 = _182 >> 2u;
        uvec2 _200 = uvec2(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x);
        uint _201 = _200.x;
        _206 = _201 & 65535u;
        _207 = _201 >> 16u;
        _208 = _200.y & 65535u;
        _209 = 24u;
    }
    bool _215 = _176 == 0u;
    uint _216;
    if (_215)
    {
        _216 = _209;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_179)
        {
            frontier_phi_9_10_ladder = _209 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _209 + 8u;
        }
        _216 = frontier_phi_9_10_ladder;
    }
    uvec4 _227 = texelFetch(l_geomAttrib_0, int((((_175 * _167) + 4u) + (_177 ? (_216 + 4u) : _216)) >> 2u));
    uint _228 = _227.x;
    float _232 = float(int(uint(int(_228 << 16u) >> int(16u))));
    float _233 = float(int(uint(int(_228) >> int(16u))));
    uint _235 = (_175 * _169) + 12u;
    uint _256;
    uint _257;
    uint _258;
    uint _259;
    if (_180)
    {
        uvec4 _237 = texelFetch(l_geomAttrib_0, int(_235 >> 2u));
        uint _238 = _237.x;
        _256 = _238 & 255u;
        _257 = (_238 >> 8u) & 255u;
        _258 = (_238 >> 16u) & 255u;
        _259 = 20u;
    }
    else
    {
        uint _244 = _235 >> 2u;
        uvec2 _250 = uvec2(texelFetch(l_geomAttrib_0, int(_244)).x, texelFetch(l_geomAttrib_0, int(_244 + 1u)).x);
        uint _251 = _250.x;
        _256 = _251 & 65535u;
        _257 = _251 >> 16u;
        _258 = _250.y & 65535u;
        _259 = 24u;
    }
    uint _263;
    if (_215)
    {
        _263 = _259;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_179)
        {
            frontier_phi_16_17_ladder = _259 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _259 + 8u;
        }
        _263 = frontier_phi_16_17_ladder;
    }
    uvec4 _272 = texelFetch(l_geomAttrib_0, int((((_175 * _169) + 4u) + (_177 ? (_263 + 4u) : _263)) >> 2u));
    uint _273 = _272.x;
    float _277 = float(int(uint(int(_273 << 16u) >> int(16u))));
    float _278 = float(int(uint(int(_273) >> int(16u))));
    uint _280 = (_175 * _170) + 12u;
    uint _301;
    uint _302;
    uint _303;
    uint _304;
    if (_180)
    {
        uvec4 _282 = texelFetch(l_geomAttrib_0, int(_280 >> 2u));
        uint _283 = _282.x;
        _301 = _283 & 255u;
        _302 = (_283 >> 8u) & 255u;
        _303 = (_283 >> 16u) & 255u;
        _304 = 20u;
    }
    else
    {
        uint _289 = _280 >> 2u;
        uvec2 _295 = uvec2(texelFetch(l_geomAttrib_0, int(_289)).x, texelFetch(l_geomAttrib_0, int(_289 + 1u)).x);
        uint _296 = _295.x;
        _301 = _296 & 65535u;
        _302 = _296 >> 16u;
        _303 = _295.y & 65535u;
        _304 = 24u;
    }
    uint _308;
    if (_215)
    {
        _308 = _304;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_179)
        {
            frontier_phi_23_24_ladder = _304 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _304 + 8u;
        }
        _308 = frontier_phi_23_24_ladder;
    }
    uvec4 _317 = texelFetch(l_geomAttrib_0, int((((_175 * _170) + 4u) + (_177 ? (_308 + 4u) : _308)) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    bool _325 = _126.z == 0u;
    float _361;
    float _362;
    float _363;
    if (_325)
    {
        uint _328 = _167 * 3u;
        uvec3 _337 = uvec3(texelFetch(l_geomPositionBuffer, int(_328)).x, texelFetch(l_geomPositionBuffer, int(_328 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_328 + 2u)).x);
        _361 = uintBitsToFloat(_337.x);
        _362 = uintBitsToFloat(_337.y);
        _363 = uintBitsToFloat(_337.z);
    }
    else
    {
        uint _345 = _167 * 2u;
        uvec2 _351 = uvec2(texelFetch(l_geomPositionBuffer, int(_345)).x, texelFetch(l_geomPositionBuffer, int(_345 + 1u)).x);
        uint _352 = _351.x;
        _361 = unpackHalf2x16(_352).x;
        _362 = unpackHalf2x16(_352 >> 16u).x;
        _363 = unpackHalf2x16(_351.y).x;
    }
    float _399;
    float _400;
    float _401;
    if (_325)
    {
        uint _366 = _169 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _169 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_325)
    {
        uint _404 = _170 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _170 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _442 = (1.0 - hit._m0.x) - hit._m0.y;
    float _464 = (_277 - _232) * 0.00048828125;
    float _466 = (_278 - _233) * 0.00048828125;
    float _469 = (_322 - _232) * 0.00048828125;
    float _470 = (_323 - _233) * 0.00048828125;
    float _492 = _399 - _361;
    float _493 = _400 - _362;
    float _494 = _401 - _363;
    float _497 = fma(_494, gl_ObjectToWorldEXT[2u].x, fma(_493, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _492));
    float _500 = fma(_494, gl_ObjectToWorldEXT[2u].y, fma(_493, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _492));
    float _503 = fma(_494, gl_ObjectToWorldEXT[2u].z, fma(_493, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _492));
    float _504 = _437 - _361;
    float _505 = _438 - _362;
    float _506 = _439 - _363;
    float _509 = fma(_506, gl_ObjectToWorldEXT[2u].x, fma(_505, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _504));
    float _512 = fma(_506, gl_ObjectToWorldEXT[2u].y, fma(_505, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _504));
    float _515 = fma(_506, gl_ObjectToWorldEXT[2u].z, fma(_505, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _504));
    float _516 = (((_277 * hit._m0.x) + (_232 * _442)) + (_322 * hit._m0.y)) * 0.00048828125;
    float _517 = (((_278 * hit._m0.x) + (_233 * _442)) + (_323 * hit._m0.y)) * 0.00048828125;
    float _521 = (((float(_206) * _442) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y);
    float _524 = (((float(_207) * _442) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _527 = (((float(_208) * _442) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _528 = _521 * 0.0078740157186985015869140625;
    float _530 = _524 * 0.0078740157186985015869140625;
    float _531 = _527 * 0.0078740157186985015869140625;
    uvec2 _554 = uvec2(textureSize(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, int(0u)));
    bool _559 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _612;
    if (_559)
    {
        float _570 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _576 = (_515 * _500) - (_512 * _503);
        float _579 = (_509 * _503) - (_515 * _497);
        float _582 = (_512 * _497) - (_509 * _500);
        float _609 = ((log2((((float(_554.y) * 0.5) * float(_554.x)) * abs((_470 * _464) - (_469 * _466))) / (sqrt(((_579 * _579) + (_582 * _582)) + (_576 * _576)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_570 * gl_WorldRayDirectionEXT.x, _570 * gl_WorldRayDirectionEXT.y, _570 * gl_WorldRayDirectionEXT.z), vec3(_528, _530, _531))));
        _612 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    }
    else
    {
        _612 = 0.0;
    }
    vec4 _616 = textureLod(sampler2D(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _612);
    uvec2 _647 = uvec2(textureSize(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_1, int(0u)));
    float _651 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _652 = _651 * gl_WorldRayDirectionEXT.x;
    float _653 = _651 * gl_WorldRayDirectionEXT.y;
    float _654 = _651 * gl_WorldRayDirectionEXT.z;
    float _698;
    if (_559)
    {
        float _664 = (_515 * _500) - (_512 * _503);
        float _667 = (_509 * _503) - (_515 * _497);
        float _670 = (_512 * _497) - (_509 * _500);
        float _696 = ((log2((((float(_647.y) * 0.5) * float(_647.x)) * abs((_470 * _464) - (_469 * _466))) / (sqrt(((_667 * _667) + (_670 * _670)) + (_664 * _664)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_115) / abs(dot(vec3(_652, _653, _654), vec3(_528, _530, _531))));
        _698 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    }
    else
    {
        _698 = 0.0;
    }
    vec4 _700 = textureLod(sampler2D(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + _516) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _698);
    float _717 = inversesqrt(dot(vec3(_528, _530, _531), vec3(_528, _530, _531)));
    float _718 = _717 * _528;
    float _719 = _717 * _530;
    float _720 = _717 * _531;
    float _732 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _733 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _734 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _735 = (-0.0) - _652;
    float _737 = (-0.0) - _653;
    float _738 = (-0.0) - _654;
    float _744 = float(gl_LaunchIDEXT.x);
    float _745 = float(gl_LaunchIDEXT.y);
    float _748 = float(gl_LaunchSizeEXT.x);
    float _762 = fract(fract(sin(dot(vec2(_744 / _748, _745 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _775 = fract(fract(sin(dot(vec2((_744 + 128.0) / _748, (_745 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _64._m0 = 1u;
    uvec4 _785 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _786 = _785.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _786, _785.w, _786, vec3(_732, _733, _734), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _852;
    float _853;
    float _854;
    if (_64._m0 == 0u)
    {
        float _807 = g_sceneCB._m0[4u].x - _652;
        float _808 = g_sceneCB._m0[4u].y - _653;
        float _809 = g_sceneCB._m0[4u].z - _654;
        float _813 = inversesqrt(dot(vec3(_807, _808, _809), vec3(_807, _808, _809)));
        float _817 = dot(vec3(_718, _719, _720), vec3(g_sceneCB._m0[4u].xyz));
        float _1096 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
        float _820 = isnan(1.0) ? _1096 : (isnan(_1096) ? 1.0 : min(_1096, 1.0));
        float _821 = dot(vec3(_718, _719, _720), vec3(_735, _737, _738));
        float _1107 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
        float _825 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_807 * _813, _808 * _813, _809 * _813));
        float _1118 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
        float _836 = (exp2(log2(1.0 - (isnan(1.0) ? _1118 : (isnan(_1118) ? 1.0 : min(_1118, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _842 = (0.5 / ((_820 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1107 : (isnan(_1107) ? 1.0 : min(_1107, 1.0))))) * _820;
        float _1129 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _844 = (isnan(1.0) ? _1129 : (isnan(_1129) ? 1.0 : min(_1129, 1.0))) * 0.31831014156341552734375;
        _852 = (_836 * g_sceneCB._m0[5u].x) * _844;
        _853 = (_836 * g_sceneCB._m0[5u].y) * _844;
        _854 = (_836 * g_sceneCB._m0[5u].z) * _844;
    }
    else
    {
        _852 = 0.0;
        _853 = 0.0;
        _854 = 0.0;
    }
    bool _856 = abs(_719) < 0.89999997615814208984375;
    float _858 = float(_856);
    float _859 = _856 ? 0.0 : 1.0;
    float _862 = (_858 * _720) - (_859 * _719);
    float _863 = _859 * _718;
    float _865 = (-0.0) - (_718 * _858);
    float _869 = inversesqrt(dot(vec3(_862, _863, _865), vec3(_862, _863, _865)));
    float _870 = _862 * _869;
    float _871 = _863 * _869;
    float _872 = _869 * _865;
    float _875 = (_871 * _720) - (_872 * _719);
    float _878 = (_872 * _718) - (_870 * _720);
    float _881 = (_870 * _719) - (_871 * _718);
    float _883;
    float _891;
    float _882 = 0.0;
    uint _884 = 0u;
    float _888;
    bool _890;
    for (;;)
    {
        _888 = (float(_884) + _762) * 0.03125;
        _890 = _884 == 0u;
        float frontier_phi_43_pred;
        if (_890)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1015;
            float _1016;
            uint _1018;
            _1015 = 0.0;
            _1016 = 0.5;
            _1018 = _884;
            float _892;
            for (;;)
            {
                _892 = ((_1018 & 1u) != 0u) ? (_1016 + _1015) : _1015;
                uint _1019 = _1018 >> 1u;
                if (_1019 == 0u)
                {
                    break;
                }
                else
                {
                    _1015 = _892;
                    _1016 *= 0.5;
                    _1018 = _1019;
                }
            }
            frontier_phi_43_pred = _892;
        }
        _891 = frontier_phi_43_pred;
        float _893 = _891 + _775;
        float _898 = sqrt(_888);
        float _899 = ((_893 > 1.0) ? (_893 + (-1.0)) : _893) * 6.283185482025146484375;
        float _902 = cos(_899) * _898;
        float _904 = sin(_899) * _898;
        float _906 = sqrt(1.0 - _888);
        float _919 = ((_906 * _718) + (_902 * _875)) + (_904 * _870);
        float _920 = ((_906 * _719) + (_902 * _878)) + (_904 * _871);
        float _921 = ((_906 * _720) + (_902 * _881)) + (_904 * _872);
        _63._m0 = 1u;
        uvec4 _925 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _926 = _925.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _926, _925.w, _926, vec3(_732, _733, _734), 9.9999997473787516355514526367188e-05, vec3(_919, _920, _921), 10000.0, 1);
        float _932 = dot(vec3(_718, _719, _720), vec3(_919, _920, _921));
        float _1140 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _935 = isnan(1.0) ? _1140 : (isnan(_1140) ? 1.0 : min(_1140, 1.0));
        _883 = ((float(_63._m0 == 0u) * _935) / (_935 * 0.3183098733425140380859375)) + _882;
        uint _885 = _884 + 1u;
        if (_885 == 32u)
        {
            break;
        }
        else
        {
            _882 = _883;
            _884 = _885;
            continue;
        }
    }
    float _944 = _883 * 0.009947183541953563690185546875;
    float _949 = dot(vec3(_652, _653, _654), vec3(_718, _719, _720)) * 2.0;
    vec4 _961 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_652 - (_949 * _718), _653 - (_949 * _719), _654 - (_949 * _720)), 4.0);
    float _966 = dot(vec3(_735, _737, _738), vec3(_718, _719, _720));
    float _1151 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _975 = (exp2(log2(1.0 - (isnan(1.0) ? _1151 : (isnan(_1151) ? 1.0 : min(_1151, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _984 = (((cbMtdParam._m0[10u].x * _700.x) + (cbMtdParam._m0[9u].x * _616.x)) + _852) + ((_961.x * _944) * _975);
    float _987 = (((cbMtdParam._m0[10u].y * _700.y) + (cbMtdParam._m0[9u].y * _616.y)) + _853) + ((_961.y * _944) * _975);
    float _990 = (((cbMtdParam._m0[10u].z * _700.z) + (cbMtdParam._m0[9u].z * _616.z)) + _854) + ((_961.z * _944) * _975);
    float _1162 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _1173 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _1184 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    bool _998 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1009;
    _1009.x = _998 ? ((_521 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1162 : (isnan(_1162) ? 1.0 : min(_1162, 1.0)));
    _1009.y = _998 ? ((_524 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1173 : (isnan(_1173) ? 1.0 : min(_1173, 1.0)));
    _1009.z = _998 ? ((_527 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1184 : (isnan(_1184) ? 1.0 : min(_1184, 1.0)));
    payload._m0 = _1009;
}


