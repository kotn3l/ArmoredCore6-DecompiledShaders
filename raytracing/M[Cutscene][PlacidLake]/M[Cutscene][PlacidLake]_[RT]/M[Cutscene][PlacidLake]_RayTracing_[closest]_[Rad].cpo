#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_PlacidLake_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _1092;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _158;
    uint _160;
    uint _161;
    if (_117.x == 0u)
    {
        uint _126 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _135 = uvec3(texelFetch(l_geomIndexBuffer, int(_126)).x, texelFetch(l_geomIndexBuffer, int(_126 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_126 + 2u)).x);
        _158 = _135.x;
        _160 = _135.y;
        _161 = _135.z;
    }
    else
    {
        uint _139 = uint(gl_PrimitiveID) * 6u;
        uint _141 = _139 & 4294967292u;
        uint _144 = (_118 + _141) >> 2u;
        uvec2 _151 = uvec2(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x);
        uint _152 = _151.x;
        uint _153 = _151.y;
        uint _155 = _152 >> 16u;
        uint _156 = _153 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_141 == _139)
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _152 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _153 >> 16u;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _158 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder_1;
        _161 = frontier_phi_3_2_ladder;
    }
    uvec4 _165 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _166 = _165.x;
    uint _167 = _165.z;
    bool _168 = _167 != 0u;
    bool _170 = _117.w == 0u;
    bool _171 = _168 || _170;
    uint _172 = _166 * _158;
    uint _173 = _172 + 12u;
    uint _197;
    uint _198;
    uint _199;
    uint _200;
    if (_171)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_173 >> 2u));
        uint _177 = _176.x;
        _197 = _177 & 255u;
        _198 = (_177 >> 8u) & 255u;
        _199 = (_177 >> 16u) & 255u;
        _200 = 16u;
    }
    else
    {
        uint _185 = _173 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
        _200 = 20u;
    }
    uvec4 _208 = texelFetch(l_geomAttrib_0, int((_200 + _172) >> 2u));
    uint _209 = _208.x;
    bool _223 = _167 == 0u;
    uint _224;
    if (_223)
    {
        _224 = _200 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_170)
        {
            frontier_phi_9_10_ladder = _200 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _200 + 12u;
        }
        _224 = frontier_phi_9_10_ladder;
    }
    uvec4 _232 = texelFetch(l_geomAttrib_0, int(((_172 + 4u) + (_168 ? (_224 + 4u) : _224)) >> 2u));
    uint _233 = _232.x;
    float _237 = float(int(uint(int(_233 << 16u) >> int(16u))));
    float _238 = float(int(uint(int(_233) >> int(16u))));
    uint _239 = _166 * _160;
    uint _240 = _239 + 12u;
    uint _261;
    uint _262;
    uint _263;
    uint _264;
    if (_171)
    {
        uvec4 _242 = texelFetch(l_geomAttrib_0, int(_240 >> 2u));
        uint _243 = _242.x;
        _261 = _243 & 255u;
        _262 = (_243 >> 8u) & 255u;
        _263 = (_243 >> 16u) & 255u;
        _264 = 16u;
    }
    else
    {
        uint _249 = _240 >> 2u;
        uvec2 _255 = uvec2(texelFetch(l_geomAttrib_0, int(_249)).x, texelFetch(l_geomAttrib_0, int(_249 + 1u)).x);
        uint _256 = _255.x;
        _261 = _256 & 65535u;
        _262 = _256 >> 16u;
        _263 = _255.y & 65535u;
        _264 = 20u;
    }
    uvec4 _270 = texelFetch(l_geomAttrib_0, int((_264 + _239) >> 2u));
    uint _271 = _270.x;
    uint _283;
    if (_223)
    {
        _283 = _264 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_170)
        {
            frontier_phi_16_17_ladder = _264 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _264 + 12u;
        }
        _283 = frontier_phi_16_17_ladder;
    }
    uvec4 _291 = texelFetch(l_geomAttrib_0, int(((_239 + 4u) + (_168 ? (_283 + 4u) : _283)) >> 2u));
    uint _292 = _291.x;
    float _296 = float(int(uint(int(_292 << 16u) >> int(16u))));
    float _297 = float(int(uint(int(_292) >> int(16u))));
    uint _298 = _166 * _161;
    uint _299 = _298 + 12u;
    uint _320;
    uint _321;
    uint _322;
    uint _323;
    if (_171)
    {
        uvec4 _301 = texelFetch(l_geomAttrib_0, int(_299 >> 2u));
        uint _302 = _301.x;
        _320 = _302 & 255u;
        _321 = (_302 >> 8u) & 255u;
        _322 = (_302 >> 16u) & 255u;
        _323 = 16u;
    }
    else
    {
        uint _308 = _299 >> 2u;
        uvec2 _314 = uvec2(texelFetch(l_geomAttrib_0, int(_308)).x, texelFetch(l_geomAttrib_0, int(_308 + 1u)).x);
        uint _315 = _314.x;
        _320 = _315 & 65535u;
        _321 = _315 >> 16u;
        _322 = _314.y & 65535u;
        _323 = 20u;
    }
    uvec4 _329 = texelFetch(l_geomAttrib_0, int((_323 + _298) >> 2u));
    uint _330 = _329.x;
    uint _342;
    if (_223)
    {
        _342 = _323 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_170)
        {
            frontier_phi_23_24_ladder = _323 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _323 + 12u;
        }
        _342 = frontier_phi_23_24_ladder;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int(((_298 + 4u) + (_168 ? (_342 + 4u) : _342)) >> 2u));
    uint _351 = _350.x;
    float _355 = float(int(uint(int(_351 << 16u) >> int(16u))));
    float _356 = float(int(uint(int(_351) >> int(16u))));
    bool _358 = _117.z == 0u;
    float _394;
    float _395;
    float _396;
    if (_358)
    {
        uint _361 = _158 * 3u;
        uvec3 _370 = uvec3(texelFetch(l_geomPositionBuffer, int(_361)).x, texelFetch(l_geomPositionBuffer, int(_361 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_361 + 2u)).x);
        _394 = uintBitsToFloat(_370.x);
        _395 = uintBitsToFloat(_370.y);
        _396 = uintBitsToFloat(_370.z);
    }
    else
    {
        uint _378 = _158 * 2u;
        uvec2 _384 = uvec2(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x);
        uint _385 = _384.x;
        _394 = unpackHalf2x16(_385).x;
        _395 = unpackHalf2x16(_385 >> 16u).x;
        _396 = unpackHalf2x16(_384.y).x;
    }
    float _432;
    float _433;
    float _434;
    if (_358)
    {
        uint _399 = _160 * 3u;
        uvec3 _408 = uvec3(texelFetch(l_geomPositionBuffer, int(_399)).x, texelFetch(l_geomPositionBuffer, int(_399 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_399 + 2u)).x);
        _432 = uintBitsToFloat(_408.x);
        _433 = uintBitsToFloat(_408.y);
        _434 = uintBitsToFloat(_408.z);
    }
    else
    {
        uint _416 = _160 * 2u;
        uvec2 _422 = uvec2(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x);
        uint _423 = _422.x;
        _432 = unpackHalf2x16(_423).x;
        _433 = unpackHalf2x16(_423 >> 16u).x;
        _434 = unpackHalf2x16(_422.y).x;
    }
    float _470;
    float _471;
    float _472;
    if (_358)
    {
        uint _437 = _161 * 3u;
        uvec3 _446 = uvec3(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_437 + 2u)).x);
        _470 = uintBitsToFloat(_446.x);
        _471 = uintBitsToFloat(_446.y);
        _472 = uintBitsToFloat(_446.z);
    }
    else
    {
        uint _454 = _161 * 2u;
        uvec2 _460 = uvec2(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x);
        uint _461 = _460.x;
        _470 = unpackHalf2x16(_461).x;
        _471 = unpackHalf2x16(_461 >> 16u).x;
        _472 = unpackHalf2x16(_460.y).x;
    }
    float _475 = (1.0 - hit._m0.x) - hit._m0.y;
    float _528 = _432 - _394;
    float _529 = _433 - _395;
    float _530 = _434 - _396;
    float _533 = fma(_530, gl_ObjectToWorldEXT[2u].x, fma(_529, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _528));
    float _536 = fma(_530, gl_ObjectToWorldEXT[2u].y, fma(_529, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _528));
    float _539 = fma(_530, gl_ObjectToWorldEXT[2u].z, fma(_529, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _528));
    float _540 = _470 - _394;
    float _541 = _471 - _395;
    float _542 = _472 - _396;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _558 = (((float(_197) * _475) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _561 = (((float(_198) * _475) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _564 = (((float(_199) * _475) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _565 = _558 * 0.0078740157186985015869140625;
    float _567 = _561 * 0.0078740157186985015869140625;
    float _568 = _564 * 0.0078740157186985015869140625;
    float _581 = ((((float(_209 & 255u) * _475) + (-127.0)) + (float(_271 & 255u) * hit._m0.x)) + (float(_330 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _582 = ((((float((_209 >> 8u) & 255u) * _475) + (-127.0)) + (float((_271 >> 8u) & 255u) * hit._m0.x)) + (float((_330 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _583 = ((((float((_209 >> 16u) & 255u) * _475) + (-127.0)) + (float((_271 >> 16u) & 255u) * hit._m0.x)) + (float((_330 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _584 = ((((float(_209 >> 24u) * _475) + (-127.0)) + (float(_271 >> 24u) * hit._m0.x)) + (float(_330 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((_582 * _568) - (_583 * _567)) * _584;
    float _595 = ((_583 * _565) - (_581 * _568)) * _584;
    float _596 = ((_581 * _567) - (_582 * _565)) * _584;
    float _600 = inversesqrt(dot(vec3(_594, _595, _596), vec3(_594, _595, _596)));
    float _617 = cbMtdParam._m0[14u].x - cbMtdParam._m0[14u].y;
    float _632 = (cbMtdParam._m0[13u].x + (((-0.0) - cbMtdParam._m0[14u].y) / (isnan(0.001000000047497451305389404296875) ? _617 : (isnan(_617) ? 0.001000000047497451305389404296875 : max(_617, 0.001000000047497451305389404296875))))) * cbMtdParam._m0[13u].y;
    float _1171 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _637 = ((isnan(1.0) ? _1171 : (isnan(_1171) ? 1.0 : min(_1171, 1.0))) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x;
    uvec2 _649 = uvec2(textureSize(M_Cutscene_PlacidLake_snp_0_Texture2D_1, int(0u)));
    float _658 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _659 = _658 * gl_WorldRayDirectionEXT.x;
    float _660 = _658 * gl_WorldRayDirectionEXT.y;
    float _661 = _658 * gl_WorldRayDirectionEXT.z;
    float _712;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _675 = (_551 * _536) - (_548 * _539);
        float _678 = (_545 * _539) - (_551 * _533);
        float _681 = (_548 * _533) - (_545 * _536);
        float _710 = ((log2((((float(_649.y) * 0.5) * float(_649.x)) * abs((((_356 - _238) * (_296 - _237)) - ((_355 - _237) * (_297 - _238))) * 2.384185791015625e-07)) / (sqrt(((_678 * _678) + (_681 * _681)) + (_675 * _675)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_659, _660, _661), vec3(_565, _567, _568))));
        _712 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    }
    else
    {
        _712 = 0.0;
    }
    vec4 _716 = textureLod(sampler2D(M_Cutscene_PlacidLake_snp_0_Texture2D_1, SS_BumpMap), vec2((((((_296 * hit._m0.x) + (_237 * _475)) + (_355 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_297 * hit._m0.x) + (_238 * _475)) + (_356 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _712);
    float _722 = (_716.x * 2.0) + (-1.0);
    float _724 = (_716.y * 2.0) + (-1.0);
    float _725 = dot(vec2(_722, _724), vec2(_722, _724));
    float _1187 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _730 = sqrt(1.0 - (isnan(1.0) ? _1187 : (isnan(_1187) ? 1.0 : min(_1187, 1.0))));
    float _733 = fma(_730, _565, fma(_724, _581, (_600 * _594) * _722));
    float _736 = fma(_730, _567, fma(_724, _582, (_600 * _595) * _722));
    float _739 = fma(_730, _568, fma(_724, _583, (_600 * _596) * _722));
    float _743 = inversesqrt(dot(vec3(_733, _736, _739), vec3(_733, _736, _739)));
    float _744 = _743 * _733;
    float _745 = _743 * _736;
    float _746 = _743 * _739;
    float _758 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _759 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _760 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _761 = (-0.0) - _659;
    float _762 = (-0.0) - _660;
    float _763 = (-0.0) - _661;
    float _769 = float(gl_LaunchIDEXT.x);
    float _770 = float(gl_LaunchIDEXT.y);
    float _773 = float(gl_LaunchSizeEXT.x);
    float _787 = fract(fract(sin(dot(vec2(_769 / _773, _770 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _800 = fract(fract(sin(dot(vec2((_769 + 128.0) / _773, (_770 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _810 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _811 = _810.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _811, _810.w, _811, vec3(_758, _759, _760), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _920;
    float _921;
    float _922;
    float _923;
    float _924;
    float _925;
    if (_59._m0 == 0u)
    {
        float _832 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_744, _745, _746));
        float _1198 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _835 = isnan(1.0) ? _1198 : (isnan(_1198) ? 1.0 : min(_1198, 1.0));
        float _854 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _637) * 0.949999988079071044921875);
        float _855 = _854 * _854;
        float _856 = g_sceneCB._m0[4u].x - _659;
        float _857 = g_sceneCB._m0[4u].y - _660;
        float _858 = g_sceneCB._m0[4u].z - _661;
        float _862 = inversesqrt(dot(vec3(_856, _857, _858), vec3(_856, _857, _858)));
        float _863 = _862 * _856;
        float _864 = _862 * _857;
        float _865 = _862 * _858;
        float _866 = dot(vec3(_744, _745, _746), vec3(g_sceneCB._m0[4u].xyz));
        float _1209 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        float _869 = isnan(1.0) ? _1209 : (isnan(_1209) ? 1.0 : min(_1209, 1.0));
        float _870 = dot(vec3(_744, _745, _746), vec3(_761, _762, _763));
        float _1220 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
        float _873 = isnan(1.0) ? _1220 : (isnan(_1220) ? 1.0 : min(_1220, 1.0));
        float _874 = dot(vec3(_744, _745, _746), vec3(_863, _864, _865));
        float _1231 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
        float _877 = isnan(1.0) ? _1231 : (isnan(_1231) ? 1.0 : min(_1231, 1.0));
        float _878 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_863, _864, _865));
        float _1242 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
        float _882 = _855 * _855;
        float _886 = ((_877 * _877) * (_882 + (-1.0))) + 1.0;
        float _898 = (exp2(log2(1.0 - (isnan(1.0) ? _1242 : (isnan(_1242) ? 1.0 : min(_1242, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _900 = 1.0 - _855;
        float _911 = (0.5 / (((_873 * ((_869 * _900) + _855)) + 9.9999999392252902907785028219223e-09) + (((_873 * _900) + _855) * _869))) * _869;
        float _1253 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
        float _913 = (isnan(1.0) ? _1253 : (isnan(_1253) ? 1.0 : min(_1253, 1.0))) * (_882 / ((_886 * _886) * 3.141590118408203125));
        _920 = ((cbMtdParam._m0[9u].x * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _835;
        _921 = ((cbMtdParam._m0[9u].y * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _835;
        _922 = ((cbMtdParam._m0[9u].z * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _835;
        _923 = (_898 * g_sceneCB._m0[5u].x) * _913;
        _924 = (_898 * g_sceneCB._m0[5u].y) * _913;
        _925 = (_898 * g_sceneCB._m0[5u].z) * _913;
    }
    else
    {
        _920 = 0.0;
        _921 = 0.0;
        _922 = 0.0;
        _923 = 0.0;
        _924 = 0.0;
        _925 = 0.0;
    }
    bool _927 = abs(_745) < 0.89999997615814208984375;
    float _929 = float(_927);
    float _930 = _927 ? 0.0 : 1.0;
    float _933 = (_929 * _746) - (_930 * _745);
    float _934 = _930 * _744;
    float _936 = (-0.0) - (_744 * _929);
    float _940 = inversesqrt(dot(vec3(_933, _934, _936), vec3(_933, _934, _936)));
    float _941 = _933 * _940;
    float _942 = _934 * _940;
    float _943 = _940 * _936;
    float _946 = (_942 * _746) - (_943 * _745);
    float _949 = (_943 * _744) - (_941 * _746);
    float _952 = (_941 * _745) - (_942 * _744);
    float _954;
    float _962;
    float _953 = 0.0;
    uint _955 = 0u;
    float _959;
    bool _961;
    for (;;)
    {
        _959 = (float(_955) + _787) * 0.03125;
        _961 = _955 == 0u;
        float frontier_phi_41_pred;
        if (_961)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1097;
            float _1098;
            uint _1100;
            _1097 = 0.0;
            _1098 = 0.5;
            _1100 = _955;
            float _963;
            for (;;)
            {
                _963 = ((_1100 & 1u) != 0u) ? (_1098 + _1097) : _1097;
                uint _1101 = _1100 >> 1u;
                if (_1101 == 0u)
                {
                    break;
                }
                else
                {
                    _1097 = _963;
                    _1098 *= 0.5;
                    _1100 = _1101;
                }
            }
            frontier_phi_41_pred = _963;
        }
        _962 = frontier_phi_41_pred;
        float _964 = _962 + _800;
        float _968 = sqrt(_959);
        float _969 = ((_964 > 1.0) ? (_964 + (-1.0)) : _964) * 6.283185482025146484375;
        float _972 = cos(_969) * _968;
        float _974 = sin(_969) * _968;
        float _976 = sqrt(1.0 - _959);
        float _989 = ((_976 * _744) + (_972 * _946)) + (_974 * _941);
        float _990 = ((_976 * _745) + (_972 * _949)) + (_974 * _942);
        float _991 = ((_976 * _746) + (_972 * _952)) + (_974 * _943);
        _58._m0 = 1u;
        uvec4 _995 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _996 = _995.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _996, _995.w, _996, vec3(_758, _759, _760), 9.9999997473787516355514526367188e-05, vec3(_989, _990, _991), 10000.0, 1);
        float _1002 = dot(vec3(_744, _745, _746), vec3(_989, _990, _991));
        float _1264 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
        float _1005 = isnan(1.0) ? _1264 : (isnan(_1264) ? 1.0 : min(_1264, 1.0));
        _954 = ((float(_58._m0 == 0u) * _1005) / (_1005 * 0.3183098733425140380859375)) + _953;
        uint _956 = _955 + 1u;
        if (_956 == 32u)
        {
            break;
        }
        else
        {
            _953 = _954;
            _955 = _956;
            continue;
        }
    }
    float _1013 = _954 * 0.009947183541953563690185546875;
    float _1018 = dot(vec3(_659, _660, _661), vec3(_744, _745, _746)) * 2.0;
    vec4 _1032 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_659 - (_1018 * _744), _660 - (_1018 * _745), _661 - (_1018 * _746)), 4.0 - (_637 * 4.0));
    float _1037 = dot(vec3(_761, _762, _763), vec3(_744, _745, _746));
    float _1275 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1046 = (exp2(log2(1.0 - (isnan(1.0) ? _1275 : (isnan(_1275) ? 1.0 : min(_1275, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1052 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_744, _745, _746), 0.0);
    float _1063 = (_923 + _920) + (((_1052.x * cbMtdParam._m0[9u].x) + (_1046 * _1032.x)) * _1013);
    float _1067 = (_924 + _921) + (((_1052.y * cbMtdParam._m0[9u].y) + (_1046 * _1032.y)) * _1013);
    float _1071 = (_925 + _922) + (((_1052.z * cbMtdParam._m0[9u].z) + (_1046 * _1032.z)) * _1013);
    float _1286 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _1297 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1308 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    bool _1080 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1091;
    _1091.x = _1080 ? ((_558 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1286 : (isnan(_1286) ? 1.0 : min(_1286, 1.0)));
    _1091.y = _1080 ? ((_561 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1297 : (isnan(_1297) ? 1.0 : min(_1297, 1.0)));
    _1091.z = _1080 ? ((_564 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1308 : (isnan(_1308) ? 1.0 : min(_1308, 1.0)));
    payload._m0 = _1091;
}


