#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[29];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_DM_RT_PL_2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_DM_RT_PL_2_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2DArray C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_2;
layout(set = 0, binding = 8) uniform texture2DArray C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_0;
layout(set = 0, binding = 9) uniform texture2DArray C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1329;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    bool _235 = _179 == 0u;
    uint _236;
    if (_235)
    {
        _236 = _212 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 12u;
        }
        _236 = frontier_phi_9_10_ladder;
    }
    uvec4 _244 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + (_180 ? (_236 + 4u) : _236)) >> 2u));
    uint _245 = _244.x;
    float _249 = float(int(uint(int(_245 << 16u) >> int(16u))));
    float _250 = float(int(uint(int(_245) >> int(16u))));
    uint _251 = _178 * _172;
    uint _252 = _251 + 12u;
    uint _273;
    uint _274;
    uint _275;
    uint _276;
    if (_183)
    {
        uvec4 _254 = texelFetch(l_geomAttrib_0, int(_252 >> 2u));
        uint _255 = _254.x;
        _273 = _255 & 255u;
        _274 = (_255 >> 8u) & 255u;
        _275 = (_255 >> 16u) & 255u;
        _276 = 16u;
    }
    else
    {
        uint _261 = _252 >> 2u;
        uvec2 _267 = uvec2(texelFetch(l_geomAttrib_0, int(_261)).x, texelFetch(l_geomAttrib_0, int(_261 + 1u)).x);
        uint _268 = _267.x;
        _273 = _268 & 65535u;
        _274 = _268 >> 16u;
        _275 = _267.y & 65535u;
        _276 = 20u;
    }
    uvec4 _282 = texelFetch(l_geomAttrib_0, int((_276 + _251) >> 2u));
    uint _283 = _282.x;
    uint _295;
    if (_235)
    {
        _295 = _276 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _276 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _276 + 12u;
        }
        _295 = frontier_phi_16_17_ladder;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int(((_251 + 4u) + (_180 ? (_295 + 4u) : _295)) >> 2u));
    uint _304 = _303.x;
    float _308 = float(int(uint(int(_304 << 16u) >> int(16u))));
    float _309 = float(int(uint(int(_304) >> int(16u))));
    uint _310 = _178 * _173;
    uint _311 = _310 + 12u;
    uint _332;
    uint _333;
    uint _334;
    uint _335;
    if (_183)
    {
        uvec4 _313 = texelFetch(l_geomAttrib_0, int(_311 >> 2u));
        uint _314 = _313.x;
        _332 = _314 & 255u;
        _333 = (_314 >> 8u) & 255u;
        _334 = (_314 >> 16u) & 255u;
        _335 = 16u;
    }
    else
    {
        uint _320 = _311 >> 2u;
        uvec2 _326 = uvec2(texelFetch(l_geomAttrib_0, int(_320)).x, texelFetch(l_geomAttrib_0, int(_320 + 1u)).x);
        uint _327 = _326.x;
        _332 = _327 & 65535u;
        _333 = _327 >> 16u;
        _334 = _326.y & 65535u;
        _335 = 20u;
    }
    uvec4 _341 = texelFetch(l_geomAttrib_0, int((_335 + _310) >> 2u));
    uint _342 = _341.x;
    uint _354;
    if (_235)
    {
        _354 = _335 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _335 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _335 + 12u;
        }
        _354 = frontier_phi_23_24_ladder;
    }
    uvec4 _362 = texelFetch(l_geomAttrib_0, int(((_310 + 4u) + (_180 ? (_354 + 4u) : _354)) >> 2u));
    uint _363 = _362.x;
    float _367 = float(int(uint(int(_363 << 16u) >> int(16u))));
    float _368 = float(int(uint(int(_363) >> int(16u))));
    bool _370 = _129.z == 0u;
    float _406;
    float _407;
    float _408;
    if (_370)
    {
        uint _373 = _170 * 3u;
        uvec3 _382 = uvec3(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_373 + 2u)).x);
        _406 = uintBitsToFloat(_382.x);
        _407 = uintBitsToFloat(_382.y);
        _408 = uintBitsToFloat(_382.z);
    }
    else
    {
        uint _390 = _170 * 2u;
        uvec2 _396 = uvec2(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x);
        uint _397 = _396.x;
        _406 = unpackHalf2x16(_397).x;
        _407 = unpackHalf2x16(_397 >> 16u).x;
        _408 = unpackHalf2x16(_396.y).x;
    }
    float _444;
    float _445;
    float _446;
    if (_370)
    {
        uint _411 = _172 * 3u;
        uvec3 _420 = uvec3(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_411 + 2u)).x);
        _444 = uintBitsToFloat(_420.x);
        _445 = uintBitsToFloat(_420.y);
        _446 = uintBitsToFloat(_420.z);
    }
    else
    {
        uint _428 = _172 * 2u;
        uvec2 _434 = uvec2(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x);
        uint _435 = _434.x;
        _444 = unpackHalf2x16(_435).x;
        _445 = unpackHalf2x16(_435 >> 16u).x;
        _446 = unpackHalf2x16(_434.y).x;
    }
    float _482;
    float _483;
    float _484;
    if (_370)
    {
        uint _449 = _173 * 3u;
        uvec3 _458 = uvec3(texelFetch(l_geomPositionBuffer, int(_449)).x, texelFetch(l_geomPositionBuffer, int(_449 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_449 + 2u)).x);
        _482 = uintBitsToFloat(_458.x);
        _483 = uintBitsToFloat(_458.y);
        _484 = uintBitsToFloat(_458.z);
    }
    else
    {
        uint _466 = _173 * 2u;
        uvec2 _472 = uvec2(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x);
        uint _473 = _472.x;
        _482 = unpackHalf2x16(_473).x;
        _483 = unpackHalf2x16(_473 >> 16u).x;
        _484 = unpackHalf2x16(_472.y).x;
    }
    float _487 = (1.0 - hit._m0.x) - hit._m0.y;
    float _521 = (_308 - _249) * 0.00048828125;
    float _523 = (_309 - _250) * 0.00048828125;
    float _526 = (_367 - _249) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _549 = _444 - _406;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _554 = fma(_551, gl_ObjectToWorldEXT[2u].x, fma(_550, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _549));
    float _557 = fma(_551, gl_ObjectToWorldEXT[2u].y, fma(_550, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _549));
    float _560 = fma(_551, gl_ObjectToWorldEXT[2u].z, fma(_550, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _549));
    float _561 = _482 - _406;
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _566 = fma(_563, gl_ObjectToWorldEXT[2u].x, fma(_562, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _561));
    float _569 = fma(_563, gl_ObjectToWorldEXT[2u].y, fma(_562, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _561));
    float _572 = fma(_563, gl_ObjectToWorldEXT[2u].z, fma(_562, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _561));
    float _573 = (((_308 * hit._m0.x) + (_249 * _487)) + (_367 * hit._m0.y)) * 0.00048828125;
    float _574 = (((_309 * hit._m0.x) + (_250 * _487)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _578 = (((float(_209) * _487) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _581 = (((float(_210) * _487) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _584 = (((float(_211) * _487) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = _578 * 0.0078740157186985015869140625;
    float _587 = _581 * 0.0078740157186985015869140625;
    float _588 = _584 * 0.0078740157186985015869140625;
    float _601 = ((((float(_221 & 255u) * _487) + (-127.0)) + (float(_283 & 255u) * hit._m0.x)) + (float(_342 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float((_221 >> 8u) & 255u) * _487) + (-127.0)) + (float((_283 >> 8u) & 255u) * hit._m0.x)) + (float((_342 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_221 >> 16u) & 255u) * _487) + (-127.0)) + (float((_283 >> 16u) & 255u) * hit._m0.x)) + (float((_342 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float(_221 >> 24u) * _487) + (-127.0)) + (float(_283 >> 24u) * hit._m0.x)) + (float(_342 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _614 = ((_602 * _588) - (_603 * _587)) * _604;
    float _615 = ((_603 * _585) - (_601 * _588)) * _604;
    float _616 = ((_601 * _587) - (_602 * _585)) * _604;
    float _620 = inversesqrt(dot(vec3(_614, _615, _616), vec3(_614, _615, _616)));
    float _641 = log2(0.0);
    bool _645 = exp2(_641 * cbMtdParam._m0[22u].w) < cbMtdParam._m0[23u].x;
    float _646;
    float _648;
    float _650;
    if (_645)
    {
        _646 = cbMtdParam._m0[19u].x;
        _648 = cbMtdParam._m0[19u].y;
        _650 = cbMtdParam._m0[19u].z;
    }
    else
    {
        _646 = cbMtdParam._m0[18u].x;
        _648 = cbMtdParam._m0[18u].y;
        _650 = cbMtdParam._m0[18u].z;
    }
    float _656;
    if (_645)
    {
        _656 = cbMtdParam._m0[20u].y;
    }
    else
    {
        _656 = cbMtdParam._m0[20u].z;
    }
    float _663;
    float _665;
    if (_645)
    {
        _663 = cbMtdParam._m0[28u].z;
        _665 = cbMtdParam._m0[28u].w;
    }
    else
    {
        _663 = cbMtdParam._m0[24u].x;
        _665 = cbMtdParam._m0[24u].y;
    }
    float _667 = _663 * _573;
    float _668 = _665 * _574;
    float _679 = floor(_656);
    vec4 _684 = textureLod(sampler2DArray(C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[8u].x * _667) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _668) + cbTextureTilingScale._m0[8u].w, _679), 0.0);
    uvec2 _706 = uvec2(textureSize(C_Enemy_DM_RT_PL_2_snp_0_Texture2D_0, int(0u)));
    bool _711 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _765;
    if (_711)
    {
        float _724 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _730 = (_572 * _557) - (_569 * _560);
        float _733 = (_566 * _560) - (_572 * _554);
        float _736 = (_569 * _554) - (_566 * _557);
        float _763 = ((log2((((float(_706.y) * 0.5) * float(_706.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_733 * _733) + (_736 * _736)) + (_730 * _730)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_724 * gl_WorldRayDirectionEXT.x, _724 * gl_WorldRayDirectionEXT.y, _724 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _765 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    }
    else
    {
        _765 = 0.0;
    }
    vec4 _768 = textureLod(sampler2D(C_Enemy_DM_RT_PL_2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _573) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _574) + cbTextureTilingScale._m0[0u].w), _765);
    float _776 = (((_646 * cbMtdParam._m0[20u].w) * _684.x) * cbMtdParam._m0[9u].x) * _768.x;
    float _780 = (((_648 * cbMtdParam._m0[20u].w) * _684.y) * cbMtdParam._m0[9u].y) * _768.y;
    float _784 = (((_650 * cbMtdParam._m0[20u].w) * _684.z) * cbMtdParam._m0[9u].z) * _768.z;
    uvec2 _796 = uvec2(textureSize(C_Enemy_DM_RT_PL_2_snp_0_Texture2D_1, int(0u)));
    float _800 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _801 = _800 * gl_WorldRayDirectionEXT.x;
    float _802 = _800 * gl_WorldRayDirectionEXT.y;
    float _803 = _800 * gl_WorldRayDirectionEXT.z;
    float _847;
    if (_711)
    {
        float _813 = (_572 * _557) - (_569 * _560);
        float _816 = (_566 * _560) - (_572 * _554);
        float _819 = (_569 * _554) - (_566 * _557);
        float _845 = ((log2((((float(_796.y) * 0.5) * float(_796.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_816 * _816) + (_819 * _819)) + (_813 * _813)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_801, _802, _803), vec3(_585, _587, _588))));
        _847 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    }
    else
    {
        _847 = 0.0;
    }
    vec4 _850 = textureLod(sampler2D(C_Enemy_DM_RT_PL_2_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _573) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _574) + cbTextureTilingScale._m0[1u].w), _847);
    float _854 = _850.z;
    float _66[2];
    float _67[2];
    _66[0u] = cbMtdParam._m0[27u].z;
    _67[0u] = cbMtdParam._m0[27u].w;
    _66[1u] = cbMtdParam._m0[28u].x;
    _67[1u] = cbMtdParam._m0[28u].y;
    float _885 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    uint _887 = uint(int(isnan(1.0) ? _885 : (isnan(_885) ? 1.0 : min(_885, 1.0))));
    float _893 = (textureLod(sampler2DArray(C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_2, SS_WrapLinear), vec3((cbTextureTilingScale._m0[10u].x * _667) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _668) + cbTextureTilingScale._m0[10u].w, _679), 0.0).x + _850.w) + _67[_887];
    vec4 _911 = textureLod(sampler2DArray(C_Enemy_DM_RT_PL_2_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[9u].x * _667) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _668) + cbTextureTilingScale._m0[9u].w, _679), 0.0);
    float _918 = (_911.x * 2.0) + (-1.0);
    float _919 = (_911.y * 2.0) + (-1.0);
    float _920 = dot(vec2(_918, _919), vec2(_918, _919));
    float _1431 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _925 = sqrt(1.0 - (isnan(1.0) ? _1431 : (isnan(_1431) ? 1.0 : min(_1431, 1.0))));
    float _935 = (cbMtdParam._m0[21u].x * (((_854 * 2.0) * (_911.z + _66[_887])) - _854)) + _854;
    float _939 = (cbMtdParam._m0[21u].y * ((_850.x * 2.0) + (-1.0))) + _918;
    float _940 = (cbMtdParam._m0[21u].y * ((_850.y * 2.0) + (-1.0))) + _919;
    float _943 = fma(_925, _585, fma(_940, _601, (_620 * _614) * _939));
    float _946 = fma(_925, _587, fma(_940, _602, (_620 * _615) * _939));
    float _949 = fma(_925, _588, fma(_940, _603, (_620 * _616) * _939));
    float _953 = inversesqrt(dot(vec3(_943, _946, _949), vec3(_943, _946, _949)));
    float _954 = _953 * _943;
    float _955 = _953 * _946;
    float _956 = _953 * _949;
    float _968 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _969 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _970 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _971 = (-0.0) - _801;
    float _973 = (-0.0) - _802;
    float _974 = (-0.0) - _803;
    float _980 = float(gl_LaunchIDEXT.x);
    float _981 = float(gl_LaunchIDEXT.y);
    float _984 = float(gl_LaunchSizeEXT.x);
    float _998 = fract(fract(sin(dot(vec2(_980 / _984, _981 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1011 = fract(fract(sin(dot(vec2((_980 + 128.0) / _984, (_981 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1012 = 1.0 - _893;
    float _1013 = _1012 * _776;
    float _1014 = _1012 * _780;
    float _1015 = _1012 * _784;
    float _1020 = _893 * (_776 + (-0.039999999105930328369140625));
    float _1021 = _893 * (_780 + (-0.039999999105930328369140625));
    float _1022 = _893 * (_784 + (-0.039999999105930328369140625));
    float _1023 = _1020 + 0.039999999105930328369140625;
    float _1025 = _1021 + 0.039999999105930328369140625;
    float _1026 = _1022 + 0.039999999105930328369140625;
    _71._m0 = 1u;
    uvec4 _1036 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1037 = _1036.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1037, _1036.w, _1037, vec3(_968, _969, _970), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    if (_71._m0 == 0u)
    {
        float _1057 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_954, _955, _956));
        float _1442 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1060 = isnan(1.0) ? _1442 : (isnan(_1442) ? 1.0 : min(_1442, 1.0));
        float _1079 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _935) * 0.949999988079071044921875);
        float _1080 = _1079 * _1079;
        float _1081 = g_sceneCB._m0[4u].x - _801;
        float _1082 = g_sceneCB._m0[4u].y - _802;
        float _1083 = g_sceneCB._m0[4u].z - _803;
        float _1087 = inversesqrt(dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083)));
        float _1088 = _1087 * _1081;
        float _1089 = _1087 * _1082;
        float _1090 = _1087 * _1083;
        float _1091 = dot(vec3(_954, _955, _956), vec3(g_sceneCB._m0[4u].xyz));
        float _1453 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1094 = isnan(1.0) ? _1453 : (isnan(_1453) ? 1.0 : min(_1453, 1.0));
        float _1095 = dot(vec3(_954, _955, _956), vec3(_971, _973, _974));
        float _1464 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1098 = isnan(1.0) ? _1464 : (isnan(_1464) ? 1.0 : min(_1464, 1.0));
        float _1099 = dot(vec3(_954, _955, _956), vec3(_1088, _1089, _1090));
        float _1475 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1102 = isnan(1.0) ? _1475 : (isnan(_1475) ? 1.0 : min(_1475, 1.0));
        float _1103 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1088, _1089, _1090));
        float _1486 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = _1080 * _1080;
        float _1111 = ((_1102 * _1102) * (_1107 + (-1.0))) + 1.0;
        float _1120 = exp2(log2(1.0 - (isnan(1.0) ? _1486 : (isnan(_1486) ? 1.0 : min(_1486, 1.0)))) * 5.0);
        float _1131 = 1.0 - _1080;
        float _1142 = (0.5 / (((_1098 * ((_1094 * _1131) + _1080)) + 9.9999999392252902907785028219223e-09) + (((_1098 * _1131) + _1080) * _1094))) * _1094;
        float _1497 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1144 = (isnan(1.0) ? _1497 : (isnan(_1497) ? 1.0 : min(_1497, 1.0))) * (_1107 / ((_1111 * _1111) * 3.141590118408203125));
        _1151 = ((_1013 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1060;
        _1152 = ((_1014 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1060;
        _1153 = ((_1015 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1060;
        _1154 = (((_1120 * (0.959999978542327880859375 - _1020)) + _1023) * g_sceneCB._m0[5u].x) * _1144;
        _1155 = (((_1120 * (0.959999978542327880859375 - _1021)) + _1025) * g_sceneCB._m0[5u].y) * _1144;
        _1156 = (((_1120 * (0.959999978542327880859375 - _1022)) + _1026) * g_sceneCB._m0[5u].z) * _1144;
    }
    else
    {
        _1151 = 0.0;
        _1152 = 0.0;
        _1153 = 0.0;
        _1154 = 0.0;
        _1155 = 0.0;
        _1156 = 0.0;
    }
    bool _1158 = abs(_955) < 0.89999997615814208984375;
    float _1160 = float(_1158);
    float _1161 = _1158 ? 0.0 : 1.0;
    float _1164 = (_1160 * _956) - (_1161 * _955);
    float _1165 = _1161 * _954;
    float _1167 = (-0.0) - (_954 * _1160);
    float _1171 = inversesqrt(dot(vec3(_1164, _1165, _1167), vec3(_1164, _1165, _1167)));
    float _1172 = _1164 * _1171;
    float _1173 = _1165 * _1171;
    float _1174 = _1171 * _1167;
    float _1177 = (_1173 * _956) - (_1174 * _955);
    float _1180 = (_1174 * _954) - (_1172 * _956);
    float _1183 = (_1172 * _955) - (_1173 * _954);
    float _1185;
    float _1193;
    float _1184 = 0.0;
    uint _1186 = 0u;
    float _1190;
    bool _1192;
    for (;;)
    {
        _1190 = (float(_1186) + _998) * 0.03125;
        _1192 = _1186 == 0u;
        float frontier_phi_49_pred;
        if (_1192)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1334;
            float _1335;
            uint _1337;
            _1334 = 0.0;
            _1335 = 0.5;
            _1337 = _1186;
            float _1194;
            for (;;)
            {
                _1194 = ((_1337 & 1u) != 0u) ? (_1335 + _1334) : _1334;
                uint _1338 = _1337 >> 1u;
                if (_1338 == 0u)
                {
                    break;
                }
                else
                {
                    _1334 = _1194;
                    _1335 *= 0.5;
                    _1337 = _1338;
                }
            }
            frontier_phi_49_pred = _1194;
        }
        _1193 = frontier_phi_49_pred;
        float _1195 = _1193 + _1011;
        float _1199 = sqrt(_1190);
        float _1200 = ((_1195 > 1.0) ? (_1195 + (-1.0)) : _1195) * 6.283185482025146484375;
        float _1203 = cos(_1200) * _1199;
        float _1205 = sin(_1200) * _1199;
        float _1207 = sqrt(1.0 - _1190);
        float _1220 = ((_1207 * _954) + (_1203 * _1177)) + (_1205 * _1172);
        float _1221 = ((_1207 * _955) + (_1203 * _1180)) + (_1205 * _1173);
        float _1222 = ((_1207 * _956) + (_1203 * _1183)) + (_1205 * _1174);
        _70._m0 = 1u;
        uvec4 _1226 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1227 = _1226.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1227, _1226.w, _1227, vec3(_968, _969, _970), 9.9999997473787516355514526367188e-05, vec3(_1220, _1221, _1222), 10000.0, 1);
        float _1233 = dot(vec3(_954, _955, _956), vec3(_1220, _1221, _1222));
        float _1508 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1236 = isnan(1.0) ? _1508 : (isnan(_1508) ? 1.0 : min(_1508, 1.0));
        _1185 = ((float(_70._m0 == 0u) * _1236) / (_1236 * 0.3183098733425140380859375)) + _1184;
        uint _1187 = _1186 + 1u;
        if (_1187 == 32u)
        {
            break;
        }
        else
        {
            _1184 = _1185;
            _1186 = _1187;
            continue;
        }
    }
    float _1244 = _1185 * 0.009947183541953563690185546875;
    float _1249 = dot(vec3(_801, _802, _803), vec3(_954, _955, _956)) * 2.0;
    vec4 _1263 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_801 - (_1249 * _954), _802 - (_1249 * _955), _803 - (_1249 * _956)), 4.0 - (_935 * 4.0));
    float _1268 = dot(vec3(_971, _973, _974), vec3(_954, _955, _956));
    float _1519 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
    float _1278 = exp2(log2(1.0 - (isnan(1.0) ? _1519 : (isnan(_1519) ? 1.0 : min(_1519, 1.0)))) * 5.0);
    vec4 _1290 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_954, _955, _956), 0.0);
    float _1301 = (_1154 + _1151) + (((_1290.x * _1013) + (((_1278 * (0.959999978542327880859375 - _1020)) + _1023) * _1263.x)) * _1244);
    float _1305 = (_1155 + _1152) + (((_1290.y * _1014) + (((_1278 * (0.959999978542327880859375 - _1021)) + _1025) * _1263.y)) * _1244);
    float _1309 = (_1156 + _1153) + (((_1290.z * _1015) + (((_1278 * (0.959999978542327880859375 - _1022)) + _1026) * _1263.z)) * _1244);
    float _1530 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
    float _1541 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
    float _1552 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
    bool _1317 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1328;
    _1328.x = _1317 ? ((_578 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1530 : (isnan(_1530) ? 1.0 : min(_1530, 1.0)));
    _1328.y = _1317 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1541 : (isnan(_1541) ? 1.0 : min(_1541, 1.0)));
    _1328.z = _1317 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1552 : (isnan(_1552) ? 1.0 : min(_1552, 1.0)));
    payload._m0 = _1328;
}


