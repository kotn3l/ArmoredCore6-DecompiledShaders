#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2227;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _237 = _182 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uint _242 = _183 ? (_238 + 4u) : _238;
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + _242) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uvec4 _256 = texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _242) >> 2u));
    uint _257 = _256.x;
    float _261 = float(int(uint(int(_257 << 16u) >> int(16u))));
    float _262 = float(int(uint(int(_257) >> int(16u))));
    uint _263 = _181 * _175;
    uint _264 = _263 + 12u;
    uint _285;
    uint _286;
    uint _287;
    uint _288;
    if (_186)
    {
        uvec4 _266 = texelFetch(l_geomAttrib_0, int(_264 >> 2u));
        uint _267 = _266.x;
        _285 = _267 & 255u;
        _286 = (_267 >> 8u) & 255u;
        _287 = (_267 >> 16u) & 255u;
        _288 = 16u;
    }
    else
    {
        uint _273 = _264 >> 2u;
        uvec2 _279 = uvec2(texelFetch(l_geomAttrib_0, int(_273)).x, texelFetch(l_geomAttrib_0, int(_273 + 1u)).x);
        uint _280 = _279.x;
        _285 = _280 & 65535u;
        _286 = _280 >> 16u;
        _287 = _279.y & 65535u;
        _288 = 20u;
    }
    uvec4 _294 = texelFetch(l_geomAttrib_0, int((_288 + _263) >> 2u));
    uint _295 = _294.x;
    uint _307;
    if (_237)
    {
        _307 = _288 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _288 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _288 + 12u;
        }
        _307 = frontier_phi_16_17_ladder;
    }
    uint _311 = _183 ? (_307 + 4u) : _307;
    uvec4 _315 = texelFetch(l_geomAttrib_0, int(((_263 + 4u) + _311) >> 2u));
    uint _316 = _315.x;
    float _320 = float(int(uint(int(_316 << 16u) >> int(16u))));
    float _321 = float(int(uint(int(_316) >> int(16u))));
    uvec4 _325 = texelFetch(l_geomAttrib_0, int(((_263 + 12u) + _311) >> 2u));
    uint _326 = _325.x;
    float _330 = float(int(uint(int(_326 << 16u) >> int(16u))));
    float _331 = float(int(uint(int(_326) >> int(16u))));
    uint _332 = _181 * _176;
    uint _333 = _332 + 12u;
    uint _354;
    uint _355;
    uint _356;
    uint _357;
    if (_186)
    {
        uvec4 _335 = texelFetch(l_geomAttrib_0, int(_333 >> 2u));
        uint _336 = _335.x;
        _354 = _336 & 255u;
        _355 = (_336 >> 8u) & 255u;
        _356 = (_336 >> 16u) & 255u;
        _357 = 16u;
    }
    else
    {
        uint _342 = _333 >> 2u;
        uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
        uint _349 = _348.x;
        _354 = _349 & 65535u;
        _355 = _349 >> 16u;
        _356 = _348.y & 65535u;
        _357 = 20u;
    }
    uvec4 _363 = texelFetch(l_geomAttrib_0, int((_357 + _332) >> 2u));
    uint _364 = _363.x;
    uint _376;
    if (_237)
    {
        _376 = _357 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _357 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _357 + 12u;
        }
        _376 = frontier_phi_23_24_ladder;
    }
    uint _380 = _183 ? (_376 + 4u) : _376;
    uvec4 _384 = texelFetch(l_geomAttrib_0, int(((_332 + 4u) + _380) >> 2u));
    uint _385 = _384.x;
    float _389 = float(int(uint(int(_385 << 16u) >> int(16u))));
    float _390 = float(int(uint(int(_385) >> int(16u))));
    uvec4 _394 = texelFetch(l_geomAttrib_0, int(((_332 + 12u) + _380) >> 2u));
    uint _395 = _394.x;
    float _399 = float(int(uint(int(_395 << 16u) >> int(16u))));
    float _400 = float(int(uint(int(_395) >> int(16u))));
    bool _402 = _132.z == 0u;
    float _438;
    float _439;
    float _440;
    if (_402)
    {
        uint _405 = _173 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _173 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _476;
    float _477;
    float _478;
    if (_402)
    {
        uint _443 = _175 * 3u;
        uvec3 _452 = uvec3(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_443 + 2u)).x);
        _476 = uintBitsToFloat(_452.x);
        _477 = uintBitsToFloat(_452.y);
        _478 = uintBitsToFloat(_452.z);
    }
    else
    {
        uint _460 = _175 * 2u;
        uvec2 _466 = uvec2(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x);
        uint _467 = _466.x;
        _476 = unpackHalf2x16(_467).x;
        _477 = unpackHalf2x16(_467 >> 16u).x;
        _478 = unpackHalf2x16(_466.y).x;
    }
    float _514;
    float _515;
    float _516;
    if (_402)
    {
        uint _481 = _176 * 3u;
        uvec3 _490 = uvec3(texelFetch(l_geomPositionBuffer, int(_481)).x, texelFetch(l_geomPositionBuffer, int(_481 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_481 + 2u)).x);
        _514 = uintBitsToFloat(_490.x);
        _515 = uintBitsToFloat(_490.y);
        _516 = uintBitsToFloat(_490.z);
    }
    else
    {
        uint _498 = _176 * 2u;
        uvec2 _504 = uvec2(texelFetch(l_geomPositionBuffer, int(_498)).x, texelFetch(l_geomPositionBuffer, int(_498 + 1u)).x);
        uint _505 = _504.x;
        _514 = unpackHalf2x16(_505).x;
        _515 = unpackHalf2x16(_505 >> 16u).x;
        _516 = unpackHalf2x16(_504.y).x;
    }
    float _519 = (1.0 - hit._m0.x) - hit._m0.y;
    float _563 = (_320 - _251) * 0.00048828125;
    float _565 = (_321 - _252) * 0.00048828125;
    float _568 = (_389 - _251) * 0.00048828125;
    float _569 = (_390 - _252) * 0.00048828125;
    float _595 = _476 - _438;
    float _596 = _477 - _439;
    float _597 = _478 - _440;
    float _600 = fma(_597, gl_ObjectToWorldEXT[2u].x, fma(_596, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _595));
    float _603 = fma(_597, gl_ObjectToWorldEXT[2u].y, fma(_596, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _595));
    float _606 = fma(_597, gl_ObjectToWorldEXT[2u].z, fma(_596, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _595));
    float _607 = _514 - _438;
    float _608 = _515 - _439;
    float _609 = _516 - _440;
    float _612 = fma(_609, gl_ObjectToWorldEXT[2u].x, fma(_608, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _607));
    float _615 = fma(_609, gl_ObjectToWorldEXT[2u].y, fma(_608, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _607));
    float _618 = fma(_609, gl_ObjectToWorldEXT[2u].z, fma(_608, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _607));
    float _619 = (((_320 * hit._m0.x) + (_251 * _519)) + (_389 * hit._m0.y)) * 0.00048828125;
    float _620 = (((_321 * hit._m0.x) + (_252 * _519)) + (_390 * hit._m0.y)) * 0.00048828125;
    float _626 = (((float(_212) * _519) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _629 = (((float(_213) * _519) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _632 = (((float(_214) * _519) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _633 = _626 * 0.0078740157186985015869140625;
    float _635 = _629 * 0.0078740157186985015869140625;
    float _636 = _632 * 0.0078740157186985015869140625;
    float _649 = ((((float(_224 & 255u) * _519) + (-127.0)) + (float(_295 & 255u) * hit._m0.x)) + (float(_364 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _650 = ((((float((_224 >> 8u) & 255u) * _519) + (-127.0)) + (float((_295 >> 8u) & 255u) * hit._m0.x)) + (float((_364 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _651 = ((((float((_224 >> 16u) & 255u) * _519) + (-127.0)) + (float((_295 >> 16u) & 255u) * hit._m0.x)) + (float((_364 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _652 = ((((float(_224 >> 24u) * _519) + (-127.0)) + (float(_295 >> 24u) * hit._m0.x)) + (float(_364 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _662 = ((_650 * _636) - (_651 * _635)) * _652;
    float _663 = ((_651 * _633) - (_649 * _636)) * _652;
    float _664 = ((_649 * _635) - (_650 * _633)) * _652;
    float _668 = inversesqrt(dot(vec3(_662, _663, _664), vec3(_662, _663, _664)));
    uvec2 _684 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7, int(0u)));
    bool _689 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _742;
    if (_689)
    {
        float _700 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _706 = (_618 * _603) - (_615 * _606);
        float _709 = (_612 * _606) - (_618 * _600);
        float _712 = (_615 * _600) - (_612 * _603);
        float _739 = ((log2((((float(_684.y) * 0.5) * float(_684.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_709 * _709) + (_712 * _712)) + (_706 * _706)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_700 * gl_WorldRayDirectionEXT.x, _700 * gl_WorldRayDirectionEXT.y, _700 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _742 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    }
    else
    {
        _742 = 0.0;
    }
    vec4 _746 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _619) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _620) + cbTextureTilingScale._m0[13u].w), _742);
    float _755 = log2(0.0);
    float _757 = exp2(_755 * cbMtdParam._m0[21u].y);
    float _758 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _759 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
    uvec2 _772 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _823;
    if (_689)
    {
        float _783 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _789 = (_618 * _603) - (_615 * _606);
        float _792 = (_612 * _606) - (_618 * _600);
        float _795 = (_615 * _600) - (_612 * _603);
        float _821 = ((log2((((float(_772.y) * 0.5) * float(_772.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_792 * _792) + (_795 * _795)) + (_789 * _789)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_783 * gl_WorldRayDirectionEXT.x, _783 * gl_WorldRayDirectionEXT.y, _783 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _823 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    }
    else
    {
        _823 = 0.0;
    }
    vec4 _826 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _619) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _620) + cbTextureTilingScale._m0[0u].w), _823);
    float _830 = _826.z;
    float _831 = _826.w;
    float _838 = exp2(log2(_830 * cbMtdParam._m0[21u].w) * cbMtdParam._m0[20u].y);
    float _839 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _840 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
    uvec2 _853 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _904;
    if (_689)
    {
        float _864 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _870 = (_618 * _603) - (_615 * _606);
        float _873 = (_612 * _606) - (_618 * _600);
        float _876 = (_615 * _600) - (_612 * _603);
        float _902 = ((log2((((float(_853.y) * 0.5) * float(_853.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_873 * _873) + (_876 * _876)) + (_870 * _870)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_864 * gl_WorldRayDirectionEXT.x, _864 * gl_WorldRayDirectionEXT.y, _864 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _904 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    }
    else
    {
        _904 = 0.0;
    }
    vec4 _906 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _619) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _620) + cbTextureTilingScale._m0[9u].w), _904);
    uvec2 _931 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _982;
    if (_689)
    {
        float _942 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _948 = (_618 * _603) - (_615 * _606);
        float _951 = (_612 * _606) - (_618 * _600);
        float _954 = (_615 * _600) - (_612 * _603);
        float _980 = ((log2((((float(_931.y) * 0.5) * float(_931.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_951 * _951) + (_954 * _954)) + (_948 * _948)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_942 * gl_WorldRayDirectionEXT.x, _942 * gl_WorldRayDirectionEXT.y, _942 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _982 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    }
    else
    {
        _982 = 0.0;
    }
    vec4 _984 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _619) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _620) + cbTextureTilingScale._m0[1u].w), _982);
    float _994 = cbMtdParam._m0[9u].x * _984.x;
    float _995 = cbMtdParam._m0[9u].y * _984.y;
    float _996 = cbMtdParam._m0[9u].z * _984.z;
    float _1003 = (((cbMtdParam._m0[10u].x * _906.x) - _994) * _840) + _994;
    float _1004 = (((cbMtdParam._m0[10u].y * _906.y) - _995) * _840) + _995;
    float _1005 = (((cbMtdParam._m0[10u].z * _906.z) - _996) * _840) + _996;
    float _1012 = exp2(log2(_831) * cbMtdParam._m0[22u].y);
    uvec2 _1024 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    float _1075;
    if (_689)
    {
        float _1035 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1041 = (_618 * _603) - (_615 * _606);
        float _1044 = (_612 * _606) - (_618 * _600);
        float _1047 = (_615 * _600) - (_612 * _603);
        float _1073 = ((log2((((float(_1024.y) * 0.5) * float(_1024.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1044 * _1044) + (_1047 * _1047)) + (_1041 * _1041)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1035 * gl_WorldRayDirectionEXT.x, _1035 * gl_WorldRayDirectionEXT.y, _1035 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1075 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    }
    else
    {
        _1075 = 0.0;
    }
    vec4 _1077 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _619) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _620) + cbTextureTilingScale._m0[8u].w), _1075);
    float _1096 = (((cbMtdParam._m0[12u].x * _1077.x) - _1003) * _1012) + _1003;
    float _1097 = (((cbMtdParam._m0[12u].y * _1077.y) - _1004) * _1012) + _1004;
    float _1098 = (((cbMtdParam._m0[12u].z * _1077.z) - _1005) * _1012) + _1005;
    uvec2 _1110 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _1161;
    if (_689)
    {
        float _1121 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1127 = (_618 * _603) - (_615 * _606);
        float _1130 = (_612 * _606) - (_618 * _600);
        float _1133 = (_615 * _600) - (_612 * _603);
        float _1159 = ((log2((((float(_1110.y) * 0.5) * float(_1110.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1130 * _1130) + (_1133 * _1133)) + (_1127 * _1127)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1121 * gl_WorldRayDirectionEXT.x, _1121 * gl_WorldRayDirectionEXT.y, _1121 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1161 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    }
    else
    {
        _1161 = 0.0;
    }
    vec4 _1163 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _619) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _620) + cbTextureTilingScale._m0[10u].w), _1161);
    float _1187 = (_746.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _1163.x) - _1096) * _759) + _1096);
    float _1189 = (_746.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _1163.y) - _1097) * _759) + _1097);
    float _1191 = (_746.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _1163.z) - _1098) * _759) + _1098);
    float _1196 = exp2(log2(1.0 - _831) * 0.00999999977648258209228515625);
    uvec2 _1208 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11, int(0u)));
    float _1259;
    if (_689)
    {
        float _1219 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1225 = (_618 * _603) - (_615 * _606);
        float _1228 = (_612 * _606) - (_618 * _600);
        float _1231 = (_615 * _600) - (_612 * _603);
        float _1257 = ((log2((((float(_1208.y) * 0.5) * float(_1208.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1228 * _1228) + (_1231 * _1231)) + (_1225 * _1225)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1219 * gl_WorldRayDirectionEXT.x, _1219 * gl_WorldRayDirectionEXT.y, _1219 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1259 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    }
    else
    {
        _1259 = 0.0;
    }
    float _1268 = ((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _619) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _620) + cbTextureTilingScale._m0[2u].w), _1259).x - cbMtdParam._m0[22u].w) * _1196) + cbMtdParam._m0[22u].w;
    uvec2 _1280 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12, int(0u)));
    float _1331;
    if (_689)
    {
        float _1291 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1297 = (_618 * _603) - (_615 * _606);
        float _1300 = (_612 * _606) - (_618 * _600);
        float _1303 = (_615 * _600) - (_612 * _603);
        float _1329 = ((log2((((float(_1280.y) * 0.5) * float(_1280.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1300 * _1300) + (_1303 * _1303)) + (_1297 * _1297)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1291 * gl_WorldRayDirectionEXT.x, _1291 * gl_WorldRayDirectionEXT.y, _1291 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1331 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
    }
    else
    {
        _1331 = 0.0;
    }
    float _1340 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _619) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _620) + cbTextureTilingScale._m0[3u].w), _1331).x - _1268) + cbMtdParam._m0[21u].z) * _1012) + _1268;
    uvec2 _1352 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13, int(0u)));
    float _1403;
    if (_689)
    {
        float _1363 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1369 = (_618 * _603) - (_615 * _606);
        float _1372 = (_612 * _606) - (_618 * _600);
        float _1375 = (_615 * _600) - (_612 * _603);
        float _1401 = ((log2((((float(_1352.y) * 0.5) * float(_1352.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1372 * _1372) + (_1375 * _1375)) + (_1369 * _1369)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1363 * gl_WorldRayDirectionEXT.x, _1363 * gl_WorldRayDirectionEXT.y, _1363 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1403 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
    }
    else
    {
        _1403 = 0.0;
    }
    float _1415 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _619) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _620) + cbTextureTilingScale._m0[4u].w), _1403).x - _1340) + cbMtdParam._m0[23u].w) * _759) + _1340;
    uvec2 _1428 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5, int(0u)));
    float _1479;
    if (_689)
    {
        float _1439 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1445 = (_618 * _603) - (_615 * _606);
        float _1448 = (_612 * _606) - (_618 * _600);
        float _1451 = (_615 * _600) - (_612 * _603);
        float _1477 = ((log2((((float(_1428.y) * 0.5) * float(_1428.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1448 * _1448) + (_1451 * _1451)) + (_1445 * _1445)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1439 * gl_WorldRayDirectionEXT.x, _1439 * gl_WorldRayDirectionEXT.y, _1439 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1479 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
    }
    else
    {
        _1479 = 0.0;
    }
    vec4 _1481 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _619) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _620) + cbTextureTilingScale._m0[11u].w), _1479);
    uvec2 _1499 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _1550;
    if (_689)
    {
        float _1510 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1516 = (_618 * _603) - (_615 * _606);
        float _1519 = (_612 * _606) - (_618 * _600);
        float _1522 = (_615 * _600) - (_612 * _603);
        float _1548 = ((log2((((float(_1499.y) * 0.5) * float(_1499.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1519 * _1519) + (_1522 * _1522)) + (_1516 * _1516)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1510 * gl_WorldRayDirectionEXT.x, _1510 * gl_WorldRayDirectionEXT.y, _1510 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1550 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    }
    else
    {
        _1550 = 0.0;
    }
    vec4 _1552 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _619) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _620) + cbTextureTilingScale._m0[12u].w), _1550);
    float _1554 = _1552.x;
    float _1555 = _1552.y;
    float _1558 = cbMtdParam._m0[20u].x + _1552.z;
    float _1561 = (((cbMtdParam._m0[21u].x + _1481.z) - _1558) * _1196) + _1558;
    uvec2 _1574 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8, int(0u)));
    float _1625;
    if (_689)
    {
        float _1585 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1591 = (_618 * _603) - (_615 * _606);
        float _1594 = (_612 * _606) - (_618 * _600);
        float _1597 = (_615 * _600) - (_612 * _603);
        float _1623 = ((log2((((float(_1574.y) * 0.5) * float(_1574.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1594 * _1594) + (_1597 * _1597)) + (_1591 * _1591)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1585 * gl_WorldRayDirectionEXT.x, _1585 * gl_WorldRayDirectionEXT.y, _1585 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1625 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
    }
    else
    {
        _1625 = 0.0;
    }
    vec4 _1627 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _619) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _620) + cbTextureTilingScale._m0[14u].w), _1625);
    float _1638 = (_830 * 2.0) * ((((_1627.z - _1561) + cbMtdParam._m0[23u].y) * _1012) + _1561);
    uvec2 _1651 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9, int(0u)));
    float _1702;
    if (_689)
    {
        float _1662 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1668 = (_618 * _603) - (_615 * _606);
        float _1671 = (_612 * _606) - (_618 * _600);
        float _1674 = (_615 * _600) - (_612 * _603);
        float _1700 = ((log2((((float(_1651.y) * 0.5) * float(_1651.x)) * abs((_569 * _563) - (_568 * _565))) / (sqrt(((_1671 * _1671) + (_1674 * _1674)) + (_1668 * _1668)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1662 * gl_WorldRayDirectionEXT.x, _1662 * gl_WorldRayDirectionEXT.y, _1662 * gl_WorldRayDirectionEXT.z), vec3(_633, _635, _636))));
        _1702 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
    }
    else
    {
        _1702 = 0.0;
    }
    vec4 _1704 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _619) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _620) + cbTextureTilingScale._m0[15u].w), _1702);
    float _1713 = (((_1704.z - _1638) + cbMtdParam._m0[22u].x) * _759) + _1638;
    uvec2 _1731 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16, int(0u)));
    float _1735 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1736 = _1735 * gl_WorldRayDirectionEXT.x;
    float _1737 = _1735 * gl_WorldRayDirectionEXT.y;
    float _1738 = _1735 * gl_WorldRayDirectionEXT.z;
    float _1784;
    if (_689)
    {
        float _1748 = (_618 * _603) - (_615 * _606);
        float _1751 = (_612 * _606) - (_618 * _600);
        float _1754 = (_615 * _600) - (_612 * _603);
        float _1782 = ((log2((((float(_1731.y) * 0.5) * float(_1731.x)) * abs((((_400 - _262) * (_330 - _261)) - ((_399 - _261) * (_331 - _262))) * 2.384185791015625e-07)) / (sqrt(((_1751 * _1751) + (_1754 * _1754)) + (_1748 * _1748)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1736, _1737, _1738), vec3(_633, _635, _636))));
        _1784 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
    }
    else
    {
        _1784 = 0.0;
    }
    vec4 _1786 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16, SS_DiffuseMap), vec2((((((_330 * hit._m0.x) + (_261 * _519)) + (_399 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((((_331 * hit._m0.x) + (_262 * _519)) + (_400 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1784);
    float _1807 = ((_1481.x - _1554) * _1196) + _1554;
    float _1808 = ((_1481.y - _1555) * _1196) + _1555;
    float _1813 = ((_1627.x - _1807) * _1012) + _1807;
    float _1814 = ((_1627.y - _1808) * _1012) + _1808;
    float _1823 = ((((_1704.x - _1813) * _759) + _1813) * 2.0) + (-1.0);
    float _1824 = ((((_1704.y - _1814) * _759) + _1814) * 2.0) + (-1.0);
    float _1825 = dot(vec2(_1823, _1824), vec2(_1823, _1824));
    float _2417 = isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0));
    float _1830 = sqrt(1.0 - (isnan(1.0) ? _2417 : (isnan(_2417) ? 1.0 : min(_2417, 1.0))));
    float _1833 = (cbMtdParam._m0[23u].x * ((_826.x * 2.0) + (-1.0))) + _1823;
    float _1834 = (cbMtdParam._m0[23u].x * ((_826.y * 2.0) + (-1.0))) + _1824;
    float _1837 = fma(_1830, _633, fma(_1834, _649, (_668 * _662) * _1833));
    float _1840 = fma(_1830, _635, fma(_1834, _650, (_668 * _663) * _1833));
    float _1843 = fma(_1830, _636, fma(_1834, _651, (_668 * _664) * _1833));
    float _1847 = inversesqrt(dot(vec3(_1837, _1840, _1843), vec3(_1837, _1840, _1843)));
    float _1848 = _1847 * _1837;
    float _1849 = _1847 * _1840;
    float _1850 = _1847 * _1843;
    float _1862 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1863 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1864 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1865 = (-0.0) - _1736;
    float _1867 = (-0.0) - _1737;
    float _1868 = (-0.0) - _1738;
    float _1874 = float(gl_LaunchIDEXT.x);
    float _1875 = float(gl_LaunchIDEXT.y);
    float _1878 = float(gl_LaunchSizeEXT.x);
    float _1892 = fract(fract(sin(dot(vec2(_1874 / _1878, _1875 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1905 = fract(fract(sin(dot(vec2((_1874 + 128.0) / _1878, (_1875 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1906 = 1.0 - _1415;
    float _1907 = _1906 * _1187;
    float _1908 = _1906 * _1189;
    float _1909 = _1906 * _1191;
    float _1914 = _1415 * (_1187 + (-0.039999999105930328369140625));
    float _1915 = _1415 * (_1189 + (-0.039999999105930328369140625));
    float _1916 = _1415 * (_1191 + (-0.039999999105930328369140625));
    float _1917 = _1914 + 0.039999999105930328369140625;
    float _1919 = _1915 + 0.039999999105930328369140625;
    float _1920 = _1916 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1930 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1931 = _1930.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1931, _1930.w, _1931, vec3(_1862, _1863, _1864), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2046;
    float _2047;
    float _2048;
    float _2049;
    float _2050;
    float _2051;
    if (_74._m0 == 0u)
    {
        float _1952 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1848, _1849, _1850));
        float _2428 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1955 = isnan(1.0) ? _2428 : (isnan(_2428) ? 1.0 : min(_2428, 1.0));
        float _1974 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1713) * 0.949999988079071044921875);
        float _1975 = _1974 * _1974;
        float _1976 = g_sceneCB._m0[4u].x - _1736;
        float _1977 = g_sceneCB._m0[4u].y - _1737;
        float _1978 = g_sceneCB._m0[4u].z - _1738;
        float _1982 = inversesqrt(dot(vec3(_1976, _1977, _1978), vec3(_1976, _1977, _1978)));
        float _1983 = _1982 * _1976;
        float _1984 = _1982 * _1977;
        float _1985 = _1982 * _1978;
        float _1986 = dot(vec3(_1848, _1849, _1850), vec3(g_sceneCB._m0[4u].xyz));
        float _2439 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
        float _1989 = isnan(1.0) ? _2439 : (isnan(_2439) ? 1.0 : min(_2439, 1.0));
        float _1990 = dot(vec3(_1848, _1849, _1850), vec3(_1865, _1867, _1868));
        float _2450 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1993 = isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0));
        float _1994 = dot(vec3(_1848, _1849, _1850), vec3(_1983, _1984, _1985));
        float _2461 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _1997 = isnan(1.0) ? _2461 : (isnan(_2461) ? 1.0 : min(_2461, 1.0));
        float _1998 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1983, _1984, _1985));
        float _2472 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2002 = _1975 * _1975;
        float _2006 = ((_1997 * _1997) * (_2002 + (-1.0))) + 1.0;
        float _2015 = exp2(log2(1.0 - (isnan(1.0) ? _2472 : (isnan(_2472) ? 1.0 : min(_2472, 1.0)))) * 5.0);
        float _2026 = 1.0 - _1975;
        float _2037 = (0.5 / (((_1993 * ((_1989 * _2026) + _1975)) + 9.9999999392252902907785028219223e-09) + (((_1993 * _2026) + _1975) * _1989))) * _1989;
        float _2483 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
        float _2039 = (isnan(1.0) ? _2483 : (isnan(_2483) ? 1.0 : min(_2483, 1.0))) * (_2002 / ((_2006 * _2006) * 3.141590118408203125));
        _2046 = ((_1907 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1955;
        _2047 = ((_1908 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1955;
        _2048 = ((_1909 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1955;
        _2049 = (((_2015 * (0.959999978542327880859375 - _1914)) + _1917) * g_sceneCB._m0[5u].x) * _2039;
        _2050 = (((_2015 * (0.959999978542327880859375 - _1915)) + _1919) * g_sceneCB._m0[5u].y) * _2039;
        _2051 = (((_2015 * (0.959999978542327880859375 - _1916)) + _1920) * g_sceneCB._m0[5u].z) * _2039;
    }
    else
    {
        _2046 = 0.0;
        _2047 = 0.0;
        _2048 = 0.0;
        _2049 = 0.0;
        _2050 = 0.0;
        _2051 = 0.0;
    }
    bool _2053 = abs(_1849) < 0.89999997615814208984375;
    float _2055 = float(_2053);
    float _2056 = _2053 ? 0.0 : 1.0;
    float _2059 = (_2055 * _1850) - (_2056 * _1849);
    float _2060 = _2056 * _1848;
    float _2062 = (-0.0) - (_1848 * _2055);
    float _2066 = inversesqrt(dot(vec3(_2059, _2060, _2062), vec3(_2059, _2060, _2062)));
    float _2067 = _2059 * _2066;
    float _2068 = _2060 * _2066;
    float _2069 = _2066 * _2062;
    float _2072 = (_2068 * _1850) - (_2069 * _1849);
    float _2075 = (_2069 * _1848) - (_2067 * _1850);
    float _2078 = (_2067 * _1849) - (_2068 * _1848);
    float _2080;
    float _2088;
    float _2079 = 0.0;
    uint _2081 = 0u;
    float _2085;
    bool _2087;
    for (;;)
    {
        _2085 = (float(_2081) + _1892) * 0.03125;
        _2087 = _2081 == 0u;
        float frontier_phi_67_pred;
        if (_2087)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2232;
            float _2233;
            uint _2235;
            _2232 = 0.0;
            _2233 = 0.5;
            _2235 = _2081;
            float _2089;
            for (;;)
            {
                _2089 = ((_2235 & 1u) != 0u) ? (_2233 + _2232) : _2232;
                uint _2236 = _2235 >> 1u;
                if (_2236 == 0u)
                {
                    break;
                }
                else
                {
                    _2232 = _2089;
                    _2233 *= 0.5;
                    _2235 = _2236;
                }
            }
            frontier_phi_67_pred = _2089;
        }
        _2088 = frontier_phi_67_pred;
        float _2090 = _2088 + _1905;
        float _2094 = sqrt(_2085);
        float _2095 = ((_2090 > 1.0) ? (_2090 + (-1.0)) : _2090) * 6.283185482025146484375;
        float _2098 = cos(_2095) * _2094;
        float _2100 = sin(_2095) * _2094;
        float _2102 = sqrt(1.0 - _2085);
        float _2115 = ((_2102 * _1848) + (_2098 * _2072)) + (_2100 * _2067);
        float _2116 = ((_2102 * _1849) + (_2098 * _2075)) + (_2100 * _2068);
        float _2117 = ((_2102 * _1850) + (_2098 * _2078)) + (_2100 * _2069);
        _73._m0 = 1u;
        uvec4 _2121 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2122 = _2121.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2122, _2121.w, _2122, vec3(_1862, _1863, _1864), 9.9999997473787516355514526367188e-05, vec3(_2115, _2116, _2117), 10000.0, 1);
        float _2128 = dot(vec3(_1848, _1849, _1850), vec3(_2115, _2116, _2117));
        float _2494 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
        float _2131 = isnan(1.0) ? _2494 : (isnan(_2494) ? 1.0 : min(_2494, 1.0));
        _2080 = ((float(_73._m0 == 0u) * _2131) / (_2131 * 0.3183098733425140380859375)) + _2079;
        uint _2082 = _2081 + 1u;
        if (_2082 == 32u)
        {
            break;
        }
        else
        {
            _2079 = _2080;
            _2081 = _2082;
            continue;
        }
    }
    float _2139 = _2080 * 0.009947183541953563690185546875;
    float _2144 = dot(vec3(_1736, _1737, _1738), vec3(_1848, _1849, _1850)) * 2.0;
    vec4 _2158 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1736 - (_2144 * _1848), _1737 - (_2144 * _1849), _1738 - (_2144 * _1850)), 4.0 - (_1713 * 4.0));
    float _2163 = dot(vec3(_1865, _1867, _1868), vec3(_1848, _1849, _1850));
    float _2505 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    float _2173 = exp2(log2(1.0 - (isnan(1.0) ? _2505 : (isnan(_2505) ? 1.0 : min(_2505, 1.0)))) * 5.0);
    vec4 _2185 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1848, _1849, _1850), 0.0);
    float _2197 = ((_2046 + ((cbMtdParam._m0[11u].x * cbMtdParam._m0[22u].z) * _1786.x)) + _2049) + (((_2185.x * _1907) + (((_2173 * (0.959999978542327880859375 - _1914)) + _1917) * _2158.x)) * _2139);
    float _2202 = ((_2047 + ((cbMtdParam._m0[11u].y * cbMtdParam._m0[22u].z) * _1786.y)) + _2050) + (((_2185.y * _1908) + (((_2173 * (0.959999978542327880859375 - _1915)) + _1919) * _2158.y)) * _2139);
    float _2207 = ((_2048 + ((cbMtdParam._m0[11u].z * cbMtdParam._m0[22u].z) * _1786.z)) + _2051) + (((_2185.z * _1909) + (((_2173 * (0.959999978542327880859375 - _1916)) + _1920) * _2158.z)) * _2139);
    float _2516 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _2527 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _2538 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
    bool _2215 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2226;
    _2226.x = _2215 ? ((_626 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2516 : (isnan(_2516) ? 1.0 : min(_2516, 1.0)));
    _2226.y = _2215 ? ((_629 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2527 : (isnan(_2527) ? 1.0 : min(_2527, 1.0)));
    _2226.z = _2215 ? ((_632 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2538 : (isnan(_2538) ? 1.0 : min(_2538, 1.0)));
    payload._m0 = _2226;
}


