#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _51
{
    vec3 _m0;
};

struct _55
{
    vec2 _m0;
};

struct _58
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_V_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_V_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _51 payload;
hitAttributeEXT _55 hit;
layout(location = 1) rayPayloadEXT _58 _60;
layout(location = 2) rayPayloadEXT _58 _61;

vec3 _1166;

void main()
{
    float _69 = float(gl_LaunchSizeEXT.y);
    float _99 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _108 = sqrt(((_100 * _100) + (_99 * _99)) + (_101 * _101)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _69)))));
    uvec4 _119 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _120 = _119.y;
    uint _160;
    uint _162;
    uint _163;
    if (_119.x == 0u)
    {
        uint _128 = (_120 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _137 = uvec3(texelFetch(l_geomIndexBuffer, int(_128)).x, texelFetch(l_geomIndexBuffer, int(_128 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_128 + 2u)).x);
        _160 = _137.x;
        _162 = _137.y;
        _163 = _137.z;
    }
    else
    {
        uint _141 = uint(gl_PrimitiveID) * 6u;
        uint _143 = _141 & 4294967292u;
        uint _146 = (_120 + _143) >> 2u;
        uvec2 _153 = uvec2(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x);
        uint _154 = _153.x;
        uint _155 = _153.y;
        uint _157 = _154 >> 16u;
        uint _158 = _155 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_143 == _141)
        {
            frontier_phi_3_2_ladder = _158;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _154 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _155 >> 16u;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _157;
        }
        _160 = frontier_phi_3_2_ladder_2;
        _162 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder;
    }
    uvec4 _167 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _168 = _167.x;
    uint _169 = _167.z;
    bool _170 = _169 != 0u;
    bool _172 = _119.w == 0u;
    bool _173 = _170 || _172;
    uint _174 = _168 * _160;
    uint _175 = _174 + 12u;
    uint _199;
    uint _200;
    uint _201;
    uint _202;
    if (_173)
    {
        uvec4 _178 = texelFetch(l_geomAttrib_0, int(_175 >> 2u));
        uint _179 = _178.x;
        _199 = _179 & 255u;
        _200 = (_179 >> 8u) & 255u;
        _201 = (_179 >> 16u) & 255u;
        _202 = 16u;
    }
    else
    {
        uint _187 = _175 >> 2u;
        uvec2 _193 = uvec2(texelFetch(l_geomAttrib_0, int(_187)).x, texelFetch(l_geomAttrib_0, int(_187 + 1u)).x);
        uint _194 = _193.x;
        _199 = _194 & 65535u;
        _200 = _194 >> 16u;
        _201 = _193.y & 65535u;
        _202 = 20u;
    }
    uvec4 _210 = texelFetch(l_geomAttrib_0, int((_202 + _174) >> 2u));
    uint _211 = _210.x;
    bool _225 = _169 == 0u;
    uint _226;
    if (_225)
    {
        _226 = _202 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_172)
        {
            frontier_phi_9_10_ladder = _202 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _202 + 12u;
        }
        _226 = frontier_phi_9_10_ladder;
    }
    uvec4 _234 = texelFetch(l_geomAttrib_0, int(((_174 + 4u) + (_170 ? (_226 + 4u) : _226)) >> 2u));
    uint _235 = _234.x;
    float _239 = float(int(uint(int(_235 << 16u) >> int(16u))));
    float _240 = float(int(uint(int(_235) >> int(16u))));
    uint _241 = _168 * _162;
    uint _242 = _241 + 12u;
    uint _263;
    uint _264;
    uint _265;
    uint _266;
    if (_173)
    {
        uvec4 _244 = texelFetch(l_geomAttrib_0, int(_242 >> 2u));
        uint _245 = _244.x;
        _263 = _245 & 255u;
        _264 = (_245 >> 8u) & 255u;
        _265 = (_245 >> 16u) & 255u;
        _266 = 16u;
    }
    else
    {
        uint _251 = _242 >> 2u;
        uvec2 _257 = uvec2(texelFetch(l_geomAttrib_0, int(_251)).x, texelFetch(l_geomAttrib_0, int(_251 + 1u)).x);
        uint _258 = _257.x;
        _263 = _258 & 65535u;
        _264 = _258 >> 16u;
        _265 = _257.y & 65535u;
        _266 = 20u;
    }
    uvec4 _272 = texelFetch(l_geomAttrib_0, int((_266 + _241) >> 2u));
    uint _273 = _272.x;
    uint _285;
    if (_225)
    {
        _285 = _266 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_172)
        {
            frontier_phi_16_17_ladder = _266 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _266 + 12u;
        }
        _285 = frontier_phi_16_17_ladder;
    }
    uvec4 _293 = texelFetch(l_geomAttrib_0, int(((_241 + 4u) + (_170 ? (_285 + 4u) : _285)) >> 2u));
    uint _294 = _293.x;
    float _298 = float(int(uint(int(_294 << 16u) >> int(16u))));
    float _299 = float(int(uint(int(_294) >> int(16u))));
    uint _300 = _168 * _163;
    uint _301 = _300 + 12u;
    uint _322;
    uint _323;
    uint _324;
    uint _325;
    if (_173)
    {
        uvec4 _303 = texelFetch(l_geomAttrib_0, int(_301 >> 2u));
        uint _304 = _303.x;
        _322 = _304 & 255u;
        _323 = (_304 >> 8u) & 255u;
        _324 = (_304 >> 16u) & 255u;
        _325 = 16u;
    }
    else
    {
        uint _310 = _301 >> 2u;
        uvec2 _316 = uvec2(texelFetch(l_geomAttrib_0, int(_310)).x, texelFetch(l_geomAttrib_0, int(_310 + 1u)).x);
        uint _317 = _316.x;
        _322 = _317 & 65535u;
        _323 = _317 >> 16u;
        _324 = _316.y & 65535u;
        _325 = 20u;
    }
    uvec4 _331 = texelFetch(l_geomAttrib_0, int((_325 + _300) >> 2u));
    uint _332 = _331.x;
    uint _344;
    if (_225)
    {
        _344 = _325 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_172)
        {
            frontier_phi_23_24_ladder = _325 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _325 + 12u;
        }
        _344 = frontier_phi_23_24_ladder;
    }
    uvec4 _352 = texelFetch(l_geomAttrib_0, int(((_300 + 4u) + (_170 ? (_344 + 4u) : _344)) >> 2u));
    uint _353 = _352.x;
    float _357 = float(int(uint(int(_353 << 16u) >> int(16u))));
    float _358 = float(int(uint(int(_353) >> int(16u))));
    bool _360 = _119.z == 0u;
    float _396;
    float _397;
    float _398;
    if (_360)
    {
        uint _363 = _160 * 3u;
        uvec3 _372 = uvec3(texelFetch(l_geomPositionBuffer, int(_363)).x, texelFetch(l_geomPositionBuffer, int(_363 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_363 + 2u)).x);
        _396 = uintBitsToFloat(_372.x);
        _397 = uintBitsToFloat(_372.y);
        _398 = uintBitsToFloat(_372.z);
    }
    else
    {
        uint _380 = _160 * 2u;
        uvec2 _386 = uvec2(texelFetch(l_geomPositionBuffer, int(_380)).x, texelFetch(l_geomPositionBuffer, int(_380 + 1u)).x);
        uint _387 = _386.x;
        _396 = unpackHalf2x16(_387).x;
        _397 = unpackHalf2x16(_387 >> 16u).x;
        _398 = unpackHalf2x16(_386.y).x;
    }
    float _434;
    float _435;
    float _436;
    if (_360)
    {
        uint _401 = _162 * 3u;
        uvec3 _410 = uvec3(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_401 + 2u)).x);
        _434 = uintBitsToFloat(_410.x);
        _435 = uintBitsToFloat(_410.y);
        _436 = uintBitsToFloat(_410.z);
    }
    else
    {
        uint _418 = _162 * 2u;
        uvec2 _424 = uvec2(texelFetch(l_geomPositionBuffer, int(_418)).x, texelFetch(l_geomPositionBuffer, int(_418 + 1u)).x);
        uint _425 = _424.x;
        _434 = unpackHalf2x16(_425).x;
        _435 = unpackHalf2x16(_425 >> 16u).x;
        _436 = unpackHalf2x16(_424.y).x;
    }
    float _472;
    float _473;
    float _474;
    if (_360)
    {
        uint _439 = _163 * 3u;
        uvec3 _448 = uvec3(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_439 + 2u)).x);
        _472 = uintBitsToFloat(_448.x);
        _473 = uintBitsToFloat(_448.y);
        _474 = uintBitsToFloat(_448.z);
    }
    else
    {
        uint _456 = _163 * 2u;
        uvec2 _462 = uvec2(texelFetch(l_geomPositionBuffer, int(_456)).x, texelFetch(l_geomPositionBuffer, int(_456 + 1u)).x);
        uint _463 = _462.x;
        _472 = unpackHalf2x16(_463).x;
        _473 = unpackHalf2x16(_463 >> 16u).x;
        _474 = unpackHalf2x16(_462.y).x;
    }
    float _477 = (1.0 - hit._m0.x) - hit._m0.y;
    float _511 = (_298 - _239) * 0.00048828125;
    float _513 = (_299 - _240) * 0.00048828125;
    float _516 = (_357 - _239) * 0.00048828125;
    float _517 = (_358 - _240) * 0.00048828125;
    float _539 = _434 - _396;
    float _540 = _435 - _397;
    float _541 = _436 - _398;
    float _544 = fma(_541, gl_ObjectToWorldEXT[2u].x, fma(_540, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _539));
    float _547 = fma(_541, gl_ObjectToWorldEXT[2u].y, fma(_540, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _539));
    float _550 = fma(_541, gl_ObjectToWorldEXT[2u].z, fma(_540, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _539));
    float _551 = _472 - _396;
    float _552 = _473 - _397;
    float _553 = _474 - _398;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = (((_298 * hit._m0.x) + (_239 * _477)) + (_357 * hit._m0.y)) * 0.00048828125;
    float _564 = (((_299 * hit._m0.x) + (_240 * _477)) + (_358 * hit._m0.y)) * 0.00048828125;
    float _568 = (((float(_199) * _477) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _571 = (((float(_200) * _477) + (-127.0)) + (float(_264) * hit._m0.x)) + (float(_323) * hit._m0.y);
    float _574 = (((float(_201) * _477) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _575 = _568 * 0.0078740157186985015869140625;
    float _577 = _571 * 0.0078740157186985015869140625;
    float _578 = _574 * 0.0078740157186985015869140625;
    float _591 = ((((float(_211 & 255u) * _477) + (-127.0)) + (float(_273 & 255u) * hit._m0.x)) + (float(_332 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _592 = ((((float((_211 >> 8u) & 255u) * _477) + (-127.0)) + (float((_273 >> 8u) & 255u) * hit._m0.x)) + (float((_332 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _593 = ((((float((_211 >> 16u) & 255u) * _477) + (-127.0)) + (float((_273 >> 16u) & 255u) * hit._m0.x)) + (float((_332 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float(_211 >> 24u) * _477) + (-127.0)) + (float(_273 >> 24u) * hit._m0.x)) + (float(_332 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((_592 * _578) - (_593 * _577)) * _594;
    float _605 = ((_593 * _575) - (_591 * _578)) * _594;
    float _606 = ((_591 * _577) - (_592 * _575)) * _594;
    float _610 = inversesqrt(dot(vec3(_604, _605, _606), vec3(_604, _605, _606)));
    uvec2 _625 = uvec2(textureSize(S_AMSN_V_snp_0_Texture2D_0, int(0u)));
    bool _630 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _683;
    if (_630)
    {
        float _641 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _647 = (_562 * _547) - (_559 * _550);
        float _650 = (_556 * _550) - (_562 * _544);
        float _653 = (_559 * _544) - (_556 * _547);
        float _680 = ((log2((((float(_625.y) * 0.5) * float(_625.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_650 * _650) + (_653 * _653)) + (_647 * _647)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_641 * gl_WorldRayDirectionEXT.x, _641 * gl_WorldRayDirectionEXT.y, _641 * gl_WorldRayDirectionEXT.z), vec3(_575, _577, _578))));
        _683 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    }
    else
    {
        _683 = 0.0;
    }
    vec4 _687 = textureLod(sampler2D(S_AMSN_V_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _563) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _564) + cbTextureTilingScale._m0[0u].w), _683);
    float _689 = _687.x;
    float _690 = _687.y;
    float _691 = _687.z;
    uvec2 _707 = uvec2(textureSize(S_AMSN_V_snp_0_Texture2D_1, int(0u)));
    float _711 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _712 = _711 * gl_WorldRayDirectionEXT.x;
    float _713 = _711 * gl_WorldRayDirectionEXT.y;
    float _714 = _711 * gl_WorldRayDirectionEXT.z;
    float _758;
    if (_630)
    {
        float _724 = (_562 * _547) - (_559 * _550);
        float _727 = (_556 * _550) - (_562 * _544);
        float _730 = (_559 * _544) - (_556 * _547);
        float _756 = ((log2((((float(_707.y) * 0.5) * float(_707.x)) * abs((_517 * _511) - (_516 * _513))) / (sqrt(((_727 * _727) + (_730 * _730)) + (_724 * _724)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_712, _713, _714), vec3(_575, _577, _578))));
        _758 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    }
    else
    {
        _758 = 0.0;
    }
    vec4 _761 = textureLod(sampler2D(S_AMSN_V_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _563) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _564) + cbTextureTilingScale._m0[1u].w), _758);
    float _765 = _761.z;
    float _768 = (_761.x * 2.0) + (-1.0);
    float _770 = (_761.y * 2.0) + (-1.0);
    float _771 = dot(vec2(_768, _770), vec2(_768, _770));
    float _1252 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _776 = sqrt(1.0 - (isnan(1.0) ? _1252 : (isnan(_1252) ? 1.0 : min(_1252, 1.0))));
    float _779 = fma(_776, _575, fma(_770, _591, (_610 * _604) * _768));
    float _782 = fma(_776, _577, fma(_770, _592, (_610 * _605) * _768));
    float _785 = fma(_776, _578, fma(_770, _593, (_610 * _606) * _768));
    float _789 = inversesqrt(dot(vec3(_779, _782, _785), vec3(_779, _782, _785)));
    float _790 = _789 * _779;
    float _791 = _789 * _782;
    float _792 = _789 * _785;
    float _804 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _805 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _806 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _807 = (-0.0) - _712;
    float _809 = (-0.0) - _713;
    float _810 = (-0.0) - _714;
    float _816 = float(gl_LaunchIDEXT.x);
    float _817 = float(gl_LaunchIDEXT.y);
    float _820 = float(gl_LaunchSizeEXT.x);
    float _834 = fract(fract(sin(dot(vec2(_816 / _820, _817 / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _847 = fract(fract(sin(dot(vec2((_816 + 128.0) / _820, (_817 + 128.0) / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _848 = 1.0 - cbMtdParam._m0[9u].x;
    float _849 = _848 * _689;
    float _850 = _848 * _690;
    float _851 = _848 * _691;
    float _856 = cbMtdParam._m0[9u].x * (_689 + (-0.039999999105930328369140625));
    float _857 = cbMtdParam._m0[9u].x * (_690 + (-0.039999999105930328369140625));
    float _858 = cbMtdParam._m0[9u].x * (_691 + (-0.039999999105930328369140625));
    float _859 = _856 + 0.039999999105930328369140625;
    float _861 = _857 + 0.039999999105930328369140625;
    float _862 = _858 + 0.039999999105930328369140625;
    _61._m0 = 1u;
    uvec4 _872 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _873 = _872.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _873, _872.w, _873, vec3(_804, _805, _806), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _988;
    float _989;
    float _990;
    float _991;
    float _992;
    float _993;
    if (_61._m0 == 0u)
    {
        float _894 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_790, _791, _792));
        float _1263 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        float _897 = isnan(1.0) ? _1263 : (isnan(_1263) ? 1.0 : min(_1263, 1.0));
        float _916 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _765) * 0.949999988079071044921875);
        float _917 = _916 * _916;
        float _918 = g_sceneCB._m0[4u].x - _712;
        float _919 = g_sceneCB._m0[4u].y - _713;
        float _920 = g_sceneCB._m0[4u].z - _714;
        float _924 = inversesqrt(dot(vec3(_918, _919, _920), vec3(_918, _919, _920)));
        float _925 = _924 * _918;
        float _926 = _924 * _919;
        float _927 = _924 * _920;
        float _928 = dot(vec3(_790, _791, _792), vec3(g_sceneCB._m0[4u].xyz));
        float _1274 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _931 = isnan(1.0) ? _1274 : (isnan(_1274) ? 1.0 : min(_1274, 1.0));
        float _932 = dot(vec3(_790, _791, _792), vec3(_807, _809, _810));
        float _1285 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _935 = isnan(1.0) ? _1285 : (isnan(_1285) ? 1.0 : min(_1285, 1.0));
        float _936 = dot(vec3(_790, _791, _792), vec3(_925, _926, _927));
        float _1296 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        float _939 = isnan(1.0) ? _1296 : (isnan(_1296) ? 1.0 : min(_1296, 1.0));
        float _940 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_925, _926, _927));
        float _1307 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _944 = _917 * _917;
        float _948 = ((_939 * _939) * (_944 + (-1.0))) + 1.0;
        float _957 = exp2(log2(1.0 - (isnan(1.0) ? _1307 : (isnan(_1307) ? 1.0 : min(_1307, 1.0)))) * 5.0);
        float _968 = 1.0 - _917;
        float _979 = (0.5 / (((_935 * ((_931 * _968) + _917)) + 9.9999999392252902907785028219223e-09) + (((_935 * _968) + _917) * _931))) * _931;
        float _1318 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _981 = (isnan(1.0) ? _1318 : (isnan(_1318) ? 1.0 : min(_1318, 1.0))) * (_944 / ((_948 * _948) * 3.141590118408203125));
        _988 = ((_849 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _897;
        _989 = ((_850 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _897;
        _990 = ((_851 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _897;
        _991 = (((_957 * (0.959999978542327880859375 - _856)) + _859) * g_sceneCB._m0[5u].x) * _981;
        _992 = (((_957 * (0.959999978542327880859375 - _857)) + _861) * g_sceneCB._m0[5u].y) * _981;
        _993 = (((_957 * (0.959999978542327880859375 - _858)) + _862) * g_sceneCB._m0[5u].z) * _981;
    }
    else
    {
        _988 = 0.0;
        _989 = 0.0;
        _990 = 0.0;
        _991 = 0.0;
        _992 = 0.0;
        _993 = 0.0;
    }
    bool _995 = abs(_791) < 0.89999997615814208984375;
    float _997 = float(_995);
    float _998 = _995 ? 0.0 : 1.0;
    float _1001 = (_997 * _792) - (_998 * _791);
    float _1002 = _998 * _790;
    float _1004 = (-0.0) - (_790 * _997);
    float _1008 = inversesqrt(dot(vec3(_1001, _1002, _1004), vec3(_1001, _1002, _1004)));
    float _1009 = _1001 * _1008;
    float _1010 = _1002 * _1008;
    float _1011 = _1008 * _1004;
    float _1014 = (_1010 * _792) - (_1011 * _791);
    float _1017 = (_1011 * _790) - (_1009 * _792);
    float _1020 = (_1009 * _791) - (_1010 * _790);
    float _1022;
    float _1030;
    float _1021 = 0.0;
    uint _1023 = 0u;
    float _1027;
    bool _1029;
    for (;;)
    {
        _1027 = (float(_1023) + _834) * 0.03125;
        _1029 = _1023 == 0u;
        float frontier_phi_43_pred;
        if (_1029)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1171;
            float _1172;
            uint _1174;
            _1171 = 0.0;
            _1172 = 0.5;
            _1174 = _1023;
            float _1031;
            for (;;)
            {
                _1031 = ((_1174 & 1u) != 0u) ? (_1172 + _1171) : _1171;
                uint _1175 = _1174 >> 1u;
                if (_1175 == 0u)
                {
                    break;
                }
                else
                {
                    _1171 = _1031;
                    _1172 *= 0.5;
                    _1174 = _1175;
                }
            }
            frontier_phi_43_pred = _1031;
        }
        _1030 = frontier_phi_43_pred;
        float _1032 = _1030 + _847;
        float _1036 = sqrt(_1027);
        float _1037 = ((_1032 > 1.0) ? (_1032 + (-1.0)) : _1032) * 6.283185482025146484375;
        float _1040 = cos(_1037) * _1036;
        float _1042 = sin(_1037) * _1036;
        float _1044 = sqrt(1.0 - _1027);
        float _1057 = ((_1044 * _790) + (_1040 * _1014)) + (_1042 * _1009);
        float _1058 = ((_1044 * _791) + (_1040 * _1017)) + (_1042 * _1010);
        float _1059 = ((_1044 * _792) + (_1040 * _1020)) + (_1042 * _1011);
        _60._m0 = 1u;
        uvec4 _1063 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1064 = _1063.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1064, _1063.w, _1064, vec3(_804, _805, _806), 9.9999997473787516355514526367188e-05, vec3(_1057, _1058, _1059), 10000.0, 1);
        float _1070 = dot(vec3(_790, _791, _792), vec3(_1057, _1058, _1059));
        float _1329 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1073 = isnan(1.0) ? _1329 : (isnan(_1329) ? 1.0 : min(_1329, 1.0));
        _1022 = ((float(_60._m0 == 0u) * _1073) / (_1073 * 0.3183098733425140380859375)) + _1021;
        uint _1024 = _1023 + 1u;
        if (_1024 == 32u)
        {
            break;
        }
        else
        {
            _1021 = _1022;
            _1023 = _1024;
            continue;
        }
    }
    float _1081 = _1022 * 0.009947183541953563690185546875;
    float _1086 = dot(vec3(_712, _713, _714), vec3(_790, _791, _792)) * 2.0;
    vec4 _1100 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_712 - (_1086 * _790), _713 - (_1086 * _791), _714 - (_1086 * _792)), 4.0 - (_765 * 4.0));
    float _1105 = dot(vec3(_807, _809, _810), vec3(_790, _791, _792));
    float _1340 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1115 = exp2(log2(1.0 - (isnan(1.0) ? _1340 : (isnan(_1340) ? 1.0 : min(_1340, 1.0)))) * 5.0);
    vec4 _1127 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_790, _791, _792), 0.0);
    float _1138 = (_991 + _988) + (((_1127.x * _849) + (((_1115 * (0.959999978542327880859375 - _856)) + _859) * _1100.x)) * _1081);
    float _1142 = (_992 + _989) + (((_1127.y * _850) + (((_1115 * (0.959999978542327880859375 - _857)) + _861) * _1100.y)) * _1081);
    float _1146 = (_993 + _990) + (((_1127.z * _851) + (((_1115 * (0.959999978542327880859375 - _858)) + _862) * _1100.z)) * _1081);
    float _1351 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _1362 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _1373 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    bool _1154 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1165;
    _1165.x = _1154 ? ((_568 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1351 : (isnan(_1351) ? 1.0 : min(_1351, 1.0)));
    _1165.y = _1154 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1362 : (isnan(_1362) ? 1.0 : min(_1362, 1.0)));
    _1165.z = _1154 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1373 : (isnan(_1373) ? 1.0 : min(_1373, 1.0)));
    payload._m0 = _1165;
}


