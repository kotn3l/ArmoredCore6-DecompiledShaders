#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1141;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _184 = (_177 * _169) + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 20u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 24u;
    }
    bool _217 = _178 == 0u;
    uint _218;
    if (_217)
    {
        _218 = _211;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 8u;
        }
        _218 = frontier_phi_9_10_ladder;
    }
    uvec4 _229 = texelFetch(l_geomAttrib_0, int((((_177 * _169) + 4u) + (_179 ? (_218 + 4u) : _218)) >> 2u));
    uint _230 = _229.x;
    float _234 = float(int(uint(int(_230 << 16u) >> int(16u))));
    float _235 = float(int(uint(int(_230) >> int(16u))));
    uint _237 = (_177 * _171) + 12u;
    uint _258;
    uint _259;
    uint _260;
    uint _261;
    if (_182)
    {
        uvec4 _239 = texelFetch(l_geomAttrib_0, int(_237 >> 2u));
        uint _240 = _239.x;
        _258 = _240 & 255u;
        _259 = (_240 >> 8u) & 255u;
        _260 = (_240 >> 16u) & 255u;
        _261 = 20u;
    }
    else
    {
        uint _246 = _237 >> 2u;
        uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
        uint _253 = _252.x;
        _258 = _253 & 65535u;
        _259 = _253 >> 16u;
        _260 = _252.y & 65535u;
        _261 = 24u;
    }
    uint _265;
    if (_217)
    {
        _265 = _261;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _261 + 8u;
        }
        _265 = frontier_phi_16_17_ladder;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((((_177 * _171) + 4u) + (_179 ? (_265 + 4u) : _265)) >> 2u));
    uint _275 = _274.x;
    float _279 = float(int(uint(int(_275 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_275) >> int(16u))));
    uint _282 = (_177 * _172) + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_182)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 20u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 24u;
    }
    uint _310;
    if (_217)
    {
        _310 = _306;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _306 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _306 + 8u;
        }
        _310 = frontier_phi_23_24_ladder;
    }
    uvec4 _319 = texelFetch(l_geomAttrib_0, int((((_177 * _172) + 4u) + (_179 ? (_310 + 4u) : _310)) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    bool _327 = _128.z == 0u;
    float _363;
    float _364;
    float _365;
    if (_327)
    {
        uint _330 = _169 * 3u;
        uvec3 _339 = uvec3(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_330 + 2u)).x);
        _363 = uintBitsToFloat(_339.x);
        _364 = uintBitsToFloat(_339.y);
        _365 = uintBitsToFloat(_339.z);
    }
    else
    {
        uint _347 = _169 * 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomPositionBuffer, int(_347)).x, texelFetch(l_geomPositionBuffer, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _363 = unpackHalf2x16(_354).x;
        _364 = unpackHalf2x16(_354 >> 16u).x;
        _365 = unpackHalf2x16(_353.y).x;
    }
    float _401;
    float _402;
    float _403;
    if (_327)
    {
        uint _368 = _171 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _171 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_327)
    {
        uint _406 = _172 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _172 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _444 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = (_279 - _234) * 0.00048828125;
    float _468 = (_280 - _235) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _511 = fma(_508, gl_ObjectToWorldEXT[2u].x, fma(_507, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _506));
    float _514 = fma(_508, gl_ObjectToWorldEXT[2u].y, fma(_507, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _506));
    float _517 = fma(_508, gl_ObjectToWorldEXT[2u].z, fma(_507, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _506));
    float _518 = (((_279 * hit._m0.x) + (_234 * _444)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _519 = (((_280 * hit._m0.x) + (_235 * _444)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _523 = (((float(_208) * _444) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _526 = (((float(_209) * _444) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = (((float(_210) * _444) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = _523 * 0.0078740157186985015869140625;
    float _532 = _526 * 0.0078740157186985015869140625;
    float _533 = _529 * 0.0078740157186985015869140625;
    uvec2 _551 = uvec2(textureSize(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _556 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _609;
    if (_556)
    {
        float _567 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _573 = (_517 * _502) - (_514 * _505);
        float _576 = (_511 * _505) - (_517 * _499);
        float _579 = (_514 * _499) - (_511 * _502);
        float _606 = ((log2((((float(_551.y) * 0.5) * float(_551.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_576 * _576) + (_579 * _579)) + (_573 * _573)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_567 * gl_WorldRayDirectionEXT.x, _567 * gl_WorldRayDirectionEXT.y, _567 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _609 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    }
    else
    {
        _609 = 0.0;
    }
    vec4 _613 = textureLod(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _518) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _519) + cbTextureTilingScale._m0[0u].w), _609);
    float _619 = _613.x * cbMtdParam._m0[9u].x;
    float _620 = _613.y * cbMtdParam._m0[9u].y;
    float _621 = _613.z * cbMtdParam._m0[9u].z;
    uvec2 _651 = uvec2(textureSize(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    float _702;
    if (_556)
    {
        float _662 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _668 = (_517 * _502) - (_514 * _505);
        float _671 = (_511 * _505) - (_517 * _499);
        float _674 = (_514 * _499) - (_511 * _502);
        float _700 = ((log2((((float(_651.y) * 0.5) * float(_651.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_671 * _671) + (_674 * _674)) + (_668 * _668)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_662 * gl_WorldRayDirectionEXT.x, _662 * gl_WorldRayDirectionEXT.y, _662 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _702 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    }
    else
    {
        _702 = 0.0;
    }
    vec4 _704 = textureLod(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + _519) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _702);
    uvec2 _729 = uvec2(textureSize(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _733 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _734 = _733 * gl_WorldRayDirectionEXT.x;
    float _735 = _733 * gl_WorldRayDirectionEXT.y;
    float _736 = _733 * gl_WorldRayDirectionEXT.z;
    float _780;
    if (_556)
    {
        float _746 = (_517 * _502) - (_514 * _505);
        float _749 = (_511 * _505) - (_517 * _499);
        float _752 = (_514 * _499) - (_511 * _502);
        float _778 = ((log2((((float(_729.y) * 0.5) * float(_729.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_749 * _749) + (_752 * _752)) + (_746 * _746)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_734, _735, _736), vec3(_530, _532, _533))));
        _780 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    }
    else
    {
        _780 = 0.0;
    }
    vec4 _782 = textureLod(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _518) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _519) + cbTextureTilingScale._m0[2u].w), _780);
    float _797 = abs((fract(cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1234 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _798 = isnan(1.0) ? _1234 : (isnan(_1234) ? 1.0 : min(_1234, 1.0));
    float _806 = (((_798 * _798) * (3.0 - (_798 * 2.0))) * cbMtdParam._m0[12u].w) - cbMtdParam._m0[12u].x;
    float _813 = cbMtdParam._m0[12u].y * _613.w;
    float _820 = inversesqrt(dot(vec3(_530, _532, _533), vec3(_530, _532, _533)));
    float _821 = _820 * _530;
    float _822 = _820 * _532;
    float _823 = _820 * _533;
    float _835 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _836 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _837 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _838 = (-0.0) - _734;
    float _840 = (-0.0) - _735;
    float _841 = (-0.0) - _736;
    float _847 = float(gl_LaunchIDEXT.x);
    float _848 = float(gl_LaunchIDEXT.y);
    float _851 = float(gl_LaunchSizeEXT.x);
    float _865 = fract(fract(sin(dot(vec2(_847 / _851, _848 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _878 = fract(fract(sin(dot(vec2((_847 + 128.0) / _851, (_848 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _888 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _889 = _888.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _889, _888.w, _889, vec3(_835, _836, _837), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _969;
    float _970;
    float _971;
    float _972;
    float _973;
    float _974;
    if (_66._m0 == 0u)
    {
        float _910 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_821, _822, _823));
        float _1245 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
        float _913 = isnan(1.0) ? _1245 : (isnan(_1245) ? 1.0 : min(_1245, 1.0));
        float _924 = g_sceneCB._m0[4u].x - _734;
        float _925 = g_sceneCB._m0[4u].y - _735;
        float _926 = g_sceneCB._m0[4u].z - _736;
        float _930 = inversesqrt(dot(vec3(_924, _925, _926), vec3(_924, _925, _926)));
        float _934 = dot(vec3(_821, _822, _823), vec3(g_sceneCB._m0[4u].xyz));
        float _1256 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _937 = isnan(1.0) ? _1256 : (isnan(_1256) ? 1.0 : min(_1256, 1.0));
        float _938 = dot(vec3(_821, _822, _823), vec3(_838, _840, _841));
        float _1267 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        float _942 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_924 * _930, _925 * _930, _926 * _930));
        float _1278 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _953 = (exp2(log2(1.0 - (isnan(1.0) ? _1278 : (isnan(_1278) ? 1.0 : min(_1278, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _959 = (0.5 / ((_937 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1267 : (isnan(_1267) ? 1.0 : min(_1267, 1.0))))) * _937;
        float _1289 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _961 = (isnan(1.0) ? _1289 : (isnan(_1289) ? 1.0 : min(_1289, 1.0))) * 0.31831014156341552734375;
        _969 = ((_619 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _913;
        _970 = ((_620 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _913;
        _971 = ((_621 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _913;
        _972 = (_953 * g_sceneCB._m0[5u].x) * _961;
        _973 = (_953 * g_sceneCB._m0[5u].y) * _961;
        _974 = (_953 * g_sceneCB._m0[5u].z) * _961;
    }
    else
    {
        _969 = 0.0;
        _970 = 0.0;
        _971 = 0.0;
        _972 = 0.0;
        _973 = 0.0;
        _974 = 0.0;
    }
    bool _976 = abs(_822) < 0.89999997615814208984375;
    float _978 = float(_976);
    float _979 = _976 ? 0.0 : 1.0;
    float _982 = (_978 * _823) - (_979 * _822);
    float _983 = _979 * _821;
    float _985 = (-0.0) - (_821 * _978);
    float _989 = inversesqrt(dot(vec3(_982, _983, _985), vec3(_982, _983, _985)));
    float _990 = _982 * _989;
    float _991 = _983 * _989;
    float _992 = _989 * _985;
    float _995 = (_991 * _823) - (_992 * _822);
    float _998 = (_992 * _821) - (_990 * _823);
    float _1001 = (_990 * _822) - (_991 * _821);
    float _1003;
    float _1011;
    float _1002 = 0.0;
    uint _1004 = 0u;
    float _1008;
    bool _1010;
    for (;;)
    {
        _1008 = (float(_1004) + _865) * 0.03125;
        _1010 = _1004 == 0u;
        float frontier_phi_45_pred;
        if (_1010)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1146;
            float _1147;
            uint _1149;
            _1146 = 0.0;
            _1147 = 0.5;
            _1149 = _1004;
            float _1012;
            for (;;)
            {
                _1012 = ((_1149 & 1u) != 0u) ? (_1147 + _1146) : _1146;
                uint _1150 = _1149 >> 1u;
                if (_1150 == 0u)
                {
                    break;
                }
                else
                {
                    _1146 = _1012;
                    _1147 *= 0.5;
                    _1149 = _1150;
                }
            }
            frontier_phi_45_pred = _1012;
        }
        _1011 = frontier_phi_45_pred;
        float _1013 = _1011 + _878;
        float _1017 = sqrt(_1008);
        float _1018 = ((_1013 > 1.0) ? (_1013 + (-1.0)) : _1013) * 6.283185482025146484375;
        float _1021 = cos(_1018) * _1017;
        float _1023 = sin(_1018) * _1017;
        float _1025 = sqrt(1.0 - _1008);
        float _1038 = ((_1025 * _821) + (_1021 * _995)) + (_1023 * _990);
        float _1039 = ((_1025 * _822) + (_1021 * _998)) + (_1023 * _991);
        float _1040 = ((_1025 * _823) + (_1021 * _1001)) + (_1023 * _992);
        _65._m0 = 1u;
        uvec4 _1044 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1045 = _1044.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1045, _1044.w, _1045, vec3(_835, _836, _837), 9.9999997473787516355514526367188e-05, vec3(_1038, _1039, _1040), 10000.0, 1);
        float _1051 = dot(vec3(_821, _822, _823), vec3(_1038, _1039, _1040));
        float _1300 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1054 = isnan(1.0) ? _1300 : (isnan(_1300) ? 1.0 : min(_1300, 1.0));
        _1003 = ((float(_65._m0 == 0u) * _1054) / (_1054 * 0.3183098733425140380859375)) + _1002;
        uint _1005 = _1004 + 1u;
        if (_1005 == 32u)
        {
            break;
        }
        else
        {
            _1002 = _1003;
            _1004 = _1005;
            continue;
        }
    }
    float _1062 = _1003 * 0.009947183541953563690185546875;
    float _1067 = dot(vec3(_734, _735, _736), vec3(_821, _822, _823)) * 2.0;
    vec4 _1079 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_734 - (_1067 * _821), _735 - (_1067 * _822), _736 - (_1067 * _823)), 4.0);
    float _1084 = dot(vec3(_838, _840, _841), vec3(_821, _822, _823));
    float _1311 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1093 = (exp2(log2(1.0 - (isnan(1.0) ? _1311 : (isnan(_1311) ? 1.0 : min(_1311, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1099 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_821, _822, _823), 0.0);
    float _1111 = ((_969 + (_813 * (((_782.x * cbMtdParam._m0[11u].x) * _806) + (_704.x * cbMtdParam._m0[10u].x)))) + _972) + (((_1099.x * _619) + (_1093 * _1079.x)) * _1062);
    float _1116 = ((_970 + (_813 * (((_782.y * cbMtdParam._m0[11u].y) * _806) + (_704.y * cbMtdParam._m0[10u].y)))) + _973) + (((_1099.y * _620) + (_1093 * _1079.y)) * _1062);
    float _1121 = ((_971 + (_813 * (((_782.z * cbMtdParam._m0[11u].z) * _806) + (_704.z * cbMtdParam._m0[10u].z)))) + _974) + (((_1099.z * _621) + (_1093 * _1079.z)) * _1062);
    float _1322 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _1333 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
    float _1344 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
    bool _1129 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1140;
    _1140.x = _1129 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1322 : (isnan(_1322) ? 1.0 : min(_1322, 1.0)));
    _1140.y = _1129 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1333 : (isnan(_1333) ? 1.0 : min(_1333, 1.0)));
    _1140.z = _1129 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1344 : (isnan(_1344) ? 1.0 : min(_1344, 1.0)));
    payload._m0 = _1140;
}


