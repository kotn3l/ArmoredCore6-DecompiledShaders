#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2161;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _223 = _222.x;
    bool _237 = _182 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + (_183 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _181 * _175;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_186)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_183 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _181 * _176;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_186)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_183 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _132.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _173 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _173 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _175 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _175 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _176 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _176 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_212) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_213) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_214) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    float _645 = sin(cbMtdParam._m0[18u].x);
    float _646 = cos(cbMtdParam._m0[18u].x);
    float _647 = _575 - cbMtdParam._m0[17u].w;
    float _648 = _576 - cbMtdParam._m0[17u].w;
    float _656 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].y) + fma(_648, (-0.0) - _645, _646 * _647);
    float _658 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].z) + fma(_648, _646, _647 * _645);
    uvec2 _670 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1, int(0u)));
    bool _675 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _728;
    if (_675)
    {
        float _686 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _692 = (_574 * _559) - (_571 * _562);
        float _695 = (_568 * _562) - (_574 * _556);
        float _698 = (_571 * _556) - (_568 * _559);
        float _725 = ((log2((((float(_670.y) * 0.5) * float(_670.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_695 * _695) + (_698 * _698)) + (_692 * _692)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_686 * gl_WorldRayDirectionEXT.x, _686 * gl_WorldRayDirectionEXT.y, _686 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _728 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    }
    else
    {
        _728 = 0.0;
    }
    vec4 _732 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _656) + cbTextureTilingScale._m0[1u].z, (_658 * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _728);
    float _737 = _732.x * cbMtdParam._m0[10u].x;
    float _738 = _732.y * cbMtdParam._m0[10u].y;
    float _739 = _732.z * cbMtdParam._m0[10u].z;
    uvec2 _757 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2, int(0u)));
    float _808;
    if (_675)
    {
        float _768 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _774 = (_574 * _559) - (_571 * _562);
        float _777 = (_568 * _562) - (_574 * _556);
        float _780 = (_571 * _556) - (_568 * _559);
        float _806 = ((log2((((float(_757.y) * 0.5) * float(_757.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_777 * _777) + (_780 * _780)) + (_774 * _774)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_768 * gl_WorldRayDirectionEXT.x, _768 * gl_WorldRayDirectionEXT.y, _768 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _808 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    }
    else
    {
        _808 = 0.0;
    }
    vec4 _810 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _575) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _576) + cbTextureTilingScale._m0[11u].w), _808);
    uvec2 _829 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0, int(0u)));
    float _880;
    if (_675)
    {
        float _840 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _846 = (_574 * _559) - (_571 * _562);
        float _849 = (_568 * _562) - (_574 * _556);
        float _852 = (_571 * _556) - (_568 * _559);
        float _878 = ((log2((((float(_829.y) * 0.5) * float(_829.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_849 * _849) + (_852 * _852)) + (_846 * _846)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_840 * gl_WorldRayDirectionEXT.x, _840 * gl_WorldRayDirectionEXT.y, _840 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _880 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    }
    else
    {
        _880 = 0.0;
    }
    vec4 _883 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _575) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _576) + cbTextureTilingScale._m0[0u].w), _880);
    uvec2 _904 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3, int(0u)));
    float _955;
    if (_675)
    {
        float _915 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _921 = (_574 * _559) - (_571 * _562);
        float _924 = (_568 * _562) - (_574 * _556);
        float _927 = (_571 * _556) - (_568 * _559);
        float _953 = ((log2((((float(_904.y) * 0.5) * float(_904.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_924 * _924) + (_927 * _927)) + (_921 * _921)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_915 * gl_WorldRayDirectionEXT.x, _915 * gl_WorldRayDirectionEXT.y, _915 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _955 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    }
    else
    {
        _955 = 0.0;
    }
    float _960 = cbMtdParam._m0[19u].x * textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * _575) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _576) + cbTextureTilingScale._m0[13u].w), _955).x;
    float _970 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - _883.x) * 2.0) - _960)) + 1.0;
    float _2281 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _971 = isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0));
    float _978 = (_971 * ((_810.x * cbMtdParam._m0[11u].x) - _737)) + _737;
    float _979 = (_971 * ((_810.y * cbMtdParam._m0[11u].y) - _738)) + _738;
    float _980 = (_971 * ((_810.z * cbMtdParam._m0[11u].z) - _739)) + _739;
    uvec2 _997 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8, int(0u)));
    float _1048;
    if (_675)
    {
        float _1008 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1014 = (_574 * _559) - (_571 * _562);
        float _1017 = (_568 * _562) - (_574 * _556);
        float _1020 = (_571 * _556) - (_568 * _559);
        float _1046 = ((log2((((float(_997.y) * 0.5) * float(_997.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1017 * _1017) + (_1020 * _1020)) + (_1014 * _1014)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1008 * gl_WorldRayDirectionEXT.x, _1008 * gl_WorldRayDirectionEXT.y, _1008 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1048 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    }
    else
    {
        _1048 = 0.0;
    }
    vec4 _1050 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[17u].x * _575) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _576) + cbTextureTilingScale._m0[17u].w), _1048);
    float _1063 = (((((1.0 - _883.y) * 2.0) - _960) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].z) + 1.0;
    float _2297 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _1064 = isnan(1.0) ? _2297 : (isnan(_2297) ? 1.0 : min(_2297, 1.0));
    float _1071 = (((_1050.x * cbMtdParam._m0[12u].x) - _978) * _1064) + _978;
    float _1072 = (_1064 * ((_1050.y * cbMtdParam._m0[12u].y) - _979)) + _979;
    float _1073 = (_1064 * ((_1050.z * cbMtdParam._m0[12u].z) - _980)) + _980;
    uvec2 _1090 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11, int(0u)));
    float _1141;
    if (_675)
    {
        float _1101 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1107 = (_574 * _559) - (_571 * _562);
        float _1110 = (_568 * _562) - (_574 * _556);
        float _1113 = (_571 * _556) - (_568 * _559);
        float _1139 = ((log2((((float(_1090.y) * 0.5) * float(_1090.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1110 * _1110) + (_1113 * _1113)) + (_1107 * _1107)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1101 * gl_WorldRayDirectionEXT.x, _1101 * gl_WorldRayDirectionEXT.y, _1101 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1141 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    }
    else
    {
        _1141 = 0.0;
    }
    vec4 _1143 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _1141);
    float _1156 = (((((1.0 - _883.z) * 2.0) - _960) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].w) + 1.0;
    float _2313 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    float _1157 = isnan(1.0) ? _2313 : (isnan(_2313) ? 1.0 : min(_2313, 1.0));
    float _1164 = (((_1143.x * cbMtdParam._m0[13u].x) - _1071) * _1157) + _1071;
    float _1165 = (_1157 * ((_1143.y * cbMtdParam._m0[13u].y) - _1072)) + _1072;
    float _1166 = (_1157 * ((_1143.z * cbMtdParam._m0[13u].z) - _1073)) + _1073;
    uvec2 _1179 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14, int(0u)));
    float _1230;
    if (_675)
    {
        float _1190 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1196 = (_574 * _559) - (_571 * _562);
        float _1199 = (_568 * _562) - (_574 * _556);
        float _1202 = (_571 * _556) - (_568 * _559);
        float _1228 = ((log2((((float(_1179.y) * 0.5) * float(_1179.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1199 * _1199) + (_1202 * _1202)) + (_1196 * _1196)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1190 * gl_WorldRayDirectionEXT.x, _1190 * gl_WorldRayDirectionEXT.y, _1190 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1230 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
    }
    else
    {
        _1230 = 0.0;
    }
    vec4 _1232 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _656) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _658) + cbTextureTilingScale._m0[5u].w), _1230);
    float _1234 = _1232.x;
    uvec2 _1246 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17, int(0u)));
    float _1297;
    if (_675)
    {
        float _1257 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1263 = (_574 * _559) - (_571 * _562);
        float _1266 = (_568 * _562) - (_574 * _556);
        float _1269 = (_571 * _556) - (_568 * _559);
        float _1295 = ((log2((((float(_1246.y) * 0.5) * float(_1246.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1266 * _1266) + (_1269 * _1269)) + (_1263 * _1263)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1257 * gl_WorldRayDirectionEXT.x, _1257 * gl_WorldRayDirectionEXT.y, _1257 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1297 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
    }
    else
    {
        _1297 = 0.0;
    }
    float _1304 = ((textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _575) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _576) + cbTextureTilingScale._m0[8u].w), _1297).x - _1234) * _971) + _1234;
    uvec2 _1317 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18, int(0u)));
    float _1368;
    if (_675)
    {
        float _1328 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1334 = (_574 * _559) - (_571 * _562);
        float _1337 = (_568 * _562) - (_574 * _556);
        float _1340 = (_571 * _556) - (_568 * _559);
        float _1366 = ((log2((((float(_1317.y) * 0.5) * float(_1317.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1337 * _1337) + (_1340 * _1340)) + (_1334 * _1334)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1328 * gl_WorldRayDirectionEXT.x, _1328 * gl_WorldRayDirectionEXT.y, _1328 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1368 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
    }
    else
    {
        _1368 = 0.0;
    }
    float _1375 = ((textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _575) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _576) + cbTextureTilingScale._m0[9u].w), _1368).x - _1304) * _1064) + _1304;
    uvec2 _1387 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19, int(0u)));
    float _1438;
    if (_675)
    {
        float _1398 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1404 = (_574 * _559) - (_571 * _562);
        float _1407 = (_568 * _562) - (_574 * _556);
        float _1410 = (_571 * _556) - (_568 * _559);
        float _1436 = ((log2((((float(_1387.y) * 0.5) * float(_1387.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1407 * _1407) + (_1410 * _1410)) + (_1404 * _1404)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1398 * gl_WorldRayDirectionEXT.x, _1398 * gl_WorldRayDirectionEXT.y, _1398 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1438 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    }
    else
    {
        _1438 = 0.0;
    }
    float _1447 = (((textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _575) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _576) + cbTextureTilingScale._m0[10u].w), _1438).x - _1375) * _1157) + _1375) * cbMtdParam._m0[18u].y;
    uvec2 _1460 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5, int(0u)));
    float _1511;
    if (_675)
    {
        float _1471 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1477 = (_574 * _559) - (_571 * _562);
        float _1480 = (_568 * _562) - (_574 * _556);
        float _1483 = (_571 * _556) - (_568 * _559);
        float _1509 = ((log2((((float(_1460.y) * 0.5) * float(_1460.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1480 * _1480) + (_1483 * _1483)) + (_1477 * _1477)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1471 * gl_WorldRayDirectionEXT.x, _1471 * gl_WorldRayDirectionEXT.y, _1471 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1511 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    }
    else
    {
        _1511 = 0.0;
    }
    vec4 _1514 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _656) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _658) + cbTextureTilingScale._m0[14u].w), _1511);
    float _1516 = _1514.x;
    float _1517 = _1514.y;
    float _1520 = cbMtdParam._m0[17u].y * _1514.z;
    uvec2 _1532 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6, int(0u)));
    float _1583;
    if (_675)
    {
        float _1543 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1549 = (_574 * _559) - (_571 * _562);
        float _1552 = (_568 * _562) - (_574 * _556);
        float _1555 = (_571 * _556) - (_568 * _559);
        float _1581 = ((log2((((float(_1532.y) * 0.5) * float(_1532.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1552 * _1552) + (_1555 * _1555)) + (_1549 * _1549)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1543 * gl_WorldRayDirectionEXT.x, _1543 * gl_WorldRayDirectionEXT.y, _1543 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1583 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
    }
    else
    {
        _1583 = 0.0;
    }
    vec4 _1585 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _575) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _576) + cbTextureTilingScale._m0[15u].w), _1583);
    float _1594 = (((cbMtdParam._m0[17u].x * _1585.z) - _1520) * _971) + _1520;
    uvec2 _1606 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15, int(0u)));
    float _1657;
    if (_675)
    {
        float _1617 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1623 = (_574 * _559) - (_571 * _562);
        float _1626 = (_568 * _562) - (_574 * _556);
        float _1629 = (_571 * _556) - (_568 * _559);
        float _1655 = ((log2((((float(_1606.y) * 0.5) * float(_1606.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1626 * _1626) + (_1629 * _1629)) + (_1623 * _1623)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1617 * gl_WorldRayDirectionEXT.x, _1617 * gl_WorldRayDirectionEXT.y, _1617 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1657 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
    }
    else
    {
        _1657 = 0.0;
    }
    vec4 _1659 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _575) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _576) + cbTextureTilingScale._m0[6u].w), _1657);
    float _1670 = (((cbMtdParam._m0[16u].w * _1659.z) - _1594) * _1064) + _1594;
    uvec2 _1682 = uvec2(textureSize(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16, int(0u)));
    float _1686 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1687 = _1686 * gl_WorldRayDirectionEXT.x;
    float _1688 = _1686 * gl_WorldRayDirectionEXT.y;
    float _1689 = _1686 * gl_WorldRayDirectionEXT.z;
    float _1733;
    if (_675)
    {
        float _1699 = (_574 * _559) - (_571 * _562);
        float _1702 = (_568 * _562) - (_574 * _556);
        float _1705 = (_571 * _556) - (_568 * _559);
        float _1731 = ((log2((((float(_1682.y) * 0.5) * float(_1682.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1702 * _1702) + (_1705 * _1705)) + (_1699 * _1699)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1687, _1688, _1689), vec3(_587, _589, _590))));
        _1733 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
    }
    else
    {
        _1733 = 0.0;
    }
    vec4 _1735 = textureLod(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _575) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _576) + cbTextureTilingScale._m0[7u].w), _1733);
    float _1744 = (((cbMtdParam._m0[16u].z * _1735.z) - _1670) * _1157) + _1670;
    float _1749 = ((_1585.x - _1516) * _971) + _1516;
    float _1750 = ((_1585.y - _1517) * _971) + _1517;
    float _1755 = ((_1659.x - _1749) * _1064) + _1749;
    float _1756 = ((_1659.y - _1750) * _1064) + _1750;
    float _1765 = ((((_1735.x - _1755) * _1157) + _1755) * 2.0) + (-1.0);
    float _1767 = ((((_1735.y - _1756) * _1157) + _1756) * 2.0) + (-1.0);
    float _1768 = dot(vec2(_1765, _1767), vec2(_1765, _1767));
    float _2364 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
    float _1773 = sqrt(1.0 - (isnan(1.0) ? _2364 : (isnan(_2364) ? 1.0 : min(_2364, 1.0))));
    float _1776 = fma(_1773, _587, fma(_1767, _603, (_622 * _616) * _1765));
    float _1779 = fma(_1773, _589, fma(_1767, _604, (_622 * _617) * _1765));
    float _1782 = fma(_1773, _590, fma(_1767, _605, (_622 * _618) * _1765));
    float _1786 = inversesqrt(dot(vec3(_1776, _1779, _1782), vec3(_1776, _1779, _1782)));
    float _1787 = _1786 * _1776;
    float _1788 = _1786 * _1779;
    float _1789 = _1786 * _1782;
    float _1801 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1802 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1803 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1804 = (-0.0) - _1687;
    float _1805 = (-0.0) - _1688;
    float _1806 = (-0.0) - _1689;
    float _1812 = float(gl_LaunchIDEXT.x);
    float _1813 = float(gl_LaunchIDEXT.y);
    float _1816 = float(gl_LaunchSizeEXT.x);
    float _1830 = fract(fract(sin(dot(vec2(_1812 / _1816, _1813 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1843 = fract(fract(sin(dot(vec2((_1812 + 128.0) / _1816, (_1813 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1844 = 1.0 - _1447;
    float _1845 = _1844 * _1164;
    float _1846 = _1844 * _1165;
    float _1847 = _1844 * _1166;
    float _1852 = _1447 * (_1164 + (-0.039999999105930328369140625));
    float _1853 = _1447 * (_1165 + (-0.039999999105930328369140625));
    float _1854 = _1447 * (_1166 + (-0.039999999105930328369140625));
    float _1855 = _1852 + 0.039999999105930328369140625;
    float _1857 = _1853 + 0.039999999105930328369140625;
    float _1858 = _1854 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1868 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1869 = _1868.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1869, _1868.w, _1869, vec3(_1801, _1802, _1803), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1983;
    float _1984;
    float _1985;
    float _1986;
    float _1987;
    float _1988;
    if (_74._m0 == 0u)
    {
        float _1889 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1787, _1788, _1789));
        float _2375 = isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0));
        float _1892 = isnan(1.0) ? _2375 : (isnan(_2375) ? 1.0 : min(_2375, 1.0));
        float _1911 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1744) * 0.949999988079071044921875);
        float _1912 = _1911 * _1911;
        float _1913 = g_sceneCB._m0[4u].x - _1687;
        float _1914 = g_sceneCB._m0[4u].y - _1688;
        float _1915 = g_sceneCB._m0[4u].z - _1689;
        float _1919 = inversesqrt(dot(vec3(_1913, _1914, _1915), vec3(_1913, _1914, _1915)));
        float _1920 = _1919 * _1913;
        float _1921 = _1919 * _1914;
        float _1922 = _1919 * _1915;
        float _1923 = dot(vec3(_1787, _1788, _1789), vec3(g_sceneCB._m0[4u].xyz));
        float _2386 = isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0));
        float _1926 = isnan(1.0) ? _2386 : (isnan(_2386) ? 1.0 : min(_2386, 1.0));
        float _1927 = dot(vec3(_1787, _1788, _1789), vec3(_1804, _1805, _1806));
        float _2397 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
        float _1930 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        float _1931 = dot(vec3(_1787, _1788, _1789), vec3(_1920, _1921, _1922));
        float _2408 = isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0));
        float _1934 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
        float _1935 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1920, _1921, _1922));
        float _2419 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _1939 = _1912 * _1912;
        float _1943 = ((_1934 * _1934) * (_1939 + (-1.0))) + 1.0;
        float _1952 = exp2(log2(1.0 - (isnan(1.0) ? _2419 : (isnan(_2419) ? 1.0 : min(_2419, 1.0)))) * 5.0);
        float _1963 = 1.0 - _1912;
        float _1974 = (0.5 / (((_1930 * ((_1926 * _1963) + _1912)) + 9.9999999392252902907785028219223e-09) + (((_1930 * _1963) + _1912) * _1926))) * _1926;
        float _2430 = isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0));
        float _1976 = (isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0))) * (_1939 / ((_1943 * _1943) * 3.141590118408203125));
        _1983 = ((_1845 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1892;
        _1984 = ((_1846 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1892;
        _1985 = ((_1847 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1892;
        _1986 = (((_1952 * (0.959999978542327880859375 - _1852)) + _1855) * g_sceneCB._m0[5u].x) * _1976;
        _1987 = (((_1952 * (0.959999978542327880859375 - _1853)) + _1857) * g_sceneCB._m0[5u].y) * _1976;
        _1988 = (((_1952 * (0.959999978542327880859375 - _1854)) + _1858) * g_sceneCB._m0[5u].z) * _1976;
    }
    else
    {
        _1983 = 0.0;
        _1984 = 0.0;
        _1985 = 0.0;
        _1986 = 0.0;
        _1987 = 0.0;
        _1988 = 0.0;
    }
    bool _1990 = abs(_1788) < 0.89999997615814208984375;
    float _1992 = float(_1990);
    float _1993 = _1990 ? 0.0 : 1.0;
    float _1996 = (_1992 * _1789) - (_1993 * _1788);
    float _1997 = _1993 * _1787;
    float _1999 = (-0.0) - (_1787 * _1992);
    float _2003 = inversesqrt(dot(vec3(_1996, _1997, _1999), vec3(_1996, _1997, _1999)));
    float _2004 = _1996 * _2003;
    float _2005 = _1997 * _2003;
    float _2006 = _2003 * _1999;
    float _2009 = (_2005 * _1789) - (_2006 * _1788);
    float _2012 = (_2006 * _1787) - (_2004 * _1789);
    float _2015 = (_2004 * _1788) - (_2005 * _1787);
    float _2017;
    float _2025;
    float _2016 = 0.0;
    uint _2018 = 0u;
    float _2022;
    bool _2024;
    for (;;)
    {
        _2022 = (float(_2018) + _1830) * 0.03125;
        _2024 = _2018 == 0u;
        float frontier_phi_67_pred;
        if (_2024)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2166;
            float _2167;
            uint _2169;
            _2166 = 0.0;
            _2167 = 0.5;
            _2169 = _2018;
            float _2026;
            for (;;)
            {
                _2026 = ((_2169 & 1u) != 0u) ? (_2167 + _2166) : _2166;
                uint _2170 = _2169 >> 1u;
                if (_2170 == 0u)
                {
                    break;
                }
                else
                {
                    _2166 = _2026;
                    _2167 *= 0.5;
                    _2169 = _2170;
                }
            }
            frontier_phi_67_pred = _2026;
        }
        _2025 = frontier_phi_67_pred;
        float _2027 = _2025 + _1843;
        float _2031 = sqrt(_2022);
        float _2032 = ((_2027 > 1.0) ? (_2027 + (-1.0)) : _2027) * 6.283185482025146484375;
        float _2035 = cos(_2032) * _2031;
        float _2037 = sin(_2032) * _2031;
        float _2039 = sqrt(1.0 - _2022);
        float _2052 = ((_2039 * _1787) + (_2035 * _2009)) + (_2037 * _2004);
        float _2053 = ((_2039 * _1788) + (_2035 * _2012)) + (_2037 * _2005);
        float _2054 = ((_2039 * _1789) + (_2035 * _2015)) + (_2037 * _2006);
        _73._m0 = 1u;
        uvec4 _2058 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2059 = _2058.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2059, _2058.w, _2059, vec3(_1801, _1802, _1803), 9.9999997473787516355514526367188e-05, vec3(_2052, _2053, _2054), 10000.0, 1);
        float _2065 = dot(vec3(_1787, _1788, _1789), vec3(_2052, _2053, _2054));
        float _2441 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
        float _2068 = isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0));
        _2017 = ((float(_73._m0 == 0u) * _2068) / (_2068 * 0.3183098733425140380859375)) + _2016;
        uint _2019 = _2018 + 1u;
        if (_2019 == 32u)
        {
            break;
        }
        else
        {
            _2016 = _2017;
            _2018 = _2019;
            continue;
        }
    }
    float _2076 = _2017 * 0.009947183541953563690185546875;
    float _2081 = dot(vec3(_1687, _1688, _1689), vec3(_1787, _1788, _1789)) * 2.0;
    vec4 _2095 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1687 - (_2081 * _1787), _1688 - (_2081 * _1788), _1689 - (_2081 * _1789)), 4.0 - (_1744 * 4.0));
    float _2100 = dot(vec3(_1804, _1805, _1806), vec3(_1787, _1788, _1789));
    float _2452 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
    float _2110 = exp2(log2(1.0 - (isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0)))) * 5.0);
    vec4 _2122 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1787, _1788, _1789), 0.0);
    float _2133 = (_1986 + _1983) + (((_2122.x * _1845) + (((_2110 * (0.959999978542327880859375 - _1852)) + _1855) * _2095.x)) * _2076);
    float _2137 = (_1987 + _1984) + (((_2122.y * _1846) + (((_2110 * (0.959999978542327880859375 - _1853)) + _1857) * _2095.y)) * _2076);
    float _2141 = (_1988 + _1985) + (((_2122.z * _1847) + (((_2110 * (0.959999978542327880859375 - _1854)) + _1858) * _2095.z)) * _2076);
    float _2463 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _2474 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
    float _2485 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
    bool _2149 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2160;
    _2160.x = _2149 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2463 : (isnan(_2463) ? 1.0 : min(_2463, 1.0)));
    _2160.y = _2149 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2474 : (isnan(_2474) ? 1.0 : min(_2474, 1.0)));
    _2160.z = _2149 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0)));
    payload._m0 = _2160;
}


