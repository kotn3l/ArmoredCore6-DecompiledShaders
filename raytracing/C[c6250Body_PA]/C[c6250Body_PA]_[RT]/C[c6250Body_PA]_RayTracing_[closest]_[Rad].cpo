#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _2151;

void main()
{
    float _89 = float(gl_LaunchSizeEXT.y);
    float _117 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _119 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _126 = sqrt(((_118 * _118) + (_117 * _117)) + (_119 * _119)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _89)))));
    uvec4 _137 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _138 = _137.y;
    uint _178;
    uint _180;
    uint _181;
    if (_137.x == 0u)
    {
        uint _146 = (_138 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _155 = uvec3(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_146 + 2u)).x);
        _178 = _155.x;
        _180 = _155.y;
        _181 = _155.z;
    }
    else
    {
        uint _159 = uint(gl_PrimitiveID) * 6u;
        uint _161 = _159 & 4294967292u;
        uint _164 = (_138 + _161) >> 2u;
        uvec2 _171 = uvec2(texelFetch(l_geomIndexBuffer, int(_164)).x, texelFetch(l_geomIndexBuffer, int(_164 + 1u)).x);
        uint _172 = _171.x;
        uint _173 = _171.y;
        uint _175 = _172 >> 16u;
        uint _176 = _173 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_161 == _159)
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _172 & 65535u;
            frontier_phi_3_2_ladder_2 = _176;
        }
        else
        {
            frontier_phi_3_2_ladder = _176;
            frontier_phi_3_2_ladder_1 = _175;
            frontier_phi_3_2_ladder_2 = _173 >> 16u;
        }
        _178 = frontier_phi_3_2_ladder_1;
        _180 = frontier_phi_3_2_ladder;
        _181 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _185 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _186 = _185.x;
    uint _187 = _185.z;
    bool _188 = _187 != 0u;
    bool _190 = _137.w == 0u;
    bool _191 = _188 || _190;
    uint _192 = _186 * _178;
    uint _193 = _192 + 12u;
    uint _217;
    uint _218;
    uint _219;
    uint _220;
    if (_191)
    {
        uvec4 _196 = texelFetch(l_geomAttrib_0, int(_193 >> 2u));
        uint _197 = _196.x;
        _217 = _197 & 255u;
        _218 = (_197 >> 8u) & 255u;
        _219 = (_197 >> 16u) & 255u;
        _220 = 16u;
    }
    else
    {
        uint _205 = _193 >> 2u;
        uvec2 _211 = uvec2(texelFetch(l_geomAttrib_0, int(_205)).x, texelFetch(l_geomAttrib_0, int(_205 + 1u)).x);
        uint _212 = _211.x;
        _217 = _212 & 65535u;
        _218 = _212 >> 16u;
        _219 = _211.y & 65535u;
        _220 = 20u;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((_220 + _192) >> 2u));
    uint _229 = _228.x;
    bool _243 = _187 == 0u;
    uint _244;
    if (_243)
    {
        _244 = _220 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_190)
        {
            frontier_phi_9_10_ladder = _220 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _220 + 12u;
        }
        _244 = frontier_phi_9_10_ladder;
    }
    uint _248 = _188 ? (_244 + 4u) : _244;
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_192 + 4u) + _248) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uvec4 _276 = texelFetch(l_geomAttrib_0, int(((_192 + 20u) + _248) >> 2u));
    uint _277 = _276.x;
    uvec4 _289 = texelFetch(l_geomAttrib_0, int(((_192 + 24u) + _248) >> 2u));
    uint _290 = _289.x;
    uint _299 = _186 * _180;
    uint _300 = _299 + 12u;
    uint _321;
    uint _322;
    uint _323;
    uint _324;
    if (_191)
    {
        uvec4 _302 = texelFetch(l_geomAttrib_0, int(_300 >> 2u));
        uint _303 = _302.x;
        _321 = _303 & 255u;
        _322 = (_303 >> 8u) & 255u;
        _323 = (_303 >> 16u) & 255u;
        _324 = 16u;
    }
    else
    {
        uint _309 = _300 >> 2u;
        uvec2 _315 = uvec2(texelFetch(l_geomAttrib_0, int(_309)).x, texelFetch(l_geomAttrib_0, int(_309 + 1u)).x);
        uint _316 = _315.x;
        _321 = _316 & 65535u;
        _322 = _316 >> 16u;
        _323 = _315.y & 65535u;
        _324 = 20u;
    }
    uvec4 _330 = texelFetch(l_geomAttrib_0, int((_324 + _299) >> 2u));
    uint _331 = _330.x;
    uint _343;
    if (_243)
    {
        _343 = _324 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_190)
        {
            frontier_phi_16_17_ladder = _324 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _324 + 12u;
        }
        _343 = frontier_phi_16_17_ladder;
    }
    uint _347 = _188 ? (_343 + 4u) : _343;
    uvec4 _351 = texelFetch(l_geomAttrib_0, int(((_299 + 4u) + _347) >> 2u));
    uint _352 = _351.x;
    float _356 = float(int(uint(int(_352 << 16u) >> int(16u))));
    float _357 = float(int(uint(int(_352) >> int(16u))));
    uvec4 _375 = texelFetch(l_geomAttrib_0, int(((_299 + 20u) + _347) >> 2u));
    uint _376 = _375.x;
    uvec4 _388 = texelFetch(l_geomAttrib_0, int(((_299 + 24u) + _347) >> 2u));
    uint _389 = _388.x;
    uint _398 = _186 * _181;
    uint _399 = _398 + 12u;
    uint _420;
    uint _421;
    uint _422;
    uint _423;
    if (_191)
    {
        uvec4 _401 = texelFetch(l_geomAttrib_0, int(_399 >> 2u));
        uint _402 = _401.x;
        _420 = _402 & 255u;
        _421 = (_402 >> 8u) & 255u;
        _422 = (_402 >> 16u) & 255u;
        _423 = 16u;
    }
    else
    {
        uint _408 = _399 >> 2u;
        uvec2 _414 = uvec2(texelFetch(l_geomAttrib_0, int(_408)).x, texelFetch(l_geomAttrib_0, int(_408 + 1u)).x);
        uint _415 = _414.x;
        _420 = _415 & 65535u;
        _421 = _415 >> 16u;
        _422 = _414.y & 65535u;
        _423 = 20u;
    }
    uvec4 _429 = texelFetch(l_geomAttrib_0, int((_423 + _398) >> 2u));
    uint _430 = _429.x;
    uint _442;
    if (_243)
    {
        _442 = _423 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_190)
        {
            frontier_phi_23_24_ladder = _423 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _423 + 12u;
        }
        _442 = frontier_phi_23_24_ladder;
    }
    uint _446 = _188 ? (_442 + 4u) : _442;
    uvec4 _450 = texelFetch(l_geomAttrib_0, int(((_398 + 4u) + _446) >> 2u));
    uint _451 = _450.x;
    float _455 = float(int(uint(int(_451 << 16u) >> int(16u))));
    float _456 = float(int(uint(int(_451) >> int(16u))));
    uvec4 _474 = texelFetch(l_geomAttrib_0, int(((_398 + 20u) + _446) >> 2u));
    uint _475 = _474.x;
    uvec4 _487 = texelFetch(l_geomAttrib_0, int(((_398 + 24u) + _446) >> 2u));
    uint _488 = _487.x;
    bool _498 = _137.z == 0u;
    float _534;
    float _535;
    float _536;
    if (_498)
    {
        uint _501 = _178 * 3u;
        uvec3 _510 = uvec3(texelFetch(l_geomPositionBuffer, int(_501)).x, texelFetch(l_geomPositionBuffer, int(_501 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_501 + 2u)).x);
        _534 = uintBitsToFloat(_510.x);
        _535 = uintBitsToFloat(_510.y);
        _536 = uintBitsToFloat(_510.z);
    }
    else
    {
        uint _518 = _178 * 2u;
        uvec2 _524 = uvec2(texelFetch(l_geomPositionBuffer, int(_518)).x, texelFetch(l_geomPositionBuffer, int(_518 + 1u)).x);
        uint _525 = _524.x;
        _534 = unpackHalf2x16(_525).x;
        _535 = unpackHalf2x16(_525 >> 16u).x;
        _536 = unpackHalf2x16(_524.y).x;
    }
    float _572;
    float _573;
    float _574;
    if (_498)
    {
        uint _539 = _180 * 3u;
        uvec3 _548 = uvec3(texelFetch(l_geomPositionBuffer, int(_539)).x, texelFetch(l_geomPositionBuffer, int(_539 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_539 + 2u)).x);
        _572 = uintBitsToFloat(_548.x);
        _573 = uintBitsToFloat(_548.y);
        _574 = uintBitsToFloat(_548.z);
    }
    else
    {
        uint _556 = _180 * 2u;
        uvec2 _562 = uvec2(texelFetch(l_geomPositionBuffer, int(_556)).x, texelFetch(l_geomPositionBuffer, int(_556 + 1u)).x);
        uint _563 = _562.x;
        _572 = unpackHalf2x16(_563).x;
        _573 = unpackHalf2x16(_563 >> 16u).x;
        _574 = unpackHalf2x16(_562.y).x;
    }
    float _610;
    float _611;
    float _612;
    if (_498)
    {
        uint _577 = _181 * 3u;
        uvec3 _586 = uvec3(texelFetch(l_geomPositionBuffer, int(_577)).x, texelFetch(l_geomPositionBuffer, int(_577 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_577 + 2u)).x);
        _610 = uintBitsToFloat(_586.x);
        _611 = uintBitsToFloat(_586.y);
        _612 = uintBitsToFloat(_586.z);
    }
    else
    {
        uint _594 = _181 * 2u;
        uvec2 _600 = uvec2(texelFetch(l_geomPositionBuffer, int(_594)).x, texelFetch(l_geomPositionBuffer, int(_594 + 1u)).x);
        uint _601 = _600.x;
        _610 = unpackHalf2x16(_601).x;
        _611 = unpackHalf2x16(_601 >> 16u).x;
        _612 = unpackHalf2x16(_600.y).x;
    }
    float _615 = (1.0 - hit._m0.x) - hit._m0.y;
    float _652 = (((float(texelFetch(l_geomAttrib_0, int(((_299 + 8u) + _347) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_192 + 8u) + _248) >> 2u)).x & 255u) * _615)) + (float(texelFetch(l_geomAttrib_0, int(((_398 + 8u) + _446) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _659 = (((float(texelFetch(l_geomAttrib_0, int(((_299 + 12u) + _347) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_192 + 12u) + _248) >> 2u)).x & 255u) * _615)) + (float(texelFetch(l_geomAttrib_0, int(((_398 + 12u) + _446) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _695 = (_356 - _257) * 0.00048828125;
    float _697 = (_357 - _258) * 0.00048828125;
    float _700 = (_455 - _257) * 0.00048828125;
    float _701 = (_456 - _258) * 0.00048828125;
    float _723 = _572 - _534;
    float _724 = _573 - _535;
    float _725 = _574 - _536;
    float _728 = fma(_725, gl_ObjectToWorldEXT[2u].x, fma(_724, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _723));
    float _731 = fma(_725, gl_ObjectToWorldEXT[2u].y, fma(_724, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _723));
    float _734 = fma(_725, gl_ObjectToWorldEXT[2u].z, fma(_724, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _723));
    float _735 = _610 - _534;
    float _736 = _611 - _535;
    float _737 = _612 - _536;
    float _740 = fma(_737, gl_ObjectToWorldEXT[2u].x, fma(_736, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _735));
    float _743 = fma(_737, gl_ObjectToWorldEXT[2u].y, fma(_736, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _735));
    float _746 = fma(_737, gl_ObjectToWorldEXT[2u].z, fma(_736, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _735));
    float _747 = (((_356 * hit._m0.x) + (_257 * _615)) + (_455 * hit._m0.y)) * 0.00048828125;
    float _748 = (((_357 * hit._m0.x) + (_258 * _615)) + (_456 * hit._m0.y)) * 0.00048828125;
    float _752 = (((float(_217) * _615) + (-127.0)) + (float(_321) * hit._m0.x)) + (float(_420) * hit._m0.y);
    float _755 = (((float(_218) * _615) + (-127.0)) + (float(_322) * hit._m0.x)) + (float(_421) * hit._m0.y);
    float _758 = (((float(_219) * _615) + (-127.0)) + (float(_323) * hit._m0.x)) + (float(_422) * hit._m0.y);
    float _759 = _752 * 0.0078740157186985015869140625;
    float _761 = _755 * 0.0078740157186985015869140625;
    float _762 = _758 * 0.0078740157186985015869140625;
    float _775 = ((((float(_229 & 255u) * _615) + (-127.0)) + (float(_331 & 255u) * hit._m0.x)) + (float(_430 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _776 = ((((float((_229 >> 8u) & 255u) * _615) + (-127.0)) + (float((_331 >> 8u) & 255u) * hit._m0.x)) + (float((_430 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _777 = ((((float((_229 >> 16u) & 255u) * _615) + (-127.0)) + (float((_331 >> 16u) & 255u) * hit._m0.x)) + (float((_430 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _778 = ((((float(_229 >> 24u) * _615) + (-127.0)) + (float(_331 >> 24u) * hit._m0.x)) + (float(_430 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _788 = ((_776 * _762) - (_777 * _761)) * _778;
    float _789 = ((_777 * _759) - (_775 * _762)) * _778;
    float _790 = ((_775 * _761) - (_776 * _759)) * _778;
    float _794 = inversesqrt(dot(vec3(_788, _789, _790), vec3(_788, _789, _790)));
    uvec2 _815 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_13, int(0u)));
    bool _820 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _873;
    if (_820)
    {
        float _831 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _837 = (_746 * _731) - (_743 * _734);
        float _840 = (_740 * _734) - (_746 * _728);
        float _843 = (_743 * _728) - (_740 * _731);
        float _870 = ((log2((((float(_815.y) * 0.5) * float(_815.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_840 * _840) + (_843 * _843)) + (_837 * _837)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_831 * gl_WorldRayDirectionEXT.x, _831 * gl_WorldRayDirectionEXT.y, _831 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _873 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    }
    else
    {
        _873 = 0.0;
    }
    vec4 _877 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _747) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _748) + cbTextureTilingScale._m0[3u].w), _873);
    float _882 = _877.x * cbMtdParam._m0[9u].x;
    float _883 = _877.y * cbMtdParam._m0[9u].y;
    float _884 = _877.z * cbMtdParam._m0[9u].z;
    uvec2 _908 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_9, int(0u)));
    float _959;
    if (_820)
    {
        float _919 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _925 = (_746 * _731) - (_743 * _734);
        float _928 = (_740 * _734) - (_746 * _728);
        float _931 = (_743 * _728) - (_740 * _731);
        float _957 = ((log2((((float(_908.y) * 0.5) * float(_908.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_928 * _928) + (_931 * _931)) + (_925 * _925)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_919 * gl_WorldRayDirectionEXT.x, _919 * gl_WorldRayDirectionEXT.y, _919 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _959 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    }
    else
    {
        _959 = 0.0;
    }
    uvec2 _977 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_25, int(0u)));
    float _1028;
    if (_820)
    {
        float _988 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _994 = (_746 * _731) - (_743 * _734);
        float _997 = (_740 * _734) - (_746 * _728);
        float _1000 = (_743 * _728) - (_740 * _731);
        float _1026 = ((log2((((float(_977.y) * 0.5) * float(_977.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_997 * _997) + (_1000 * _1000)) + (_994 * _994)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_988 * gl_WorldRayDirectionEXT.x, _988 * gl_WorldRayDirectionEXT.y, _988 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1028 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    }
    else
    {
        _1028 = 0.0;
    }
    float _1034 = ((((float(_389 & 255u) * hit._m0.x) + (float(_290 & 255u) * _615)) + (float(_488 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[20u].w;
    uvec2 _1049 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_5, int(0u)));
    float _1100;
    if (_820)
    {
        float _1060 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1066 = (_746 * _731) - (_743 * _734);
        float _1069 = (_740 * _734) - (_746 * _728);
        float _1072 = (_743 * _728) - (_740 * _731);
        float _1098 = ((log2((((float(_1049.y) * 0.5) * float(_1049.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1069 * _1069) + (_1072 * _1072)) + (_1066 * _1066)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1060 * gl_WorldRayDirectionEXT.x, _1060 * gl_WorldRayDirectionEXT.y, _1060 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1100 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    }
    else
    {
        _1100 = 0.0;
    }
    vec4 _1103 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _747) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _748) + cbTextureTilingScale._m0[14u].w), _1100);
    uvec2 _1120 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_7, int(0u)));
    float _1171;
    if (_820)
    {
        float _1131 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1137 = (_746 * _731) - (_743 * _734);
        float _1140 = (_740 * _734) - (_746 * _728);
        float _1143 = (_743 * _728) - (_740 * _731);
        float _1169 = ((log2((((float(_1120.y) * 0.5) * float(_1120.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1140 * _1140) + (_1143 * _1143)) + (_1137 * _1137)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1131 * gl_WorldRayDirectionEXT.x, _1131 * gl_WorldRayDirectionEXT.y, _1131 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1171 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
    }
    else
    {
        _1171 = 0.0;
    }
    vec4 _1173 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _747) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _748) + cbTextureTilingScale._m0[15u].w), _1171);
    float _1175 = _1173.x;
    float _1176 = _1173.y;
    float _1177 = _1173.z;
    float _1185 = (_652 - ((cbMtdParam._m0[17u].z * (1.0 - _652)) * (textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * _747) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _748) + cbTextureTilingScale._m0[16u].w), _959).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[17u].w + 1.0);
    float _2266 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
    float _1186 = isnan(1.0) ? _2266 : (isnan(_2266) ? 1.0 : min(_2266, 1.0));
    float _1195 = ((_1103.z - _1177) * _1186) + _1177;
    float _1198 = ((((_1103.x - _1175) * _1186) + _1175) * 2.0) + (-1.0);
    float _1200 = ((((_1103.y - _1176) * _1186) + _1176) * 2.0) + (-1.0);
    float _1201 = dot(vec2(_1198, _1200), vec2(_1198, _1200));
    float _2277 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    float _1206 = sqrt(1.0 - (isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0))));
    float _1225 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _1228 = (_1225 * cbMtdParam._m0[24u].y) + _747;
    float _1229 = (_1225 * cbMtdParam._m0[24u].z) + _748;
    uvec2 _1253 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_21, int(0u)));
    float _1304;
    if (_820)
    {
        float _1264 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1270 = (_746 * _731) - (_743 * _734);
        float _1273 = (_740 * _734) - (_746 * _728);
        float _1276 = (_743 * _728) - (_740 * _731);
        float _1302 = ((log2((((float(_1253.y) * 0.5) * float(_1253.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1273 * _1273) + (_1276 * _1276)) + (_1270 * _1270)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1264 * gl_WorldRayDirectionEXT.x, _1264 * gl_WorldRayDirectionEXT.y, _1264 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1304 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
    }
    else
    {
        _1304 = 0.0;
    }
    vec4 _1306 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + _747)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + _748)) + cbTextureTilingScale._m0[7u].w), _1304);
    float _1310 = cbPerFrame._m0[22u].x * 2.0;
    float _1311 = _1310 * cbMtdParam._m0[22u].y;
    float _1317 = ((_1306.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _1319 = (-0.0) - (cbMtdParam._m0[22u].x * ((_1306.x * 0.5) + (-0.25)));
    float _1321 = fract(_1311);
    float _1323 = fract(_1311 + 0.5);
    float _1334 = abs((_1321 * 2.0) + (-1.0));
    vec4 _1351 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_1321 * _1319) + _1228) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_1317 * _1321) + _1229) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w), 0.0);
    float _1353 = _1351.x;
    float _1354 = _1351.y;
    float _1355 = _1351.z;
    vec4 _1356 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_1323 * _1319) + _1228) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_1317 * _1323) + _1229) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w), 0.0);
    float _1394 = (cbMtdParam._m0[23u].y * _1225) + _747;
    float _1395 = (cbMtdParam._m0[23u].z * _1225) + _748;
    float _1406 = (cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + _747)) + cbTextureTilingScale._m0[7u].z;
    float _1407 = (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + _748)) + cbTextureTilingScale._m0[7u].w;
    float _1458;
    if (_820)
    {
        float _1418 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1424 = (_746 * _731) - (_743 * _734);
        float _1427 = (_740 * _734) - (_746 * _728);
        float _1430 = (_743 * _728) - (_740 * _731);
        float _1456 = ((log2((((float(_1253.y) * 0.5) * float(_1253.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1427 * _1427) + (_1430 * _1430)) + (_1424 * _1424)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1418 * gl_WorldRayDirectionEXT.x, _1418 * gl_WorldRayDirectionEXT.y, _1418 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1458 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
    }
    else
    {
        _1458 = 0.0;
    }
    vec4 _1460 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2(_1406, _1407), _1458);
    float _1464 = _1310 * cbMtdParam._m0[18u].x;
    float _1469 = ((_1460.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _1471 = (-0.0) - (cbMtdParam._m0[20u].z * ((_1460.x * 0.5) + (-0.25)));
    float _1472 = fract(_1464);
    float _1474 = fract(_1464 + 0.5);
    float _1485 = abs((_1472 * 2.0) + (-1.0));
    vec4 _1502 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_1472 * _1471) + _1394) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1469 * _1472) + _1395) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1504 = _1502.x;
    float _1505 = _1502.y;
    float _1506 = _1502.z;
    vec4 _1507 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_1474 * _1471) + _1394) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1469 * _1474) + _1395) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1537 = (cbMtdParam._m0[22u].w * _1225) + _747;
    float _1538 = (cbMtdParam._m0[23u].x * _1225) + _748;
    float _1589;
    if (_820)
    {
        float _1549 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1555 = (_746 * _731) - (_743 * _734);
        float _1558 = (_740 * _734) - (_746 * _728);
        float _1561 = (_743 * _728) - (_740 * _731);
        float _1587 = ((log2((((float(_1253.y) * 0.5) * float(_1253.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1558 * _1558) + (_1561 * _1561)) + (_1555 * _1555)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1549 * gl_WorldRayDirectionEXT.x, _1549 * gl_WorldRayDirectionEXT.y, _1549 * gl_WorldRayDirectionEXT.z), vec3(_759, _761, _762))));
        _1589 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
    }
    else
    {
        _1589 = 0.0;
    }
    vec4 _1591 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2(_1406, _1407), _1589);
    float _1599 = ((_1591.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _1601 = (-0.0) - (cbMtdParam._m0[20u].z * ((_1591.x * 0.5) + (-0.25)));
    vec4 _1626 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1472 * _1601) + _1537) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_1599 * _1472) + _1538) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w), 0.0);
    float _1628 = _1626.x;
    float _1629 = _1626.y;
    float _1630 = _1626.z;
    vec4 _1631 = textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1474 * _1601) + _1537) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_1599 * _1474) + _1538) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w), 0.0);
    float _1651 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _2303 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
    float _1652 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
    float _1660 = (((_1652 * _1652) * (3.0 - (_1652 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    uvec2 _1684 = uvec2(textureSize(C_c6250Body_PA_snp_0_Texture2D_23, int(0u)));
    float _1688 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1689 = _1688 * gl_WorldRayDirectionEXT.x;
    float _1690 = _1688 * gl_WorldRayDirectionEXT.y;
    float _1691 = _1688 * gl_WorldRayDirectionEXT.z;
    float _1735;
    if (_820)
    {
        float _1701 = (_746 * _731) - (_743 * _734);
        float _1704 = (_740 * _734) - (_746 * _728);
        float _1707 = (_743 * _728) - (_740 * _731);
        float _1733 = ((log2((((float(_1684.y) * 0.5) * float(_1684.x)) * abs((_701 * _695) - (_700 * _697))) / (sqrt(((_1704 * _1704) + (_1707 * _1707)) + (_1701 * _1701)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1689, _1690, _1691), vec3(_759, _761, _762))));
        _1735 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
    }
    else
    {
        _1735 = 0.0;
    }
    float _1746 = (_659 - ((cbMtdParam._m0[22u].z * (1.0 - _659)) * (textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _1537) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _1538) + cbTextureTilingScale._m0[9u].w), _1735).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _2319 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
    float _1747 = isnan(1.0) ? _2319 : (isnan(_2319) ? 1.0 : min(_2319, 1.0));
    float _1751 = ((((((float(_376 & 255u) * hit._m0.x) + (float(_277 & 255u) * _615)) + (float(_475 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_1631.x - _1628) * _1485) + _1628)) * _1660) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_1507.x - _1504) * _1485) + _1504)))) * _1747;
    float _1755 = ((((((float((_376 >> 8u) & 255u) * hit._m0.x) + (float((_277 >> 8u) & 255u) * _615)) + (float((_475 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_1631.y - _1629) * _1485) + _1629)) * _1660) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_1507.y - _1505) * _1485) + _1505)))) * _1747;
    float _1759 = ((((((float((_376 >> 16u) & 255u) * hit._m0.x) + (float((_277 >> 16u) & 255u) * _615)) + (float((_475 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_1631.z - _1630) * _1485) + _1630)) * _1660) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_1507.z - _1506) * _1485) + _1506)))) * _1747;
    float _1763 = _1751 - (_1751 * _1034);
    float _1764 = _1755 - ((((((float((_389 >> 8u) & 255u) * hit._m0.x) + (float((_290 >> 8u) & 255u) * _615)) + (float((_488 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[20u].w) * _1755);
    float _1765 = _1759 - ((((((float((_389 >> 16u) & 255u) * hit._m0.x) + (float((_290 >> 16u) & 255u) * _615)) + (float((_488 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[20u].w) * _1759);
    float _1772 = (_1034 - (((textureLod(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _747) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _748) + cbTextureTilingScale._m0[11u].w), _1028).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _1034))) * (cbMtdParam._m0[20u].x + 1.0);
    float _2330 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
    float _1773 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
    float _1783 = (cbMtdParam._m0[20u].y * _1198) + _1198;
    float _1784 = (cbMtdParam._m0[20u].y * _1200) + _1200;
    float _1787 = fma(_1206, _759, fma(_1784, _775, (_794 * _788) * _1783));
    float _1790 = fma(_1206, _761, fma(_1784, _776, (_794 * _789) * _1783));
    float _1793 = fma(_1206, _762, fma(_1784, _777, (_794 * _790) * _1783));
    float _1797 = inversesqrt(dot(vec3(_1787, _1790, _1793), vec3(_1787, _1790, _1793)));
    float _1798 = _1797 * _1787;
    float _1799 = _1797 * _1790;
    float _1800 = _1797 * _1793;
    float _1812 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1813 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1814 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1815 = (-0.0) - _1689;
    float _1816 = (-0.0) - _1690;
    float _1817 = (-0.0) - _1691;
    float _1823 = float(gl_LaunchIDEXT.x);
    float _1824 = float(gl_LaunchIDEXT.y);
    float _1827 = float(gl_LaunchSizeEXT.x);
    float _1841 = fract(fract(sin(dot(vec2(_1823 / _1827, _1824 / _89), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1854 = fract(fract(sin(dot(vec2((_1823 + 128.0) / _1827, (_1824 + 128.0) / _89), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _75._m0 = 1u;
    uvec4 _1864 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1865 = _1864.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1865, _1864.w, _1865, vec3(_1812, _1813, _1814), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1974;
    float _1975;
    float _1976;
    float _1977;
    float _1978;
    float _1979;
    if (_75._m0 == 0u)
    {
        float _1886 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1798, _1799, _1800));
        float _2341 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1889 = isnan(1.0) ? _2341 : (isnan(_2341) ? 1.0 : min(_2341, 1.0));
        float _1908 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1195) * 0.949999988079071044921875);
        float _1909 = _1908 * _1908;
        float _1910 = g_sceneCB._m0[4u].x - _1689;
        float _1911 = g_sceneCB._m0[4u].y - _1690;
        float _1912 = g_sceneCB._m0[4u].z - _1691;
        float _1916 = inversesqrt(dot(vec3(_1910, _1911, _1912), vec3(_1910, _1911, _1912)));
        float _1917 = _1916 * _1910;
        float _1918 = _1916 * _1911;
        float _1919 = _1916 * _1912;
        float _1920 = dot(vec3(_1798, _1799, _1800), vec3(g_sceneCB._m0[4u].xyz));
        float _2352 = isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0));
        float _1923 = isnan(1.0) ? _2352 : (isnan(_2352) ? 1.0 : min(_2352, 1.0));
        float _1924 = dot(vec3(_1798, _1799, _1800), vec3(_1815, _1816, _1817));
        float _2363 = isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0));
        float _1927 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
        float _1928 = dot(vec3(_1798, _1799, _1800), vec3(_1917, _1918, _1919));
        float _2374 = isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0));
        float _1931 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        float _1932 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1917, _1918, _1919));
        float _2385 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
        float _1936 = _1909 * _1909;
        float _1940 = ((_1931 * _1931) * (_1936 + (-1.0))) + 1.0;
        float _1952 = (exp2(log2(1.0 - (isnan(1.0) ? _2385 : (isnan(_2385) ? 1.0 : min(_2385, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1954 = 1.0 - _1909;
        float _1965 = (0.5 / (((_1927 * ((_1923 * _1954) + _1909)) + 9.9999999392252902907785028219223e-09) + (((_1927 * _1954) + _1909) * _1923))) * _1923;
        float _2396 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
        float _1967 = (isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0))) * (_1936 / ((_1940 * _1940) * 3.141590118408203125));
        _1974 = ((_882 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1889;
        _1975 = ((_883 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1889;
        _1976 = ((_884 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1889;
        _1977 = (_1952 * g_sceneCB._m0[5u].x) * _1967;
        _1978 = (_1952 * g_sceneCB._m0[5u].y) * _1967;
        _1979 = (_1952 * g_sceneCB._m0[5u].z) * _1967;
    }
    else
    {
        _1974 = 0.0;
        _1975 = 0.0;
        _1976 = 0.0;
        _1977 = 0.0;
        _1978 = 0.0;
        _1979 = 0.0;
    }
    bool _1981 = abs(_1799) < 0.89999997615814208984375;
    float _1983 = float(_1981);
    float _1984 = _1981 ? 0.0 : 1.0;
    float _1987 = (_1983 * _1800) - (_1984 * _1799);
    float _1988 = _1984 * _1798;
    float _1990 = (-0.0) - (_1798 * _1983);
    float _1994 = inversesqrt(dot(vec3(_1987, _1988, _1990), vec3(_1987, _1988, _1990)));
    float _1995 = _1987 * _1994;
    float _1996 = _1988 * _1994;
    float _1997 = _1994 * _1990;
    float _2000 = (_1996 * _1800) - (_1997 * _1799);
    float _2003 = (_1997 * _1798) - (_1995 * _1800);
    float _2006 = (_1995 * _1799) - (_1996 * _1798);
    float _2008;
    float _2016;
    float _2007 = 0.0;
    uint _2009 = 0u;
    float _2013;
    bool _2015;
    for (;;)
    {
        _2013 = (float(_2009) + _1841) * 0.03125;
        _2015 = _2009 == 0u;
        float frontier_phi_57_pred;
        if (_2015)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _2156;
            float _2157;
            uint _2159;
            _2156 = 0.0;
            _2157 = 0.5;
            _2159 = _2009;
            float _2017;
            for (;;)
            {
                _2017 = ((_2159 & 1u) != 0u) ? (_2157 + _2156) : _2156;
                uint _2160 = _2159 >> 1u;
                if (_2160 == 0u)
                {
                    break;
                }
                else
                {
                    _2156 = _2017;
                    _2157 *= 0.5;
                    _2159 = _2160;
                }
            }
            frontier_phi_57_pred = _2017;
        }
        _2016 = frontier_phi_57_pred;
        float _2018 = _2016 + _1854;
        float _2022 = sqrt(_2013);
        float _2023 = ((_2018 > 1.0) ? (_2018 + (-1.0)) : _2018) * 6.283185482025146484375;
        float _2026 = cos(_2023) * _2022;
        float _2028 = sin(_2023) * _2022;
        float _2030 = sqrt(1.0 - _2013);
        float _2043 = ((_2030 * _1798) + (_2026 * _2000)) + (_2028 * _1995);
        float _2044 = ((_2030 * _1799) + (_2026 * _2003)) + (_2028 * _1996);
        float _2045 = ((_2030 * _1800) + (_2026 * _2006)) + (_2028 * _1997);
        _74._m0 = 1u;
        uvec4 _2049 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2050 = _2049.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2050, _2049.w, _2050, vec3(_1812, _1813, _1814), 9.9999997473787516355514526367188e-05, vec3(_2043, _2044, _2045), 10000.0, 1);
        float _2056 = dot(vec3(_1798, _1799, _1800), vec3(_2043, _2044, _2045));
        float _2407 = isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0));
        float _2059 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        _2008 = ((float(_74._m0 == 0u) * _2059) / (_2059 * 0.3183098733425140380859375)) + _2007;
        uint _2010 = _2009 + 1u;
        if (_2010 == 32u)
        {
            break;
        }
        else
        {
            _2007 = _2008;
            _2009 = _2010;
            continue;
        }
    }
    float _2067 = _2008 * 0.009947183541953563690185546875;
    float _2072 = dot(vec3(_1689, _1690, _1691), vec3(_1798, _1799, _1800)) * 2.0;
    vec4 _2086 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1689 - (_2072 * _1798), _1690 - (_2072 * _1799), _1691 - (_2072 * _1800)), 4.0 - (_1195 * 4.0));
    float _2091 = dot(vec3(_1815, _1816, _1817), vec3(_1798, _1799, _1800));
    float _2418 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
    float _2100 = (exp2(log2(1.0 - (isnan(1.0) ? _2418 : (isnan(_2418) ? 1.0 : min(_2418, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2106 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1798, _1799, _1800), 0.0);
    float _2119 = (((((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_1356.x - _1353) * _1334) + _1353)) - _1763) * _1773) + _1763) + _1974) + _1977) + (((_2106.x * _882) + (_2100 * _2086.x)) * _2067);
    float _2125 = (((((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_1356.y - _1354) * _1334) + _1354)) - _1764) * _1773) + _1764) + _1975) + _1978) + (((_2106.y * _883) + (_2100 * _2086.y)) * _2067);
    float _2131 = (((((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_1356.z - _1355) * _1334) + _1355)) - _1765) * _1773) + _1765) + _1976) + _1979) + (((_2106.z * _884) + (_2100 * _2086.z)) * _2067);
    float _2429 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _2440 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _2451 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
    bool _2139 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2150;
    _2150.x = _2139 ? ((_752 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2429 : (isnan(_2429) ? 1.0 : min(_2429, 1.0)));
    _2150.y = _2139 ? ((_755 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2440 : (isnan(_2440) ? 1.0 : min(_2440, 1.0)));
    _2150.z = _2139 ? ((_758 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2451 : (isnan(_2451) ? 1.0 : min(_2451, 1.0)));
    payload._m0 = _2150;
}


