#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1241;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _165 & 65535u;
            frontier_phi_3_2_ladder_2 = _169;
        }
        else
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _166 >> 16u;
        }
        _171 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
        _174 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _219 = _180 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uvec4 _231 = texelFetch(l_geomAttrib_0, int((((_179 * _171) + 4u) + (_181 ? (_220 + 4u) : _220)) >> 2u));
    uint _232 = _231.x;
    float _236 = float(int(uint(int(_232 << 16u) >> int(16u))));
    float _237 = float(int(uint(int(_232) >> int(16u))));
    uint _239 = (_179 * _173) + 12u;
    uint _260;
    uint _261;
    uint _262;
    uint _263;
    if (_184)
    {
        uvec4 _241 = texelFetch(l_geomAttrib_0, int(_239 >> 2u));
        uint _242 = _241.x;
        _260 = _242 & 255u;
        _261 = (_242 >> 8u) & 255u;
        _262 = (_242 >> 16u) & 255u;
        _263 = 20u;
    }
    else
    {
        uint _248 = _239 >> 2u;
        uvec2 _254 = uvec2(texelFetch(l_geomAttrib_0, int(_248)).x, texelFetch(l_geomAttrib_0, int(_248 + 1u)).x);
        uint _255 = _254.x;
        _260 = _255 & 65535u;
        _261 = _255 >> 16u;
        _262 = _254.y & 65535u;
        _263 = 24u;
    }
    uint _267;
    if (_219)
    {
        _267 = _263;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _263 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _263 + 8u;
        }
        _267 = frontier_phi_16_17_ladder;
    }
    uvec4 _276 = texelFetch(l_geomAttrib_0, int((((_179 * _173) + 4u) + (_181 ? (_267 + 4u) : _267)) >> 2u));
    uint _277 = _276.x;
    float _281 = float(int(uint(int(_277 << 16u) >> int(16u))));
    float _282 = float(int(uint(int(_277) >> int(16u))));
    uint _284 = (_179 * _174) + 12u;
    uint _305;
    uint _306;
    uint _307;
    uint _308;
    if (_184)
    {
        uvec4 _286 = texelFetch(l_geomAttrib_0, int(_284 >> 2u));
        uint _287 = _286.x;
        _305 = _287 & 255u;
        _306 = (_287 >> 8u) & 255u;
        _307 = (_287 >> 16u) & 255u;
        _308 = 20u;
    }
    else
    {
        uint _293 = _284 >> 2u;
        uvec2 _299 = uvec2(texelFetch(l_geomAttrib_0, int(_293)).x, texelFetch(l_geomAttrib_0, int(_293 + 1u)).x);
        uint _300 = _299.x;
        _305 = _300 & 65535u;
        _306 = _300 >> 16u;
        _307 = _299.y & 65535u;
        _308 = 24u;
    }
    uint _312;
    if (_219)
    {
        _312 = _308;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _308 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _308 + 8u;
        }
        _312 = frontier_phi_23_24_ladder;
    }
    uvec4 _321 = texelFetch(l_geomAttrib_0, int((((_179 * _174) + 4u) + (_181 ? (_312 + 4u) : _312)) >> 2u));
    uint _322 = _321.x;
    float _326 = float(int(uint(int(_322 << 16u) >> int(16u))));
    float _327 = float(int(uint(int(_322) >> int(16u))));
    bool _329 = _130.z == 0u;
    float _365;
    float _366;
    float _367;
    if (_329)
    {
        uint _332 = _171 * 3u;
        uvec3 _341 = uvec3(texelFetch(l_geomPositionBuffer, int(_332)).x, texelFetch(l_geomPositionBuffer, int(_332 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_332 + 2u)).x);
        _365 = uintBitsToFloat(_341.x);
        _366 = uintBitsToFloat(_341.y);
        _367 = uintBitsToFloat(_341.z);
    }
    else
    {
        uint _349 = _171 * 2u;
        uvec2 _355 = uvec2(texelFetch(l_geomPositionBuffer, int(_349)).x, texelFetch(l_geomPositionBuffer, int(_349 + 1u)).x);
        uint _356 = _355.x;
        _365 = unpackHalf2x16(_356).x;
        _366 = unpackHalf2x16(_356 >> 16u).x;
        _367 = unpackHalf2x16(_355.y).x;
    }
    float _403;
    float _404;
    float _405;
    if (_329)
    {
        uint _370 = _173 * 3u;
        uvec3 _379 = uvec3(texelFetch(l_geomPositionBuffer, int(_370)).x, texelFetch(l_geomPositionBuffer, int(_370 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_370 + 2u)).x);
        _403 = uintBitsToFloat(_379.x);
        _404 = uintBitsToFloat(_379.y);
        _405 = uintBitsToFloat(_379.z);
    }
    else
    {
        uint _387 = _173 * 2u;
        uvec2 _393 = uvec2(texelFetch(l_geomPositionBuffer, int(_387)).x, texelFetch(l_geomPositionBuffer, int(_387 + 1u)).x);
        uint _394 = _393.x;
        _403 = unpackHalf2x16(_394).x;
        _404 = unpackHalf2x16(_394 >> 16u).x;
        _405 = unpackHalf2x16(_393.y).x;
    }
    float _441;
    float _442;
    float _443;
    if (_329)
    {
        uint _408 = _174 * 3u;
        uvec3 _417 = uvec3(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_408 + 2u)).x);
        _441 = uintBitsToFloat(_417.x);
        _442 = uintBitsToFloat(_417.y);
        _443 = uintBitsToFloat(_417.z);
    }
    else
    {
        uint _425 = _174 * 2u;
        uvec2 _431 = uvec2(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x);
        uint _432 = _431.x;
        _441 = unpackHalf2x16(_432).x;
        _442 = unpackHalf2x16(_432 >> 16u).x;
        _443 = unpackHalf2x16(_431.y).x;
    }
    float _446 = (1.0 - hit._m0.x) - hit._m0.y;
    float _468 = (_281 - _236) * 0.00048828125;
    float _470 = (_282 - _237) * 0.00048828125;
    float _473 = (_326 - _236) * 0.00048828125;
    float _474 = (_327 - _237) * 0.00048828125;
    float _496 = _403 - _365;
    float _497 = _404 - _366;
    float _498 = _405 - _367;
    float _501 = fma(_498, gl_ObjectToWorldEXT[2u].x, fma(_497, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _496));
    float _504 = fma(_498, gl_ObjectToWorldEXT[2u].y, fma(_497, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _496));
    float _507 = fma(_498, gl_ObjectToWorldEXT[2u].z, fma(_497, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _496));
    float _508 = _441 - _365;
    float _509 = _442 - _366;
    float _510 = _443 - _367;
    float _513 = fma(_510, gl_ObjectToWorldEXT[2u].x, fma(_509, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _508));
    float _516 = fma(_510, gl_ObjectToWorldEXT[2u].y, fma(_509, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _508));
    float _519 = fma(_510, gl_ObjectToWorldEXT[2u].z, fma(_509, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _508));
    float _520 = (((_281 * hit._m0.x) + (_236 * _446)) + (_326 * hit._m0.y)) * 0.00048828125;
    float _521 = (((_282 * hit._m0.x) + (_237 * _446)) + (_327 * hit._m0.y)) * 0.00048828125;
    float _525 = (((float(_210) * _446) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _528 = (((float(_211) * _446) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_306) * hit._m0.y);
    float _531 = (((float(_212) * _446) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_307) * hit._m0.y);
    float _532 = _525 * 0.0078740157186985015869140625;
    float _534 = _528 * 0.0078740157186985015869140625;
    float _535 = _531 * 0.0078740157186985015869140625;
    float _551 = cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x;
    float _566 = (cbTextureTilingScale._m0[1u].x * ((_551 * cbMtdParam._m0[14u].y) + _520)) + cbTextureTilingScale._m0[1u].z;
    float _567 = (((_551 * cbMtdParam._m0[14u].z) + _521) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w;
    uvec2 _569 = uvec2(textureSize(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    bool _574 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _627;
    if (_574)
    {
        float _585 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _591 = (_519 * _504) - (_516 * _507);
        float _594 = (_513 * _507) - (_519 * _501);
        float _597 = (_516 * _501) - (_513 * _504);
        float _624 = ((log2((((float(_569.y) * 0.5) * float(_569.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_594 * _594) + (_597 * _597)) + (_591 * _591)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_585 * gl_WorldRayDirectionEXT.x, _585 * gl_WorldRayDirectionEXT.y, _585 * gl_WorldRayDirectionEXT.z), vec3(_532, _534, _535))));
        _627 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    }
    else
    {
        _627 = 0.0;
    }
    vec4 _631 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2(_566, _567), _627);
    float _636 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].x;
    float _637 = _636 * cbMtdParam._m0[13u].z;
    float _643 = ((_631.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _645 = (-0.0) - (cbMtdParam._m0[13u].y * ((_631.x * 0.5) + (-0.25)));
    float _647 = fract(_637);
    float _649 = fract(_637 + 0.5);
    float _661 = abs((_647 * 2.0) + (-1.0));
    vec4 _679 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_647 * _645) + _520) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_643 * _647) + _521) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _681 = _679.x;
    float _682 = _679.y;
    float _683 = _679.z;
    vec4 _684 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_649 * _645) + _520) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_643 * _649) + _521) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _698 = (((_684.x - _681) * _661) + _681) * cbMtdParam._m0[9u].x;
    float _699 = (((_684.y - _682) * _661) + _682) * cbMtdParam._m0[9u].y;
    float _700 = (((_684.z - _683) * _661) + _683) * cbMtdParam._m0[9u].z;
    uvec2 _721 = uvec2(textureSize(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _772;
    if (_574)
    {
        float _732 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _738 = (_519 * _504) - (_516 * _507);
        float _741 = (_513 * _507) - (_519 * _501);
        float _744 = (_516 * _501) - (_513 * _504);
        float _770 = ((log2((((float(_721.y) * 0.5) * float(_721.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_741 * _741) + (_744 * _744)) + (_738 * _738)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_732 * gl_WorldRayDirectionEXT.x, _732 * gl_WorldRayDirectionEXT.y, _732 * gl_WorldRayDirectionEXT.z), vec3(_532, _534, _535))));
        _772 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    }
    else
    {
        _772 = 0.0;
    }
    vec4 _774 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _520) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _521) + cbTextureTilingScale._m0[2u].w), _772);
    float _795 = (_551 * cbMtdParam._m0[13u].w) + _520;
    float _796 = (_551 * cbMtdParam._m0[14u].x) + _521;
    float _802 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _803 = _802 * gl_WorldRayDirectionEXT.x;
    float _804 = _802 * gl_WorldRayDirectionEXT.y;
    float _805 = _802 * gl_WorldRayDirectionEXT.z;
    float _849;
    if (_574)
    {
        float _815 = (_519 * _504) - (_516 * _507);
        float _818 = (_513 * _507) - (_519 * _501);
        float _821 = (_516 * _501) - (_513 * _504);
        float _847 = ((log2((((float(_569.y) * 0.5) * float(_569.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_818 * _818) + (_821 * _821)) + (_815 * _815)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_803, _804, _805), vec3(_532, _534, _535))));
        _849 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    }
    else
    {
        _849 = 0.0;
    }
    vec4 _851 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2(_566, _567), _849);
    float _855 = _636 * cbMtdParam._m0[12u].w;
    float _860 = ((_851.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].z;
    float _862 = (-0.0) - (cbMtdParam._m0[12u].z * ((_851.x * 0.5) + (-0.25)));
    float _863 = fract(_855);
    float _865 = fract(_855 + 0.5);
    float _876 = abs((_863 * 2.0) + (-1.0));
    vec4 _893 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_863 * _862) + _795) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_860 * _863) + _796) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _895 = _893.x;
    float _896 = _893.y;
    float _897 = _893.z;
    vec4 _898 = textureLod(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_865 * _862) + _795) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_860 * _865) + _796) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _918 = inversesqrt(dot(vec3(_532, _534, _535), vec3(_532, _534, _535)));
    float _919 = _918 * _532;
    float _920 = _918 * _534;
    float _921 = _918 * _535;
    float _933 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _934 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _935 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _936 = (-0.0) - _803;
    float _937 = (-0.0) - _804;
    float _938 = (-0.0) - _805;
    float _944 = float(gl_LaunchIDEXT.x);
    float _945 = float(gl_LaunchIDEXT.y);
    float _948 = float(gl_LaunchSizeEXT.x);
    float _962 = fract(fract(sin(dot(vec2(_944 / _948, _945 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _975 = fract(fract(sin(dot(vec2((_944 + 128.0) / _948, (_945 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _985 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _986 = _985.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _986, _985.w, _986, vec3(_933, _934, _935), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    float _1071;
    if (_68._m0 == 0u)
    {
        float _1007 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_919, _920, _921));
        float _1334 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
        float _1010 = isnan(1.0) ? _1334 : (isnan(_1334) ? 1.0 : min(_1334, 1.0));
        float _1021 = g_sceneCB._m0[4u].x - _803;
        float _1022 = g_sceneCB._m0[4u].y - _804;
        float _1023 = g_sceneCB._m0[4u].z - _805;
        float _1027 = inversesqrt(dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023)));
        float _1031 = dot(vec3(_919, _920, _921), vec3(g_sceneCB._m0[4u].xyz));
        float _1345 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
        float _1034 = isnan(1.0) ? _1345 : (isnan(_1345) ? 1.0 : min(_1345, 1.0));
        float _1035 = dot(vec3(_919, _920, _921), vec3(_936, _937, _938));
        float _1356 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1039 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1021 * _1027, _1022 * _1027, _1023 * _1027));
        float _1367 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
        float _1050 = (exp2(log2(1.0 - (isnan(1.0) ? _1367 : (isnan(_1367) ? 1.0 : min(_1367, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1056 = (0.5 / ((_1034 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1356 : (isnan(_1356) ? 1.0 : min(_1356, 1.0))))) * _1034;
        float _1378 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1058 = (isnan(1.0) ? _1378 : (isnan(_1378) ? 1.0 : min(_1378, 1.0))) * 0.31831014156341552734375;
        _1066 = ((_698 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1010;
        _1067 = ((_699 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1010;
        _1068 = ((_700 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1010;
        _1069 = (_1050 * g_sceneCB._m0[5u].x) * _1058;
        _1070 = (_1050 * g_sceneCB._m0[5u].y) * _1058;
        _1071 = (_1050 * g_sceneCB._m0[5u].z) * _1058;
    }
    else
    {
        _1066 = 0.0;
        _1067 = 0.0;
        _1068 = 0.0;
        _1069 = 0.0;
        _1070 = 0.0;
        _1071 = 0.0;
    }
    bool _1073 = abs(_920) < 0.89999997615814208984375;
    float _1075 = float(_1073);
    float _1076 = _1073 ? 0.0 : 1.0;
    float _1079 = (_1075 * _921) - (_1076 * _920);
    float _1080 = _1076 * _919;
    float _1082 = (-0.0) - (_919 * _1075);
    float _1086 = inversesqrt(dot(vec3(_1079, _1080, _1082), vec3(_1079, _1080, _1082)));
    float _1087 = _1079 * _1086;
    float _1088 = _1080 * _1086;
    float _1089 = _1086 * _1082;
    float _1092 = (_1088 * _921) - (_1089 * _920);
    float _1095 = (_1089 * _919) - (_1087 * _921);
    float _1098 = (_1087 * _920) - (_1088 * _919);
    float _1100;
    float _1108;
    float _1099 = 0.0;
    uint _1101 = 0u;
    float _1105;
    bool _1107;
    for (;;)
    {
        _1105 = (float(_1101) + _962) * 0.03125;
        _1107 = _1101 == 0u;
        float frontier_phi_45_pred;
        if (_1107)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1246;
            float _1247;
            uint _1249;
            _1246 = 0.0;
            _1247 = 0.5;
            _1249 = _1101;
            float _1109;
            for (;;)
            {
                _1109 = ((_1249 & 1u) != 0u) ? (_1247 + _1246) : _1246;
                uint _1250 = _1249 >> 1u;
                if (_1250 == 0u)
                {
                    break;
                }
                else
                {
                    _1246 = _1109;
                    _1247 *= 0.5;
                    _1249 = _1250;
                }
            }
            frontier_phi_45_pred = _1109;
        }
        _1108 = frontier_phi_45_pred;
        float _1110 = _1108 + _975;
        float _1114 = sqrt(_1105);
        float _1115 = ((_1110 > 1.0) ? (_1110 + (-1.0)) : _1110) * 6.283185482025146484375;
        float _1118 = cos(_1115) * _1114;
        float _1120 = sin(_1115) * _1114;
        float _1122 = sqrt(1.0 - _1105);
        float _1135 = ((_1122 * _919) + (_1118 * _1092)) + (_1120 * _1087);
        float _1136 = ((_1122 * _920) + (_1118 * _1095)) + (_1120 * _1088);
        float _1137 = ((_1122 * _921) + (_1118 * _1098)) + (_1120 * _1089);
        _67._m0 = 1u;
        uvec4 _1141 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1142 = _1141.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1142, _1141.w, _1142, vec3(_933, _934, _935), 9.9999997473787516355514526367188e-05, vec3(_1135, _1136, _1137), 10000.0, 1);
        float _1148 = dot(vec3(_919, _920, _921), vec3(_1135, _1136, _1137));
        float _1389 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1151 = isnan(1.0) ? _1389 : (isnan(_1389) ? 1.0 : min(_1389, 1.0));
        _1100 = ((float(_67._m0 == 0u) * _1151) / (_1151 * 0.3183098733425140380859375)) + _1099;
        uint _1102 = _1101 + 1u;
        if (_1102 == 32u)
        {
            break;
        }
        else
        {
            _1099 = _1100;
            _1101 = _1102;
            continue;
        }
    }
    float _1159 = _1100 * 0.009947183541953563690185546875;
    float _1164 = dot(vec3(_803, _804, _805), vec3(_919, _920, _921)) * 2.0;
    vec4 _1176 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_803 - (_1164 * _919), _804 - (_1164 * _920), _805 - (_1164 * _921)), 4.0);
    float _1181 = dot(vec3(_936, _937, _938), vec3(_919, _920, _921));
    float _1400 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
    float _1190 = (exp2(log2(1.0 - (isnan(1.0) ? _1400 : (isnan(_1400) ? 1.0 : min(_1400, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1196 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_919, _920, _921), 0.0);
    float _1209 = (((((((_898.x - _895) * _876) + _895) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].x) * _774.x)) + _1066) + _1069) + (((_1196.x * _698) + (_1190 * _1176.x)) * _1159);
    float _1215 = (((((((_898.y - _896) * _876) + _896) * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].x) * _774.y)) + _1067) + _1070) + (((_1196.y * _699) + (_1190 * _1176.y)) * _1159);
    float _1221 = (((((((_898.z - _897) * _876) + _897) * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].x) * _774.z)) + _1068) + _1071) + (((_1196.z * _700) + (_1190 * _1176.z)) * _1159);
    float _1411 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _1422 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    float _1433 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    bool _1229 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1240;
    _1240.x = _1229 ? ((_525 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1411 : (isnan(_1411) ? 1.0 : min(_1411, 1.0)));
    _1240.y = _1229 ? ((_528 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1422 : (isnan(_1422) ? 1.0 : min(_1422, 1.0)));
    _1240.z = _1229 ? ((_531 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1433 : (isnan(_1433) ? 1.0 : min(_1433, 1.0)));
    payload._m0 = _1240;
}


