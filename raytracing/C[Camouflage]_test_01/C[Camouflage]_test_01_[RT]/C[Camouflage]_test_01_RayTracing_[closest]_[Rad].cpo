#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Camouflage_test_01_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_Camouflage_test_01_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Camouflage_test_01_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_Camouflage_test_01_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1401;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _157 & 65535u;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _158 >> 16u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        _163 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
        _166 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    bool _228 = _172 == 0u;
    uint _229;
    if (_228)
    {
        _229 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _229 = frontier_phi_9_10_ladder;
    }
    uint _233 = _173 ? (_229 + 4u) : _229;
    uvec4 _243 = texelFetch(l_geomAttrib_0, int(((_177 + 8u) + _233) >> 2u));
    uint _244 = _243.x;
    float _248 = float(int(uint(int(_244 << 16u) >> int(16u))));
    float _249 = float(int(uint(int(_244) >> int(16u))));
    uint _250 = _171 * _165;
    uint _251 = _250 + 12u;
    uint _272;
    uint _273;
    uint _274;
    uint _275;
    if (_176)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
        _275 = 16u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
        _275 = 20u;
    }
    uvec4 _281 = texelFetch(l_geomAttrib_0, int((_275 + _250) >> 2u));
    uint _282 = _281.x;
    uint _294;
    if (_228)
    {
        _294 = _275 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _275 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _275 + 12u;
        }
        _294 = frontier_phi_16_17_ladder;
    }
    uint _298 = _173 ? (_294 + 4u) : _294;
    uvec4 _308 = texelFetch(l_geomAttrib_0, int(((_250 + 8u) + _298) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _315 = _171 * _166;
    uint _316 = _315 + 12u;
    uint _337;
    uint _338;
    uint _339;
    uint _340;
    if (_176)
    {
        uvec4 _318 = texelFetch(l_geomAttrib_0, int(_316 >> 2u));
        uint _319 = _318.x;
        _337 = _319 & 255u;
        _338 = (_319 >> 8u) & 255u;
        _339 = (_319 >> 16u) & 255u;
        _340 = 16u;
    }
    else
    {
        uint _325 = _316 >> 2u;
        uvec2 _331 = uvec2(texelFetch(l_geomAttrib_0, int(_325)).x, texelFetch(l_geomAttrib_0, int(_325 + 1u)).x);
        uint _332 = _331.x;
        _337 = _332 & 65535u;
        _338 = _332 >> 16u;
        _339 = _331.y & 65535u;
        _340 = 20u;
    }
    uvec4 _346 = texelFetch(l_geomAttrib_0, int((_340 + _315) >> 2u));
    uint _347 = _346.x;
    uint _359;
    if (_228)
    {
        _359 = _340 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _340 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _340 + 12u;
        }
        _359 = frontier_phi_23_24_ladder;
    }
    uint _363 = _173 ? (_359 + 4u) : _359;
    uvec4 _373 = texelFetch(l_geomAttrib_0, int(((_315 + 8u) + _363) >> 2u));
    uint _374 = _373.x;
    float _378 = float(int(uint(int(_374 << 16u) >> int(16u))));
    float _379 = float(int(uint(int(_374) >> int(16u))));
    bool _381 = _122.z == 0u;
    float _417;
    float _418;
    float _419;
    if (_381)
    {
        uint _384 = _163 * 3u;
        uvec3 _393 = uvec3(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_384 + 2u)).x);
        _417 = uintBitsToFloat(_393.x);
        _418 = uintBitsToFloat(_393.y);
        _419 = uintBitsToFloat(_393.z);
    }
    else
    {
        uint _401 = _163 * 2u;
        uvec2 _407 = uvec2(texelFetch(l_geomPositionBuffer, int(_401)).x, texelFetch(l_geomPositionBuffer, int(_401 + 1u)).x);
        uint _408 = _407.x;
        _417 = unpackHalf2x16(_408).x;
        _418 = unpackHalf2x16(_408 >> 16u).x;
        _419 = unpackHalf2x16(_407.y).x;
    }
    float _455;
    float _456;
    float _457;
    if (_381)
    {
        uint _422 = _165 * 3u;
        uvec3 _431 = uvec3(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_422 + 2u)).x);
        _455 = uintBitsToFloat(_431.x);
        _456 = uintBitsToFloat(_431.y);
        _457 = uintBitsToFloat(_431.z);
    }
    else
    {
        uint _439 = _165 * 2u;
        uvec2 _445 = uvec2(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x);
        uint _446 = _445.x;
        _455 = unpackHalf2x16(_446).x;
        _456 = unpackHalf2x16(_446 >> 16u).x;
        _457 = unpackHalf2x16(_445.y).x;
    }
    float _493;
    float _494;
    float _495;
    if (_381)
    {
        uint _460 = _166 * 3u;
        uvec3 _469 = uvec3(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_460 + 2u)).x);
        _493 = uintBitsToFloat(_469.x);
        _494 = uintBitsToFloat(_469.y);
        _495 = uintBitsToFloat(_469.z);
    }
    else
    {
        uint _477 = _166 * 2u;
        uvec2 _483 = uvec2(texelFetch(l_geomPositionBuffer, int(_477)).x, texelFetch(l_geomPositionBuffer, int(_477 + 1u)).x);
        uint _484 = _483.x;
        _493 = unpackHalf2x16(_484).x;
        _494 = unpackHalf2x16(_484 >> 16u).x;
        _495 = unpackHalf2x16(_483.y).x;
    }
    float _498 = (1.0 - hit._m0.x) - hit._m0.y;
    float _525 = (((float(texelFetch(l_geomAttrib_0, int((_298 + _250) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_233 + _177) >> 2u)).x >> 24u) * _498)) + (float(texelFetch(l_geomAttrib_0, int((_363 + _315) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _539 = (_313 - _248) * 0.00048828125;
    float _541 = (_314 - _249) * 0.00048828125;
    float _544 = (_378 - _248) * 0.00048828125;
    float _545 = (_379 - _249) * 0.00048828125;
    float _567 = _455 - _417;
    float _568 = _456 - _418;
    float _569 = _457 - _419;
    float _572 = fma(_569, gl_ObjectToWorldEXT[2u].x, fma(_568, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _567));
    float _575 = fma(_569, gl_ObjectToWorldEXT[2u].y, fma(_568, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _567));
    float _578 = fma(_569, gl_ObjectToWorldEXT[2u].z, fma(_568, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _567));
    float _579 = _493 - _417;
    float _580 = _494 - _418;
    float _581 = _495 - _419;
    float _584 = fma(_581, gl_ObjectToWorldEXT[2u].x, fma(_580, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _579));
    float _587 = fma(_581, gl_ObjectToWorldEXT[2u].y, fma(_580, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _579));
    float _590 = fma(_581, gl_ObjectToWorldEXT[2u].z, fma(_580, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _579));
    float _591 = (((_313 * hit._m0.x) + (_248 * _498)) + (_378 * hit._m0.y)) * 0.00048828125;
    float _592 = (((_314 * hit._m0.x) + (_249 * _498)) + (_379 * hit._m0.y)) * 0.00048828125;
    float _596 = (((float(_202) * _498) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _599 = (((float(_203) * _498) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _602 = (((float(_204) * _498) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _603 = _596 * 0.0078740157186985015869140625;
    float _605 = _599 * 0.0078740157186985015869140625;
    float _606 = _602 * 0.0078740157186985015869140625;
    float _619 = ((((float(_214 & 255u) * _498) + (-127.0)) + (float(_282 & 255u) * hit._m0.x)) + (float(_347 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _620 = ((((float((_214 >> 8u) & 255u) * _498) + (-127.0)) + (float((_282 >> 8u) & 255u) * hit._m0.x)) + (float((_347 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _621 = ((((float((_214 >> 16u) & 255u) * _498) + (-127.0)) + (float((_282 >> 16u) & 255u) * hit._m0.x)) + (float((_347 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _622 = ((((float(_214 >> 24u) * _498) + (-127.0)) + (float(_282 >> 24u) * hit._m0.x)) + (float(_347 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _632 = ((_620 * _606) - (_621 * _605)) * _622;
    float _633 = ((_621 * _603) - (_619 * _606)) * _622;
    float _634 = ((_619 * _605) - (_620 * _603)) * _622;
    float _638 = inversesqrt(dot(vec3(_632, _633, _634), vec3(_632, _633, _634)));
    uvec2 _659 = uvec2(textureSize(C_Camouflage_test_01_snp_0_Texture2D_1, int(0u)));
    bool _664 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _717;
    if (_664)
    {
        float _675 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _681 = (_590 * _575) - (_587 * _578);
        float _684 = (_584 * _578) - (_590 * _572);
        float _687 = (_587 * _572) - (_584 * _575);
        float _714 = ((log2((((float(_659.y) * 0.5) * float(_659.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_684 * _684) + (_687 * _687)) + (_681 * _681)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_675 * gl_WorldRayDirectionEXT.x, _675 * gl_WorldRayDirectionEXT.y, _675 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _717 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    }
    else
    {
        _717 = 0.0;
    }
    vec4 _721 = textureLod(sampler2D(C_Camouflage_test_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _591) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _592) + cbTextureTilingScale._m0[0u].w), _717);
    float _726 = _721.x * cbMtdParam._m0[9u].x;
    float _727 = _721.y * cbMtdParam._m0[9u].y;
    float _728 = _721.z * cbMtdParam._m0[9u].z;
    uvec2 _743 = uvec2(textureSize(C_Camouflage_test_01_snp_0_Texture2D_2, int(0u)));
    float _794;
    if (_664)
    {
        float _754 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _760 = (_590 * _575) - (_587 * _578);
        float _763 = (_584 * _578) - (_590 * _572);
        float _766 = (_587 * _572) - (_584 * _575);
        float _792 = ((log2((((float(_743.y) * 0.5) * float(_743.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_763 * _763) + (_766 * _766)) + (_760 * _760)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_754 * gl_WorldRayDirectionEXT.x, _754 * gl_WorldRayDirectionEXT.y, _754 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _794 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    }
    else
    {
        _794 = 0.0;
    }
    float _800 = textureLod(sampler2D(C_Camouflage_test_01_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _591) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _592) + cbTextureTilingScale._m0[2u].w), _794).x + cbMtdParam._m0[12u].w;
    uvec2 _816 = uvec2(textureSize(C_Camouflage_test_01_snp_0_Texture2D_3, int(0u)));
    float _867;
    if (_664)
    {
        float _827 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _833 = (_590 * _575) - (_587 * _578);
        float _836 = (_584 * _578) - (_590 * _572);
        float _839 = (_587 * _572) - (_584 * _575);
        float _865 = ((log2((((float(_816.y) * 0.5) * float(_816.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_836 * _836) + (_839 * _839)) + (_833 * _833)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_827 * gl_WorldRayDirectionEXT.x, _827 * gl_WorldRayDirectionEXT.y, _827 * gl_WorldRayDirectionEXT.z), vec3(_603, _605, _606))));
        _867 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    }
    else
    {
        _867 = 0.0;
    }
    vec4 _870 = textureLod(sampler2D(C_Camouflage_test_01_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _591) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _592) + cbTextureTilingScale._m0[3u].w), _867);
    float _877 = (_870.x * 2.0) + (-1.0);
    float _879 = (_870.y * 2.0) + (-1.0);
    float _880 = dot(vec2(_877, _879), vec2(_877, _879));
    float _1496 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _885 = sqrt(1.0 - (isnan(1.0) ? _1496 : (isnan(_1496) ? 1.0 : min(_1496, 1.0))));
    float _888 = fma(_885, _603, fma(_879, _619, (_638 * _632) * _877));
    float _891 = fma(_885, _605, fma(_879, _620, (_638 * _633) * _877));
    float _894 = fma(_885, _606, fma(_879, _621, (_638 * _634) * _877));
    float _898 = inversesqrt(dot(vec3(_888, _891, _894), vec3(_888, _891, _894)));
    float _899 = _898 * _888;
    float _900 = _898 * _891;
    float _901 = _898 * _894;
    float _902 = _870.z + cbMtdParam._m0[13u].x;
    float _916 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_899, _900, _901, 0.0)) - cbMtdParam._m0[13u].y;
    float _1507 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _923 = exp2(log2(1.0 - (isnan(1.0) ? _1507 : (isnan(_1507) ? 1.0 : min(_1507, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875))));
    uvec2 _954 = uvec2(textureSize(C_Camouflage_test_01_snp_0_Texture2D_0, int(0u)));
    float _958 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _959 = _958 * gl_WorldRayDirectionEXT.x;
    float _960 = _958 * gl_WorldRayDirectionEXT.y;
    float _961 = _958 * gl_WorldRayDirectionEXT.z;
    float _1005;
    if (_664)
    {
        float _971 = (_590 * _575) - (_587 * _578);
        float _974 = (_584 * _578) - (_590 * _572);
        float _977 = (_587 * _572) - (_584 * _575);
        float _1003 = ((log2((((float(_954.y) * 0.5) * float(_954.x)) * abs((_545 * _539) - (_544 * _541))) / (sqrt(((_974 * _974) + (_977 * _977)) + (_971 * _971)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_959, _960, _961), vec3(_603, _605, _606))));
        _1005 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    }
    else
    {
        _1005 = 0.0;
    }
    vec4 _1007 = textureLod(sampler2D(C_Camouflage_test_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _591) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _592) + cbTextureTilingScale._m0[1u].w), _1005);
    float _1018 = inversesqrt(dot(vec3(_899, _900, _901), vec3(_899, _900, _901)));
    float _1019 = _1018 * _899;
    float _1020 = _1018 * _900;
    float _1021 = _1018 * _901;
    float _1033 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1034 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1035 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1036 = (-0.0) - _959;
    float _1038 = (-0.0) - _960;
    float _1039 = (-0.0) - _961;
    float _1045 = float(gl_LaunchIDEXT.x);
    float _1046 = float(gl_LaunchIDEXT.y);
    float _1049 = float(gl_LaunchSizeEXT.x);
    float _1063 = fract(fract(sin(dot(vec2(_1045 / _1049, _1046 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1076 = fract(fract(sin(dot(vec2((_1045 + 128.0) / _1049, (_1046 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1077 = 1.0 - _800;
    float _1078 = _1077 * _726;
    float _1079 = _1077 * _727;
    float _1080 = _1077 * _728;
    float _1085 = _800 * (_726 + (-0.039999999105930328369140625));
    float _1086 = _800 * (_727 + (-0.039999999105930328369140625));
    float _1087 = _800 * (_728 + (-0.039999999105930328369140625));
    float _1088 = _1085 + 0.039999999105930328369140625;
    float _1090 = _1086 + 0.039999999105930328369140625;
    float _1091 = _1087 + 0.039999999105930328369140625;
    _64._m0 = 1u;
    uvec4 _1101 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1102 = _1101.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1102, _1101.w, _1102, vec3(_1033, _1034, _1035), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    if (_64._m0 == 0u)
    {
        float _1123 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1019, _1020, _1021));
        float _1528 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1126 = isnan(1.0) ? _1528 : (isnan(_1528) ? 1.0 : min(_1528, 1.0));
        float _1145 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _902) * 0.949999988079071044921875);
        float _1146 = _1145 * _1145;
        float _1147 = g_sceneCB._m0[4u].x - _959;
        float _1148 = g_sceneCB._m0[4u].y - _960;
        float _1149 = g_sceneCB._m0[4u].z - _961;
        float _1153 = inversesqrt(dot(vec3(_1147, _1148, _1149), vec3(_1147, _1148, _1149)));
        float _1154 = _1153 * _1147;
        float _1155 = _1153 * _1148;
        float _1156 = _1153 * _1149;
        float _1157 = dot(vec3(_1019, _1020, _1021), vec3(g_sceneCB._m0[4u].xyz));
        float _1539 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1160 = isnan(1.0) ? _1539 : (isnan(_1539) ? 1.0 : min(_1539, 1.0));
        float _1161 = dot(vec3(_1019, _1020, _1021), vec3(_1036, _1038, _1039));
        float _1550 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1164 = isnan(1.0) ? _1550 : (isnan(_1550) ? 1.0 : min(_1550, 1.0));
        float _1165 = dot(vec3(_1019, _1020, _1021), vec3(_1154, _1155, _1156));
        float _1561 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1168 = isnan(1.0) ? _1561 : (isnan(_1561) ? 1.0 : min(_1561, 1.0));
        float _1169 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1154, _1155, _1156));
        float _1572 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1173 = _1146 * _1146;
        float _1177 = ((_1168 * _1168) * (_1173 + (-1.0))) + 1.0;
        float _1186 = exp2(log2(1.0 - (isnan(1.0) ? _1572 : (isnan(_1572) ? 1.0 : min(_1572, 1.0)))) * 5.0);
        float _1197 = 1.0 - _1146;
        float _1208 = (0.5 / (((_1164 * ((_1160 * _1197) + _1146)) + 9.9999999392252902907785028219223e-09) + (((_1164 * _1197) + _1146) * _1160))) * _1160;
        float _1583 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1210 = (isnan(1.0) ? _1583 : (isnan(_1583) ? 1.0 : min(_1583, 1.0))) * (_1173 / ((_1177 * _1177) * 3.141590118408203125));
        _1217 = ((_1078 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1126;
        _1218 = ((_1079 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1126;
        _1219 = ((_1080 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1126;
        _1220 = (((_1186 * (0.959999978542327880859375 - _1085)) + _1088) * g_sceneCB._m0[5u].x) * _1210;
        _1221 = (((_1186 * (0.959999978542327880859375 - _1086)) + _1090) * g_sceneCB._m0[5u].y) * _1210;
        _1222 = (((_1186 * (0.959999978542327880859375 - _1087)) + _1091) * g_sceneCB._m0[5u].z) * _1210;
    }
    else
    {
        _1217 = 0.0;
        _1218 = 0.0;
        _1219 = 0.0;
        _1220 = 0.0;
        _1221 = 0.0;
        _1222 = 0.0;
    }
    bool _1224 = abs(_1020) < 0.89999997615814208984375;
    float _1226 = float(_1224);
    float _1227 = _1224 ? 0.0 : 1.0;
    float _1230 = (_1226 * _1021) - (_1227 * _1020);
    float _1231 = _1227 * _1019;
    float _1233 = (-0.0) - (_1019 * _1226);
    float _1237 = inversesqrt(dot(vec3(_1230, _1231, _1233), vec3(_1230, _1231, _1233)));
    float _1238 = _1230 * _1237;
    float _1239 = _1231 * _1237;
    float _1240 = _1237 * _1233;
    float _1243 = (_1239 * _1021) - (_1240 * _1020);
    float _1246 = (_1240 * _1019) - (_1238 * _1021);
    float _1249 = (_1238 * _1020) - (_1239 * _1019);
    float _1251;
    float _1259;
    float _1250 = 0.0;
    uint _1252 = 0u;
    float _1256;
    bool _1258;
    for (;;)
    {
        _1256 = (float(_1252) + _1063) * 0.03125;
        _1258 = _1252 == 0u;
        float frontier_phi_47_pred;
        if (_1258)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1406;
            float _1407;
            uint _1409;
            _1406 = 0.0;
            _1407 = 0.5;
            _1409 = _1252;
            float _1260;
            for (;;)
            {
                _1260 = ((_1409 & 1u) != 0u) ? (_1407 + _1406) : _1406;
                uint _1410 = _1409 >> 1u;
                if (_1410 == 0u)
                {
                    break;
                }
                else
                {
                    _1406 = _1260;
                    _1407 *= 0.5;
                    _1409 = _1410;
                }
            }
            frontier_phi_47_pred = _1260;
        }
        _1259 = frontier_phi_47_pred;
        float _1261 = _1259 + _1076;
        float _1265 = sqrt(_1256);
        float _1266 = ((_1261 > 1.0) ? (_1261 + (-1.0)) : _1261) * 6.283185482025146484375;
        float _1269 = cos(_1266) * _1265;
        float _1271 = sin(_1266) * _1265;
        float _1273 = sqrt(1.0 - _1256);
        float _1286 = ((_1273 * _1019) + (_1269 * _1243)) + (_1271 * _1238);
        float _1287 = ((_1273 * _1020) + (_1269 * _1246)) + (_1271 * _1239);
        float _1288 = ((_1273 * _1021) + (_1269 * _1249)) + (_1271 * _1240);
        _63._m0 = 1u;
        uvec4 _1292 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1293 = _1292.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1293, _1292.w, _1293, vec3(_1033, _1034, _1035), 9.9999997473787516355514526367188e-05, vec3(_1286, _1287, _1288), 10000.0, 1);
        float _1299 = dot(vec3(_1019, _1020, _1021), vec3(_1286, _1287, _1288));
        float _1594 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1302 = isnan(1.0) ? _1594 : (isnan(_1594) ? 1.0 : min(_1594, 1.0));
        _1251 = ((float(_63._m0 == 0u) * _1302) / (_1302 * 0.3183098733425140380859375)) + _1250;
        uint _1253 = _1252 + 1u;
        if (_1253 == 32u)
        {
            break;
        }
        else
        {
            _1250 = _1251;
            _1252 = _1253;
            continue;
        }
    }
    float _1310 = _1251 * 0.009947183541953563690185546875;
    float _1315 = dot(vec3(_959, _960, _961), vec3(_1019, _1020, _1021)) * 2.0;
    vec4 _1329 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_959 - (_1315 * _1019), _960 - (_1315 * _1020), _961 - (_1315 * _1021)), 4.0 - (_902 * 4.0));
    float _1334 = dot(vec3(_1036, _1038, _1039), vec3(_1019, _1020, _1021));
    float _1605 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
    float _1344 = exp2(log2(1.0 - (isnan(1.0) ? _1605 : (isnan(_1605) ? 1.0 : min(_1605, 1.0)))) * 5.0);
    vec4 _1356 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1019, _1020, _1021), 0.0);
    float _1369 = (((((cbMtdParam._m0[13u].w * cbMtdParam._m0[11u].x) * _1007.x) + (((cbMtdParam._m0[10u].x * _525) * cbMtdParam._m0[13u].z) * _923)) + _1217) + _1220) + (((_1356.x * _1078) + (((_1344 * (0.959999978542327880859375 - _1085)) + _1088) * _1329.x)) * _1310);
    float _1375 = (((((cbMtdParam._m0[13u].w * cbMtdParam._m0[11u].y) * _1007.y) + (((cbMtdParam._m0[10u].y * _525) * cbMtdParam._m0[13u].z) * _923)) + _1218) + _1221) + (((_1356.y * _1079) + (((_1344 * (0.959999978542327880859375 - _1086)) + _1090) * _1329.y)) * _1310);
    float _1381 = (((((cbMtdParam._m0[13u].w * cbMtdParam._m0[11u].z) * _1007.z) + (((cbMtdParam._m0[10u].z * _525) * cbMtdParam._m0[13u].z) * _923)) + _1219) + _1222) + (((_1356.z * _1080) + (((_1344 * (0.959999978542327880859375 - _1087)) + _1091) * _1329.z)) * _1310);
    float _1616 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
    float _1627 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
    float _1638 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
    bool _1389 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1400;
    _1400.x = _1389 ? ((_596 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1616 : (isnan(_1616) ? 1.0 : min(_1616, 1.0)));
    _1400.y = _1389 ? ((_599 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1627 : (isnan(_1627) ? 1.0 : min(_1627, 1.0)));
    _1400.z = _1389 ? ((_602 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1638 : (isnan(_1638) ? 1.0 : min(_1638, 1.0)));
    payload._m0 = _1400;
}


