#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D OverlayBlend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D OverlayBlend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D OverlayBlend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D OverlayBlend_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D OverlayBlend_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1410;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _159 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _160 >> 16u;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _162;
        }
        _165 = frontier_phi_3_2_ladder_2;
        _167 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    uint _176 = _124.w;
    bool _178 = _175 || (_176 == 0u);
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    uint _228 = _172.y;
    bool _229 = _174 == 0u;
    uint _232 = _229 ? 4u : ((_176 != 0u) ? 12u : 8u);
    uvec4 _241 = texelFetch(l_geomAttrib_1, int((((_228 * _165) + 4u) + (_175 ? (_232 + 4u) : _232)) >> 2u));
    uint _242 = _241.x;
    float _246 = float(int(uint(int(_242 << 16u) >> int(16u))));
    float _247 = float(int(uint(int(_242) >> int(16u))));
    uint _248 = _173 * _167;
    uint _249 = _248 + 12u;
    uint _270;
    uint _271;
    uint _272;
    uint _273;
    if (_178)
    {
        uvec4 _251 = texelFetch(l_geomAttrib_0, int(_249 >> 2u));
        uint _252 = _251.x;
        _270 = _252 & 255u;
        _271 = (_252 >> 8u) & 255u;
        _272 = (_252 >> 16u) & 255u;
        _273 = 16u;
    }
    else
    {
        uint _258 = _249 >> 2u;
        uvec2 _264 = uvec2(texelFetch(l_geomAttrib_0, int(_258)).x, texelFetch(l_geomAttrib_0, int(_258 + 1u)).x);
        uint _265 = _264.x;
        _270 = _265 & 65535u;
        _271 = _265 >> 16u;
        _272 = _264.y & 65535u;
        _273 = 20u;
    }
    uvec4 _279 = texelFetch(l_geomAttrib_0, int((_273 + _248) >> 2u));
    uint _280 = _279.x;
    uint _293 = _229 ? 4u : ((_176 != 0u) ? 12u : 8u);
    uvec4 _300 = texelFetch(l_geomAttrib_1, int((((_228 * _167) + 4u) + (_175 ? (_293 + 4u) : _293)) >> 2u));
    uint _301 = _300.x;
    float _305 = float(int(uint(int(_301 << 16u) >> int(16u))));
    float _306 = float(int(uint(int(_301) >> int(16u))));
    uint _307 = _173 * _168;
    uint _308 = _307 + 12u;
    uint _329;
    uint _330;
    uint _331;
    uint _332;
    if (_178)
    {
        uvec4 _310 = texelFetch(l_geomAttrib_0, int(_308 >> 2u));
        uint _311 = _310.x;
        _329 = _311 & 255u;
        _330 = (_311 >> 8u) & 255u;
        _331 = (_311 >> 16u) & 255u;
        _332 = 16u;
    }
    else
    {
        uint _317 = _308 >> 2u;
        uvec2 _323 = uvec2(texelFetch(l_geomAttrib_0, int(_317)).x, texelFetch(l_geomAttrib_0, int(_317 + 1u)).x);
        uint _324 = _323.x;
        _329 = _324 & 65535u;
        _330 = _324 >> 16u;
        _331 = _323.y & 65535u;
        _332 = 20u;
    }
    uvec4 _338 = texelFetch(l_geomAttrib_0, int((_332 + _307) >> 2u));
    uint _339 = _338.x;
    uint _352 = _229 ? 4u : ((_176 != 0u) ? 12u : 8u);
    uvec4 _359 = texelFetch(l_geomAttrib_1, int((((_228 * _168) + 4u) + (_175 ? (_352 + 4u) : _352)) >> 2u));
    uint _360 = _359.x;
    float _364 = float(int(uint(int(_360 << 16u) >> int(16u))));
    float _365 = float(int(uint(int(_360) >> int(16u))));
    bool _367 = _124.z == 0u;
    float _403;
    float _404;
    float _405;
    if (_367)
    {
        uint _370 = _165 * 3u;
        uvec3 _379 = uvec3(texelFetch(l_geomPositionBuffer, int(_370)).x, texelFetch(l_geomPositionBuffer, int(_370 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_370 + 2u)).x);
        _403 = uintBitsToFloat(_379.x);
        _404 = uintBitsToFloat(_379.y);
        _405 = uintBitsToFloat(_379.z);
    }
    else
    {
        uint _387 = _165 * 2u;
        uvec2 _393 = uvec2(texelFetch(l_geomPositionBuffer, int(_387)).x, texelFetch(l_geomPositionBuffer, int(_387 + 1u)).x);
        uint _394 = _393.x;
        _403 = unpackHalf2x16(_394).x;
        _404 = unpackHalf2x16(_394 >> 16u).x;
        _405 = unpackHalf2x16(_393.y).x;
    }
    float _441;
    float _442;
    float _443;
    if (_367)
    {
        uint _408 = _167 * 3u;
        uvec3 _417 = uvec3(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_408 + 2u)).x);
        _441 = uintBitsToFloat(_417.x);
        _442 = uintBitsToFloat(_417.y);
        _443 = uintBitsToFloat(_417.z);
    }
    else
    {
        uint _425 = _167 * 2u;
        uvec2 _431 = uvec2(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x);
        uint _432 = _431.x;
        _441 = unpackHalf2x16(_432).x;
        _442 = unpackHalf2x16(_432 >> 16u).x;
        _443 = unpackHalf2x16(_431.y).x;
    }
    float _479;
    float _480;
    float _481;
    if (_367)
    {
        uint _446 = _168 * 3u;
        uvec3 _455 = uvec3(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_446 + 2u)).x);
        _479 = uintBitsToFloat(_455.x);
        _480 = uintBitsToFloat(_455.y);
        _481 = uintBitsToFloat(_455.z);
    }
    else
    {
        uint _463 = _168 * 2u;
        uvec2 _469 = uvec2(texelFetch(l_geomPositionBuffer, int(_463)).x, texelFetch(l_geomPositionBuffer, int(_463 + 1u)).x);
        uint _470 = _469.x;
        _479 = unpackHalf2x16(_470).x;
        _480 = unpackHalf2x16(_470 >> 16u).x;
        _481 = unpackHalf2x16(_469.y).x;
    }
    float _484 = (1.0 - hit._m0.x) - hit._m0.y;
    float _518 = (_305 - _246) * 0.00048828125;
    float _520 = (_306 - _247) * 0.00048828125;
    float _523 = (_364 - _246) * 0.00048828125;
    float _524 = (_365 - _247) * 0.00048828125;
    float _546 = _441 - _403;
    float _547 = _442 - _404;
    float _548 = _443 - _405;
    float _551 = fma(_548, gl_ObjectToWorldEXT[2u].x, fma(_547, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _546));
    float _554 = fma(_548, gl_ObjectToWorldEXT[2u].y, fma(_547, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _546));
    float _557 = fma(_548, gl_ObjectToWorldEXT[2u].z, fma(_547, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _546));
    float _558 = _479 - _403;
    float _559 = _480 - _404;
    float _560 = _481 - _405;
    float _563 = fma(_560, gl_ObjectToWorldEXT[2u].x, fma(_559, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _558));
    float _566 = fma(_560, gl_ObjectToWorldEXT[2u].y, fma(_559, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _558));
    float _569 = fma(_560, gl_ObjectToWorldEXT[2u].z, fma(_559, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _558));
    float _570 = (((_305 * hit._m0.x) + (_246 * _484)) + (_364 * hit._m0.y)) * 0.00048828125;
    float _571 = (((_306 * hit._m0.x) + (_247 * _484)) + (_365 * hit._m0.y)) * 0.00048828125;
    float _575 = (((float(_204) * _484) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _578 = (((float(_205) * _484) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _581 = (((float(_206) * _484) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_331) * hit._m0.y);
    float _582 = _575 * 0.0078740157186985015869140625;
    float _584 = _578 * 0.0078740157186985015869140625;
    float _585 = _581 * 0.0078740157186985015869140625;
    float _598 = ((((float(_216 & 255u) * _484) + (-127.0)) + (float(_280 & 255u) * hit._m0.x)) + (float(_339 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float((_216 >> 8u) & 255u) * _484) + (-127.0)) + (float((_280 >> 8u) & 255u) * hit._m0.x)) + (float((_339 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float((_216 >> 16u) & 255u) * _484) + (-127.0)) + (float((_280 >> 16u) & 255u) * hit._m0.x)) + (float((_339 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _601 = ((((float(_216 >> 24u) * _484) + (-127.0)) + (float(_280 >> 24u) * hit._m0.x)) + (float(_339 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _611 = ((_599 * _585) - (_600 * _584)) * _601;
    float _612 = ((_600 * _582) - (_598 * _585)) * _601;
    float _613 = ((_598 * _584) - (_599 * _582)) * _601;
    float _617 = inversesqrt(dot(vec3(_611, _612, _613), vec3(_611, _612, _613)));
    uvec2 _632 = uvec2(textureSize(OverlayBlend_snp_0_Texture2D_7, int(0u)));
    bool _637 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _690;
    if (_637)
    {
        float _648 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _654 = (_569 * _554) - (_566 * _557);
        float _657 = (_563 * _557) - (_569 * _551);
        float _660 = (_566 * _551) - (_563 * _554);
        float _687 = ((log2((((float(_632.y) * 0.5) * float(_632.x)) * abs((_524 * _518) - (_523 * _520))) / (sqrt(((_657 * _657) + (_660 * _660)) + (_654 * _654)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_648 * gl_WorldRayDirectionEXT.x, _648 * gl_WorldRayDirectionEXT.y, _648 * gl_WorldRayDirectionEXT.z), vec3(_582, _584, _585))));
        _690 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    }
    else
    {
        _690 = 0.0;
    }
    vec4 _694 = textureLod(sampler2D(OverlayBlend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _570) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _571) + cbTextureTilingScale._m0[0u].w), _690);
    uvec2 _710 = uvec2(textureSize(OverlayBlend_snp_0_Texture2D_1, int(0u)));
    float _761;
    if (_637)
    {
        float _721 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _727 = (_569 * _554) - (_566 * _557);
        float _730 = (_563 * _557) - (_569 * _551);
        float _733 = (_566 * _551) - (_563 * _554);
        float _759 = ((log2((((float(_710.y) * 0.5) * float(_710.x)) * abs((_524 * _518) - (_523 * _520))) / (sqrt(((_730 * _730) + (_733 * _733)) + (_727 * _727)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_721 * gl_WorldRayDirectionEXT.x, _721 * gl_WorldRayDirectionEXT.y, _721 * gl_WorldRayDirectionEXT.z), vec3(_582, _584, _585))));
        _761 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    }
    else
    {
        _761 = 0.0;
    }
    vec4 _763 = textureLod(sampler2D(OverlayBlend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _570) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _571) + cbTextureTilingScale._m0[2u].w), _761);
    float _777 = ((_694.x * 4.55000019073486328125) * _763.x) * cbMtdParam._m0[9u].x;
    float _780 = ((_694.y * 4.55000019073486328125) * _763.y) * cbMtdParam._m0[9u].y;
    float _783 = ((_694.z * 4.55000019073486328125) * _763.z) * cbMtdParam._m0[9u].z;
    uvec2 _795 = uvec2(textureSize(OverlayBlend_snp_0_Texture2D_3, int(0u)));
    float _846;
    if (_637)
    {
        float _806 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _812 = (_569 * _554) - (_566 * _557);
        float _815 = (_563 * _557) - (_569 * _551);
        float _818 = (_566 * _551) - (_563 * _554);
        float _844 = ((log2((((float(_795.y) * 0.5) * float(_795.x)) * abs((_524 * _518) - (_523 * _520))) / (sqrt(((_815 * _815) + (_818 * _818)) + (_812 * _812)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_806 * gl_WorldRayDirectionEXT.x, _806 * gl_WorldRayDirectionEXT.y, _806 * gl_WorldRayDirectionEXT.z), vec3(_582, _584, _585))));
        _846 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    }
    else
    {
        _846 = 0.0;
    }
    float _856 = cbMtdParam._m0[10u].y + textureLod(sampler2D(OverlayBlend_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _570) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _571) + cbTextureTilingScale._m0[3u].w), _846).x;
    uvec2 _868 = uvec2(textureSize(OverlayBlend_snp_0_Texture2D_0, int(0u)));
    float _919;
    if (_637)
    {
        float _879 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _885 = (_569 * _554) - (_566 * _557);
        float _888 = (_563 * _557) - (_569 * _551);
        float _891 = (_566 * _551) - (_563 * _554);
        float _917 = ((log2((((float(_868.y) * 0.5) * float(_868.x)) * abs((_524 * _518) - (_523 * _520))) / (sqrt(((_888 * _888) + (_891 * _891)) + (_885 * _885)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_879 * gl_WorldRayDirectionEXT.x, _879 * gl_WorldRayDirectionEXT.y, _879 * gl_WorldRayDirectionEXT.z), vec3(_582, _584, _585))));
        _919 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    }
    else
    {
        _919 = 0.0;
    }
    vec4 _922 = textureLod(sampler2D(OverlayBlend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _570) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _571) + cbTextureTilingScale._m0[1u].w), _919);
    uvec2 _938 = uvec2(textureSize(OverlayBlend_snp_0_Texture2D_6, int(0u)));
    float _942 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _943 = _942 * gl_WorldRayDirectionEXT.x;
    float _944 = _942 * gl_WorldRayDirectionEXT.y;
    float _945 = _942 * gl_WorldRayDirectionEXT.z;
    float _989;
    if (_637)
    {
        float _955 = (_569 * _554) - (_566 * _557);
        float _958 = (_563 * _557) - (_569 * _551);
        float _961 = (_566 * _551) - (_563 * _554);
        float _987 = ((log2((((float(_938.y) * 0.5) * float(_938.x)) * abs((_524 * _518) - (_523 * _520))) / (sqrt(((_958 * _958) + (_961 * _961)) + (_955 * _955)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_943, _944, _945), vec3(_582, _584, _585))));
        _989 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    }
    else
    {
        _989 = 0.0;
    }
    vec4 _991 = textureLod(sampler2D(OverlayBlend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _570) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _571) + cbTextureTilingScale._m0[4u].w), _989);
    float _998 = (cbMtdParam._m0[10u].x + _991.z) * _922.z;
    float _1007 = (_991.x * 2.0) + (-1.0);
    float _1008 = (_991.y * 2.0) + (-1.0);
    float _1009 = dot(vec2(_1007, _1008), vec2(_1007, _1008));
    float _1499 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1014 = sqrt(1.0 - (isnan(1.0) ? _1499 : (isnan(_1499) ? 1.0 : min(_1499, 1.0))));
    float _1017 = (cbMtdParam._m0[10u].z * ((_922.x * 2.0) + (-1.0))) + _1007;
    float _1018 = (cbMtdParam._m0[10u].z * ((_922.y * 2.0) + (-1.0))) + _1008;
    float _1021 = fma(_1014, _582, fma(_1018, _598, (_617 * _611) * _1017));
    float _1024 = fma(_1014, _584, fma(_1018, _599, (_617 * _612) * _1017));
    float _1027 = fma(_1014, _585, fma(_1018, _600, (_617 * _613) * _1017));
    float _1031 = inversesqrt(dot(vec3(_1021, _1024, _1027), vec3(_1021, _1024, _1027)));
    float _1032 = _1031 * _1021;
    float _1033 = _1031 * _1024;
    float _1034 = _1031 * _1027;
    float _1046 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1047 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1048 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1049 = (-0.0) - _943;
    float _1051 = (-0.0) - _944;
    float _1052 = (-0.0) - _945;
    float _1058 = float(gl_LaunchIDEXT.x);
    float _1059 = float(gl_LaunchIDEXT.y);
    float _1062 = float(gl_LaunchSizeEXT.x);
    float _1076 = fract(fract(sin(dot(vec2(_1058 / _1062, _1059 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1089 = fract(fract(sin(dot(vec2((_1058 + 128.0) / _1062, (_1059 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1090 = 1.0 - _856;
    float _1091 = _1090 * _777;
    float _1092 = _1090 * _780;
    float _1093 = _1090 * _783;
    float _1098 = _856 * (_777 + (-0.039999999105930328369140625));
    float _1099 = _856 * (_780 + (-0.039999999105930328369140625));
    float _1100 = _856 * (_783 + (-0.039999999105930328369140625));
    float _1101 = _1098 + 0.039999999105930328369140625;
    float _1103 = _1099 + 0.039999999105930328369140625;
    float _1104 = _1100 + 0.039999999105930328369140625;
    _66._m0 = 1u;
    uvec4 _1114 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1115 = _1114.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1115, _1114.w, _1115, vec3(_1046, _1047, _1048), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    if (_66._m0 == 0u)
    {
        float _1137 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1032, _1033, _1034));
        float _1510 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1140 = isnan(1.0) ? _1510 : (isnan(_1510) ? 1.0 : min(_1510, 1.0));
        float _1159 = 1.0 - (sqrt((_998 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1160 = _1159 * _1159;
        float _1161 = g_sceneCB._m0[4u].x - _943;
        float _1162 = g_sceneCB._m0[4u].y - _944;
        float _1163 = g_sceneCB._m0[4u].z - _945;
        float _1167 = inversesqrt(dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163)));
        float _1168 = _1167 * _1161;
        float _1169 = _1167 * _1162;
        float _1170 = _1167 * _1163;
        float _1171 = dot(vec3(_1032, _1033, _1034), vec3(g_sceneCB._m0[4u].xyz));
        float _1521 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1174 = isnan(1.0) ? _1521 : (isnan(_1521) ? 1.0 : min(_1521, 1.0));
        float _1175 = dot(vec3(_1032, _1033, _1034), vec3(_1049, _1051, _1052));
        float _1532 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1178 = isnan(1.0) ? _1532 : (isnan(_1532) ? 1.0 : min(_1532, 1.0));
        float _1179 = dot(vec3(_1032, _1033, _1034), vec3(_1168, _1169, _1170));
        float _1543 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1182 = isnan(1.0) ? _1543 : (isnan(_1543) ? 1.0 : min(_1543, 1.0));
        float _1183 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1168, _1169, _1170));
        float _1554 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1187 = _1160 * _1160;
        float _1191 = ((_1182 * _1182) * (_1187 + (-1.0))) + 1.0;
        float _1200 = exp2(log2(1.0 - (isnan(1.0) ? _1554 : (isnan(_1554) ? 1.0 : min(_1554, 1.0)))) * 5.0);
        float _1211 = 1.0 - _1160;
        float _1222 = (0.5 / (((_1178 * ((_1174 * _1211) + _1160)) + 9.9999999392252902907785028219223e-09) + (((_1178 * _1211) + _1160) * _1174))) * _1174;
        float _1565 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1224 = (isnan(1.0) ? _1565 : (isnan(_1565) ? 1.0 : min(_1565, 1.0))) * (_1187 / ((_1191 * _1191) * 3.141590118408203125));
        _1231 = ((_1091 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1140;
        _1232 = ((_1092 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1140;
        _1233 = ((_1093 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1140;
        _1234 = (((_1200 * (0.959999978542327880859375 - _1098)) + _1101) * g_sceneCB._m0[5u].x) * _1224;
        _1235 = (((_1200 * (0.959999978542327880859375 - _1099)) + _1103) * g_sceneCB._m0[5u].y) * _1224;
        _1236 = (((_1200 * (0.959999978542327880859375 - _1100)) + _1104) * g_sceneCB._m0[5u].z) * _1224;
    }
    else
    {
        _1231 = 0.0;
        _1232 = 0.0;
        _1233 = 0.0;
        _1234 = 0.0;
        _1235 = 0.0;
        _1236 = 0.0;
    }
    bool _1238 = abs(_1033) < 0.89999997615814208984375;
    float _1240 = float(_1238);
    float _1241 = _1238 ? 0.0 : 1.0;
    float _1244 = (_1240 * _1034) - (_1241 * _1033);
    float _1245 = _1241 * _1032;
    float _1247 = (-0.0) - (_1032 * _1240);
    float _1251 = inversesqrt(dot(vec3(_1244, _1245, _1247), vec3(_1244, _1245, _1247)));
    float _1252 = _1244 * _1251;
    float _1253 = _1245 * _1251;
    float _1254 = _1251 * _1247;
    float _1257 = (_1253 * _1034) - (_1254 * _1033);
    float _1260 = (_1254 * _1032) - (_1252 * _1034);
    float _1263 = (_1252 * _1033) - (_1253 * _1032);
    float _1265;
    float _1273;
    float _1264 = 0.0;
    uint _1266 = 0u;
    float _1270;
    bool _1272;
    for (;;)
    {
        _1270 = (float(_1266) + _1076) * 0.03125;
        _1272 = _1266 == 0u;
        float frontier_phi_37_pred;
        if (_1272)
        {
            frontier_phi_37_pred = 0.0;
        }
        else
        {
            float _1415;
            float _1416;
            uint _1418;
            _1415 = 0.0;
            _1416 = 0.5;
            _1418 = _1266;
            float _1274;
            for (;;)
            {
                _1274 = ((_1418 & 1u) != 0u) ? (_1416 + _1415) : _1415;
                uint _1419 = _1418 >> 1u;
                if (_1419 == 0u)
                {
                    break;
                }
                else
                {
                    _1415 = _1274;
                    _1416 *= 0.5;
                    _1418 = _1419;
                }
            }
            frontier_phi_37_pred = _1274;
        }
        _1273 = frontier_phi_37_pred;
        float _1275 = _1273 + _1089;
        float _1279 = sqrt(_1270);
        float _1280 = ((_1275 > 1.0) ? (_1275 + (-1.0)) : _1275) * 6.283185482025146484375;
        float _1283 = cos(_1280) * _1279;
        float _1285 = sin(_1280) * _1279;
        float _1287 = sqrt(1.0 - _1270);
        float _1300 = ((_1287 * _1032) + (_1283 * _1257)) + (_1285 * _1252);
        float _1301 = ((_1287 * _1033) + (_1283 * _1260)) + (_1285 * _1253);
        float _1302 = ((_1287 * _1034) + (_1283 * _1263)) + (_1285 * _1254);
        _65._m0 = 1u;
        uvec4 _1306 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1307 = _1306.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1307, _1306.w, _1307, vec3(_1046, _1047, _1048), 9.9999997473787516355514526367188e-05, vec3(_1300, _1301, _1302), 10000.0, 1);
        float _1313 = dot(vec3(_1032, _1033, _1034), vec3(_1300, _1301, _1302));
        float _1576 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1316 = isnan(1.0) ? _1576 : (isnan(_1576) ? 1.0 : min(_1576, 1.0));
        _1265 = ((float(_65._m0 == 0u) * _1316) / (_1316 * 0.3183098733425140380859375)) + _1264;
        uint _1267 = _1266 + 1u;
        if (_1267 == 32u)
        {
            break;
        }
        else
        {
            _1264 = _1265;
            _1266 = _1267;
            continue;
        }
    }
    float _1324 = _1265 * 0.009947183541953563690185546875;
    float _1329 = dot(vec3(_943, _944, _945), vec3(_1032, _1033, _1034)) * 2.0;
    vec4 _1344 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_943 - (_1329 * _1032), _944 - (_1329 * _1033), _945 - (_1329 * _1034)), 4.0 - (_998 * 8.0));
    float _1349 = dot(vec3(_1049, _1051, _1052), vec3(_1032, _1033, _1034));
    float _1587 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
    float _1359 = exp2(log2(1.0 - (isnan(1.0) ? _1587 : (isnan(_1587) ? 1.0 : min(_1587, 1.0)))) * 5.0);
    vec4 _1371 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1032, _1033, _1034), 0.0);
    float _1382 = (_1234 + _1231) + (((_1371.x * _1091) + (((_1359 * (0.959999978542327880859375 - _1098)) + _1101) * _1344.x)) * _1324);
    float _1386 = (_1235 + _1232) + (((_1371.y * _1092) + (((_1359 * (0.959999978542327880859375 - _1099)) + _1103) * _1344.y)) * _1324);
    float _1390 = (_1236 + _1233) + (((_1371.z * _1093) + (((_1359 * (0.959999978542327880859375 - _1100)) + _1104) * _1344.z)) * _1324);
    float _1598 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
    float _1609 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
    float _1620 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    bool _1398 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1409;
    _1409.x = _1398 ? ((_575 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1598 : (isnan(_1598) ? 1.0 : min(_1598, 1.0)));
    _1409.y = _1398 ? ((_578 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1609 : (isnan(_1609) ? 1.0 : min(_1609, 1.0)));
    _1409.z = _1398 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1620 : (isnan(_1620) ? 1.0 : min(_1620, 1.0)));
    payload._m0 = _1409;
}


