#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[42];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_12;
layout(set = 0, binding = 2) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2427;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _168 & 65535u;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _169 >> 16u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        _174 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
        _177 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _182 * _174;
    uint _185 = _183 >> 2u;
    uvec3 _194 = uvec3(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x, texelFetch(l_geomAttrib_0, int(_185 + 2u)).x);
    uint _201 = _181.z;
    bool _202 = _201 != 0u;
    bool _204 = _133.w == 0u;
    bool _205 = _202 || _204;
    uint _206 = _183 + 12u;
    uint _229;
    uint _230;
    uint _231;
    uint _232;
    if (_205)
    {
        uvec4 _208 = texelFetch(l_geomAttrib_0, int(_206 >> 2u));
        uint _209 = _208.x;
        _229 = _209 & 255u;
        _230 = (_209 >> 8u) & 255u;
        _231 = (_209 >> 16u) & 255u;
        _232 = 16u;
    }
    else
    {
        uint _217 = _206 >> 2u;
        uvec2 _223 = uvec2(texelFetch(l_geomAttrib_0, int(_217)).x, texelFetch(l_geomAttrib_0, int(_217 + 1u)).x);
        uint _224 = _223.x;
        _229 = _224 & 65535u;
        _230 = _224 >> 16u;
        _231 = _223.y & 65535u;
        _232 = 20u;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int((_232 + _183) >> 2u));
    uint _240 = _239.x;
    bool _254 = _201 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _232 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_204)
        {
            frontier_phi_9_10_ladder = _232 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _232 + 12u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uint _259 = _202 ? (_255 + 4u) : _255;
    uint _262 = ((_183 + 4u) + _259) >> 2u;
    uvec2 _268 = uvec2(texelFetch(l_geomAttrib_0, int(_262)).x, texelFetch(l_geomAttrib_0, int(_262 + 1u)).x);
    uint _269 = _268.x;
    uint _270 = _268.y;
    float _279 = float(int(uint(int(_270 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_270) >> int(16u))));
    uvec4 _284 = texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _259) >> 2u));
    uint _285 = _284.x;
    uvec4 _294 = texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _259) >> 2u));
    uint _295 = _294.x;
    uint _311 = _182 * _176;
    uint _312 = _311 >> 2u;
    uvec3 _321 = uvec3(texelFetch(l_geomAttrib_0, int(_312)).x, texelFetch(l_geomAttrib_0, int(_312 + 1u)).x, texelFetch(l_geomAttrib_0, int(_312 + 2u)).x);
    uint _328 = _311 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_205)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _311) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_254)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_204)
        {
            frontier_phi_16_17_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _352 + 12u;
        }
        _371 = frontier_phi_16_17_ladder;
    }
    uint _375 = _202 ? (_371 + 4u) : _371;
    uint _378 = ((_311 + 4u) + _375) >> 2u;
    uvec2 _384 = uvec2(texelFetch(l_geomAttrib_0, int(_378)).x, texelFetch(l_geomAttrib_0, int(_378 + 1u)).x);
    uint _385 = _384.x;
    uint _386 = _384.y;
    float _395 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _396 = float(int(uint(int(_386) >> int(16u))));
    uvec4 _400 = texelFetch(l_geomAttrib_0, int(((_311 + 12u) + _375) >> 2u));
    uint _401 = _400.x;
    uvec4 _410 = texelFetch(l_geomAttrib_0, int(((_311 + 16u) + _375) >> 2u));
    uint _411 = _410.x;
    uint _427 = _182 * _177;
    uint _428 = _427 >> 2u;
    uvec3 _437 = uvec3(texelFetch(l_geomAttrib_0, int(_428)).x, texelFetch(l_geomAttrib_0, int(_428 + 1u)).x, texelFetch(l_geomAttrib_0, int(_428 + 2u)).x);
    uint _444 = _427 + 12u;
    uint _465;
    uint _466;
    uint _467;
    uint _468;
    if (_205)
    {
        uvec4 _446 = texelFetch(l_geomAttrib_0, int(_444 >> 2u));
        uint _447 = _446.x;
        _465 = _447 & 255u;
        _466 = (_447 >> 8u) & 255u;
        _467 = (_447 >> 16u) & 255u;
        _468 = 16u;
    }
    else
    {
        uint _453 = _444 >> 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomAttrib_0, int(_453)).x, texelFetch(l_geomAttrib_0, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _465 = _460 & 65535u;
        _466 = _460 >> 16u;
        _467 = _459.y & 65535u;
        _468 = 20u;
    }
    uvec4 _474 = texelFetch(l_geomAttrib_0, int((_468 + _427) >> 2u));
    uint _475 = _474.x;
    uint _487;
    if (_254)
    {
        _487 = _468 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_204)
        {
            frontier_phi_23_24_ladder = _468 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _468 + 12u;
        }
        _487 = frontier_phi_23_24_ladder;
    }
    uint _491 = _202 ? (_487 + 4u) : _487;
    uint _494 = ((_427 + 4u) + _491) >> 2u;
    uvec2 _500 = uvec2(texelFetch(l_geomAttrib_0, int(_494)).x, texelFetch(l_geomAttrib_0, int(_494 + 1u)).x);
    uint _501 = _500.x;
    uint _502 = _500.y;
    float _511 = float(int(uint(int(_502 << 16u) >> int(16u))));
    float _512 = float(int(uint(int(_502) >> int(16u))));
    uvec4 _516 = texelFetch(l_geomAttrib_0, int(((_427 + 12u) + _491) >> 2u));
    uint _517 = _516.x;
    uvec4 _526 = texelFetch(l_geomAttrib_0, int(((_427 + 16u) + _491) >> 2u));
    uint _527 = _526.x;
    bool _544 = _133.z == 0u;
    float _580;
    float _581;
    float _582;
    if (_544)
    {
        uint _547 = _174 * 3u;
        uvec3 _556 = uvec3(texelFetch(l_geomPositionBuffer, int(_547)).x, texelFetch(l_geomPositionBuffer, int(_547 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_547 + 2u)).x);
        _580 = uintBitsToFloat(_556.x);
        _581 = uintBitsToFloat(_556.y);
        _582 = uintBitsToFloat(_556.z);
    }
    else
    {
        uint _564 = _174 * 2u;
        uvec2 _570 = uvec2(texelFetch(l_geomPositionBuffer, int(_564)).x, texelFetch(l_geomPositionBuffer, int(_564 + 1u)).x);
        uint _571 = _570.x;
        _580 = unpackHalf2x16(_571).x;
        _581 = unpackHalf2x16(_571 >> 16u).x;
        _582 = unpackHalf2x16(_570.y).x;
    }
    float _618;
    float _619;
    float _620;
    if (_544)
    {
        uint _585 = _176 * 3u;
        uvec3 _594 = uvec3(texelFetch(l_geomPositionBuffer, int(_585)).x, texelFetch(l_geomPositionBuffer, int(_585 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_585 + 2u)).x);
        _618 = uintBitsToFloat(_594.x);
        _619 = uintBitsToFloat(_594.y);
        _620 = uintBitsToFloat(_594.z);
    }
    else
    {
        uint _602 = _176 * 2u;
        uvec2 _608 = uvec2(texelFetch(l_geomPositionBuffer, int(_602)).x, texelFetch(l_geomPositionBuffer, int(_602 + 1u)).x);
        uint _609 = _608.x;
        _618 = unpackHalf2x16(_609).x;
        _619 = unpackHalf2x16(_609 >> 16u).x;
        _620 = unpackHalf2x16(_608.y).x;
    }
    float _656;
    float _657;
    float _658;
    if (_544)
    {
        uint _623 = _177 * 3u;
        uvec3 _632 = uvec3(texelFetch(l_geomPositionBuffer, int(_623)).x, texelFetch(l_geomPositionBuffer, int(_623 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_623 + 2u)).x);
        _656 = uintBitsToFloat(_632.x);
        _657 = uintBitsToFloat(_632.y);
        _658 = uintBitsToFloat(_632.z);
    }
    else
    {
        uint _640 = _177 * 2u;
        uvec2 _646 = uvec2(texelFetch(l_geomPositionBuffer, int(_640)).x, texelFetch(l_geomPositionBuffer, int(_640 + 1u)).x);
        uint _647 = _646.x;
        _656 = unpackHalf2x16(_647).x;
        _657 = unpackHalf2x16(_647 >> 16u).x;
        _658 = unpackHalf2x16(_646.y).x;
    }
    float _661 = (1.0 - hit._m0.x) - hit._m0.y;
    float _674 = ((uintBitsToFloat(_321.x) * hit._m0.x) + (uintBitsToFloat(_194.x) * _661)) + (uintBitsToFloat(_437.x) * hit._m0.y);
    float _675 = ((uintBitsToFloat(_321.y) * hit._m0.x) + (uintBitsToFloat(_194.y) * _661)) + (uintBitsToFloat(_437.y) * hit._m0.y);
    float _676 = ((uintBitsToFloat(_321.z) * hit._m0.x) + (uintBitsToFloat(_194.z) * _661)) + (uintBitsToFloat(_437.z) * hit._m0.y);
    float _739 = (((float(_411 & 255u) * hit._m0.x) + (float(_295 & 255u) * _661)) + (float(_527 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _743 = (((float((_411 >> 8u) & 255u) * hit._m0.x) + (float((_295 >> 8u) & 255u) * _661)) + (float((_527 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _746 = (((float((_411 >> 16u) & 255u) * hit._m0.x) + (float((_295 >> 16u) & 255u) * _661)) + (float((_527 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _754 = (_395 - _279) * 0.00048828125;
    float _756 = (_396 - _280) * 0.00048828125;
    float _759 = (_511 - _279) * 0.00048828125;
    float _760 = (_512 - _280) * 0.00048828125;
    float _782 = _618 - _580;
    float _783 = _619 - _581;
    float _784 = _620 - _582;
    float _787 = fma(_784, gl_ObjectToWorldEXT[2u].x, fma(_783, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _782));
    float _790 = fma(_784, gl_ObjectToWorldEXT[2u].y, fma(_783, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _782));
    float _793 = fma(_784, gl_ObjectToWorldEXT[2u].z, fma(_783, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _782));
    float _794 = _656 - _580;
    float _795 = _657 - _581;
    float _796 = _658 - _582;
    float _799 = fma(_796, gl_ObjectToWorldEXT[2u].x, fma(_795, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _794));
    float _802 = fma(_796, gl_ObjectToWorldEXT[2u].y, fma(_795, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _794));
    float _805 = fma(_796, gl_ObjectToWorldEXT[2u].z, fma(_795, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _794));
    float _806 = (((float(int(uint(int(_385 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_501 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _807 = (((float(int(uint(int(_385) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_269) >> int(16u)))) * _661)) + (float(int(uint(int(_501) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _808 = (((_395 * hit._m0.x) + (_279 * _661)) + (_511 * hit._m0.y)) * 0.00048828125;
    float _809 = (((_396 * hit._m0.x) + (_280 * _661)) + (_512 * hit._m0.y)) * 0.00048828125;
    float _815 = (((float(_229) * _661) + (-127.0)) + (float(_349) * hit._m0.x)) + (float(_465) * hit._m0.y);
    float _818 = (((float(_230) * _661) + (-127.0)) + (float(_350) * hit._m0.x)) + (float(_466) * hit._m0.y);
    float _821 = (((float(_231) * _661) + (-127.0)) + (float(_351) * hit._m0.x)) + (float(_467) * hit._m0.y);
    float _822 = _815 * 0.0078740157186985015869140625;
    float _824 = _818 * 0.0078740157186985015869140625;
    float _825 = _821 * 0.0078740157186985015869140625;
    float _838 = ((((float(_240 & 255u) * _661) + (-127.0)) + (float(_359 & 255u) * hit._m0.x)) + (float(_475 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _839 = ((((float((_240 >> 8u) & 255u) * _661) + (-127.0)) + (float((_359 >> 8u) & 255u) * hit._m0.x)) + (float((_475 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _840 = ((((float((_240 >> 16u) & 255u) * _661) + (-127.0)) + (float((_359 >> 16u) & 255u) * hit._m0.x)) + (float((_475 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _841 = ((((float(_240 >> 24u) * _661) + (-127.0)) + (float(_359 >> 24u) * hit._m0.x)) + (float(_475 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _851 = ((_839 * _825) - (_840 * _824)) * _841;
    float _852 = ((_840 * _822) - (_838 * _825)) * _841;
    float _853 = ((_838 * _824) - (_839 * _822)) * _841;
    float _857 = inversesqrt(dot(vec3(_851, _852, _853), vec3(_851, _852, _853)));
    uvec4 _878 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _888 = (_878.w != 0u) ? cbMtdParam._m0[25u].z : (cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x);
    uvec2 _911 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_1, int(0u)));
    bool _916 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _969;
    if (_916)
    {
        float _927 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _933 = (_805 * _790) - (_802 * _793);
        float _936 = (_799 * _793) - (_805 * _787);
        float _939 = (_802 * _787) - (_799 * _790);
        float _966 = ((log2((((float(_911.y) * 0.5) * float(_911.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_936 * _936) + (_939 * _939)) + (_933 * _933)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_927 * gl_WorldRayDirectionEXT.x, _927 * gl_WorldRayDirectionEXT.y, _927 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _969 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    }
    else
    {
        _969 = 0.0;
    }
    vec4 _973 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[37u].y) * ((_888 * cbMtdParam._m0[36u].w) + _808)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[37u].z) * ((_888 * cbMtdParam._m0[37u].x) + _809)) + cbTextureTilingScale._m0[0u].w), _969);
    float _975 = _973.x;
    uvec2 _1017 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_2, int(0u)));
    float _1068;
    if (_916)
    {
        float _1028 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1034 = (_805 * _790) - (_802 * _793);
        float _1037 = (_799 * _793) - (_805 * _787);
        float _1040 = (_802 * _787) - (_799 * _790);
        float _1066 = ((log2((((float(_1017.y) * 0.5) * float(_1017.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1037 * _1037) + (_1040 * _1040)) + (_1034 * _1034)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1028 * gl_WorldRayDirectionEXT.x, _1028 * gl_WorldRayDirectionEXT.y, _1028 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1068 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    }
    else
    {
        _1068 = 0.0;
    }
    vec4 _1071 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((cbMtdParam._m0[29u].w * _888) + (_975 * cbMtdParam._m0[27u].y)) + cbMtdParam._m0[37u].w) + (cbMtdParam._m0[27u].w * _808)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((cbMtdParam._m0[30u].x * _888) + (_975 * cbMtdParam._m0[27u].z)) + cbMtdParam._m0[38u].x) + (cbMtdParam._m0[28u].x * _809)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1068);
    uvec2 _1117 = uvec2(textureSize(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_12, int(0u)));
    float _1168;
    if (_916)
    {
        float _1128 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1134 = (_805 * _790) - (_802 * _793);
        float _1137 = (_799 * _793) - (_805 * _787);
        float _1140 = (_802 * _787) - (_799 * _790);
        float _1166 = ((log2((((float(_1117.y) * 0.5) * float(_1117.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1137 * _1137) + (_1140 * _1140)) + (_1134 * _1134)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1128 * gl_WorldRayDirectionEXT.x, _1128 * gl_WorldRayDirectionEXT.y, _1128 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1168 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
    }
    else
    {
        _1168 = 0.0;
    }
    vec4 _1170 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_12, SS_WrapLinear), vec2((((((cbMtdParam._m0[35u].w * _888) + (cbMtdParam._m0[36u].y * _975)) + cbMtdParam._m0[34u].w) + (cbMtdParam._m0[35u].y * _808)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((cbMtdParam._m0[36u].x * _888) + (cbMtdParam._m0[36u].z * _975)) + cbMtdParam._m0[35u].x) + (cbMtdParam._m0[35u].z * _809)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1168);
    float _1177 = (cbMtdParam._m0[20u].z * _743) * _1170.w;
    float _1178 = _1177 + ((cbMtdParam._m0[20u].y * _743) * _1071.w);
    float _2558 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
    float _1179 = isnan(1.0) ? _2558 : (isnan(_2558) ? 1.0 : min(_2558, 1.0));
    uvec4 _1183 = floatBitsToUint(cbMtdParam._m0[10u]);
    bool _1185 = _1183.y != 0u;
    uvec4 _1189 = floatBitsToUint(cbMtdParam._m0[11u]);
    float _1194 = cbMtdParam._m0[34u].y * _975;
    float _1195 = cbMtdParam._m0[34u].z * _975;
    float _1201 = (((float(texelFetch(l_geomAttrib_0, int(((_311 + 20u) + _375) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 20u) + _259) >> 2u)).x & 255u) * _661)) + (float(texelFetch(l_geomAttrib_0, int(((_427 + 20u) + _491) >> 2u)).x & 255u) * hit._m0.y)) * 0.007843137718737125396728515625;
    float _1221 = (((cbMtdParam._m0[32u].z * _888) + _1195) + cbMtdParam._m0[29u].z) + (cbMtdParam._m0[32u].x * _807);
    float _2569 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1257;
    if (_916)
    {
        float _1241 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1249 = log2(0.0);
        float _1255 = ((_1249 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1241 * gl_WorldRayDirectionEXT.x, _1241 * gl_WorldRayDirectionEXT.y, _1241 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1257 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    }
    else
    {
        _1257 = 0.0;
    }
    vec4 _1260 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((((cbMtdParam._m0[29u].y + _1194) + ((cbMtdParam._m0[32u].y - (cbMtdParam._m0[32u].y * _1201)) * _888)) + (cbMtdParam._m0[31u].w * _806)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1189.x != 0u) ? _1221 : (isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0)))) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1257);
    float _1262 = _1260.x;
    float _1263 = _1260.y;
    float _1264 = _1260.z;
    float _1286 = ((cbMtdParam._m0[31u].y + _1194) + ((cbMtdParam._m0[28u].y - (cbMtdParam._m0[28u].y * _1201)) * _888)) + (cbMtdParam._m0[30u].w * _806);
    float _1289 = ((cbMtdParam._m0[31u].z + _1195) + ((cbMtdParam._m0[28u].z - (cbMtdParam._m0[28u].z * _1201)) * _888)) + (cbMtdParam._m0[31u].x * _807);
    float _2585 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
    float _2596 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
    float _1328;
    if (_916)
    {
        float _1312 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1320 = log2(0.0);
        float _1326 = ((_1320 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1312 * gl_WorldRayDirectionEXT.x, _1312 * gl_WorldRayDirectionEXT.y, _1312 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1328 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
    }
    else
    {
        _1328 = 0.0;
    }
    vec4 _1331 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_878.x != 0u) ? _1286 : (isnan(1.0) ? _2585 : (isnan(_2585) ? 1.0 : min(_2585, 1.0)))) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1183.w != 0u) ? _1289 : (isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0)))) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1328);
    float _1338 = (cbMtdParam._m0[25u].x * _739) * _1331.w;
    float _1339 = _1338 + (_1260.w * _739);
    float _2612 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
    float _1340 = isnan(1.0) ? _2612 : (isnan(_2612) ? 1.0 : min(_2612, 1.0));
    float _1365 = ((cbMtdParam._m0[33u].y + _1194) + ((cbMtdParam._m0[32u].w - (cbMtdParam._m0[32u].w * _1201)) * _888)) + (cbMtdParam._m0[33u].w * _806);
    float _1368 = ((cbMtdParam._m0[33u].z + _1195) + ((cbMtdParam._m0[33u].x - (cbMtdParam._m0[33u].x * _1201)) * _888)) + (cbMtdParam._m0[34u].x * _807);
    float _2623 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
    float _2634 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
    float _1407;
    if (_916)
    {
        float _1391 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1399 = log2(0.0);
        float _1405 = ((_1399 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1391 * gl_WorldRayDirectionEXT.x, _1391 * gl_WorldRayDirectionEXT.y, _1391 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1407 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
    }
    else
    {
        _1407 = 0.0;
    }
    vec4 _1410 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_878.y != 0u) ? _1365 : (isnan(1.0) ? _2634 : (isnan(_2634) ? 1.0 : min(_2634, 1.0)))) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1183.x != 0u) ? _1368 : (isnan(1.0) ? _2623 : (isnan(_2623) ? 1.0 : min(_2623, 1.0)))) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1407);
    float _1417 = (cbMtdParam._m0[24u].z * _739) * _1410.w;
    float _1418 = _1417 + _1340;
    float _2650 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
    float _1421 = (_1185 ? _1340 : (isnan(1.0) ? _2650 : (isnan(_2650) ? 1.0 : min(_2650, 1.0)))) + _1179;
    float _1422 = _1421 + _1417;
    float _2661 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _1447 = (((cbMtdParam._m0[30u].y * _888) + (cbMtdParam._m0[28u].w * _975)) + cbMtdParam._m0[38u].y) + (((((float(int(uint(int(_401 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285 << 16u) >> int(16u)))) * _661)) + (float(int(uint(int(_517 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[38u].w);
    float _1450 = (((cbMtdParam._m0[30u].z * _888) + (cbMtdParam._m0[29u].x * _975)) + cbMtdParam._m0[38u].z) + (((((float(int(uint(int(_401) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_285) >> int(16u)))) * _661)) + (float(int(uint(int(_517) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[39u].x);
    float _2672 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
    float _1452 = (_1183.z != 0u) ? _1450 : (isnan(1.0) ? _2672 : (isnan(_2672) ? 1.0 : min(_2672, 1.0)));
    float _1463 = inversesqrt(dot(vec3(cbMtdParam._m0[39u].w, cbMtdParam._m0[40u].xy), vec3(cbMtdParam._m0[39u].w, cbMtdParam._m0[40u].xy)));
    float _1464 = _1463 * cbMtdParam._m0[39u].w;
    float _1465 = _1463 * cbMtdParam._m0[40u].x;
    float _1466 = _1463 * cbMtdParam._m0[40u].y;
    float _1475 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[22u].w) * cbMtdParam._m0[24u].x;
    float _1478 = (cbMtdParam._m0[24u].y * 0.25) * dot(vec4(_1464, _1465, _1466, 0.0), vec4(_857 * _851, _857 * _852, _857 * _853, 0.0));
    float _1481 = (cbMtdParam._m0[24u].y * (-0.25)) * dot(vec4(_1464, _1465, _1466, 0.0), vec4(_838, _839, _840, 0.0));
    float _1482 = fract(_1475);
    float _1484 = fract(_1475 + 0.5);
    float _1496 = abs((_1482 * 2.0) + (-1.0));
    vec4 _1520 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((_1482 * _1481) + _1447)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((_1478 * _1482) + _1452)) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1522 = _1520.x;
    float _1523 = _1520.y;
    float _1524 = _1520.z;
    float _1525 = _1520.w;
    vec4 _1526 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((_1484 * _1481) + _1447) + cbMtdParam._m0[26u].w)) + cbTextureTilingScale._m0[3u].z, ((((_1484 * _1478) + _1452) + cbMtdParam._m0[27u].x) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1544 = (((_1526.w - _1525) * _1496) + _1525) * _746;
    float _1545 = _1544 + (_1185 ? (isnan(1.0) ? _2661 : (isnan(_2661) ? 1.0 : min(_2661, 1.0))) : _1421);
    float _2683 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
    float _1549 = ((isnan(1.0) ? _2683 : (isnan(_2683) ? 1.0 : min(_2683, 1.0))) * cbMtdParam._m0[20u].w) * cbMtdParam._m0[26u].y;
    float _1568 = cbMtdParam._m0[17u].z + dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(0.0, -1.0, 0.0, 0.0));
    float _1569 = isnan(cbMtdParam._m0[18u].x) ? _1568 : (isnan(_1568) ? cbMtdParam._m0[18u].x : max(_1568, cbMtdParam._m0[18u].x));
    float _1616;
    if (_916)
    {
        float _1600 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1608 = log2(0.0);
        float _1614 = ((_1608 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1600 * gl_WorldRayDirectionEXT.x, _1600 * gl_WorldRayDirectionEXT.y, _1600 * gl_WorldRayDirectionEXT.z), vec3(_822, _824, _825))));
        _1616 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
    }
    else
    {
        _1616 = 0.0;
    }
    vec4 _1619 = textureLod(sampler2D(M_Atmosphere_Clouds_Cheap_004_snp_0_Texture2D_6, SS_WrapLinear), vec2((((_878.z != 0u) ? (1.0 - ((g_sceneCB._m0[4u].y + 1.0) * 0.25)) : (cbMtdParam._m0[22u].z * 0.0416666679084300994873046875)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (1.0 - (isnan(cbMtdParam._m0[18u].y) ? _1569 : (isnan(_1569) ? cbMtdParam._m0[18u].y : min(_1569, cbMtdParam._m0[18u].y))))) + cbTextureTilingScale._m0[6u].w), _1616);
    float _1638 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
    float _1639 = _1638 * _674;
    float _1640 = _1638 * _675;
    float _1641 = _1638 * _676;
    bool _1643 = _1189.y != 0u;
    float _1646 = isnan(-90.0) ? cbMtdParam._m0[39u].y : (isnan(cbMtdParam._m0[39u].y) ? (-90.0) : max(cbMtdParam._m0[39u].y, -90.0));
    float _1650 = (isnan(90.0) ? _1646 : (isnan(_1646) ? 90.0 : min(_1646, 90.0))) * 0.01745329238474369049072265625;
    float _1653 = cbMtdParam._m0[39u].z * 0.01745329238474369049072265625;
    float _1663 = _1643 ? g_sceneCB._m0[4u].x : (cos(3.1415927410125732421875 - _1650) * _1653);
    float _1664 = _1643 ? g_sceneCB._m0[4u].y : sin(_1650);
    float _1665 = _1643 ? g_sceneCB._m0[4u].z : (cos(_1650) * cos(_1653));
    float _1669 = inversesqrt(dot(vec3(_1663, _1664, _1665), vec3(_1663, _1664, _1665)));
    float _1670 = _1663 * _1669;
    float _1671 = _1664 * _1669;
    float _1672 = _1665 * _1669;
    float _1676 = inversesqrt(dot(vec3(_1670, _1671, _1672), vec3(_1670, _1671, _1672)));
    float _1691 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1676 * _1670, _1676 * _1671, _1676 * _1672, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2719 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
    float _1693 = isnan(1.0) ? _2719 : (isnan(_2719) ? 1.0 : min(_2719, 1.0));
    float _1699 = exp2(log2(_1693 * 6.5) * 7.0);
    float _2730 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
    float _1701 = (isnan(1.0) ? _2730 : (isnan(_2730) ? 1.0 : min(_2730, 1.0))) + _1693;
    float _2741 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
    float _1702 = isnan(1.0) ? _2741 : (isnan(_2741) ? 1.0 : min(_2741, 1.0));
    float _1712 = ((_1702 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * _1619.x;
    float _1713 = ((_1702 * (cbMtdParam._m0[15u].w - cbMtdParam._m0[16u].w)) + cbMtdParam._m0[16u].w) * _1619.y;
    float _1714 = ((_1702 * (cbMtdParam._m0[16u].x - cbMtdParam._m0[17u].x)) + cbMtdParam._m0[17u].x) * _1619.z;
    float _1715 = isnan(_1713) ? _1712 : (isnan(_1712) ? _1713 : max(_1712, _1713));
    float _1716 = isnan(_1714) ? _1715 : (isnan(_1715) ? _1714 : max(_1715, _1714));
    float _1719;
    float _1721;
    if (_1716 < 1.1920928955078125e-07)
    {
        _1719 = 0.0;
        _1721 = 0.0;
    }
    else
    {
        float _1745 = isnan(_1713) ? _1712 : (isnan(_1712) ? _1713 : min(_1712, _1713));
        float _1747 = _1716 - (isnan(_1714) ? _1745 : (isnan(_1745) ? _1714 : min(_1745, _1714)));
        float _1722 = _1747 / _1716;
        float frontier_phi_50_51_ladder;
        float frontier_phi_50_51_ladder_1;
        if (_1747 < 1.1920928955078125e-07)
        {
            frontier_phi_50_51_ladder = _1722;
            frontier_phi_50_51_ladder_1 = 0.0;
        }
        else
        {
            float _2296;
            if (_1716 == _1712)
            {
                _2296 = ((_1713 - _1714) / _1747) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_62_59_ladder;
                if (_1716 == _1713)
                {
                    frontier_phi_62_59_ladder = (((_1714 - _1712) / _1747) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_62_59_ladder = (((_1712 - _1713) / _1747) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _2296 = frontier_phi_62_59_ladder;
            }
            float _2301 = (_2296 < 0.0) ? (_2296 + 1.0) : _2296;
            precise float _1720 = (_2301 - floor(_2301)) * 6.0;
            frontier_phi_50_51_ladder = _1722;
            frontier_phi_50_51_ladder_1 = _1720;
        }
        _1719 = frontier_phi_50_51_ladder_1;
        _1721 = frontier_phi_50_51_ladder;
    }
    float _1724 = cbMtdParam._m0[19u].y + _1721;
    float _2772 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
    float _1725 = isnan(1.0) ? _2772 : (isnan(_2772) ? 1.0 : min(_2772, 1.0));
    float _1727 = cbMtdParam._m0[22u].y + _1716;
    float _2783 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
    float _1728 = isnan(1.0) ? _2783 : (isnan(_2783) ? 1.0 : min(_2783, 1.0));
    uint _1730 = uint(int(floor(_1719)));
    float _1732 = _1719 - float(int(_1730));
    float _1734 = _1728 * (1.0 - _1725);
    float _1737 = (1.0 - (_1732 * _1725)) * _1728;
    float _1741 = (1.0 - ((1.0 - _1732) * _1725)) * _1728;
    float _1749;
    float _1751;
    float _1752;
    if ((_1730 == 0u) || (_1730 == 6u))
    {
        _1749 = _1728;
        _1751 = _1741;
        _1752 = _1734;
    }
    else
    {
        float frontier_phi_52_53_ladder;
        float frontier_phi_52_53_ladder_1;
        float frontier_phi_52_53_ladder_2;
        if (_1730 == 1u)
        {
            frontier_phi_52_53_ladder = _1734;
            frontier_phi_52_53_ladder_1 = _1728;
            frontier_phi_52_53_ladder_2 = _1737;
        }
        else
        {
            float frontier_phi_52_53_ladder_57_ladder;
            float frontier_phi_52_53_ladder_57_ladder_1;
            float frontier_phi_52_53_ladder_57_ladder_2;
            if (_1730 == 2u)
            {
                frontier_phi_52_53_ladder_57_ladder = _1741;
                frontier_phi_52_53_ladder_57_ladder_1 = _1728;
                frontier_phi_52_53_ladder_57_ladder_2 = _1734;
            }
            else
            {
                float frontier_phi_52_53_ladder_57_ladder_61_ladder;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                float frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
                if (_1730 == 3u)
                {
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _1728;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1737;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _1734;
                }
                else
                {
                    bool _2364 = _1730 == 4u;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder = _2364 ? _1728 : _1737;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_1 = _1734;
                    frontier_phi_52_53_ladder_57_ladder_61_ladder_2 = _2364 ? _1741 : _1728;
                }
                frontier_phi_52_53_ladder_57_ladder = frontier_phi_52_53_ladder_57_ladder_61_ladder;
                frontier_phi_52_53_ladder_57_ladder_1 = frontier_phi_52_53_ladder_57_ladder_61_ladder_1;
                frontier_phi_52_53_ladder_57_ladder_2 = frontier_phi_52_53_ladder_57_ladder_61_ladder_2;
            }
            frontier_phi_52_53_ladder = frontier_phi_52_53_ladder_57_ladder;
            frontier_phi_52_53_ladder_1 = frontier_phi_52_53_ladder_57_ladder_1;
            frontier_phi_52_53_ladder_2 = frontier_phi_52_53_ladder_57_ladder_2;
        }
        _1749 = frontier_phi_52_53_ladder_2;
        _1751 = frontier_phi_52_53_ladder_1;
        _1752 = frontier_phi_52_53_ladder;
    }
    float _1761 = exp2(log2(_1749) * cbMtdParam._m0[19u].x);
    float _1762 = exp2(log2(_1751) * cbMtdParam._m0[19u].x);
    float _1763 = exp2(log2(_1752) * cbMtdParam._m0[19u].x);
    float _1782 = (_1262 - _1761) + (_1338 * (_1331.x - _1262));
    float _1784 = (_1782 * _739) + _1761;
    float _1785 = (_1263 - _1762) + (_1338 * (_1331.y - _1263));
    float _1787 = (_1785 * _739) + _1762;
    float _1788 = (_1264 - _1763) + (_1338 * (_1331.z - _1264));
    float _1790 = (_1788 * _739) + _1763;
    float _1791 = _1410.x - _1761;
    float _1792 = _1410.y - _1762;
    float _1793 = _1410.z - _1763;
    float _1812 = _1185 ? _1784 : (((_739 * (_1791 - _1782)) * _1417) + _1784);
    float _1813 = _1185 ? _1787 : (((_739 * (_1792 - _1785)) * _1417) + _1787);
    float _1814 = _1185 ? _1790 : (((_739 * (_1793 - _1788)) * _1417) + _1790);
    float _1830 = (((_1761 - _1812) + (((_1071.x - _1761) + (_1177 * (_1170.x - _1071.x))) * _743)) * _1179) + _1812;
    float _1831 = (((_1762 - _1813) + (((_1071.y - _1762) + (_1177 * (_1170.y - _1071.y))) * _743)) * _1179) + _1813;
    float _1832 = (((_1763 - _1814) + (((_1071.z - _1763) + (_1177 * (_1170.z - _1071.z))) * _743)) * _1179) + _1814;
    float _1842 = _1185 ? (((((_1791 * _739) + _1761) - _1830) * _1417) + _1830) : _1830;
    float _1843 = _1185 ? (((((_1792 * _739) + _1762) - _1831) * _1417) + _1831) : _1831;
    float _1844 = _1185 ? (((((_1793 * _739) + _1763) - _1832) * _1417) + _1832) : _1832;
    float _1860 = ((((((((_1526.x - _1522) * _1496) + _1522) - _1761) * _746) + _1761) - _1842) * _1544) + _1842;
    float _1861 = ((((((((_1526.y - _1523) * _1496) + _1523) - _1762) * _746) + _1762) - _1843) * _1544) + _1843;
    float _1862 = ((((((((_1526.z - _1524) * _1496) + _1524) - _1763) * _746) + _1763) - _1844) * _1544) + _1844;
    float _2794 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
    float _2805 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
    float _2816 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
    float _1875 = exp2(log2((isnan(1.0) ? _2794 : (isnan(_2794) ? 1.0 : min(_2794, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1876 = exp2(log2((isnan(1.0) ? _2805 : (isnan(_2805) ? 1.0 : min(_2805, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1877 = exp2(log2((isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0))) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[19u].z);
    float _1878 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
    float _1879 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
    float _1880 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
    float _1886 = 1.0 - _1878;
    float _1887 = 1.0 - _1879;
    float _1888 = 1.0 - _1880;
    float _1896 = (_1878 / (isnan(0.001000000047497451305389404296875) ? _1886 : (isnan(_1886) ? 0.001000000047497451305389404296875 : max(_1886, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1897 = (_1879 / (isnan(0.001000000047497451305389404296875) ? _1887 : (isnan(_1887) ? 0.001000000047497451305389404296875 : max(_1887, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1898 = (_1880 / (isnan(0.001000000047497451305389404296875) ? _1888 : (isnan(_1888) ? 0.001000000047497451305389404296875 : max(_1888, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[21u].y;
    float _1915 = dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1670, _1671, _1672, 0.0));
    float _2872 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _1918 = isnan(1.0) ? _2872 : (isnan(_2872) ? 1.0 : min(_2872, 1.0));
    float _1920 = 1.0 - (_1918 * _1918);
    float _1922 = (-0.0) - (_1920 - cbMtdParam._m0[23u].w);
    float _1927 = exp2(log2(isnan(0.001000000047497451305389404296875) ? _1922 : (isnan(_1922) ? 0.001000000047497451305389404296875 : max(_1922, 0.001000000047497451305389404296875))) * cbMtdParam._m0[22u].x);
    float _2888 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
    float _1928 = isnan(1.0) ? _2888 : (isnan(_2888) ? 1.0 : min(_2888, 1.0));
    float _2899 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    float _1964 = isnan(1.0) ? _2899 : (isnan(_2899) ? 1.0 : min(_2899, 1.0));
    float _1971 = (((((_1702 * (cbMtdParam._m0[12u].z - cbMtdParam._m0[13u].z)) + cbMtdParam._m0[13u].z) * ((_1928 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1896 : (isnan(_1896) ? 0.001000000047497451305389404296875 : max(_1896, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1878)) + _1878)) - _1761) * _1964) + _1761;
    float _1972 = (((((_1702 * (cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].w)) + cbMtdParam._m0[13u].w) * ((_1928 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1897 : (isnan(_1897) ? 0.001000000047497451305389404296875 : max(_1897, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1879)) + _1879)) - _1762) * _1964) + _1762;
    float _1973 = (((((_1702 * (cbMtdParam._m0[13u].x - cbMtdParam._m0[14u].x)) + cbMtdParam._m0[14u].x) * ((_1928 * (exp2(log2(isnan(0.001000000047497451305389404296875) ? _1898 : (isnan(_1898) ? 0.001000000047497451305389404296875 : max(_1898, 0.001000000047497451305389404296875))) * cbMtdParam._m0[21u].w) - _1880)) + _1880)) - _1763) * _1964) + _1763;
    float _1991 = inversesqrt(dot(vec3(cbMtdParam._m0[40u].zw, cbMtdParam._m0[41u].x), vec3(cbMtdParam._m0[40u].zw, cbMtdParam._m0[41u].x)));
    float _1999 = (dot(vec4(_1639, _1640, _1641, 0.0), vec4(_1991 * cbMtdParam._m0[40u].z, _1991 * cbMtdParam._m0[40u].w, _1991 * cbMtdParam._m0[41u].x, 0.0)) + 1.0) * 0.5;
    float _2910 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
    float _2006 = cbMtdParam._m0[24u].w * exp2(log2(isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0))) * cbMtdParam._m0[25u].y);
    float _2921 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
    float _2007 = isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0));
    float _2019 = (-0.0) - (_1920 - cbMtdParam._m0[21u].z);
    float _2020 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2034 = (-0.0) - (_1920 - cbMtdParam._m0[23u].x);
    float _2035 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
    float _2048 = 1.0 - exp2(log2(_1918) * cbMtdParam._m0[26u].z);
    float _2050 = (-0.0) - (_2048 - cbMtdParam._m0[17u].w);
    float _2051 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
    float _2059 = (-0.0) - (_2048 - cbMtdParam._m0[19u].w);
    float _2060 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2070 = ((cbMtdParam._m0[23u].y * exp2(log2(isnan(64.0) ? _2035 : (isnan(_2035) ? 64.0 : min(_2035, 64.0))) * 1.64999997615814208984375)) + (cbMtdParam._m0[23u].z * exp2(log2(isnan(64.0) ? _2020 : (isnan(_2020) ? 64.0 : min(_2020, 64.0))) * 2.599999904632568359375))) + (cbMtdParam._m0[20u].x * (exp2(log2(isnan(64.0) ? _2060 : (isnan(_2060) ? 64.0 : min(_2060, 64.0))) * 4.0) + exp2(log2(isnan(64.0) ? _2051 : (isnan(_2051) ? 64.0 : min(_2051, 64.0))) * 1.87000000476837158203125)));
    float _2072 = ((_2007 * ((cbMtdParam._m0[11u].z * _1971) - _1971)) + _1971) + (_2070 * cbMtdParam._m0[14u].z);
    float _2074 = ((_2007 * ((cbMtdParam._m0[11u].w * _1972) - _1972)) + _1972) + (_2070 * cbMtdParam._m0[14u].w);
    float _2076 = ((_2007 * ((cbMtdParam._m0[12u].x * _1973) - _1973)) + _1973) + (_2070 * cbMtdParam._m0[15u].x);
    float _2084 = float(gl_LaunchIDEXT.x);
    float _2085 = float(gl_LaunchIDEXT.y);
    float _2088 = float(gl_LaunchSizeEXT.x);
    float _2093 = ((_2084 + 0.5) / _2088) + (-0.5);
    float _2095 = ((_2085 + 0.5) / _85) + (-0.5);
    float _2102 = exp2(log2(sqrt((_2095 * _2095) + (_2093 * _2093))) * cbMtdParam._m0[18u].w);
    float _2972 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
    float _2104 = 1.0 - (isnan(1.0) ? _2972 : (isnan(_2972) ? 1.0 : min(_2972, 1.0)));
    float _2114 = (((_2104 * _2072) - _2072) * cbMtdParam._m0[18u].z) + _2072;
    float _2115 = (((_2104 * _2074) - _2074) * cbMtdParam._m0[18u].z) + _2074;
    float _2116 = (((_2104 * _2076) - _2076) * cbMtdParam._m0[18u].z) + _2076;
    float _2124 = inversesqrt(dot(vec3(_822, _824, _825), vec3(_822, _824, _825)));
    float _2125 = _2124 * _822;
    float _2126 = _2124 * _824;
    float _2127 = _2124 * _825;
    float _2139 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2140 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2141 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2145 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2146 = _2145 * gl_WorldRayDirectionEXT.x;
    float _2147 = _2145 * gl_WorldRayDirectionEXT.y;
    float _2148 = _2145 * gl_WorldRayDirectionEXT.z;
    float _2149 = (-0.0) - _2146;
    float _2150 = (-0.0) - _2147;
    float _2151 = (-0.0) - _2148;
    float _2165 = fract(fract(sin(dot(vec2(_2084 / _2088, _2085 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2178 = fract(fract(sin(dot(vec2((_2084 + 128.0) / _2088, (_2085 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _2183 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2184 = _2183.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2184, _2183.w, _2184, vec3(_2139, _2140, _2141), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2250;
    float _2251;
    float _2252;
    if (_71._m0 == 0u)
    {
        float _2205 = g_sceneCB._m0[4u].x - _2146;
        float _2206 = g_sceneCB._m0[4u].y - _2147;
        float _2207 = g_sceneCB._m0[4u].z - _2148;
        float _2211 = inversesqrt(dot(vec3(_2205, _2206, _2207), vec3(_2205, _2206, _2207)));
        float _2215 = dot(vec3(_2125, _2126, _2127), vec3(g_sceneCB._m0[4u].xyz));
        float _2998 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
        float _2218 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
        float _2219 = dot(vec3(_2125, _2126, _2127), vec3(_2149, _2150, _2151));
        float _3009 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
        float _2223 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2205 * _2211, _2206 * _2211, _2207 * _2211));
        float _3020 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
        float _2234 = (exp2(log2(1.0 - (isnan(1.0) ? _3020 : (isnan(_3020) ? 1.0 : min(_3020, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2240 = (0.5 / ((_2218 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _3009 : (isnan(_3009) ? 1.0 : min(_3009, 1.0))))) * _2218;
        float _3031 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
        float _2242 = (isnan(1.0) ? _3031 : (isnan(_3031) ? 1.0 : min(_3031, 1.0))) * 0.31831014156341552734375;
        _2250 = (_2234 * g_sceneCB._m0[5u].x) * _2242;
        _2251 = (_2234 * g_sceneCB._m0[5u].y) * _2242;
        _2252 = (_2234 * g_sceneCB._m0[5u].z) * _2242;
    }
    else
    {
        _2250 = 0.0;
        _2251 = 0.0;
        _2252 = 0.0;
    }
    bool _2254 = abs(_2126) < 0.89999997615814208984375;
    float _2256 = float(_2254);
    float _2257 = _2254 ? 0.0 : 1.0;
    float _2260 = (_2256 * _2127) - (_2257 * _2126);
    float _2261 = _2257 * _2125;
    float _2263 = (-0.0) - (_2125 * _2256);
    float _2267 = inversesqrt(dot(vec3(_2260, _2261, _2263), vec3(_2260, _2261, _2263)));
    float _2268 = _2260 * _2267;
    float _2269 = _2261 * _2267;
    float _2270 = _2267 * _2263;
    float _2273 = (_2269 * _2127) - (_2270 * _2126);
    float _2276 = (_2270 * _2125) - (_2268 * _2127);
    float _2279 = (_2268 * _2126) - (_2269 * _2125);
    float _2287;
    float _2313;
    float _2286 = 0.0;
    uint _2288 = 0u;
    float _2292;
    bool _2294;
    for (;;)
    {
        _2292 = (float(_2288) + _2165) * 0.03125;
        _2294 = _2288 == 0u;
        float frontier_phi_65_pred;
        if (_2294)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2432;
            float _2433;
            uint _2435;
            _2432 = 0.0;
            _2433 = 0.5;
            _2435 = _2288;
            float _2314;
            for (;;)
            {
                _2314 = ((_2435 & 1u) != 0u) ? (_2433 + _2432) : _2432;
                uint _2436 = _2435 >> 1u;
                if (_2436 == 0u)
                {
                    break;
                }
                else
                {
                    _2432 = _2314;
                    _2433 *= 0.5;
                    _2435 = _2436;
                }
            }
            frontier_phi_65_pred = _2314;
        }
        _2313 = frontier_phi_65_pred;
        float _2315 = _2313 + _2178;
        float _2319 = sqrt(_2292);
        float _2320 = ((_2315 > 1.0) ? (_2315 + (-1.0)) : _2315) * 6.283185482025146484375;
        float _2323 = cos(_2320) * _2319;
        float _2325 = sin(_2320) * _2319;
        float _2327 = sqrt(1.0 - _2292);
        float _2340 = ((_2327 * _2125) + (_2323 * _2273)) + (_2325 * _2268);
        float _2341 = ((_2327 * _2126) + (_2323 * _2276)) + (_2325 * _2269);
        float _2342 = ((_2327 * _2127) + (_2323 * _2279)) + (_2325 * _2270);
        _70._m0 = 1u;
        uvec4 _2346 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2347 = _2346.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2347, _2346.w, _2347, vec3(_2139, _2140, _2141), 9.9999997473787516355514526367188e-05, vec3(_2340, _2341, _2342), 10000.0, 1);
        float _2353 = dot(vec3(_2125, _2126, _2127), vec3(_2340, _2341, _2342));
        float _3042 = isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0));
        float _2356 = isnan(1.0) ? _3042 : (isnan(_3042) ? 1.0 : min(_3042, 1.0));
        _2287 = ((float(_70._m0 == 0u) * _2356) / (_2356 * 0.3183098733425140380859375)) + _2286;
        uint _2289 = _2288 + 1u;
        if (_2289 == 32u)
        {
            break;
        }
        else
        {
            _2286 = _2287;
            _2288 = _2289;
            continue;
        }
    }
    float _2365 = _2287 * 0.009947183541953563690185546875;
    float _2370 = dot(vec3(_2146, _2147, _2148), vec3(_2125, _2126, _2127)) * 2.0;
    vec4 _2381 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2146 - (_2370 * _2125), _2147 - (_2370 * _2126), _2148 - (_2370 * _2127)), 4.0);
    float _2386 = dot(vec3(_2149, _2150, _2151), vec3(_2125, _2126, _2127));
    float _3053 = isnan(0.0) ? _2386 : (isnan(_2386) ? 0.0 : max(_2386, 0.0));
    float _2395 = (exp2(log2(1.0 - (isnan(1.0) ? _3053 : (isnan(_3053) ? 1.0 : min(_3053, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2403 = (_2250 + (isnan(cbMtdParam._m0[26u].x) ? _2114 : (isnan(_2114) ? cbMtdParam._m0[26u].x : min(_2114, cbMtdParam._m0[26u].x)))) + ((_2381.x * _2365) * _2395);
    float _2405 = (_2251 + (isnan(cbMtdParam._m0[26u].x) ? _2115 : (isnan(_2115) ? cbMtdParam._m0[26u].x : min(_2115, cbMtdParam._m0[26u].x)))) + ((_2381.y * _2365) * _2395);
    float _2407 = (_2252 + (isnan(cbMtdParam._m0[26u].x) ? _2116 : (isnan(_2116) ? cbMtdParam._m0[26u].x : min(_2116, cbMtdParam._m0[26u].x)))) + ((_2381.z * _2365) * _2395);
    float _3064 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
    float _3075 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
    float _3086 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    bool _2415 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2426;
    _2426.x = _2415 ? ((_815 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3064 : (isnan(_3064) ? 1.0 : min(_3064, 1.0)));
    _2426.y = _2415 ? ((_818 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3075 : (isnan(_3075) ? 1.0 : min(_3075, 1.0)));
    _2426.z = _2415 ? ((_821 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3086 : (isnan(_3086) ? 1.0 : min(_3086, 1.0)));
    payload._m0 = _2426;
}


