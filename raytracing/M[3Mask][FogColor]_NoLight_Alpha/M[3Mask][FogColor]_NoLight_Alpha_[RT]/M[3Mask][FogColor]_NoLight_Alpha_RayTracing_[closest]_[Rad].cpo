#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _33
{
    vec3 _m0;
};

struct _37
{
    vec2 _m0;
};

struct _40
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(location = 0) rayPayloadInEXT _33 payload;
hitAttributeEXT _37 hit;
layout(location = 1) rayPayloadEXT _40 _42;
layout(location = 2) rayPayloadEXT _40 _43;

vec3 _547;

void main()
{
    uvec4 _57 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _58 = _57.y;
    uint _100;
    uint _102;
    uint _103;
    if (_57.x == 0u)
    {
        uint _66 = (_58 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _77 = uvec3(texelFetch(l_geomIndexBuffer, int(_66)).x, texelFetch(l_geomIndexBuffer, int(_66 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_66 + 2u)).x);
        _100 = _77.x;
        _102 = _77.y;
        _103 = _77.z;
    }
    else
    {
        uint _81 = uint(gl_PrimitiveID) * 6u;
        uint _83 = _81 & 4294967292u;
        uint _86 = (_58 + _83) >> 2u;
        uvec2 _93 = uvec2(texelFetch(l_geomIndexBuffer, int(_86)).x, texelFetch(l_geomIndexBuffer, int(_86 + 1u)).x);
        uint _94 = _93.x;
        uint _95 = _93.y;
        uint _97 = _94 >> 16u;
        uint _98 = _95 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_83 == _81)
        {
            frontier_phi_3_2_ladder = _94 & 65535u;
            frontier_phi_3_2_ladder_1 = _97;
            frontier_phi_3_2_ladder_2 = _98;
        }
        else
        {
            frontier_phi_3_2_ladder = _97;
            frontier_phi_3_2_ladder_1 = _98;
            frontier_phi_3_2_ladder_2 = _95 >> 16u;
        }
        _100 = frontier_phi_3_2_ladder;
        _102 = frontier_phi_3_2_ladder_1;
        _103 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _107 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _108 = _107.x;
    bool _113 = (_107.z != 0u) || (_57.w == 0u);
    uint _115 = (_108 * _100) + 12u;
    uint _139;
    uint _140;
    uint _141;
    if (_113)
    {
        uvec4 _118 = texelFetch(l_geomAttrib_0, int(_115 >> 2u));
        uint _119 = _118.x;
        _139 = _119 & 255u;
        _140 = (_119 >> 8u) & 255u;
        _141 = (_119 >> 16u) & 255u;
    }
    else
    {
        uint _127 = _115 >> 2u;
        uvec2 _133 = uvec2(texelFetch(l_geomAttrib_0, int(_127)).x, texelFetch(l_geomAttrib_0, int(_127 + 1u)).x);
        uint _134 = _133.x;
        _139 = _134 & 65535u;
        _140 = _134 >> 16u;
        _141 = _133.y & 65535u;
    }
    uint _146 = (_108 * _102) + 12u;
    uint _168;
    uint _169;
    uint _170;
    if (_113)
    {
        uvec4 _149 = texelFetch(l_geomAttrib_0, int(_146 >> 2u));
        uint _150 = _149.x;
        _168 = _150 & 255u;
        _169 = (_150 >> 8u) & 255u;
        _170 = (_150 >> 16u) & 255u;
    }
    else
    {
        uint _156 = _146 >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomAttrib_0, int(_156)).x, texelFetch(l_geomAttrib_0, int(_156 + 1u)).x);
        uint _163 = _162.x;
        _168 = _163 & 65535u;
        _169 = _163 >> 16u;
        _170 = _162.y & 65535u;
    }
    uint _175 = (_108 * _103) + 12u;
    uint _197;
    uint _198;
    uint _199;
    if (_113)
    {
        uvec4 _178 = texelFetch(l_geomAttrib_0, int(_175 >> 2u));
        uint _179 = _178.x;
        _197 = _179 & 255u;
        _198 = (_179 >> 8u) & 255u;
        _199 = (_179 >> 16u) & 255u;
    }
    else
    {
        uint _185 = _175 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
    }
    float _205 = (1.0 - hit._m0.x) - hit._m0.y;
    float _218 = (((float(_139) * _205) + (-127.0)) + (float(_168) * hit._m0.x)) + (float(_197) * hit._m0.y);
    float _221 = (((float(_140) * _205) + (-127.0)) + (float(_169) * hit._m0.x)) + (float(_198) * hit._m0.y);
    float _224 = (((float(_141) * _205) + (-127.0)) + (float(_170) * hit._m0.x)) + (float(_199) * hit._m0.y);
    float _225 = _218 * 0.0078740157186985015869140625;
    float _227 = _221 * 0.0078740157186985015869140625;
    float _228 = _224 * 0.0078740157186985015869140625;
    float _233 = inversesqrt(dot(vec3(_225, _227, _228), vec3(_225, _227, _228)));
    float _234 = _225 * _233;
    float _235 = _227 * _233;
    float _236 = _228 * _233;
    float _258 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _259 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _260 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _264 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _265 = _264 * gl_WorldRayDirectionEXT.x;
    float _266 = _264 * gl_WorldRayDirectionEXT.y;
    float _267 = _264 * gl_WorldRayDirectionEXT.z;
    float _268 = (-0.0) - _265;
    float _270 = (-0.0) - _266;
    float _271 = (-0.0) - _267;
    float _278 = float(gl_LaunchIDEXT.x);
    float _279 = float(gl_LaunchIDEXT.y);
    float _285 = float(gl_LaunchSizeEXT.x);
    float _286 = float(gl_LaunchSizeEXT.y);
    float _300 = fract(fract(sin(dot(vec2(_278 / _285, _279 / _286), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _313 = fract(fract(sin(dot(vec2((_278 + 128.0) / _285, (_279 + 128.0) / _286), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _43._m0 = 1u;
    uvec4 _324 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _325 = _324.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _325, _324.w, _325, vec3(_258, _259, _260), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _393;
    float _394;
    float _395;
    if (_43._m0 == 0u)
    {
        float _346 = g_sceneCB._m0[4u].x - _265;
        float _347 = g_sceneCB._m0[4u].y - _266;
        float _348 = g_sceneCB._m0[4u].z - _267;
        float _352 = inversesqrt(dot(vec3(_346, _347, _348), vec3(_346, _347, _348)));
        float _356 = dot(vec3(_234, _235, _236), vec3(g_sceneCB._m0[4u].xyz));
        float _592 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
        float _360 = isnan(1.0) ? _592 : (isnan(_592) ? 1.0 : min(_592, 1.0));
        float _361 = dot(vec3(_234, _235, _236), vec3(_268, _270, _271));
        float _603 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
        float _365 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_346 * _352, _347 * _352, _348 * _352));
        float _614 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
        float _376 = (exp2(log2(1.0 - (isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _383 = (0.5 / ((_360 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0))))) * _360;
        float _625 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
        float _385 = (isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0))) * 0.31831014156341552734375;
        _393 = (_376 * g_sceneCB._m0[5u].x) * _385;
        _394 = (_376 * g_sceneCB._m0[5u].y) * _385;
        _395 = (_376 * g_sceneCB._m0[5u].z) * _385;
    }
    else
    {
        _393 = 0.0;
        _394 = 0.0;
        _395 = 0.0;
    }
    bool _397 = abs(_235) < 0.89999997615814208984375;
    float _399 = float(_397);
    float _400 = _397 ? 0.0 : 1.0;
    float _403 = (_399 * _236) - (_400 * _235);
    float _404 = _400 * _234;
    float _406 = (-0.0) - (_234 * _399);
    float _410 = inversesqrt(dot(vec3(_403, _404, _406), vec3(_403, _404, _406)));
    float _411 = _403 * _410;
    float _412 = _404 * _410;
    float _413 = _410 * _406;
    float _416 = (_412 * _236) - (_413 * _235);
    float _419 = (_413 * _234) - (_411 * _236);
    float _422 = (_411 * _235) - (_412 * _234);
    float _424;
    float _432;
    float _423 = 0.0;
    uint _425 = 0u;
    float _429;
    bool _431;
    for (;;)
    {
        _429 = (float(_425) + _300) * 0.03125;
        _431 = _425 == 0u;
        float frontier_phi_18_pred;
        if (_431)
        {
            frontier_phi_18_pred = 0.0;
        }
        else
        {
            float _552;
            float _553;
            uint _555;
            _552 = 0.0;
            _553 = 0.5;
            _555 = _425;
            float _433;
            for (;;)
            {
                _433 = ((_555 & 1u) != 0u) ? (_553 + _552) : _552;
                uint _556 = _555 >> 1u;
                if (_556 == 0u)
                {
                    break;
                }
                else
                {
                    _552 = _433;
                    _553 *= 0.5;
                    _555 = _556;
                }
            }
            frontier_phi_18_pred = _433;
        }
        _432 = frontier_phi_18_pred;
        float _434 = _432 + _313;
        float _439 = sqrt(_429);
        float _440 = ((_434 > 1.0) ? (_434 + (-1.0)) : _434) * 6.283185482025146484375;
        float _443 = cos(_440) * _439;
        float _445 = sin(_440) * _439;
        float _447 = sqrt(1.0 - _429);
        float _460 = ((_447 * _234) + (_443 * _416)) + (_445 * _411);
        float _461 = ((_447 * _235) + (_443 * _419)) + (_445 * _412);
        float _462 = ((_447 * _236) + (_443 * _422)) + (_445 * _413);
        _42._m0 = 1u;
        uvec4 _466 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _467 = _466.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _467, _466.w, _467, vec3(_258, _259, _260), 9.9999997473787516355514526367188e-05, vec3(_460, _461, _462), 10000.0, 1);
        float _473 = dot(vec3(_234, _235, _236), vec3(_460, _461, _462));
        float _636 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
        float _476 = isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0));
        _424 = ((float(_42._m0 == 0u) * _476) / (_476 * 0.3183098733425140380859375)) + _423;
        uint _426 = _425 + 1u;
        if (_426 == 32u)
        {
            break;
        }
        else
        {
            _423 = _424;
            _425 = _426;
            continue;
        }
    }
    float _485 = _424 * 0.009947183541953563690185546875;
    float _490 = dot(vec3(_265, _266, _267), vec3(_234, _235, _236)) * 2.0;
    vec4 _503 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_265 - (_490 * _234), _266 - (_490 * _235), _267 - (_490 * _236)), 4.0);
    float _508 = dot(vec3(_268, _270, _271), vec3(_234, _235, _236));
    float _647 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _517 = (exp2(log2(1.0 - (isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _524 = ((_503.x * _485) * _517) + _393;
    float _525 = ((_503.y * _485) * _517) + _394;
    float _526 = ((_503.z * _485) * _517) + _395;
    float _658 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _669 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
    float _680 = isnan(0.0) ? _526 : (isnan(_526) ? 0.0 : max(_526, 0.0));
    bool _535 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _546;
    _546.x = _535 ? ((_218 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0)));
    _546.y = _535 ? ((_221 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _669 : (isnan(_669) ? 1.0 : min(_669, 1.0)));
    _546.z = _535 ? ((_224 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _680 : (isnan(_680) ? 1.0 : min(_680, 1.0)));
    payload._m0 = _546;
}


