#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_001_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1977;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    bool _235 = _179 == 0u;
    uint _236;
    if (_235)
    {
        _236 = _212 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 12u;
        }
        _236 = frontier_phi_9_10_ladder;
    }
    uvec4 _244 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + (_180 ? (_236 + 4u) : _236)) >> 2u));
    uint _245 = _244.x;
    float _249 = float(int(uint(int(_245 << 16u) >> int(16u))));
    float _250 = float(int(uint(int(_245) >> int(16u))));
    uint _251 = _178 * _172;
    uint _252 = _251 + 12u;
    uint _273;
    uint _274;
    uint _275;
    uint _276;
    if (_183)
    {
        uvec4 _254 = texelFetch(l_geomAttrib_0, int(_252 >> 2u));
        uint _255 = _254.x;
        _273 = _255 & 255u;
        _274 = (_255 >> 8u) & 255u;
        _275 = (_255 >> 16u) & 255u;
        _276 = 16u;
    }
    else
    {
        uint _261 = _252 >> 2u;
        uvec2 _267 = uvec2(texelFetch(l_geomAttrib_0, int(_261)).x, texelFetch(l_geomAttrib_0, int(_261 + 1u)).x);
        uint _268 = _267.x;
        _273 = _268 & 65535u;
        _274 = _268 >> 16u;
        _275 = _267.y & 65535u;
        _276 = 20u;
    }
    uvec4 _282 = texelFetch(l_geomAttrib_0, int((_276 + _251) >> 2u));
    uint _283 = _282.x;
    uint _295;
    if (_235)
    {
        _295 = _276 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _276 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _276 + 12u;
        }
        _295 = frontier_phi_16_17_ladder;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int(((_251 + 4u) + (_180 ? (_295 + 4u) : _295)) >> 2u));
    uint _304 = _303.x;
    float _308 = float(int(uint(int(_304 << 16u) >> int(16u))));
    float _309 = float(int(uint(int(_304) >> int(16u))));
    uint _310 = _178 * _173;
    uint _311 = _310 + 12u;
    uint _332;
    uint _333;
    uint _334;
    uint _335;
    if (_183)
    {
        uvec4 _313 = texelFetch(l_geomAttrib_0, int(_311 >> 2u));
        uint _314 = _313.x;
        _332 = _314 & 255u;
        _333 = (_314 >> 8u) & 255u;
        _334 = (_314 >> 16u) & 255u;
        _335 = 16u;
    }
    else
    {
        uint _320 = _311 >> 2u;
        uvec2 _326 = uvec2(texelFetch(l_geomAttrib_0, int(_320)).x, texelFetch(l_geomAttrib_0, int(_320 + 1u)).x);
        uint _327 = _326.x;
        _332 = _327 & 65535u;
        _333 = _327 >> 16u;
        _334 = _326.y & 65535u;
        _335 = 20u;
    }
    uvec4 _341 = texelFetch(l_geomAttrib_0, int((_335 + _310) >> 2u));
    uint _342 = _341.x;
    uint _354;
    if (_235)
    {
        _354 = _335 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _335 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _335 + 12u;
        }
        _354 = frontier_phi_23_24_ladder;
    }
    uvec4 _362 = texelFetch(l_geomAttrib_0, int(((_310 + 4u) + (_180 ? (_354 + 4u) : _354)) >> 2u));
    uint _363 = _362.x;
    float _367 = float(int(uint(int(_363 << 16u) >> int(16u))));
    float _368 = float(int(uint(int(_363) >> int(16u))));
    bool _370 = _129.z == 0u;
    float _406;
    float _407;
    float _408;
    if (_370)
    {
        uint _373 = _170 * 3u;
        uvec3 _382 = uvec3(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_373 + 2u)).x);
        _406 = uintBitsToFloat(_382.x);
        _407 = uintBitsToFloat(_382.y);
        _408 = uintBitsToFloat(_382.z);
    }
    else
    {
        uint _390 = _170 * 2u;
        uvec2 _396 = uvec2(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x);
        uint _397 = _396.x;
        _406 = unpackHalf2x16(_397).x;
        _407 = unpackHalf2x16(_397 >> 16u).x;
        _408 = unpackHalf2x16(_396.y).x;
    }
    float _444;
    float _445;
    float _446;
    if (_370)
    {
        uint _411 = _172 * 3u;
        uvec3 _420 = uvec3(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_411 + 2u)).x);
        _444 = uintBitsToFloat(_420.x);
        _445 = uintBitsToFloat(_420.y);
        _446 = uintBitsToFloat(_420.z);
    }
    else
    {
        uint _428 = _172 * 2u;
        uvec2 _434 = uvec2(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x);
        uint _435 = _434.x;
        _444 = unpackHalf2x16(_435).x;
        _445 = unpackHalf2x16(_435 >> 16u).x;
        _446 = unpackHalf2x16(_434.y).x;
    }
    float _482;
    float _483;
    float _484;
    if (_370)
    {
        uint _449 = _173 * 3u;
        uvec3 _458 = uvec3(texelFetch(l_geomPositionBuffer, int(_449)).x, texelFetch(l_geomPositionBuffer, int(_449 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_449 + 2u)).x);
        _482 = uintBitsToFloat(_458.x);
        _483 = uintBitsToFloat(_458.y);
        _484 = uintBitsToFloat(_458.z);
    }
    else
    {
        uint _466 = _173 * 2u;
        uvec2 _472 = uvec2(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x);
        uint _473 = _472.x;
        _482 = unpackHalf2x16(_473).x;
        _483 = unpackHalf2x16(_473 >> 16u).x;
        _484 = unpackHalf2x16(_472.y).x;
    }
    float _487 = (1.0 - hit._m0.x) - hit._m0.y;
    float _521 = (_308 - _249) * 0.00048828125;
    float _523 = (_309 - _250) * 0.00048828125;
    float _526 = (_367 - _249) * 0.00048828125;
    float _527 = (_368 - _250) * 0.00048828125;
    float _549 = _444 - _406;
    float _550 = _445 - _407;
    float _551 = _446 - _408;
    float _554 = fma(_551, gl_ObjectToWorldEXT[2u].x, fma(_550, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _549));
    float _557 = fma(_551, gl_ObjectToWorldEXT[2u].y, fma(_550, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _549));
    float _560 = fma(_551, gl_ObjectToWorldEXT[2u].z, fma(_550, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _549));
    float _561 = _482 - _406;
    float _562 = _483 - _407;
    float _563 = _484 - _408;
    float _566 = fma(_563, gl_ObjectToWorldEXT[2u].x, fma(_562, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _561));
    float _569 = fma(_563, gl_ObjectToWorldEXT[2u].y, fma(_562, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _561));
    float _572 = fma(_563, gl_ObjectToWorldEXT[2u].z, fma(_562, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _561));
    float _573 = (((_308 * hit._m0.x) + (_249 * _487)) + (_367 * hit._m0.y)) * 0.00048828125;
    float _574 = (((_309 * hit._m0.x) + (_250 * _487)) + (_368 * hit._m0.y)) * 0.00048828125;
    float _578 = (((float(_209) * _487) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _581 = (((float(_210) * _487) + (-127.0)) + (float(_274) * hit._m0.x)) + (float(_333) * hit._m0.y);
    float _584 = (((float(_211) * _487) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _585 = _578 * 0.0078740157186985015869140625;
    float _587 = _581 * 0.0078740157186985015869140625;
    float _588 = _584 * 0.0078740157186985015869140625;
    float _601 = ((((float(_221 & 255u) * _487) + (-127.0)) + (float(_283 & 255u) * hit._m0.x)) + (float(_342 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float((_221 >> 8u) & 255u) * _487) + (-127.0)) + (float((_283 >> 8u) & 255u) * hit._m0.x)) + (float((_342 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _603 = ((((float((_221 >> 16u) & 255u) * _487) + (-127.0)) + (float((_283 >> 16u) & 255u) * hit._m0.x)) + (float((_342 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float(_221 >> 24u) * _487) + (-127.0)) + (float(_283 >> 24u) * hit._m0.x)) + (float(_342 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _614 = ((_602 * _588) - (_603 * _587)) * _604;
    float _615 = ((_603 * _585) - (_601 * _588)) * _604;
    float _616 = ((_601 * _587) - (_602 * _585)) * _604;
    float _620 = inversesqrt(dot(vec3(_614, _615, _616), vec3(_614, _615, _616)));
    uvec4 _627 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _629 = _627.z != 0u;
    uvec2 _649 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_0, int(0u)));
    bool _654 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _707;
    if (_654)
    {
        float _665 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _671 = (_572 * _557) - (_569 * _560);
        float _674 = (_566 * _560) - (_572 * _554);
        float _677 = (_569 * _554) - (_566 * _557);
        float _704 = ((log2((((float(_649.y) * 0.5) * float(_649.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_674 * _674) + (_677 * _677)) + (_671 * _671)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_665 * gl_WorldRayDirectionEXT.x, _665 * gl_WorldRayDirectionEXT.y, _665 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _707 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    }
    else
    {
        _707 = 0.0;
    }
    vec4 _711 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _573) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _574) + cbTextureTilingScale._m0[0u].w), _707);
    float _713 = _711.x;
    float _714 = _711.y;
    float _715 = _711.z;
    bool _736 = _627.x != 0u;
    uvec2 _756 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_8, int(0u)));
    float _807;
    if (_654)
    {
        float _767 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _773 = (_572 * _557) - (_569 * _560);
        float _776 = (_566 * _560) - (_572 * _554);
        float _779 = (_569 * _554) - (_566 * _557);
        float _805 = ((log2((((float(_756.y) * 0.5) * float(_756.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_776 * _776) + (_779 * _779)) + (_773 * _773)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_767 * gl_WorldRayDirectionEXT.x, _767 * gl_WorldRayDirectionEXT.y, _767 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _807 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    }
    else
    {
        _807 = 0.0;
    }
    vec4 _809 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _573) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _574) + cbTextureTilingScale._m0[9u].w), _807);
    float _811 = _809.x;
    float _812 = _809.y;
    float _813 = _809.z;
    float _830 = _736 ? ((cbMtdParam._m0[14u].w * (cbMtdParam._m0[9u].w - _811)) + _811) : (_811 * cbMtdParam._m0[9u].w);
    float _831 = _736 ? ((cbMtdParam._m0[14u].w * (cbMtdParam._m0[10u].x - _812)) + _812) : (_812 * cbMtdParam._m0[10u].x);
    float _832 = _736 ? ((cbMtdParam._m0[14u].w * (cbMtdParam._m0[10u].y - _813)) + _813) : (_813 * cbMtdParam._m0[10u].y);
    bool _834 = _627.y != 0u;
    uvec2 _849 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_4, int(0u)));
    float _900;
    if (_654)
    {
        float _860 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _866 = (_572 * _557) - (_569 * _560);
        float _869 = (_566 * _560) - (_572 * _554);
        float _872 = (_569 * _554) - (_566 * _557);
        float _898 = ((log2((((float(_849.y) * 0.5) * float(_849.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_869 * _869) + (_872 * _872)) + (_866 * _866)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_860 * gl_WorldRayDirectionEXT.x, _860 * gl_WorldRayDirectionEXT.y, _860 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _900 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    }
    else
    {
        _900 = 0.0;
    }
    vec4 _902 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _573) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _574) + cbTextureTilingScale._m0[7u].w), _900);
    float _904 = _902.x;
    float _905 = _902.y;
    float _906 = _902.z;
    uvec2 _934 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_9, int(0u)));
    float _985;
    if (_654)
    {
        float _945 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _951 = (_572 * _557) - (_569 * _560);
        float _954 = (_566 * _560) - (_572 * _554);
        float _957 = (_569 * _554) - (_566 * _557);
        float _983 = ((log2((((float(_934.y) * 0.5) * float(_934.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_954 * _954) + (_957 * _957)) + (_951 * _951)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_945 * gl_WorldRayDirectionEXT.x, _945 * gl_WorldRayDirectionEXT.y, _945 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _985 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    }
    else
    {
        _985 = 0.0;
    }
    vec4 _988 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _573) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _574) + cbTextureTilingScale._m0[10u].w), _985);
    float _990 = _988.x;
    float _991 = _988.y;
    float _998 = ((cbMtdParam._m0[14u].y * (-1.39999997615814208984375)) * (1.0 - _990)) + 1.0;
    float _2091 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1003 = (cbMtdParam._m0[13u].w * ((isnan(1.0) ? _2091 : (isnan(_2091) ? 1.0 : min(_2091, 1.0))) - _990)) + _990;
    float _1010 = (_1003 * ((_834 ? ((cbMtdParam._m0[13u].x * (cbMtdParam._m0[10u].w - _904)) + _904) : (_904 * cbMtdParam._m0[10u].w)) - _830)) + _830;
    float _1011 = (_1003 * ((_834 ? ((cbMtdParam._m0[13u].x * (cbMtdParam._m0[11u].x - _905)) + _905) : (_905 * cbMtdParam._m0[11u].x)) - _831)) + _831;
    float _1012 = (_1003 * ((_834 ? ((cbMtdParam._m0[13u].x * (cbMtdParam._m0[11u].y - _906)) + _906) : (_906 * cbMtdParam._m0[11u].y)) - _832)) + _832;
    float _1016 = (((1.0 - _991) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].x) + 1.0;
    float _2102 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _1021 = (cbMtdParam._m0[12u].w * ((isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0))) - _991)) + _991;
    float _1028 = (_1021 * ((_629 ? ((cbMtdParam._m0[13u].y * (cbMtdParam._m0[11u].w - _713)) + _713) : (_713 * cbMtdParam._m0[11u].w)) - _1010)) + _1010;
    float _1029 = (_1021 * ((_629 ? ((cbMtdParam._m0[13u].y * (cbMtdParam._m0[12u].x - _714)) + _714) : (_714 * cbMtdParam._m0[12u].x)) - _1011)) + _1011;
    float _1030 = (_1021 * ((_629 ? ((cbMtdParam._m0[13u].y * (cbMtdParam._m0[12u].y - _715)) + _715) : (_715 * cbMtdParam._m0[12u].y)) - _1012)) + _1012;
    uvec2 _1042 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_11, int(0u)));
    float _1093;
    if (_654)
    {
        float _1053 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1059 = (_572 * _557) - (_569 * _560);
        float _1062 = (_566 * _560) - (_572 * _554);
        float _1065 = (_569 * _554) - (_566 * _557);
        float _1091 = ((log2((((float(_1042.y) * 0.5) * float(_1042.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1062 * _1062) + (_1065 * _1065)) + (_1059 * _1059)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1053 * gl_WorldRayDirectionEXT.x, _1053 * gl_WorldRayDirectionEXT.y, _1053 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1093 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    }
    else
    {
        _1093 = 0.0;
    }
    vec4 _1095 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _573) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _574) + cbTextureTilingScale._m0[3u].w), _1093);
    uvec2 _1112 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_13, int(0u)));
    float _1163;
    if (_654)
    {
        float _1123 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1129 = (_572 * _557) - (_569 * _560);
        float _1132 = (_566 * _560) - (_572 * _554);
        float _1135 = (_569 * _554) - (_566 * _557);
        float _1161 = ((log2((((float(_1112.y) * 0.5) * float(_1112.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1132 * _1132) + (_1135 * _1135)) + (_1129 * _1129)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1123 * gl_WorldRayDirectionEXT.x, _1123 * gl_WorldRayDirectionEXT.y, _1123 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1163 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
    }
    else
    {
        _1163 = 0.0;
    }
    float _1169 = cbMtdParam._m0[13u].z * textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _573) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _574) + cbTextureTilingScale._m0[5u].w), _1163).x;
    float _1176 = (_1169 * (_1095.x - _1028)) + _1028;
    float _1177 = (_1169 * (_1095.y - _1029)) + _1029;
    float _1178 = (_1169 * (_1095.z - _1030)) + _1030;
    float _1179 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_585, _587, _588, 0.0));
    float _2123 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    float _1186 = exp2(log2(1.0 - (isnan(1.0) ? _2123 : (isnan(_2123) ? 1.0 : min(_2123, 1.0)))));
    float _1189 = (_1186 * 0.680000007152557373046875) + 0.119999997317790985107421875;
    float _1209 = (_1189 * ((0.048556677997112274169921875 - _1176) + (_1186 * 0.275154531002044677734375))) + _1176;
    float _1210 = (_1189 * ((0.079126082360744476318359375 - _1177) + (_1186 * 0.448381125926971435546875))) + _1177;
    float _1211 = (_1189 * ((0.1159258782863616943359375 - _1178) + (_1186 * 0.656913340091705322265625))) + _1178;
    uvec2 _1223 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_1, int(0u)));
    float _1274;
    if (_654)
    {
        float _1234 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1240 = (_572 * _557) - (_569 * _560);
        float _1243 = (_566 * _560) - (_572 * _554);
        float _1246 = (_569 * _554) - (_566 * _557);
        float _1272 = ((log2((((float(_1223.y) * 0.5) * float(_1223.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1243 * _1243) + (_1246 * _1246)) + (_1240 * _1240)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1234 * gl_WorldRayDirectionEXT.x, _1234 * gl_WorldRayDirectionEXT.y, _1234 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1274 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
    }
    else
    {
        _1274 = 0.0;
    }
    vec4 _1277 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _573) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _574) + cbTextureTilingScale._m0[1u].w), _1274);
    uvec2 _1293 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_2, int(0u)));
    float _1344;
    if (_654)
    {
        float _1304 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1310 = (_572 * _557) - (_569 * _560);
        float _1313 = (_566 * _560) - (_572 * _554);
        float _1316 = (_569 * _554) - (_566 * _557);
        float _1342 = ((log2((((float(_1293.y) * 0.5) * float(_1293.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1313 * _1313) + (_1316 * _1316)) + (_1310 * _1310)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1304 * gl_WorldRayDirectionEXT.x, _1304 * gl_WorldRayDirectionEXT.y, _1304 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1344 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    }
    else
    {
        _1344 = 0.0;
    }
    vec4 _1346 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _573) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _574) + cbTextureTilingScale._m0[6u].w), _1344);
    float _1348 = _1346.x;
    float _1349 = _1346.y;
    float _1350 = _1346.z;
    float _1357 = ((_1277.x - _1348) * _1003) + _1348;
    float _1358 = ((_1277.y - _1349) * _1003) + _1349;
    float _1359 = ((_1277.z - _1350) * _1003) + _1350;
    uvec2 _1371 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_6, int(0u)));
    float _1422;
    if (_654)
    {
        float _1382 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1388 = (_572 * _557) - (_569 * _560);
        float _1391 = (_566 * _560) - (_572 * _554);
        float _1394 = (_569 * _554) - (_566 * _557);
        float _1420 = ((log2((((float(_1371.y) * 0.5) * float(_1371.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1391 * _1391) + (_1394 * _1394)) + (_1388 * _1388)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1382 * gl_WorldRayDirectionEXT.x, _1382 * gl_WorldRayDirectionEXT.y, _1382 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1422 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
    }
    else
    {
        _1422 = 0.0;
    }
    vec4 _1424 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _573) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _574) + cbTextureTilingScale._m0[8u].w), _1422);
    uvec2 _1450 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_10, int(0u)));
    float _1501;
    if (_654)
    {
        float _1461 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1467 = (_572 * _557) - (_569 * _560);
        float _1470 = (_566 * _560) - (_572 * _554);
        float _1473 = (_569 * _554) - (_566 * _557);
        float _1499 = ((log2((((float(_1450.y) * 0.5) * float(_1450.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1470 * _1470) + (_1473 * _1473)) + (_1467 * _1467)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1461 * gl_WorldRayDirectionEXT.x, _1461 * gl_WorldRayDirectionEXT.y, _1461 * gl_WorldRayDirectionEXT.z), vec3(_585, _587, _588))));
        _1501 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
    }
    else
    {
        _1501 = 0.0;
    }
    vec4 _1503 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _573) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _574) + cbTextureTilingScale._m0[2u].w), _1501);
    float _1515 = (((_1424.x - _1357) * _1021) + _1357) + ((_1503.x + (-0.5)) * cbMtdParam._m0[14u].z);
    float _1516 = (((_1424.y - _1358) * _1021) + _1358) + ((_1503.y + (-0.5)) * cbMtdParam._m0[14u].z);
    float _1517 = (((_1424.z - _1359) * _1021) + _1359) + ((_1503.z + (-0.5)) * cbMtdParam._m0[14u].z);
    uvec2 _1529 = uvec2(textureSize(M_Planet_GroundSurface_001_snp_0_Texture2D_12, int(0u)));
    float _1533 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1534 = _1533 * gl_WorldRayDirectionEXT.x;
    float _1535 = _1533 * gl_WorldRayDirectionEXT.y;
    float _1536 = _1533 * gl_WorldRayDirectionEXT.z;
    float _1580;
    if (_654)
    {
        float _1546 = (_572 * _557) - (_569 * _560);
        float _1549 = (_566 * _560) - (_572 * _554);
        float _1552 = (_569 * _554) - (_566 * _557);
        float _1578 = ((log2((((float(_1529.y) * 0.5) * float(_1529.x)) * abs((_527 * _521) - (_526 * _523))) / (sqrt(((_1549 * _1549) + (_1552 * _1552)) + (_1546 * _1546)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1534, _1535, _1536), vec3(_585, _587, _588))));
        _1580 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
    }
    else
    {
        _1580 = 0.0;
    }
    vec4 _1582 = textureLod(sampler2D(M_Planet_GroundSurface_001_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _573) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _574) + cbTextureTilingScale._m0[4u].w), _1580);
    float _1593 = ((_1582.x - _1515) * _1169) + _1515;
    float _1594 = ((_1582.y - _1516) * _1169) + _1516;
    float _1595 = ((_1582.z - _1517) * _1169) + _1517;
    float _1605 = ((1.0 - _1595) * _1189) + _1595;
    float _1608 = ((((0.502016007900238037109375 - _1593) * _1189) + _1593) * 2.0) + (-1.0);
    float _1610 = ((((0.502016007900238037109375 - _1594) * _1189) + _1594) * 2.0) + (-1.0);
    float _1611 = dot(vec2(_1608, _1610), vec2(_1608, _1610));
    float _2159 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
    float _1616 = sqrt(1.0 - (isnan(1.0) ? _2159 : (isnan(_2159) ? 1.0 : min(_2159, 1.0))));
    float _1619 = fma(_1616, _585, fma(_1610, _601, (_620 * _614) * _1608));
    float _1622 = fma(_1616, _587, fma(_1610, _602, (_620 * _615) * _1608));
    float _1625 = fma(_1616, _588, fma(_1610, _603, (_620 * _616) * _1608));
    float _1629 = inversesqrt(dot(vec3(_1619, _1622, _1625), vec3(_1619, _1622, _1625)));
    float _1630 = _1629 * _1619;
    float _1631 = _1629 * _1622;
    float _1632 = _1629 * _1625;
    float _1644 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1645 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1646 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1647 = (-0.0) - _1534;
    float _1649 = (-0.0) - _1535;
    float _1650 = (-0.0) - _1536;
    float _1656 = float(gl_LaunchIDEXT.x);
    float _1657 = float(gl_LaunchIDEXT.y);
    float _1660 = float(gl_LaunchSizeEXT.x);
    float _1674 = fract(fract(sin(dot(vec2(_1656 / _1660, _1657 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1687 = fract(fract(sin(dot(vec2((_1656 + 128.0) / _1660, (_1657 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1697 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1698 = _1697.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1698, _1697.w, _1698, vec3(_1644, _1645, _1646), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    if (_71._m0 == 0u)
    {
        float _1718 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1630, _1631, _1632));
        float _2170 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1721 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
        float _1740 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1605) * 0.949999988079071044921875);
        float _1741 = _1740 * _1740;
        float _1742 = g_sceneCB._m0[4u].x - _1534;
        float _1743 = g_sceneCB._m0[4u].y - _1535;
        float _1744 = g_sceneCB._m0[4u].z - _1536;
        float _1748 = inversesqrt(dot(vec3(_1742, _1743, _1744), vec3(_1742, _1743, _1744)));
        float _1749 = _1748 * _1742;
        float _1750 = _1748 * _1743;
        float _1751 = _1748 * _1744;
        float _1752 = dot(vec3(_1630, _1631, _1632), vec3(g_sceneCB._m0[4u].xyz));
        float _2181 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1755 = isnan(1.0) ? _2181 : (isnan(_2181) ? 1.0 : min(_2181, 1.0));
        float _1756 = dot(vec3(_1630, _1631, _1632), vec3(_1647, _1649, _1650));
        float _2192 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1759 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        float _1760 = dot(vec3(_1630, _1631, _1632), vec3(_1749, _1750, _1751));
        float _2203 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1763 = isnan(1.0) ? _2203 : (isnan(_2203) ? 1.0 : min(_2203, 1.0));
        float _1764 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1749, _1750, _1751));
        float _2214 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1768 = _1741 * _1741;
        float _1772 = ((_1763 * _1763) * (_1768 + (-1.0))) + 1.0;
        float _1784 = (exp2(log2(1.0 - (isnan(1.0) ? _2214 : (isnan(_2214) ? 1.0 : min(_2214, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1786 = 1.0 - _1741;
        float _1797 = (0.5 / (((_1759 * ((_1755 * _1786) + _1741)) + 9.9999999392252902907785028219223e-09) + (((_1759 * _1786) + _1741) * _1755))) * _1755;
        float _2225 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
        float _1799 = (isnan(1.0) ? _2225 : (isnan(_2225) ? 1.0 : min(_2225, 1.0))) * (_1768 / ((_1772 * _1772) * 3.141590118408203125));
        _1806 = ((_1209 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1721;
        _1807 = ((_1210 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1721;
        _1808 = ((_1211 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1721;
        _1809 = (_1784 * g_sceneCB._m0[5u].x) * _1799;
        _1810 = (_1784 * g_sceneCB._m0[5u].y) * _1799;
        _1811 = (_1784 * g_sceneCB._m0[5u].z) * _1799;
    }
    else
    {
        _1806 = 0.0;
        _1807 = 0.0;
        _1808 = 0.0;
        _1809 = 0.0;
        _1810 = 0.0;
        _1811 = 0.0;
    }
    bool _1813 = abs(_1631) < 0.89999997615814208984375;
    float _1815 = float(_1813);
    float _1816 = _1813 ? 0.0 : 1.0;
    float _1819 = (_1815 * _1632) - (_1816 * _1631);
    float _1820 = _1816 * _1630;
    float _1822 = (-0.0) - (_1630 * _1815);
    float _1826 = inversesqrt(dot(vec3(_1819, _1820, _1822), vec3(_1819, _1820, _1822)));
    float _1827 = _1819 * _1826;
    float _1828 = _1820 * _1826;
    float _1829 = _1826 * _1822;
    float _1832 = (_1828 * _1632) - (_1829 * _1631);
    float _1835 = (_1829 * _1630) - (_1827 * _1632);
    float _1838 = (_1827 * _1631) - (_1828 * _1630);
    float _1840;
    float _1848;
    float _1839 = 0.0;
    uint _1841 = 0u;
    float _1845;
    bool _1847;
    for (;;)
    {
        _1845 = (float(_1841) + _1674) * 0.03125;
        _1847 = _1841 == 0u;
        float frontier_phi_61_pred;
        if (_1847)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _1982;
            float _1983;
            uint _1985;
            _1982 = 0.0;
            _1983 = 0.5;
            _1985 = _1841;
            float _1849;
            for (;;)
            {
                _1849 = ((_1985 & 1u) != 0u) ? (_1983 + _1982) : _1982;
                uint _1986 = _1985 >> 1u;
                if (_1986 == 0u)
                {
                    break;
                }
                else
                {
                    _1982 = _1849;
                    _1983 *= 0.5;
                    _1985 = _1986;
                }
            }
            frontier_phi_61_pred = _1849;
        }
        _1848 = frontier_phi_61_pred;
        float _1850 = _1848 + _1687;
        float _1854 = sqrt(_1845);
        float _1855 = ((_1850 > 1.0) ? (_1850 + (-1.0)) : _1850) * 6.283185482025146484375;
        float _1858 = cos(_1855) * _1854;
        float _1860 = sin(_1855) * _1854;
        float _1862 = sqrt(1.0 - _1845);
        float _1875 = ((_1862 * _1630) + (_1858 * _1832)) + (_1860 * _1827);
        float _1876 = ((_1862 * _1631) + (_1858 * _1835)) + (_1860 * _1828);
        float _1877 = ((_1862 * _1632) + (_1858 * _1838)) + (_1860 * _1829);
        _70._m0 = 1u;
        uvec4 _1881 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1882 = _1881.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1882, _1881.w, _1882, vec3(_1644, _1645, _1646), 9.9999997473787516355514526367188e-05, vec3(_1875, _1876, _1877), 10000.0, 1);
        float _1888 = dot(vec3(_1630, _1631, _1632), vec3(_1875, _1876, _1877));
        float _2236 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
        float _1891 = isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0));
        _1840 = ((float(_70._m0 == 0u) * _1891) / (_1891 * 0.3183098733425140380859375)) + _1839;
        uint _1842 = _1841 + 1u;
        if (_1842 == 32u)
        {
            break;
        }
        else
        {
            _1839 = _1840;
            _1841 = _1842;
            continue;
        }
    }
    float _1899 = _1840 * 0.009947183541953563690185546875;
    float _1904 = dot(vec3(_1534, _1535, _1536), vec3(_1630, _1631, _1632)) * 2.0;
    vec4 _1918 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1534 - (_1904 * _1630), _1535 - (_1904 * _1631), _1536 - (_1904 * _1632)), 4.0 - (_1605 * 4.0));
    float _1923 = dot(vec3(_1647, _1649, _1650), vec3(_1630, _1631, _1632));
    float _2247 = isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0));
    float _1932 = (exp2(log2(1.0 - (isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1938 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1630, _1631, _1632), 0.0);
    float _1949 = (_1809 + _1806) + (((_1938.x * _1209) + (_1932 * _1918.x)) * _1899);
    float _1953 = (_1810 + _1807) + (((_1938.y * _1210) + (_1932 * _1918.y)) * _1899);
    float _1957 = (_1811 + _1808) + (((_1938.z * _1211) + (_1932 * _1918.z)) * _1899);
    float _2258 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
    float _2269 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
    float _2280 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
    bool _1965 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1976;
    _1976.x = _1965 ? ((_578 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0)));
    _1976.y = _1965 ? ((_581 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2269 : (isnan(_2269) ? 1.0 : min(_2269, 1.0)));
    _1976.z = _1965 ? ((_584 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0)));
    payload._m0 = _1976;
}


