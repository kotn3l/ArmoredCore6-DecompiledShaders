#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1173;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _162 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _163 >> 16u;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _165;
        }
        _168 = frontier_phi_3_2_ladder_2;
        _170 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _183 = (_176 * _168) + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 20u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 24u;
    }
    bool _216 = _177 == 0u;
    uint _217;
    if (_216)
    {
        _217 = _210;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 8u;
        }
        _217 = frontier_phi_9_10_ladder;
    }
    uint _222 = _178 ? (_217 + 4u) : _217;
    uint _223 = _176 * _168;
    uvec4 _228 = texelFetch(l_geomAttrib_0, int(((_223 + 4u) + _222) >> 2u));
    uint _229 = _228.x;
    float _233 = float(int(uint(int(_229 << 16u) >> int(16u))));
    float _234 = float(int(uint(int(_229) >> int(16u))));
    uvec4 _238 = texelFetch(l_geomAttrib_0, int(((_223 + 8u) + _222) >> 2u));
    uint _239 = _238.x;
    uint _249 = (_176 * _170) + 12u;
    uint _270;
    uint _271;
    uint _272;
    uint _273;
    if (_181)
    {
        uvec4 _251 = texelFetch(l_geomAttrib_0, int(_249 >> 2u));
        uint _252 = _251.x;
        _270 = _252 & 255u;
        _271 = (_252 >> 8u) & 255u;
        _272 = (_252 >> 16u) & 255u;
        _273 = 20u;
    }
    else
    {
        uint _258 = _249 >> 2u;
        uvec2 _264 = uvec2(texelFetch(l_geomAttrib_0, int(_258)).x, texelFetch(l_geomAttrib_0, int(_258 + 1u)).x);
        uint _265 = _264.x;
        _270 = _265 & 65535u;
        _271 = _265 >> 16u;
        _272 = _264.y & 65535u;
        _273 = 24u;
    }
    uint _277;
    if (_216)
    {
        _277 = _273;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _273 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _273 + 8u;
        }
        _277 = frontier_phi_16_17_ladder;
    }
    uint _281 = _178 ? (_277 + 4u) : _277;
    uint _282 = _176 * _170;
    uvec4 _286 = texelFetch(l_geomAttrib_0, int(((_282 + 4u) + _281) >> 2u));
    uint _287 = _286.x;
    float _291 = float(int(uint(int(_287 << 16u) >> int(16u))));
    float _292 = float(int(uint(int(_287) >> int(16u))));
    uvec4 _296 = texelFetch(l_geomAttrib_0, int(((_282 + 8u) + _281) >> 2u));
    uint _297 = _296.x;
    uint _307 = (_176 * _171) + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_181)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 20u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 24u;
    }
    uint _335;
    if (_216)
    {
        _335 = _331;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _331 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _331 + 8u;
        }
        _335 = frontier_phi_23_24_ladder;
    }
    uint _339 = _178 ? (_335 + 4u) : _335;
    uint _340 = _176 * _171;
    uvec4 _344 = texelFetch(l_geomAttrib_0, int(((_340 + 4u) + _339) >> 2u));
    uint _345 = _344.x;
    float _349 = float(int(uint(int(_345 << 16u) >> int(16u))));
    float _350 = float(int(uint(int(_345) >> int(16u))));
    uvec4 _354 = texelFetch(l_geomAttrib_0, int(((_340 + 8u) + _339) >> 2u));
    uint _355 = _354.x;
    bool _365 = _127.z == 0u;
    float _401;
    float _402;
    float _403;
    if (_365)
    {
        uint _368 = _168 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _168 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_365)
    {
        uint _406 = _170 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _170 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_365)
    {
        uint _444 = _171 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _171 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _482 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_291 - _233) * 0.00048828125;
    float _525 = (_292 - _234) * 0.00048828125;
    float _528 = (_349 - _233) * 0.00048828125;
    float _529 = (_350 - _234) * 0.00048828125;
    float _551 = _439 - _401;
    float _552 = _440 - _402;
    float _553 = _441 - _403;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _477 - _401;
    float _564 = _478 - _402;
    float _565 = _479 - _403;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_291 * hit._m0.x) + (_233 * _482)) + (_349 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_292 * hit._m0.x) + (_234 * _482)) + (_350 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_207) * _482) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _583 = (((float(_208) * _482) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _586 = (((float(_209) * _482) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    uvec2 _611 = uvec2(textureSize(M_watchman_Laser_001_snp_0_Texture2D_2, int(0u)));
    bool _616 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _669;
    if (_616)
    {
        float _627 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _633 = (_574 * _559) - (_571 * _562);
        float _636 = (_568 * _562) - (_574 * _556);
        float _639 = (_571 * _556) - (_568 * _559);
        float _666 = ((log2((((float(_611.y) * 0.5) * float(_611.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_636 * _636) + (_639 * _639)) + (_633 * _633)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_627 * gl_WorldRayDirectionEXT.x, _627 * gl_WorldRayDirectionEXT.y, _627 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _669 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    }
    else
    {
        _669 = 0.0;
    }
    vec4 _673 = textureLod(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + _575) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + _576) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _669);
    uvec2 _706 = uvec2(textureSize(M_watchman_Laser_001_snp_0_Texture2D_3, int(0u)));
    float _757;
    if (_616)
    {
        float _717 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _723 = (_574 * _559) - (_571 * _562);
        float _726 = (_568 * _562) - (_574 * _556);
        float _729 = (_571 * _556) - (_568 * _559);
        float _755 = ((log2((((float(_706.y) * 0.5) * float(_706.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_726 * _726) + (_729 * _729)) + (_723 * _723)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_717 * gl_WorldRayDirectionEXT.x, _717 * gl_WorldRayDirectionEXT.y, _717 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _757 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    }
    else
    {
        _757 = 0.0;
    }
    vec4 _759 = textureLod(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].w * cbPerFrame._m0[22u].x) + _575) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) + _576) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _757);
    float _780 = cbMtdParam._m0[14u].z * ((cbMtdParam._m0[9u].x * _759.x) + (cbMtdParam._m0[11u].x * _673.x));
    float _781 = ((cbMtdParam._m0[9u].y * _759.y) + (cbMtdParam._m0[11u].y * _673.y)) * cbMtdParam._m0[14u].z;
    float _782 = ((cbMtdParam._m0[9u].z * _759.z) + (cbMtdParam._m0[11u].z * _673.z)) * cbMtdParam._m0[14u].z;
    uvec2 _800 = uvec2(textureSize(M_watchman_Laser_001_snp_0_Texture2D_1, int(0u)));
    float _804 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _805 = _804 * gl_WorldRayDirectionEXT.x;
    float _806 = _804 * gl_WorldRayDirectionEXT.y;
    float _807 = _804 * gl_WorldRayDirectionEXT.z;
    float _851;
    if (_616)
    {
        float _817 = (_574 * _559) - (_571 * _562);
        float _820 = (_568 * _562) - (_574 * _556);
        float _823 = (_571 * _556) - (_568 * _559);
        float _849 = ((log2((((float(_800.y) * 0.5) * float(_800.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_820 * _820) + (_823 * _823)) + (_817 * _817)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_805, _806, _807), vec3(_587, _589, _590))));
        _851 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    }
    else
    {
        _851 = 0.0;
    }
    vec4 _853 = textureLod(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _575) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + _576) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _851);
    float _880 = inversesqrt(dot(vec3(_587, _589, _590), vec3(_587, _589, _590)));
    float _881 = _880 * _587;
    float _882 = _880 * _589;
    float _883 = _880 * _590;
    float _895 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _896 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _897 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _898 = (-0.0) - _805;
    float _900 = (-0.0) - _806;
    float _901 = (-0.0) - _807;
    float _907 = float(gl_LaunchIDEXT.x);
    float _908 = float(gl_LaunchIDEXT.y);
    float _911 = float(gl_LaunchSizeEXT.x);
    float _925 = fract(fract(sin(dot(vec2(_907 / _911, _908 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _938 = fract(fract(sin(dot(vec2((_907 + 128.0) / _911, (_908 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _65._m0 = 1u;
    uvec4 _948 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _949 = _948.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _949, _948.w, _949, vec3(_895, _896, _897), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1015;
    float _1016;
    float _1017;
    if (_65._m0 == 0u)
    {
        float _970 = g_sceneCB._m0[4u].x - _805;
        float _971 = g_sceneCB._m0[4u].y - _806;
        float _972 = g_sceneCB._m0[4u].z - _807;
        float _976 = inversesqrt(dot(vec3(_970, _971, _972), vec3(_970, _971, _972)));
        float _980 = dot(vec3(_881, _882, _883), vec3(g_sceneCB._m0[4u].xyz));
        float _1266 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _983 = isnan(1.0) ? _1266 : (isnan(_1266) ? 1.0 : min(_1266, 1.0));
        float _984 = dot(vec3(_881, _882, _883), vec3(_898, _900, _901));
        float _1277 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _988 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_970 * _976, _971 * _976, _972 * _976));
        float _1288 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _999 = (exp2(log2(1.0 - (isnan(1.0) ? _1288 : (isnan(_1288) ? 1.0 : min(_1288, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1005 = (0.5 / ((_983 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1277 : (isnan(_1277) ? 1.0 : min(_1277, 1.0))))) * _983;
        float _1299 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1007 = (isnan(1.0) ? _1299 : (isnan(_1299) ? 1.0 : min(_1299, 1.0))) * 0.31831014156341552734375;
        _1015 = (_999 * g_sceneCB._m0[5u].x) * _1007;
        _1016 = (_999 * g_sceneCB._m0[5u].y) * _1007;
        _1017 = (_999 * g_sceneCB._m0[5u].z) * _1007;
    }
    else
    {
        _1015 = 0.0;
        _1016 = 0.0;
        _1017 = 0.0;
    }
    bool _1019 = abs(_882) < 0.89999997615814208984375;
    float _1021 = float(_1019);
    float _1022 = _1019 ? 0.0 : 1.0;
    float _1025 = (_1021 * _883) - (_1022 * _882);
    float _1026 = _1022 * _881;
    float _1028 = (-0.0) - (_881 * _1021);
    float _1032 = inversesqrt(dot(vec3(_1025, _1026, _1028), vec3(_1025, _1026, _1028)));
    float _1033 = _1025 * _1032;
    float _1034 = _1026 * _1032;
    float _1035 = _1032 * _1028;
    float _1038 = (_1034 * _883) - (_1035 * _882);
    float _1041 = (_1035 * _881) - (_1033 * _883);
    float _1044 = (_1033 * _882) - (_1034 * _881);
    float _1046;
    float _1054;
    float _1045 = 0.0;
    uint _1047 = 0u;
    float _1051;
    bool _1053;
    for (;;)
    {
        _1051 = (float(_1047) + _925) * 0.03125;
        _1053 = _1047 == 0u;
        float frontier_phi_45_pred;
        if (_1053)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1178;
            float _1179;
            uint _1181;
            _1178 = 0.0;
            _1179 = 0.5;
            _1181 = _1047;
            float _1055;
            for (;;)
            {
                _1055 = ((_1181 & 1u) != 0u) ? (_1179 + _1178) : _1178;
                uint _1182 = _1181 >> 1u;
                if (_1182 == 0u)
                {
                    break;
                }
                else
                {
                    _1178 = _1055;
                    _1179 *= 0.5;
                    _1181 = _1182;
                }
            }
            frontier_phi_45_pred = _1055;
        }
        _1054 = frontier_phi_45_pred;
        float _1056 = _1054 + _938;
        float _1061 = sqrt(_1051);
        float _1062 = ((_1056 > 1.0) ? (_1056 + (-1.0)) : _1056) * 6.283185482025146484375;
        float _1065 = cos(_1062) * _1061;
        float _1067 = sin(_1062) * _1061;
        float _1069 = sqrt(1.0 - _1051);
        float _1082 = ((_1069 * _881) + (_1065 * _1038)) + (_1067 * _1033);
        float _1083 = ((_1069 * _882) + (_1065 * _1041)) + (_1067 * _1034);
        float _1084 = ((_1069 * _883) + (_1065 * _1044)) + (_1067 * _1035);
        _64._m0 = 1u;
        uvec4 _1088 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1089 = _1088.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1089, _1088.w, _1089, vec3(_895, _896, _897), 9.9999997473787516355514526367188e-05, vec3(_1082, _1083, _1084), 10000.0, 1);
        float _1095 = dot(vec3(_881, _882, _883), vec3(_1082, _1083, _1084));
        float _1310 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1098 = isnan(1.0) ? _1310 : (isnan(_1310) ? 1.0 : min(_1310, 1.0));
        _1046 = ((float(_64._m0 == 0u) * _1098) / (_1098 * 0.3183098733425140380859375)) + _1045;
        uint _1048 = _1047 + 1u;
        if (_1048 == 32u)
        {
            break;
        }
        else
        {
            _1045 = _1046;
            _1047 = _1048;
            continue;
        }
    }
    float _1107 = _1046 * 0.009947183541953563690185546875;
    float _1112 = dot(vec3(_805, _806, _807), vec3(_881, _882, _883)) * 2.0;
    vec4 _1124 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_805 - (_1112 * _881), _806 - (_1112 * _882), _807 - (_1112 * _883)), 4.0);
    float _1129 = dot(vec3(_898, _900, _901), vec3(_881, _882, _883));
    float _1321 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _1138 = (exp2(log2(1.0 - (isnan(1.0) ? _1321 : (isnan(_1321) ? 1.0 : min(_1321, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1147 = (((((((float(_297 & 255u) * hit._m0.x) + (float(_239 & 255u) * _482)) + (float(_355 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((cbMtdParam._m0[10u].x * _853.x) * cbMtdParam._m0[14u].y) - _780)) + _780) + _1015) + ((_1124.x * _1107) * _1138);
    float _1150 = (((((((float((_297 >> 8u) & 255u) * hit._m0.x) + (float((_239 >> 8u) & 255u) * _482)) + (float((_355 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((cbMtdParam._m0[10u].y * _853.y) * cbMtdParam._m0[14u].y) - _781)) + _781) + _1016) + ((_1124.y * _1107) * _1138);
    float _1153 = (((((((float((_297 >> 16u) & 255u) * hit._m0.x) + (float((_239 >> 16u) & 255u) * _482)) + (float((_355 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (((cbMtdParam._m0[10u].z * _853.z) * cbMtdParam._m0[14u].y) - _782)) + _782) + _1017) + ((_1124.z * _1107) * _1138);
    float _1332 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
    float _1343 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _1354 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    bool _1161 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1172;
    _1172.x = _1161 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1332 : (isnan(_1332) ? 1.0 : min(_1332, 1.0)));
    _1172.y = _1161 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1343 : (isnan(_1343) ? 1.0 : min(_1343, 1.0)));
    _1172.z = _1161 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1354 : (isnan(_1354) ? 1.0 : min(_1354, 1.0)));
    payload._m0 = _1172;
}


