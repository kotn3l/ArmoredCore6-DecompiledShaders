#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1077;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _162 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _163 >> 16u;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _165;
        }
        _168 = frontier_phi_3_2_ladder_2;
        _170 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _183 = (_176 * _168) + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 20u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 24u;
    }
    bool _216 = _177 == 0u;
    uint _217;
    if (_216)
    {
        _217 = _210;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 8u;
        }
        _217 = frontier_phi_9_10_ladder;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((((_176 * _168) + 4u) + (_178 ? (_217 + 4u) : _217)) >> 2u));
    uint _229 = _228.x;
    float _233 = float(int(uint(int(_229 << 16u) >> int(16u))));
    float _234 = float(int(uint(int(_229) >> int(16u))));
    uint _236 = (_176 * _170) + 12u;
    uint _257;
    uint _258;
    uint _259;
    uint _260;
    if (_181)
    {
        uvec4 _238 = texelFetch(l_geomAttrib_0, int(_236 >> 2u));
        uint _239 = _238.x;
        _257 = _239 & 255u;
        _258 = (_239 >> 8u) & 255u;
        _259 = (_239 >> 16u) & 255u;
        _260 = 20u;
    }
    else
    {
        uint _245 = _236 >> 2u;
        uvec2 _251 = uvec2(texelFetch(l_geomAttrib_0, int(_245)).x, texelFetch(l_geomAttrib_0, int(_245 + 1u)).x);
        uint _252 = _251.x;
        _257 = _252 & 65535u;
        _258 = _252 >> 16u;
        _259 = _251.y & 65535u;
        _260 = 24u;
    }
    uint _264;
    if (_216)
    {
        _264 = _260;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _260 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _260 + 8u;
        }
        _264 = frontier_phi_16_17_ladder;
    }
    uvec4 _273 = texelFetch(l_geomAttrib_0, int((((_176 * _170) + 4u) + (_178 ? (_264 + 4u) : _264)) >> 2u));
    uint _274 = _273.x;
    float _278 = float(int(uint(int(_274 << 16u) >> int(16u))));
    float _279 = float(int(uint(int(_274) >> int(16u))));
    uint _281 = (_176 * _171) + 12u;
    uint _302;
    uint _303;
    uint _304;
    uint _305;
    if (_181)
    {
        uvec4 _283 = texelFetch(l_geomAttrib_0, int(_281 >> 2u));
        uint _284 = _283.x;
        _302 = _284 & 255u;
        _303 = (_284 >> 8u) & 255u;
        _304 = (_284 >> 16u) & 255u;
        _305 = 20u;
    }
    else
    {
        uint _290 = _281 >> 2u;
        uvec2 _296 = uvec2(texelFetch(l_geomAttrib_0, int(_290)).x, texelFetch(l_geomAttrib_0, int(_290 + 1u)).x);
        uint _297 = _296.x;
        _302 = _297 & 65535u;
        _303 = _297 >> 16u;
        _304 = _296.y & 65535u;
        _305 = 24u;
    }
    uint _309;
    if (_216)
    {
        _309 = _305;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _305 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _305 + 8u;
        }
        _309 = frontier_phi_23_24_ladder;
    }
    uvec4 _318 = texelFetch(l_geomAttrib_0, int((((_176 * _171) + 4u) + (_178 ? (_309 + 4u) : _309)) >> 2u));
    uint _319 = _318.x;
    float _323 = float(int(uint(int(_319 << 16u) >> int(16u))));
    float _324 = float(int(uint(int(_319) >> int(16u))));
    bool _326 = _127.z == 0u;
    float _362;
    float _363;
    float _364;
    if (_326)
    {
        uint _329 = _168 * 3u;
        uvec3 _338 = uvec3(texelFetch(l_geomPositionBuffer, int(_329)).x, texelFetch(l_geomPositionBuffer, int(_329 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_329 + 2u)).x);
        _362 = uintBitsToFloat(_338.x);
        _363 = uintBitsToFloat(_338.y);
        _364 = uintBitsToFloat(_338.z);
    }
    else
    {
        uint _346 = _168 * 2u;
        uvec2 _352 = uvec2(texelFetch(l_geomPositionBuffer, int(_346)).x, texelFetch(l_geomPositionBuffer, int(_346 + 1u)).x);
        uint _353 = _352.x;
        _362 = unpackHalf2x16(_353).x;
        _363 = unpackHalf2x16(_353 >> 16u).x;
        _364 = unpackHalf2x16(_352.y).x;
    }
    float _400;
    float _401;
    float _402;
    if (_326)
    {
        uint _367 = _170 * 3u;
        uvec3 _376 = uvec3(texelFetch(l_geomPositionBuffer, int(_367)).x, texelFetch(l_geomPositionBuffer, int(_367 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_367 + 2u)).x);
        _400 = uintBitsToFloat(_376.x);
        _401 = uintBitsToFloat(_376.y);
        _402 = uintBitsToFloat(_376.z);
    }
    else
    {
        uint _384 = _170 * 2u;
        uvec2 _390 = uvec2(texelFetch(l_geomPositionBuffer, int(_384)).x, texelFetch(l_geomPositionBuffer, int(_384 + 1u)).x);
        uint _391 = _390.x;
        _400 = unpackHalf2x16(_391).x;
        _401 = unpackHalf2x16(_391 >> 16u).x;
        _402 = unpackHalf2x16(_390.y).x;
    }
    float _438;
    float _439;
    float _440;
    if (_326)
    {
        uint _405 = _171 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _171 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _443 = (1.0 - hit._m0.x) - hit._m0.y;
    float _465 = (_278 - _233) * 0.00048828125;
    float _467 = (_279 - _234) * 0.00048828125;
    float _470 = (_323 - _233) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _493 = _400 - _362;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _498 = fma(_495, gl_ObjectToWorldEXT[2u].x, fma(_494, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _493));
    float _501 = fma(_495, gl_ObjectToWorldEXT[2u].y, fma(_494, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _493));
    float _504 = fma(_495, gl_ObjectToWorldEXT[2u].z, fma(_494, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _493));
    float _505 = _438 - _362;
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _510 = fma(_507, gl_ObjectToWorldEXT[2u].x, fma(_506, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _505));
    float _513 = fma(_507, gl_ObjectToWorldEXT[2u].y, fma(_506, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _505));
    float _516 = fma(_507, gl_ObjectToWorldEXT[2u].z, fma(_506, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _505));
    float _517 = (((_278 * hit._m0.x) + (_233 * _443)) + (_323 * hit._m0.y)) * 0.00048828125;
    float _518 = (((_279 * hit._m0.x) + (_234 * _443)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _522 = (((float(_207) * _443) + (-127.0)) + (float(_257) * hit._m0.x)) + (float(_302) * hit._m0.y);
    float _525 = (((float(_208) * _443) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _528 = (((float(_209) * _443) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = _522 * 0.0078740157186985015869140625;
    float _531 = _525 * 0.0078740157186985015869140625;
    float _532 = _528 * 0.0078740157186985015869140625;
    uvec2 _555 = uvec2(textureSize(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_0, int(0u)));
    bool _560 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _613;
    if (_560)
    {
        float _571 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _577 = (_516 * _501) - (_513 * _504);
        float _580 = (_510 * _504) - (_516 * _498);
        float _583 = (_513 * _498) - (_510 * _501);
        float _610 = ((log2((((float(_555.y) * 0.5) * float(_555.x)) * abs((_471 * _465) - (_470 * _467))) / (sqrt(((_580 * _580) + (_583 * _583)) + (_577 * _577)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_571 * gl_WorldRayDirectionEXT.x, _571 * gl_WorldRayDirectionEXT.y, _571 * gl_WorldRayDirectionEXT.z), vec3(_529, _531, _532))));
        _613 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    }
    else
    {
        _613 = 0.0;
    }
    vec4 _617 = textureLod(sampler2D(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _613);
    float _632 = (cbMtdParam._m0[9u].x + cbMtdParam._m0[11u].z) * _617.x;
    float _633 = (cbMtdParam._m0[9u].y + cbMtdParam._m0[11u].z) * _617.y;
    float _634 = (cbMtdParam._m0[9u].z + cbMtdParam._m0[11u].z) * _617.z;
    uvec2 _660 = uvec2(textureSize(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_2, int(0u)));
    float _664 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _665 = _664 * gl_WorldRayDirectionEXT.x;
    float _666 = _664 * gl_WorldRayDirectionEXT.y;
    float _667 = _664 * gl_WorldRayDirectionEXT.z;
    float _711;
    if (_560)
    {
        float _677 = (_516 * _501) - (_513 * _504);
        float _680 = (_510 * _504) - (_516 * _498);
        float _683 = (_513 * _498) - (_510 * _501);
        float _709 = ((log2((((float(_660.y) * 0.5) * float(_660.x)) * abs((_471 * _465) - (_470 * _467))) / (sqrt(((_680 * _680) + (_683 * _683)) + (_677 * _677)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_665, _666, _667), vec3(_529, _531, _532))));
        _711 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    }
    else
    {
        _711 = 0.0;
    }
    vec4 _713 = textureLod(sampler2D(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + _517) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + _518) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _711);
    float _727 = inversesqrt(dot(vec3(_529, _531, _532), vec3(_529, _531, _532)));
    float _728 = _727 * _529;
    float _729 = _727 * _531;
    float _730 = _727 * _532;
    float _742 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _743 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _744 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _745 = (-0.0) - _665;
    float _747 = (-0.0) - _666;
    float _748 = (-0.0) - _667;
    float _754 = float(gl_LaunchIDEXT.x);
    float _755 = float(gl_LaunchIDEXT.y);
    float _758 = float(gl_LaunchSizeEXT.x);
    float _772 = fract(fract(sin(dot(vec2(_754 / _758, _755 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _785 = fract(fract(sin(dot(vec2((_754 + 128.0) / _758, (_755 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _786 = 1.0 - cbMtdParam._m0[11u].y;
    float _787 = _786 * _632;
    float _788 = _786 * _633;
    float _789 = _634 * _786;
    float _794 = cbMtdParam._m0[11u].y * (_632 + (-0.039999999105930328369140625));
    float _795 = (_633 + (-0.039999999105930328369140625)) * cbMtdParam._m0[11u].y;
    float _796 = (_634 + (-0.039999999105930328369140625)) * cbMtdParam._m0[11u].y;
    float _797 = _794 + 0.039999999105930328369140625;
    float _799 = _795 + 0.039999999105930328369140625;
    float _800 = _796 + 0.039999999105930328369140625;
    _65._m0 = 1u;
    uvec4 _810 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _811 = _810.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _811, _810.w, _811, vec3(_742, _743, _744), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _897;
    float _898;
    float _899;
    float _900;
    float _901;
    float _902;
    if (_65._m0 == 0u)
    {
        float _832 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_728, _729, _730));
        float _1163 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _835 = isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0));
        float _846 = g_sceneCB._m0[4u].x - _665;
        float _847 = g_sceneCB._m0[4u].y - _666;
        float _848 = g_sceneCB._m0[4u].z - _667;
        float _852 = inversesqrt(dot(vec3(_846, _847, _848), vec3(_846, _847, _848)));
        float _856 = dot(vec3(_728, _729, _730), vec3(g_sceneCB._m0[4u].xyz));
        float _1174 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
        float _859 = isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0));
        float _860 = dot(vec3(_728, _729, _730), vec3(_745, _747, _748));
        float _1185 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
        float _864 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_846 * _852, _847 * _852, _848 * _852));
        float _1196 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
        float _872 = exp2(log2(1.0 - (isnan(1.0) ? _1196 : (isnan(_1196) ? 1.0 : min(_1196, 1.0)))) * 5.0);
        float _887 = (0.5 / ((_859 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0))))) * _859;
        float _1207 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        float _889 = (isnan(1.0) ? _1207 : (isnan(_1207) ? 1.0 : min(_1207, 1.0))) * 0.31831014156341552734375;
        _897 = ((_787 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _835;
        _898 = ((_788 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _835;
        _899 = ((_789 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _835;
        _900 = (((_872 * (0.959999978542327880859375 - _794)) + _797) * g_sceneCB._m0[5u].x) * _889;
        _901 = (((_872 * (0.959999978542327880859375 - _795)) + _799) * g_sceneCB._m0[5u].y) * _889;
        _902 = (((_872 * (0.959999978542327880859375 - _796)) + _800) * g_sceneCB._m0[5u].z) * _889;
    }
    else
    {
        _897 = 0.0;
        _898 = 0.0;
        _899 = 0.0;
        _900 = 0.0;
        _901 = 0.0;
        _902 = 0.0;
    }
    bool _904 = abs(_729) < 0.89999997615814208984375;
    float _906 = float(_904);
    float _907 = _904 ? 0.0 : 1.0;
    float _910 = (_906 * _730) - (_907 * _729);
    float _911 = _907 * _728;
    float _913 = (-0.0) - (_728 * _906);
    float _917 = inversesqrt(dot(vec3(_910, _911, _913), vec3(_910, _911, _913)));
    float _918 = _910 * _917;
    float _919 = _911 * _917;
    float _920 = _917 * _913;
    float _923 = (_919 * _730) - (_920 * _729);
    float _926 = (_920 * _728) - (_918 * _730);
    float _929 = (_918 * _729) - (_919 * _728);
    float _931;
    float _939;
    float _930 = 0.0;
    uint _932 = 0u;
    float _936;
    bool _938;
    for (;;)
    {
        _936 = (float(_932) + _772) * 0.03125;
        _938 = _932 == 0u;
        float frontier_phi_43_pred;
        if (_938)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1082;
            float _1083;
            uint _1085;
            _1082 = 0.0;
            _1083 = 0.5;
            _1085 = _932;
            float _940;
            for (;;)
            {
                _940 = ((_1085 & 1u) != 0u) ? (_1083 + _1082) : _1082;
                uint _1086 = _1085 >> 1u;
                if (_1086 == 0u)
                {
                    break;
                }
                else
                {
                    _1082 = _940;
                    _1083 *= 0.5;
                    _1085 = _1086;
                }
            }
            frontier_phi_43_pred = _940;
        }
        _939 = frontier_phi_43_pred;
        float _941 = _939 + _785;
        float _946 = sqrt(_936);
        float _947 = ((_941 > 1.0) ? (_941 + (-1.0)) : _941) * 6.283185482025146484375;
        float _950 = cos(_947) * _946;
        float _952 = sin(_947) * _946;
        float _954 = sqrt(1.0 - _936);
        float _967 = ((_954 * _728) + (_950 * _923)) + (_952 * _918);
        float _968 = ((_954 * _729) + (_950 * _926)) + (_952 * _919);
        float _969 = ((_954 * _730) + (_950 * _929)) + (_952 * _920);
        _64._m0 = 1u;
        uvec4 _973 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _974 = _973.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _974, _973.w, _974, vec3(_742, _743, _744), 9.9999997473787516355514526367188e-05, vec3(_967, _968, _969), 10000.0, 1);
        float _980 = dot(vec3(_728, _729, _730), vec3(_967, _968, _969));
        float _1218 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _983 = isnan(1.0) ? _1218 : (isnan(_1218) ? 1.0 : min(_1218, 1.0));
        _931 = ((float(_64._m0 == 0u) * _983) / (_983 * 0.3183098733425140380859375)) + _930;
        uint _933 = _932 + 1u;
        if (_933 == 32u)
        {
            break;
        }
        else
        {
            _930 = _931;
            _932 = _933;
            continue;
        }
    }
    float _991 = _931 * 0.009947183541953563690185546875;
    float _996 = dot(vec3(_665, _666, _667), vec3(_728, _729, _730)) * 2.0;
    vec4 _1008 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_665 - (_996 * _728), _666 - (_996 * _729), _667 - (_996 * _730)), 4.0);
    float _1013 = dot(vec3(_745, _747, _748), vec3(_728, _729, _730));
    float _1229 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    float _1023 = exp2(log2(1.0 - (isnan(1.0) ? _1229 : (isnan(_1229) ? 1.0 : min(_1229, 1.0)))) * 5.0);
    vec4 _1035 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_728, _729, _730), 0.0);
    float _1047 = ((_897 + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _713.x)) + _900) + (((_1035.x * _787) + (((_1023 * (0.959999978542327880859375 - _794)) + _797) * _1008.x)) * _991);
    float _1052 = ((_898 + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _713.y)) + _901) + (((_1035.y * _788) + (((_1023 * (0.959999978542327880859375 - _795)) + _799) * _1008.y)) * _991);
    float _1057 = ((_899 + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _713.z)) + _902) + (((_1035.z * _789) + (((_1023 * (0.959999978542327880859375 - _796)) + _800) * _1008.z)) * _991);
    float _1240 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
    float _1251 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
    float _1262 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    bool _1065 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1076;
    _1076.x = _1065 ? ((_522 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1240 : (isnan(_1240) ? 1.0 : min(_1240, 1.0)));
    _1076.y = _1065 ? ((_525 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1251 : (isnan(_1251) ? 1.0 : min(_1251, 1.0)));
    _1076.z = _1065 ? ((_528 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1262 : (isnan(_1262) ? 1.0 : min(_1262, 1.0)));
    payload._m0 = _1076;
}


