#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _52
{
    vec3 _m0;
};

struct _56
{
    vec2 _m0;
};

struct _59
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Edge_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _52 payload;
hitAttributeEXT _56 hit;
layout(location = 1) rayPayloadEXT _59 _61;
layout(location = 2) rayPayloadEXT _59 _62;

vec3 _1146;

void main()
{
    float _70 = float(gl_LaunchSizeEXT.y);
    float _100 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _109 = sqrt(((_101 * _101) + (_100 * _100)) + (_102 * _102)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _70)))));
    uvec4 _120 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _121 = _120.y;
    uint _161;
    uint _163;
    uint _164;
    if (_120.x == 0u)
    {
        uint _129 = (_121 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _138 = uvec3(texelFetch(l_geomIndexBuffer, int(_129)).x, texelFetch(l_geomIndexBuffer, int(_129 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_129 + 2u)).x);
        _161 = _138.x;
        _163 = _138.y;
        _164 = _138.z;
    }
    else
    {
        uint _142 = uint(gl_PrimitiveID) * 6u;
        uint _144 = _142 & 4294967292u;
        uint _147 = (_121 + _144) >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomIndexBuffer, int(_147)).x, texelFetch(l_geomIndexBuffer, int(_147 + 1u)).x);
        uint _155 = _154.x;
        uint _156 = _154.y;
        uint _158 = _155 >> 16u;
        uint _159 = _156 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_144 == _142)
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _155 & 65535u;
            frontier_phi_3_2_ladder_2 = _158;
        }
        else
        {
            frontier_phi_3_2_ladder = _156 >> 16u;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _159;
        }
        _161 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder_2;
        _164 = frontier_phi_3_2_ladder;
    }
    uvec4 _168 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _169 = _168.x;
    uint _170 = _168.z;
    bool _171 = _170 != 0u;
    uint _172 = _120.w;
    bool _174 = _171 || (_172 == 0u);
    uint _175 = _169 * _161;
    uint _176 = _175 + 12u;
    uint _200;
    uint _201;
    uint _202;
    uint _203;
    if (_174)
    {
        uvec4 _179 = texelFetch(l_geomAttrib_0, int(_176 >> 2u));
        uint _180 = _179.x;
        _200 = _180 & 255u;
        _201 = (_180 >> 8u) & 255u;
        _202 = (_180 >> 16u) & 255u;
        _203 = 16u;
    }
    else
    {
        uint _188 = _176 >> 2u;
        uvec2 _194 = uvec2(texelFetch(l_geomAttrib_0, int(_188)).x, texelFetch(l_geomAttrib_0, int(_188 + 1u)).x);
        uint _195 = _194.x;
        _200 = _195 & 65535u;
        _201 = _195 >> 16u;
        _202 = _194.y & 65535u;
        _203 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_203 + _175) >> 2u));
    uint _212 = _211.x;
    uint _224 = _168.y;
    bool _225 = _170 == 0u;
    uint _228 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _237 = texelFetch(l_geomAttrib_1, int((((_224 * _161) + 4u) + (_171 ? (_228 + 4u) : _228)) >> 2u));
    uint _238 = _237.x;
    float _242 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_238) >> int(16u))));
    uint _244 = _169 * _163;
    uint _245 = _244 + 12u;
    uint _266;
    uint _267;
    uint _268;
    uint _269;
    if (_174)
    {
        uvec4 _247 = texelFetch(l_geomAttrib_0, int(_245 >> 2u));
        uint _248 = _247.x;
        _266 = _248 & 255u;
        _267 = (_248 >> 8u) & 255u;
        _268 = (_248 >> 16u) & 255u;
        _269 = 16u;
    }
    else
    {
        uint _254 = _245 >> 2u;
        uvec2 _260 = uvec2(texelFetch(l_geomAttrib_0, int(_254)).x, texelFetch(l_geomAttrib_0, int(_254 + 1u)).x);
        uint _261 = _260.x;
        _266 = _261 & 65535u;
        _267 = _261 >> 16u;
        _268 = _260.y & 65535u;
        _269 = 20u;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((_269 + _244) >> 2u));
    uint _276 = _275.x;
    uint _289 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _296 = texelFetch(l_geomAttrib_1, int((((_224 * _163) + 4u) + (_171 ? (_289 + 4u) : _289)) >> 2u));
    uint _297 = _296.x;
    float _301 = float(int(uint(int(_297 << 16u) >> int(16u))));
    float _302 = float(int(uint(int(_297) >> int(16u))));
    uint _303 = _169 * _164;
    uint _304 = _303 + 12u;
    uint _325;
    uint _326;
    uint _327;
    uint _328;
    if (_174)
    {
        uvec4 _306 = texelFetch(l_geomAttrib_0, int(_304 >> 2u));
        uint _307 = _306.x;
        _325 = _307 & 255u;
        _326 = (_307 >> 8u) & 255u;
        _327 = (_307 >> 16u) & 255u;
        _328 = 16u;
    }
    else
    {
        uint _313 = _304 >> 2u;
        uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
        uint _320 = _319.x;
        _325 = _320 & 65535u;
        _326 = _320 >> 16u;
        _327 = _319.y & 65535u;
        _328 = 20u;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int((_328 + _303) >> 2u));
    uint _335 = _334.x;
    uint _348 = _225 ? 4u : ((_172 != 0u) ? 12u : 8u);
    uvec4 _355 = texelFetch(l_geomAttrib_1, int((((_224 * _164) + 4u) + (_171 ? (_348 + 4u) : _348)) >> 2u));
    uint _356 = _355.x;
    float _360 = float(int(uint(int(_356 << 16u) >> int(16u))));
    float _361 = float(int(uint(int(_356) >> int(16u))));
    bool _363 = _120.z == 0u;
    float _399;
    float _400;
    float _401;
    if (_363)
    {
        uint _366 = _161 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _161 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_363)
    {
        uint _404 = _163 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _163 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_363)
    {
        uint _442 = _164 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _164 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _480 = (1.0 - hit._m0.x) - hit._m0.y;
    float _514 = (_301 - _242) * 0.00048828125;
    float _516 = (_302 - _243) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _520 = (_361 - _243) * 0.00048828125;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _544 = _439 - _401;
    float _547 = fma(_544, gl_ObjectToWorldEXT[2u].x, fma(_543, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _542));
    float _550 = fma(_544, gl_ObjectToWorldEXT[2u].y, fma(_543, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _542));
    float _553 = fma(_544, gl_ObjectToWorldEXT[2u].z, fma(_543, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _542));
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _556 = _477 - _401;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = (((_301 * hit._m0.x) + (_242 * _480)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _567 = (((_302 * hit._m0.x) + (_243 * _480)) + (_361 * hit._m0.y)) * 0.00048828125;
    float _571 = (((float(_200) * _480) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _574 = (((float(_201) * _480) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = (((float(_202) * _480) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _578 = _571 * 0.0078740157186985015869140625;
    float _580 = _574 * 0.0078740157186985015869140625;
    float _581 = _577 * 0.0078740157186985015869140625;
    float _594 = ((((float(_212 & 255u) * _480) + (-127.0)) + (float(_276 & 255u) * hit._m0.x)) + (float(_335 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_212 >> 8u) & 255u) * _480) + (-127.0)) + (float((_276 >> 8u) & 255u) * hit._m0.x)) + (float((_335 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float((_212 >> 16u) & 255u) * _480) + (-127.0)) + (float((_276 >> 16u) & 255u) * hit._m0.x)) + (float((_335 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float(_212 >> 24u) * _480) + (-127.0)) + (float(_276 >> 24u) * hit._m0.x)) + (float(_335 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((_595 * _581) - (_596 * _580)) * _597;
    float _608 = ((_596 * _578) - (_594 * _581)) * _597;
    float _609 = ((_594 * _580) - (_595 * _578)) * _597;
    float _613 = inversesqrt(dot(vec3(_607, _608, _609), vec3(_607, _608, _609)));
    uvec2 _634 = uvec2(textureSize(M_AMSN_M0_M1_Edge_snp_0_Texture2D_0, int(0u)));
    bool _639 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _692;
    if (_639)
    {
        float _650 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _656 = (_565 * _550) - (_562 * _553);
        float _659 = (_559 * _553) - (_565 * _547);
        float _662 = (_562 * _547) - (_559 * _550);
        float _689 = ((log2((((float(_634.y) * 0.5) * float(_634.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_659 * _659) + (_662 * _662)) + (_656 * _656)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_650 * gl_WorldRayDirectionEXT.x, _650 * gl_WorldRayDirectionEXT.y, _650 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _692 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    }
    else
    {
        _692 = 0.0;
    }
    vec4 _696 = textureLod(sampler2D(M_AMSN_M0_M1_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _566) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _567) + cbTextureTilingScale._m0[0u].w), _692);
    float _701 = _696.x * cbMtdParam._m0[9u].x;
    float _702 = _696.y * cbMtdParam._m0[9u].y;
    float _703 = _696.z * cbMtdParam._m0[9u].z;
    uvec2 _715 = uvec2(textureSize(M_AMSN_M0_M1_Edge_snp_0_Texture2D_1, int(0u)));
    float _719 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _720 = _719 * gl_WorldRayDirectionEXT.x;
    float _721 = _719 * gl_WorldRayDirectionEXT.y;
    float _722 = _719 * gl_WorldRayDirectionEXT.z;
    float _766;
    if (_639)
    {
        float _732 = (_565 * _550) - (_562 * _553);
        float _735 = (_559 * _553) - (_565 * _547);
        float _738 = (_562 * _547) - (_559 * _550);
        float _764 = ((log2((((float(_715.y) * 0.5) * float(_715.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_735 * _735) + (_738 * _738)) + (_732 * _732)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_720, _721, _722), vec3(_578, _580, _581))));
        _766 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _769 = textureLod(sampler2D(M_AMSN_M0_M1_Edge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _566) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _567) + cbTextureTilingScale._m0[1u].w), _766);
    float _773 = _769.z;
    float _776 = (_769.x * 2.0) + (-1.0);
    float _778 = (_769.y * 2.0) + (-1.0);
    float _779 = dot(vec2(_776, _778), vec2(_776, _778));
    float _1214 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    float _784 = sqrt(1.0 - (isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0))));
    float _787 = fma(_784, _578, fma(_778, _594, (_613 * _607) * _776));
    float _790 = fma(_784, _580, fma(_778, _595, (_613 * _608) * _776));
    float _793 = fma(_784, _581, fma(_778, _596, (_613 * _609) * _776));
    float _797 = inversesqrt(dot(vec3(_787, _790, _793), vec3(_787, _790, _793)));
    float _798 = _797 * _787;
    float _799 = _797 * _790;
    float _800 = _797 * _793;
    float _812 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _813 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _814 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _815 = (-0.0) - _720;
    float _817 = (-0.0) - _721;
    float _818 = (-0.0) - _722;
    float _824 = float(gl_LaunchIDEXT.x);
    float _825 = float(gl_LaunchIDEXT.y);
    float _828 = float(gl_LaunchSizeEXT.x);
    float _842 = fract(fract(sin(dot(vec2(_824 / _828, _825 / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _855 = fract(fract(sin(dot(vec2((_824 + 128.0) / _828, (_825 + 128.0) / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _62._m0 = 1u;
    uvec4 _865 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _866 = _865.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _866, _865.w, _866, vec3(_812, _813, _814), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _975;
    float _976;
    float _977;
    float _978;
    float _979;
    float _980;
    if (_62._m0 == 0u)
    {
        float _887 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_798, _799, _800));
        float _1225 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        float _890 = isnan(1.0) ? _1225 : (isnan(_1225) ? 1.0 : min(_1225, 1.0));
        float _909 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _773) * 0.949999988079071044921875);
        float _910 = _909 * _909;
        float _911 = g_sceneCB._m0[4u].x - _720;
        float _912 = g_sceneCB._m0[4u].y - _721;
        float _913 = g_sceneCB._m0[4u].z - _722;
        float _917 = inversesqrt(dot(vec3(_911, _912, _913), vec3(_911, _912, _913)));
        float _918 = _917 * _911;
        float _919 = _917 * _912;
        float _920 = _917 * _913;
        float _921 = dot(vec3(_798, _799, _800), vec3(g_sceneCB._m0[4u].xyz));
        float _1236 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _924 = isnan(1.0) ? _1236 : (isnan(_1236) ? 1.0 : min(_1236, 1.0));
        float _925 = dot(vec3(_798, _799, _800), vec3(_815, _817, _818));
        float _1247 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _928 = isnan(1.0) ? _1247 : (isnan(_1247) ? 1.0 : min(_1247, 1.0));
        float _929 = dot(vec3(_798, _799, _800), vec3(_918, _919, _920));
        float _1258 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _932 = isnan(1.0) ? _1258 : (isnan(_1258) ? 1.0 : min(_1258, 1.0));
        float _933 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_918, _919, _920));
        float _1269 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _937 = _910 * _910;
        float _941 = ((_932 * _932) * (_937 + (-1.0))) + 1.0;
        float _953 = (exp2(log2(1.0 - (isnan(1.0) ? _1269 : (isnan(_1269) ? 1.0 : min(_1269, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _955 = 1.0 - _910;
        float _966 = (0.5 / (((_928 * ((_924 * _955) + _910)) + 9.9999999392252902907785028219223e-09) + (((_928 * _955) + _910) * _924))) * _924;
        float _1280 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
        float _968 = (isnan(1.0) ? _1280 : (isnan(_1280) ? 1.0 : min(_1280, 1.0))) * (_937 / ((_941 * _941) * 3.141590118408203125));
        _975 = ((_701 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _890;
        _976 = ((_702 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _890;
        _977 = ((_703 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _890;
        _978 = (_953 * g_sceneCB._m0[5u].x) * _968;
        _979 = (_953 * g_sceneCB._m0[5u].y) * _968;
        _980 = (_953 * g_sceneCB._m0[5u].z) * _968;
    }
    else
    {
        _975 = 0.0;
        _976 = 0.0;
        _977 = 0.0;
        _978 = 0.0;
        _979 = 0.0;
        _980 = 0.0;
    }
    bool _982 = abs(_799) < 0.89999997615814208984375;
    float _984 = float(_982);
    float _985 = _982 ? 0.0 : 1.0;
    float _988 = (_984 * _800) - (_985 * _799);
    float _989 = _985 * _798;
    float _991 = (-0.0) - (_798 * _984);
    float _995 = inversesqrt(dot(vec3(_988, _989, _991), vec3(_988, _989, _991)));
    float _996 = _988 * _995;
    float _997 = _989 * _995;
    float _998 = _995 * _991;
    float _1001 = (_997 * _800) - (_998 * _799);
    float _1004 = (_998 * _798) - (_996 * _800);
    float _1007 = (_996 * _799) - (_997 * _798);
    float _1009;
    float _1017;
    float _1008 = 0.0;
    uint _1010 = 0u;
    float _1014;
    bool _1016;
    for (;;)
    {
        _1014 = (float(_1010) + _842) * 0.03125;
        _1016 = _1010 == 0u;
        float frontier_phi_31_pred;
        if (_1016)
        {
            frontier_phi_31_pred = 0.0;
        }
        else
        {
            float _1151;
            float _1152;
            uint _1154;
            _1151 = 0.0;
            _1152 = 0.5;
            _1154 = _1010;
            float _1018;
            for (;;)
            {
                _1018 = ((_1154 & 1u) != 0u) ? (_1152 + _1151) : _1151;
                uint _1155 = _1154 >> 1u;
                if (_1155 == 0u)
                {
                    break;
                }
                else
                {
                    _1151 = _1018;
                    _1152 *= 0.5;
                    _1154 = _1155;
                }
            }
            frontier_phi_31_pred = _1018;
        }
        _1017 = frontier_phi_31_pred;
        float _1019 = _1017 + _855;
        float _1023 = sqrt(_1014);
        float _1024 = ((_1019 > 1.0) ? (_1019 + (-1.0)) : _1019) * 6.283185482025146484375;
        float _1027 = cos(_1024) * _1023;
        float _1029 = sin(_1024) * _1023;
        float _1031 = sqrt(1.0 - _1014);
        float _1044 = ((_1031 * _798) + (_1027 * _1001)) + (_1029 * _996);
        float _1045 = ((_1031 * _799) + (_1027 * _1004)) + (_1029 * _997);
        float _1046 = ((_1031 * _800) + (_1027 * _1007)) + (_1029 * _998);
        _61._m0 = 1u;
        uvec4 _1050 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1051 = _1050.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1051, _1050.w, _1051, vec3(_812, _813, _814), 9.9999997473787516355514526367188e-05, vec3(_1044, _1045, _1046), 10000.0, 1);
        float _1057 = dot(vec3(_798, _799, _800), vec3(_1044, _1045, _1046));
        float _1291 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1060 = isnan(1.0) ? _1291 : (isnan(_1291) ? 1.0 : min(_1291, 1.0));
        _1009 = ((float(_61._m0 == 0u) * _1060) / (_1060 * 0.3183098733425140380859375)) + _1008;
        uint _1011 = _1010 + 1u;
        if (_1011 == 32u)
        {
            break;
        }
        else
        {
            _1008 = _1009;
            _1010 = _1011;
            continue;
        }
    }
    float _1068 = _1009 * 0.009947183541953563690185546875;
    float _1073 = dot(vec3(_720, _721, _722), vec3(_798, _799, _800)) * 2.0;
    vec4 _1087 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_720 - (_1073 * _798), _721 - (_1073 * _799), _722 - (_1073 * _800)), 4.0 - (_773 * 4.0));
    float _1092 = dot(vec3(_815, _817, _818), vec3(_798, _799, _800));
    float _1302 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    float _1101 = (exp2(log2(1.0 - (isnan(1.0) ? _1302 : (isnan(_1302) ? 1.0 : min(_1302, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1107 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_798, _799, _800), 0.0);
    float _1118 = (_978 + _975) + (((_1107.x * _701) + (_1101 * _1087.x)) * _1068);
    float _1122 = (_979 + _976) + (((_1107.y * _702) + (_1101 * _1087.y)) * _1068);
    float _1126 = (_980 + _977) + (((_1107.z * _703) + (_1101 * _1087.z)) * _1068);
    float _1313 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    float _1324 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
    float _1335 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
    bool _1134 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1145;
    _1145.x = _1134 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0)));
    _1145.y = _1134 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0)));
    _1145.z = _1134 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1335 : (isnan(_1335) ? 1.0 : min(_1335, 1.0)));
    payload._m0 = _1145;
}


