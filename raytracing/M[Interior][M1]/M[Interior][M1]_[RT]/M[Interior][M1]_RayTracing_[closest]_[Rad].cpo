#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _43
{
    vec3 _m0;
};

struct _47
{
    vec2 _m0;
};

struct _50
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _43 payload;
hitAttributeEXT _47 hit;
layout(location = 1) rayPayloadEXT _50 _52;
layout(location = 2) rayPayloadEXT _50 _53;

float _483;
vec3 _766;

void main()
{
    uvec4 _67 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _68 = _67.y;
    uint _110;
    uint _112;
    uint _113;
    if (_67.x == 0u)
    {
        uint _76 = (_68 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _87 = uvec3(texelFetch(l_geomIndexBuffer, int(_76)).x, texelFetch(l_geomIndexBuffer, int(_76 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_76 + 2u)).x);
        _110 = _87.x;
        _112 = _87.y;
        _113 = _87.z;
    }
    else
    {
        uint _91 = uint(gl_PrimitiveID) * 6u;
        uint _93 = _91 & 4294967292u;
        uint _96 = (_68 + _93) >> 2u;
        uvec2 _103 = uvec2(texelFetch(l_geomIndexBuffer, int(_96)).x, texelFetch(l_geomIndexBuffer, int(_96 + 1u)).x);
        uint _104 = _103.x;
        uint _105 = _103.y;
        uint _107 = _104 >> 16u;
        uint _108 = _105 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_93 == _91)
        {
            frontier_phi_3_2_ladder = _108;
            frontier_phi_3_2_ladder_1 = _107;
            frontier_phi_3_2_ladder_2 = _104 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _105 >> 16u;
            frontier_phi_3_2_ladder_1 = _108;
            frontier_phi_3_2_ladder_2 = _107;
        }
        _110 = frontier_phi_3_2_ladder_2;
        _112 = frontier_phi_3_2_ladder_1;
        _113 = frontier_phi_3_2_ladder;
    }
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _118 = _117.x;
    uint _119 = _117.z;
    bool _120 = _119 != 0u;
    bool _122 = _67.w == 0u;
    bool _123 = _120 || _122;
    uint _124 = _118 * _110;
    uint _125 = _124 + 12u;
    uint _149;
    uint _150;
    uint _151;
    uint _152;
    if (_123)
    {
        uvec4 _128 = texelFetch(l_geomAttrib_0, int(_125 >> 2u));
        uint _129 = _128.x;
        _149 = _129 & 255u;
        _150 = (_129 >> 8u) & 255u;
        _151 = (_129 >> 16u) & 255u;
        _152 = 16u;
    }
    else
    {
        uint _137 = _125 >> 2u;
        uvec2 _143 = uvec2(texelFetch(l_geomAttrib_0, int(_137)).x, texelFetch(l_geomAttrib_0, int(_137 + 1u)).x);
        uint _144 = _143.x;
        _149 = _144 & 65535u;
        _150 = _144 >> 16u;
        _151 = _143.y & 65535u;
        _152 = 20u;
    }
    uvec4 _160 = texelFetch(l_geomAttrib_0, int((_152 + _124) >> 2u));
    uint _161 = _160.x;
    bool _174 = _119 == 0u;
    uint _175;
    if (_174)
    {
        _175 = _152 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_122)
        {
            frontier_phi_9_10_ladder = _152 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _152 + 12u;
        }
        _175 = frontier_phi_9_10_ladder;
    }
    uvec4 _183 = texelFetch(l_geomAttrib_0, int(((_124 + 4u) + (_120 ? (_175 + 4u) : _175)) >> 2u));
    uint _184 = _183.x;
    uint _190 = _118 * _112;
    uint _191 = _190 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_123)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _194 = _193.x;
        _212 = _194 & 255u;
        _213 = (_194 >> 8u) & 255u;
        _214 = (_194 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _191 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _221 = texelFetch(l_geomAttrib_0, int((_215 + _190) >> 2u));
    uint _222 = _221.x;
    uint _234;
    if (_174)
    {
        _234 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_122)
        {
            frontier_phi_16_17_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _215 + 12u;
        }
        _234 = frontier_phi_16_17_ladder;
    }
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_190 + 4u) + (_120 ? (_234 + 4u) : _234)) >> 2u));
    uint _243 = _242.x;
    uint _249 = _118 * _113;
    uint _250 = _249 + 12u;
    uint _271;
    uint _272;
    uint _273;
    uint _274;
    if (_123)
    {
        uvec4 _252 = texelFetch(l_geomAttrib_0, int(_250 >> 2u));
        uint _253 = _252.x;
        _271 = _253 & 255u;
        _272 = (_253 >> 8u) & 255u;
        _273 = (_253 >> 16u) & 255u;
        _274 = 16u;
    }
    else
    {
        uint _259 = _250 >> 2u;
        uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
        uint _266 = _265.x;
        _271 = _266 & 65535u;
        _272 = _266 >> 16u;
        _273 = _265.y & 65535u;
        _274 = 20u;
    }
    uvec4 _280 = texelFetch(l_geomAttrib_0, int((_274 + _249) >> 2u));
    uint _281 = _280.x;
    uint _293;
    if (_174)
    {
        _293 = _274 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_122)
        {
            frontier_phi_23_24_ladder = _274 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _274 + 12u;
        }
        _293 = frontier_phi_23_24_ladder;
    }
    uvec4 _301 = texelFetch(l_geomAttrib_0, int(((_249 + 4u) + (_120 ? (_293 + 4u) : _293)) >> 2u));
    uint _302 = _301.x;
    float _310 = (1.0 - hit._m0.x) - hit._m0.y;
    float _348 = (((float(_149) * _310) + (-127.0)) + (float(_212) * hit._m0.x)) + (float(_271) * hit._m0.y);
    float _351 = (((float(_150) * _310) + (-127.0)) + (float(_213) * hit._m0.x)) + (float(_272) * hit._m0.y);
    float _354 = (((float(_151) * _310) + (-127.0)) + (float(_214) * hit._m0.x)) + (float(_273) * hit._m0.y);
    float _355 = _348 * 0.0078740157186985015869140625;
    float _357 = _351 * 0.0078740157186985015869140625;
    float _358 = _354 * 0.0078740157186985015869140625;
    float _371 = ((((float(_161 & 255u) * _310) + (-127.0)) + (float(_222 & 255u) * hit._m0.x)) + (float(_281 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _372 = ((((float((_161 >> 8u) & 255u) * _310) + (-127.0)) + (float((_222 >> 8u) & 255u) * hit._m0.x)) + (float((_281 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _373 = ((((float((_161 >> 16u) & 255u) * _310) + (-127.0)) + (float((_222 >> 16u) & 255u) * hit._m0.x)) + (float((_281 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _374 = ((((float(_161 >> 24u) * _310) + (-127.0)) + (float(_222 >> 24u) * hit._m0.x)) + (float(_281 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _384 = ((_372 * _358) - (_373 * _357)) * _374;
    float _385 = ((_373 * _355) - (_371 * _358)) * _374;
    float _386 = ((_371 * _357) - (_372 * _355)) * _374;
    float _391 = inversesqrt(dot(vec3(_384, _385, _386), vec3(_384, _385, _386)));
    float _392 = _391 * _384;
    float _393 = _391 * _385;
    float _394 = _391 * _386;
    float _418 = inversesqrt(dot(vec3(_392, _393, _394), vec3(_392, _393, _394)));
    float _425 = inversesqrt(dot(vec3(_371, _372, _373), vec3(_371, _372, _373)));
    float _448 = (-0.0) - dot(vec3(cbMtdParam._m0[23u].xyz), vec3(_418 * _392, _418 * _393, _418 * _394));
    float _449 = (-0.0) - dot(vec3(cbMtdParam._m0[23u].xyz), vec3(_425 * _371, _425 * _372, _425 * _373));
    float _450 = (-0.0) - dot(vec3(cbMtdParam._m0[23u].xyz), vec3((-0.0) - _355, (-0.0) - _357, (-0.0) - _358));
    float _454 = inversesqrt(dot(vec3(_448, _449, _450), vec3(_448, _449, _450)));
    float _455 = _454 * _450;
    float _457 = (cbMtdParam._m0[19u].w * _448) * _454;
    float _459 = (cbMtdParam._m0[20u].x * _449) * _454;
    float _462 = fract(((((float(int(uint(int(_243 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_184 << 16u) >> int(16u)))) * _310)) + (float(int(uint(int(_302 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[19u].w);
    float _463 = fract(((((float(int(uint(int(_243) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_184) >> int(16u)))) * _310)) + (float(int(uint(int(_302) >> int(16u)))) * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[20u].x);
    float _481;
    float _484;
    float _486;
    if (_457 > 0.0)
    {
        float _467 = (1.0 - _462) / _457;
        _481 = _467;
        _484 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_467 * _455)) * 0.16666667163372039794921875;
        _486 = (fract((_467 * _459) + _463) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_29_26_ladder;
        float frontier_phi_29_26_ladder_1;
        float frontier_phi_29_26_ladder_2;
        if (_457 < 0.0)
        {
            float _482 = ((-0.0) - _462) / _457;
            frontier_phi_29_26_ladder = (fract((_482 * _459) + _463) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_29_26_ladder_1 = (fract(_482 * _455) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_29_26_ladder_2 = _482;
        }
        else
        {
            frontier_phi_29_26_ladder = 0.0;
            frontier_phi_29_26_ladder_1 = 0.0;
            frontier_phi_29_26_ladder_2 = _483;
        }
        _481 = frontier_phi_29_26_ladder_2;
        _484 = frontier_phi_29_26_ladder_1;
        _486 = frontier_phi_29_26_ladder;
    }
    float _512;
    float _514;
    float _516;
    if (_459 > 0.0)
    {
        float _499 = (1.0 - _463) / _459;
        float frontier_phi_34_31_ladder;
        float frontier_phi_34_31_ladder_1;
        float frontier_phi_34_31_ladder_2;
        if (_499 < _481)
        {
            frontier_phi_34_31_ladder = (fract(_499 * _455) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_34_31_ladder_1 = (fract((_499 * _457) + _462) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_34_31_ladder_2 = _499;
        }
        else
        {
            frontier_phi_34_31_ladder = _486;
            frontier_phi_34_31_ladder_1 = _484;
            frontier_phi_34_31_ladder_2 = _481;
        }
        _512 = frontier_phi_34_31_ladder_2;
        _514 = frontier_phi_34_31_ladder_1;
        _516 = frontier_phi_34_31_ladder;
    }
    else
    {
        float frontier_phi_34_32_ladder;
        float frontier_phi_34_32_ladder_1;
        float frontier_phi_34_32_ladder_2;
        if (_459 < 0.0)
        {
            float _513 = ((-0.0) - _463) / _459;
            float frontier_phi_34_32_ladder_35_ladder;
            float frontier_phi_34_32_ladder_35_ladder_1;
            float frontier_phi_34_32_ladder_35_ladder_2;
            if (_513 < _481)
            {
                frontier_phi_34_32_ladder_35_ladder = fract(_513 * _455) * 0.16666667163372039794921875;
                frontier_phi_34_32_ladder_35_ladder_1 = (fract((_513 * _457) + _462) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_34_32_ladder_35_ladder_2 = _513;
            }
            else
            {
                frontier_phi_34_32_ladder_35_ladder = _486;
                frontier_phi_34_32_ladder_35_ladder_1 = _484;
                frontier_phi_34_32_ladder_35_ladder_2 = _481;
            }
            frontier_phi_34_32_ladder = frontier_phi_34_32_ladder_35_ladder;
            frontier_phi_34_32_ladder_1 = frontier_phi_34_32_ladder_35_ladder_1;
            frontier_phi_34_32_ladder_2 = frontier_phi_34_32_ladder_35_ladder_2;
        }
        else
        {
            frontier_phi_34_32_ladder = _486;
            frontier_phi_34_32_ladder_1 = _484;
            frontier_phi_34_32_ladder_2 = _481;
        }
        _512 = frontier_phi_34_32_ladder_2;
        _514 = frontier_phi_34_32_ladder_1;
        _516 = frontier_phi_34_32_ladder;
    }
    float _520 = (_455 > 0.0) ? (cbMtdParam._m0[16u].w / _455) : 5000.0;
    float _533;
    float _534;
    if (_520 < _512)
    {
        _533 = ((_462 + cbMtdParam._m0[17u].x) + (_520 * _457)) * 0.16666667163372039794921875;
        _534 = (((_520 * _459) + _463) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _533 = _514;
        _534 = _516;
    }
    vec4 _539 = textureLod(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_533, _534), 0.0);
    float _544 = _539.x * cbMtdParam._m0[13u].x;
    float _545 = _539.y * cbMtdParam._m0[13u].y;
    float _546 = _539.z * cbMtdParam._m0[13u].z;
    float _568 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _569 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _570 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _574 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _575 = _574 * gl_WorldRayDirectionEXT.x;
    float _576 = _574 * gl_WorldRayDirectionEXT.y;
    float _577 = _574 * gl_WorldRayDirectionEXT.z;
    float _578 = (-0.0) - _575;
    float _579 = (-0.0) - _576;
    float _580 = (-0.0) - _577;
    _53._m0 = 1u;
    uvec4 _590 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _591 = _590.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _591, _590.w, _591, vec3(_568, _569, _570), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _677;
    float _678;
    float _679;
    float _680;
    float _681;
    float _682;
    if (_53._m0 == 0u)
    {
        float _618 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(0.0));
        float _841 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
        float _621 = isnan(1.0) ? _841 : (isnan(_841) ? 1.0 : min(_841, 1.0));
        float _632 = g_sceneCB._m0[4u].x - _575;
        float _633 = g_sceneCB._m0[4u].y - _576;
        float _634 = g_sceneCB._m0[4u].z - _577;
        float _638 = inversesqrt(dot(vec3(_632, _633, _634), vec3(_632, _633, _634)));
        float _642 = dot(vec3(0.0), vec3(g_sceneCB._m0[4u].xyz));
        float _852 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _645 = isnan(1.0) ? _852 : (isnan(_852) ? 1.0 : min(_852, 1.0));
        float _646 = dot(vec3(0.0), vec3(_578, _579, _580));
        float _863 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
        float _650 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_632 * _638, _633 * _638, _634 * _638));
        float _874 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
        float _661 = (exp2(log2(1.0 - (isnan(1.0) ? _874 : (isnan(_874) ? 1.0 : min(_874, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _667 = (0.5 / ((_645 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _863 : (isnan(_863) ? 1.0 : min(_863, 1.0))))) * _645;
        float _885 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _669 = (isnan(1.0) ? _885 : (isnan(_885) ? 1.0 : min(_885, 1.0))) * 0.31831014156341552734375;
        _677 = ((_544 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _621;
        _678 = ((_545 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _621;
        _679 = ((_546 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _621;
        _680 = (_661 * g_sceneCB._m0[5u].x) * _669;
        _681 = (_661 * g_sceneCB._m0[5u].y) * _669;
        _682 = (_661 * g_sceneCB._m0[5u].z) * _669;
    }
    else
    {
        _677 = 0.0;
        _678 = 0.0;
        _679 = 0.0;
        _680 = 0.0;
        _681 = 0.0;
        _682 = 0.0;
    }
    float _683;
    uint _685;
    _683 = 0.0;
    _685 = 0u;
    float _684;
    for (;;)
    {
        _52._m0 = 1u;
        uvec4 _690 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _691 = _690.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _691, _690.w, _691, vec3(_568, _569, _570), 9.9999997473787516355514526367188e-05, vec3(0.0), 10000.0, 1);
        _684 = _683 + uintBitsToFloat(0x7fc00000u /* nan */);
        uint _686 = _685 + 1u;
        if (_686 == 32u)
        {
            break;
        }
        else
        {
            _683 = _684;
            _685 = _686;
        }
    }
    float _699 = _684 * 0.009947183541953563690185546875;
    vec4 _706 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_575, _576, _577), 4.0);
    float _711 = dot(vec3(_578, _579, _580), vec3(0.0));
    float _896 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _720 = (exp2(log2(1.0 - (isnan(1.0) ? _896 : (isnan(_896) ? 1.0 : min(_896, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _726 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(0.0), 0.0);
    float _737 = (_680 + _677) + (((_726.x * _544) + (_720 * _706.x)) * _699);
    float _741 = (_681 + _678) + (((_726.y * _545) + (_720 * _706.y)) * _699);
    float _745 = (_682 + _679) + (((_726.z * _546) + (_720 * _706.z)) * _699);
    float _907 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _918 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _929 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    bool _754 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _765;
    _765.x = _754 ? ((_348 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _907 : (isnan(_907) ? 1.0 : min(_907, 1.0)));
    _765.y = _754 ? ((_351 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0)));
    _765.z = _754 ? ((_354 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0)));
    payload._m0 = _765;
}


