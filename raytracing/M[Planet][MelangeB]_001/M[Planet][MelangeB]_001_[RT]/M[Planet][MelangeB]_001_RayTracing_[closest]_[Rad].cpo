#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[36];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Planet_MelangeB_001_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1840;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _181 * _173;
    uint _184 = _182 >> 2u;
    uvec3 _193 = uvec3(texelFetch(l_geomAttrib_0, int(_184)).x, texelFetch(l_geomAttrib_0, int(_184 + 1u)).x, texelFetch(l_geomAttrib_0, int(_184 + 2u)).x);
    uint _200 = _180.z;
    bool _201 = _200 != 0u;
    bool _203 = _132.w == 0u;
    bool _204 = _201 || _203;
    uint _205 = _182 + 12u;
    uint _228;
    uint _229;
    uint _230;
    uint _231;
    if (_204)
    {
        uvec4 _207 = texelFetch(l_geomAttrib_0, int(_205 >> 2u));
        uint _208 = _207.x;
        _228 = _208 & 255u;
        _229 = (_208 >> 8u) & 255u;
        _230 = (_208 >> 16u) & 255u;
        _231 = 20u;
    }
    else
    {
        uint _216 = _205 >> 2u;
        uvec2 _222 = uvec2(texelFetch(l_geomAttrib_0, int(_216)).x, texelFetch(l_geomAttrib_0, int(_216 + 1u)).x);
        uint _223 = _222.x;
        _228 = _223 & 65535u;
        _229 = _223 >> 16u;
        _230 = _222.y & 65535u;
        _231 = 24u;
    }
    bool _237 = _200 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _231;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_203)
        {
            frontier_phi_9_10_ladder = _231 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _231 + 8u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_182 + 4u) + (_201 ? (_238 + 4u) : _238)) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _254 = _181 * _175;
    uint _255 = _254 >> 2u;
    uvec3 _264 = uvec3(texelFetch(l_geomAttrib_0, int(_255)).x, texelFetch(l_geomAttrib_0, int(_255 + 1u)).x, texelFetch(l_geomAttrib_0, int(_255 + 2u)).x);
    uint _271 = _254 + 12u;
    uint _292;
    uint _293;
    uint _294;
    uint _295;
    if (_204)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_271 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
        _295 = 20u;
    }
    else
    {
        uint _280 = _271 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
        _295 = 24u;
    }
    uint _299;
    if (_237)
    {
        _299 = _295;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_203)
        {
            frontier_phi_16_17_ladder = _295 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _295 + 8u;
        }
        _299 = frontier_phi_16_17_ladder;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + (_201 ? (_299 + 4u) : _299)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    uint _314 = _181 * _176;
    uint _315 = _314 >> 2u;
    uvec3 _324 = uvec3(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x, texelFetch(l_geomAttrib_0, int(_315 + 2u)).x);
    uint _331 = _314 + 12u;
    uint _352;
    uint _353;
    uint _354;
    uint _355;
    if (_204)
    {
        uvec4 _333 = texelFetch(l_geomAttrib_0, int(_331 >> 2u));
        uint _334 = _333.x;
        _352 = _334 & 255u;
        _353 = (_334 >> 8u) & 255u;
        _354 = (_334 >> 16u) & 255u;
        _355 = 20u;
    }
    else
    {
        uint _340 = _331 >> 2u;
        uvec2 _346 = uvec2(texelFetch(l_geomAttrib_0, int(_340)).x, texelFetch(l_geomAttrib_0, int(_340 + 1u)).x);
        uint _347 = _346.x;
        _352 = _347 & 65535u;
        _353 = _347 >> 16u;
        _354 = _346.y & 65535u;
        _355 = 24u;
    }
    uint _359;
    if (_237)
    {
        _359 = _355;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_203)
        {
            frontier_phi_23_24_ladder = _355 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _355 + 8u;
        }
        _359 = frontier_phi_23_24_ladder;
    }
    uvec4 _367 = texelFetch(l_geomAttrib_0, int(((_314 + 4u) + (_201 ? (_359 + 4u) : _359)) >> 2u));
    uint _368 = _367.x;
    float _372 = float(int(uint(int(_368 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_368) >> int(16u))));
    bool _375 = _132.z == 0u;
    float _411;
    float _412;
    float _413;
    if (_375)
    {
        uint _378 = _173 * 3u;
        uvec3 _387 = uvec3(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_378 + 2u)).x);
        _411 = uintBitsToFloat(_387.x);
        _412 = uintBitsToFloat(_387.y);
        _413 = uintBitsToFloat(_387.z);
    }
    else
    {
        uint _395 = _173 * 2u;
        uvec2 _401 = uvec2(texelFetch(l_geomPositionBuffer, int(_395)).x, texelFetch(l_geomPositionBuffer, int(_395 + 1u)).x);
        uint _402 = _401.x;
        _411 = unpackHalf2x16(_402).x;
        _412 = unpackHalf2x16(_402 >> 16u).x;
        _413 = unpackHalf2x16(_401.y).x;
    }
    float _449;
    float _450;
    float _451;
    if (_375)
    {
        uint _416 = _175 * 3u;
        uvec3 _425 = uvec3(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_416 + 2u)).x);
        _449 = uintBitsToFloat(_425.x);
        _450 = uintBitsToFloat(_425.y);
        _451 = uintBitsToFloat(_425.z);
    }
    else
    {
        uint _433 = _175 * 2u;
        uvec2 _439 = uvec2(texelFetch(l_geomPositionBuffer, int(_433)).x, texelFetch(l_geomPositionBuffer, int(_433 + 1u)).x);
        uint _440 = _439.x;
        _449 = unpackHalf2x16(_440).x;
        _450 = unpackHalf2x16(_440 >> 16u).x;
        _451 = unpackHalf2x16(_439.y).x;
    }
    float _487;
    float _488;
    float _489;
    if (_375)
    {
        uint _454 = _176 * 3u;
        uvec3 _463 = uvec3(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_454 + 2u)).x);
        _487 = uintBitsToFloat(_463.x);
        _488 = uintBitsToFloat(_463.y);
        _489 = uintBitsToFloat(_463.z);
    }
    else
    {
        uint _471 = _176 * 2u;
        uvec2 _477 = uvec2(texelFetch(l_geomPositionBuffer, int(_471)).x, texelFetch(l_geomPositionBuffer, int(_471 + 1u)).x);
        uint _478 = _477.x;
        _487 = unpackHalf2x16(_478).x;
        _488 = unpackHalf2x16(_478 >> 16u).x;
        _489 = unpackHalf2x16(_477.y).x;
    }
    float _492 = (1.0 - hit._m0.x) - hit._m0.y;
    float _505 = ((uintBitsToFloat(_264.x) * hit._m0.x) + (uintBitsToFloat(_193.x) * _492)) + (uintBitsToFloat(_324.x) * hit._m0.y);
    float _506 = ((uintBitsToFloat(_264.y) * hit._m0.x) + (uintBitsToFloat(_193.y) * _492)) + (uintBitsToFloat(_324.y) * hit._m0.y);
    float _507 = ((uintBitsToFloat(_264.z) * hit._m0.x) + (uintBitsToFloat(_193.z) * _492)) + (uintBitsToFloat(_324.z) * hit._m0.y);
    float _529 = (_312 - _252) * 0.00048828125;
    float _531 = (_313 - _253) * 0.00048828125;
    float _534 = (_372 - _252) * 0.00048828125;
    float _535 = (_373 - _253) * 0.00048828125;
    float _557 = _449 - _411;
    float _558 = _450 - _412;
    float _559 = _451 - _413;
    float _562 = fma(_559, gl_ObjectToWorldEXT[2u].x, fma(_558, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _557));
    float _565 = fma(_559, gl_ObjectToWorldEXT[2u].y, fma(_558, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _557));
    float _568 = fma(_559, gl_ObjectToWorldEXT[2u].z, fma(_558, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _557));
    float _569 = _487 - _411;
    float _570 = _488 - _412;
    float _571 = _489 - _413;
    float _574 = fma(_571, gl_ObjectToWorldEXT[2u].x, fma(_570, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _569));
    float _577 = fma(_571, gl_ObjectToWorldEXT[2u].y, fma(_570, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _569));
    float _580 = fma(_571, gl_ObjectToWorldEXT[2u].z, fma(_570, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _569));
    float _581 = (((_312 * hit._m0.x) + (_252 * _492)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _582 = (((_313 * hit._m0.x) + (_253 * _492)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _586 = (((float(_228) * _492) + (-127.0)) + (float(_292) * hit._m0.x)) + (float(_352) * hit._m0.y);
    float _589 = (((float(_229) * _492) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_353) * hit._m0.y);
    float _592 = (((float(_230) * _492) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _593 = _586 * 0.0078740157186985015869140625;
    float _595 = _589 * 0.0078740157186985015869140625;
    float _596 = _592 * 0.0078740157186985015869140625;
    float _611 = cbMtdParam._m0[21u].y * cbPerFrame._m0[22u].x;
    uvec2 _629 = uvec2(textureSize(M_Planet_MelangeB_001_snp_0_Texture2D_1, int(0u)));
    bool _634 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _687;
    if (_634)
    {
        float _645 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _651 = (_580 * _565) - (_577 * _568);
        float _654 = (_574 * _568) - (_580 * _562);
        float _657 = (_577 * _562) - (_574 * _565);
        float _684 = ((log2((((float(_629.y) * 0.5) * float(_629.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_654 * _654) + (_657 * _657)) + (_651 * _651)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_645 * gl_WorldRayDirectionEXT.x, _645 * gl_WorldRayDirectionEXT.y, _645 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _687 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    }
    else
    {
        _687 = 0.0;
    }
    vec4 _691 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[1u].x * cbMtdParam._m0[32u].x) * ((_611 * cbMtdParam._m0[31u].z) + _581)) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[32u].y) * ((_611 * cbMtdParam._m0[31u].w) + _582)) + cbTextureTilingScale._m0[1u].w), _687);
    float _693 = _691.x;
    uvec2 _729 = uvec2(textureSize(M_Planet_MelangeB_001_snp_0_Texture2D_4, int(0u)));
    float _780;
    if (_634)
    {
        float _740 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _746 = (_580 * _565) - (_577 * _568);
        float _749 = (_574 * _568) - (_580 * _562);
        float _752 = (_577 * _562) - (_574 * _565);
        float _778 = ((log2((((float(_729.y) * 0.5) * float(_729.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_749 * _749) + (_752 * _752)) + (_746 * _746)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_740 * gl_WorldRayDirectionEXT.x, _740 * gl_WorldRayDirectionEXT.y, _740 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _780 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    }
    else
    {
        _780 = 0.0;
    }
    vec4 _783 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((((cbMtdParam._m0[25u].z * _693) + _581) + (cbMtdParam._m0[26u].x * _611)) + cbMtdParam._m0[27u].x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((((cbMtdParam._m0[25u].w * _693) + _582) + (cbMtdParam._m0[26u].y * _611)) + cbMtdParam._m0[27u].y) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _780);
    float _788 = _783.w;
    uvec2 _825 = uvec2(textureSize(M_Planet_MelangeB_001_snp_0_Texture2D_0, int(0u)));
    float _876;
    if (_634)
    {
        float _836 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _842 = (_580 * _565) - (_577 * _568);
        float _845 = (_574 * _568) - (_580 * _562);
        float _848 = (_577 * _562) - (_574 * _565);
        float _874 = ((log2((((float(_825.y) * 0.5) * float(_825.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_845 * _845) + (_848 * _848)) + (_842 * _842)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_836 * gl_WorldRayDirectionEXT.x, _836 * gl_WorldRayDirectionEXT.y, _836 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _876 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    }
    else
    {
        _876 = 0.0;
    }
    vec4 _879 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[32u].z + _581) * cbMtdParam._m0[30u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[32u].w + _582) * cbMtdParam._m0[30u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _876);
    float _889 = (_879.x + (-0.5)) * cbMtdParam._m0[20u].y;
    float _890 = (_879.y + (-0.5)) * cbMtdParam._m0[20u].y;
    float _894 = ((((cbMtdParam._m0[31u].x * _693) + _581) + (cbMtdParam._m0[26u].z * _611)) + cbMtdParam._m0[25u].x) + _889;
    float _898 = ((((cbMtdParam._m0[31u].y * _693) + _582) + (cbMtdParam._m0[26u].w * _611)) + cbMtdParam._m0[25u].y) + _890;
    uvec2 _922 = uvec2(textureSize(M_Planet_MelangeB_001_snp_0_Texture2D_6, int(0u)));
    float _973;
    if (_634)
    {
        float _933 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _939 = (_580 * _565) - (_577 * _568);
        float _942 = (_574 * _568) - (_580 * _562);
        float _945 = (_577 * _562) - (_574 * _565);
        float _971 = ((log2((((float(_922.y) * 0.5) * float(_922.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_942 * _942) + (_945 * _945)) + (_939 * _939)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_933 * gl_WorldRayDirectionEXT.x, _933 * gl_WorldRayDirectionEXT.y, _933 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _973 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    }
    else
    {
        _973 = 0.0;
    }
    vec4 _975 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _581) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _582) + cbTextureTilingScale._m0[6u].w), _973);
    float _977 = _975.w;
    float _1032;
    if (_634)
    {
        float _992 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _998 = (_580 * _565) - (_577 * _568);
        float _1001 = (_574 * _568) - (_580 * _562);
        float _1004 = (_577 * _562) - (_574 * _565);
        float _1030 = ((log2((((float(_922.y) * 0.5) * float(_922.x)) * abs((_535 * _529) - (_534 * _531))) / (sqrt(((_1001 * _1001) + (_1004 * _1004)) + (_998 * _998)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_992 * gl_WorldRayDirectionEXT.x, _992 * gl_WorldRayDirectionEXT.y, _992 * gl_WorldRayDirectionEXT.z), vec3(_593, _595, _596))));
        _1032 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    }
    else
    {
        _1032 = 0.0;
    }
    vec4 _1034 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_6, SS_WrapLinear), vec2((((cbMtdParam._m0[29u].x + _581) * cbMtdParam._m0[29u].z) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((cbMtdParam._m0[29u].y + _582) * cbMtdParam._m0[29u].w) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _1032);
    float _1051 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y) * cbMtdParam._m0[19u].w;
    float _1057 = (((((((_1034.y + (-0.5)) * cbMtdParam._m0[20u].x) + (-0.5)) * _977) + 0.5) * 0.5) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _1059 = (-0.0) - (cbMtdParam._m0[19u].y * (((((((_1034.x + (-0.5)) * cbMtdParam._m0[20u].x) + (-0.5)) * _977) + 0.5) * 0.5) + (-0.25)));
    float _1061 = fract(_1051);
    float _1063 = fract(_1051 + 0.5);
    float _1064 = _1061 * _1059;
    float _1065 = _1057 * _1061;
    float _1068 = _1063 * _1059;
    float _1069 = _1057 * _1063;
    float _1075 = abs((_1061 * 2.0) + (-1.0));
    vec4 _1092 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_1064 + _894) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_1065 + _898) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1094 = _1092.x;
    float _1095 = _1092.y;
    float _1096 = _1092.z;
    vec4 _1097 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_1068 + _894) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_1069 + _898) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _1130 = (((_889 + _581) + (cbMtdParam._m0[33u].x * _693)) + (cbMtdParam._m0[33u].z * _611)) + cbMtdParam._m0[34u].x;
    float _1134 = (((_890 + _582) + (cbMtdParam._m0[33u].y * _693)) + (cbMtdParam._m0[33u].w * _611)) + cbMtdParam._m0[34u].y;
    vec4 _1155 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_1130 + _1064) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_1134 + _1065) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1157 = _1155.x;
    float _1158 = _1155.y;
    float _1159 = _1155.z;
    float _1160 = _1155.w;
    vec4 _1161 = textureLod(sampler2D(M_Planet_MelangeB_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_1130 + _1068) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_1134 + _1069) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1178 = ((_1161.w - _1160) * _1075) + _1160;
    float _1186 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_593, _595, _596, 0.0)) - cbMtdParam._m0[21u].z;
    float _1977 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
    float _1194 = exp2(log2(1.0 - (isnan(1.0) ? _1977 : (isnan(_1977) ? 1.0 : min(_1977, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[20u].w : (isnan(cbMtdParam._m0[20u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[20u].w, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[19u].z;
    float _1201 = inversesqrt(dot(vec3(_505, _506, _507), vec3(_505, _506, _507)));
    float _1202 = _1201 * _505;
    float _1203 = _1201 * _506;
    float _1204 = _1201 * _507;
    uvec4 _1208 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _1210 = _1208.y != 0u;
    float _1220 = inversesqrt(dot(vec3(cbMtdParam._m0[34u].zw, cbMtdParam._m0[35u].x), vec3(cbMtdParam._m0[34u].zw, cbMtdParam._m0[35u].x)));
    float _1229 = _1210 ? g_sceneCB._m0[4u].x : (_1220 * cbMtdParam._m0[34u].z);
    float _1230 = _1210 ? g_sceneCB._m0[4u].y : (_1220 * cbMtdParam._m0[34u].w);
    float _1231 = _1210 ? g_sceneCB._m0[4u].z : (_1220 * cbMtdParam._m0[35u].x);
    float _1235 = inversesqrt(dot(vec3(_1229, _1230, _1231), vec3(_1229, _1230, _1231)));
    float _1236 = _1229 * _1235;
    float _1237 = _1230 * _1235;
    float _1238 = _1231 * _1235;
    float _1239 = dot(vec4(_1202, _1203, _1204, 0.0), vec4(_1236, _1237, _1238, 0.0));
    float _1993 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    float _1242 = isnan(1.0) ? _1993 : (isnan(_1993) ? 1.0 : min(_1993, 1.0));
    float _1244 = 1.0 - (_1242 * _1242);
    float _1246 = (-0.0) - (_1244 - cbMtdParam._m0[23u].y);
    float _1247 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
    float _1270 = (-0.0) - (_1244 - cbMtdParam._m0[24u].x);
    float _1271 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
    float _1305 = cbMtdParam._m0[9u].z * (((_1097.x - _1094) * _1075) + _1094);
    float _1306 = cbMtdParam._m0[9u].w * (((_1097.y - _1095) * _1075) + _1095);
    float _1307 = cbMtdParam._m0[10u].x * (((_1097.z - _1096) * _1075) + _1096);
    float _1322 = (((cbMtdParam._m0[16u].z * (((_1161.x - _1157) * _1075) + _1157)) - _1305) * _1178) + _1305;
    float _1323 = (((cbMtdParam._m0[16u].w * (((_1161.y - _1158) * _1075) + _1158)) - _1306) * _1178) + _1306;
    float _1324 = (((cbMtdParam._m0[17u].x * (((_1161.z - _1159) * _1075) + _1159)) - _1307) * _1178) + _1307;
    float _1347 = cbMtdParam._m0[14u].z - (cbMtdParam._m0[23u].x * cbMtdParam._m0[14u].z);
    float _1348 = cbMtdParam._m0[14u].w - (cbMtdParam._m0[23u].x * cbMtdParam._m0[14u].w);
    float _1349 = cbMtdParam._m0[15u].x - (cbMtdParam._m0[23u].x * cbMtdParam._m0[15u].x);
    float _1360 = inversesqrt(dot(vec3(_1236, _1237, _1238), vec3(_1236, _1237, _1238)));
    float _1375 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1202, _1203, _1204, 0.0), vec4(_1360 * _1236, _1360 * _1237, _1360 * _1238, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2024 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
    float _1377 = isnan(1.0) ? _2024 : (isnan(_2024) ? 1.0 : min(_2024, 1.0));
    float _1383 = exp2(log2(_1377 * 6.5) * 7.0);
    float _2035 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
    float _1385 = (isnan(1.0) ? _2035 : (isnan(_2035) ? 1.0 : min(_2035, 1.0))) + _1377;
    float _2046 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
    float _1386 = isnan(1.0) ? _2046 : (isnan(_2046) ? 1.0 : min(_2046, 1.0));
    float _1398 = ((_1386 * ((cbMtdParam._m0[13u].z - (cbMtdParam._m0[13u].z * cbMtdParam._m0[23u].x)) - _1347)) + _1347) * ((((cbMtdParam._m0[17u].z * _783.x) - _1322) * _788) + _1322);
    float _1399 = ((_1386 * ((cbMtdParam._m0[13u].w - _1348) - (cbMtdParam._m0[13u].w * cbMtdParam._m0[23u].x))) + _1348) * ((((cbMtdParam._m0[17u].w * _783.y) - _1323) * _788) + _1323);
    float _1400 = ((_1386 * ((cbMtdParam._m0[14u].x - _1349) - (cbMtdParam._m0[14u].x * cbMtdParam._m0[23u].x))) + _1349) * ((((cbMtdParam._m0[18u].x * _783.z) - _1324) * _788) + _1324);
    float _1401 = isnan(_1399) ? _1398 : (isnan(_1398) ? _1399 : max(_1398, _1399));
    float _1402 = isnan(_1400) ? _1401 : (isnan(_1401) ? _1400 : max(_1401, _1400));
    float _1405;
    float _1407;
    if (_1402 < 1.1920928955078125e-07)
    {
        _1405 = 0.0;
        _1407 = 0.0;
    }
    else
    {
        float _1431 = isnan(_1399) ? _1398 : (isnan(_1398) ? _1399 : min(_1398, _1399));
        float _1433 = _1402 - (isnan(_1400) ? _1431 : (isnan(_1431) ? _1400 : min(_1431, _1400)));
        float _1408 = _1433 / _1402;
        float frontier_phi_46_47_ladder;
        float frontier_phi_46_47_ladder_1;
        if (_1433 < 1.1920928955078125e-07)
        {
            frontier_phi_46_47_ladder = _1408;
            frontier_phi_46_47_ladder_1 = 0.0;
        }
        else
        {
            float _1706;
            if (_1402 == _1398)
            {
                _1706 = ((_1399 - _1400) / _1433) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_58_55_ladder;
                if (_1402 == _1399)
                {
                    frontier_phi_58_55_ladder = (((_1400 - _1398) / _1433) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_58_55_ladder = (((_1398 - _1399) / _1433) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1706 = frontier_phi_58_55_ladder;
            }
            float _1711 = (_1706 < 0.0) ? (_1706 + 1.0) : _1706;
            precise float _1406 = (_1711 - floor(_1711)) * 6.0;
            frontier_phi_46_47_ladder = _1408;
            frontier_phi_46_47_ladder_1 = _1406;
        }
        _1405 = frontier_phi_46_47_ladder_1;
        _1407 = frontier_phi_46_47_ladder;
    }
    float _1410 = cbMtdParam._m0[23u].z + _1402;
    float _2077 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
    float _1411 = isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0));
    float _1413 = cbMtdParam._m0[24u].y + _1407;
    float _2088 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    float _1414 = isnan(1.0) ? _2088 : (isnan(_2088) ? 1.0 : min(_2088, 1.0));
    uint _1416 = uint(int(floor(_1405)));
    float _1418 = _1405 - float(int(_1416));
    float _1420 = (1.0 - _1414) * _1411;
    float _1423 = (1.0 - (_1418 * _1414)) * _1411;
    float _1427 = (1.0 - ((1.0 - _1418) * _1414)) * _1411;
    float _1435;
    float _1437;
    float _1438;
    if ((_1416 == 0u) || (_1416 == 6u))
    {
        _1435 = _1411;
        _1437 = _1427;
        _1438 = _1420;
    }
    else
    {
        float frontier_phi_48_49_ladder;
        float frontier_phi_48_49_ladder_1;
        float frontier_phi_48_49_ladder_2;
        if (_1416 == 1u)
        {
            frontier_phi_48_49_ladder = _1411;
            frontier_phi_48_49_ladder_1 = _1420;
            frontier_phi_48_49_ladder_2 = _1423;
        }
        else
        {
            float frontier_phi_48_49_ladder_53_ladder;
            float frontier_phi_48_49_ladder_53_ladder_1;
            float frontier_phi_48_49_ladder_53_ladder_2;
            if (_1416 == 2u)
            {
                frontier_phi_48_49_ladder_53_ladder = _1411;
                frontier_phi_48_49_ladder_53_ladder_1 = _1427;
                frontier_phi_48_49_ladder_53_ladder_2 = _1420;
            }
            else
            {
                float frontier_phi_48_49_ladder_53_ladder_57_ladder;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
                if (_1416 == 3u)
                {
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1423;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1411;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1420;
                }
                else
                {
                    bool _1774 = _1416 == 4u;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1420;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1774 ? _1411 : _1423;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1774 ? _1427 : _1411;
                }
                frontier_phi_48_49_ladder_53_ladder = frontier_phi_48_49_ladder_53_ladder_57_ladder;
                frontier_phi_48_49_ladder_53_ladder_1 = frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                frontier_phi_48_49_ladder_53_ladder_2 = frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
            }
            frontier_phi_48_49_ladder = frontier_phi_48_49_ladder_53_ladder;
            frontier_phi_48_49_ladder_1 = frontier_phi_48_49_ladder_53_ladder_1;
            frontier_phi_48_49_ladder_2 = frontier_phi_48_49_ladder_53_ladder_2;
        }
        _1435 = frontier_phi_48_49_ladder_2;
        _1437 = frontier_phi_48_49_ladder;
        _1438 = frontier_phi_48_49_ladder_1;
    }
    float _1447 = exp2(log2(_1435) * cbMtdParam._m0[24u].z);
    float _1448 = exp2(log2(_1437) * cbMtdParam._m0[24u].z);
    float _1449 = exp2(log2(_1438) * cbMtdParam._m0[24u].z);
    float _1459 = inversesqrt(dot(vec3(cbMtdParam._m0[35u].yzw), vec3(cbMtdParam._m0[35u].yzw)));
    float _1467 = (dot(vec4(_1202, _1203, _1204, 0.0), vec4(_1459 * cbMtdParam._m0[35u].y, _1459 * cbMtdParam._m0[35u].z, _1459 * cbMtdParam._m0[35u].w, 0.0)) + 1.0) * 0.5;
    float _2099 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
    float _1474 = cbMtdParam._m0[20u].z * exp2(log2(isnan(1.0) ? _2099 : (isnan(_2099) ? 1.0 : min(_2099, 1.0))) * cbMtdParam._m0[21u].x);
    float _2110 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    float _1475 = isnan(1.0) ? _2110 : (isnan(_2110) ? 1.0 : min(_2110, 1.0));
    float _1482 = (cbMtdParam._m0[22u].z * exp2(log2(isnan(64.0) ? _1271 : (isnan(_1271) ? 64.0 : min(_1271, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[22u].w * exp2(log2(isnan(64.0) ? _1247 : (isnan(_1247) ? 64.0 : min(_1247, 64.0))) * 1.64999997615814208984375));
    float _1485 = ((_1475 * ((_1447 * cbMtdParam._m0[10u].z) - _1447)) + _1447) + (_1482 * cbMtdParam._m0[12u].z);
    float _1488 = ((_1475 * ((_1448 * cbMtdParam._m0[10u].w) - _1448)) + _1448) + (_1482 * cbMtdParam._m0[12u].w);
    float _1491 = ((_1475 * ((_1449 * cbMtdParam._m0[11u].x) - _1449)) + _1449) + (_1482 * cbMtdParam._m0[13u].x);
    bool _1497 = _1208.x != 0u;
    float _1522 = inversesqrt(dot(vec3(_593, _595, _596), vec3(_593, _595, _596)));
    float _1523 = _1522 * _593;
    float _1524 = _1522 * _595;
    float _1525 = _1522 * _596;
    float _1537 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1538 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1539 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1543 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1544 = _1543 * gl_WorldRayDirectionEXT.x;
    float _1545 = _1543 * gl_WorldRayDirectionEXT.y;
    float _1546 = _1543 * gl_WorldRayDirectionEXT.z;
    float _1547 = (-0.0) - _1544;
    float _1548 = (-0.0) - _1545;
    float _1549 = (-0.0) - _1546;
    float _1555 = float(gl_LaunchIDEXT.x);
    float _1556 = float(gl_LaunchIDEXT.y);
    float _1559 = float(gl_LaunchSizeEXT.x);
    float _1573 = fract(fract(sin(dot(vec2(_1555 / _1559, _1556 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1586 = fract(fract(sin(dot(vec2((_1555 + 128.0) / _1559, (_1556 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1591 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1592 = _1591.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1592, _1591.w, _1592, vec3(_1537, _1538, _1539), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1660;
    float _1661;
    float _1662;
    if (_70._m0 == 0u)
    {
        float _1615 = g_sceneCB._m0[4u].x - _1544;
        float _1616 = g_sceneCB._m0[4u].y - _1545;
        float _1617 = g_sceneCB._m0[4u].z - _1546;
        float _1621 = inversesqrt(dot(vec3(_1615, _1616, _1617), vec3(_1615, _1616, _1617)));
        float _1625 = dot(vec3(_1523, _1524, _1525), vec3(g_sceneCB._m0[4u].xyz));
        float _2136 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1628 = isnan(1.0) ? _2136 : (isnan(_2136) ? 1.0 : min(_2136, 1.0));
        float _1629 = dot(vec3(_1523, _1524, _1525), vec3(_1547, _1548, _1549));
        float _2147 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1615 * _1621, _1616 * _1621, _1617 * _1621));
        float _2158 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1644 = (exp2(log2(1.0 - (isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1650 = (0.5 / ((_1628 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0))))) * _1628;
        float _2169 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1652 = (isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0))) * 0.31831014156341552734375;
        _1660 = (_1644 * g_sceneCB._m0[5u].x) * _1652;
        _1661 = (_1644 * g_sceneCB._m0[5u].y) * _1652;
        _1662 = (_1644 * g_sceneCB._m0[5u].z) * _1652;
    }
    else
    {
        _1660 = 0.0;
        _1661 = 0.0;
        _1662 = 0.0;
    }
    bool _1664 = abs(_1524) < 0.89999997615814208984375;
    float _1666 = float(_1664);
    float _1667 = _1664 ? 0.0 : 1.0;
    float _1670 = (_1666 * _1525) - (_1667 * _1524);
    float _1671 = _1667 * _1523;
    float _1673 = (-0.0) - (_1523 * _1666);
    float _1677 = inversesqrt(dot(vec3(_1670, _1671, _1673), vec3(_1670, _1671, _1673)));
    float _1678 = _1670 * _1677;
    float _1679 = _1671 * _1677;
    float _1680 = _1677 * _1673;
    float _1683 = (_1679 * _1525) - (_1680 * _1524);
    float _1686 = (_1680 * _1523) - (_1678 * _1525);
    float _1689 = (_1678 * _1524) - (_1679 * _1523);
    float _1697;
    float _1723;
    float _1696 = 0.0;
    uint _1698 = 0u;
    float _1702;
    bool _1704;
    for (;;)
    {
        _1702 = (float(_1698) + _1573) * 0.03125;
        _1704 = _1698 == 0u;
        float frontier_phi_61_pred;
        if (_1704)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _1845;
            float _1846;
            uint _1848;
            _1845 = 0.0;
            _1846 = 0.5;
            _1848 = _1698;
            float _1724;
            for (;;)
            {
                _1724 = ((_1848 & 1u) != 0u) ? (_1846 + _1845) : _1845;
                uint _1849 = _1848 >> 1u;
                if (_1849 == 0u)
                {
                    break;
                }
                else
                {
                    _1845 = _1724;
                    _1846 *= 0.5;
                    _1848 = _1849;
                }
            }
            frontier_phi_61_pred = _1724;
        }
        _1723 = frontier_phi_61_pred;
        float _1725 = _1723 + _1586;
        float _1729 = sqrt(_1702);
        float _1730 = ((_1725 > 1.0) ? (_1725 + (-1.0)) : _1725) * 6.283185482025146484375;
        float _1733 = cos(_1730) * _1729;
        float _1735 = sin(_1730) * _1729;
        float _1737 = sqrt(1.0 - _1702);
        float _1750 = ((_1737 * _1523) + (_1733 * _1683)) + (_1735 * _1678);
        float _1751 = ((_1737 * _1524) + (_1733 * _1686)) + (_1735 * _1679);
        float _1752 = ((_1737 * _1525) + (_1733 * _1689)) + (_1735 * _1680);
        _69._m0 = 1u;
        uvec4 _1756 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1757 = _1756.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1757, _1756.w, _1757, vec3(_1537, _1538, _1539), 9.9999997473787516355514526367188e-05, vec3(_1750, _1751, _1752), 10000.0, 1);
        float _1763 = dot(vec3(_1523, _1524, _1525), vec3(_1750, _1751, _1752));
        float _2180 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1766 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        _1697 = ((float(_69._m0 == 0u) * _1766) / (_1766 * 0.3183098733425140380859375)) + _1696;
        uint _1699 = _1698 + 1u;
        if (_1699 == 32u)
        {
            break;
        }
        else
        {
            _1696 = _1697;
            _1698 = _1699;
            continue;
        }
    }
    float _1775 = _1697 * 0.009947183541953563690185546875;
    float _1780 = dot(vec3(_1544, _1545, _1546), vec3(_1523, _1524, _1525)) * 2.0;
    vec4 _1791 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1544 - (_1780 * _1523), _1545 - (_1780 * _1524), _1546 - (_1780 * _1525)), 4.0);
    float _1796 = dot(vec3(_1547, _1548, _1549), vec3(_1523, _1524, _1525));
    float _2191 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
    float _1805 = (exp2(log2(1.0 - (isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1814 = (((_1497 ? (_1194 * ((_1386 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z)) : 0.0) + (isnan(4.0) ? _1485 : (isnan(_1485) ? 4.0 : min(_1485, 4.0)))) + _1660) + ((_1791.x * _1775) * _1805);
    float _1817 = (((_1497 ? (_1194 * ((_1386 * (cbMtdParam._m0[11u].w - cbMtdParam._m0[15u].w)) + cbMtdParam._m0[15u].w)) : 0.0) + (isnan(4.0) ? _1488 : (isnan(_1488) ? 4.0 : min(_1488, 4.0)))) + _1661) + ((_1791.y * _1775) * _1805);
    float _1820 = (((_1497 ? (_1194 * ((_1386 * (cbMtdParam._m0[12u].x - cbMtdParam._m0[16u].x)) + cbMtdParam._m0[16u].x)) : 0.0) + (isnan(4.0) ? _1491 : (isnan(_1491) ? 4.0 : min(_1491, 4.0)))) + _1662) + ((_1791.z * _1775) * _1805);
    float _2202 = isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0));
    float _2213 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
    float _2224 = isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0));
    bool _1828 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1839;
    _1839.x = _1828 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0)));
    _1839.y = _1828 ? ((_589 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0)));
    _1839.z = _1828 ? ((_592 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2224 : (isnan(_2224) ? 1.0 : min(_2224, 1.0)));
    payload._m0 = _1839;
}


