#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _52
{
    vec3 _m0;
};

struct _56
{
    vec2 _m0;
};

struct _59
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _52 payload;
hitAttributeEXT _56 hit;
layout(location = 1) rayPayloadEXT _59 _61;
layout(location = 2) rayPayloadEXT _59 _62;

vec3 _1269;

void main()
{
    float _70 = float(gl_LaunchSizeEXT.y);
    float _100 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _109 = sqrt(((_101 * _101) + (_100 * _100)) + (_102 * _102)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _70)))));
    uvec4 _120 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _121 = _120.y;
    uint _161;
    uint _163;
    uint _164;
    if (_120.x == 0u)
    {
        uint _129 = (_121 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _138 = uvec3(texelFetch(l_geomIndexBuffer, int(_129)).x, texelFetch(l_geomIndexBuffer, int(_129 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_129 + 2u)).x);
        _161 = _138.x;
        _163 = _138.y;
        _164 = _138.z;
    }
    else
    {
        uint _142 = uint(gl_PrimitiveID) * 6u;
        uint _144 = _142 & 4294967292u;
        uint _147 = (_121 + _144) >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomIndexBuffer, int(_147)).x, texelFetch(l_geomIndexBuffer, int(_147 + 1u)).x);
        uint _155 = _154.x;
        uint _156 = _154.y;
        uint _158 = _155 >> 16u;
        uint _159 = _156 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_144 == _142)
        {
            frontier_phi_3_2_ladder = _158;
            frontier_phi_3_2_ladder_1 = _155 & 65535u;
            frontier_phi_3_2_ladder_2 = _159;
        }
        else
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _156 >> 16u;
        }
        _161 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder;
        _164 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _168 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _169 = _168.x;
    uint _170 = _168.z;
    bool _171 = _170 != 0u;
    bool _173 = _120.w == 0u;
    bool _174 = _171 || _173;
    uint _175 = _169 * _161;
    uint _176 = _175 + 12u;
    uint _200;
    uint _201;
    uint _202;
    uint _203;
    if (_174)
    {
        uvec4 _179 = texelFetch(l_geomAttrib_0, int(_176 >> 2u));
        uint _180 = _179.x;
        _200 = _180 & 255u;
        _201 = (_180 >> 8u) & 255u;
        _202 = (_180 >> 16u) & 255u;
        _203 = 16u;
    }
    else
    {
        uint _188 = _176 >> 2u;
        uvec2 _194 = uvec2(texelFetch(l_geomAttrib_0, int(_188)).x, texelFetch(l_geomAttrib_0, int(_188 + 1u)).x);
        uint _195 = _194.x;
        _200 = _195 & 65535u;
        _201 = _195 >> 16u;
        _202 = _194.y & 65535u;
        _203 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_203 + _175) >> 2u));
    uint _212 = _211.x;
    bool _226 = _170 == 0u;
    uint _227;
    if (_226)
    {
        _227 = _203 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_173)
        {
            frontier_phi_9_10_ladder = _203 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _203 + 12u;
        }
        _227 = frontier_phi_9_10_ladder;
    }
    uvec4 _235 = texelFetch(l_geomAttrib_0, int(((_175 + 4u) + (_171 ? (_227 + 4u) : _227)) >> 2u));
    uint _236 = _235.x;
    float _240 = float(int(uint(int(_236 << 16u) >> int(16u))));
    float _241 = float(int(uint(int(_236) >> int(16u))));
    uint _242 = _169 * _163;
    uint _243 = _242 + 12u;
    uint _264;
    uint _265;
    uint _266;
    uint _267;
    if (_174)
    {
        uvec4 _245 = texelFetch(l_geomAttrib_0, int(_243 >> 2u));
        uint _246 = _245.x;
        _264 = _246 & 255u;
        _265 = (_246 >> 8u) & 255u;
        _266 = (_246 >> 16u) & 255u;
        _267 = 16u;
    }
    else
    {
        uint _252 = _243 >> 2u;
        uvec2 _258 = uvec2(texelFetch(l_geomAttrib_0, int(_252)).x, texelFetch(l_geomAttrib_0, int(_252 + 1u)).x);
        uint _259 = _258.x;
        _264 = _259 & 65535u;
        _265 = _259 >> 16u;
        _266 = _258.y & 65535u;
        _267 = 20u;
    }
    uvec4 _273 = texelFetch(l_geomAttrib_0, int((_267 + _242) >> 2u));
    uint _274 = _273.x;
    uint _286;
    if (_226)
    {
        _286 = _267 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_173)
        {
            frontier_phi_16_17_ladder = _267 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _267 + 12u;
        }
        _286 = frontier_phi_16_17_ladder;
    }
    uvec4 _294 = texelFetch(l_geomAttrib_0, int(((_242 + 4u) + (_171 ? (_286 + 4u) : _286)) >> 2u));
    uint _295 = _294.x;
    float _299 = float(int(uint(int(_295 << 16u) >> int(16u))));
    float _300 = float(int(uint(int(_295) >> int(16u))));
    uint _301 = _169 * _164;
    uint _302 = _301 + 12u;
    uint _323;
    uint _324;
    uint _325;
    uint _326;
    if (_174)
    {
        uvec4 _304 = texelFetch(l_geomAttrib_0, int(_302 >> 2u));
        uint _305 = _304.x;
        _323 = _305 & 255u;
        _324 = (_305 >> 8u) & 255u;
        _325 = (_305 >> 16u) & 255u;
        _326 = 16u;
    }
    else
    {
        uint _311 = _302 >> 2u;
        uvec2 _317 = uvec2(texelFetch(l_geomAttrib_0, int(_311)).x, texelFetch(l_geomAttrib_0, int(_311 + 1u)).x);
        uint _318 = _317.x;
        _323 = _318 & 65535u;
        _324 = _318 >> 16u;
        _325 = _317.y & 65535u;
        _326 = 20u;
    }
    uvec4 _332 = texelFetch(l_geomAttrib_0, int((_326 + _301) >> 2u));
    uint _333 = _332.x;
    uint _345;
    if (_226)
    {
        _345 = _326 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_173)
        {
            frontier_phi_23_24_ladder = _326 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _326 + 12u;
        }
        _345 = frontier_phi_23_24_ladder;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int(((_301 + 4u) + (_171 ? (_345 + 4u) : _345)) >> 2u));
    uint _354 = _353.x;
    float _358 = float(int(uint(int(_354 << 16u) >> int(16u))));
    float _359 = float(int(uint(int(_354) >> int(16u))));
    bool _361 = _120.z == 0u;
    float _397;
    float _398;
    float _399;
    if (_361)
    {
        uint _364 = _161 * 3u;
        uvec3 _373 = uvec3(texelFetch(l_geomPositionBuffer, int(_364)).x, texelFetch(l_geomPositionBuffer, int(_364 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_364 + 2u)).x);
        _397 = uintBitsToFloat(_373.x);
        _398 = uintBitsToFloat(_373.y);
        _399 = uintBitsToFloat(_373.z);
    }
    else
    {
        uint _381 = _161 * 2u;
        uvec2 _387 = uvec2(texelFetch(l_geomPositionBuffer, int(_381)).x, texelFetch(l_geomPositionBuffer, int(_381 + 1u)).x);
        uint _388 = _387.x;
        _397 = unpackHalf2x16(_388).x;
        _398 = unpackHalf2x16(_388 >> 16u).x;
        _399 = unpackHalf2x16(_387.y).x;
    }
    float _435;
    float _436;
    float _437;
    if (_361)
    {
        uint _402 = _163 * 3u;
        uvec3 _411 = uvec3(texelFetch(l_geomPositionBuffer, int(_402)).x, texelFetch(l_geomPositionBuffer, int(_402 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_402 + 2u)).x);
        _435 = uintBitsToFloat(_411.x);
        _436 = uintBitsToFloat(_411.y);
        _437 = uintBitsToFloat(_411.z);
    }
    else
    {
        uint _419 = _163 * 2u;
        uvec2 _425 = uvec2(texelFetch(l_geomPositionBuffer, int(_419)).x, texelFetch(l_geomPositionBuffer, int(_419 + 1u)).x);
        uint _426 = _425.x;
        _435 = unpackHalf2x16(_426).x;
        _436 = unpackHalf2x16(_426 >> 16u).x;
        _437 = unpackHalf2x16(_425.y).x;
    }
    float _473;
    float _474;
    float _475;
    if (_361)
    {
        uint _440 = _164 * 3u;
        uvec3 _449 = uvec3(texelFetch(l_geomPositionBuffer, int(_440)).x, texelFetch(l_geomPositionBuffer, int(_440 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_440 + 2u)).x);
        _473 = uintBitsToFloat(_449.x);
        _474 = uintBitsToFloat(_449.y);
        _475 = uintBitsToFloat(_449.z);
    }
    else
    {
        uint _457 = _164 * 2u;
        uvec2 _463 = uvec2(texelFetch(l_geomPositionBuffer, int(_457)).x, texelFetch(l_geomPositionBuffer, int(_457 + 1u)).x);
        uint _464 = _463.x;
        _473 = unpackHalf2x16(_464).x;
        _474 = unpackHalf2x16(_464 >> 16u).x;
        _475 = unpackHalf2x16(_463.y).x;
    }
    float _478 = (1.0 - hit._m0.x) - hit._m0.y;
    float _512 = (_299 - _240) * 0.00048828125;
    float _514 = (_300 - _241) * 0.00048828125;
    float _517 = (_358 - _240) * 0.00048828125;
    float _518 = (_359 - _241) * 0.00048828125;
    float _540 = _435 - _397;
    float _541 = _436 - _398;
    float _542 = _437 - _399;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _552 = _473 - _397;
    float _553 = _474 - _398;
    float _554 = _475 - _399;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = (((_299 * hit._m0.x) + (_240 * _478)) + (_358 * hit._m0.y)) * 0.00048828125;
    float _565 = (((_300 * hit._m0.x) + (_241 * _478)) + (_359 * hit._m0.y)) * 0.00048828125;
    float _569 = (((float(_200) * _478) + (-127.0)) + (float(_264) * hit._m0.x)) + (float(_323) * hit._m0.y);
    float _572 = (((float(_201) * _478) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _575 = (((float(_202) * _478) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _576 = _569 * 0.0078740157186985015869140625;
    float _578 = _572 * 0.0078740157186985015869140625;
    float _579 = _575 * 0.0078740157186985015869140625;
    float _592 = ((((float(_212 & 255u) * _478) + (-127.0)) + (float(_274 & 255u) * hit._m0.x)) + (float(_333 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _593 = ((((float((_212 >> 8u) & 255u) * _478) + (-127.0)) + (float((_274 >> 8u) & 255u) * hit._m0.x)) + (float((_333 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float((_212 >> 16u) & 255u) * _478) + (-127.0)) + (float((_274 >> 16u) & 255u) * hit._m0.x)) + (float((_333 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float(_212 >> 24u) * _478) + (-127.0)) + (float(_274 >> 24u) * hit._m0.x)) + (float(_333 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((_593 * _579) - (_594 * _578)) * _595;
    float _606 = ((_594 * _576) - (_592 * _579)) * _595;
    float _607 = ((_592 * _578) - (_593 * _576)) * _595;
    float _611 = inversesqrt(dot(vec3(_605, _606, _607), vec3(_605, _606, _607)));
    uvec2 _632 = uvec2(textureSize(P_BS_M1_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _637 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _690;
    if (_637)
    {
        float _648 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _654 = (_563 * _548) - (_560 * _551);
        float _657 = (_557 * _551) - (_563 * _545);
        float _660 = (_560 * _545) - (_557 * _548);
        float _687 = ((log2((((float(_632.y) * 0.5) * float(_632.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_657 * _657) + (_660 * _660)) + (_654 * _654)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_648 * gl_WorldRayDirectionEXT.x, _648 * gl_WorldRayDirectionEXT.y, _648 * gl_WorldRayDirectionEXT.z), vec3(_576, _578, _579))));
        _690 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    }
    else
    {
        _690 = 0.0;
    }
    vec4 _694 = textureLod(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _564) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _565) + cbTextureTilingScale._m0[0u].w), _690);
    float _699 = _694.x * cbMtdParam._m0[9u].x;
    float _700 = _694.y * cbMtdParam._m0[9u].y;
    float _701 = _694.z * cbMtdParam._m0[9u].z;
    uvec2 _716 = uvec2(textureSize(P_BS_M1_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _767;
    if (_637)
    {
        float _727 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _733 = (_563 * _548) - (_560 * _551);
        float _736 = (_557 * _551) - (_563 * _545);
        float _739 = (_560 * _545) - (_557 * _548);
        float _765 = ((log2((((float(_716.y) * 0.5) * float(_716.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_736 * _736) + (_739 * _739)) + (_733 * _733)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_727 * gl_WorldRayDirectionEXT.x, _727 * gl_WorldRayDirectionEXT.y, _727 * gl_WorldRayDirectionEXT.z), vec3(_576, _578, _579))));
        _767 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    }
    else
    {
        _767 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _564) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _565) + cbTextureTilingScale._m0[1u].w), _767);
    float _774 = _770.z;
    float _777 = (_770.x * 2.0) + (-1.0);
    float _779 = (_770.y * 2.0) + (-1.0);
    float _780 = dot(vec2(_777, _779), vec2(_777, _779));
    float _1357 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _785 = sqrt(1.0 - (isnan(1.0) ? _1357 : (isnan(_1357) ? 1.0 : min(_1357, 1.0))));
    uvec2 _804 = uvec2(textureSize(P_BS_M1_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _808 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _809 = _808 * gl_WorldRayDirectionEXT.x;
    float _810 = _808 * gl_WorldRayDirectionEXT.y;
    float _811 = _808 * gl_WorldRayDirectionEXT.z;
    float _855;
    if (_637)
    {
        float _821 = (_563 * _548) - (_560 * _551);
        float _824 = (_557 * _551) - (_563 * _545);
        float _827 = (_560 * _545) - (_557 * _548);
        float _853 = ((log2((((float(_804.y) * 0.5) * float(_804.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_824 * _824) + (_827 * _827)) + (_821 * _821)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_809, _810, _811), vec3(_576, _578, _579))));
        _855 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    }
    else
    {
        _855 = 0.0;
    }
    vec4 _857 = textureLod(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _564) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _565) + cbTextureTilingScale._m0[3u].w), _855);
    float _876 = fma(_785, _576, fma(_779, _592, (_611 * _605) * _777));
    float _879 = fma(_785, _578, fma(_779, _593, (_611 * _606) * _777));
    float _882 = fma(_785, _579, fma(_779, _594, (_611 * _607) * _777));
    float _886 = inversesqrt(dot(vec3(_876, _879, _882), vec3(_876, _879, _882)));
    float _887 = _886 * _876;
    float _888 = _886 * _879;
    float _889 = _886 * _882;
    float _901 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _902 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _903 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _904 = (-0.0) - _809;
    float _906 = (-0.0) - _810;
    float _907 = (-0.0) - _811;
    float _913 = float(gl_LaunchIDEXT.x);
    float _914 = float(gl_LaunchIDEXT.y);
    float _917 = float(gl_LaunchSizeEXT.x);
    float _931 = fract(fract(sin(dot(vec2(_913 / _917, _914 / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _944 = fract(fract(sin(dot(vec2((_913 + 128.0) / _917, (_914 + 128.0) / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _945 = 1.0 - cbMtdParam._m0[12u].x;
    float _946 = _945 * _699;
    float _947 = _945 * _700;
    float _948 = _945 * _701;
    float _953 = (_699 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].x;
    float _954 = (_700 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].x;
    float _955 = (_701 + (-0.039999999105930328369140625)) * cbMtdParam._m0[12u].x;
    float _956 = _953 + 0.039999999105930328369140625;
    float _958 = _954 + 0.039999999105930328369140625;
    float _959 = _955 + 0.039999999105930328369140625;
    _62._m0 = 1u;
    uvec4 _969 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _970 = _969.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _970, _969.w, _970, vec3(_901, _902, _903), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1085;
    float _1086;
    float _1087;
    float _1088;
    float _1089;
    float _1090;
    if (_62._m0 == 0u)
    {
        float _991 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_887, _888, _889));
        float _1373 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
        float _994 = isnan(1.0) ? _1373 : (isnan(_1373) ? 1.0 : min(_1373, 1.0));
        float _1013 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _774) * 0.949999988079071044921875);
        float _1014 = _1013 * _1013;
        float _1015 = g_sceneCB._m0[4u].x - _809;
        float _1016 = g_sceneCB._m0[4u].y - _810;
        float _1017 = g_sceneCB._m0[4u].z - _811;
        float _1021 = inversesqrt(dot(vec3(_1015, _1016, _1017), vec3(_1015, _1016, _1017)));
        float _1022 = _1021 * _1015;
        float _1023 = _1021 * _1016;
        float _1024 = _1021 * _1017;
        float _1025 = dot(vec3(_887, _888, _889), vec3(g_sceneCB._m0[4u].xyz));
        float _1384 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1028 = isnan(1.0) ? _1384 : (isnan(_1384) ? 1.0 : min(_1384, 1.0));
        float _1029 = dot(vec3(_887, _888, _889), vec3(_904, _906, _907));
        float _1395 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1032 = isnan(1.0) ? _1395 : (isnan(_1395) ? 1.0 : min(_1395, 1.0));
        float _1033 = dot(vec3(_887, _888, _889), vec3(_1022, _1023, _1024));
        float _1406 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1036 = isnan(1.0) ? _1406 : (isnan(_1406) ? 1.0 : min(_1406, 1.0));
        float _1037 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1022, _1023, _1024));
        float _1417 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1041 = _1014 * _1014;
        float _1045 = ((_1036 * _1036) * (_1041 + (-1.0))) + 1.0;
        float _1054 = exp2(log2(1.0 - (isnan(1.0) ? _1417 : (isnan(_1417) ? 1.0 : min(_1417, 1.0)))) * 5.0);
        float _1065 = 1.0 - _1014;
        float _1076 = (0.5 / (((_1032 * ((_1028 * _1065) + _1014)) + 9.9999999392252902907785028219223e-09) + (((_1032 * _1065) + _1014) * _1028))) * _1028;
        float _1428 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1078 = (isnan(1.0) ? _1428 : (isnan(_1428) ? 1.0 : min(_1428, 1.0))) * (_1041 / ((_1045 * _1045) * 3.141590118408203125));
        _1085 = ((_946 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _994;
        _1086 = ((_947 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _994;
        _1087 = ((_948 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _994;
        _1088 = (((_1054 * (0.959999978542327880859375 - _953)) + _956) * g_sceneCB._m0[5u].x) * _1078;
        _1089 = (((_1054 * (0.959999978542327880859375 - _954)) + _958) * g_sceneCB._m0[5u].y) * _1078;
        _1090 = (((_1054 * (0.959999978542327880859375 - _955)) + _959) * g_sceneCB._m0[5u].z) * _1078;
    }
    else
    {
        _1085 = 0.0;
        _1086 = 0.0;
        _1087 = 0.0;
        _1088 = 0.0;
        _1089 = 0.0;
        _1090 = 0.0;
    }
    bool _1092 = abs(_888) < 0.89999997615814208984375;
    float _1094 = float(_1092);
    float _1095 = _1092 ? 0.0 : 1.0;
    float _1098 = (_1094 * _889) - (_1095 * _888);
    float _1099 = _1095 * _887;
    float _1101 = (-0.0) - (_887 * _1094);
    float _1105 = inversesqrt(dot(vec3(_1098, _1099, _1101), vec3(_1098, _1099, _1101)));
    float _1106 = _1098 * _1105;
    float _1107 = _1099 * _1105;
    float _1108 = _1105 * _1101;
    float _1111 = (_1107 * _889) - (_1108 * _888);
    float _1114 = (_1108 * _887) - (_1106 * _889);
    float _1117 = (_1106 * _888) - (_1107 * _887);
    float _1119;
    float _1127;
    float _1118 = 0.0;
    uint _1120 = 0u;
    float _1124;
    bool _1126;
    for (;;)
    {
        _1124 = (float(_1120) + _931) * 0.03125;
        _1126 = _1120 == 0u;
        float frontier_phi_45_pred;
        if (_1126)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1274;
            float _1275;
            uint _1277;
            _1274 = 0.0;
            _1275 = 0.5;
            _1277 = _1120;
            float _1128;
            for (;;)
            {
                _1128 = ((_1277 & 1u) != 0u) ? (_1275 + _1274) : _1274;
                uint _1278 = _1277 >> 1u;
                if (_1278 == 0u)
                {
                    break;
                }
                else
                {
                    _1274 = _1128;
                    _1275 *= 0.5;
                    _1277 = _1278;
                }
            }
            frontier_phi_45_pred = _1128;
        }
        _1127 = frontier_phi_45_pred;
        float _1129 = _1127 + _944;
        float _1133 = sqrt(_1124);
        float _1134 = ((_1129 > 1.0) ? (_1129 + (-1.0)) : _1129) * 6.283185482025146484375;
        float _1137 = cos(_1134) * _1133;
        float _1139 = sin(_1134) * _1133;
        float _1141 = sqrt(1.0 - _1124);
        float _1154 = ((_1141 * _887) + (_1137 * _1111)) + (_1139 * _1106);
        float _1155 = ((_1141 * _888) + (_1137 * _1114)) + (_1139 * _1107);
        float _1156 = ((_1141 * _889) + (_1137 * _1117)) + (_1139 * _1108);
        _61._m0 = 1u;
        uvec4 _1160 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1161 = _1160.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1161, _1160.w, _1161, vec3(_901, _902, _903), 9.9999997473787516355514526367188e-05, vec3(_1154, _1155, _1156), 10000.0, 1);
        float _1167 = dot(vec3(_887, _888, _889), vec3(_1154, _1155, _1156));
        float _1439 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
        float _1170 = isnan(1.0) ? _1439 : (isnan(_1439) ? 1.0 : min(_1439, 1.0));
        _1119 = ((float(_61._m0 == 0u) * _1170) / (_1170 * 0.3183098733425140380859375)) + _1118;
        uint _1121 = _1120 + 1u;
        if (_1121 == 32u)
        {
            break;
        }
        else
        {
            _1118 = _1119;
            _1120 = _1121;
            continue;
        }
    }
    float _1178 = _1119 * 0.009947183541953563690185546875;
    float _1183 = dot(vec3(_809, _810, _811), vec3(_887, _888, _889)) * 2.0;
    vec4 _1197 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_809 - (_1183 * _887), _810 - (_1183 * _888), _811 - (_1183 * _889)), 4.0 - (_774 * 4.0));
    float _1202 = dot(vec3(_904, _906, _907), vec3(_887, _888, _889));
    float _1450 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
    float _1212 = exp2(log2(1.0 - (isnan(1.0) ? _1450 : (isnan(_1450) ? 1.0 : min(_1450, 1.0)))) * 5.0);
    vec4 _1224 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_887, _888, _889), 0.0);
    float _1237 = (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].y) * _857.x) + cbMtdParam._m0[11u].x) + _1085) + _1088) + (((_1224.x * _946) + (((_1212 * (0.959999978542327880859375 - _953)) + _956) * _1197.x)) * _1178);
    float _1243 = (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].y) * _857.y) + cbMtdParam._m0[11u].y) + _1086) + _1089) + (((_1224.y * _947) + (((_1212 * (0.959999978542327880859375 - _954)) + _958) * _1197.y)) * _1178);
    float _1249 = (((cbMtdParam._m0[11u].z + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].y) * _857.z)) + _1087) + _1090) + (((_1224.z * _948) + (((_1212 * (0.959999978542327880859375 - _955)) + _959) * _1197.z)) * _1178);
    float _1461 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1472 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
    float _1483 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    bool _1257 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1268;
    _1268.x = _1257 ? ((_569 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1461 : (isnan(_1461) ? 1.0 : min(_1461, 1.0)));
    _1268.y = _1257 ? ((_572 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1472 : (isnan(_1472) ? 1.0 : min(_1472, 1.0)));
    _1268.z = _1257 ? ((_575 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1483 : (isnan(_1483) ? 1.0 : min(_1483, 1.0)));
    payload._m0 = _1268;
}


