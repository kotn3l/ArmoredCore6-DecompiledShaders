#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1585;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + _243) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uvec4 _257 = texelFetch(l_geomAttrib_0, int(((_187 + 12u) + _243) >> 2u));
    uint _258 = _257.x;
    uint _267 = _181 * _175;
    uint _268 = _267 + 12u;
    uint _289;
    uint _290;
    uint _291;
    uint _292;
    if (_186)
    {
        uvec4 _270 = texelFetch(l_geomAttrib_0, int(_268 >> 2u));
        uint _271 = _270.x;
        _289 = _271 & 255u;
        _290 = (_271 >> 8u) & 255u;
        _291 = (_271 >> 16u) & 255u;
        _292 = 16u;
    }
    else
    {
        uint _277 = _268 >> 2u;
        uvec2 _283 = uvec2(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x);
        uint _284 = _283.x;
        _289 = _284 & 65535u;
        _290 = _284 >> 16u;
        _291 = _283.y & 65535u;
        _292 = 20u;
    }
    uvec4 _298 = texelFetch(l_geomAttrib_0, int((_292 + _267) >> 2u));
    uint _299 = _298.x;
    uint _311;
    if (_238)
    {
        _311 = _292 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _292 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _292 + 12u;
        }
        _311 = frontier_phi_16_17_ladder;
    }
    uint _315 = _183 ? (_311 + 4u) : _311;
    uvec4 _319 = texelFetch(l_geomAttrib_0, int(((_267 + 4u) + _315) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    uvec4 _329 = texelFetch(l_geomAttrib_0, int(((_267 + 12u) + _315) >> 2u));
    uint _330 = _329.x;
    uint _339 = _181 * _176;
    uint _340 = _339 + 12u;
    uint _361;
    uint _362;
    uint _363;
    uint _364;
    if (_186)
    {
        uvec4 _342 = texelFetch(l_geomAttrib_0, int(_340 >> 2u));
        uint _343 = _342.x;
        _361 = _343 & 255u;
        _362 = (_343 >> 8u) & 255u;
        _363 = (_343 >> 16u) & 255u;
        _364 = 16u;
    }
    else
    {
        uint _349 = _340 >> 2u;
        uvec2 _355 = uvec2(texelFetch(l_geomAttrib_0, int(_349)).x, texelFetch(l_geomAttrib_0, int(_349 + 1u)).x);
        uint _356 = _355.x;
        _361 = _356 & 65535u;
        _362 = _356 >> 16u;
        _363 = _355.y & 65535u;
        _364 = 20u;
    }
    uvec4 _370 = texelFetch(l_geomAttrib_0, int((_364 + _339) >> 2u));
    uint _371 = _370.x;
    uint _383;
    if (_238)
    {
        _383 = _364 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _364 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _364 + 12u;
        }
        _383 = frontier_phi_23_24_ladder;
    }
    uint _387 = _183 ? (_383 + 4u) : _383;
    uvec4 _391 = texelFetch(l_geomAttrib_0, int(((_339 + 4u) + _387) >> 2u));
    uint _392 = _391.x;
    float _396 = float(int(uint(int(_392 << 16u) >> int(16u))));
    float _397 = float(int(uint(int(_392) >> int(16u))));
    uvec4 _401 = texelFetch(l_geomAttrib_0, int(((_339 + 12u) + _387) >> 2u));
    uint _402 = _401.x;
    bool _412 = _132.z == 0u;
    float _448;
    float _449;
    float _450;
    if (_412)
    {
        uint _415 = _173 * 3u;
        uvec3 _424 = uvec3(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_415 + 2u)).x);
        _448 = uintBitsToFloat(_424.x);
        _449 = uintBitsToFloat(_424.y);
        _450 = uintBitsToFloat(_424.z);
    }
    else
    {
        uint _432 = _173 * 2u;
        uvec2 _438 = uvec2(texelFetch(l_geomPositionBuffer, int(_432)).x, texelFetch(l_geomPositionBuffer, int(_432 + 1u)).x);
        uint _439 = _438.x;
        _448 = unpackHalf2x16(_439).x;
        _449 = unpackHalf2x16(_439 >> 16u).x;
        _450 = unpackHalf2x16(_438.y).x;
    }
    float _486;
    float _487;
    float _488;
    if (_412)
    {
        uint _453 = _175 * 3u;
        uvec3 _462 = uvec3(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_453 + 2u)).x);
        _486 = uintBitsToFloat(_462.x);
        _487 = uintBitsToFloat(_462.y);
        _488 = uintBitsToFloat(_462.z);
    }
    else
    {
        uint _470 = _175 * 2u;
        uvec2 _476 = uvec2(texelFetch(l_geomPositionBuffer, int(_470)).x, texelFetch(l_geomPositionBuffer, int(_470 + 1u)).x);
        uint _477 = _476.x;
        _486 = unpackHalf2x16(_477).x;
        _487 = unpackHalf2x16(_477 >> 16u).x;
        _488 = unpackHalf2x16(_476.y).x;
    }
    float _524;
    float _525;
    float _526;
    if (_412)
    {
        uint _491 = _176 * 3u;
        uvec3 _500 = uvec3(texelFetch(l_geomPositionBuffer, int(_491)).x, texelFetch(l_geomPositionBuffer, int(_491 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_491 + 2u)).x);
        _524 = uintBitsToFloat(_500.x);
        _525 = uintBitsToFloat(_500.y);
        _526 = uintBitsToFloat(_500.z);
    }
    else
    {
        uint _508 = _176 * 2u;
        uvec2 _514 = uvec2(texelFetch(l_geomPositionBuffer, int(_508)).x, texelFetch(l_geomPositionBuffer, int(_508 + 1u)).x);
        uint _515 = _514.x;
        _524 = unpackHalf2x16(_515).x;
        _525 = unpackHalf2x16(_515 >> 16u).x;
        _526 = unpackHalf2x16(_514.y).x;
    }
    float _529 = (1.0 - hit._m0.x) - hit._m0.y;
    float _582 = (_324 - _252) * 0.00048828125;
    float _584 = (_325 - _253) * 0.00048828125;
    float _587 = (_396 - _252) * 0.00048828125;
    float _588 = (_397 - _253) * 0.00048828125;
    float _610 = _486 - _448;
    float _611 = _487 - _449;
    float _612 = _488 - _450;
    float _615 = fma(_612, gl_ObjectToWorldEXT[2u].x, fma(_611, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _610));
    float _618 = fma(_612, gl_ObjectToWorldEXT[2u].y, fma(_611, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _610));
    float _621 = fma(_612, gl_ObjectToWorldEXT[2u].z, fma(_611, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _610));
    float _622 = _524 - _448;
    float _623 = _525 - _449;
    float _624 = _526 - _450;
    float _627 = fma(_624, gl_ObjectToWorldEXT[2u].x, fma(_623, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _622));
    float _630 = fma(_624, gl_ObjectToWorldEXT[2u].y, fma(_623, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _622));
    float _633 = fma(_624, gl_ObjectToWorldEXT[2u].z, fma(_623, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _622));
    float _634 = (((_324 * hit._m0.x) + (_252 * _529)) + (_396 * hit._m0.y)) * 0.00048828125;
    float _635 = (((_325 * hit._m0.x) + (_253 * _529)) + (_397 * hit._m0.y)) * 0.00048828125;
    float _639 = (((float(_212) * _529) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _642 = (((float(_213) * _529) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_362) * hit._m0.y);
    float _645 = (((float(_214) * _529) + (-127.0)) + (float(_291) * hit._m0.x)) + (float(_363) * hit._m0.y);
    float _646 = _639 * 0.0078740157186985015869140625;
    float _648 = _642 * 0.0078740157186985015869140625;
    float _649 = _645 * 0.0078740157186985015869140625;
    float _662 = ((((float(_224 & 255u) * _529) + (-127.0)) + (float(_299 & 255u) * hit._m0.x)) + (float(_371 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _663 = ((((float((_224 >> 8u) & 255u) * _529) + (-127.0)) + (float((_299 >> 8u) & 255u) * hit._m0.x)) + (float((_371 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _664 = ((((float((_224 >> 16u) & 255u) * _529) + (-127.0)) + (float((_299 >> 16u) & 255u) * hit._m0.x)) + (float((_371 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _665 = ((((float(_224 >> 24u) * _529) + (-127.0)) + (float(_299 >> 24u) * hit._m0.x)) + (float(_371 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _675 = ((_663 * _649) - (_664 * _648)) * _665;
    float _676 = ((_664 * _646) - (_662 * _649)) * _665;
    float _677 = ((_662 * _648) - (_663 * _646)) * _665;
    float _681 = inversesqrt(dot(vec3(_675, _676, _677), vec3(_675, _676, _677)));
    uvec2 _702 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    bool _707 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _760;
    if (_707)
    {
        float _718 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _724 = (_633 * _618) - (_630 * _621);
        float _727 = (_627 * _621) - (_633 * _615);
        float _730 = (_630 * _615) - (_627 * _618);
        float _757 = ((log2((((float(_702.y) * 0.5) * float(_702.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_727 * _727) + (_730 * _730)) + (_724 * _724)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_718 * gl_WorldRayDirectionEXT.x, _718 * gl_WorldRayDirectionEXT.y, _718 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _760 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    }
    else
    {
        _760 = 0.0;
    }
    vec4 _764 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _634) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _635) + cbTextureTilingScale._m0[3u].w), _760);
    uvec2 _791 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_7, int(0u)));
    float _842;
    if (_707)
    {
        float _802 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _808 = (_633 * _618) - (_630 * _621);
        float _811 = (_627 * _621) - (_633 * _615);
        float _814 = (_630 * _615) - (_627 * _618);
        float _840 = ((log2((((float(_791.y) * 0.5) * float(_791.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_811 * _811) + (_814 * _814)) + (_808 * _808)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_802 * gl_WorldRayDirectionEXT.x, _802 * gl_WorldRayDirectionEXT.y, _802 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _842 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    }
    else
    {
        _842 = 0.0;
    }
    vec4 _844 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _634) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _635) + cbTextureTilingScale._m0[5u].w), _842);
    uvec2 _860 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _911;
    if (_707)
    {
        float _871 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _877 = (_633 * _618) - (_630 * _621);
        float _880 = (_627 * _621) - (_633 * _615);
        float _883 = (_630 * _615) - (_627 * _618);
        float _909 = ((log2((((float(_860.y) * 0.5) * float(_860.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_880 * _880) + (_883 * _883)) + (_877 * _877)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_871 * gl_WorldRayDirectionEXT.x, _871 * gl_WorldRayDirectionEXT.y, _871 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _911 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    }
    else
    {
        _911 = 0.0;
    }
    vec4 _913 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _634) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _635) + cbTextureTilingScale._m0[1u].w), _911);
    float _927 = ((_844.x * 4.55000019073486328125) * _913.x) * cbMtdParam._m0[9u].x;
    float _930 = ((_844.y * 4.55000019073486328125) * _913.y) * cbMtdParam._m0[9u].y;
    float _933 = ((_844.z * 4.55000019073486328125) * _913.z) * cbMtdParam._m0[9u].z;
    float _940 = ((((((float(_330 & 255u) * hit._m0.x) + (float(_258 & 255u) * _529)) + (float(_402 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[13u].x) * ((_764.x * cbMtdParam._m0[10u].x) - _927)) + _927;
    float _941 = ((((((float((_330 >> 8u) & 255u) * hit._m0.x) + (float((_258 >> 8u) & 255u) * _529)) + (float((_402 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[13u].x) * ((_764.y * cbMtdParam._m0[10u].y) - _930)) + _930;
    float _942 = ((((((float((_330 >> 16u) & 255u) * hit._m0.x) + (float((_258 >> 16u) & 255u) * _529)) + (float((_402 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[13u].x) * ((_764.z * cbMtdParam._m0[10u].z) - _933)) + _933;
    uvec2 _954 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _1005;
    if (_707)
    {
        float _965 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _971 = (_633 * _618) - (_630 * _621);
        float _974 = (_627 * _621) - (_633 * _615);
        float _977 = (_630 * _615) - (_627 * _618);
        float _1003 = ((log2((((float(_954.y) * 0.5) * float(_954.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_974 * _974) + (_977 * _977)) + (_971 * _971)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_965 * gl_WorldRayDirectionEXT.x, _965 * gl_WorldRayDirectionEXT.y, _965 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1005 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    }
    else
    {
        _1005 = 0.0;
    }
    vec4 _1008 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _634) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _635) + cbTextureTilingScale._m0[0u].w), _1005);
    float _1012 = _1008.z;
    float _1018 = exp2(log2(_1012 * 22.0) * 260.0);
    float _1019 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    uvec2 _1036 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _1087;
    if (_707)
    {
        float _1047 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1053 = (_633 * _618) - (_630 * _621);
        float _1056 = (_627 * _621) - (_633 * _615);
        float _1059 = (_630 * _615) - (_627 * _618);
        float _1085 = ((log2((((float(_1036.y) * 0.5) * float(_1036.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_1056 * _1056) + (_1059 * _1059)) + (_1053 * _1053)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1047 * gl_WorldRayDirectionEXT.x, _1047 * gl_WorldRayDirectionEXT.y, _1047 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1087 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    }
    else
    {
        _1087 = 0.0;
    }
    vec4 _1089 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _634) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _635) + cbTextureTilingScale._m0[4u].w), _1087);
    float _1098 = (cbMtdParam._m0[12u].x + _1089.z) * (((isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0))) * (_1012 + (-0.5))) + 0.5);
    float _1114 = abs((fract(cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1704 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1115 = isnan(1.0) ? _1704 : (isnan(_1704) ? 1.0 : min(_1704, 1.0));
    float _1123 = (((_1115 * _1115) * (3.0 - (_1115 * 2.0))) * cbMtdParam._m0[12u].w) - cbMtdParam._m0[13u].y;
    uvec2 _1135 = uvec2(textureSize(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_11, int(0u)));
    float _1139 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1140 = _1139 * gl_WorldRayDirectionEXT.x;
    float _1141 = _1139 * gl_WorldRayDirectionEXT.y;
    float _1142 = _1139 * gl_WorldRayDirectionEXT.z;
    float _1186;
    if (_707)
    {
        float _1152 = (_633 * _618) - (_630 * _621);
        float _1155 = (_627 * _621) - (_633 * _615);
        float _1158 = (_630 * _615) - (_627 * _618);
        float _1184 = ((log2((((float(_1135.y) * 0.5) * float(_1135.x)) * abs((_588 * _582) - (_587 * _584))) / (sqrt(((_1155 * _1155) + (_1158 * _1158)) + (_1152 * _1152)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1140, _1141, _1142), vec3(_646, _648, _649))));
        _1186 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    }
    else
    {
        _1186 = 0.0;
    }
    vec4 _1188 = textureLod(sampler2D(C_DetailBlend1_Detail_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _634) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _635) + cbTextureTilingScale._m0[2u].w), _1186);
    float _1205 = (_1008.x * 2.0) + (-1.0);
    float _1206 = (_1008.y * 2.0) + (-1.0);
    float _1207 = dot(vec2(_1205, _1206), vec2(_1205, _1206));
    float _1720 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
    float _1212 = sqrt(1.0 - (isnan(1.0) ? _1720 : (isnan(_1720) ? 1.0 : min(_1720, 1.0))));
    float _1219 = (cbMtdParam._m0[12u].y * ((_1089.x * 2.0) + (-1.0))) + _1205;
    float _1220 = (cbMtdParam._m0[12u].y * ((_1089.y * 2.0) + (-1.0))) + _1206;
    float _1223 = fma(_1212, _646, fma(_1220, _662, (_681 * _675) * _1219));
    float _1226 = fma(_1212, _648, fma(_1220, _663, (_681 * _676) * _1219));
    float _1229 = fma(_1212, _649, fma(_1220, _664, (_681 * _677) * _1219));
    float _1233 = inversesqrt(dot(vec3(_1223, _1226, _1229), vec3(_1223, _1226, _1229)));
    float _1234 = _1233 * _1223;
    float _1235 = _1233 * _1226;
    float _1236 = _1233 * _1229;
    float _1248 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1249 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1250 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1251 = (-0.0) - _1140;
    float _1253 = (-0.0) - _1141;
    float _1254 = (-0.0) - _1142;
    float _1260 = float(gl_LaunchIDEXT.x);
    float _1261 = float(gl_LaunchIDEXT.y);
    float _1264 = float(gl_LaunchSizeEXT.x);
    float _1278 = fract(fract(sin(dot(vec2(_1260 / _1264, _1261 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1291 = fract(fract(sin(dot(vec2((_1260 + 128.0) / _1264, (_1261 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1301 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1302 = _1301.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1302, _1301.w, _1302, vec3(_1248, _1249, _1250), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    if (_70._m0 == 0u)
    {
        float _1322 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1234, _1235, _1236));
        float _1731 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1325 = isnan(1.0) ? _1731 : (isnan(_1731) ? 1.0 : min(_1731, 1.0));
        float _1344 = 1.0 - (sqrt((_1098 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1345 = _1344 * _1344;
        float _1346 = g_sceneCB._m0[4u].x - _1140;
        float _1347 = g_sceneCB._m0[4u].y - _1141;
        float _1348 = g_sceneCB._m0[4u].z - _1142;
        float _1352 = inversesqrt(dot(vec3(_1346, _1347, _1348), vec3(_1346, _1347, _1348)));
        float _1353 = _1352 * _1346;
        float _1354 = _1352 * _1347;
        float _1355 = _1352 * _1348;
        float _1356 = dot(vec3(_1234, _1235, _1236), vec3(g_sceneCB._m0[4u].xyz));
        float _1742 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1359 = isnan(1.0) ? _1742 : (isnan(_1742) ? 1.0 : min(_1742, 1.0));
        float _1360 = dot(vec3(_1234, _1235, _1236), vec3(_1251, _1253, _1254));
        float _1753 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1363 = isnan(1.0) ? _1753 : (isnan(_1753) ? 1.0 : min(_1753, 1.0));
        float _1364 = dot(vec3(_1234, _1235, _1236), vec3(_1353, _1354, _1355));
        float _1764 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1367 = isnan(1.0) ? _1764 : (isnan(_1764) ? 1.0 : min(_1764, 1.0));
        float _1368 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1353, _1354, _1355));
        float _1775 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1372 = _1345 * _1345;
        float _1376 = ((_1367 * _1367) * (_1372 + (-1.0))) + 1.0;
        float _1388 = (exp2(log2(1.0 - (isnan(1.0) ? _1775 : (isnan(_1775) ? 1.0 : min(_1775, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1390 = 1.0 - _1345;
        float _1401 = (0.5 / (((_1363 * ((_1359 * _1390) + _1345)) + 9.9999999392252902907785028219223e-09) + (((_1363 * _1390) + _1345) * _1359))) * _1359;
        float _1786 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1403 = (isnan(1.0) ? _1786 : (isnan(_1786) ? 1.0 : min(_1786, 1.0))) * (_1372 / ((_1376 * _1376) * 3.141590118408203125));
        _1410 = ((_940 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1325;
        _1411 = ((_941 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1325;
        _1412 = ((_942 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1325;
        _1413 = (_1388 * g_sceneCB._m0[5u].x) * _1403;
        _1414 = (_1388 * g_sceneCB._m0[5u].y) * _1403;
        _1415 = (_1388 * g_sceneCB._m0[5u].z) * _1403;
    }
    else
    {
        _1410 = 0.0;
        _1411 = 0.0;
        _1412 = 0.0;
        _1413 = 0.0;
        _1414 = 0.0;
        _1415 = 0.0;
    }
    bool _1417 = abs(_1235) < 0.89999997615814208984375;
    float _1419 = float(_1417);
    float _1420 = _1417 ? 0.0 : 1.0;
    float _1423 = (_1419 * _1236) - (_1420 * _1235);
    float _1424 = _1420 * _1234;
    float _1426 = (-0.0) - (_1234 * _1419);
    float _1430 = inversesqrt(dot(vec3(_1423, _1424, _1426), vec3(_1423, _1424, _1426)));
    float _1431 = _1423 * _1430;
    float _1432 = _1424 * _1430;
    float _1433 = _1430 * _1426;
    float _1436 = (_1432 * _1236) - (_1433 * _1235);
    float _1439 = (_1433 * _1234) - (_1431 * _1236);
    float _1442 = (_1431 * _1235) - (_1432 * _1234);
    float _1444;
    float _1452;
    float _1443 = 0.0;
    uint _1445 = 0u;
    float _1449;
    bool _1451;
    for (;;)
    {
        _1449 = (float(_1445) + _1278) * 0.03125;
        _1451 = _1445 == 0u;
        float frontier_phi_51_pred;
        if (_1451)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1590;
            float _1591;
            uint _1593;
            _1590 = 0.0;
            _1591 = 0.5;
            _1593 = _1445;
            float _1453;
            for (;;)
            {
                _1453 = ((_1593 & 1u) != 0u) ? (_1591 + _1590) : _1590;
                uint _1594 = _1593 >> 1u;
                if (_1594 == 0u)
                {
                    break;
                }
                else
                {
                    _1590 = _1453;
                    _1591 *= 0.5;
                    _1593 = _1594;
                }
            }
            frontier_phi_51_pred = _1453;
        }
        _1452 = frontier_phi_51_pred;
        float _1454 = _1452 + _1291;
        float _1458 = sqrt(_1449);
        float _1459 = ((_1454 > 1.0) ? (_1454 + (-1.0)) : _1454) * 6.283185482025146484375;
        float _1462 = cos(_1459) * _1458;
        float _1464 = sin(_1459) * _1458;
        float _1466 = sqrt(1.0 - _1449);
        float _1479 = ((_1466 * _1234) + (_1462 * _1436)) + (_1464 * _1431);
        float _1480 = ((_1466 * _1235) + (_1462 * _1439)) + (_1464 * _1432);
        float _1481 = ((_1466 * _1236) + (_1462 * _1442)) + (_1464 * _1433);
        _69._m0 = 1u;
        uvec4 _1485 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1486 = _1485.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1486, _1485.w, _1486, vec3(_1248, _1249, _1250), 9.9999997473787516355514526367188e-05, vec3(_1479, _1480, _1481), 10000.0, 1);
        float _1492 = dot(vec3(_1234, _1235, _1236), vec3(_1479, _1480, _1481));
        float _1797 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1495 = isnan(1.0) ? _1797 : (isnan(_1797) ? 1.0 : min(_1797, 1.0));
        _1444 = ((float(_69._m0 == 0u) * _1495) / (_1495 * 0.3183098733425140380859375)) + _1443;
        uint _1446 = _1445 + 1u;
        if (_1446 == 32u)
        {
            break;
        }
        else
        {
            _1443 = _1444;
            _1445 = _1446;
            continue;
        }
    }
    float _1503 = _1444 * 0.009947183541953563690185546875;
    float _1508 = dot(vec3(_1140, _1141, _1142), vec3(_1234, _1235, _1236)) * 2.0;
    vec4 _1523 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1140 - (_1508 * _1234), _1141 - (_1508 * _1235), _1142 - (_1508 * _1236)), 4.0 - (_1098 * 8.0));
    float _1528 = dot(vec3(_1251, _1253, _1254), vec3(_1234, _1235, _1236));
    float _1808 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
    float _1537 = (exp2(log2(1.0 - (isnan(1.0) ? _1808 : (isnan(_1808) ? 1.0 : min(_1808, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1543 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1234, _1235, _1236), 0.0);
    float _1555 = ((_1410 + (((cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].z) * _1123) * _1188.x)) + _1413) + (((_1543.x * _940) + (_1537 * _1523.x)) * _1503);
    float _1560 = ((_1411 + (((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].z) * _1123) * _1188.y)) + _1414) + (((_1543.y * _941) + (_1537 * _1523.y)) * _1503);
    float _1565 = ((_1412 + (((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].z) * _1123) * _1188.z)) + _1415) + (((_1543.z * _942) + (_1537 * _1523.z)) * _1503);
    float _1819 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
    float _1830 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
    float _1841 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    bool _1573 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1584;
    _1584.x = _1573 ? ((_639 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1819 : (isnan(_1819) ? 1.0 : min(_1819, 1.0)));
    _1584.y = _1573 ? ((_642 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1830 : (isnan(_1830) ? 1.0 : min(_1830, 1.0)));
    _1584.z = _1573 ? ((_645 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1841 : (isnan(_1841) ? 1.0 : min(_1841, 1.0)));
    payload._m0 = _1584;
}


