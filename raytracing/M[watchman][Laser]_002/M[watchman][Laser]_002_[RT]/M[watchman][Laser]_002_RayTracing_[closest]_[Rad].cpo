#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_watchman_Laser_002_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D M_watchman_Laser_002_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D M_watchman_Laser_002_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D M_watchman_Laser_002_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1241;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _163 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _164 >> 16u;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _166;
        }
        _169 = frontier_phi_3_2_ladder_2;
        _171 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _184 = (_177 * _169) + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 20u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 24u;
    }
    bool _217 = _178 == 0u;
    uint _218;
    if (_217)
    {
        _218 = _211;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 8u;
        }
        _218 = frontier_phi_9_10_ladder;
    }
    uvec4 _229 = texelFetch(l_geomAttrib_0, int((((_177 * _169) + 4u) + (_179 ? (_218 + 4u) : _218)) >> 2u));
    uint _230 = _229.x;
    float _234 = float(int(uint(int(_230 << 16u) >> int(16u))));
    float _235 = float(int(uint(int(_230) >> int(16u))));
    uint _237 = (_177 * _171) + 12u;
    uint _258;
    uint _259;
    uint _260;
    uint _261;
    if (_182)
    {
        uvec4 _239 = texelFetch(l_geomAttrib_0, int(_237 >> 2u));
        uint _240 = _239.x;
        _258 = _240 & 255u;
        _259 = (_240 >> 8u) & 255u;
        _260 = (_240 >> 16u) & 255u;
        _261 = 20u;
    }
    else
    {
        uint _246 = _237 >> 2u;
        uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
        uint _253 = _252.x;
        _258 = _253 & 65535u;
        _259 = _253 >> 16u;
        _260 = _252.y & 65535u;
        _261 = 24u;
    }
    uint _265;
    if (_217)
    {
        _265 = _261;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _261 + 8u;
        }
        _265 = frontier_phi_16_17_ladder;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((((_177 * _171) + 4u) + (_179 ? (_265 + 4u) : _265)) >> 2u));
    uint _275 = _274.x;
    float _279 = float(int(uint(int(_275 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_275) >> int(16u))));
    uint _282 = (_177 * _172) + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_182)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 20u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 24u;
    }
    uint _310;
    if (_217)
    {
        _310 = _306;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _306 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _306 + 8u;
        }
        _310 = frontier_phi_23_24_ladder;
    }
    uvec4 _319 = texelFetch(l_geomAttrib_0, int((((_177 * _172) + 4u) + (_179 ? (_310 + 4u) : _310)) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    bool _327 = _128.z == 0u;
    float _363;
    float _364;
    float _365;
    if (_327)
    {
        uint _330 = _169 * 3u;
        uvec3 _339 = uvec3(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_330 + 2u)).x);
        _363 = uintBitsToFloat(_339.x);
        _364 = uintBitsToFloat(_339.y);
        _365 = uintBitsToFloat(_339.z);
    }
    else
    {
        uint _347 = _169 * 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomPositionBuffer, int(_347)).x, texelFetch(l_geomPositionBuffer, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _363 = unpackHalf2x16(_354).x;
        _364 = unpackHalf2x16(_354 >> 16u).x;
        _365 = unpackHalf2x16(_353.y).x;
    }
    float _401;
    float _402;
    float _403;
    if (_327)
    {
        uint _368 = _171 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _171 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_327)
    {
        uint _406 = _172 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _172 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _444 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = (_279 - _234) * 0.00048828125;
    float _468 = (_280 - _235) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _511 = fma(_508, gl_ObjectToWorldEXT[2u].x, fma(_507, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _506));
    float _514 = fma(_508, gl_ObjectToWorldEXT[2u].y, fma(_507, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _506));
    float _517 = fma(_508, gl_ObjectToWorldEXT[2u].z, fma(_507, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _506));
    float _518 = (((_279 * hit._m0.x) + (_234 * _444)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _519 = (((_280 * hit._m0.x) + (_235 * _444)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _523 = (((float(_208) * _444) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _526 = (((float(_209) * _444) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = (((float(_210) * _444) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = _523 * 0.0078740157186985015869140625;
    float _532 = _526 * 0.0078740157186985015869140625;
    float _533 = _529 * 0.0078740157186985015869140625;
    float _550 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    float _553 = (_550 * cbMtdParam._m0[14u].x) + _518;
    float _554 = (_550 * cbMtdParam._m0[14u].y) + _519;
    float _574 = (cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _518)) + cbTextureTilingScale._m0[1u].z;
    float _575 = (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _519)) + cbTextureTilingScale._m0[1u].w;
    uvec2 _577 = uvec2(textureSize(M_watchman_Laser_002_snp_0_Texture2D_4, int(0u)));
    bool _582 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _635;
    if (_582)
    {
        float _593 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _599 = (_517 * _502) - (_514 * _505);
        float _602 = (_511 * _505) - (_517 * _499);
        float _605 = (_514 * _499) - (_511 * _502);
        float _632 = ((log2((((float(_577.y) * 0.5) * float(_577.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_602 * _602) + (_605 * _605)) + (_599 * _599)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_593 * gl_WorldRayDirectionEXT.x, _593 * gl_WorldRayDirectionEXT.y, _593 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _635 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    }
    else
    {
        _635 = 0.0;
    }
    vec4 _639 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_4, SS_WrapLinear), vec2(_574, _575), _635);
    float _644 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[11u].w;
    float _650 = ((_639.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _652 = (-0.0) - (cbMtdParam._m0[11u].z * ((_639.x * 0.5) + (-0.25)));
    float _654 = fract(_644);
    float _656 = fract(_644 + 0.5);
    float _668 = abs((_654 * 2.0) + (-1.0));
    vec4 _686 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_654 * _652) + _553) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_650 * _654) + _554) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _688 = _686.x;
    float _689 = _686.y;
    float _690 = _686.z;
    vec4 _691 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_656 * _652) + _553) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_650 * _656) + _554) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _705 = (((_691.x - _688) * _668) + _688) * cbMtdParam._m0[10u].x;
    float _706 = (((_691.y - _689) * _668) + _689) * cbMtdParam._m0[10u].y;
    float _707 = (((_691.z - _690) * _668) + _690) * cbMtdParam._m0[10u].z;
    float _721 = (cbMtdParam._m0[15u].x * _550) + _518;
    float _722 = (cbMtdParam._m0[15u].y * _550) + _519;
    float _773;
    if (_582)
    {
        float _733 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _739 = (_517 * _502) - (_514 * _505);
        float _742 = (_511 * _505) - (_517 * _499);
        float _745 = (_514 * _499) - (_511 * _502);
        float _771 = ((log2((((float(_577.y) * 0.5) * float(_577.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_742 * _742) + (_745 * _745)) + (_739 * _739)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_733 * gl_WorldRayDirectionEXT.x, _733 * gl_WorldRayDirectionEXT.y, _733 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _773 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    }
    else
    {
        _773 = 0.0;
    }
    vec4 _775 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_4, SS_WrapLinear), vec2(_574, _575), _773);
    float _783 = ((_775.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _785 = (-0.0) - (cbMtdParam._m0[11u].z * ((_775.x * 0.5) + (-0.25)));
    vec4 _810 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_654 * _785) + _721) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_783 * _654) + _722) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _812 = _810.x;
    float _813 = _810.y;
    float _814 = _810.z;
    vec4 _815 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_656 * _785) + _721) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_783 * _656) + _722) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _836 = (cbMtdParam._m0[13u].z * _550) + _518;
    float _837 = (cbMtdParam._m0[13u].w * _550) + _519;
    float _841 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _842 = _841 * gl_WorldRayDirectionEXT.x;
    float _843 = _841 * gl_WorldRayDirectionEXT.y;
    float _844 = _841 * gl_WorldRayDirectionEXT.z;
    float _888;
    if (_582)
    {
        float _854 = (_517 * _502) - (_514 * _505);
        float _857 = (_511 * _505) - (_517 * _499);
        float _860 = (_514 * _499) - (_511 * _502);
        float _886 = ((log2((((float(_577.y) * 0.5) * float(_577.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_857 * _857) + (_860 * _860)) + (_854 * _854)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_842, _843, _844), vec3(_530, _532, _533))));
        _888 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    }
    else
    {
        _888 = 0.0;
    }
    vec4 _890 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_4, SS_WrapLinear), vec2(_574, _575), _888);
    float _898 = ((_890.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _900 = (-0.0) - (cbMtdParam._m0[11u].z * ((_890.x * 0.5) + (-0.25)));
    vec4 _925 = textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_654 * _900) + _836) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_898 * _654) + _837) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _927 = _925.x;
    float _933 = ((textureLod(sampler2D(M_watchman_Laser_002_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_656 * _900) + _836) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_898 * _656) + _837) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0).x - _927) * _668) + _927;
    float _953 = inversesqrt(dot(vec3(_530, _532, _533), vec3(_530, _532, _533)));
    float _954 = _953 * _530;
    float _955 = _953 * _532;
    float _956 = _953 * _533;
    float _968 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _969 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _970 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _971 = (-0.0) - _842;
    float _972 = (-0.0) - _843;
    float _973 = (-0.0) - _844;
    float _979 = float(gl_LaunchIDEXT.x);
    float _980 = float(gl_LaunchIDEXT.y);
    float _983 = float(gl_LaunchSizeEXT.x);
    float _997 = fract(fract(sin(dot(vec2(_979 / _983, _980 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1010 = fract(fract(sin(dot(vec2((_979 + 128.0) / _983, (_980 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _66._m0 = 1u;
    uvec4 _1020 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1021 = _1020.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1021, _1020.w, _1021, vec3(_968, _969, _970), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1087;
    float _1088;
    float _1089;
    if (_66._m0 == 0u)
    {
        float _1042 = g_sceneCB._m0[4u].x - _842;
        float _1043 = g_sceneCB._m0[4u].y - _843;
        float _1044 = g_sceneCB._m0[4u].z - _844;
        float _1048 = inversesqrt(dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044)));
        float _1052 = dot(vec3(_954, _955, _956), vec3(g_sceneCB._m0[4u].xyz));
        float _1334 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1055 = isnan(1.0) ? _1334 : (isnan(_1334) ? 1.0 : min(_1334, 1.0));
        float _1056 = dot(vec3(_954, _955, _956), vec3(_971, _972, _973));
        float _1345 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1060 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1042 * _1048, _1043 * _1048, _1044 * _1048));
        float _1356 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
        float _1071 = (exp2(log2(1.0 - (isnan(1.0) ? _1356 : (isnan(_1356) ? 1.0 : min(_1356, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1077 = (0.5 / ((_1055 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1345 : (isnan(_1345) ? 1.0 : min(_1345, 1.0))))) * _1055;
        float _1367 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1079 = (isnan(1.0) ? _1367 : (isnan(_1367) ? 1.0 : min(_1367, 1.0))) * 0.31831014156341552734375;
        _1087 = (_1071 * g_sceneCB._m0[5u].x) * _1079;
        _1088 = (_1071 * g_sceneCB._m0[5u].y) * _1079;
        _1089 = (_1071 * g_sceneCB._m0[5u].z) * _1079;
    }
    else
    {
        _1087 = 0.0;
        _1088 = 0.0;
        _1089 = 0.0;
    }
    bool _1091 = abs(_955) < 0.89999997615814208984375;
    float _1093 = float(_1091);
    float _1094 = _1091 ? 0.0 : 1.0;
    float _1097 = (_1093 * _956) - (_1094 * _955);
    float _1098 = _1094 * _954;
    float _1100 = (-0.0) - (_954 * _1093);
    float _1104 = inversesqrt(dot(vec3(_1097, _1098, _1100), vec3(_1097, _1098, _1100)));
    float _1105 = _1097 * _1104;
    float _1106 = _1098 * _1104;
    float _1107 = _1104 * _1100;
    float _1110 = (_1106 * _956) - (_1107 * _955);
    float _1113 = (_1107 * _954) - (_1105 * _956);
    float _1116 = (_1105 * _955) - (_1106 * _954);
    float _1118;
    float _1126;
    float _1117 = 0.0;
    uint _1119 = 0u;
    float _1123;
    bool _1125;
    for (;;)
    {
        _1123 = (float(_1119) + _997) * 0.03125;
        _1125 = _1119 == 0u;
        float frontier_phi_45_pred;
        if (_1125)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1246;
            float _1247;
            uint _1249;
            _1246 = 0.0;
            _1247 = 0.5;
            _1249 = _1119;
            float _1127;
            for (;;)
            {
                _1127 = ((_1249 & 1u) != 0u) ? (_1247 + _1246) : _1246;
                uint _1250 = _1249 >> 1u;
                if (_1250 == 0u)
                {
                    break;
                }
                else
                {
                    _1246 = _1127;
                    _1247 *= 0.5;
                    _1249 = _1250;
                }
            }
            frontier_phi_45_pred = _1127;
        }
        _1126 = frontier_phi_45_pred;
        float _1128 = _1126 + _1010;
        float _1132 = sqrt(_1123);
        float _1133 = ((_1128 > 1.0) ? (_1128 + (-1.0)) : _1128) * 6.283185482025146484375;
        float _1136 = cos(_1133) * _1132;
        float _1138 = sin(_1133) * _1132;
        float _1140 = sqrt(1.0 - _1123);
        float _1153 = ((_1140 * _954) + (_1136 * _1110)) + (_1138 * _1105);
        float _1154 = ((_1140 * _955) + (_1136 * _1113)) + (_1138 * _1106);
        float _1155 = ((_1140 * _956) + (_1136 * _1116)) + (_1138 * _1107);
        _65._m0 = 1u;
        uvec4 _1159 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1160 = _1159.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1160, _1159.w, _1160, vec3(_968, _969, _970), 9.9999997473787516355514526367188e-05, vec3(_1153, _1154, _1155), 10000.0, 1);
        float _1166 = dot(vec3(_954, _955, _956), vec3(_1153, _1154, _1155));
        float _1378 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1169 = isnan(1.0) ? _1378 : (isnan(_1378) ? 1.0 : min(_1378, 1.0));
        _1118 = ((float(_65._m0 == 0u) * _1169) / (_1169 * 0.3183098733425140380859375)) + _1117;
        uint _1120 = _1119 + 1u;
        if (_1120 == 32u)
        {
            break;
        }
        else
        {
            _1117 = _1118;
            _1119 = _1120;
            continue;
        }
    }
    float _1178 = _1118 * 0.009947183541953563690185546875;
    float _1183 = dot(vec3(_842, _843, _844), vec3(_954, _955, _956)) * 2.0;
    vec4 _1195 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_842 - (_1183 * _954), _843 - (_1183 * _955), _844 - (_1183 * _956)), 4.0);
    float _1200 = dot(vec3(_971, _972, _973), vec3(_954, _955, _956));
    float _1389 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    float _1209 = (exp2(log2(1.0 - (isnan(1.0) ? _1389 : (isnan(_1389) ? 1.0 : min(_1389, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1217 = (_1087 + ((((cbMtdParam._m0[11u].x * (((((_815.x - _812) * _668) + _812) * cbMtdParam._m0[9u].x) - _705)) * _933) + _705) * cbMtdParam._m0[13u].x)) + ((_1195.x * _1178) * _1209);
    float _1219 = (_1088 + ((((cbMtdParam._m0[11u].x * (((((_815.y - _813) * _668) + _813) * cbMtdParam._m0[9u].y) - _706)) * _933) + _706) * cbMtdParam._m0[13u].x)) + ((_1195.y * _1178) * _1209);
    float _1221 = (_1089 + ((((cbMtdParam._m0[11u].x * (((((_815.z - _814) * _668) + _814) * cbMtdParam._m0[9u].z) - _707)) * _933) + _707) * cbMtdParam._m0[13u].x)) + ((_1195.z * _1178) * _1209);
    float _1400 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
    float _1411 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
    float _1422 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    bool _1229 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1240;
    _1240.x = _1229 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1400 : (isnan(_1400) ? 1.0 : min(_1400, 1.0)));
    _1240.y = _1229 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1411 : (isnan(_1411) ? 1.0 : min(_1411, 1.0)));
    _1240.z = _1229 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1422 : (isnan(_1422) ? 1.0 : min(_1422, 1.0)));
    payload._m0 = _1240;
}


