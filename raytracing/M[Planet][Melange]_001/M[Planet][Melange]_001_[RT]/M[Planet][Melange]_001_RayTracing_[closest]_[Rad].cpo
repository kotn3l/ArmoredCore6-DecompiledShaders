#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[35];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1888;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _180 * _172;
    uint _183 = _181 >> 2u;
    uvec3 _192 = uvec3(texelFetch(l_geomAttrib_0, int(_183)).x, texelFetch(l_geomAttrib_0, int(_183 + 1u)).x, texelFetch(l_geomAttrib_0, int(_183 + 2u)).x);
    uint _199 = _179.z;
    bool _200 = _199 != 0u;
    bool _202 = _131.w == 0u;
    bool _203 = _200 || _202;
    uint _204 = _181 + 12u;
    uint _227;
    uint _228;
    uint _229;
    uint _230;
    if (_203)
    {
        uvec4 _206 = texelFetch(l_geomAttrib_0, int(_204 >> 2u));
        uint _207 = _206.x;
        _227 = _207 & 255u;
        _228 = (_207 >> 8u) & 255u;
        _229 = (_207 >> 16u) & 255u;
        _230 = 16u;
    }
    else
    {
        uint _215 = _204 >> 2u;
        uvec2 _221 = uvec2(texelFetch(l_geomAttrib_0, int(_215)).x, texelFetch(l_geomAttrib_0, int(_215 + 1u)).x);
        uint _222 = _221.x;
        _227 = _222 & 65535u;
        _228 = _222 >> 16u;
        _229 = _221.y & 65535u;
        _230 = 20u;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int((_230 + _181) >> 2u));
    uint _238 = _237.x;
    bool _252 = _199 == 0u;
    uint _253;
    if (_252)
    {
        _253 = _230 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_202)
        {
            frontier_phi_9_10_ladder = _230 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _230 + 12u;
        }
        _253 = frontier_phi_9_10_ladder;
    }
    uint _257 = _200 ? (_253 + 4u) : _253;
    uvec4 _261 = texelFetch(l_geomAttrib_0, int(((_181 + 4u) + _257) >> 2u));
    uint _262 = _261.x;
    float _266 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _267 = float(int(uint(int(_262) >> int(16u))));
    uint _276 = _180 * _174;
    uint _277 = _276 >> 2u;
    uvec3 _286 = uvec3(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x, texelFetch(l_geomAttrib_0, int(_277 + 2u)).x);
    uint _293 = _276 + 12u;
    uint _314;
    uint _315;
    uint _316;
    uint _317;
    if (_203)
    {
        uvec4 _295 = texelFetch(l_geomAttrib_0, int(_293 >> 2u));
        uint _296 = _295.x;
        _314 = _296 & 255u;
        _315 = (_296 >> 8u) & 255u;
        _316 = (_296 >> 16u) & 255u;
        _317 = 16u;
    }
    else
    {
        uint _302 = _293 >> 2u;
        uvec2 _308 = uvec2(texelFetch(l_geomAttrib_0, int(_302)).x, texelFetch(l_geomAttrib_0, int(_302 + 1u)).x);
        uint _309 = _308.x;
        _314 = _309 & 65535u;
        _315 = _309 >> 16u;
        _316 = _308.y & 65535u;
        _317 = 20u;
    }
    uvec4 _323 = texelFetch(l_geomAttrib_0, int((_317 + _276) >> 2u));
    uint _324 = _323.x;
    uint _336;
    if (_252)
    {
        _336 = _317 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_202)
        {
            frontier_phi_16_17_ladder = _317 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _317 + 12u;
        }
        _336 = frontier_phi_16_17_ladder;
    }
    uint _340 = _200 ? (_336 + 4u) : _336;
    uvec4 _344 = texelFetch(l_geomAttrib_0, int(((_276 + 4u) + _340) >> 2u));
    uint _345 = _344.x;
    float _349 = float(int(uint(int(_345 << 16u) >> int(16u))));
    float _350 = float(int(uint(int(_345) >> int(16u))));
    uint _359 = _180 * _175;
    uint _360 = _359 >> 2u;
    uvec3 _369 = uvec3(texelFetch(l_geomAttrib_0, int(_360)).x, texelFetch(l_geomAttrib_0, int(_360 + 1u)).x, texelFetch(l_geomAttrib_0, int(_360 + 2u)).x);
    uint _376 = _359 + 12u;
    uint _397;
    uint _398;
    uint _399;
    uint _400;
    if (_203)
    {
        uvec4 _378 = texelFetch(l_geomAttrib_0, int(_376 >> 2u));
        uint _379 = _378.x;
        _397 = _379 & 255u;
        _398 = (_379 >> 8u) & 255u;
        _399 = (_379 >> 16u) & 255u;
        _400 = 16u;
    }
    else
    {
        uint _385 = _376 >> 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomAttrib_0, int(_385)).x, texelFetch(l_geomAttrib_0, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _397 = _392 & 65535u;
        _398 = _392 >> 16u;
        _399 = _391.y & 65535u;
        _400 = 20u;
    }
    uvec4 _406 = texelFetch(l_geomAttrib_0, int((_400 + _359) >> 2u));
    uint _407 = _406.x;
    uint _419;
    if (_252)
    {
        _419 = _400 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_202)
        {
            frontier_phi_23_24_ladder = _400 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _400 + 12u;
        }
        _419 = frontier_phi_23_24_ladder;
    }
    uint _423 = _200 ? (_419 + 4u) : _419;
    uvec4 _427 = texelFetch(l_geomAttrib_0, int(((_359 + 4u) + _423) >> 2u));
    uint _428 = _427.x;
    float _432 = float(int(uint(int(_428 << 16u) >> int(16u))));
    float _433 = float(int(uint(int(_428) >> int(16u))));
    bool _443 = _131.z == 0u;
    float _479;
    float _480;
    float _481;
    if (_443)
    {
        uint _446 = _172 * 3u;
        uvec3 _455 = uvec3(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_446 + 2u)).x);
        _479 = uintBitsToFloat(_455.x);
        _480 = uintBitsToFloat(_455.y);
        _481 = uintBitsToFloat(_455.z);
    }
    else
    {
        uint _463 = _172 * 2u;
        uvec2 _469 = uvec2(texelFetch(l_geomPositionBuffer, int(_463)).x, texelFetch(l_geomPositionBuffer, int(_463 + 1u)).x);
        uint _470 = _469.x;
        _479 = unpackHalf2x16(_470).x;
        _480 = unpackHalf2x16(_470 >> 16u).x;
        _481 = unpackHalf2x16(_469.y).x;
    }
    float _517;
    float _518;
    float _519;
    if (_443)
    {
        uint _484 = _174 * 3u;
        uvec3 _493 = uvec3(texelFetch(l_geomPositionBuffer, int(_484)).x, texelFetch(l_geomPositionBuffer, int(_484 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_484 + 2u)).x);
        _517 = uintBitsToFloat(_493.x);
        _518 = uintBitsToFloat(_493.y);
        _519 = uintBitsToFloat(_493.z);
    }
    else
    {
        uint _501 = _174 * 2u;
        uvec2 _507 = uvec2(texelFetch(l_geomPositionBuffer, int(_501)).x, texelFetch(l_geomPositionBuffer, int(_501 + 1u)).x);
        uint _508 = _507.x;
        _517 = unpackHalf2x16(_508).x;
        _518 = unpackHalf2x16(_508 >> 16u).x;
        _519 = unpackHalf2x16(_507.y).x;
    }
    float _555;
    float _556;
    float _557;
    if (_443)
    {
        uint _522 = _175 * 3u;
        uvec3 _531 = uvec3(texelFetch(l_geomPositionBuffer, int(_522)).x, texelFetch(l_geomPositionBuffer, int(_522 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_522 + 2u)).x);
        _555 = uintBitsToFloat(_531.x);
        _556 = uintBitsToFloat(_531.y);
        _557 = uintBitsToFloat(_531.z);
    }
    else
    {
        uint _539 = _175 * 2u;
        uvec2 _545 = uvec2(texelFetch(l_geomPositionBuffer, int(_539)).x, texelFetch(l_geomPositionBuffer, int(_539 + 1u)).x);
        uint _546 = _545.x;
        _555 = unpackHalf2x16(_546).x;
        _556 = unpackHalf2x16(_546 >> 16u).x;
        _557 = unpackHalf2x16(_545.y).x;
    }
    float _560 = (1.0 - hit._m0.x) - hit._m0.y;
    float _573 = ((uintBitsToFloat(_286.x) * hit._m0.x) + (uintBitsToFloat(_192.x) * _560)) + (uintBitsToFloat(_369.x) * hit._m0.y);
    float _574 = ((uintBitsToFloat(_286.y) * hit._m0.x) + (uintBitsToFloat(_192.y) * _560)) + (uintBitsToFloat(_369.y) * hit._m0.y);
    float _575 = ((uintBitsToFloat(_286.z) * hit._m0.x) + (uintBitsToFloat(_192.z) * _560)) + (uintBitsToFloat(_369.z) * hit._m0.y);
    float _616 = (_349 - _266) * 0.00048828125;
    float _618 = (_350 - _267) * 0.00048828125;
    float _621 = (_432 - _266) * 0.00048828125;
    float _622 = (_433 - _267) * 0.00048828125;
    float _644 = _517 - _479;
    float _645 = _518 - _480;
    float _646 = _519 - _481;
    float _649 = fma(_646, gl_ObjectToWorldEXT[2u].x, fma(_645, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _644));
    float _652 = fma(_646, gl_ObjectToWorldEXT[2u].y, fma(_645, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _644));
    float _655 = fma(_646, gl_ObjectToWorldEXT[2u].z, fma(_645, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _644));
    float _656 = _555 - _479;
    float _657 = _556 - _480;
    float _658 = _557 - _481;
    float _661 = fma(_658, gl_ObjectToWorldEXT[2u].x, fma(_657, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _656));
    float _664 = fma(_658, gl_ObjectToWorldEXT[2u].y, fma(_657, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _656));
    float _667 = fma(_658, gl_ObjectToWorldEXT[2u].z, fma(_657, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _656));
    float _668 = (((_349 * hit._m0.x) + (_266 * _560)) + (_432 * hit._m0.y)) * 0.00048828125;
    float _669 = (((_350 * hit._m0.x) + (_267 * _560)) + (_433 * hit._m0.y)) * 0.00048828125;
    float _673 = (((float(_227) * _560) + (-127.0)) + (float(_314) * hit._m0.x)) + (float(_397) * hit._m0.y);
    float _676 = (((float(_228) * _560) + (-127.0)) + (float(_315) * hit._m0.x)) + (float(_398) * hit._m0.y);
    float _679 = (((float(_229) * _560) + (-127.0)) + (float(_316) * hit._m0.x)) + (float(_399) * hit._m0.y);
    float _680 = _673 * 0.0078740157186985015869140625;
    float _682 = _676 * 0.0078740157186985015869140625;
    float _683 = _679 * 0.0078740157186985015869140625;
    float _696 = ((((float(_238 & 255u) * _560) + (-127.0)) + (float(_324 & 255u) * hit._m0.x)) + (float(_407 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((((float((_238 >> 8u) & 255u) * _560) + (-127.0)) + (float((_324 >> 8u) & 255u) * hit._m0.x)) + (float((_407 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _698 = ((((float((_238 >> 16u) & 255u) * _560) + (-127.0)) + (float((_324 >> 16u) & 255u) * hit._m0.x)) + (float((_407 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _699 = ((((float(_238 >> 24u) * _560) + (-127.0)) + (float(_324 >> 24u) * hit._m0.x)) + (float(_407 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _709 = ((_697 * _683) - (_698 * _682)) * _699;
    float _710 = ((_698 * _680) - (_696 * _683)) * _699;
    float _711 = ((_696 * _682) - (_697 * _680)) * _699;
    float _715 = inversesqrt(dot(vec3(_709, _710, _711), vec3(_709, _710, _711)));
    float _723 = cbMtdParam._m0[21u].y * cbPerFrame._m0[22u].x;
    uvec2 _758 = uvec2(textureSize(M_Planet_Melange_001_snp_0_Texture2D_1, int(0u)));
    bool _763 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _816;
    if (_763)
    {
        float _774 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _780 = (_667 * _652) - (_664 * _655);
        float _783 = (_661 * _655) - (_667 * _649);
        float _786 = (_664 * _649) - (_661 * _652);
        float _813 = ((log2((((float(_758.y) * 0.5) * float(_758.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_783 * _783) + (_786 * _786)) + (_780 * _780)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_774 * gl_WorldRayDirectionEXT.x, _774 * gl_WorldRayDirectionEXT.y, _774 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _816 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _820 = textureLod(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((((cbMtdParam._m0[30u].y * _723) + _668) * cbMtdParam._m0[30u].w) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[31u].x) * ((cbMtdParam._m0[30u].z * _723) + _669)) + cbTextureTilingScale._m0[1u].w), _816);
    float _822 = _820.x;
    float _838 = dot(vec3(0.0), vec3(_715 * _709, _715 * _710, _715 * _711));
    float _841 = dot(vec3(0.0), vec3(_696, _697, _698));
    float _844 = dot(vec3(0.0), vec3(_680, _682, _683));
    float _850 = inversesqrt(dot(vec3(_838, _841, _844), vec3(_838, _841, _844)));
    float _851 = _838 * 0.5;
    uvec2 _876 = uvec2(textureSize(M_Planet_Melange_001_snp_0_Texture2D_4, int(0u)));
    float _927;
    if (_763)
    {
        float _887 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _893 = (_667 * _652) - (_664 * _655);
        float _896 = (_661 * _655) - (_667 * _649);
        float _899 = (_664 * _649) - (_661 * _652);
        float _925 = ((log2((((float(_876.y) * 0.5) * float(_876.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_896 * _896) + (_899 * _899)) + (_893 * _893)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_887 * gl_WorldRayDirectionEXT.x, _887 * gl_WorldRayDirectionEXT.y, _887 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _927 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    }
    else
    {
        _927 = 0.0;
    }
    vec4 _930 = textureLod(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((((((_822 * cbMtdParam._m0[25u].w) + _668) + (cbMtdParam._m0[26u].y * _723)) + cbMtdParam._m0[27u].y) + ((_851 * cbMtdParam._m0[19u].w) * _850)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((((_822 * cbMtdParam._m0[26u].x) + _669) + (cbMtdParam._m0[26u].z * _723)) + cbMtdParam._m0[27u].z) + (((cbMtdParam._m0[19u].w * 0.5) * _841) * _850)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _927);
    uvec4 _939 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _943 = ((_939.x != 0u) ? ((((float((texelFetch(l_geomAttrib_0, int(((_276 + 8u) + _340) >> 2u)).x >> 16u) & 255u) * hit._m0.x) + (float((texelFetch(l_geomAttrib_0, int(((_181 + 8u) + _257) >> 2u)).x >> 16u) & 255u) * _560)) + (float((texelFetch(l_geomAttrib_0, int(((_359 + 8u) + _423) >> 2u)).x >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) : 1.0) * _930.w;
    uvec2 _982 = uvec2(textureSize(M_Planet_Melange_001_snp_0_Texture2D_0, int(0u)));
    float _1033;
    if (_763)
    {
        float _993 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _999 = (_667 * _652) - (_664 * _655);
        float _1002 = (_661 * _655) - (_667 * _649);
        float _1005 = (_664 * _649) - (_661 * _652);
        float _1031 = ((log2((((float(_982.y) * 0.5) * float(_982.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1002 * _1002) + (_1005 * _1005)) + (_999 * _999)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_993 * gl_WorldRayDirectionEXT.x, _993 * gl_WorldRayDirectionEXT.y, _993 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1033 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    }
    else
    {
        _1033 = 0.0;
    }
    vec4 _1036 = textureLod(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[31u].y + _668) * cbMtdParam._m0[29u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[31u].z + _669) * cbMtdParam._m0[29u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1033);
    float _1046 = (_1036.x + (-0.5)) * cbMtdParam._m0[20u].y;
    float _1047 = (_1036.y + (-0.5)) * cbMtdParam._m0[20u].y;
    uvec2 _1069 = uvec2(textureSize(M_Planet_Melange_001_snp_0_Texture2D_2, int(0u)));
    float _1120;
    if (_763)
    {
        float _1080 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1086 = (_667 * _652) - (_664 * _655);
        float _1089 = (_661 * _655) - (_667 * _649);
        float _1092 = (_664 * _649) - (_661 * _652);
        float _1118 = ((log2((((float(_1069.y) * 0.5) * float(_1069.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1089 * _1089) + (_1092 * _1092)) + (_1086 * _1086)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1080 * gl_WorldRayDirectionEXT.x, _1080 * gl_WorldRayDirectionEXT.y, _1080 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1120 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    }
    else
    {
        _1120 = 0.0;
    }
    vec4 _1122 = textureLod(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((((cbMtdParam._m0[29u].w * _822) + _668) + (cbMtdParam._m0[26u].w * _723)) + cbMtdParam._m0[25u].y) + ((_851 * cbMtdParam._m0[19u].z) * _850)) + _1046) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((((cbMtdParam._m0[30u].x * _822) + _669) + (cbMtdParam._m0[27u].x * _723)) + cbMtdParam._m0[25u].z) + (((cbMtdParam._m0[19u].z * 0.5) * _841) * _850)) + _1047) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1120);
    uvec2 _1172 = uvec2(textureSize(M_Planet_Melange_001_snp_0_Texture2D_3, int(0u)));
    float _1223;
    if (_763)
    {
        float _1183 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1189 = (_667 * _652) - (_664 * _655);
        float _1192 = (_661 * _655) - (_667 * _649);
        float _1195 = (_664 * _649) - (_661 * _652);
        float _1221 = ((log2((((float(_1172.y) * 0.5) * float(_1172.x)) * abs((_622 * _616) - (_621 * _618))) / (sqrt(((_1192 * _1192) + (_1195 * _1195)) + (_1189 * _1189)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1183 * gl_WorldRayDirectionEXT.x, _1183 * gl_WorldRayDirectionEXT.y, _1183 * gl_WorldRayDirectionEXT.z), vec3(_680, _682, _683))));
        _1223 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    }
    else
    {
        _1223 = 0.0;
    }
    vec4 _1225 = textureLod(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((((_1046 + _668) + (cbMtdParam._m0[31u].w * _822)) + (cbMtdParam._m0[32u].y * _723)) + cbMtdParam._m0[32u].w) + ((_851 * cbMtdParam._m0[22u].z) * _850)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((((_1047 + _669) + (cbMtdParam._m0[32u].x * _822)) + (cbMtdParam._m0[32u].z * _723)) + cbMtdParam._m0[33u].x) + (((cbMtdParam._m0[22u].z * 0.5) * _841) * _850)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1223);
    float _1230 = _1225.w;
    float _1238 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_680, _682, _683, 0.0)) - cbMtdParam._m0[21u].z;
    float _2025 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _1246 = exp2(log2(1.0 - (isnan(1.0) ? _2025 : (isnan(_2025) ? 1.0 : min(_2025, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[20u].w : (isnan(cbMtdParam._m0[20u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[20u].w, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[20u].x;
    float _1253 = inversesqrt(dot(vec3(_573, _574, _575), vec3(_573, _574, _575)));
    float _1254 = _1253 * _573;
    float _1255 = _1253 * _574;
    float _1256 = _1253 * _575;
    bool _1258 = _939.z != 0u;
    float _1265 = inversesqrt(dot(vec3(cbMtdParam._m0[33u].yzw), vec3(cbMtdParam._m0[33u].yzw)));
    float _1274 = _1258 ? g_sceneCB._m0[4u].x : (_1265 * cbMtdParam._m0[33u].y);
    float _1275 = _1258 ? g_sceneCB._m0[4u].y : (_1265 * cbMtdParam._m0[33u].z);
    float _1276 = _1258 ? g_sceneCB._m0[4u].z : (_1265 * cbMtdParam._m0[33u].w);
    float _1280 = inversesqrt(dot(vec3(_1274, _1275, _1276), vec3(_1274, _1275, _1276)));
    float _1281 = _1274 * _1280;
    float _1282 = _1275 * _1280;
    float _1283 = _1276 * _1280;
    float _1284 = dot(vec4(_1254, _1255, _1256, 0.0), vec4(_1281, _1282, _1283, 0.0));
    float _2041 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
    float _1287 = isnan(1.0) ? _2041 : (isnan(_2041) ? 1.0 : min(_2041, 1.0));
    float _1289 = 1.0 - (_1287 * _1287);
    float _1291 = (-0.0) - (_1289 - cbMtdParam._m0[23u].z);
    float _1293 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
    float _1314 = (-0.0) - (_1289 - cbMtdParam._m0[24u].y);
    float _1315 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
    float _1349 = cbMtdParam._m0[9u].w * _1122.x;
    float _1350 = cbMtdParam._m0[10u].x * _1122.y;
    float _1351 = cbMtdParam._m0[10u].y * _1122.z;
    float _1366 = (((cbMtdParam._m0[16u].w * _1225.x) - _1349) * _1230) + _1349;
    float _1367 = (((cbMtdParam._m0[17u].x * _1225.y) - _1350) * _1230) + _1350;
    float _1368 = (((cbMtdParam._m0[17u].y * _1225.z) - _1351) * _1230) + _1351;
    float _1391 = cbMtdParam._m0[14u].w - (cbMtdParam._m0[23u].y * cbMtdParam._m0[14u].w);
    float _1392 = cbMtdParam._m0[15u].x - (cbMtdParam._m0[23u].y * cbMtdParam._m0[15u].x);
    float _1393 = cbMtdParam._m0[15u].y - (cbMtdParam._m0[23u].y * cbMtdParam._m0[15u].y);
    float _1404 = inversesqrt(dot(vec3(_1281, _1282, _1283), vec3(_1281, _1282, _1283)));
    float _1419 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_1254, _1255, _1256, 0.0), vec4(_1404 * _1281, _1404 * _1282, _1404 * _1283, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2072 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    float _1421 = isnan(1.0) ? _2072 : (isnan(_2072) ? 1.0 : min(_2072, 1.0));
    float _1427 = exp2(log2(_1421 * 6.5) * 7.0);
    float _2083 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
    float _1429 = (isnan(1.0) ? _2083 : (isnan(_2083) ? 1.0 : min(_2083, 1.0))) + _1421;
    float _2094 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
    float _1430 = isnan(1.0) ? _2094 : (isnan(_2094) ? 1.0 : min(_2094, 1.0));
    float _1442 = ((_1430 * ((cbMtdParam._m0[13u].w - (cbMtdParam._m0[13u].w * cbMtdParam._m0[23u].y)) - _1391)) + _1391) * ((_943 * ((cbMtdParam._m0[17u].w * _930.x) - _1366)) + _1366);
    float _1443 = ((_1430 * ((cbMtdParam._m0[14u].x - _1392) - (cbMtdParam._m0[14u].x * cbMtdParam._m0[23u].y))) + _1392) * ((_943 * ((cbMtdParam._m0[18u].x * _930.y) - _1367)) + _1367);
    float _1444 = ((_1430 * ((cbMtdParam._m0[14u].y - _1393) - (cbMtdParam._m0[14u].y * cbMtdParam._m0[23u].y))) + _1393) * ((_943 * ((cbMtdParam._m0[18u].y * _930.z) - _1368)) + _1368);
    float _1445 = isnan(_1443) ? _1442 : (isnan(_1442) ? _1443 : max(_1442, _1443));
    float _1446 = isnan(_1444) ? _1445 : (isnan(_1445) ? _1444 : max(_1445, _1444));
    float _1449;
    float _1451;
    if (_1446 < 1.1920928955078125e-07)
    {
        _1449 = 0.0;
        _1451 = 0.0;
    }
    else
    {
        float _1475 = isnan(_1443) ? _1442 : (isnan(_1442) ? _1443 : min(_1442, _1443));
        float _1477 = _1446 - (isnan(_1444) ? _1475 : (isnan(_1475) ? _1444 : min(_1475, _1444)));
        float _1452 = _1477 / _1446;
        float frontier_phi_46_47_ladder;
        float frontier_phi_46_47_ladder_1;
        if (_1477 < 1.1920928955078125e-07)
        {
            frontier_phi_46_47_ladder = _1452;
            frontier_phi_46_47_ladder_1 = 0.0;
        }
        else
        {
            float _1753;
            if (_1446 == _1442)
            {
                _1753 = ((_1443 - _1444) / _1477) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_58_55_ladder;
                if (_1446 == _1443)
                {
                    frontier_phi_58_55_ladder = (((_1444 - _1442) / _1477) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_58_55_ladder = (((_1442 - _1443) / _1477) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1753 = frontier_phi_58_55_ladder;
            }
            float _1758 = (_1753 < 0.0) ? (_1753 + 1.0) : _1753;
            precise float _1450 = (_1758 - floor(_1758)) * 6.0;
            frontier_phi_46_47_ladder = _1452;
            frontier_phi_46_47_ladder_1 = _1450;
        }
        _1449 = frontier_phi_46_47_ladder_1;
        _1451 = frontier_phi_46_47_ladder;
    }
    float _1454 = cbMtdParam._m0[23u].w + _1446;
    float _2125 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
    float _1455 = isnan(1.0) ? _2125 : (isnan(_2125) ? 1.0 : min(_2125, 1.0));
    float _1457 = cbMtdParam._m0[24u].z + _1451;
    float _2136 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _1458 = isnan(1.0) ? _2136 : (isnan(_2136) ? 1.0 : min(_2136, 1.0));
    uint _1460 = uint(int(floor(_1449)));
    float _1462 = _1449 - float(int(_1460));
    float _1464 = (1.0 - _1458) * _1455;
    float _1467 = (1.0 - (_1462 * _1458)) * _1455;
    float _1471 = (1.0 - ((1.0 - _1462) * _1458)) * _1455;
    float _1479;
    float _1481;
    float _1482;
    if ((_1460 == 0u) || (_1460 == 6u))
    {
        _1479 = _1455;
        _1481 = _1471;
        _1482 = _1464;
    }
    else
    {
        float frontier_phi_48_49_ladder;
        float frontier_phi_48_49_ladder_1;
        float frontier_phi_48_49_ladder_2;
        if (_1460 == 1u)
        {
            frontier_phi_48_49_ladder = _1455;
            frontier_phi_48_49_ladder_1 = _1464;
            frontier_phi_48_49_ladder_2 = _1467;
        }
        else
        {
            float frontier_phi_48_49_ladder_53_ladder;
            float frontier_phi_48_49_ladder_53_ladder_1;
            float frontier_phi_48_49_ladder_53_ladder_2;
            if (_1460 == 2u)
            {
                frontier_phi_48_49_ladder_53_ladder = _1455;
                frontier_phi_48_49_ladder_53_ladder_1 = _1471;
                frontier_phi_48_49_ladder_53_ladder_2 = _1464;
            }
            else
            {
                float frontier_phi_48_49_ladder_53_ladder_57_ladder;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                float frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
                if (_1460 == 3u)
                {
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1467;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1455;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1464;
                }
                else
                {
                    bool _1822 = _1460 == 4u;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder = _1464;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_1 = _1822 ? _1455 : _1467;
                    frontier_phi_48_49_ladder_53_ladder_57_ladder_2 = _1822 ? _1471 : _1455;
                }
                frontier_phi_48_49_ladder_53_ladder = frontier_phi_48_49_ladder_53_ladder_57_ladder;
                frontier_phi_48_49_ladder_53_ladder_1 = frontier_phi_48_49_ladder_53_ladder_57_ladder_1;
                frontier_phi_48_49_ladder_53_ladder_2 = frontier_phi_48_49_ladder_53_ladder_57_ladder_2;
            }
            frontier_phi_48_49_ladder = frontier_phi_48_49_ladder_53_ladder;
            frontier_phi_48_49_ladder_1 = frontier_phi_48_49_ladder_53_ladder_1;
            frontier_phi_48_49_ladder_2 = frontier_phi_48_49_ladder_53_ladder_2;
        }
        _1479 = frontier_phi_48_49_ladder_2;
        _1481 = frontier_phi_48_49_ladder;
        _1482 = frontier_phi_48_49_ladder_1;
    }
    float _1491 = exp2(log2(_1479) * cbMtdParam._m0[24u].w);
    float _1492 = exp2(log2(_1481) * cbMtdParam._m0[24u].w);
    float _1493 = exp2(log2(_1482) * cbMtdParam._m0[24u].w);
    float _1506 = inversesqrt(dot(vec3(cbMtdParam._m0[34u].xyz), vec3(cbMtdParam._m0[34u].xyz)));
    float _1514 = (dot(vec4(_1254, _1255, _1256, 0.0), vec4(_1506 * cbMtdParam._m0[34u].x, _1506 * cbMtdParam._m0[34u].y, _1506 * cbMtdParam._m0[34u].z, 0.0)) + 1.0) * 0.5;
    float _2147 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
    float _1521 = cbMtdParam._m0[20u].z * exp2(log2(isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0))) * cbMtdParam._m0[21u].x);
    float _2158 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
    float _1522 = isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0));
    float _1529 = (cbMtdParam._m0[22u].w * exp2(log2(isnan(64.0) ? _1315 : (isnan(_1315) ? 64.0 : min(_1315, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[23u].x * exp2(log2(isnan(64.0) ? _1293 : (isnan(_1293) ? 64.0 : min(_1293, 64.0))) * 1.64999997615814208984375));
    float _1532 = ((_1522 * ((_1491 * cbMtdParam._m0[10u].w) - _1491)) + _1491) + (_1529 * cbMtdParam._m0[12u].w);
    float _1535 = ((_1522 * ((_1492 * cbMtdParam._m0[11u].x) - _1492)) + _1492) + (_1529 * cbMtdParam._m0[13u].x);
    float _1538 = ((_1522 * ((_1493 * cbMtdParam._m0[11u].y) - _1493)) + _1493) + (_1529 * cbMtdParam._m0[13u].y);
    bool _1544 = _939.y != 0u;
    float _1569 = inversesqrt(dot(vec3(_680, _682, _683), vec3(_680, _682, _683)));
    float _1570 = _1569 * _680;
    float _1571 = _1569 * _682;
    float _1572 = _1569 * _683;
    float _1584 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1585 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1586 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1590 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1591 = _1590 * gl_WorldRayDirectionEXT.x;
    float _1592 = _1590 * gl_WorldRayDirectionEXT.y;
    float _1593 = _1590 * gl_WorldRayDirectionEXT.z;
    float _1594 = (-0.0) - _1591;
    float _1595 = (-0.0) - _1592;
    float _1596 = (-0.0) - _1593;
    float _1602 = float(gl_LaunchIDEXT.x);
    float _1603 = float(gl_LaunchIDEXT.y);
    float _1606 = float(gl_LaunchSizeEXT.x);
    float _1620 = fract(fract(sin(dot(vec2(_1602 / _1606, _1603 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1633 = fract(fract(sin(dot(vec2((_1602 + 128.0) / _1606, (_1603 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1638 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1639 = _1638.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1639, _1638.w, _1639, vec3(_1584, _1585, _1586), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1707;
    float _1708;
    float _1709;
    if (_69._m0 == 0u)
    {
        float _1662 = g_sceneCB._m0[4u].x - _1591;
        float _1663 = g_sceneCB._m0[4u].y - _1592;
        float _1664 = g_sceneCB._m0[4u].z - _1593;
        float _1668 = inversesqrt(dot(vec3(_1662, _1663, _1664), vec3(_1662, _1663, _1664)));
        float _1672 = dot(vec3(_1570, _1571, _1572), vec3(g_sceneCB._m0[4u].xyz));
        float _2184 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1675 = isnan(1.0) ? _2184 : (isnan(_2184) ? 1.0 : min(_2184, 1.0));
        float _1676 = dot(vec3(_1570, _1571, _1572), vec3(_1594, _1595, _1596));
        float _2195 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
        float _1680 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1662 * _1668, _1663 * _1668, _1664 * _1668));
        float _2206 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1691 = (exp2(log2(1.0 - (isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1697 = (0.5 / ((_1675 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2195 : (isnan(_2195) ? 1.0 : min(_2195, 1.0))))) * _1675;
        float _2217 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1699 = (isnan(1.0) ? _2217 : (isnan(_2217) ? 1.0 : min(_2217, 1.0))) * 0.31831014156341552734375;
        _1707 = (_1691 * g_sceneCB._m0[5u].x) * _1699;
        _1708 = (_1691 * g_sceneCB._m0[5u].y) * _1699;
        _1709 = (_1691 * g_sceneCB._m0[5u].z) * _1699;
    }
    else
    {
        _1707 = 0.0;
        _1708 = 0.0;
        _1709 = 0.0;
    }
    bool _1711 = abs(_1571) < 0.89999997615814208984375;
    float _1713 = float(_1711);
    float _1714 = _1711 ? 0.0 : 1.0;
    float _1717 = (_1713 * _1572) - (_1714 * _1571);
    float _1718 = _1714 * _1570;
    float _1720 = (-0.0) - (_1570 * _1713);
    float _1724 = inversesqrt(dot(vec3(_1717, _1718, _1720), vec3(_1717, _1718, _1720)));
    float _1725 = _1717 * _1724;
    float _1726 = _1718 * _1724;
    float _1727 = _1724 * _1720;
    float _1730 = (_1726 * _1572) - (_1727 * _1571);
    float _1733 = (_1727 * _1570) - (_1725 * _1572);
    float _1736 = (_1725 * _1571) - (_1726 * _1570);
    float _1744;
    float _1770;
    float _1743 = 0.0;
    uint _1745 = 0u;
    float _1749;
    bool _1751;
    for (;;)
    {
        _1749 = (float(_1745) + _1620) * 0.03125;
        _1751 = _1745 == 0u;
        float frontier_phi_61_pred;
        if (_1751)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _1893;
            float _1894;
            uint _1896;
            _1893 = 0.0;
            _1894 = 0.5;
            _1896 = _1745;
            float _1771;
            for (;;)
            {
                _1771 = ((_1896 & 1u) != 0u) ? (_1894 + _1893) : _1893;
                uint _1897 = _1896 >> 1u;
                if (_1897 == 0u)
                {
                    break;
                }
                else
                {
                    _1893 = _1771;
                    _1894 *= 0.5;
                    _1896 = _1897;
                }
            }
            frontier_phi_61_pred = _1771;
        }
        _1770 = frontier_phi_61_pred;
        float _1772 = _1770 + _1633;
        float _1777 = sqrt(_1749);
        float _1778 = ((_1772 > 1.0) ? (_1772 + (-1.0)) : _1772) * 6.283185482025146484375;
        float _1781 = cos(_1778) * _1777;
        float _1783 = sin(_1778) * _1777;
        float _1785 = sqrt(1.0 - _1749);
        float _1798 = ((_1785 * _1570) + (_1781 * _1730)) + (_1783 * _1725);
        float _1799 = ((_1785 * _1571) + (_1781 * _1733)) + (_1783 * _1726);
        float _1800 = ((_1785 * _1572) + (_1781 * _1736)) + (_1783 * _1727);
        _68._m0 = 1u;
        uvec4 _1804 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1805 = _1804.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1805, _1804.w, _1805, vec3(_1584, _1585, _1586), 9.9999997473787516355514526367188e-05, vec3(_1798, _1799, _1800), 10000.0, 1);
        float _1811 = dot(vec3(_1570, _1571, _1572), vec3(_1798, _1799, _1800));
        float _2228 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
        float _1814 = isnan(1.0) ? _2228 : (isnan(_2228) ? 1.0 : min(_2228, 1.0));
        _1744 = ((float(_68._m0 == 0u) * _1814) / (_1814 * 0.3183098733425140380859375)) + _1743;
        uint _1746 = _1745 + 1u;
        if (_1746 == 32u)
        {
            break;
        }
        else
        {
            _1743 = _1744;
            _1745 = _1746;
            continue;
        }
    }
    float _1823 = _1744 * 0.009947183541953563690185546875;
    float _1828 = dot(vec3(_1591, _1592, _1593), vec3(_1570, _1571, _1572)) * 2.0;
    vec4 _1839 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1591 - (_1828 * _1570), _1592 - (_1828 * _1571), _1593 - (_1828 * _1572)), 4.0);
    float _1844 = dot(vec3(_1594, _1595, _1596), vec3(_1570, _1571, _1572));
    float _2239 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
    float _1853 = (exp2(log2(1.0 - (isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1862 = (((_1544 ? (_1246 * ((_1430 * (cbMtdParam._m0[11u].w - cbMtdParam._m0[15u].w)) + cbMtdParam._m0[15u].w)) : 0.0) + (isnan(4.0) ? _1532 : (isnan(_1532) ? 4.0 : min(_1532, 4.0)))) + _1707) + ((_1839.x * _1823) * _1853);
    float _1865 = (((_1544 ? (_1246 * ((_1430 * (cbMtdParam._m0[12u].x - cbMtdParam._m0[16u].x)) + cbMtdParam._m0[16u].x)) : 0.0) + (isnan(4.0) ? _1535 : (isnan(_1535) ? 4.0 : min(_1535, 4.0)))) + _1708) + ((_1839.y * _1823) * _1853);
    float _1868 = (((_1544 ? (_1246 * ((_1430 * (cbMtdParam._m0[12u].y - cbMtdParam._m0[16u].y)) + cbMtdParam._m0[16u].y)) : 0.0) + (isnan(4.0) ? _1538 : (isnan(_1538) ? 4.0 : min(_1538, 4.0)))) + _1709) + ((_1839.z * _1823) * _1853);
    float _2250 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
    float _2261 = isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0));
    float _2272 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
    bool _1876 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1887;
    _1887.x = _1876 ? ((_673 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2250 : (isnan(_2250) ? 1.0 : min(_2250, 1.0)));
    _1887.y = _1876 ? ((_676 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2261 : (isnan(_2261) ? 1.0 : min(_2261, 1.0)));
    _1887.z = _1876 ? ((_679 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2272 : (isnan(_2272) ? 1.0 : min(_2272, 1.0)));
    payload._m0 = _1887;
}


