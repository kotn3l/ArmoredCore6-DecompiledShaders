#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_10;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_24;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_7;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_8;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1553;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _159 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _160 >> 16u;
        }
        _165 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
        _168 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    bool _230 = _174 == 0u;
    uint _231;
    if (_230)
    {
        _231 = _207 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _207 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _207 + 12u;
        }
        _231 = frontier_phi_9_10_ladder;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int(((_179 + 4u) + (_175 ? (_231 + 4u) : _231)) >> 2u));
    uint _240 = _239.x;
    float _244 = float(int(uint(int(_240 << 16u) >> int(16u))));
    float _245 = float(int(uint(int(_240) >> int(16u))));
    uint _246 = _173 * _167;
    uint _247 = _246 + 12u;
    uint _268;
    uint _269;
    uint _270;
    uint _271;
    if (_178)
    {
        uvec4 _249 = texelFetch(l_geomAttrib_0, int(_247 >> 2u));
        uint _250 = _249.x;
        _268 = _250 & 255u;
        _269 = (_250 >> 8u) & 255u;
        _270 = (_250 >> 16u) & 255u;
        _271 = 16u;
    }
    else
    {
        uint _256 = _247 >> 2u;
        uvec2 _262 = uvec2(texelFetch(l_geomAttrib_0, int(_256)).x, texelFetch(l_geomAttrib_0, int(_256 + 1u)).x);
        uint _263 = _262.x;
        _268 = _263 & 65535u;
        _269 = _263 >> 16u;
        _270 = _262.y & 65535u;
        _271 = 20u;
    }
    uvec4 _277 = texelFetch(l_geomAttrib_0, int((_271 + _246) >> 2u));
    uint _278 = _277.x;
    uint _290;
    if (_230)
    {
        _290 = _271 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _271 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _271 + 12u;
        }
        _290 = frontier_phi_16_17_ladder;
    }
    uvec4 _298 = texelFetch(l_geomAttrib_0, int(((_246 + 4u) + (_175 ? (_290 + 4u) : _290)) >> 2u));
    uint _299 = _298.x;
    float _303 = float(int(uint(int(_299 << 16u) >> int(16u))));
    float _304 = float(int(uint(int(_299) >> int(16u))));
    uint _305 = _173 * _168;
    uint _306 = _305 + 12u;
    uint _327;
    uint _328;
    uint _329;
    uint _330;
    if (_178)
    {
        uvec4 _308 = texelFetch(l_geomAttrib_0, int(_306 >> 2u));
        uint _309 = _308.x;
        _327 = _309 & 255u;
        _328 = (_309 >> 8u) & 255u;
        _329 = (_309 >> 16u) & 255u;
        _330 = 16u;
    }
    else
    {
        uint _315 = _306 >> 2u;
        uvec2 _321 = uvec2(texelFetch(l_geomAttrib_0, int(_315)).x, texelFetch(l_geomAttrib_0, int(_315 + 1u)).x);
        uint _322 = _321.x;
        _327 = _322 & 65535u;
        _328 = _322 >> 16u;
        _329 = _321.y & 65535u;
        _330 = 20u;
    }
    uvec4 _336 = texelFetch(l_geomAttrib_0, int((_330 + _305) >> 2u));
    uint _337 = _336.x;
    uint _349;
    if (_230)
    {
        _349 = _330 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _330 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _330 + 12u;
        }
        _349 = frontier_phi_23_24_ladder;
    }
    uvec4 _357 = texelFetch(l_geomAttrib_0, int(((_305 + 4u) + (_175 ? (_349 + 4u) : _349)) >> 2u));
    uint _358 = _357.x;
    float _362 = float(int(uint(int(_358 << 16u) >> int(16u))));
    float _363 = float(int(uint(int(_358) >> int(16u))));
    bool _365 = _124.z == 0u;
    float _401;
    float _402;
    float _403;
    if (_365)
    {
        uint _368 = _165 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _165 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_365)
    {
        uint _406 = _167 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _167 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_365)
    {
        uint _444 = _168 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _168 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _482 = (1.0 - hit._m0.x) - hit._m0.y;
    float _516 = (_303 - _244) * 0.00048828125;
    float _518 = (_304 - _245) * 0.00048828125;
    float _521 = (_362 - _244) * 0.00048828125;
    float _522 = (_363 - _245) * 0.00048828125;
    float _544 = _439 - _401;
    float _545 = _440 - _402;
    float _546 = _441 - _403;
    float _549 = fma(_546, gl_ObjectToWorldEXT[2u].x, fma(_545, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _544));
    float _552 = fma(_546, gl_ObjectToWorldEXT[2u].y, fma(_545, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _544));
    float _555 = fma(_546, gl_ObjectToWorldEXT[2u].z, fma(_545, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _544));
    float _556 = _477 - _401;
    float _557 = _478 - _402;
    float _558 = _479 - _403;
    float _561 = fma(_558, gl_ObjectToWorldEXT[2u].x, fma(_557, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _556));
    float _564 = fma(_558, gl_ObjectToWorldEXT[2u].y, fma(_557, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _556));
    float _567 = fma(_558, gl_ObjectToWorldEXT[2u].z, fma(_557, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _556));
    float _568 = (((_303 * hit._m0.x) + (_244 * _482)) + (_362 * hit._m0.y)) * 0.00048828125;
    float _569 = (((_304 * hit._m0.x) + (_245 * _482)) + (_363 * hit._m0.y)) * 0.00048828125;
    float _573 = (((float(_204) * _482) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _576 = (((float(_205) * _482) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_328) * hit._m0.y);
    float _579 = (((float(_206) * _482) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_329) * hit._m0.y);
    float _580 = _573 * 0.0078740157186985015869140625;
    float _582 = _576 * 0.0078740157186985015869140625;
    float _583 = _579 * 0.0078740157186985015869140625;
    float _596 = ((((float(_216 & 255u) * _482) + (-127.0)) + (float(_278 & 255u) * hit._m0.x)) + (float(_337 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float((_216 >> 8u) & 255u) * _482) + (-127.0)) + (float((_278 >> 8u) & 255u) * hit._m0.x)) + (float((_337 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _598 = ((((float((_216 >> 16u) & 255u) * _482) + (-127.0)) + (float((_278 >> 16u) & 255u) * hit._m0.x)) + (float((_337 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _599 = ((((float(_216 >> 24u) * _482) + (-127.0)) + (float(_278 >> 24u) * hit._m0.x)) + (float(_337 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((_597 * _583) - (_598 * _582)) * _599;
    float _610 = ((_598 * _580) - (_596 * _583)) * _599;
    float _611 = ((_596 * _582) - (_597 * _580)) * _599;
    float _615 = inversesqrt(dot(vec3(_609, _610, _611), vec3(_609, _610, _611)));
    uvec2 _640 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_0, int(0u)));
    bool _645 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _698;
    if (_645)
    {
        float _656 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _662 = (_567 * _552) - (_564 * _555);
        float _665 = (_561 * _555) - (_567 * _549);
        float _668 = (_564 * _549) - (_561 * _552);
        float _695 = ((log2((((float(_640.y) * 0.5) * float(_640.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_665 * _665) + (_668 * _668)) + (_662 * _662)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_656 * gl_WorldRayDirectionEXT.x, _656 * gl_WorldRayDirectionEXT.y, _656 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _698 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    }
    else
    {
        _698 = 0.0;
    }
    vec4 _702 = textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _568) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _569) + cbTextureTilingScale._m0[0u].w), _698);
    float _706 = _702.z;
    float _713 = exp2(log2(_706 * cbMtdParam._m0[13u].x) * cbMtdParam._m0[12u].y);
    float _714 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _715 = isnan(1.0) ? _714 : (isnan(_714) ? 1.0 : min(_714, 1.0));
    float _734 = ((cbMtdParam._m0[10u].x - cbMtdParam._m0[9u].x) * _715) + cbMtdParam._m0[9u].x;
    float _735 = ((cbMtdParam._m0[10u].y - cbMtdParam._m0[9u].y) * _715) + cbMtdParam._m0[9u].y;
    float _736 = ((cbMtdParam._m0[10u].z - cbMtdParam._m0[9u].z) * _715) + cbMtdParam._m0[9u].z;
    uvec2 _748 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_10, int(0u)));
    float _799;
    if (_645)
    {
        float _759 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _765 = (_567 * _552) - (_564 * _555);
        float _768 = (_561 * _555) - (_567 * _549);
        float _771 = (_564 * _549) - (_561 * _552);
        float _797 = ((log2((((float(_748.y) * 0.5) * float(_748.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_768 * _768) + (_771 * _771)) + (_765 * _765)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_759 * gl_WorldRayDirectionEXT.x, _759 * gl_WorldRayDirectionEXT.y, _759 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _799 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    }
    else
    {
        _799 = 0.0;
    }
    float _808 = exp2(log2(textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _568) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _569) + cbTextureTilingScale._m0[1u].w), _799).x) * cbMtdParam._m0[13u].y);
    uvec2 _829 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_7, int(0u)));
    float _880;
    if (_645)
    {
        float _840 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _846 = (_567 * _552) - (_564 * _555);
        float _849 = (_561 * _555) - (_567 * _549);
        float _852 = (_564 * _549) - (_561 * _552);
        float _878 = ((log2((((float(_829.y) * 0.5) * float(_829.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_849 * _849) + (_852 * _852)) + (_846 * _846)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_840 * gl_WorldRayDirectionEXT.x, _840 * gl_WorldRayDirectionEXT.y, _840 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _880 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    }
    else
    {
        _880 = 0.0;
    }
    vec4 _883 = textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _568) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _569) + cbTextureTilingScale._m0[4u].w), _880);
    float _890 = (((_808 * (cbMtdParam._m0[11u].x - _734)) + _734) * 4.55000019073486328125) * _883.x;
    float _892 = (((_808 * (cbMtdParam._m0[11u].y - _735)) + _735) * 4.55000019073486328125) * _883.y;
    float _894 = (((_808 * (cbMtdParam._m0[11u].z - _736)) + _736) * 4.55000019073486328125) * _883.z;
    float _903 = ((cbMtdParam._m0[14u].y - cbMtdParam._m0[12u].z) * _715) + cbMtdParam._m0[12u].z;
    float _906 = ((cbMtdParam._m0[12u].w - _903) * _808) + _903;
    uvec2 _919 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_24, int(0u)));
    float _970;
    if (_645)
    {
        float _930 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _936 = (_567 * _552) - (_564 * _555);
        float _939 = (_561 * _555) - (_567 * _549);
        float _942 = (_564 * _549) - (_561 * _552);
        float _968 = ((log2((((float(_919.y) * 0.5) * float(_919.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_939 * _939) + (_942 * _942)) + (_936 * _936)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_930 * gl_WorldRayDirectionEXT.x, _930 * gl_WorldRayDirectionEXT.y, _930 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _970 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    }
    else
    {
        _970 = 0.0;
    }
    vec4 _972 = textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _568) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _569) + cbTextureTilingScale._m0[2u].w), _970);
    uvec2 _990 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_6, int(0u)));
    float _1041;
    if (_645)
    {
        float _1001 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1007 = (_567 * _552) - (_564 * _555);
        float _1010 = (_561 * _555) - (_567 * _549);
        float _1013 = (_564 * _549) - (_561 * _552);
        float _1039 = ((log2((((float(_990.y) * 0.5) * float(_990.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_1010 * _1010) + (_1013 * _1013)) + (_1007 * _1007)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1001 * gl_WorldRayDirectionEXT.x, _1001 * gl_WorldRayDirectionEXT.y, _1001 * gl_WorldRayDirectionEXT.z), vec3(_580, _582, _583))));
        _1041 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
    }
    else
    {
        _1041 = 0.0;
    }
    vec4 _1043 = textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _568) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _569) + cbTextureTilingScale._m0[3u].w), _1041);
    float _1045 = _1043.x;
    float _1046 = _1043.y;
    float _1049 = cbMtdParam._m0[12u].x + _1043.z;
    float _1052 = (((cbMtdParam._m0[14u].x + _972.z) - _1049) * _715) + _1049;
    uvec2 _1065 = uvec2(textureSize(C_Enemy_Wepon_snp_0_Texture2D_8, int(0u)));
    float _1069 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1070 = _1069 * gl_WorldRayDirectionEXT.x;
    float _1071 = _1069 * gl_WorldRayDirectionEXT.y;
    float _1072 = _1069 * gl_WorldRayDirectionEXT.z;
    float _1116;
    if (_645)
    {
        float _1082 = (_567 * _552) - (_564 * _555);
        float _1085 = (_561 * _555) - (_567 * _549);
        float _1088 = (_564 * _549) - (_561 * _552);
        float _1114 = ((log2((((float(_1065.y) * 0.5) * float(_1065.x)) * abs((_522 * _516) - (_521 * _518))) / (sqrt(((_1085 * _1085) + (_1088 * _1088)) + (_1082 * _1082)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1070, _1071, _1072), vec3(_580, _582, _583))));
        _1116 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    }
    else
    {
        _1116 = 0.0;
    }
    vec4 _1118 = textureLod(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _568) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _569) + cbTextureTilingScale._m0[5u].w), _1116);
    float _1127 = (((_1118.z - _1052) + cbMtdParam._m0[14u].z) * _808) + _1052;
    float _1132 = ((((_706 * 2.0) * _1127) - _1127) * cbMtdParam._m0[13u].z) + _1127;
    float _1143 = ((_972.x - _1045) * _715) + _1045;
    float _1144 = ((_972.y - _1046) * _715) + _1046;
    float _1153 = ((((_1118.x - _1143) * _808) + _1143) * 2.0) + (-1.0);
    float _1154 = ((((_1118.y - _1144) * _808) + _1144) * 2.0) + (-1.0);
    float _1155 = dot(vec2(_1153, _1154), vec2(_1153, _1154));
    float _1677 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
    float _1160 = sqrt(1.0 - (isnan(1.0) ? _1677 : (isnan(_1677) ? 1.0 : min(_1677, 1.0))));
    float _1163 = _1153 + (cbMtdParam._m0[13u].w * ((_702.x * 2.0) + (-1.0)));
    float _1164 = _1154 + (cbMtdParam._m0[13u].w * ((_702.y * 2.0) + (-1.0)));
    float _1167 = fma(_1160, _580, fma(_1164, _596, (_615 * _609) * _1163));
    float _1170 = fma(_1160, _582, fma(_1164, _597, (_615 * _610) * _1163));
    float _1173 = fma(_1160, _583, fma(_1164, _598, (_615 * _611) * _1163));
    float _1177 = inversesqrt(dot(vec3(_1167, _1170, _1173), vec3(_1167, _1170, _1173)));
    float _1178 = _1177 * _1167;
    float _1179 = _1177 * _1170;
    float _1180 = _1177 * _1173;
    float _1192 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1193 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1194 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1195 = (-0.0) - _1070;
    float _1197 = (-0.0) - _1071;
    float _1198 = (-0.0) - _1072;
    float _1204 = float(gl_LaunchIDEXT.x);
    float _1205 = float(gl_LaunchIDEXT.y);
    float _1208 = float(gl_LaunchSizeEXT.x);
    float _1222 = fract(fract(sin(dot(vec2(_1204 / _1208, _1205 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1235 = fract(fract(sin(dot(vec2((_1204 + 128.0) / _1208, (_1205 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1236 = 1.0 - _906;
    float _1237 = _1236 * _890;
    float _1238 = _1236 * _892;
    float _1239 = _1236 * _894;
    float _1244 = _906 * (_890 + (-0.039999999105930328369140625));
    float _1245 = _906 * (_892 + (-0.039999999105930328369140625));
    float _1246 = _906 * (_894 + (-0.039999999105930328369140625));
    float _1247 = _1244 + 0.039999999105930328369140625;
    float _1249 = _1245 + 0.039999999105930328369140625;
    float _1250 = _1246 + 0.039999999105930328369140625;
    _66._m0 = 1u;
    uvec4 _1260 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1261 = _1260.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1261, _1260.w, _1261, vec3(_1192, _1193, _1194), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1375;
    float _1376;
    float _1377;
    float _1378;
    float _1379;
    float _1380;
    if (_66._m0 == 0u)
    {
        float _1281 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1178, _1179, _1180));
        float _1688 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1284 = isnan(1.0) ? _1688 : (isnan(_1688) ? 1.0 : min(_1688, 1.0));
        float _1303 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1132) * 0.949999988079071044921875);
        float _1304 = _1303 * _1303;
        float _1305 = g_sceneCB._m0[4u].x - _1070;
        float _1306 = g_sceneCB._m0[4u].y - _1071;
        float _1307 = g_sceneCB._m0[4u].z - _1072;
        float _1311 = inversesqrt(dot(vec3(_1305, _1306, _1307), vec3(_1305, _1306, _1307)));
        float _1312 = _1311 * _1305;
        float _1313 = _1311 * _1306;
        float _1314 = _1311 * _1307;
        float _1315 = dot(vec3(_1178, _1179, _1180), vec3(g_sceneCB._m0[4u].xyz));
        float _1699 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1318 = isnan(1.0) ? _1699 : (isnan(_1699) ? 1.0 : min(_1699, 1.0));
        float _1319 = dot(vec3(_1178, _1179, _1180), vec3(_1195, _1197, _1198));
        float _1710 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
        float _1322 = isnan(1.0) ? _1710 : (isnan(_1710) ? 1.0 : min(_1710, 1.0));
        float _1323 = dot(vec3(_1178, _1179, _1180), vec3(_1312, _1313, _1314));
        float _1721 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1326 = isnan(1.0) ? _1721 : (isnan(_1721) ? 1.0 : min(_1721, 1.0));
        float _1327 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1312, _1313, _1314));
        float _1732 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = _1304 * _1304;
        float _1335 = ((_1326 * _1326) * (_1331 + (-1.0))) + 1.0;
        float _1344 = exp2(log2(1.0 - (isnan(1.0) ? _1732 : (isnan(_1732) ? 1.0 : min(_1732, 1.0)))) * 5.0);
        float _1355 = 1.0 - _1304;
        float _1366 = (0.5 / (((_1322 * ((_1318 * _1355) + _1304)) + 9.9999999392252902907785028219223e-09) + (((_1322 * _1355) + _1304) * _1318))) * _1318;
        float _1743 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1368 = (isnan(1.0) ? _1743 : (isnan(_1743) ? 1.0 : min(_1743, 1.0))) * (_1331 / ((_1335 * _1335) * 3.141590118408203125));
        _1375 = ((_1237 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1284;
        _1376 = ((_1238 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1284;
        _1377 = ((_1239 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1284;
        _1378 = (((_1344 * (0.959999978542327880859375 - _1244)) + _1247) * g_sceneCB._m0[5u].x) * _1368;
        _1379 = (((_1344 * (0.959999978542327880859375 - _1245)) + _1249) * g_sceneCB._m0[5u].y) * _1368;
        _1380 = (((_1344 * (0.959999978542327880859375 - _1246)) + _1250) * g_sceneCB._m0[5u].z) * _1368;
    }
    else
    {
        _1375 = 0.0;
        _1376 = 0.0;
        _1377 = 0.0;
        _1378 = 0.0;
        _1379 = 0.0;
        _1380 = 0.0;
    }
    bool _1382 = abs(_1179) < 0.89999997615814208984375;
    float _1384 = float(_1382);
    float _1385 = _1382 ? 0.0 : 1.0;
    float _1388 = (_1384 * _1180) - (_1385 * _1179);
    float _1389 = _1385 * _1178;
    float _1391 = (-0.0) - (_1178 * _1384);
    float _1395 = inversesqrt(dot(vec3(_1388, _1389, _1391), vec3(_1388, _1389, _1391)));
    float _1396 = _1388 * _1395;
    float _1397 = _1389 * _1395;
    float _1398 = _1395 * _1391;
    float _1401 = (_1397 * _1180) - (_1398 * _1179);
    float _1404 = (_1398 * _1178) - (_1396 * _1180);
    float _1407 = (_1396 * _1179) - (_1397 * _1178);
    float _1409;
    float _1417;
    float _1408 = 0.0;
    uint _1410 = 0u;
    float _1414;
    bool _1416;
    for (;;)
    {
        _1414 = (float(_1410) + _1222) * 0.03125;
        _1416 = _1410 == 0u;
        float frontier_phi_51_pred;
        if (_1416)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1558;
            float _1559;
            uint _1561;
            _1558 = 0.0;
            _1559 = 0.5;
            _1561 = _1410;
            float _1418;
            for (;;)
            {
                _1418 = ((_1561 & 1u) != 0u) ? (_1559 + _1558) : _1558;
                uint _1562 = _1561 >> 1u;
                if (_1562 == 0u)
                {
                    break;
                }
                else
                {
                    _1558 = _1418;
                    _1559 *= 0.5;
                    _1561 = _1562;
                }
            }
            frontier_phi_51_pred = _1418;
        }
        _1417 = frontier_phi_51_pred;
        float _1419 = _1417 + _1235;
        float _1423 = sqrt(_1414);
        float _1424 = ((_1419 > 1.0) ? (_1419 + (-1.0)) : _1419) * 6.283185482025146484375;
        float _1427 = cos(_1424) * _1423;
        float _1429 = sin(_1424) * _1423;
        float _1431 = sqrt(1.0 - _1414);
        float _1444 = ((_1431 * _1178) + (_1427 * _1401)) + (_1429 * _1396);
        float _1445 = ((_1431 * _1179) + (_1427 * _1404)) + (_1429 * _1397);
        float _1446 = ((_1431 * _1180) + (_1427 * _1407)) + (_1429 * _1398);
        _65._m0 = 1u;
        uvec4 _1450 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1451 = _1450.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1451, _1450.w, _1451, vec3(_1192, _1193, _1194), 9.9999997473787516355514526367188e-05, vec3(_1444, _1445, _1446), 10000.0, 1);
        float _1457 = dot(vec3(_1178, _1179, _1180), vec3(_1444, _1445, _1446));
        float _1754 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1460 = isnan(1.0) ? _1754 : (isnan(_1754) ? 1.0 : min(_1754, 1.0));
        _1409 = ((float(_65._m0 == 0u) * _1460) / (_1460 * 0.3183098733425140380859375)) + _1408;
        uint _1411 = _1410 + 1u;
        if (_1411 == 32u)
        {
            break;
        }
        else
        {
            _1408 = _1409;
            _1410 = _1411;
            continue;
        }
    }
    float _1468 = _1409 * 0.009947183541953563690185546875;
    float _1473 = dot(vec3(_1070, _1071, _1072), vec3(_1178, _1179, _1180)) * 2.0;
    vec4 _1487 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1070 - (_1473 * _1178), _1071 - (_1473 * _1179), _1072 - (_1473 * _1180)), 4.0 - (_1132 * 4.0));
    float _1492 = dot(vec3(_1195, _1197, _1198), vec3(_1178, _1179, _1180));
    float _1765 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
    float _1502 = exp2(log2(1.0 - (isnan(1.0) ? _1765 : (isnan(_1765) ? 1.0 : min(_1765, 1.0)))) * 5.0);
    vec4 _1514 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1178, _1179, _1180), 0.0);
    float _1525 = (_1378 + _1375) + (((_1514.x * _1237) + (((_1502 * (0.959999978542327880859375 - _1244)) + _1247) * _1487.x)) * _1468);
    float _1529 = (_1379 + _1376) + (((_1514.y * _1238) + (((_1502 * (0.959999978542327880859375 - _1245)) + _1249) * _1487.y)) * _1468);
    float _1533 = (_1380 + _1377) + (((_1514.z * _1239) + (((_1502 * (0.959999978542327880859375 - _1246)) + _1250) * _1487.z)) * _1468);
    float _1776 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
    float _1787 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
    float _1798 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
    bool _1541 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1552;
    _1552.x = _1541 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1776 : (isnan(_1776) ? 1.0 : min(_1776, 1.0)));
    _1552.y = _1541 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1787 : (isnan(_1787) ? 1.0 : min(_1787, 1.0)));
    _1552.z = _1541 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1798 : (isnan(_1798) ? 1.0 : min(_1798, 1.0)));
    payload._m0 = _1552;
}


