#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[25];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _2196;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    uint _185 = _133.w;
    bool _187 = _184 || (_185 == 0u);
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    uint _237 = _181.y;
    bool _238 = _183 == 0u;
    uint _241 = _238 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _244 = _184 ? (_241 + 4u) : _241;
    uint _245 = _237 * _174;
    uvec4 _256 = texelFetch(l_geomAttrib_1, int(((_245 + 8u) + _244) >> 2u));
    uint _257 = _256.x;
    float _261 = float(int(uint(int(_257 << 16u) >> int(16u))));
    float _262 = float(int(uint(int(_257) >> int(16u))));
    uint _263 = _182 * _176;
    uint _264 = _263 + 12u;
    uint _285;
    uint _286;
    uint _287;
    uint _288;
    if (_187)
    {
        uvec4 _266 = texelFetch(l_geomAttrib_0, int(_264 >> 2u));
        uint _267 = _266.x;
        _285 = _267 & 255u;
        _286 = (_267 >> 8u) & 255u;
        _287 = (_267 >> 16u) & 255u;
        _288 = 16u;
    }
    else
    {
        uint _273 = _264 >> 2u;
        uvec2 _279 = uvec2(texelFetch(l_geomAttrib_0, int(_273)).x, texelFetch(l_geomAttrib_0, int(_273 + 1u)).x);
        uint _280 = _279.x;
        _285 = _280 & 65535u;
        _286 = _280 >> 16u;
        _287 = _279.y & 65535u;
        _288 = 20u;
    }
    uvec4 _294 = texelFetch(l_geomAttrib_0, int((_288 + _263) >> 2u));
    uint _295 = _294.x;
    uint _308 = _238 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _310 = _184 ? (_308 + 4u) : _308;
    uint _311 = _237 * _176;
    uvec4 _321 = texelFetch(l_geomAttrib_1, int(((_311 + 8u) + _310) >> 2u));
    uint _322 = _321.x;
    float _326 = float(int(uint(int(_322 << 16u) >> int(16u))));
    float _327 = float(int(uint(int(_322) >> int(16u))));
    uint _328 = _182 * _177;
    uint _329 = _328 + 12u;
    uint _350;
    uint _351;
    uint _352;
    uint _353;
    if (_187)
    {
        uvec4 _331 = texelFetch(l_geomAttrib_0, int(_329 >> 2u));
        uint _332 = _331.x;
        _350 = _332 & 255u;
        _351 = (_332 >> 8u) & 255u;
        _352 = (_332 >> 16u) & 255u;
        _353 = 16u;
    }
    else
    {
        uint _338 = _329 >> 2u;
        uvec2 _344 = uvec2(texelFetch(l_geomAttrib_0, int(_338)).x, texelFetch(l_geomAttrib_0, int(_338 + 1u)).x);
        uint _345 = _344.x;
        _350 = _345 & 65535u;
        _351 = _345 >> 16u;
        _352 = _344.y & 65535u;
        _353 = 20u;
    }
    uvec4 _359 = texelFetch(l_geomAttrib_0, int((_353 + _328) >> 2u));
    uint _360 = _359.x;
    uint _373 = _238 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _375 = _184 ? (_373 + 4u) : _373;
    uint _376 = _237 * _177;
    uvec4 _386 = texelFetch(l_geomAttrib_1, int(((_376 + 8u) + _375) >> 2u));
    uint _387 = _386.x;
    float _391 = float(int(uint(int(_387 << 16u) >> int(16u))));
    float _392 = float(int(uint(int(_387) >> int(16u))));
    bool _394 = _133.z == 0u;
    float _430;
    float _431;
    float _432;
    if (_394)
    {
        uint _397 = _174 * 3u;
        uvec3 _406 = uvec3(texelFetch(l_geomPositionBuffer, int(_397)).x, texelFetch(l_geomPositionBuffer, int(_397 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_397 + 2u)).x);
        _430 = uintBitsToFloat(_406.x);
        _431 = uintBitsToFloat(_406.y);
        _432 = uintBitsToFloat(_406.z);
    }
    else
    {
        uint _414 = _174 * 2u;
        uvec2 _420 = uvec2(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x);
        uint _421 = _420.x;
        _430 = unpackHalf2x16(_421).x;
        _431 = unpackHalf2x16(_421 >> 16u).x;
        _432 = unpackHalf2x16(_420.y).x;
    }
    float _468;
    float _469;
    float _470;
    if (_394)
    {
        uint _435 = _176 * 3u;
        uvec3 _444 = uvec3(texelFetch(l_geomPositionBuffer, int(_435)).x, texelFetch(l_geomPositionBuffer, int(_435 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_435 + 2u)).x);
        _468 = uintBitsToFloat(_444.x);
        _469 = uintBitsToFloat(_444.y);
        _470 = uintBitsToFloat(_444.z);
    }
    else
    {
        uint _452 = _176 * 2u;
        uvec2 _458 = uvec2(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x);
        uint _459 = _458.x;
        _468 = unpackHalf2x16(_459).x;
        _469 = unpackHalf2x16(_459 >> 16u).x;
        _470 = unpackHalf2x16(_458.y).x;
    }
    float _506;
    float _507;
    float _508;
    if (_394)
    {
        uint _473 = _177 * 3u;
        uvec3 _482 = uvec3(texelFetch(l_geomPositionBuffer, int(_473)).x, texelFetch(l_geomPositionBuffer, int(_473 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_473 + 2u)).x);
        _506 = uintBitsToFloat(_482.x);
        _507 = uintBitsToFloat(_482.y);
        _508 = uintBitsToFloat(_482.z);
    }
    else
    {
        uint _490 = _177 * 2u;
        uvec2 _496 = uvec2(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x);
        uint _497 = _496.x;
        _506 = unpackHalf2x16(_497).x;
        _507 = unpackHalf2x16(_497 >> 16u).x;
        _508 = unpackHalf2x16(_496.y).x;
    }
    float _511 = (1.0 - hit._m0.x) - hit._m0.y;
    float _552 = (_326 - _261) * 0.00048828125;
    float _554 = (_327 - _262) * 0.00048828125;
    float _557 = (_391 - _261) * 0.00048828125;
    float _558 = (_392 - _262) * 0.00048828125;
    float _580 = _468 - _430;
    float _581 = _469 - _431;
    float _582 = _470 - _432;
    float _585 = fma(_582, gl_ObjectToWorldEXT[2u].x, fma(_581, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _580));
    float _588 = fma(_582, gl_ObjectToWorldEXT[2u].y, fma(_581, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _580));
    float _591 = fma(_582, gl_ObjectToWorldEXT[2u].z, fma(_581, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _580));
    float _592 = _506 - _430;
    float _593 = _507 - _431;
    float _594 = _508 - _432;
    float _597 = fma(_594, gl_ObjectToWorldEXT[2u].x, fma(_593, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _592));
    float _600 = fma(_594, gl_ObjectToWorldEXT[2u].y, fma(_593, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _592));
    float _603 = fma(_594, gl_ObjectToWorldEXT[2u].z, fma(_593, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _592));
    float _604 = (((_326 * hit._m0.x) + (_261 * _511)) + (_391 * hit._m0.y)) * 0.00048828125;
    float _605 = (((_327 * hit._m0.x) + (_262 * _511)) + (_392 * hit._m0.y)) * 0.00048828125;
    float _609 = (((float(_213) * _511) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _612 = (((float(_214) * _511) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _615 = (((float(_215) * _511) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_352) * hit._m0.y);
    float _616 = _609 * 0.0078740157186985015869140625;
    float _618 = _612 * 0.0078740157186985015869140625;
    float _619 = _615 * 0.0078740157186985015869140625;
    float _632 = ((((float(_225 & 255u) * _511) + (-127.0)) + (float(_295 & 255u) * hit._m0.x)) + (float(_360 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _633 = ((((float((_225 >> 8u) & 255u) * _511) + (-127.0)) + (float((_295 >> 8u) & 255u) * hit._m0.x)) + (float((_360 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _634 = ((((float((_225 >> 16u) & 255u) * _511) + (-127.0)) + (float((_295 >> 16u) & 255u) * hit._m0.x)) + (float((_360 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _635 = ((((float(_225 >> 24u) * _511) + (-127.0)) + (float(_295 >> 24u) * hit._m0.x)) + (float(_360 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _645 = ((_633 * _619) - (_634 * _618)) * _635;
    float _646 = ((_634 * _616) - (_632 * _619)) * _635;
    float _647 = ((_632 * _618) - (_633 * _616)) * _635;
    float _651 = inversesqrt(dot(vec3(_645, _646, _647), vec3(_645, _646, _647)));
    uvec2 _680 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11, int(0u)));
    bool _685 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _738;
    if (_685)
    {
        float _696 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _702 = (_603 * _588) - (_600 * _591);
        float _705 = (_597 * _591) - (_603 * _585);
        float _708 = (_600 * _585) - (_597 * _588);
        float _735 = ((log2((((float(_680.y) * 0.5) * float(_680.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_705 * _705) + (_708 * _708)) + (_702 * _702)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_696 * gl_WorldRayDirectionEXT.x, _696 * gl_WorldRayDirectionEXT.y, _696 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _738 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    }
    else
    {
        _738 = 0.0;
    }
    vec4 _742 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _604) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _605) + cbTextureTilingScale._m0[4u].w), _738);
    uvec2 _769 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8, int(0u)));
    float _820;
    if (_685)
    {
        float _780 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _786 = (_603 * _588) - (_600 * _591);
        float _789 = (_597 * _591) - (_603 * _585);
        float _792 = (_600 * _585) - (_597 * _588);
        float _818 = ((log2((((float(_769.y) * 0.5) * float(_769.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_789 * _789) + (_792 * _792)) + (_786 * _786)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_780 * gl_WorldRayDirectionEXT.x, _780 * gl_WorldRayDirectionEXT.y, _780 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _820 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    }
    else
    {
        _820 = 0.0;
    }
    vec4 _822 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _604) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _605) + cbTextureTilingScale._m0[13u].w), _820);
    uvec2 _848 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1, int(0u)));
    float _899;
    if (_685)
    {
        float _859 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _865 = (_603 * _588) - (_600 * _591);
        float _868 = (_597 * _591) - (_603 * _585);
        float _871 = (_600 * _585) - (_597 * _588);
        float _897 = ((log2((((float(_848.y) * 0.5) * float(_848.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_868 * _868) + (_871 * _871)) + (_865 * _865)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_859 * gl_WorldRayDirectionEXT.x, _859 * gl_WorldRayDirectionEXT.y, _859 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _899 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    }
    else
    {
        _899 = 0.0;
    }
    vec4 _901 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _604) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _605) + cbTextureTilingScale._m0[0u].w), _899);
    float _906 = _901.x * cbMatDynParam._m0[17u].x;
    float _907 = _901.y * cbMatDynParam._m0[17u].y;
    float _908 = _901.z * cbMatDynParam._m0[17u].z;
    uvec2 _926 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2, int(0u)));
    float _977;
    if (_685)
    {
        float _937 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _943 = (_603 * _588) - (_600 * _591);
        float _946 = (_597 * _591) - (_603 * _585);
        float _949 = (_600 * _585) - (_597 * _588);
        float _975 = ((log2((((float(_926.y) * 0.5) * float(_926.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_946 * _946) + (_949 * _949)) + (_943 * _943)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_937 * gl_WorldRayDirectionEXT.x, _937 * gl_WorldRayDirectionEXT.y, _937 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _977 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    }
    else
    {
        _977 = 0.0;
    }
    vec4 _979 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _604) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _605) + cbTextureTilingScale._m0[7u].w), _977);
    uvec2 _998 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0, int(0u)));
    float _1049;
    if (_685)
    {
        float _1009 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1015 = (_603 * _588) - (_600 * _591);
        float _1018 = (_597 * _591) - (_603 * _585);
        float _1021 = (_600 * _585) - (_597 * _588);
        float _1047 = ((log2((((float(_998.y) * 0.5) * float(_998.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1018 * _1018) + (_1021 * _1021)) + (_1015 * _1015)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1009 * gl_WorldRayDirectionEXT.x, _1009 * gl_WorldRayDirectionEXT.y, _1009 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1049 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
    }
    else
    {
        _1049 = 0.0;
    }
    vec4 _1052 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _604) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _605) + cbTextureTilingScale._m0[2u].w), _1049);
    float _1062 = (((((float(texelFetch(l_geomAttrib_1, int((_310 + _311) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_1, int((_244 + _245) >> 2u)).x >> 24u) * _511)) + (float(texelFetch(l_geomAttrib_1, int((_375 + _376) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[21u].y) + 1.0;
    float _1063 = (0.5 - ((cbMatDynParam._m0[21u].x * 0.5) * (1.0099999904632568359375 - _1052.x))) * _1062;
    float _2303 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _1064 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
    float _1071 = (_1064 * ((_979.x * cbMatDynParam._m0[18u].x) - _906)) + _906;
    float _1072 = (_1064 * ((_979.y * cbMatDynParam._m0[18u].y) - _907)) + _907;
    float _1073 = (_1064 * ((_979.z * cbMatDynParam._m0[18u].z) - _908)) + _908;
    float _1078 = (0.5 - ((cbMatDynParam._m0[23u].z * 0.5) * (1.0099999904632568359375 - _1052.y))) * _1062;
    float _2314 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1079 = isnan(1.0) ? _2314 : (isnan(_2314) ? 1.0 : min(_2314, 1.0));
    float _1086 = (((_822.x * cbMatDynParam._m0[19u].x) - _1071) * _1079) + _1071;
    float _1087 = (((_822.y * cbMatDynParam._m0[19u].y) - _1072) * _1079) + _1072;
    float _1088 = (((_822.z * cbMatDynParam._m0[19u].z) - _1073) * _1079) + _1073;
    float _1093 = (0.5 - ((cbMatDynParam._m0[23u].w * 0.5) * (1.0099999904632568359375 - _1052.z))) * _1062;
    float _2325 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
    float _1094 = isnan(1.0) ? _2325 : (isnan(_2325) ? 1.0 : min(_2325, 1.0));
    float _1101 = (((_742.x * cbMatDynParam._m0[20u].x) - _1086) * _1094) + _1086;
    float _1102 = (((_742.y * cbMatDynParam._m0[20u].y) - _1087) * _1094) + _1087;
    float _1103 = (((_742.z * cbMatDynParam._m0[20u].z) - _1088) * _1094) + _1088;
    uvec2 _1116 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10, int(0u)));
    float _1167;
    if (_685)
    {
        float _1127 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1133 = (_603 * _588) - (_600 * _591);
        float _1136 = (_597 * _591) - (_603 * _585);
        float _1139 = (_600 * _585) - (_597 * _588);
        float _1165 = ((log2((((float(_1116.y) * 0.5) * float(_1116.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1136 * _1136) + (_1139 * _1139)) + (_1133 * _1133)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1127 * gl_WorldRayDirectionEXT.x, _1127 * gl_WorldRayDirectionEXT.y, _1127 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1167 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
    }
    else
    {
        _1167 = 0.0;
    }
    float _1173 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_10, SS_SpecularMap), vec2((cbTextureTilingScale._m0[3u].x * _604) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _605) + cbTextureTilingScale._m0[3u].w), _1167).x + cbMatDynParam._m0[23u].x;
    float _1174 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
    uvec2 _1191 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3, int(0u)));
    float _1242;
    if (_685)
    {
        float _1202 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1208 = (_603 * _588) - (_600 * _591);
        float _1211 = (_597 * _591) - (_603 * _585);
        float _1214 = (_600 * _585) - (_597 * _588);
        float _1240 = ((log2((((float(_1191.y) * 0.5) * float(_1191.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1211 * _1211) + (_1214 * _1214)) + (_1208 * _1208)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1202 * gl_WorldRayDirectionEXT.x, _1202 * gl_WorldRayDirectionEXT.y, _1202 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1242 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    }
    else
    {
        _1242 = 0.0;
    }
    float _1247 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_3, SS_SpecularMap), vec2((cbTextureTilingScale._m0[8u].x * _604) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _605) + cbTextureTilingScale._m0[8u].w), _1242).x + cbMatDynParam._m0[22u].w;
    float _1248 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
    uvec2 _1263 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4, int(0u)));
    float _1314;
    if (_685)
    {
        float _1274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1280 = (_603 * _588) - (_600 * _591);
        float _1283 = (_597 * _591) - (_603 * _585);
        float _1286 = (_600 * _585) - (_597 * _588);
        float _1312 = ((log2((((float(_1263.y) * 0.5) * float(_1263.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1283 * _1283) + (_1286 * _1286)) + (_1280 * _1280)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1274 * gl_WorldRayDirectionEXT.x, _1274 * gl_WorldRayDirectionEXT.y, _1274 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1314 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
    }
    else
    {
        _1314 = 0.0;
    }
    float _1319 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_4, SS_SpecularMap), vec2((cbTextureTilingScale._m0[9u].x * _604) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _605) + cbTextureTilingScale._m0[9u].w), _1314).x + cbMatDynParam._m0[22u].y;
    float _1320 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
    float _1321 = isnan(1.0) ? _1320 : (isnan(_1320) ? 1.0 : min(_1320, 1.0));
    uvec2 _1335 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9, int(0u)));
    float _1386;
    if (_685)
    {
        float _1346 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1352 = (_603 * _588) - (_600 * _591);
        float _1355 = (_597 * _591) - (_603 * _585);
        float _1358 = (_600 * _585) - (_597 * _588);
        float _1384 = ((log2((((float(_1335.y) * 0.5) * float(_1335.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1355 * _1355) + (_1358 * _1358)) + (_1352 * _1352)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1346 * gl_WorldRayDirectionEXT.x, _1346 * gl_WorldRayDirectionEXT.y, _1346 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1386 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
    }
    else
    {
        _1386 = 0.0;
    }
    float _1391 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_9, SS_SpecularMap), vec2((cbTextureTilingScale._m0[14u].x * _604) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _605) + cbTextureTilingScale._m0[14u].w), _1386).x + cbMatDynParam._m0[22u].z;
    float _1392 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
    float _1396 = (_1064 * ((isnan(1.0) ? _1392 : (isnan(_1392) ? 1.0 : min(_1392, 1.0))) - _1321)) + _1321;
    float _1399 = (((isnan(1.0) ? _1248 : (isnan(_1248) ? 1.0 : min(_1248, 1.0))) - _1396) * _1079) + _1396;
    float _1402 = (((isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0))) - _1399) * _1094) + _1399;
    uvec2 _1417 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16, int(0u)));
    float _1468;
    if (_685)
    {
        float _1428 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1434 = (_603 * _588) - (_600 * _591);
        float _1437 = (_597 * _591) - (_603 * _585);
        float _1440 = (_600 * _585) - (_597 * _588);
        float _1466 = ((log2((((float(_1417.y) * 0.5) * float(_1417.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1437 * _1437) + (_1440 * _1440)) + (_1434 * _1434)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1428 * gl_WorldRayDirectionEXT.x, _1428 * gl_WorldRayDirectionEXT.y, _1428 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1468 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
    }
    else
    {
        _1468 = 0.0;
    }
    vec4 _1471 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _604) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _605) + cbTextureTilingScale._m0[6u].w), _1468);
    uvec2 _1490 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15, int(0u)));
    float _1541;
    if (_685)
    {
        float _1501 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1507 = (_603 * _588) - (_600 * _591);
        float _1510 = (_597 * _591) - (_603 * _585);
        float _1513 = (_600 * _585) - (_597 * _588);
        float _1539 = ((log2((((float(_1490.y) * 0.5) * float(_1490.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1510 * _1510) + (_1513 * _1513)) + (_1507 * _1507)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1501 * gl_WorldRayDirectionEXT.x, _1501 * gl_WorldRayDirectionEXT.y, _1501 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1541 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
    }
    else
    {
        _1541 = 0.0;
    }
    vec4 _1543 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _604) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _605) + cbTextureTilingScale._m0[5u].w), _1541);
    uvec2 _1562 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5, int(0u)));
    float _1613;
    if (_685)
    {
        float _1573 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1579 = (_603 * _588) - (_600 * _591);
        float _1582 = (_597 * _591) - (_603 * _585);
        float _1585 = (_600 * _585) - (_597 * _588);
        float _1611 = ((log2((((float(_1562.y) * 0.5) * float(_1562.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1582 * _1582) + (_1585 * _1585)) + (_1579 * _1579)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1573 * gl_WorldRayDirectionEXT.x, _1573 * gl_WorldRayDirectionEXT.y, _1573 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1613 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
    }
    else
    {
        _1613 = 0.0;
    }
    vec4 _1615 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _604) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _605) + cbTextureTilingScale._m0[10u].w), _1613);
    float _1617 = _1615.x;
    float _1618 = _1615.y;
    float _1620 = _1615.z * cbMatDynParam._m0[22u].x;
    uvec2 _1634 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6, int(0u)));
    float _1685;
    if (_685)
    {
        float _1645 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1651 = (_603 * _588) - (_600 * _591);
        float _1654 = (_597 * _591) - (_603 * _585);
        float _1657 = (_600 * _585) - (_597 * _588);
        float _1683 = ((log2((((float(_1634.y) * 0.5) * float(_1634.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1654 * _1654) + (_1657 * _1657)) + (_1651 * _1651)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1645 * gl_WorldRayDirectionEXT.x, _1645 * gl_WorldRayDirectionEXT.y, _1645 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1685 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
    }
    else
    {
        _1685 = 0.0;
    }
    vec4 _1687 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _604) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _605) + cbTextureTilingScale._m0[11u].w), _1685);
    float _1695 = (((_1687.z * cbMatDynParam._m0[21u].w) - _1620) * _1064) + _1620;
    float _1698 = (((_1543.z * cbMatDynParam._m0[21u].z) - _1695) * _1079) + _1695;
    float _1701 = (((_1471.z * cbMatDynParam._m0[24u].x) - _1698) * _1094) + _1698;
    uvec2 _1713 = uvec2(textureSize(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7, int(0u)));
    float _1717 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1718 = _1717 * gl_WorldRayDirectionEXT.x;
    float _1719 = _1717 * gl_WorldRayDirectionEXT.y;
    float _1720 = _1717 * gl_WorldRayDirectionEXT.z;
    float _1764;
    if (_685)
    {
        float _1730 = (_603 * _588) - (_600 * _591);
        float _1733 = (_597 * _591) - (_603 * _585);
        float _1736 = (_600 * _585) - (_597 * _588);
        float _1762 = ((log2((((float(_1713.y) * 0.5) * float(_1713.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1733 * _1733) + (_1736 * _1736)) + (_1730 * _1730)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1718, _1719, _1720), vec3(_616, _618, _619))));
        _1764 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
    }
    else
    {
        _1764 = 0.0;
    }
    vec4 _1766 = textureLod(sampler2D(MaterialBasedBlendShader_Metalic_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _604) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _605) + cbTextureTilingScale._m0[12u].w), _1764);
    float _1779 = (_1064 * (_1687.x - _1617)) + _1617;
    float _1780 = (_1064 * (_1687.y - _1618)) + _1618;
    float _1785 = ((_1543.x - _1779) * _1079) + _1779;
    float _1786 = ((_1543.y - _1780) * _1079) + _1780;
    float _1795 = ((((_1471.x - _1785) * _1094) + _1785) * 2.0) + (-1.0);
    float _1796 = ((((_1471.y - _1786) * _1094) + _1786) * 2.0) + (-1.0);
    float _1797 = dot(vec2(_1795, _1796), vec2(_1795, _1796));
    float _2421 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
    float _1802 = sqrt(1.0 - (isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0))));
    float _1806 = _1795 + (cbMatDynParam._m0[23u].y * ((_1766.x * 2.0) + (-1.0)));
    float _1807 = _1796 + (cbMatDynParam._m0[23u].y * ((_1766.y * 2.0) + (-1.0)));
    float _1810 = fma(_1802, _616, fma(_1807, _632, (_651 * _645) * _1806));
    float _1813 = fma(_1802, _618, fma(_1807, _633, (_651 * _646) * _1806));
    float _1816 = fma(_1802, _619, fma(_1807, _634, (_651 * _647) * _1806));
    float _1820 = inversesqrt(dot(vec3(_1810, _1813, _1816), vec3(_1810, _1813, _1816)));
    float _1821 = _1820 * _1810;
    float _1822 = _1820 * _1813;
    float _1823 = _1820 * _1816;
    float _1835 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1836 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1837 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1838 = (-0.0) - _1718;
    float _1840 = (-0.0) - _1719;
    float _1841 = (-0.0) - _1720;
    float _1847 = float(gl_LaunchIDEXT.x);
    float _1848 = float(gl_LaunchIDEXT.y);
    float _1851 = float(gl_LaunchSizeEXT.x);
    float _1865 = fract(fract(sin(dot(vec2(_1847 / _1851, _1848 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1878 = fract(fract(sin(dot(vec2((_1847 + 128.0) / _1851, (_1848 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1879 = 1.0 - _1402;
    float _1880 = _1879 * _1101;
    float _1881 = _1879 * _1102;
    float _1882 = _1879 * _1103;
    float _1887 = _1402 * (_1101 + (-0.039999999105930328369140625));
    float _1888 = _1402 * (_1102 + (-0.039999999105930328369140625));
    float _1889 = _1402 * (_1103 + (-0.039999999105930328369140625));
    float _1890 = _1887 + 0.039999999105930328369140625;
    float _1892 = _1888 + 0.039999999105930328369140625;
    float _1893 = _1889 + 0.039999999105930328369140625;
    _75._m0 = 1u;
    uvec4 _1903 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1904 = _1903.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1904, _1903.w, _1904, vec3(_1835, _1836, _1837), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2018;
    float _2019;
    float _2020;
    float _2021;
    float _2022;
    float _2023;
    if (_75._m0 == 0u)
    {
        float _1924 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1821, _1822, _1823));
        float _2432 = isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0));
        float _1927 = isnan(1.0) ? _2432 : (isnan(_2432) ? 1.0 : min(_2432, 1.0));
        float _1946 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1701) * 0.949999988079071044921875);
        float _1947 = _1946 * _1946;
        float _1948 = g_sceneCB._m0[4u].x - _1718;
        float _1949 = g_sceneCB._m0[4u].y - _1719;
        float _1950 = g_sceneCB._m0[4u].z - _1720;
        float _1954 = inversesqrt(dot(vec3(_1948, _1949, _1950), vec3(_1948, _1949, _1950)));
        float _1955 = _1954 * _1948;
        float _1956 = _1954 * _1949;
        float _1957 = _1954 * _1950;
        float _1958 = dot(vec3(_1821, _1822, _1823), vec3(g_sceneCB._m0[4u].xyz));
        float _2443 = isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0));
        float _1961 = isnan(1.0) ? _2443 : (isnan(_2443) ? 1.0 : min(_2443, 1.0));
        float _1962 = dot(vec3(_1821, _1822, _1823), vec3(_1838, _1840, _1841));
        float _2454 = isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0));
        float _1965 = isnan(1.0) ? _2454 : (isnan(_2454) ? 1.0 : min(_2454, 1.0));
        float _1966 = dot(vec3(_1821, _1822, _1823), vec3(_1955, _1956, _1957));
        float _2465 = isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0));
        float _1969 = isnan(1.0) ? _2465 : (isnan(_2465) ? 1.0 : min(_2465, 1.0));
        float _1970 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1955, _1956, _1957));
        float _2476 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
        float _1974 = _1947 * _1947;
        float _1978 = ((_1969 * _1969) * (_1974 + (-1.0))) + 1.0;
        float _1987 = exp2(log2(1.0 - (isnan(1.0) ? _2476 : (isnan(_2476) ? 1.0 : min(_2476, 1.0)))) * 5.0);
        float _1998 = 1.0 - _1947;
        float _2009 = (0.5 / (((_1965 * ((_1961 * _1998) + _1947)) + 9.9999999392252902907785028219223e-09) + (((_1965 * _1998) + _1947) * _1961))) * _1961;
        float _2487 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
        float _2011 = (isnan(1.0) ? _2487 : (isnan(_2487) ? 1.0 : min(_2487, 1.0))) * (_1974 / ((_1978 * _1978) * 3.141590118408203125));
        _2018 = ((_1880 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1927;
        _2019 = ((_1881 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1927;
        _2020 = ((_1882 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1927;
        _2021 = (((_1987 * (0.959999978542327880859375 - _1887)) + _1890) * g_sceneCB._m0[5u].x) * _2011;
        _2022 = (((_1987 * (0.959999978542327880859375 - _1888)) + _1892) * g_sceneCB._m0[5u].y) * _2011;
        _2023 = (((_1987 * (0.959999978542327880859375 - _1889)) + _1893) * g_sceneCB._m0[5u].z) * _2011;
    }
    else
    {
        _2018 = 0.0;
        _2019 = 0.0;
        _2020 = 0.0;
        _2021 = 0.0;
        _2022 = 0.0;
        _2023 = 0.0;
    }
    bool _2025 = abs(_1822) < 0.89999997615814208984375;
    float _2027 = float(_2025);
    float _2028 = _2025 ? 0.0 : 1.0;
    float _2031 = (_2027 * _1823) - (_2028 * _1822);
    float _2032 = _2028 * _1821;
    float _2034 = (-0.0) - (_1821 * _2027);
    float _2038 = inversesqrt(dot(vec3(_2031, _2032, _2034), vec3(_2031, _2032, _2034)));
    float _2039 = _2031 * _2038;
    float _2040 = _2032 * _2038;
    float _2041 = _2038 * _2034;
    float _2044 = (_2040 * _1823) - (_2041 * _1822);
    float _2047 = (_2041 * _1821) - (_2039 * _1823);
    float _2050 = (_2039 * _1822) - (_2040 * _1821);
    float _2052;
    float _2060;
    float _2051 = 0.0;
    uint _2053 = 0u;
    float _2057;
    bool _2059;
    for (;;)
    {
        _2057 = (float(_2053) + _1865) * 0.03125;
        _2059 = _2053 == 0u;
        float frontier_phi_55_pred;
        if (_2059)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _2201;
            float _2202;
            uint _2204;
            _2201 = 0.0;
            _2202 = 0.5;
            _2204 = _2053;
            float _2061;
            for (;;)
            {
                _2061 = ((_2204 & 1u) != 0u) ? (_2202 + _2201) : _2201;
                uint _2205 = _2204 >> 1u;
                if (_2205 == 0u)
                {
                    break;
                }
                else
                {
                    _2201 = _2061;
                    _2202 *= 0.5;
                    _2204 = _2205;
                }
            }
            frontier_phi_55_pred = _2061;
        }
        _2060 = frontier_phi_55_pred;
        float _2062 = _2060 + _1878;
        float _2066 = sqrt(_2057);
        float _2067 = ((_2062 > 1.0) ? (_2062 + (-1.0)) : _2062) * 6.283185482025146484375;
        float _2070 = cos(_2067) * _2066;
        float _2072 = sin(_2067) * _2066;
        float _2074 = sqrt(1.0 - _2057);
        float _2087 = ((_2074 * _1821) + (_2070 * _2044)) + (_2072 * _2039);
        float _2088 = ((_2074 * _1822) + (_2070 * _2047)) + (_2072 * _2040);
        float _2089 = ((_2074 * _1823) + (_2070 * _2050)) + (_2072 * _2041);
        _74._m0 = 1u;
        uvec4 _2093 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2094 = _2093.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2094, _2093.w, _2094, vec3(_1835, _1836, _1837), 9.9999997473787516355514526367188e-05, vec3(_2087, _2088, _2089), 10000.0, 1);
        float _2100 = dot(vec3(_1821, _1822, _1823), vec3(_2087, _2088, _2089));
        float _2498 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2103 = isnan(1.0) ? _2498 : (isnan(_2498) ? 1.0 : min(_2498, 1.0));
        _2052 = ((float(_74._m0 == 0u) * _2103) / (_2103 * 0.3183098733425140380859375)) + _2051;
        uint _2054 = _2053 + 1u;
        if (_2054 == 32u)
        {
            break;
        }
        else
        {
            _2051 = _2052;
            _2053 = _2054;
            continue;
        }
    }
    float _2111 = _2052 * 0.009947183541953563690185546875;
    float _2116 = dot(vec3(_1718, _1719, _1720), vec3(_1821, _1822, _1823)) * 2.0;
    vec4 _2130 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1718 - (_2116 * _1821), _1719 - (_2116 * _1822), _1720 - (_2116 * _1823)), 4.0 - (_1701 * 4.0));
    float _2135 = dot(vec3(_1838, _1840, _1841), vec3(_1821, _1822, _1823));
    float _2509 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
    float _2145 = exp2(log2(1.0 - (isnan(1.0) ? _2509 : (isnan(_2509) ? 1.0 : min(_2509, 1.0)))) * 5.0);
    vec4 _2157 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1821, _1822, _1823), 0.0);
    float _2168 = (_2021 + _2018) + (((_2157.x * _1880) + (((_2145 * (0.959999978542327880859375 - _1887)) + _1890) * _2130.x)) * _2111);
    float _2172 = (_2022 + _2019) + (((_2157.y * _1881) + (((_2145 * (0.959999978542327880859375 - _1888)) + _1892) * _2130.y)) * _2111);
    float _2176 = (_2023 + _2020) + (((_2157.z * _1882) + (((_2145 * (0.959999978542327880859375 - _1889)) + _1893) * _2130.z)) * _2111);
    float _2520 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
    float _2531 = isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0));
    float _2542 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    bool _2184 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2195;
    _2195.x = _2184 ? ((_609 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0)));
    _2195.y = _2184 ? ((_612 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2531 : (isnan(_2531) ? 1.0 : min(_2531, 1.0)));
    _2195.z = _2184 ? ((_615 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2542 : (isnan(_2542) ? 1.0 : min(_2542, 1.0)));
    payload._m0 = _2195;
}


