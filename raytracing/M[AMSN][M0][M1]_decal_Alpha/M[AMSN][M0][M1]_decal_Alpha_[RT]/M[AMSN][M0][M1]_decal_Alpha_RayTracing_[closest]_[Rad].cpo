#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _1067;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _158;
    uint _160;
    uint _161;
    if (_117.x == 0u)
    {
        uint _126 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _135 = uvec3(texelFetch(l_geomIndexBuffer, int(_126)).x, texelFetch(l_geomIndexBuffer, int(_126 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_126 + 2u)).x);
        _158 = _135.x;
        _160 = _135.y;
        _161 = _135.z;
    }
    else
    {
        uint _139 = uint(gl_PrimitiveID) * 6u;
        uint _141 = _139 & 4294967292u;
        uint _144 = (_118 + _141) >> 2u;
        uvec2 _151 = uvec2(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x);
        uint _152 = _151.x;
        uint _153 = _151.y;
        uint _155 = _152 >> 16u;
        uint _156 = _153 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_141 == _139)
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _152 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _153 >> 16u;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _158 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder_1;
        _161 = frontier_phi_3_2_ladder;
    }
    uvec4 _165 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _166 = _165.x;
    uint _167 = _165.z;
    bool _168 = _167 != 0u;
    bool _170 = _117.w == 0u;
    bool _171 = _168 || _170;
    uint _172 = _166 * _158;
    uint _173 = _172 + 12u;
    uint _197;
    uint _198;
    uint _199;
    uint _200;
    if (_171)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_173 >> 2u));
        uint _177 = _176.x;
        _197 = _177 & 255u;
        _198 = (_177 >> 8u) & 255u;
        _199 = (_177 >> 16u) & 255u;
        _200 = 16u;
    }
    else
    {
        uint _185 = _173 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
        _200 = 20u;
    }
    uvec4 _208 = texelFetch(l_geomAttrib_0, int((_200 + _172) >> 2u));
    uint _209 = _208.x;
    bool _223 = _167 == 0u;
    uint _224;
    if (_223)
    {
        _224 = _200 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_170)
        {
            frontier_phi_9_10_ladder = _200 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _200 + 12u;
        }
        _224 = frontier_phi_9_10_ladder;
    }
    uvec4 _232 = texelFetch(l_geomAttrib_0, int(((_172 + 4u) + (_168 ? (_224 + 4u) : _224)) >> 2u));
    uint _233 = _232.x;
    float _237 = float(int(uint(int(_233 << 16u) >> int(16u))));
    float _238 = float(int(uint(int(_233) >> int(16u))));
    uint _239 = _166 * _160;
    uint _240 = _239 + 12u;
    uint _261;
    uint _262;
    uint _263;
    uint _264;
    if (_171)
    {
        uvec4 _242 = texelFetch(l_geomAttrib_0, int(_240 >> 2u));
        uint _243 = _242.x;
        _261 = _243 & 255u;
        _262 = (_243 >> 8u) & 255u;
        _263 = (_243 >> 16u) & 255u;
        _264 = 16u;
    }
    else
    {
        uint _249 = _240 >> 2u;
        uvec2 _255 = uvec2(texelFetch(l_geomAttrib_0, int(_249)).x, texelFetch(l_geomAttrib_0, int(_249 + 1u)).x);
        uint _256 = _255.x;
        _261 = _256 & 65535u;
        _262 = _256 >> 16u;
        _263 = _255.y & 65535u;
        _264 = 20u;
    }
    uvec4 _270 = texelFetch(l_geomAttrib_0, int((_264 + _239) >> 2u));
    uint _271 = _270.x;
    uint _283;
    if (_223)
    {
        _283 = _264 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_170)
        {
            frontier_phi_16_17_ladder = _264 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _264 + 12u;
        }
        _283 = frontier_phi_16_17_ladder;
    }
    uvec4 _291 = texelFetch(l_geomAttrib_0, int(((_239 + 4u) + (_168 ? (_283 + 4u) : _283)) >> 2u));
    uint _292 = _291.x;
    float _296 = float(int(uint(int(_292 << 16u) >> int(16u))));
    float _297 = float(int(uint(int(_292) >> int(16u))));
    uint _298 = _166 * _161;
    uint _299 = _298 + 12u;
    uint _320;
    uint _321;
    uint _322;
    uint _323;
    if (_171)
    {
        uvec4 _301 = texelFetch(l_geomAttrib_0, int(_299 >> 2u));
        uint _302 = _301.x;
        _320 = _302 & 255u;
        _321 = (_302 >> 8u) & 255u;
        _322 = (_302 >> 16u) & 255u;
        _323 = 16u;
    }
    else
    {
        uint _308 = _299 >> 2u;
        uvec2 _314 = uvec2(texelFetch(l_geomAttrib_0, int(_308)).x, texelFetch(l_geomAttrib_0, int(_308 + 1u)).x);
        uint _315 = _314.x;
        _320 = _315 & 65535u;
        _321 = _315 >> 16u;
        _322 = _314.y & 65535u;
        _323 = 20u;
    }
    uvec4 _329 = texelFetch(l_geomAttrib_0, int((_323 + _298) >> 2u));
    uint _330 = _329.x;
    uint _342;
    if (_223)
    {
        _342 = _323 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_170)
        {
            frontier_phi_23_24_ladder = _323 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _323 + 12u;
        }
        _342 = frontier_phi_23_24_ladder;
    }
    uvec4 _350 = texelFetch(l_geomAttrib_0, int(((_298 + 4u) + (_168 ? (_342 + 4u) : _342)) >> 2u));
    uint _351 = _350.x;
    float _355 = float(int(uint(int(_351 << 16u) >> int(16u))));
    float _356 = float(int(uint(int(_351) >> int(16u))));
    bool _358 = _117.z == 0u;
    float _394;
    float _395;
    float _396;
    if (_358)
    {
        uint _361 = _158 * 3u;
        uvec3 _370 = uvec3(texelFetch(l_geomPositionBuffer, int(_361)).x, texelFetch(l_geomPositionBuffer, int(_361 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_361 + 2u)).x);
        _394 = uintBitsToFloat(_370.x);
        _395 = uintBitsToFloat(_370.y);
        _396 = uintBitsToFloat(_370.z);
    }
    else
    {
        uint _378 = _158 * 2u;
        uvec2 _384 = uvec2(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x);
        uint _385 = _384.x;
        _394 = unpackHalf2x16(_385).x;
        _395 = unpackHalf2x16(_385 >> 16u).x;
        _396 = unpackHalf2x16(_384.y).x;
    }
    float _432;
    float _433;
    float _434;
    if (_358)
    {
        uint _399 = _160 * 3u;
        uvec3 _408 = uvec3(texelFetch(l_geomPositionBuffer, int(_399)).x, texelFetch(l_geomPositionBuffer, int(_399 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_399 + 2u)).x);
        _432 = uintBitsToFloat(_408.x);
        _433 = uintBitsToFloat(_408.y);
        _434 = uintBitsToFloat(_408.z);
    }
    else
    {
        uint _416 = _160 * 2u;
        uvec2 _422 = uvec2(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x);
        uint _423 = _422.x;
        _432 = unpackHalf2x16(_423).x;
        _433 = unpackHalf2x16(_423 >> 16u).x;
        _434 = unpackHalf2x16(_422.y).x;
    }
    float _470;
    float _471;
    float _472;
    if (_358)
    {
        uint _437 = _161 * 3u;
        uvec3 _446 = uvec3(texelFetch(l_geomPositionBuffer, int(_437)).x, texelFetch(l_geomPositionBuffer, int(_437 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_437 + 2u)).x);
        _470 = uintBitsToFloat(_446.x);
        _471 = uintBitsToFloat(_446.y);
        _472 = uintBitsToFloat(_446.z);
    }
    else
    {
        uint _454 = _161 * 2u;
        uvec2 _460 = uvec2(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x);
        uint _461 = _460.x;
        _470 = unpackHalf2x16(_461).x;
        _471 = unpackHalf2x16(_461 >> 16u).x;
        _472 = unpackHalf2x16(_460.y).x;
    }
    float _475 = (1.0 - hit._m0.x) - hit._m0.y;
    float _528 = _432 - _394;
    float _529 = _433 - _395;
    float _530 = _434 - _396;
    float _533 = fma(_530, gl_ObjectToWorldEXT[2u].x, fma(_529, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _528));
    float _536 = fma(_530, gl_ObjectToWorldEXT[2u].y, fma(_529, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _528));
    float _539 = fma(_530, gl_ObjectToWorldEXT[2u].z, fma(_529, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _528));
    float _540 = _470 - _394;
    float _541 = _471 - _395;
    float _542 = _472 - _396;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _558 = (((float(_197) * _475) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _561 = (((float(_198) * _475) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _564 = (((float(_199) * _475) + (-127.0)) + (float(_263) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _565 = _558 * 0.0078740157186985015869140625;
    float _567 = _561 * 0.0078740157186985015869140625;
    float _568 = _564 * 0.0078740157186985015869140625;
    float _581 = ((((float(_209 & 255u) * _475) + (-127.0)) + (float(_271 & 255u) * hit._m0.x)) + (float(_330 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _582 = ((((float((_209 >> 8u) & 255u) * _475) + (-127.0)) + (float((_271 >> 8u) & 255u) * hit._m0.x)) + (float((_330 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _583 = ((((float((_209 >> 16u) & 255u) * _475) + (-127.0)) + (float((_271 >> 16u) & 255u) * hit._m0.x)) + (float((_330 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _584 = ((((float(_209 >> 24u) * _475) + (-127.0)) + (float(_271 >> 24u) * hit._m0.x)) + (float(_330 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((_582 * _568) - (_583 * _567)) * _584;
    float _595 = ((_583 * _565) - (_581 * _568)) * _584;
    float _596 = ((_581 * _567) - (_582 * _565)) * _584;
    float _600 = inversesqrt(dot(vec3(_594, _595, _596), vec3(_594, _595, _596)));
    uvec2 _621 = uvec2(textureSize(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1, int(0u)));
    float _630 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _631 = _630 * gl_WorldRayDirectionEXT.x;
    float _632 = _630 * gl_WorldRayDirectionEXT.y;
    float _633 = _630 * gl_WorldRayDirectionEXT.z;
    float _685;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _647 = (_551 * _536) - (_548 * _539);
        float _650 = (_545 * _539) - (_551 * _533);
        float _653 = (_548 * _533) - (_545 * _536);
        float _682 = ((log2((((float(_621.y) * 0.5) * float(_621.x)) * abs((((_356 - _238) * (_296 - _237)) - ((_355 - _237) * (_297 - _238))) * 2.384185791015625e-07)) / (sqrt(((_650 * _650) + (_653 * _653)) + (_647 * _647)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_631, _632, _633), vec3(_565, _567, _568))));
        _685 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    }
    else
    {
        _685 = 0.0;
    }
    vec4 _689 = textureLod(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((((((_296 * hit._m0.x) + (_237 * _475)) + (_355 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_297 * hit._m0.x) + (_238 * _475)) + (_356 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _685);
    float _693 = _689.z;
    float _696 = (_689.x * 2.0) + (-1.0);
    float _698 = (_689.y * 2.0) + (-1.0);
    float _699 = dot(vec2(_696, _698), vec2(_696, _698));
    float _1146 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _704 = sqrt(1.0 - (isnan(1.0) ? _1146 : (isnan(_1146) ? 1.0 : min(_1146, 1.0))));
    float _707 = fma(_704, _565, fma(_698, _581, (_600 * _594) * _696));
    float _710 = fma(_704, _567, fma(_698, _582, (_600 * _595) * _696));
    float _713 = fma(_704, _568, fma(_698, _583, (_600 * _596) * _696));
    float _717 = inversesqrt(dot(vec3(_707, _710, _713), vec3(_707, _710, _713)));
    float _718 = _717 * _707;
    float _719 = _717 * _710;
    float _720 = _717 * _713;
    float _732 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _733 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _734 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _735 = (-0.0) - _631;
    float _737 = (-0.0) - _632;
    float _738 = (-0.0) - _633;
    float _744 = float(gl_LaunchIDEXT.x);
    float _745 = float(gl_LaunchIDEXT.y);
    float _748 = float(gl_LaunchSizeEXT.x);
    float _762 = fract(fract(sin(dot(vec2(_744 / _748, _745 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _775 = fract(fract(sin(dot(vec2((_744 + 128.0) / _748, (_745 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _785 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _786 = _785.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _786, _785.w, _786, vec3(_732, _733, _734), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _895;
    float _896;
    float _897;
    float _898;
    float _899;
    float _900;
    if (_59._m0 == 0u)
    {
        float _807 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_718, _719, _720));
        float _1157 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _810 = isnan(1.0) ? _1157 : (isnan(_1157) ? 1.0 : min(_1157, 1.0));
        float _829 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _693) * 0.949999988079071044921875);
        float _830 = _829 * _829;
        float _831 = g_sceneCB._m0[4u].x - _631;
        float _832 = g_sceneCB._m0[4u].y - _632;
        float _833 = g_sceneCB._m0[4u].z - _633;
        float _837 = inversesqrt(dot(vec3(_831, _832, _833), vec3(_831, _832, _833)));
        float _838 = _837 * _831;
        float _839 = _837 * _832;
        float _840 = _837 * _833;
        float _841 = dot(vec3(_718, _719, _720), vec3(g_sceneCB._m0[4u].xyz));
        float _1168 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
        float _844 = isnan(1.0) ? _1168 : (isnan(_1168) ? 1.0 : min(_1168, 1.0));
        float _845 = dot(vec3(_718, _719, _720), vec3(_735, _737, _738));
        float _1179 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
        float _848 = isnan(1.0) ? _1179 : (isnan(_1179) ? 1.0 : min(_1179, 1.0));
        float _849 = dot(vec3(_718, _719, _720), vec3(_838, _839, _840));
        float _1190 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        float _852 = isnan(1.0) ? _1190 : (isnan(_1190) ? 1.0 : min(_1190, 1.0));
        float _853 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_838, _839, _840));
        float _1201 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        float _857 = _830 * _830;
        float _861 = ((_852 * _852) * (_857 + (-1.0))) + 1.0;
        float _873 = (exp2(log2(1.0 - (isnan(1.0) ? _1201 : (isnan(_1201) ? 1.0 : min(_1201, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _875 = 1.0 - _830;
        float _886 = (0.5 / (((_848 * ((_844 * _875) + _830)) + 9.9999999392252902907785028219223e-09) + (((_848 * _875) + _830) * _844))) * _844;
        float _1212 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _888 = (isnan(1.0) ? _1212 : (isnan(_1212) ? 1.0 : min(_1212, 1.0))) * (_857 / ((_861 * _861) * 3.141590118408203125));
        _895 = ((cbMtdParam._m0[9u].x * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _810;
        _896 = ((cbMtdParam._m0[9u].y * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _810;
        _897 = ((cbMtdParam._m0[9u].z * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _810;
        _898 = (_873 * g_sceneCB._m0[5u].x) * _888;
        _899 = (_873 * g_sceneCB._m0[5u].y) * _888;
        _900 = (_873 * g_sceneCB._m0[5u].z) * _888;
    }
    else
    {
        _895 = 0.0;
        _896 = 0.0;
        _897 = 0.0;
        _898 = 0.0;
        _899 = 0.0;
        _900 = 0.0;
    }
    bool _902 = abs(_719) < 0.89999997615814208984375;
    float _904 = float(_902);
    float _905 = _902 ? 0.0 : 1.0;
    float _908 = (_904 * _720) - (_905 * _719);
    float _909 = _905 * _718;
    float _911 = (-0.0) - (_718 * _904);
    float _915 = inversesqrt(dot(vec3(_908, _909, _911), vec3(_908, _909, _911)));
    float _916 = _908 * _915;
    float _917 = _909 * _915;
    float _918 = _915 * _911;
    float _921 = (_917 * _720) - (_918 * _719);
    float _924 = (_918 * _718) - (_916 * _720);
    float _927 = (_916 * _719) - (_917 * _718);
    float _929;
    float _937;
    float _928 = 0.0;
    uint _930 = 0u;
    float _934;
    bool _936;
    for (;;)
    {
        _934 = (float(_930) + _762) * 0.03125;
        _936 = _930 == 0u;
        float frontier_phi_41_pred;
        if (_936)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1072;
            float _1073;
            uint _1075;
            _1072 = 0.0;
            _1073 = 0.5;
            _1075 = _930;
            float _938;
            for (;;)
            {
                _938 = ((_1075 & 1u) != 0u) ? (_1073 + _1072) : _1072;
                uint _1076 = _1075 >> 1u;
                if (_1076 == 0u)
                {
                    break;
                }
                else
                {
                    _1072 = _938;
                    _1073 *= 0.5;
                    _1075 = _1076;
                }
            }
            frontier_phi_41_pred = _938;
        }
        _937 = frontier_phi_41_pred;
        float _939 = _937 + _775;
        float _943 = sqrt(_934);
        float _944 = ((_939 > 1.0) ? (_939 + (-1.0)) : _939) * 6.283185482025146484375;
        float _947 = cos(_944) * _943;
        float _949 = sin(_944) * _943;
        float _951 = sqrt(1.0 - _934);
        float _964 = ((_951 * _718) + (_947 * _921)) + (_949 * _916);
        float _965 = ((_951 * _719) + (_947 * _924)) + (_949 * _917);
        float _966 = ((_951 * _720) + (_947 * _927)) + (_949 * _918);
        _58._m0 = 1u;
        uvec4 _970 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _971 = _970.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _971, _970.w, _971, vec3(_732, _733, _734), 9.9999997473787516355514526367188e-05, vec3(_964, _965, _966), 10000.0, 1);
        float _977 = dot(vec3(_718, _719, _720), vec3(_964, _965, _966));
        float _1223 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _980 = isnan(1.0) ? _1223 : (isnan(_1223) ? 1.0 : min(_1223, 1.0));
        _929 = ((float(_58._m0 == 0u) * _980) / (_980 * 0.3183098733425140380859375)) + _928;
        uint _931 = _930 + 1u;
        if (_931 == 32u)
        {
            break;
        }
        else
        {
            _928 = _929;
            _930 = _931;
            continue;
        }
    }
    float _988 = _929 * 0.009947183541953563690185546875;
    float _993 = dot(vec3(_631, _632, _633), vec3(_718, _719, _720)) * 2.0;
    vec4 _1007 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_631 - (_993 * _718), _632 - (_993 * _719), _633 - (_993 * _720)), 4.0 - (_693 * 4.0));
    float _1012 = dot(vec3(_735, _737, _738), vec3(_718, _719, _720));
    float _1234 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1021 = (exp2(log2(1.0 - (isnan(1.0) ? _1234 : (isnan(_1234) ? 1.0 : min(_1234, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1027 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_718, _719, _720), 0.0);
    float _1038 = (_898 + _895) + (((_1027.x * cbMtdParam._m0[9u].x) + (_1021 * _1007.x)) * _988);
    float _1042 = (_899 + _896) + (((_1027.y * cbMtdParam._m0[9u].y) + (_1021 * _1007.y)) * _988);
    float _1046 = (_900 + _897) + (((_1027.z * cbMtdParam._m0[9u].z) + (_1021 * _1007.z)) * _988);
    float _1245 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1256 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _1267 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    bool _1055 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1066;
    _1066.x = _1055 ? ((_558 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1245 : (isnan(_1245) ? 1.0 : min(_1245, 1.0)));
    _1066.y = _1055 ? ((_561 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1256 : (isnan(_1256) ? 1.0 : min(_1256, 1.0)));
    _1066.z = _1055 ? ((_564 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1267 : (isnan(_1267) ? 1.0 : min(_1267, 1.0)));
    payload._m0 = _1066;
}


