#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _840;

void main()
{
    uvec4 _86 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _87 = _86.y;
    uint _129;
    uint _131;
    uint _132;
    if (_86.x == 0u)
    {
        uint _95 = (_87 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _106 = uvec3(texelFetch(l_geomIndexBuffer, int(_95)).x, texelFetch(l_geomIndexBuffer, int(_95 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_95 + 2u)).x);
        _129 = _106.x;
        _131 = _106.y;
        _132 = _106.z;
    }
    else
    {
        uint _110 = uint(gl_PrimitiveID) * 6u;
        uint _112 = _110 & 4294967292u;
        uint _115 = (_87 + _112) >> 2u;
        uvec2 _122 = uvec2(texelFetch(l_geomIndexBuffer, int(_115)).x, texelFetch(l_geomIndexBuffer, int(_115 + 1u)).x);
        uint _123 = _122.x;
        uint _124 = _122.y;
        uint _126 = _123 >> 16u;
        uint _127 = _124 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_112 == _110)
        {
            frontier_phi_3_2_ladder = _123 & 65535u;
            frontier_phi_3_2_ladder_1 = _126;
            frontier_phi_3_2_ladder_2 = _127;
        }
        else
        {
            frontier_phi_3_2_ladder = _126;
            frontier_phi_3_2_ladder_1 = _127;
            frontier_phi_3_2_ladder_2 = _124 >> 16u;
        }
        _129 = frontier_phi_3_2_ladder;
        _131 = frontier_phi_3_2_ladder_1;
        _132 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _136 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _137 = _136.x;
    uint _138 = _137 * _129;
    uint _140 = _138 >> 2u;
    uvec3 _149 = uvec3(texelFetch(l_geomAttrib_0, int(_140)).x, texelFetch(l_geomAttrib_0, int(_140 + 1u)).x, texelFetch(l_geomAttrib_0, int(_140 + 2u)).x);
    bool _160 = (_136.z != 0u) || (_86.w == 0u);
    uint _161 = _138 + 12u;
    uint _184;
    uint _185;
    uint _186;
    if (_160)
    {
        uvec4 _163 = texelFetch(l_geomAttrib_0, int(_161 >> 2u));
        uint _164 = _163.x;
        _184 = _164 & 255u;
        _185 = (_164 >> 8u) & 255u;
        _186 = (_164 >> 16u) & 255u;
    }
    else
    {
        uint _172 = _161 >> 2u;
        uvec2 _178 = uvec2(texelFetch(l_geomAttrib_0, int(_172)).x, texelFetch(l_geomAttrib_0, int(_172 + 1u)).x);
        uint _179 = _178.x;
        _184 = _179 & 65535u;
        _185 = _179 >> 16u;
        _186 = _178.y & 65535u;
    }
    uint _190 = _137 * _131;
    uint _191 = _190 >> 2u;
    uvec3 _200 = uvec3(texelFetch(l_geomAttrib_0, int(_191)).x, texelFetch(l_geomAttrib_0, int(_191 + 1u)).x, texelFetch(l_geomAttrib_0, int(_191 + 2u)).x);
    uint _207 = _190 + 12u;
    uint _228;
    uint _229;
    uint _230;
    if (_160)
    {
        uvec4 _209 = texelFetch(l_geomAttrib_0, int(_207 >> 2u));
        uint _210 = _209.x;
        _228 = _210 & 255u;
        _229 = (_210 >> 8u) & 255u;
        _230 = (_210 >> 16u) & 255u;
    }
    else
    {
        uint _216 = _207 >> 2u;
        uvec2 _222 = uvec2(texelFetch(l_geomAttrib_0, int(_216)).x, texelFetch(l_geomAttrib_0, int(_216 + 1u)).x);
        uint _223 = _222.x;
        _228 = _223 & 65535u;
        _229 = _223 >> 16u;
        _230 = _222.y & 65535u;
    }
    uint _234 = _137 * _132;
    uint _235 = _234 >> 2u;
    uvec3 _244 = uvec3(texelFetch(l_geomAttrib_0, int(_235)).x, texelFetch(l_geomAttrib_0, int(_235 + 1u)).x, texelFetch(l_geomAttrib_0, int(_235 + 2u)).x);
    uint _251 = _234 + 12u;
    uint _272;
    uint _273;
    uint _274;
    if (_160)
    {
        uvec4 _253 = texelFetch(l_geomAttrib_0, int(_251 >> 2u));
        uint _254 = _253.x;
        _272 = _254 & 255u;
        _273 = (_254 >> 8u) & 255u;
        _274 = (_254 >> 16u) & 255u;
    }
    else
    {
        uint _260 = _251 >> 2u;
        uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
        uint _267 = _266.x;
        _272 = _267 & 65535u;
        _273 = _267 >> 16u;
        _274 = _266.y & 65535u;
    }
    float _280 = (1.0 - hit._m0.x) - hit._m0.y;
    float _308 = (((float(_184) * _280) + (-127.0)) + (float(_228) * hit._m0.x)) + (float(_272) * hit._m0.y);
    float _311 = (((float(_185) * _280) + (-127.0)) + (float(_229) * hit._m0.x)) + (float(_273) * hit._m0.y);
    float _314 = (((float(_186) * _280) + (-127.0)) + (float(_230) * hit._m0.x)) + (float(_274) * hit._m0.y);
    float _315 = _308 * 0.0078740157186985015869140625;
    float _317 = _311 * 0.0078740157186985015869140625;
    float _318 = _314 * 0.0078740157186985015869140625;
    float _350 = (((((uintBitsToFloat(_200.x) * hit._m0.x) + (uintBitsToFloat(_149.x) * _280)) + (uintBitsToFloat(_244.x) * hit._m0.y)) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x;
    float _351 = (((((uintBitsToFloat(_200.y) * hit._m0.x) + (uintBitsToFloat(_149.y) * _280)) + (uintBitsToFloat(_244.y) * hit._m0.y)) - cbSceneParam._m0[92u].y) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x;
    float _354 = ((((((uintBitsToFloat(_200.z) * hit._m0.x) + (uintBitsToFloat(_149.z) * _280)) + (uintBitsToFloat(_244.z) * hit._m0.y)) - cbSceneParam._m0[92u].z) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x) + cbMtdParam._m0[11u].w;
    float _366 = exp2(log2(abs(_315)) * cbMtdParam._m0[12u].y);
    float _367 = exp2(log2(abs(_317)) * cbMtdParam._m0[12u].y);
    float _368 = exp2(log2(abs(_318)) * cbMtdParam._m0[12u].y);
    float _372 = inversesqrt(dot(vec3(_366, _367, _368), vec3(_366, _367, _368)));
    float _378 = _372 * ((_367 + _366) + _368);
    float _379 = (_372 * _366) / _378;
    float _380 = (_372 * _367) / _378;
    float _381 = (_372 * _368) / _378;
    float _383 = (cbMtdParam._m0[11u].w + (cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x)) + _350;
    float _385 = ((cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) + cbMtdParam._m0[11u].w) + _351;
    float _390 = _354 + (cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x);
    float _391 = (_351 + cbMtdParam._m0[11u].w) + (cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x);
    float _396 = (_350 + cbMtdParam._m0[11u].w) + (cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x);
    float _397 = _354 + (cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x);
    vec4 _413 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _383) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _385) + cbTextureTilingScale._m0[2u].w), 0.0);
    vec4 _425 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _390) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _391) + cbTextureTilingScale._m0[2u].w), 0.0);
    vec4 _440 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _396) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _397) + cbTextureTilingScale._m0[2u].w), 0.0);
    vec4 _472 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _383) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _385) + cbTextureTilingScale._m0[1u].w), 0.0);
    vec4 _484 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _390) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _391) + cbTextureTilingScale._m0[1u].w), 0.0);
    vec4 _499 = textureLod(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _396) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _397) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _522 = inversesqrt(dot(vec3(_315, _317, _318), vec3(_315, _317, _318)));
    float _523 = _522 * _315;
    float _524 = _522 * _317;
    float _525 = _522 * _318;
    float _547 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _548 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _549 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _553 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _554 = _553 * gl_WorldRayDirectionEXT.x;
    float _555 = _553 * gl_WorldRayDirectionEXT.y;
    float _556 = _553 * gl_WorldRayDirectionEXT.z;
    float _557 = (-0.0) - _554;
    float _559 = (-0.0) - _555;
    float _560 = (-0.0) - _556;
    float _567 = float(gl_LaunchIDEXT.x);
    float _568 = float(gl_LaunchIDEXT.y);
    float _574 = float(gl_LaunchSizeEXT.x);
    float _575 = float(gl_LaunchSizeEXT.y);
    float _589 = fract(fract(sin(dot(vec2(_567 / _574, _568 / _575), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _602 = fract(fract(sin(dot(vec2((_567 + 128.0) / _574, (_568 + 128.0) / _575), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _613 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _614 = _613.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _614, _613.w, _614, vec3(_547, _548, _549), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _681;
    float _682;
    float _683;
    if (_68._m0 == 0u)
    {
        float _635 = g_sceneCB._m0[4u].x - _554;
        float _636 = g_sceneCB._m0[4u].y - _555;
        float _637 = g_sceneCB._m0[4u].z - _556;
        float _641 = inversesqrt(dot(vec3(_635, _636, _637), vec3(_635, _636, _637)));
        float _645 = dot(vec3(_523, _524, _525), vec3(g_sceneCB._m0[4u].xyz));
        float _885 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
        float _648 = isnan(1.0) ? _885 : (isnan(_885) ? 1.0 : min(_885, 1.0));
        float _649 = dot(vec3(_523, _524, _525), vec3(_557, _559, _560));
        float _896 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
        float _653 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_635 * _641, _636 * _641, _637 * _641));
        float _907 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
        float _664 = (exp2(log2(1.0 - (isnan(1.0) ? _907 : (isnan(_907) ? 1.0 : min(_907, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _671 = (0.5 / ((_648 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _896 : (isnan(_896) ? 1.0 : min(_896, 1.0))))) * _648;
        float _918 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
        float _673 = (isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0))) * 0.31831014156341552734375;
        _681 = (_664 * g_sceneCB._m0[5u].x) * _673;
        _682 = (_664 * g_sceneCB._m0[5u].y) * _673;
        _683 = (_664 * g_sceneCB._m0[5u].z) * _673;
    }
    else
    {
        _681 = 0.0;
        _682 = 0.0;
        _683 = 0.0;
    }
    bool _685 = abs(_524) < 0.89999997615814208984375;
    float _687 = float(_685);
    float _688 = _685 ? 0.0 : 1.0;
    float _691 = (_687 * _525) - (_688 * _524);
    float _692 = _688 * _523;
    float _694 = (-0.0) - (_523 * _687);
    float _698 = inversesqrt(dot(vec3(_691, _692, _694), vec3(_691, _692, _694)));
    float _699 = _691 * _698;
    float _700 = _692 * _698;
    float _701 = _698 * _694;
    float _704 = (_700 * _525) - (_701 * _524);
    float _707 = (_701 * _523) - (_699 * _525);
    float _710 = (_699 * _524) - (_700 * _523);
    float _712;
    float _720;
    float _711 = 0.0;
    uint _713 = 0u;
    float _717;
    bool _719;
    for (;;)
    {
        _717 = (float(_713) + _589) * 0.03125;
        _719 = _713 == 0u;
        float frontier_phi_18_pred;
        if (_719)
        {
            frontier_phi_18_pred = 0.0;
        }
        else
        {
            float _845;
            float _846;
            uint _848;
            _845 = 0.0;
            _846 = 0.5;
            _848 = _713;
            float _721;
            for (;;)
            {
                _721 = ((_848 & 1u) != 0u) ? (_846 + _845) : _845;
                uint _849 = _848 >> 1u;
                if (_849 == 0u)
                {
                    break;
                }
                else
                {
                    _845 = _721;
                    _846 *= 0.5;
                    _848 = _849;
                }
            }
            frontier_phi_18_pred = _721;
        }
        _720 = frontier_phi_18_pred;
        float _722 = _720 + _602;
        float _727 = sqrt(_717);
        float _728 = ((_722 > 1.0) ? (_722 + (-1.0)) : _722) * 6.283185482025146484375;
        float _731 = cos(_728) * _727;
        float _733 = sin(_728) * _727;
        float _735 = sqrt(1.0 - _717);
        float _748 = ((_735 * _523) + (_731 * _704)) + (_733 * _699);
        float _749 = ((_735 * _524) + (_731 * _707)) + (_733 * _700);
        float _750 = ((_735 * _525) + (_731 * _710)) + (_733 * _701);
        _67._m0 = 1u;
        uvec4 _754 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _755 = _754.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _755, _754.w, _755, vec3(_547, _548, _549), 9.9999997473787516355514526367188e-05, vec3(_748, _749, _750), 10000.0, 1);
        float _761 = dot(vec3(_523, _524, _525), vec3(_748, _749, _750));
        float _929 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        float _764 = isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0));
        _712 = ((float(_67._m0 == 0u) * _764) / (_764 * 0.3183098733425140380859375)) + _711;
        uint _714 = _713 + 1u;
        if (_714 == 32u)
        {
            break;
        }
        else
        {
            _711 = _712;
            _713 = _714;
            continue;
        }
    }
    float _773 = _712 * 0.009947183541953563690185546875;
    float _778 = dot(vec3(_554, _555, _556), vec3(_523, _524, _525)) * 2.0;
    vec4 _791 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_554 - (_778 * _523), _555 - (_778 * _524), _556 - (_778 * _525)), 4.0);
    float _796 = dot(vec3(_557, _559, _560), vec3(_523, _524, _525));
    float _940 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _805 = (exp2(log2(1.0 - (isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _814 = ((((((_484.x * _379) + (_472.x * _381)) + (_499.x * _380)) * cbMtdParam._m0[9u].x) + ((((_425.x * _379) + (_413.x * _381)) + (_440.x * _380)) * cbMtdParam._m0[10u].x)) + _681) + ((_791.x * _773) * _805);
    float _817 = ((((((_484.y * _379) + (_472.y * _381)) + (_499.y * _380)) * cbMtdParam._m0[9u].y) + ((((_425.y * _379) + (_413.y * _381)) + (_440.y * _380)) * cbMtdParam._m0[10u].y)) + _682) + ((_791.y * _773) * _805);
    float _820 = (((cbMtdParam._m0[9u].z * (((_484.z * _379) + (_472.z * _381)) + (_499.z * _380))) + (cbMtdParam._m0[10u].z * (((_425.z * _379) + (_413.z * _381)) + (_440.z * _380)))) + _683) + ((_791.z * _773) * _805);
    float _951 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _962 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _973 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    bool _828 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _839;
    _839.x = _828 ? ((_308 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _951 : (isnan(_951) ? 1.0 : min(_951, 1.0)));
    _839.y = _828 ? ((_311 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _962 : (isnan(_962) ? 1.0 : min(_962, 1.0)));
    _839.z = _828 ? ((_314 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _973 : (isnan(_973) ? 1.0 : min(_973, 1.0)));
    payload._m0 = _839;
}


