#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _55
{
    vec3 _m0;
};

struct _59
{
    vec2 _m0;
};

struct _62
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D Test_UVCH_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D Test_UVCH_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D Test_UVCH_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D Test_UVCH_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D Test_UVCH_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D Test_UVCH_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _55 payload;
hitAttributeEXT _59 hit;
layout(location = 1) rayPayloadEXT _62 _64;
layout(location = 2) rayPayloadEXT _62 _65;

vec3 _1600;

void main()
{
    float _73 = float(gl_LaunchSizeEXT.y);
    float _103 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _112 = sqrt(((_104 * _104) + (_103 * _103)) + (_105 * _105)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _73)))));
    uvec4 _123 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _124 = _123.y;
    uint _163;
    uint _165;
    uint _166;
    if (_123.x == 0u)
    {
        uint _131 = (_124 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_124 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _157 & 65535u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        else
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _158 >> 16u;
        }
        _163 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
        _166 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _123.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    uint _226 = _205 | 8u;
    bool _227 = _172 == 0u;
    uint _228;
    if (_227)
    {
        _228 = _226;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _226 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _226 + 8u;
        }
        _228 = frontier_phi_9_10_ladder;
    }
    uint _233 = _173 ? (_228 + 4u) : _228;
    uint _236 = ((_177 + 4u) + _233) >> 2u;
    uvec2 _242 = uvec2(texelFetch(l_geomAttrib_0, int(_236)).x, texelFetch(l_geomAttrib_0, int(_236 + 1u)).x);
    uint _243 = _242.x;
    uint _244 = _242.y;
    float _248 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _249 = float(int(uint(int(_243) >> int(16u))));
    float _253 = float(int(uint(int(_244 << 16u) >> int(16u))));
    float _254 = float(int(uint(int(_244) >> int(16u))));
    uvec4 _265 = texelFetch(l_geomAttrib_0, int(((_177 + 16u) + _233) >> 2u));
    uint _266 = _265.x;
    uint _272 = _171 * _165;
    uint _273 = _272 + 12u;
    uint _294;
    uint _295;
    uint _296;
    uint _297;
    if (_176)
    {
        uvec4 _275 = texelFetch(l_geomAttrib_0, int(_273 >> 2u));
        uint _276 = _275.x;
        _294 = _276 & 255u;
        _295 = (_276 >> 8u) & 255u;
        _296 = (_276 >> 16u) & 255u;
        _297 = 16u;
    }
    else
    {
        uint _282 = _273 >> 2u;
        uvec2 _288 = uvec2(texelFetch(l_geomAttrib_0, int(_282)).x, texelFetch(l_geomAttrib_0, int(_282 + 1u)).x);
        uint _289 = _288.x;
        _294 = _289 & 65535u;
        _295 = _289 >> 16u;
        _296 = _288.y & 65535u;
        _297 = 20u;
    }
    uvec4 _303 = texelFetch(l_geomAttrib_0, int((_297 + _272) >> 2u));
    uint _304 = _303.x;
    uint _315 = _297 | 8u;
    uint _316;
    if (_227)
    {
        _316 = _315;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _315 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _315 + 8u;
        }
        _316 = frontier_phi_16_17_ladder;
    }
    uint _320 = _173 ? (_316 + 4u) : _316;
    uint _323 = ((_272 + 4u) + _320) >> 2u;
    uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
    uint _330 = _329.x;
    uint _331 = _329.y;
    float _335 = float(int(uint(int(_330 << 16u) >> int(16u))));
    float _336 = float(int(uint(int(_330) >> int(16u))));
    float _340 = float(int(uint(int(_331 << 16u) >> int(16u))));
    float _341 = float(int(uint(int(_331) >> int(16u))));
    uvec4 _352 = texelFetch(l_geomAttrib_0, int(((_272 + 16u) + _320) >> 2u));
    uint _353 = _352.x;
    uint _359 = _171 * _166;
    uint _360 = _359 + 12u;
    uint _381;
    uint _382;
    uint _383;
    uint _384;
    if (_176)
    {
        uvec4 _362 = texelFetch(l_geomAttrib_0, int(_360 >> 2u));
        uint _363 = _362.x;
        _381 = _363 & 255u;
        _382 = (_363 >> 8u) & 255u;
        _383 = (_363 >> 16u) & 255u;
        _384 = 16u;
    }
    else
    {
        uint _369 = _360 >> 2u;
        uvec2 _375 = uvec2(texelFetch(l_geomAttrib_0, int(_369)).x, texelFetch(l_geomAttrib_0, int(_369 + 1u)).x);
        uint _376 = _375.x;
        _381 = _376 & 65535u;
        _382 = _376 >> 16u;
        _383 = _375.y & 65535u;
        _384 = 20u;
    }
    uvec4 _390 = texelFetch(l_geomAttrib_0, int((_384 + _359) >> 2u));
    uint _391 = _390.x;
    uint _402 = _384 | 8u;
    uint _403;
    if (_227)
    {
        _403 = _402;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _402 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _402 + 8u;
        }
        _403 = frontier_phi_23_24_ladder;
    }
    uint _407 = _173 ? (_403 + 4u) : _403;
    uint _410 = ((_359 + 4u) + _407) >> 2u;
    uvec2 _416 = uvec2(texelFetch(l_geomAttrib_0, int(_410)).x, texelFetch(l_geomAttrib_0, int(_410 + 1u)).x);
    uint _417 = _416.x;
    uint _418 = _416.y;
    float _422 = float(int(uint(int(_417 << 16u) >> int(16u))));
    float _423 = float(int(uint(int(_417) >> int(16u))));
    float _427 = float(int(uint(int(_418 << 16u) >> int(16u))));
    float _428 = float(int(uint(int(_418) >> int(16u))));
    uvec4 _439 = texelFetch(l_geomAttrib_0, int(((_359 + 16u) + _407) >> 2u));
    uint _440 = _439.x;
    bool _447 = _123.z == 0u;
    float _483;
    float _484;
    float _485;
    if (_447)
    {
        uint _450 = _163 * 3u;
        uvec3 _459 = uvec3(texelFetch(l_geomPositionBuffer, int(_450)).x, texelFetch(l_geomPositionBuffer, int(_450 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_450 + 2u)).x);
        _483 = uintBitsToFloat(_459.x);
        _484 = uintBitsToFloat(_459.y);
        _485 = uintBitsToFloat(_459.z);
    }
    else
    {
        uint _467 = _163 * 2u;
        uvec2 _473 = uvec2(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x);
        uint _474 = _473.x;
        _483 = unpackHalf2x16(_474).x;
        _484 = unpackHalf2x16(_474 >> 16u).x;
        _485 = unpackHalf2x16(_473.y).x;
    }
    float _521;
    float _522;
    float _523;
    if (_447)
    {
        uint _488 = _165 * 3u;
        uvec3 _497 = uvec3(texelFetch(l_geomPositionBuffer, int(_488)).x, texelFetch(l_geomPositionBuffer, int(_488 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_488 + 2u)).x);
        _521 = uintBitsToFloat(_497.x);
        _522 = uintBitsToFloat(_497.y);
        _523 = uintBitsToFloat(_497.z);
    }
    else
    {
        uint _505 = _165 * 2u;
        uvec2 _511 = uvec2(texelFetch(l_geomPositionBuffer, int(_505)).x, texelFetch(l_geomPositionBuffer, int(_505 + 1u)).x);
        uint _512 = _511.x;
        _521 = unpackHalf2x16(_512).x;
        _522 = unpackHalf2x16(_512 >> 16u).x;
        _523 = unpackHalf2x16(_511.y).x;
    }
    float _559;
    float _560;
    float _561;
    if (_447)
    {
        uint _526 = _166 * 3u;
        uvec3 _535 = uvec3(texelFetch(l_geomPositionBuffer, int(_526)).x, texelFetch(l_geomPositionBuffer, int(_526 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_526 + 2u)).x);
        _559 = uintBitsToFloat(_535.x);
        _560 = uintBitsToFloat(_535.y);
        _561 = uintBitsToFloat(_535.z);
    }
    else
    {
        uint _543 = _166 * 2u;
        uvec2 _549 = uvec2(texelFetch(l_geomPositionBuffer, int(_543)).x, texelFetch(l_geomPositionBuffer, int(_543 + 1u)).x);
        uint _550 = _549.x;
        _559 = unpackHalf2x16(_550).x;
        _560 = unpackHalf2x16(_550 >> 16u).x;
        _561 = unpackHalf2x16(_549.y).x;
    }
    float _564 = (1.0 - hit._m0.x) - hit._m0.y;
    float _611 = (((float(texelFetch(l_geomAttrib_0, int(((_272 + 12u) + _320) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_177 + 12u) + _233) >> 2u)).x & 255u) * _564)) + (float(texelFetch(l_geomAttrib_0, int(((_359 + 12u) + _407) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _621 = (((float(_353 & 255u) * hit._m0.x) + (float(_266 & 255u) * _564)) + (float(_440 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _627 = (_335 - _248) * 0.00048828125;
    float _629 = (_336 - _249) * 0.00048828125;
    float _632 = (_422 - _248) * 0.00048828125;
    float _633 = (_423 - _249) * 0.00048828125;
    float _636 = (_340 - _253) * 0.00048828125;
    float _637 = (_341 - _254) * 0.00048828125;
    float _640 = (_427 - _253) * 0.00048828125;
    float _641 = (_428 - _254) * 0.00048828125;
    float _663 = _521 - _483;
    float _664 = _522 - _484;
    float _665 = _523 - _485;
    float _668 = fma(_665, gl_ObjectToWorldEXT[2u].x, fma(_664, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _663));
    float _671 = fma(_665, gl_ObjectToWorldEXT[2u].y, fma(_664, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _663));
    float _674 = fma(_665, gl_ObjectToWorldEXT[2u].z, fma(_664, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _663));
    float _675 = _559 - _483;
    float _676 = _560 - _484;
    float _677 = _561 - _485;
    float _680 = fma(_677, gl_ObjectToWorldEXT[2u].x, fma(_676, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _675));
    float _683 = fma(_677, gl_ObjectToWorldEXT[2u].y, fma(_676, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _675));
    float _686 = fma(_677, gl_ObjectToWorldEXT[2u].z, fma(_676, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _675));
    float _687 = (((_335 * hit._m0.x) + (_248 * _564)) + (_422 * hit._m0.y)) * 0.00048828125;
    float _688 = (((_336 * hit._m0.x) + (_249 * _564)) + (_423 * hit._m0.y)) * 0.00048828125;
    float _689 = (((_340 * hit._m0.x) + (_253 * _564)) + (_427 * hit._m0.y)) * 0.00048828125;
    float _690 = (((_341 * hit._m0.x) + (_254 * _564)) + (_428 * hit._m0.y)) * 0.00048828125;
    float _694 = (((float(_202) * _564) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_381) * hit._m0.y);
    float _697 = (((float(_203) * _564) + (-127.0)) + (float(_295) * hit._m0.x)) + (float(_382) * hit._m0.y);
    float _700 = (((float(_204) * _564) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _701 = _694 * 0.0078740157186985015869140625;
    float _703 = _697 * 0.0078740157186985015869140625;
    float _704 = _700 * 0.0078740157186985015869140625;
    float _717 = ((((float(_214 & 255u) * _564) + (-127.0)) + (float(_304 & 255u) * hit._m0.x)) + (float(_391 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _718 = ((((float((_214 >> 8u) & 255u) * _564) + (-127.0)) + (float((_304 >> 8u) & 255u) * hit._m0.x)) + (float((_391 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _719 = ((((float((_214 >> 16u) & 255u) * _564) + (-127.0)) + (float((_304 >> 16u) & 255u) * hit._m0.x)) + (float((_391 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _720 = ((((float(_214 >> 24u) * _564) + (-127.0)) + (float(_304 >> 24u) * hit._m0.x)) + (float(_391 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _730 = ((_718 * _704) - (_719 * _703)) * _720;
    float _731 = ((_719 * _701) - (_717 * _704)) * _720;
    float _732 = ((_717 * _703) - (_718 * _701)) * _720;
    float _736 = inversesqrt(dot(vec3(_730, _731, _732), vec3(_730, _731, _732)));
    uvec2 _762 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_1, int(0u)));
    bool _767 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _820;
    if (_767)
    {
        float _778 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _784 = (_686 * _671) - (_683 * _674);
        float _787 = (_680 * _674) - (_686 * _668);
        float _790 = (_683 * _668) - (_680 * _671);
        float _817 = ((log2((((float(_762.y) * 0.5) * float(_762.x)) * abs((_633 * _627) - (_632 * _629))) / (sqrt(((_787 * _787) + (_790 * _790)) + (_784 * _784)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_778 * gl_WorldRayDirectionEXT.x, _778 * gl_WorldRayDirectionEXT.y, _778 * gl_WorldRayDirectionEXT.z), vec3(_701, _703, _704))));
        _820 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    }
    else
    {
        _820 = 0.0;
    }
    vec4 _824 = textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _687) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _688) + cbTextureTilingScale._m0[1u].w), _820);
    float _829 = _824.x * cbMtdParam._m0[9u].x;
    float _830 = _824.y * cbMtdParam._m0[9u].y;
    float _831 = _824.z * cbMtdParam._m0[9u].z;
    uvec2 _849 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_2, int(0u)));
    float _900;
    if (_767)
    {
        float _860 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _866 = (_686 * _671) - (_683 * _674);
        float _869 = (_680 * _674) - (_686 * _668);
        float _872 = (_683 * _668) - (_680 * _671);
        float _898 = ((log2((((float(_849.y) * 0.5) * float(_849.x)) * abs((_641 * _636) - (_640 * _637))) / (sqrt(((_869 * _869) + (_872 * _872)) + (_866 * _866)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_860 * gl_WorldRayDirectionEXT.x, _860 * gl_WorldRayDirectionEXT.y, _860 * gl_WorldRayDirectionEXT.z), vec3(_701, _703, _704))));
        _900 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    }
    else
    {
        _900 = 0.0;
    }
    vec4 _902 = textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _689) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _690) + cbTextureTilingScale._m0[4u].w), _900);
    uvec2 _921 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_0, int(0u)));
    float _972;
    if (_767)
    {
        float _932 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _938 = (_686 * _671) - (_683 * _674);
        float _941 = (_680 * _674) - (_686 * _668);
        float _944 = (_683 * _668) - (_680 * _671);
        float _970 = ((log2((((float(_921.y) * 0.5) * float(_921.x)) * abs((_633 * _627) - (_632 * _629))) / (sqrt(((_941 * _941) + (_944 * _944)) + (_938 * _938)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_932 * gl_WorldRayDirectionEXT.x, _932 * gl_WorldRayDirectionEXT.y, _932 * gl_WorldRayDirectionEXT.z), vec3(_701, _703, _704))));
        _972 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    }
    else
    {
        _972 = 0.0;
    }
    float _984 = (_611 - ((cbMtdParam._m0[11u].x * (1.0 - _611)) * (textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _687) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _688) + cbTextureTilingScale._m0[0u].w), _972).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[11u].y + 1.0);
    float _1699 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _985 = isnan(1.0) ? _1699 : (isnan(_1699) ? 1.0 : min(_1699, 1.0));
    float _992 = (_985 * ((_902.x * cbMtdParam._m0[10u].x) - _829)) + _829;
    float _993 = (_985 * ((_902.y * cbMtdParam._m0[10u].y) - _830)) + _830;
    float _994 = (_985 * ((_902.z * cbMtdParam._m0[10u].z) - _831)) + _831;
    uvec2 _1007 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_4, int(0u)));
    float _1058;
    if (_767)
    {
        float _1018 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1024 = (_686 * _671) - (_683 * _674);
        float _1027 = (_680 * _674) - (_686 * _668);
        float _1030 = (_683 * _668) - (_680 * _671);
        float _1056 = ((log2((((float(_1007.y) * 0.5) * float(_1007.x)) * abs((_641 * _636) - (_640 * _637))) / (sqrt(((_1027 * _1027) + (_1030 * _1030)) + (_1024 * _1024)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_1018 * gl_WorldRayDirectionEXT.x, _1018 * gl_WorldRayDirectionEXT.y, _1018 * gl_WorldRayDirectionEXT.z), vec3(_701, _703, _704))));
        _1058 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    }
    else
    {
        _1058 = 0.0;
    }
    vec4 _1061 = textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _689) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _690) + cbTextureTilingScale._m0[5u].w), _1058);
    uvec2 _1082 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_13, int(0u)));
    float _1133;
    if (_767)
    {
        float _1093 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1099 = (_686 * _671) - (_683 * _674);
        float _1102 = (_680 * _674) - (_686 * _668);
        float _1105 = (_683 * _668) - (_680 * _671);
        float _1131 = ((log2((((float(_1082.y) * 0.5) * float(_1082.x)) * abs((_633 * _627) - (_632 * _629))) / (sqrt(((_1102 * _1102) + (_1105 * _1105)) + (_1099 * _1099)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_1093 * gl_WorldRayDirectionEXT.x, _1093 * gl_WorldRayDirectionEXT.y, _1093 * gl_WorldRayDirectionEXT.z), vec3(_701, _703, _704))));
        _1133 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    }
    else
    {
        _1133 = 0.0;
    }
    vec4 _1135 = textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _687) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _688) + cbTextureTilingScale._m0[2u].w), _1133);
    float _1137 = _1135.x;
    float _1138 = _1135.y;
    float _1139 = _1135.z;
    uvec2 _1151 = uvec2(textureSize(Test_UVCH_snp_0_Texture2D_14, int(0u)));
    float _1155 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1156 = _1155 * gl_WorldRayDirectionEXT.x;
    float _1157 = _1155 * gl_WorldRayDirectionEXT.y;
    float _1158 = _1155 * gl_WorldRayDirectionEXT.z;
    float _1202;
    if (_767)
    {
        float _1168 = (_686 * _671) - (_683 * _674);
        float _1171 = (_680 * _674) - (_686 * _668);
        float _1174 = (_683 * _668) - (_680 * _671);
        float _1200 = ((log2((((float(_1151.y) * 0.5) * float(_1151.x)) * abs((_641 * _636) - (_640 * _637))) / (sqrt(((_1171 * _1171) + (_1174 * _1174)) + (_1168 * _1168)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_112) / abs(dot(vec3(_1156, _1157, _1158), vec3(_701, _703, _704))));
        _1202 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    }
    else
    {
        _1202 = 0.0;
    }
    vec4 _1204 = textureLod(sampler2D(Test_UVCH_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _689) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _690) + cbTextureTilingScale._m0[3u].w), _1202);
    float _1217 = ((_1204.z - _1139) * _985) + _1139;
    float _1220 = ((((_1204.x - _1137) * _985) + _1137) * 2.0) + (-1.0);
    float _1221 = ((((_1204.y - _1138) * _985) + _1138) * 2.0) + (-1.0);
    float _1222 = dot(vec2(_1220, _1221), vec2(_1220, _1221));
    float _1725 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _1227 = sqrt(1.0 - (isnan(1.0) ? _1725 : (isnan(_1725) ? 1.0 : min(_1725, 1.0))));
    float _1232 = (((_1061.z - _1217) * _621) * cbMtdParam._m0[11u].w) + _1217;
    float _1238 = ((((_1061.x * 2.0) + (-1.0)) * _621) * cbMtdParam._m0[11u].z) + _1220;
    float _1239 = ((((((float((_353 >> 8u) & 255u) * hit._m0.x) + (float((_266 >> 8u) & 255u) * _564)) + (float((_440 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * ((_1061.y * 2.0) + (-1.0))) * cbMtdParam._m0[11u].z) + _1221;
    float _1242 = fma(_1227, _701, fma(_1239, _717, (_736 * _730) * _1238));
    float _1245 = fma(_1227, _703, fma(_1239, _718, (_736 * _731) * _1238));
    float _1248 = fma(_1227, _704, fma(_1239, _719, (_736 * _732) * _1238));
    float _1252 = inversesqrt(dot(vec3(_1242, _1245, _1248), vec3(_1242, _1245, _1248)));
    float _1253 = _1252 * _1242;
    float _1254 = _1252 * _1245;
    float _1255 = _1252 * _1248;
    float _1267 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1268 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1269 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1270 = (-0.0) - _1156;
    float _1272 = (-0.0) - _1157;
    float _1273 = (-0.0) - _1158;
    float _1279 = float(gl_LaunchIDEXT.x);
    float _1280 = float(gl_LaunchIDEXT.y);
    float _1283 = float(gl_LaunchSizeEXT.x);
    float _1297 = fract(fract(sin(dot(vec2(_1279 / _1283, _1280 / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1310 = fract(fract(sin(dot(vec2((_1279 + 128.0) / _1283, (_1280 + 128.0) / _73), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _65._m0 = 1u;
    uvec4 _1320 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1321 = _1320.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1321, _1320.w, _1321, vec3(_1267, _1268, _1269), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    if (_65._m0 == 0u)
    {
        float _1341 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1253, _1254, _1255));
        float _1736 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
        float _1344 = isnan(1.0) ? _1736 : (isnan(_1736) ? 1.0 : min(_1736, 1.0));
        float _1363 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1232) * 0.949999988079071044921875);
        float _1364 = _1363 * _1363;
        float _1365 = g_sceneCB._m0[4u].x - _1156;
        float _1366 = g_sceneCB._m0[4u].y - _1157;
        float _1367 = g_sceneCB._m0[4u].z - _1158;
        float _1371 = inversesqrt(dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367)));
        float _1372 = _1371 * _1365;
        float _1373 = _1371 * _1366;
        float _1374 = _1371 * _1367;
        float _1375 = dot(vec3(_1253, _1254, _1255), vec3(g_sceneCB._m0[4u].xyz));
        float _1747 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1378 = isnan(1.0) ? _1747 : (isnan(_1747) ? 1.0 : min(_1747, 1.0));
        float _1379 = dot(vec3(_1253, _1254, _1255), vec3(_1270, _1272, _1273));
        float _1758 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1382 = isnan(1.0) ? _1758 : (isnan(_1758) ? 1.0 : min(_1758, 1.0));
        float _1383 = dot(vec3(_1253, _1254, _1255), vec3(_1372, _1373, _1374));
        float _1769 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1386 = isnan(1.0) ? _1769 : (isnan(_1769) ? 1.0 : min(_1769, 1.0));
        float _1387 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1372, _1373, _1374));
        float _1780 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1391 = _1364 * _1364;
        float _1395 = ((_1386 * _1386) * (_1391 + (-1.0))) + 1.0;
        float _1407 = (exp2(log2(1.0 - (isnan(1.0) ? _1780 : (isnan(_1780) ? 1.0 : min(_1780, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1409 = 1.0 - _1364;
        float _1420 = (0.5 / (((_1382 * ((_1378 * _1409) + _1364)) + 9.9999999392252902907785028219223e-09) + (((_1382 * _1409) + _1364) * _1378))) * _1378;
        float _1791 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1422 = (isnan(1.0) ? _1791 : (isnan(_1791) ? 1.0 : min(_1791, 1.0))) * (_1391 / ((_1395 * _1395) * 3.141590118408203125));
        _1429 = ((_992 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1344;
        _1430 = ((_993 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1344;
        _1431 = ((_994 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1344;
        _1432 = (_1407 * g_sceneCB._m0[5u].x) * _1422;
        _1433 = (_1407 * g_sceneCB._m0[5u].y) * _1422;
        _1434 = (_1407 * g_sceneCB._m0[5u].z) * _1422;
    }
    else
    {
        _1429 = 0.0;
        _1430 = 0.0;
        _1431 = 0.0;
        _1432 = 0.0;
        _1433 = 0.0;
        _1434 = 0.0;
    }
    bool _1436 = abs(_1254) < 0.89999997615814208984375;
    float _1438 = float(_1436);
    float _1439 = _1436 ? 0.0 : 1.0;
    float _1442 = (_1438 * _1255) - (_1439 * _1254);
    float _1443 = _1439 * _1253;
    float _1445 = (-0.0) - (_1253 * _1438);
    float _1449 = inversesqrt(dot(vec3(_1442, _1443, _1445), vec3(_1442, _1443, _1445)));
    float _1450 = _1442 * _1449;
    float _1451 = _1443 * _1449;
    float _1452 = _1449 * _1445;
    float _1455 = (_1451 * _1255) - (_1452 * _1254);
    float _1458 = (_1452 * _1253) - (_1450 * _1255);
    float _1461 = (_1450 * _1254) - (_1451 * _1253);
    float _1463;
    float _1471;
    float _1462 = 0.0;
    uint _1464 = 0u;
    float _1468;
    bool _1470;
    for (;;)
    {
        _1468 = (float(_1464) + _1297) * 0.03125;
        _1470 = _1464 == 0u;
        float frontier_phi_51_pred;
        if (_1470)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1605;
            float _1606;
            uint _1608;
            _1605 = 0.0;
            _1606 = 0.5;
            _1608 = _1464;
            float _1472;
            for (;;)
            {
                _1472 = ((_1608 & 1u) != 0u) ? (_1606 + _1605) : _1605;
                uint _1609 = _1608 >> 1u;
                if (_1609 == 0u)
                {
                    break;
                }
                else
                {
                    _1605 = _1472;
                    _1606 *= 0.5;
                    _1608 = _1609;
                }
            }
            frontier_phi_51_pred = _1472;
        }
        _1471 = frontier_phi_51_pred;
        float _1473 = _1471 + _1310;
        float _1477 = sqrt(_1468);
        float _1478 = ((_1473 > 1.0) ? (_1473 + (-1.0)) : _1473) * 6.283185482025146484375;
        float _1481 = cos(_1478) * _1477;
        float _1483 = sin(_1478) * _1477;
        float _1485 = sqrt(1.0 - _1468);
        float _1498 = ((_1485 * _1253) + (_1481 * _1455)) + (_1483 * _1450);
        float _1499 = ((_1485 * _1254) + (_1481 * _1458)) + (_1483 * _1451);
        float _1500 = ((_1485 * _1255) + (_1481 * _1461)) + (_1483 * _1452);
        _64._m0 = 1u;
        uvec4 _1504 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1505 = _1504.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1505, _1504.w, _1505, vec3(_1267, _1268, _1269), 9.9999997473787516355514526367188e-05, vec3(_1498, _1499, _1500), 10000.0, 1);
        float _1511 = dot(vec3(_1253, _1254, _1255), vec3(_1498, _1499, _1500));
        float _1802 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1514 = isnan(1.0) ? _1802 : (isnan(_1802) ? 1.0 : min(_1802, 1.0));
        _1463 = ((float(_64._m0 == 0u) * _1514) / (_1514 * 0.3183098733425140380859375)) + _1462;
        uint _1465 = _1464 + 1u;
        if (_1465 == 32u)
        {
            break;
        }
        else
        {
            _1462 = _1463;
            _1464 = _1465;
            continue;
        }
    }
    float _1522 = _1463 * 0.009947183541953563690185546875;
    float _1527 = dot(vec3(_1156, _1157, _1158), vec3(_1253, _1254, _1255)) * 2.0;
    vec4 _1541 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1156 - (_1527 * _1253), _1157 - (_1527 * _1254), _1158 - (_1527 * _1255)), 4.0 - (_1232 * 4.0));
    float _1546 = dot(vec3(_1270, _1272, _1273), vec3(_1253, _1254, _1255));
    float _1813 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
    float _1555 = (exp2(log2(1.0 - (isnan(1.0) ? _1813 : (isnan(_1813) ? 1.0 : min(_1813, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1561 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1253, _1254, _1255), 0.0);
    float _1572 = (_1432 + _1429) + (((_1561.x * _992) + (_1555 * _1541.x)) * _1522);
    float _1576 = (_1433 + _1430) + (((_1561.y * _993) + (_1555 * _1541.y)) * _1522);
    float _1580 = (_1434 + _1431) + (((_1561.z * _994) + (_1555 * _1541.z)) * _1522);
    float _1824 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
    float _1835 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    float _1846 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
    bool _1588 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1599;
    _1599.x = _1588 ? ((_694 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1824 : (isnan(_1824) ? 1.0 : min(_1824, 1.0)));
    _1599.y = _1588 ? ((_697 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1835 : (isnan(_1835) ? 1.0 : min(_1835, 1.0)));
    _1599.z = _1588 ? ((_700 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1846 : (isnan(_1846) ? 1.0 : min(_1846, 1.0)));
    payload._m0 = _1599;
}


