#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 1) uniform texture2D M_Crystal_Opacity_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Crystal_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Crystal_Opacity_snp_0_Texture2D_5;
layout(set = 0, binding = 4) uniform texture2D M_Crystal_Opacity_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1316;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _157 & 65535u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        else
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _158 >> 16u;
        }
        _163 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
        _166 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    bool _228 = _172 == 0u;
    uint _229;
    if (_228)
    {
        _229 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _229 = frontier_phi_9_10_ladder;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int(((_177 + 4u) + (_173 ? (_229 + 4u) : _229)) >> 2u));
    uint _238 = _237.x;
    float _242 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _243 = float(int(uint(int(_238) >> int(16u))));
    uint _244 = _171 * _165;
    uint _245 = _244 + 12u;
    uint _266;
    uint _267;
    uint _268;
    uint _269;
    if (_176)
    {
        uvec4 _247 = texelFetch(l_geomAttrib_0, int(_245 >> 2u));
        uint _248 = _247.x;
        _266 = _248 & 255u;
        _267 = (_248 >> 8u) & 255u;
        _268 = (_248 >> 16u) & 255u;
        _269 = 16u;
    }
    else
    {
        uint _254 = _245 >> 2u;
        uvec2 _260 = uvec2(texelFetch(l_geomAttrib_0, int(_254)).x, texelFetch(l_geomAttrib_0, int(_254 + 1u)).x);
        uint _261 = _260.x;
        _266 = _261 & 65535u;
        _267 = _261 >> 16u;
        _268 = _260.y & 65535u;
        _269 = 20u;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((_269 + _244) >> 2u));
    uint _276 = _275.x;
    uint _288;
    if (_228)
    {
        _288 = _269 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _269 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _269 + 12u;
        }
        _288 = frontier_phi_16_17_ladder;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int(((_244 + 4u) + (_173 ? (_288 + 4u) : _288)) >> 2u));
    uint _297 = _296.x;
    float _301 = float(int(uint(int(_297 << 16u) >> int(16u))));
    float _302 = float(int(uint(int(_297) >> int(16u))));
    uint _303 = _171 * _166;
    uint _304 = _303 + 12u;
    uint _325;
    uint _326;
    uint _327;
    uint _328;
    if (_176)
    {
        uvec4 _306 = texelFetch(l_geomAttrib_0, int(_304 >> 2u));
        uint _307 = _306.x;
        _325 = _307 & 255u;
        _326 = (_307 >> 8u) & 255u;
        _327 = (_307 >> 16u) & 255u;
        _328 = 16u;
    }
    else
    {
        uint _313 = _304 >> 2u;
        uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
        uint _320 = _319.x;
        _325 = _320 & 65535u;
        _326 = _320 >> 16u;
        _327 = _319.y & 65535u;
        _328 = 20u;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int((_328 + _303) >> 2u));
    uint _335 = _334.x;
    uint _347;
    if (_228)
    {
        _347 = _328 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _328 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _328 + 12u;
        }
        _347 = frontier_phi_23_24_ladder;
    }
    uvec4 _355 = texelFetch(l_geomAttrib_0, int(((_303 + 4u) + (_173 ? (_347 + 4u) : _347)) >> 2u));
    uint _356 = _355.x;
    float _360 = float(int(uint(int(_356 << 16u) >> int(16u))));
    float _361 = float(int(uint(int(_356) >> int(16u))));
    bool _363 = _122.z == 0u;
    float _399;
    float _400;
    float _401;
    if (_363)
    {
        uint _366 = _163 * 3u;
        uvec3 _375 = uvec3(texelFetch(l_geomPositionBuffer, int(_366)).x, texelFetch(l_geomPositionBuffer, int(_366 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_366 + 2u)).x);
        _399 = uintBitsToFloat(_375.x);
        _400 = uintBitsToFloat(_375.y);
        _401 = uintBitsToFloat(_375.z);
    }
    else
    {
        uint _383 = _163 * 2u;
        uvec2 _389 = uvec2(texelFetch(l_geomPositionBuffer, int(_383)).x, texelFetch(l_geomPositionBuffer, int(_383 + 1u)).x);
        uint _390 = _389.x;
        _399 = unpackHalf2x16(_390).x;
        _400 = unpackHalf2x16(_390 >> 16u).x;
        _401 = unpackHalf2x16(_389.y).x;
    }
    float _437;
    float _438;
    float _439;
    if (_363)
    {
        uint _404 = _165 * 3u;
        uvec3 _413 = uvec3(texelFetch(l_geomPositionBuffer, int(_404)).x, texelFetch(l_geomPositionBuffer, int(_404 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_404 + 2u)).x);
        _437 = uintBitsToFloat(_413.x);
        _438 = uintBitsToFloat(_413.y);
        _439 = uintBitsToFloat(_413.z);
    }
    else
    {
        uint _421 = _165 * 2u;
        uvec2 _427 = uvec2(texelFetch(l_geomPositionBuffer, int(_421)).x, texelFetch(l_geomPositionBuffer, int(_421 + 1u)).x);
        uint _428 = _427.x;
        _437 = unpackHalf2x16(_428).x;
        _438 = unpackHalf2x16(_428 >> 16u).x;
        _439 = unpackHalf2x16(_427.y).x;
    }
    float _475;
    float _476;
    float _477;
    if (_363)
    {
        uint _442 = _166 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _166 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _480 = (1.0 - hit._m0.x) - hit._m0.y;
    float _514 = (_301 - _242) * 0.00048828125;
    float _516 = (_302 - _243) * 0.00048828125;
    float _519 = (_360 - _242) * 0.00048828125;
    float _520 = (_361 - _243) * 0.00048828125;
    float _542 = _437 - _399;
    float _543 = _438 - _400;
    float _544 = _439 - _401;
    float _547 = fma(_544, gl_ObjectToWorldEXT[2u].x, fma(_543, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _542));
    float _550 = fma(_544, gl_ObjectToWorldEXT[2u].y, fma(_543, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _542));
    float _553 = fma(_544, gl_ObjectToWorldEXT[2u].z, fma(_543, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _542));
    float _554 = _475 - _399;
    float _555 = _476 - _400;
    float _556 = _477 - _401;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = (((_301 * hit._m0.x) + (_242 * _480)) + (_360 * hit._m0.y)) * 0.00048828125;
    float _567 = (((_302 * hit._m0.x) + (_243 * _480)) + (_361 * hit._m0.y)) * 0.00048828125;
    float _571 = (((float(_202) * _480) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _574 = (((float(_203) * _480) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _577 = (((float(_204) * _480) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _578 = _571 * 0.0078740157186985015869140625;
    float _580 = _574 * 0.0078740157186985015869140625;
    float _581 = _577 * 0.0078740157186985015869140625;
    float _594 = ((((float(_214 & 255u) * _480) + (-127.0)) + (float(_276 & 255u) * hit._m0.x)) + (float(_335 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float((_214 >> 8u) & 255u) * _480) + (-127.0)) + (float((_276 >> 8u) & 255u) * hit._m0.x)) + (float((_335 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _596 = ((((float((_214 >> 16u) & 255u) * _480) + (-127.0)) + (float((_276 >> 16u) & 255u) * hit._m0.x)) + (float((_335 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _597 = ((((float(_214 >> 24u) * _480) + (-127.0)) + (float(_276 >> 24u) * hit._m0.x)) + (float(_335 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((_595 * _581) - (_596 * _580)) * _597;
    float _608 = ((_596 * _578) - (_594 * _581)) * _597;
    float _609 = ((_594 * _580) - (_595 * _578)) * _597;
    float _613 = inversesqrt(dot(vec3(_607, _608, _609), vec3(_607, _608, _609)));
    float _614 = _613 * _607;
    float _615 = _613 * _608;
    float _616 = _613 * _609;
    uvec2 _628 = uvec2(textureSize(M_Crystal_Opacity_snp_0_Texture2D_5, int(0u)));
    bool _633 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _686;
    if (_633)
    {
        float _644 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _650 = (_565 * _550) - (_562 * _553);
        float _653 = (_559 * _553) - (_565 * _547);
        float _656 = (_562 * _547) - (_559 * _550);
        float _683 = ((log2((((float(_628.y) * 0.5) * float(_628.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_653 * _653) + (_656 * _656)) + (_650 * _650)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_644 * gl_WorldRayDirectionEXT.x, _644 * gl_WorldRayDirectionEXT.y, _644 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _686 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    }
    else
    {
        _686 = 0.0;
    }
    vec4 _690 = textureLod(sampler2D(M_Crystal_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _566) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _567) + cbTextureTilingScale._m0[3u].w), _686);
    float _705 = dot(vec3(0.0), vec3(_614, _615, _616));
    float _708 = dot(vec3(0.0), vec3(_594, _595, _596));
    float _711 = dot(vec3(0.0), vec3(_578, _580, _581));
    float _717 = inversesqrt(dot(vec3(_705, _708, _711), vec3(_705, _708, _711)));
    float _740 = dot(vec4(textureLod(sampler2D(M_Crystal_Opacity_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _566) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _567) + cbTextureTilingScale._m0[2u].w), 0.0)), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[12u].y;
    uvec2 _760 = uvec2(textureSize(M_Crystal_Opacity_snp_0_Texture2D_1, int(0u)));
    float _811;
    if (_633)
    {
        float _771 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _777 = (_565 * _550) - (_562 * _553);
        float _780 = (_559 * _553) - (_565 * _547);
        float _783 = (_562 * _547) - (_559 * _550);
        float _809 = ((log2((((float(_760.y) * 0.5) * float(_760.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_780 * _780) + (_783 * _783)) + (_777 * _777)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_771 * gl_WorldRayDirectionEXT.x, _771 * gl_WorldRayDirectionEXT.y, _771 * gl_WorldRayDirectionEXT.z), vec3(_578, _580, _581))));
        _811 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    }
    else
    {
        _811 = 0.0;
    }
    vec4 _813 = textureLod(sampler2D(M_Crystal_Opacity_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_705 * cbMtdParam._m0[12u].x) * _717) * _740) + _566) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_708 * cbMtdParam._m0[12u].x) * _717) * _740) + _567) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _811);
    float _836 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_578, _580, _581, 0.0)) - cbMtdParam._m0[12u].z;
    float _1404 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _843 = exp2(log2(1.0 - (isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].w : (isnan(cbMtdParam._m0[12u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].w, 0.001000000047497451305389404296875))));
    float _859 = ((((_690.x * 4.55000019073486328125) * cbMtdParam._m0[10u].x) * _813.x) * cbMtdParam._m0[9u].x) * ((_843 * (cbMtdParam._m0[11u].x + (-1.0))) + 1.0);
    float _864 = ((((_690.y * 4.55000019073486328125) * cbMtdParam._m0[10u].y) * _813.y) * cbMtdParam._m0[9u].y) * ((_843 * (cbMtdParam._m0[11u].y + (-1.0))) + 1.0);
    float _869 = ((((_690.z * 4.55000019073486328125) * cbMtdParam._m0[10u].z) * _813.z) * cbMtdParam._m0[9u].z) * ((_843 * (cbMtdParam._m0[11u].z + (-1.0))) + 1.0);
    uvec2 _881 = uvec2(textureSize(M_Crystal_Opacity_snp_0_Texture2D_7, int(0u)));
    float _885 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _886 = _885 * gl_WorldRayDirectionEXT.x;
    float _887 = _885 * gl_WorldRayDirectionEXT.y;
    float _888 = _885 * gl_WorldRayDirectionEXT.z;
    float _932;
    if (_633)
    {
        float _898 = (_565 * _550) - (_562 * _553);
        float _901 = (_559 * _553) - (_565 * _547);
        float _904 = (_562 * _547) - (_559 * _550);
        float _930 = ((log2((((float(_881.y) * 0.5) * float(_881.x)) * abs((_520 * _514) - (_519 * _516))) / (sqrt(((_901 * _901) + (_904 * _904)) + (_898 * _898)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_886, _887, _888), vec3(_578, _580, _581))));
        _932 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    }
    else
    {
        _932 = 0.0;
    }
    vec4 _935 = textureLod(sampler2D(M_Crystal_Opacity_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _566) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _567) + cbTextureTilingScale._m0[4u].w), _932);
    float _942 = (_935.x * 2.0) + (-1.0);
    float _943 = (_935.y * 2.0) + (-1.0);
    float _944 = dot(vec2(_942, _943), vec2(_942, _943));
    float _1425 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
    float _949 = sqrt(1.0 - (isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0))));
    float _954 = cbMtdParam._m0[13u].y + _935.z;
    float _957 = fma(_949, _578, fma(_943, _594, _942 * _614));
    float _960 = fma(_949, _580, fma(_943, _595, _942 * _615));
    float _963 = fma(_949, _581, fma(_943, _596, _942 * _616));
    float _967 = inversesqrt(dot(vec3(_957, _960, _963), vec3(_957, _960, _963)));
    float _968 = _967 * _957;
    float _969 = _967 * _960;
    float _970 = _967 * _963;
    float _982 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _983 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _984 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _985 = (-0.0) - _886;
    float _987 = (-0.0) - _887;
    float _988 = (-0.0) - _888;
    float _994 = float(gl_LaunchIDEXT.x);
    float _995 = float(gl_LaunchIDEXT.y);
    float _998 = float(gl_LaunchSizeEXT.x);
    float _1012 = fract(fract(sin(dot(vec2(_994 / _998, _995 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1025 = fract(fract(sin(dot(vec2((_994 + 128.0) / _998, (_995 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _64._m0 = 1u;
    uvec4 _1035 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1036 = _1035.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1036, _1035.w, _1036, vec3(_982, _983, _984), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1145;
    float _1146;
    float _1147;
    float _1148;
    float _1149;
    float _1150;
    if (_64._m0 == 0u)
    {
        float _1057 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_968, _969, _970));
        float _1436 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1060 = isnan(1.0) ? _1436 : (isnan(_1436) ? 1.0 : min(_1436, 1.0));
        float _1079 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _954) * 0.949999988079071044921875);
        float _1080 = _1079 * _1079;
        float _1081 = g_sceneCB._m0[4u].x - _886;
        float _1082 = g_sceneCB._m0[4u].y - _887;
        float _1083 = g_sceneCB._m0[4u].z - _888;
        float _1087 = inversesqrt(dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083)));
        float _1088 = _1087 * _1081;
        float _1089 = _1087 * _1082;
        float _1090 = _1087 * _1083;
        float _1091 = dot(vec3(_968, _969, _970), vec3(g_sceneCB._m0[4u].xyz));
        float _1447 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1094 = isnan(1.0) ? _1447 : (isnan(_1447) ? 1.0 : min(_1447, 1.0));
        float _1095 = dot(vec3(_968, _969, _970), vec3(_985, _987, _988));
        float _1458 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1098 = isnan(1.0) ? _1458 : (isnan(_1458) ? 1.0 : min(_1458, 1.0));
        float _1099 = dot(vec3(_968, _969, _970), vec3(_1088, _1089, _1090));
        float _1469 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1102 = isnan(1.0) ? _1469 : (isnan(_1469) ? 1.0 : min(_1469, 1.0));
        float _1103 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1088, _1089, _1090));
        float _1480 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = _1080 * _1080;
        float _1111 = ((_1102 * _1102) * (_1107 + (-1.0))) + 1.0;
        float _1123 = (exp2(log2(1.0 - (isnan(1.0) ? _1480 : (isnan(_1480) ? 1.0 : min(_1480, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1125 = 1.0 - _1080;
        float _1136 = (0.5 / (((_1098 * ((_1094 * _1125) + _1080)) + 9.9999999392252902907785028219223e-09) + (((_1098 * _1125) + _1080) * _1094))) * _1094;
        float _1491 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1138 = (isnan(1.0) ? _1491 : (isnan(_1491) ? 1.0 : min(_1491, 1.0))) * (_1107 / ((_1111 * _1111) * 3.141590118408203125));
        _1145 = ((_859 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1060;
        _1146 = ((_864 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1060;
        _1147 = ((_869 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1060;
        _1148 = (_1123 * g_sceneCB._m0[5u].x) * _1138;
        _1149 = (_1123 * g_sceneCB._m0[5u].y) * _1138;
        _1150 = (_1123 * g_sceneCB._m0[5u].z) * _1138;
    }
    else
    {
        _1145 = 0.0;
        _1146 = 0.0;
        _1147 = 0.0;
        _1148 = 0.0;
        _1149 = 0.0;
        _1150 = 0.0;
    }
    bool _1152 = abs(_969) < 0.89999997615814208984375;
    float _1154 = float(_1152);
    float _1155 = _1152 ? 0.0 : 1.0;
    float _1158 = (_1154 * _970) - (_1155 * _969);
    float _1159 = _1155 * _968;
    float _1161 = (-0.0) - (_968 * _1154);
    float _1165 = inversesqrt(dot(vec3(_1158, _1159, _1161), vec3(_1158, _1159, _1161)));
    float _1166 = _1158 * _1165;
    float _1167 = _1159 * _1165;
    float _1168 = _1165 * _1161;
    float _1171 = (_1167 * _970) - (_1168 * _969);
    float _1174 = (_1168 * _968) - (_1166 * _970);
    float _1177 = (_1166 * _969) - (_1167 * _968);
    float _1179;
    float _1187;
    float _1178 = 0.0;
    uint _1180 = 0u;
    float _1184;
    bool _1186;
    for (;;)
    {
        _1184 = (float(_1180) + _1012) * 0.03125;
        _1186 = _1180 == 0u;
        float frontier_phi_45_pred;
        if (_1186)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1321;
            float _1322;
            uint _1324;
            _1321 = 0.0;
            _1322 = 0.5;
            _1324 = _1180;
            float _1188;
            for (;;)
            {
                _1188 = ((_1324 & 1u) != 0u) ? (_1322 + _1321) : _1321;
                uint _1325 = _1324 >> 1u;
                if (_1325 == 0u)
                {
                    break;
                }
                else
                {
                    _1321 = _1188;
                    _1322 *= 0.5;
                    _1324 = _1325;
                }
            }
            frontier_phi_45_pred = _1188;
        }
        _1187 = frontier_phi_45_pred;
        float _1189 = _1187 + _1025;
        float _1193 = sqrt(_1184);
        float _1194 = ((_1189 > 1.0) ? (_1189 + (-1.0)) : _1189) * 6.283185482025146484375;
        float _1197 = cos(_1194) * _1193;
        float _1199 = sin(_1194) * _1193;
        float _1201 = sqrt(1.0 - _1184);
        float _1214 = ((_1201 * _968) + (_1197 * _1171)) + (_1199 * _1166);
        float _1215 = ((_1201 * _969) + (_1197 * _1174)) + (_1199 * _1167);
        float _1216 = ((_1201 * _970) + (_1197 * _1177)) + (_1199 * _1168);
        _63._m0 = 1u;
        uvec4 _1220 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1221 = _1220.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1221, _1220.w, _1221, vec3(_982, _983, _984), 9.9999997473787516355514526367188e-05, vec3(_1214, _1215, _1216), 10000.0, 1);
        float _1227 = dot(vec3(_968, _969, _970), vec3(_1214, _1215, _1216));
        float _1502 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1230 = isnan(1.0) ? _1502 : (isnan(_1502) ? 1.0 : min(_1502, 1.0));
        _1179 = ((float(_63._m0 == 0u) * _1230) / (_1230 * 0.3183098733425140380859375)) + _1178;
        uint _1181 = _1180 + 1u;
        if (_1181 == 32u)
        {
            break;
        }
        else
        {
            _1178 = _1179;
            _1180 = _1181;
            continue;
        }
    }
    float _1238 = _1179 * 0.009947183541953563690185546875;
    float _1243 = dot(vec3(_886, _887, _888), vec3(_968, _969, _970)) * 2.0;
    vec4 _1257 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_886 - (_1243 * _968), _887 - (_1243 * _969), _888 - (_1243 * _970)), 4.0 - (_954 * 4.0));
    float _1262 = dot(vec3(_985, _987, _988), vec3(_968, _969, _970));
    float _1513 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    float _1271 = (exp2(log2(1.0 - (isnan(1.0) ? _1513 : (isnan(_1513) ? 1.0 : min(_1513, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1277 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_968, _969, _970), 0.0);
    float _1288 = (_1148 + _1145) + (((_1277.x * _859) + (_1271 * _1257.x)) * _1238);
    float _1292 = (_1149 + _1146) + (((_1277.y * _864) + (_1271 * _1257.y)) * _1238);
    float _1296 = (_1150 + _1147) + (((_1277.z * _869) + (_1271 * _1257.z)) * _1238);
    float _1524 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
    float _1535 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
    float _1546 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    bool _1304 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1315;
    _1315.x = _1304 ? ((_571 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0)));
    _1315.y = _1304 ? ((_574 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0)));
    _1315.z = _1304 ? ((_577 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1546 : (isnan(_1546) ? 1.0 : min(_1546, 1.0)));
    payload._m0 = _1315;
}


