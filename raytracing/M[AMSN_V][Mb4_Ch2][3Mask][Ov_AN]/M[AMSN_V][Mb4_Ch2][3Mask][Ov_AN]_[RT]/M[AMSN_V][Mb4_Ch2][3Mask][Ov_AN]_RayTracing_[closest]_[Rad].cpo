#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _2118;

void main()
{
    float _79 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _79)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    uint _233 = _184 + 4u;
    uvec4 _237 = texelFetch(l_geomAttrib_0, int((_233 + _212) >> 2u));
    uint _238 = _237.x;
    uint _247 = _212 | 8u;
    bool _248 = _179 == 0u;
    uint _249;
    if (_248)
    {
        _249 = _247;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _247 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _247 + 8u;
        }
        _249 = frontier_phi_9_10_ladder;
    }
    uint _255 = (_233 + (_180 ? (_249 + 4u) : _249)) >> 2u;
    uvec2 _261 = uvec2(texelFetch(l_geomAttrib_0, int(_255)).x, texelFetch(l_geomAttrib_0, int(_255 + 1u)).x);
    uint _262 = _261.x;
    uint _263 = _261.y;
    float _267 = float(int(uint(int(_262 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_262) >> int(16u))));
    float _272 = float(int(uint(int(_263 << 16u) >> int(16u))));
    float _273 = float(int(uint(int(_263) >> int(16u))));
    uint _274 = _178 * _172;
    uint _275 = _274 + 12u;
    uint _296;
    uint _297;
    uint _298;
    uint _299;
    if (_183)
    {
        uvec4 _277 = texelFetch(l_geomAttrib_0, int(_275 >> 2u));
        uint _278 = _277.x;
        _296 = _278 & 255u;
        _297 = (_278 >> 8u) & 255u;
        _298 = (_278 >> 16u) & 255u;
        _299 = 16u;
    }
    else
    {
        uint _284 = _275 >> 2u;
        uvec2 _290 = uvec2(texelFetch(l_geomAttrib_0, int(_284)).x, texelFetch(l_geomAttrib_0, int(_284 + 1u)).x);
        uint _291 = _290.x;
        _296 = _291 & 65535u;
        _297 = _291 >> 16u;
        _298 = _290.y & 65535u;
        _299 = 20u;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int((_299 + _274) >> 2u));
    uint _306 = _305.x;
    uint _317 = _274 + 4u;
    uvec4 _320 = texelFetch(l_geomAttrib_0, int((_317 + _299) >> 2u));
    uint _321 = _320.x;
    uint _330 = _299 | 8u;
    uint _331;
    if (_248)
    {
        _331 = _330;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _330 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _330 + 8u;
        }
        _331 = frontier_phi_16_17_ladder;
    }
    uint _337 = (_317 + (_180 ? (_331 + 4u) : _331)) >> 2u;
    uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
    uint _344 = _343.x;
    uint _345 = _343.y;
    float _349 = float(int(uint(int(_344 << 16u) >> int(16u))));
    float _350 = float(int(uint(int(_344) >> int(16u))));
    float _354 = float(int(uint(int(_345 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_345) >> int(16u))));
    uint _356 = _178 * _173;
    uint _357 = _356 + 12u;
    uint _378;
    uint _379;
    uint _380;
    uint _381;
    if (_183)
    {
        uvec4 _359 = texelFetch(l_geomAttrib_0, int(_357 >> 2u));
        uint _360 = _359.x;
        _378 = _360 & 255u;
        _379 = (_360 >> 8u) & 255u;
        _380 = (_360 >> 16u) & 255u;
        _381 = 16u;
    }
    else
    {
        uint _366 = _357 >> 2u;
        uvec2 _372 = uvec2(texelFetch(l_geomAttrib_0, int(_366)).x, texelFetch(l_geomAttrib_0, int(_366 + 1u)).x);
        uint _373 = _372.x;
        _378 = _373 & 65535u;
        _379 = _373 >> 16u;
        _380 = _372.y & 65535u;
        _381 = 20u;
    }
    uvec4 _387 = texelFetch(l_geomAttrib_0, int((_381 + _356) >> 2u));
    uint _388 = _387.x;
    uint _399 = _356 + 4u;
    uvec4 _402 = texelFetch(l_geomAttrib_0, int((_399 + _381) >> 2u));
    uint _403 = _402.x;
    uint _412 = _381 | 8u;
    uint _413;
    if (_248)
    {
        _413 = _412;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _412 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _412 + 8u;
        }
        _413 = frontier_phi_23_24_ladder;
    }
    uint _419 = (_399 + (_180 ? (_413 + 4u) : _413)) >> 2u;
    uvec2 _425 = uvec2(texelFetch(l_geomAttrib_0, int(_419)).x, texelFetch(l_geomAttrib_0, int(_419 + 1u)).x);
    uint _426 = _425.x;
    uint _427 = _425.y;
    float _431 = float(int(uint(int(_426 << 16u) >> int(16u))));
    float _432 = float(int(uint(int(_426) >> int(16u))));
    float _436 = float(int(uint(int(_427 << 16u) >> int(16u))));
    float _437 = float(int(uint(int(_427) >> int(16u))));
    bool _439 = _129.z == 0u;
    float _475;
    float _476;
    float _477;
    if (_439)
    {
        uint _442 = _170 * 3u;
        uvec3 _451 = uvec3(texelFetch(l_geomPositionBuffer, int(_442)).x, texelFetch(l_geomPositionBuffer, int(_442 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_442 + 2u)).x);
        _475 = uintBitsToFloat(_451.x);
        _476 = uintBitsToFloat(_451.y);
        _477 = uintBitsToFloat(_451.z);
    }
    else
    {
        uint _459 = _170 * 2u;
        uvec2 _465 = uvec2(texelFetch(l_geomPositionBuffer, int(_459)).x, texelFetch(l_geomPositionBuffer, int(_459 + 1u)).x);
        uint _466 = _465.x;
        _475 = unpackHalf2x16(_466).x;
        _476 = unpackHalf2x16(_466 >> 16u).x;
        _477 = unpackHalf2x16(_465.y).x;
    }
    float _513;
    float _514;
    float _515;
    if (_439)
    {
        uint _480 = _172 * 3u;
        uvec3 _489 = uvec3(texelFetch(l_geomPositionBuffer, int(_480)).x, texelFetch(l_geomPositionBuffer, int(_480 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_480 + 2u)).x);
        _513 = uintBitsToFloat(_489.x);
        _514 = uintBitsToFloat(_489.y);
        _515 = uintBitsToFloat(_489.z);
    }
    else
    {
        uint _497 = _172 * 2u;
        uvec2 _503 = uvec2(texelFetch(l_geomPositionBuffer, int(_497)).x, texelFetch(l_geomPositionBuffer, int(_497 + 1u)).x);
        uint _504 = _503.x;
        _513 = unpackHalf2x16(_504).x;
        _514 = unpackHalf2x16(_504 >> 16u).x;
        _515 = unpackHalf2x16(_503.y).x;
    }
    float _551;
    float _552;
    float _553;
    if (_439)
    {
        uint _518 = _173 * 3u;
        uvec3 _527 = uvec3(texelFetch(l_geomPositionBuffer, int(_518)).x, texelFetch(l_geomPositionBuffer, int(_518 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_518 + 2u)).x);
        _551 = uintBitsToFloat(_527.x);
        _552 = uintBitsToFloat(_527.y);
        _553 = uintBitsToFloat(_527.z);
    }
    else
    {
        uint _535 = _173 * 2u;
        uvec2 _541 = uvec2(texelFetch(l_geomPositionBuffer, int(_535)).x, texelFetch(l_geomPositionBuffer, int(_535 + 1u)).x);
        uint _542 = _541.x;
        _551 = unpackHalf2x16(_542).x;
        _552 = unpackHalf2x16(_542 >> 16u).x;
        _553 = unpackHalf2x16(_541.y).x;
    }
    float _556 = (1.0 - hit._m0.x) - hit._m0.y;
    float _609 = (_349 - _267) * 0.00048828125;
    float _611 = (_350 - _268) * 0.00048828125;
    float _614 = (_431 - _267) * 0.00048828125;
    float _615 = (_432 - _268) * 0.00048828125;
    float _618 = (_354 - _272) * 0.00048828125;
    float _619 = (_355 - _273) * 0.00048828125;
    float _622 = (_436 - _272) * 0.00048828125;
    float _623 = (_437 - _273) * 0.00048828125;
    float _645 = _513 - _475;
    float _646 = _514 - _476;
    float _647 = _515 - _477;
    float _650 = fma(_647, gl_ObjectToWorldEXT[2u].x, fma(_646, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _645));
    float _653 = fma(_647, gl_ObjectToWorldEXT[2u].y, fma(_646, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _645));
    float _656 = fma(_647, gl_ObjectToWorldEXT[2u].z, fma(_646, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _645));
    float _657 = _551 - _475;
    float _658 = _552 - _476;
    float _659 = _553 - _477;
    float _662 = fma(_659, gl_ObjectToWorldEXT[2u].x, fma(_658, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _657));
    float _665 = fma(_659, gl_ObjectToWorldEXT[2u].y, fma(_658, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _657));
    float _668 = fma(_659, gl_ObjectToWorldEXT[2u].z, fma(_658, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _657));
    float _669 = (((_349 * hit._m0.x) + (_267 * _556)) + (_431 * hit._m0.y)) * 0.00048828125;
    float _670 = (((_350 * hit._m0.x) + (_268 * _556)) + (_432 * hit._m0.y)) * 0.00048828125;
    float _671 = (((_354 * hit._m0.x) + (_272 * _556)) + (_436 * hit._m0.y)) * 0.00048828125;
    float _672 = (((_355 * hit._m0.x) + (_273 * _556)) + (_437 * hit._m0.y)) * 0.00048828125;
    float _676 = (((float(_209) * _556) + (-127.0)) + (float(_296) * hit._m0.x)) + (float(_378) * hit._m0.y);
    float _679 = (((float(_210) * _556) + (-127.0)) + (float(_297) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _682 = (((float(_211) * _556) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _683 = _676 * 0.0078740157186985015869140625;
    float _685 = _679 * 0.0078740157186985015869140625;
    float _686 = _682 * 0.0078740157186985015869140625;
    float _699 = ((((float(_221 & 255u) * _556) + (-127.0)) + (float(_306 & 255u) * hit._m0.x)) + (float(_388 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _700 = ((((float((_221 >> 8u) & 255u) * _556) + (-127.0)) + (float((_306 >> 8u) & 255u) * hit._m0.x)) + (float((_388 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _701 = ((((float((_221 >> 16u) & 255u) * _556) + (-127.0)) + (float((_306 >> 16u) & 255u) * hit._m0.x)) + (float((_388 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _702 = ((((float(_221 >> 24u) * _556) + (-127.0)) + (float(_306 >> 24u) * hit._m0.x)) + (float(_388 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _724 = ((_700 * _686) - (_701 * _685)) * _702;
    float _725 = ((_701 * _683) - (_699 * _686)) * _702;
    float _726 = ((_699 * _685) - (_700 * _683)) * _702;
    float _730 = inversesqrt(dot(vec3(_724, _725, _726), vec3(_724, _725, _726)));
    float _731 = _730 * _724;
    float _732 = _730 * _725;
    float _733 = _730 * _726;
    uvec2 _751 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1, int(0u)));
    bool _756 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _809;
    if (_756)
    {
        float _767 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _773 = (_668 * _653) - (_665 * _656);
        float _776 = (_662 * _656) - (_668 * _650);
        float _779 = (_665 * _650) - (_662 * _653);
        float _806 = ((log2((((float(_751.y) * 0.5) * float(_751.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_776 * _776) + (_779 * _779)) + (_773 * _773)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_767 * gl_WorldRayDirectionEXT.x, _767 * gl_WorldRayDirectionEXT.y, _767 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _809 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    }
    else
    {
        _809 = 0.0;
    }
    vec4 _813 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _671) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _672) + cbTextureTilingScale._m0[1u].w), _809);
    float _818 = _813.x * cbMtdParam._m0[10u].x;
    float _819 = _813.y * cbMtdParam._m0[10u].y;
    float _820 = _813.z * cbMtdParam._m0[10u].z;
    uvec2 _838 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2, int(0u)));
    float _889;
    if (_756)
    {
        float _849 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _855 = (_668 * _653) - (_665 * _656);
        float _858 = (_662 * _656) - (_668 * _650);
        float _861 = (_665 * _650) - (_662 * _653);
        float _887 = ((log2((((float(_838.y) * 0.5) * float(_838.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_858 * _858) + (_861 * _861)) + (_855 * _855)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_849 * gl_WorldRayDirectionEXT.x, _849 * gl_WorldRayDirectionEXT.y, _849 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _889 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    }
    else
    {
        _889 = 0.0;
    }
    vec4 _891 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _671) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _672) + cbTextureTilingScale._m0[6u].w), _889);
    uvec2 _910 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0, int(0u)));
    float _961;
    if (_756)
    {
        float _921 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _927 = (_668 * _653) - (_665 * _656);
        float _930 = (_662 * _656) - (_668 * _650);
        float _933 = (_665 * _650) - (_662 * _653);
        float _959 = ((log2((((float(_910.y) * 0.5) * float(_910.x)) * abs((_615 * _609) - (_614 * _611))) / (sqrt(((_930 * _930) + (_933 * _933)) + (_927 * _927)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_921 * gl_WorldRayDirectionEXT.x, _921 * gl_WorldRayDirectionEXT.y, _921 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _961 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    }
    else
    {
        _961 = 0.0;
    }
    vec4 _964 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _669) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _670) + cbTextureTilingScale._m0[0u].w), _961);
    uvec2 _987 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3, int(0u)));
    float _1038;
    if (_756)
    {
        float _998 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1004 = (_668 * _653) - (_665 * _656);
        float _1007 = (_662 * _656) - (_668 * _650);
        float _1010 = (_665 * _650) - (_662 * _653);
        float _1036 = ((log2((((float(_987.y) * 0.5) * float(_987.x)) * abs((_615 * _609) - (_614 * _611))) / (sqrt(((_1007 * _1007) + (_1010 * _1010)) + (_1004 * _1004)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_998 * gl_WorldRayDirectionEXT.x, _998 * gl_WorldRayDirectionEXT.y, _998 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1038 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    }
    else
    {
        _1038 = 0.0;
    }
    float _1043 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _669) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _670) + cbTextureTilingScale._m0[7u].w), _1038).x;
    float _1053 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _964.x) * 2.0) - _1043)) + 1.0;
    float _2234 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    float _1054 = isnan(1.0) ? _2234 : (isnan(_2234) ? 1.0 : min(_2234, 1.0));
    float _1061 = (_1054 * ((_891.x * cbMtdParam._m0[11u].x) - _818)) + _818;
    float _1062 = (_1054 * ((_891.y * cbMtdParam._m0[11u].y) - _819)) + _819;
    float _1063 = (_1054 * ((_891.z * cbMtdParam._m0[11u].z) - _820)) + _820;
    uvec2 _1080 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8, int(0u)));
    float _1131;
    if (_756)
    {
        float _1091 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1097 = (_668 * _653) - (_665 * _656);
        float _1100 = (_662 * _656) - (_668 * _650);
        float _1103 = (_665 * _650) - (_662 * _653);
        float _1129 = ((log2((((float(_1080.y) * 0.5) * float(_1080.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1100 * _1100) + (_1103 * _1103)) + (_1097 * _1097)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1091 * gl_WorldRayDirectionEXT.x, _1091 * gl_WorldRayDirectionEXT.y, _1091 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1131 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    }
    else
    {
        _1131 = 0.0;
    }
    vec4 _1133 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _671) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _672) + cbTextureTilingScale._m0[11u].w), _1131);
    float _1146 = (((((1.0 - _964.y) * 2.0) - _1043) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].z) + 1.0;
    float _2250 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _1147 = isnan(1.0) ? _2250 : (isnan(_2250) ? 1.0 : min(_2250, 1.0));
    float _1154 = (((_1133.x * cbMtdParam._m0[12u].x) - _1061) * _1147) + _1061;
    float _1155 = (_1147 * ((_1133.y * cbMtdParam._m0[12u].y) - _1062)) + _1062;
    float _1156 = (_1147 * ((_1133.z * cbMtdParam._m0[12u].z) - _1063)) + _1063;
    uvec2 _1174 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11, int(0u)));
    float _1225;
    if (_756)
    {
        float _1185 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1191 = (_668 * _653) - (_665 * _656);
        float _1194 = (_662 * _656) - (_668 * _650);
        float _1197 = (_665 * _650) - (_662 * _653);
        float _1223 = ((log2((((float(_1174.y) * 0.5) * float(_1174.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1194 * _1194) + (_1197 * _1197)) + (_1191 * _1191)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1185 * gl_WorldRayDirectionEXT.x, _1185 * gl_WorldRayDirectionEXT.y, _1185 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1225 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    }
    else
    {
        _1225 = 0.0;
    }
    vec4 _1227 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _671) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _672) + cbTextureTilingScale._m0[2u].w), _1225);
    float _1240 = (((((1.0 - _964.z) * 2.0) - _1043) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].w) + 1.0;
    float _2266 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    float _1241 = isnan(1.0) ? _2266 : (isnan(_2266) ? 1.0 : min(_2266, 1.0));
    uvec2 _1268 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13, int(0u)));
    float _1319;
    if (_756)
    {
        float _1279 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1285 = (_668 * _653) - (_665 * _656);
        float _1288 = (_662 * _656) - (_668 * _650);
        float _1291 = (_665 * _650) - (_662 * _653);
        float _1317 = ((log2((((float(_1268.y) * 0.5) * float(_1268.x)) * abs((_615 * _609) - (_614 * _611))) / (sqrt(((_1288 * _1288) + (_1291 * _1291)) + (_1285 * _1285)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1279 * gl_WorldRayDirectionEXT.x, _1279 * gl_WorldRayDirectionEXT.y, _1279 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1319 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
    }
    else
    {
        _1319 = 0.0;
    }
    vec4 _1321 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _669) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _670) + cbTextureTilingScale._m0[3u].w), _1319);
    float _1329 = ((((((_1227.x * cbMtdParam._m0[13u].x) - _1154) * _1241) + _1154) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _1321.x;
    float _1332 = ((((_1241 * ((_1227.y * cbMtdParam._m0[13u].y) - _1155)) + _1155) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _1321.y;
    float _1335 = ((((_1241 * ((_1227.z * cbMtdParam._m0[13u].z) - _1156)) + _1156) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _1321.z;
    uvec2 _1347 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5, int(0u)));
    float _1398;
    if (_756)
    {
        float _1358 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1364 = (_668 * _653) - (_665 * _656);
        float _1367 = (_662 * _656) - (_668 * _650);
        float _1370 = (_665 * _650) - (_662 * _653);
        float _1396 = ((log2((((float(_1347.y) * 0.5) * float(_1347.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1367 * _1367) + (_1370 * _1370)) + (_1364 * _1364)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1358 * gl_WorldRayDirectionEXT.x, _1358 * gl_WorldRayDirectionEXT.y, _1358 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1398 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
    }
    else
    {
        _1398 = 0.0;
    }
    vec4 _1401 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _671) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _672) + cbTextureTilingScale._m0[8u].w), _1398);
    float _1403 = _1401.x;
    float _1404 = _1401.y;
    float _1405 = _1401.z;
    uvec2 _1417 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _1468;
    if (_756)
    {
        float _1428 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1434 = (_668 * _653) - (_665 * _656);
        float _1437 = (_662 * _656) - (_668 * _650);
        float _1440 = (_665 * _650) - (_662 * _653);
        float _1466 = ((log2((((float(_1417.y) * 0.5) * float(_1417.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1437 * _1437) + (_1440 * _1440)) + (_1434 * _1434)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1428 * gl_WorldRayDirectionEXT.x, _1428 * gl_WorldRayDirectionEXT.y, _1428 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1468 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
    }
    else
    {
        _1468 = 0.0;
    }
    vec4 _1470 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _671) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _672) + cbTextureTilingScale._m0[9u].w), _1468);
    float _1481 = ((_1470.x - _1403) * _1054) + _1403;
    float _1482 = ((_1470.y - _1404) * _1054) + _1404;
    float _1483 = ((_1470.z - _1405) * _1054) + _1405;
    uvec2 _1495 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15, int(0u)));
    float _1546;
    if (_756)
    {
        float _1506 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1512 = (_668 * _653) - (_665 * _656);
        float _1515 = (_662 * _656) - (_668 * _650);
        float _1518 = (_665 * _650) - (_662 * _653);
        float _1544 = ((log2((((float(_1495.y) * 0.5) * float(_1495.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1515 * _1515) + (_1518 * _1518)) + (_1512 * _1512)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1506 * gl_WorldRayDirectionEXT.x, _1506 * gl_WorldRayDirectionEXT.y, _1506 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1546 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
    }
    else
    {
        _1546 = 0.0;
    }
    vec4 _1548 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _671) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _672) + cbTextureTilingScale._m0[4u].w), _1546);
    float _1559 = ((_1548.x - _1481) * _1147) + _1481;
    float _1560 = ((_1548.y - _1482) * _1147) + _1482;
    float _1561 = ((_1548.z - _1483) * _1147) + _1483;
    uvec2 _1574 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16, int(0u)));
    float _1625;
    if (_756)
    {
        float _1585 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1591 = (_668 * _653) - (_665 * _656);
        float _1594 = (_662 * _656) - (_668 * _650);
        float _1597 = (_665 * _650) - (_662 * _653);
        float _1623 = ((log2((((float(_1574.y) * 0.5) * float(_1574.x)) * abs((_623 * _618) - (_622 * _619))) / (sqrt(((_1594 * _1594) + (_1597 * _1597)) + (_1591 * _1591)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1585 * gl_WorldRayDirectionEXT.x, _1585 * gl_WorldRayDirectionEXT.y, _1585 * gl_WorldRayDirectionEXT.z), vec3(_683, _685, _686))));
        _1625 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
    }
    else
    {
        _1625 = 0.0;
    }
    vec4 _1627 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _671) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _672) + cbTextureTilingScale._m0[5u].w), _1625);
    float _1640 = ((_1627.z - _1561) * _1241) + _1561;
    float _1643 = ((((_1627.x - _1559) * _1241) + _1559) * 2.0) + (-1.0);
    float _1645 = ((((_1627.y - _1560) * _1241) + _1560) * 2.0) + (-1.0);
    float _1646 = dot(vec2(_1643, _1645), vec2(_1643, _1645));
    float _2302 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
    float _1651 = sqrt(1.0 - (isnan(1.0) ? _2302 : (isnan(_2302) ? 1.0 : min(_2302, 1.0))));
    float _1653 = fma(_1651, _683, fma(_1645, ((((float(_238 & 255u) * _556) + (-127.0)) + (float(_321 & 255u) * hit._m0.x)) + (float(_403 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _1655 = fma(_1651, _685, fma(_1645, ((((float((_238 >> 8u) & 255u) * _556) + (-127.0)) + (float((_321 >> 8u) & 255u) * hit._m0.x)) + (float((_403 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _1657 = fma(_1651, _686, fma(_1645, ((((float((_238 >> 16u) & 255u) * _556) + (-127.0)) + (float((_321 >> 16u) & 255u) * hit._m0.x)) + (float((_403 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _1661 = inversesqrt(dot(vec3(_1653, _1655, _1657), vec3(_1653, _1655, _1657)));
    float _1662 = _1661 * _1653;
    float _1663 = _1661 * _1655;
    float _1664 = _1661 * _1657;
    float _1667 = fma(_1664, _733, fma(_1663, _732, _1662 * _731));
    float _1670 = fma(_1664, _701, fma(_1663, _700, _1662 * _699));
    float _1673 = fma(_1664, _686, fma(_1663, _685, _1662 * _683));
    float _1677 = inversesqrt(dot(vec3(_1667, _1670, _1673), vec3(_1667, _1670, _1673)));
    float _1680 = _1677 * _1673;
    uvec2 _1693 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7, int(0u)));
    float _1697 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1698 = _1697 * gl_WorldRayDirectionEXT.x;
    float _1699 = _1697 * gl_WorldRayDirectionEXT.y;
    float _1700 = _1697 * gl_WorldRayDirectionEXT.z;
    float _1744;
    if (_756)
    {
        float _1710 = (_668 * _653) - (_665 * _656);
        float _1713 = (_662 * _656) - (_668 * _650);
        float _1716 = (_665 * _650) - (_662 * _653);
        float _1742 = ((log2((((float(_1693.y) * 0.5) * float(_1693.x)) * abs((_615 * _609) - (_614 * _611))) / (sqrt(((_1713 * _1713) + (_1716 * _1716)) + (_1710 * _1710)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1698, _1699, _1700), vec3(_683, _685, _686))));
        _1744 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
    }
    else
    {
        _1744 = 0.0;
    }
    vec4 _1746 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _669) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _670) + cbTextureTilingScale._m0[10u].w), _1744);
    float _1756 = (((_1746.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].y) + (_1677 * _1667);
    float _1757 = (((_1746.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].y) + (_1677 * _1670);
    float _1760 = fma(_1680, _683, fma(_1757, _699, _1756 * _731));
    float _1763 = fma(_1680, _685, fma(_1757, _700, _1756 * _732));
    float _1766 = fma(_1680, _686, fma(_1757, _701, _1756 * _733));
    float _1770 = inversesqrt(dot(vec3(_1760, _1763, _1766), vec3(_1760, _1763, _1766)));
    float _1771 = _1770 * _1760;
    float _1772 = _1770 * _1763;
    float _1773 = _1770 * _1766;
    float _1785 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1786 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1787 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1788 = (-0.0) - _1698;
    float _1790 = (-0.0) - _1699;
    float _1791 = (-0.0) - _1700;
    float _1797 = float(gl_LaunchIDEXT.x);
    float _1798 = float(gl_LaunchIDEXT.y);
    float _1801 = float(gl_LaunchSizeEXT.x);
    float _1815 = fract(fract(sin(dot(vec2(_1797 / _1801, _1798 / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1828 = fract(fract(sin(dot(vec2((_1797 + 128.0) / _1801, (_1798 + 128.0) / _79), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1838 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1839 = _1838.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1839, _1838.w, _1839, vec3(_1785, _1786, _1787), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1947;
    float _1948;
    float _1949;
    float _1950;
    float _1951;
    float _1952;
    if (_71._m0 == 0u)
    {
        float _1859 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1771, _1772, _1773));
        float _2318 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1862 = isnan(1.0) ? _2318 : (isnan(_2318) ? 1.0 : min(_2318, 1.0));
        float _1881 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1640) * 0.949999988079071044921875);
        float _1882 = _1881 * _1881;
        float _1883 = g_sceneCB._m0[4u].x - _1698;
        float _1884 = g_sceneCB._m0[4u].y - _1699;
        float _1885 = g_sceneCB._m0[4u].z - _1700;
        float _1889 = inversesqrt(dot(vec3(_1883, _1884, _1885), vec3(_1883, _1884, _1885)));
        float _1890 = _1889 * _1883;
        float _1891 = _1889 * _1884;
        float _1892 = _1889 * _1885;
        float _1893 = dot(vec3(_1771, _1772, _1773), vec3(g_sceneCB._m0[4u].xyz));
        float _2329 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
        float _1896 = isnan(1.0) ? _2329 : (isnan(_2329) ? 1.0 : min(_2329, 1.0));
        float _1897 = dot(vec3(_1771, _1772, _1773), vec3(_1788, _1790, _1791));
        float _2340 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _1900 = isnan(1.0) ? _2340 : (isnan(_2340) ? 1.0 : min(_2340, 1.0));
        float _1901 = dot(vec3(_1771, _1772, _1773), vec3(_1890, _1891, _1892));
        float _2351 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
        float _1904 = isnan(1.0) ? _2351 : (isnan(_2351) ? 1.0 : min(_2351, 1.0));
        float _1905 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1890, _1891, _1892));
        float _2362 = isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0));
        float _1909 = _1882 * _1882;
        float _1913 = ((_1904 * _1904) * (_1909 + (-1.0))) + 1.0;
        float _1925 = (exp2(log2(1.0 - (isnan(1.0) ? _2362 : (isnan(_2362) ? 1.0 : min(_2362, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1927 = 1.0 - _1882;
        float _1938 = (0.5 / (((_1900 * ((_1896 * _1927) + _1882)) + 9.9999999392252902907785028219223e-09) + (((_1900 * _1927) + _1882) * _1896))) * _1896;
        float _2373 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _1940 = (isnan(1.0) ? _2373 : (isnan(_2373) ? 1.0 : min(_2373, 1.0))) * (_1909 / ((_1913 * _1913) * 3.141590118408203125));
        _1947 = ((_1329 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1862;
        _1948 = ((_1332 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1862;
        _1949 = ((_1335 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1862;
        _1950 = (_1925 * g_sceneCB._m0[5u].x) * _1940;
        _1951 = (_1925 * g_sceneCB._m0[5u].y) * _1940;
        _1952 = (_1925 * g_sceneCB._m0[5u].z) * _1940;
    }
    else
    {
        _1947 = 0.0;
        _1948 = 0.0;
        _1949 = 0.0;
        _1950 = 0.0;
        _1951 = 0.0;
        _1952 = 0.0;
    }
    bool _1954 = abs(_1772) < 0.89999997615814208984375;
    float _1956 = float(_1954);
    float _1957 = _1954 ? 0.0 : 1.0;
    float _1960 = (_1956 * _1773) - (_1957 * _1772);
    float _1961 = _1957 * _1771;
    float _1963 = (-0.0) - (_1771 * _1956);
    float _1967 = inversesqrt(dot(vec3(_1960, _1961, _1963), vec3(_1960, _1961, _1963)));
    float _1968 = _1960 * _1967;
    float _1969 = _1961 * _1967;
    float _1970 = _1967 * _1963;
    float _1973 = (_1969 * _1773) - (_1970 * _1772);
    float _1976 = (_1970 * _1771) - (_1968 * _1773);
    float _1979 = (_1968 * _1772) - (_1969 * _1771);
    float _1981;
    float _1989;
    float _1980 = 0.0;
    uint _1982 = 0u;
    float _1986;
    bool _1988;
    for (;;)
    {
        _1986 = (float(_1982) + _1815) * 0.03125;
        _1988 = _1982 == 0u;
        float frontier_phi_63_pred;
        if (_1988)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _2123;
            float _2124;
            uint _2126;
            _2123 = 0.0;
            _2124 = 0.5;
            _2126 = _1982;
            float _1990;
            for (;;)
            {
                _1990 = ((_2126 & 1u) != 0u) ? (_2124 + _2123) : _2123;
                uint _2127 = _2126 >> 1u;
                if (_2127 == 0u)
                {
                    break;
                }
                else
                {
                    _2123 = _1990;
                    _2124 *= 0.5;
                    _2126 = _2127;
                }
            }
            frontier_phi_63_pred = _1990;
        }
        _1989 = frontier_phi_63_pred;
        float _1991 = _1989 + _1828;
        float _1995 = sqrt(_1986);
        float _1996 = ((_1991 > 1.0) ? (_1991 + (-1.0)) : _1991) * 6.283185482025146484375;
        float _1999 = cos(_1996) * _1995;
        float _2001 = sin(_1996) * _1995;
        float _2003 = sqrt(1.0 - _1986);
        float _2016 = ((_2003 * _1771) + (_1999 * _1973)) + (_2001 * _1968);
        float _2017 = ((_2003 * _1772) + (_1999 * _1976)) + (_2001 * _1969);
        float _2018 = ((_2003 * _1773) + (_1999 * _1979)) + (_2001 * _1970);
        _70._m0 = 1u;
        uvec4 _2022 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2023 = _2022.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2023, _2022.w, _2023, vec3(_1785, _1786, _1787), 9.9999997473787516355514526367188e-05, vec3(_2016, _2017, _2018), 10000.0, 1);
        float _2029 = dot(vec3(_1771, _1772, _1773), vec3(_2016, _2017, _2018));
        float _2384 = isnan(0.0) ? _2029 : (isnan(_2029) ? 0.0 : max(_2029, 0.0));
        float _2032 = isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0));
        _1981 = ((float(_70._m0 == 0u) * _2032) / (_2032 * 0.3183098733425140380859375)) + _1980;
        uint _1983 = _1982 + 1u;
        if (_1983 == 32u)
        {
            break;
        }
        else
        {
            _1980 = _1981;
            _1982 = _1983;
            continue;
        }
    }
    float _2040 = _1981 * 0.009947183541953563690185546875;
    float _2045 = dot(vec3(_1698, _1699, _1700), vec3(_1771, _1772, _1773)) * 2.0;
    vec4 _2059 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1698 - (_2045 * _1771), _1699 - (_2045 * _1772), _1700 - (_2045 * _1773)), 4.0 - (_1640 * 4.0));
    float _2064 = dot(vec3(_1788, _1790, _1791), vec3(_1771, _1772, _1773));
    float _2395 = isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0));
    float _2073 = (exp2(log2(1.0 - (isnan(1.0) ? _2395 : (isnan(_2395) ? 1.0 : min(_2395, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2079 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1771, _1772, _1773), 0.0);
    float _2090 = (_1950 + _1947) + (((_2079.x * _1329) + (_2073 * _2059.x)) * _2040);
    float _2094 = (_1951 + _1948) + (((_2079.y * _1332) + (_2073 * _2059.y)) * _2040);
    float _2098 = (_1952 + _1949) + (((_2079.z * _1335) + (_2073 * _2059.z)) * _2040);
    float _2406 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
    float _2417 = isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0));
    float _2428 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
    bool _2106 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2117;
    _2117.x = _2106 ? ((_676 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0)));
    _2117.y = _2106 ? ((_679 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2417 : (isnan(_2417) ? 1.0 : min(_2417, 1.0)));
    _2117.z = _2106 ? ((_682 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2428 : (isnan(_2428) ? 1.0 : min(_2428, 1.0)));
    payload._m0 = _2117;
}


