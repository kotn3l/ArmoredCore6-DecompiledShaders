#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _1540;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_186 + 4u) + (_182 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _180 * _174;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_185)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_182 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _180 * _175;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_185)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_182 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _131.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _172 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _172 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _174 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _174 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _175 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _175 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_211) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_212) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_213) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    uvec2 _641 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_0, int(0u)));
    bool _646 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _699;
    if (_646)
    {
        float _657 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _663 = (_574 * _559) - (_571 * _562);
        float _666 = (_568 * _562) - (_574 * _556);
        float _669 = (_571 * _556) - (_568 * _559);
        float _696 = ((log2((((float(_641.y) * 0.5) * float(_641.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_666 * _666) + (_669 * _669)) + (_663 * _663)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_657 * gl_WorldRayDirectionEXT.x, _657 * gl_WorldRayDirectionEXT.y, _657 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _699 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    }
    else
    {
        _699 = 0.0;
    }
    vec4 _703 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _575) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _576) + cbTextureTilingScale._m0[0u].w), _699);
    float _705 = _703.x;
    float _706 = _703.y;
    float _707 = _703.z;
    uvec2 _719 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_3, int(0u)));
    float _770;
    if (_646)
    {
        float _730 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _736 = (_574 * _559) - (_571 * _562);
        float _739 = (_568 * _562) - (_574 * _556);
        float _742 = (_571 * _556) - (_568 * _559);
        float _768 = ((log2((((float(_719.y) * 0.5) * float(_719.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_739 * _739) + (_742 * _742)) + (_736 * _736)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_730 * gl_WorldRayDirectionEXT.x, _730 * gl_WorldRayDirectionEXT.y, _730 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _770 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    }
    else
    {
        _770 = 0.0;
    }
    vec4 _772 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _575) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _576) + cbTextureTilingScale._m0[3u].w), _770);
    float _777 = _772.w;
    float _783 = (((cbMatDynParam._m0[17u].x * 10.0) + (-1.0)) + _777) * _777;
    float _816;
    if (_646)
    {
        float _800 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _808 = log2(0.0);
        float _814 = ((_808 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_800 * gl_WorldRayDirectionEXT.x, _800 * gl_WorldRayDirectionEXT.y, _800 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _816 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _820 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_7, SS_ClampLinear), vec2((_783 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_783 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _816);
    float _822 = _820.x;
    float _823 = _820.y;
    float _824 = _820.z;
    float _831 = ((_822 - _705) * cbMatDynParam._m0[17u].x) + _705;
    float _832 = ((_823 - _706) * cbMatDynParam._m0[17u].x) + _706;
    float _833 = ((_824 - _707) * cbMatDynParam._m0[17u].x) + _707;
    float _840 = ((_772.x - _831) * cbMatDynParam._m0[17u].x) + _831;
    float _841 = ((_772.y - _832) * cbMatDynParam._m0[17u].x) + _832;
    float _842 = ((_772.z - _833) * cbMatDynParam._m0[17u].x) + _833;
    uvec2 _858 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_2, int(0u)));
    float _909;
    if (_646)
    {
        float _869 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _875 = (_574 * _559) - (_571 * _562);
        float _878 = (_568 * _562) - (_574 * _556);
        float _881 = (_571 * _556) - (_568 * _559);
        float _907 = ((log2((((float(_858.y) * 0.5) * float(_858.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_878 * _878) + (_881 * _881)) + (_875 * _875)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_869 * gl_WorldRayDirectionEXT.x, _869 * gl_WorldRayDirectionEXT.y, _869 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _909 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    }
    else
    {
        _909 = 0.0;
    }
    vec4 _912 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _909);
    float _914 = _912.x;
    uvec2 _927 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_4, int(0u)));
    float _978;
    if (_646)
    {
        float _938 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _944 = (_574 * _559) - (_571 * _562);
        float _947 = (_568 * _562) - (_574 * _556);
        float _950 = (_571 * _556) - (_568 * _559);
        float _976 = ((log2((((float(_927.y) * 0.5) * float(_927.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_947 * _947) + (_950 * _950)) + (_944 * _944)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_938 * gl_WorldRayDirectionEXT.x, _938 * gl_WorldRayDirectionEXT.y, _938 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _978 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    }
    else
    {
        _978 = 0.0;
    }
    float _985 = (_914 + cbMtdParam._m0[9u].x) + ((textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _575) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _576) + cbTextureTilingScale._m0[4u].w), _978).x - _914) * cbMatDynParam._m0[17u].x);
    uvec2 _997 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_1, int(0u)));
    float _1048;
    if (_646)
    {
        float _1008 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1014 = (_574 * _559) - (_571 * _562);
        float _1017 = (_568 * _562) - (_574 * _556);
        float _1020 = (_571 * _556) - (_568 * _559);
        float _1046 = ((log2((((float(_997.y) * 0.5) * float(_997.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1017 * _1017) + (_1020 * _1020)) + (_1014 * _1014)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1008 * gl_WorldRayDirectionEXT.x, _1008 * gl_WorldRayDirectionEXT.y, _1008 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1048 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    }
    else
    {
        _1048 = 0.0;
    }
    vec4 _1051 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _575) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _576) + cbTextureTilingScale._m0[1u].w), _1048);
    float _1053 = _1051.x;
    float _1054 = _1051.y;
    float _1055 = _1051.z;
    uvec2 _1068 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_5, int(0u)));
    float _1072 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1073 = _1072 * gl_WorldRayDirectionEXT.x;
    float _1074 = _1072 * gl_WorldRayDirectionEXT.y;
    float _1075 = _1072 * gl_WorldRayDirectionEXT.z;
    float _1119;
    if (_646)
    {
        float _1085 = (_574 * _559) - (_571 * _562);
        float _1088 = (_568 * _562) - (_574 * _556);
        float _1091 = (_571 * _556) - (_568 * _559);
        float _1117 = ((log2((((float(_1068.y) * 0.5) * float(_1068.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1088 * _1088) + (_1091 * _1091)) + (_1085 * _1085)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1073, _1074, _1075), vec3(_587, _589, _590))));
        _1119 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    }
    else
    {
        _1119 = 0.0;
    }
    vec4 _1121 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _575) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _576) + cbTextureTilingScale._m0[5u].w), _1119);
    float _1134 = ((_1121.z - _1055) * cbMatDynParam._m0[17u].x) + _1055;
    float _1137 = ((((_1121.x - _1053) * cbMatDynParam._m0[17u].x) + _1053) * 2.0) + (-1.0);
    float _1138 = ((((_1121.y - _1054) * cbMatDynParam._m0[17u].x) + _1054) * 2.0) + (-1.0);
    float _1139 = dot(vec2(_1137, _1138), vec2(_1137, _1138));
    float _1661 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _1144 = sqrt(1.0 - (isnan(1.0) ? _1661 : (isnan(_1661) ? 1.0 : min(_1661, 1.0))));
    float _1151 = fma(_1144, _587, fma(_1138, _603, (_622 * _616) * _1137));
    float _1154 = fma(_1144, _589, fma(_1138, _604, (_622 * _617) * _1137));
    float _1157 = fma(_1144, _590, fma(_1138, _605, (_622 * _618) * _1137));
    float _1161 = inversesqrt(dot(vec3(_1151, _1154, _1157), vec3(_1151, _1154, _1157)));
    float _1162 = _1161 * _1151;
    float _1163 = _1161 * _1154;
    float _1164 = _1161 * _1157;
    float _1176 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1177 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1178 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1179 = (-0.0) - _1073;
    float _1181 = (-0.0) - _1074;
    float _1182 = (-0.0) - _1075;
    float _1188 = float(gl_LaunchIDEXT.x);
    float _1189 = float(gl_LaunchIDEXT.y);
    float _1192 = float(gl_LaunchSizeEXT.x);
    float _1206 = fract(fract(sin(dot(vec2(_1188 / _1192, _1189 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1219 = fract(fract(sin(dot(vec2((_1188 + 128.0) / _1192, (_1189 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1220 = 1.0 - _985;
    float _1221 = _1220 * _840;
    float _1222 = _1220 * _841;
    float _1223 = _1220 * _842;
    float _1228 = _985 * (_840 + (-0.039999999105930328369140625));
    float _1229 = _985 * (_841 + (-0.039999999105930328369140625));
    float _1230 = _985 * (_842 + (-0.039999999105930328369140625));
    float _1231 = _1228 + 0.039999999105930328369140625;
    float _1233 = _1229 + 0.039999999105930328369140625;
    float _1234 = _1230 + 0.039999999105930328369140625;
    _73._m0 = 1u;
    uvec4 _1244 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1245 = _1244.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1245, _1244.w, _1245, vec3(_1176, _1177, _1178), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    float _1363;
    float _1364;
    if (_73._m0 == 0u)
    {
        float _1265 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1162, _1163, _1164));
        float _1672 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1268 = isnan(1.0) ? _1672 : (isnan(_1672) ? 1.0 : min(_1672, 1.0));
        float _1287 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1134) * 0.949999988079071044921875);
        float _1288 = _1287 * _1287;
        float _1289 = g_sceneCB._m0[4u].x - _1073;
        float _1290 = g_sceneCB._m0[4u].y - _1074;
        float _1291 = g_sceneCB._m0[4u].z - _1075;
        float _1295 = inversesqrt(dot(vec3(_1289, _1290, _1291), vec3(_1289, _1290, _1291)));
        float _1296 = _1295 * _1289;
        float _1297 = _1295 * _1290;
        float _1298 = _1295 * _1291;
        float _1299 = dot(vec3(_1162, _1163, _1164), vec3(g_sceneCB._m0[4u].xyz));
        float _1683 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1302 = isnan(1.0) ? _1683 : (isnan(_1683) ? 1.0 : min(_1683, 1.0));
        float _1303 = dot(vec3(_1162, _1163, _1164), vec3(_1179, _1181, _1182));
        float _1694 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1306 = isnan(1.0) ? _1694 : (isnan(_1694) ? 1.0 : min(_1694, 1.0));
        float _1307 = dot(vec3(_1162, _1163, _1164), vec3(_1296, _1297, _1298));
        float _1705 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1310 = isnan(1.0) ? _1705 : (isnan(_1705) ? 1.0 : min(_1705, 1.0));
        float _1311 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1296, _1297, _1298));
        float _1716 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1315 = _1288 * _1288;
        float _1319 = ((_1310 * _1310) * (_1315 + (-1.0))) + 1.0;
        float _1328 = exp2(log2(1.0 - (isnan(1.0) ? _1716 : (isnan(_1716) ? 1.0 : min(_1716, 1.0)))) * 5.0);
        float _1339 = 1.0 - _1288;
        float _1350 = (0.5 / (((_1306 * ((_1302 * _1339) + _1288)) + 9.9999999392252902907785028219223e-09) + (((_1306 * _1339) + _1288) * _1302))) * _1302;
        float _1727 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1352 = (isnan(1.0) ? _1727 : (isnan(_1727) ? 1.0 : min(_1727, 1.0))) * (_1315 / ((_1319 * _1319) * 3.141590118408203125));
        _1359 = ((_1221 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1268;
        _1360 = ((_1222 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1268;
        _1361 = ((_1223 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1268;
        _1362 = (((_1328 * (0.959999978542327880859375 - _1228)) + _1231) * g_sceneCB._m0[5u].x) * _1352;
        _1363 = (((_1328 * (0.959999978542327880859375 - _1229)) + _1233) * g_sceneCB._m0[5u].y) * _1352;
        _1364 = (((_1328 * (0.959999978542327880859375 - _1230)) + _1234) * g_sceneCB._m0[5u].z) * _1352;
    }
    else
    {
        _1359 = 0.0;
        _1360 = 0.0;
        _1361 = 0.0;
        _1362 = 0.0;
        _1363 = 0.0;
        _1364 = 0.0;
    }
    bool _1366 = abs(_1163) < 0.89999997615814208984375;
    float _1368 = float(_1366);
    float _1369 = _1366 ? 0.0 : 1.0;
    float _1372 = (_1368 * _1164) - (_1369 * _1163);
    float _1373 = _1369 * _1162;
    float _1375 = (-0.0) - (_1162 * _1368);
    float _1379 = inversesqrt(dot(vec3(_1372, _1373, _1375), vec3(_1372, _1373, _1375)));
    float _1380 = _1372 * _1379;
    float _1381 = _1373 * _1379;
    float _1382 = _1379 * _1375;
    float _1385 = (_1381 * _1164) - (_1382 * _1163);
    float _1388 = (_1382 * _1162) - (_1380 * _1164);
    float _1391 = (_1380 * _1163) - (_1381 * _1162);
    float _1393;
    float _1401;
    float _1392 = 0.0;
    uint _1394 = 0u;
    float _1398;
    bool _1400;
    for (;;)
    {
        _1398 = (float(_1394) + _1206) * 0.03125;
        _1400 = _1394 == 0u;
        float frontier_phi_53_pred;
        if (_1400)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1545;
            float _1546;
            uint _1548;
            _1545 = 0.0;
            _1546 = 0.5;
            _1548 = _1394;
            float _1402;
            for (;;)
            {
                _1402 = ((_1548 & 1u) != 0u) ? (_1546 + _1545) : _1545;
                uint _1549 = _1548 >> 1u;
                if (_1549 == 0u)
                {
                    break;
                }
                else
                {
                    _1545 = _1402;
                    _1546 *= 0.5;
                    _1548 = _1549;
                }
            }
            frontier_phi_53_pred = _1402;
        }
        _1401 = frontier_phi_53_pred;
        float _1403 = _1401 + _1219;
        float _1407 = sqrt(_1398);
        float _1408 = ((_1403 > 1.0) ? (_1403 + (-1.0)) : _1403) * 6.283185482025146484375;
        float _1411 = cos(_1408) * _1407;
        float _1413 = sin(_1408) * _1407;
        float _1415 = sqrt(1.0 - _1398);
        float _1428 = ((_1415 * _1162) + (_1411 * _1385)) + (_1413 * _1380);
        float _1429 = ((_1415 * _1163) + (_1411 * _1388)) + (_1413 * _1381);
        float _1430 = ((_1415 * _1164) + (_1411 * _1391)) + (_1413 * _1382);
        _72._m0 = 1u;
        uvec4 _1434 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1435 = _1434.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1435, _1434.w, _1435, vec3(_1176, _1177, _1178), 9.9999997473787516355514526367188e-05, vec3(_1428, _1429, _1430), 10000.0, 1);
        float _1441 = dot(vec3(_1162, _1163, _1164), vec3(_1428, _1429, _1430));
        float _1738 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1444 = isnan(1.0) ? _1738 : (isnan(_1738) ? 1.0 : min(_1738, 1.0));
        _1393 = ((float(_72._m0 == 0u) * _1444) / (_1444 * 0.3183098733425140380859375)) + _1392;
        uint _1395 = _1394 + 1u;
        if (_1395 == 32u)
        {
            break;
        }
        else
        {
            _1392 = _1393;
            _1394 = _1395;
            continue;
        }
    }
    float _1452 = _1393 * 0.009947183541953563690185546875;
    float _1457 = dot(vec3(_1073, _1074, _1075), vec3(_1162, _1163, _1164)) * 2.0;
    vec4 _1471 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1073 - (_1457 * _1162), _1074 - (_1457 * _1163), _1075 - (_1457 * _1164)), 4.0 - (_1134 * 4.0));
    float _1476 = dot(vec3(_1179, _1181, _1182), vec3(_1162, _1163, _1164));
    float _1749 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
    float _1486 = exp2(log2(1.0 - (isnan(1.0) ? _1749 : (isnan(_1749) ? 1.0 : min(_1749, 1.0)))) * 5.0);
    vec4 _1498 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1162, _1163, _1164), 0.0);
    float _1510 = ((_1359 + (cbMatDynParam._m0[17u].y * _822)) + _1362) + (((_1498.x * _1221) + (((_1486 * (0.959999978542327880859375 - _1228)) + _1231) * _1471.x)) * _1452);
    float _1515 = ((_1360 + (cbMatDynParam._m0[17u].y * _823)) + _1363) + (((_1498.y * _1222) + (((_1486 * (0.959999978542327880859375 - _1229)) + _1233) * _1471.y)) * _1452);
    float _1520 = ((_1361 + (cbMatDynParam._m0[17u].y * _824)) + _1364) + (((_1498.z * _1223) + (((_1486 * (0.959999978542327880859375 - _1230)) + _1234) * _1471.z)) * _1452);
    float _1760 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
    float _1771 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
    float _1782 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
    bool _1528 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1539;
    _1539.x = _1528 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1760 : (isnan(_1760) ? 1.0 : min(_1760, 1.0)));
    _1539.y = _1528 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1771 : (isnan(_1771) ? 1.0 : min(_1771, 1.0)));
    _1539.z = _1528 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1782 : (isnan(_1782) ? 1.0 : min(_1782, 1.0)));
    payload._m0 = _1539;
}


