#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1706;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    bool _239 = _183 == 0u;
    uint _240;
    if (_239)
    {
        _240 = _216 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _216 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _216 + 12u;
        }
        _240 = frontier_phi_9_10_ladder;
    }
    uint _244 = _184 ? (_240 + 4u) : _240;
    uint _247 = ((_188 + 4u) + _244) >> 2u;
    uvec2 _253 = uvec2(texelFetch(l_geomAttrib_0, int(_247)).x, texelFetch(l_geomAttrib_0, int(_247 + 1u)).x);
    uint _254 = _253.x;
    uint _255 = _253.y;
    float _259 = float(int(uint(int(_254 << 16u) >> int(16u))));
    float _260 = float(int(uint(int(_254) >> int(16u))));
    uvec4 _269 = texelFetch(l_geomAttrib_0, int(((_188 + 12u) + _244) >> 2u));
    uint _270 = _269.x;
    uint _276 = _182 * _176;
    uint _277 = _276 + 12u;
    uint _298;
    uint _299;
    uint _300;
    uint _301;
    if (_187)
    {
        uvec4 _279 = texelFetch(l_geomAttrib_0, int(_277 >> 2u));
        uint _280 = _279.x;
        _298 = _280 & 255u;
        _299 = (_280 >> 8u) & 255u;
        _300 = (_280 >> 16u) & 255u;
        _301 = 16u;
    }
    else
    {
        uint _286 = _277 >> 2u;
        uvec2 _292 = uvec2(texelFetch(l_geomAttrib_0, int(_286)).x, texelFetch(l_geomAttrib_0, int(_286 + 1u)).x);
        uint _293 = _292.x;
        _298 = _293 & 65535u;
        _299 = _293 >> 16u;
        _300 = _292.y & 65535u;
        _301 = 20u;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int((_301 + _276) >> 2u));
    uint _308 = _307.x;
    uint _320;
    if (_239)
    {
        _320 = _301 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _301 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _301 + 12u;
        }
        _320 = frontier_phi_16_17_ladder;
    }
    uint _324 = _184 ? (_320 + 4u) : _320;
    uint _327 = ((_276 + 4u) + _324) >> 2u;
    uvec2 _333 = uvec2(texelFetch(l_geomAttrib_0, int(_327)).x, texelFetch(l_geomAttrib_0, int(_327 + 1u)).x);
    uint _334 = _333.x;
    uint _335 = _333.y;
    float _339 = float(int(uint(int(_334 << 16u) >> int(16u))));
    float _340 = float(int(uint(int(_334) >> int(16u))));
    uvec4 _349 = texelFetch(l_geomAttrib_0, int(((_276 + 12u) + _324) >> 2u));
    uint _350 = _349.x;
    uint _356 = _182 * _177;
    uint _357 = _356 + 12u;
    uint _378;
    uint _379;
    uint _380;
    uint _381;
    if (_187)
    {
        uvec4 _359 = texelFetch(l_geomAttrib_0, int(_357 >> 2u));
        uint _360 = _359.x;
        _378 = _360 & 255u;
        _379 = (_360 >> 8u) & 255u;
        _380 = (_360 >> 16u) & 255u;
        _381 = 16u;
    }
    else
    {
        uint _366 = _357 >> 2u;
        uvec2 _372 = uvec2(texelFetch(l_geomAttrib_0, int(_366)).x, texelFetch(l_geomAttrib_0, int(_366 + 1u)).x);
        uint _373 = _372.x;
        _378 = _373 & 65535u;
        _379 = _373 >> 16u;
        _380 = _372.y & 65535u;
        _381 = 20u;
    }
    uvec4 _387 = texelFetch(l_geomAttrib_0, int((_381 + _356) >> 2u));
    uint _388 = _387.x;
    uint _400;
    if (_239)
    {
        _400 = _381 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _381 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _381 + 12u;
        }
        _400 = frontier_phi_23_24_ladder;
    }
    uint _404 = _184 ? (_400 + 4u) : _400;
    uint _407 = ((_356 + 4u) + _404) >> 2u;
    uvec2 _413 = uvec2(texelFetch(l_geomAttrib_0, int(_407)).x, texelFetch(l_geomAttrib_0, int(_407 + 1u)).x);
    uint _414 = _413.x;
    uint _415 = _413.y;
    float _419 = float(int(uint(int(_414 << 16u) >> int(16u))));
    float _420 = float(int(uint(int(_414) >> int(16u))));
    uvec4 _429 = texelFetch(l_geomAttrib_0, int(((_356 + 12u) + _404) >> 2u));
    uint _430 = _429.x;
    bool _437 = _133.z == 0u;
    float _473;
    float _474;
    float _475;
    if (_437)
    {
        uint _440 = _174 * 3u;
        uvec3 _449 = uvec3(texelFetch(l_geomPositionBuffer, int(_440)).x, texelFetch(l_geomPositionBuffer, int(_440 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_440 + 2u)).x);
        _473 = uintBitsToFloat(_449.x);
        _474 = uintBitsToFloat(_449.y);
        _475 = uintBitsToFloat(_449.z);
    }
    else
    {
        uint _457 = _174 * 2u;
        uvec2 _463 = uvec2(texelFetch(l_geomPositionBuffer, int(_457)).x, texelFetch(l_geomPositionBuffer, int(_457 + 1u)).x);
        uint _464 = _463.x;
        _473 = unpackHalf2x16(_464).x;
        _474 = unpackHalf2x16(_464 >> 16u).x;
        _475 = unpackHalf2x16(_463.y).x;
    }
    float _511;
    float _512;
    float _513;
    if (_437)
    {
        uint _478 = _176 * 3u;
        uvec3 _487 = uvec3(texelFetch(l_geomPositionBuffer, int(_478)).x, texelFetch(l_geomPositionBuffer, int(_478 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_478 + 2u)).x);
        _511 = uintBitsToFloat(_487.x);
        _512 = uintBitsToFloat(_487.y);
        _513 = uintBitsToFloat(_487.z);
    }
    else
    {
        uint _495 = _176 * 2u;
        uvec2 _501 = uvec2(texelFetch(l_geomPositionBuffer, int(_495)).x, texelFetch(l_geomPositionBuffer, int(_495 + 1u)).x);
        uint _502 = _501.x;
        _511 = unpackHalf2x16(_502).x;
        _512 = unpackHalf2x16(_502 >> 16u).x;
        _513 = unpackHalf2x16(_501.y).x;
    }
    float _549;
    float _550;
    float _551;
    if (_437)
    {
        uint _516 = _177 * 3u;
        uvec3 _525 = uvec3(texelFetch(l_geomPositionBuffer, int(_516)).x, texelFetch(l_geomPositionBuffer, int(_516 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_516 + 2u)).x);
        _549 = uintBitsToFloat(_525.x);
        _550 = uintBitsToFloat(_525.y);
        _551 = uintBitsToFloat(_525.z);
    }
    else
    {
        uint _533 = _177 * 2u;
        uvec2 _539 = uvec2(texelFetch(l_geomPositionBuffer, int(_533)).x, texelFetch(l_geomPositionBuffer, int(_533 + 1u)).x);
        uint _540 = _539.x;
        _549 = unpackHalf2x16(_540).x;
        _550 = unpackHalf2x16(_540 >> 16u).x;
        _551 = unpackHalf2x16(_539.y).x;
    }
    float _554 = (1.0 - hit._m0.x) - hit._m0.y;
    float _604 = (((float(_350 & 255u) * hit._m0.x) + (float(_270 & 255u) * _554)) + (float(_430 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _608 = (((float((_350 >> 8u) & 255u) * hit._m0.x) + (float((_270 >> 8u) & 255u) * _554)) + (float((_430 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _611 = (_339 - _259) * 0.00048828125;
    float _613 = (_340 - _260) * 0.00048828125;
    float _616 = (_419 - _259) * 0.00048828125;
    float _617 = (_420 - _260) * 0.00048828125;
    float _639 = _511 - _473;
    float _640 = _512 - _474;
    float _641 = _513 - _475;
    float _644 = fma(_641, gl_ObjectToWorldEXT[2u].x, fma(_640, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _639));
    float _647 = fma(_641, gl_ObjectToWorldEXT[2u].y, fma(_640, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _639));
    float _650 = fma(_641, gl_ObjectToWorldEXT[2u].z, fma(_640, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _639));
    float _651 = _549 - _473;
    float _652 = _550 - _474;
    float _653 = _551 - _475;
    float _656 = fma(_653, gl_ObjectToWorldEXT[2u].x, fma(_652, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _651));
    float _659 = fma(_653, gl_ObjectToWorldEXT[2u].y, fma(_652, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _651));
    float _662 = fma(_653, gl_ObjectToWorldEXT[2u].z, fma(_652, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _651));
    float _663 = (((_339 * hit._m0.x) + (_259 * _554)) + (_419 * hit._m0.y)) * 0.00048828125;
    float _664 = (((_340 * hit._m0.x) + (_260 * _554)) + (_420 * hit._m0.y)) * 0.00048828125;
    float _665 = (((float(int(uint(int(_335 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_255 << 16u) >> int(16u)))) * _554)) + (float(int(uint(int(_415 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _666 = (((float(int(uint(int(_335) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_255) >> int(16u)))) * _554)) + (float(int(uint(int(_415) >> int(16u)))) * hit._m0.y)) * 0.00048828125;
    float _670 = (((float(_213) * _554) + (-127.0)) + (float(_298) * hit._m0.x)) + (float(_378) * hit._m0.y);
    float _673 = (((float(_214) * _554) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _676 = (((float(_215) * _554) + (-127.0)) + (float(_300) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _677 = _670 * 0.0078740157186985015869140625;
    float _679 = _673 * 0.0078740157186985015869140625;
    float _680 = _676 * 0.0078740157186985015869140625;
    float _693 = ((((float(_225 & 255u) * _554) + (-127.0)) + (float(_308 & 255u) * hit._m0.x)) + (float(_388 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _694 = ((((float((_225 >> 8u) & 255u) * _554) + (-127.0)) + (float((_308 >> 8u) & 255u) * hit._m0.x)) + (float((_388 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _695 = ((((float((_225 >> 16u) & 255u) * _554) + (-127.0)) + (float((_308 >> 16u) & 255u) * hit._m0.x)) + (float((_388 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _696 = ((((float(_225 >> 24u) * _554) + (-127.0)) + (float(_308 >> 24u) * hit._m0.x)) + (float(_388 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _706 = ((_694 * _680) - (_695 * _679)) * _696;
    float _707 = ((_695 * _677) - (_693 * _680)) * _696;
    float _708 = ((_693 * _679) - (_694 * _677)) * _696;
    float _712 = inversesqrt(dot(vec3(_706, _707, _708), vec3(_706, _707, _708)));
    float _729 = (cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x) + _663;
    float _730 = (cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x) + _664;
    uvec2 _742 = uvec2(textureSize(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _747 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _800;
    if (_747)
    {
        float _758 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _764 = (_662 * _647) - (_659 * _650);
        float _767 = (_656 * _650) - (_662 * _644);
        float _770 = (_659 * _644) - (_656 * _647);
        float _797 = ((log2((((float(_742.y) * 0.5) * float(_742.x)) * abs((_617 * _611) - (_616 * _613))) / (sqrt(((_767 * _767) + (_770 * _770)) + (_764 * _764)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_758 * gl_WorldRayDirectionEXT.x, _758 * gl_WorldRayDirectionEXT.y, _758 * gl_WorldRayDirectionEXT.z), vec3(_677, _679, _680))));
        _800 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    }
    else
    {
        _800 = 0.0;
    }
    vec4 _804 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_729 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_730 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _800);
    float _809 = _804.x * cbMtdParam._m0[9u].x;
    float _810 = _804.y * cbMtdParam._m0[9u].y;
    float _811 = _804.z * cbMtdParam._m0[9u].z;
    float _815 = _809 - (_809 * _604);
    float _816 = _810 - (_810 * _604);
    float _817 = _811 - (_811 * _604);
    float _821 = _815 - (_815 * _608);
    float _822 = _816 - (_816 * _608);
    float _823 = _817 - (_817 * _608);
    uvec2 _838 = uvec2(textureSize(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _889;
    if (_747)
    {
        float _849 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _855 = (_662 * _647) - (_659 * _650);
        float _858 = (_656 * _650) - (_662 * _644);
        float _861 = (_659 * _644) - (_656 * _647);
        float _887 = ((log2((((float(_838.y) * 0.5) * float(_838.x)) * abs((_617 * _611) - (_616 * _613))) / (sqrt(((_858 * _858) + (_861 * _861)) + (_855 * _855)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_849 * gl_WorldRayDirectionEXT.x, _849 * gl_WorldRayDirectionEXT.y, _849 * gl_WorldRayDirectionEXT.z), vec3(_677, _679, _680))));
        _889 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    }
    else
    {
        _889 = 0.0;
    }
    vec4 _892 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _729) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _730) + cbTextureTilingScale._m0[1u].w), _889);
    float _899 = (_892.x * 2.0) + (-1.0);
    float _901 = (_892.y * 2.0) + (-1.0);
    float _902 = dot(vec2(_899, _901), vec2(_899, _901));
    float _1798 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _907 = sqrt(1.0 - (isnan(1.0) ? _1798 : (isnan(_1798) ? 1.0 : min(_1798, 1.0))));
    float _908 = _892.z * cbMtdParam._m0[16u].w;
    float _910 = _908 - (_908 * _604);
    float _912 = _910 - (_910 * _608);
    float _941 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _663)) + cbTextureTilingScale._m0[3u].z;
    float _942 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _664)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _944 = uvec2(textureSize(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _995;
    if (_747)
    {
        float _955 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _961 = (_662 * _647) - (_659 * _650);
        float _964 = (_656 * _650) - (_662 * _644);
        float _967 = (_659 * _644) - (_656 * _647);
        float _993 = ((log2((((float(_944.y) * 0.5) * float(_944.x)) * abs((_617 * _611) - (_616 * _613))) / (sqrt(((_964 * _964) + (_967 * _967)) + (_961 * _961)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_955 * gl_WorldRayDirectionEXT.x, _955 * gl_WorldRayDirectionEXT.y, _955 * gl_WorldRayDirectionEXT.z), vec3(_677, _679, _680))));
        _995 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    }
    else
    {
        _995 = 0.0;
    }
    vec4 _998 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_941, _942), _995);
    float _1002 = cbPerFrame._m0[22u].x * 2.0;
    float _1003 = _1002 * cbMtdParam._m0[15u].w;
    float _1009 = ((_998.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _1011 = (-0.0) - (cbMtdParam._m0[15u].z * ((_998.x * 0.5) + (-0.25)));
    float _1013 = fract(_1003);
    float _1015 = fract(_1003 + 0.5);
    float _1026 = abs((_1013 * 2.0) + (-1.0));
    vec4 _1044 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_1013 * _1011) + _665) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1009 * _1013) + _666) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1046 = _1044.x;
    float _1047 = _1044.y;
    float _1048 = _1044.z;
    vec4 _1049 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_1015 * _1011) + _665) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1009 * _1015) + _666) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1060 = ((_1049.x - _1046) * _1026) + _1046;
    float _1061 = ((_1049.y - _1047) * _1026) + _1047;
    float _1062 = ((_1049.z - _1048) * _1026) + _1048;
    uvec2 _1114 = uvec2(textureSize(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _1165;
    if (_747)
    {
        float _1125 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1131 = (_662 * _647) - (_659 * _650);
        float _1134 = (_656 * _650) - (_662 * _644);
        float _1137 = (_659 * _644) - (_656 * _647);
        float _1163 = ((log2((((float(_1114.y) * 0.5) * float(_1114.x)) * abs((_617 * _611) - (_616 * _613))) / (sqrt(((_1134 * _1134) + (_1137 * _1137)) + (_1131 * _1131)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1125 * gl_WorldRayDirectionEXT.x, _1125 * gl_WorldRayDirectionEXT.y, _1125 * gl_WorldRayDirectionEXT.z), vec3(_677, _679, _680))));
        _1165 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    }
    else
    {
        _1165 = 0.0;
    }
    vec4 _1167 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _729) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _730) + cbTextureTilingScale._m0[2u].w), _1165);
    float _1188 = (cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + _663;
    float _1189 = (cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _664;
    float _1195 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1196 = _1195 * gl_WorldRayDirectionEXT.x;
    float _1197 = _1195 * gl_WorldRayDirectionEXT.y;
    float _1198 = _1195 * gl_WorldRayDirectionEXT.z;
    float _1242;
    if (_747)
    {
        float _1208 = (_662 * _647) - (_659 * _650);
        float _1211 = (_656 * _650) - (_662 * _644);
        float _1214 = (_659 * _644) - (_656 * _647);
        float _1240 = ((log2((((float(_944.y) * 0.5) * float(_944.x)) * abs((_617 * _611) - (_616 * _613))) / (sqrt(((_1211 * _1211) + (_1214 * _1214)) + (_1208 * _1208)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1196, _1197, _1198), vec3(_677, _679, _680))));
        _1242 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    }
    else
    {
        _1242 = 0.0;
    }
    vec4 _1244 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2(_941, _942), _1242);
    float _1248 = _1002 * cbMtdParam._m0[16u].z;
    float _1253 = ((_1244.y * 0.5) + (-0.25)) * cbMtdParam._m0[16u].y;
    float _1255 = (-0.0) - (cbMtdParam._m0[16u].y * ((_1244.x * 0.5) + (-0.25)));
    float _1256 = fract(_1248);
    float _1258 = fract(_1248 + 0.5);
    float _1269 = abs((_1256 * 2.0) + (-1.0));
    vec4 _1286 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1256 * _1255) + _1188) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1253 * _1256) + _1189) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1288 = _1286.x;
    float _1289 = _1286.y;
    float _1290 = _1286.z;
    vec4 _1291 = textureLod(sampler2D(P_ACParts_AMSN_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1258 * _1255) + _1188) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1253 * _1258) + _1189) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1308 = ((((_1291.x - _1288) * _1269) + _1288) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[15u].x) * _1167.x);
    float _1309 = ((((_1291.y - _1289) * _1269) + _1289) * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[15u].x) * _1167.y);
    float _1310 = ((((_1291.z - _1290) * _1269) + _1290) * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[15u].x) * _1167.z);
    float _1317 = ((((cbMtdParam._m0[16u].x * _1060) * ((cbMtdParam._m0[17u].y * cbMtdParam._m0[14u].x) + (cbMtdParam._m0[13u].x * cbMtdParam._m0[17u].x))) - _1308) * _604) + _1308;
    float _1318 = ((((cbMtdParam._m0[16u].x * _1061) * ((cbMtdParam._m0[17u].y * cbMtdParam._m0[14u].y) + (cbMtdParam._m0[13u].y * cbMtdParam._m0[17u].x))) - _1309) * _604) + _1309;
    float _1319 = ((((cbMtdParam._m0[16u].x * _1062) * ((cbMtdParam._m0[17u].y * cbMtdParam._m0[14u].z) + (cbMtdParam._m0[13u].z * cbMtdParam._m0[17u].x))) - _1310) * _604) + _1310;
    float _1335 = _899 - (_899 * _604);
    float _1336 = _901 - (_901 * _604);
    float _1337 = _907 - (_907 * _604);
    float _1341 = _1335 - (_1335 * _608);
    float _1342 = _1336 - (_1336 * _608);
    float _1343 = _1337 - (_1337 * _608);
    float _1346 = fma(_1343, _677, fma(_1342, _693, (_712 * _706) * _1341));
    float _1349 = fma(_1343, _679, fma(_1342, _694, (_712 * _707) * _1341));
    float _1352 = fma(_1343, _680, fma(_1342, _695, (_712 * _708) * _1341));
    float _1356 = inversesqrt(dot(vec3(_1346, _1349, _1352), vec3(_1346, _1349, _1352)));
    float _1357 = _1356 * _1346;
    float _1358 = _1356 * _1349;
    float _1359 = _1356 * _1352;
    float _1371 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1372 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1373 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1374 = (-0.0) - _1196;
    float _1375 = (-0.0) - _1197;
    float _1376 = (-0.0) - _1198;
    float _1382 = float(gl_LaunchIDEXT.x);
    float _1383 = float(gl_LaunchIDEXT.y);
    float _1386 = float(gl_LaunchSizeEXT.x);
    float _1400 = fract(fract(sin(dot(vec2(_1382 / _1386, _1383 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1413 = fract(fract(sin(dot(vec2((_1382 + 128.0) / _1386, (_1383 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1423 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1424 = _1423.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1424, _1423.w, _1424, vec3(_1371, _1372, _1373), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    if (_71._m0 == 0u)
    {
        float _1444 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1357, _1358, _1359));
        float _1824 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1447 = isnan(1.0) ? _1824 : (isnan(_1824) ? 1.0 : min(_1824, 1.0));
        float _1466 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _912) * 0.949999988079071044921875);
        float _1467 = _1466 * _1466;
        float _1468 = g_sceneCB._m0[4u].x - _1196;
        float _1469 = g_sceneCB._m0[4u].y - _1197;
        float _1470 = g_sceneCB._m0[4u].z - _1198;
        float _1474 = inversesqrt(dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470)));
        float _1475 = _1474 * _1468;
        float _1476 = _1474 * _1469;
        float _1477 = _1474 * _1470;
        float _1478 = dot(vec3(_1357, _1358, _1359), vec3(g_sceneCB._m0[4u].xyz));
        float _1835 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1481 = isnan(1.0) ? _1835 : (isnan(_1835) ? 1.0 : min(_1835, 1.0));
        float _1482 = dot(vec3(_1357, _1358, _1359), vec3(_1374, _1375, _1376));
        float _1846 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1485 = isnan(1.0) ? _1846 : (isnan(_1846) ? 1.0 : min(_1846, 1.0));
        float _1486 = dot(vec3(_1357, _1358, _1359), vec3(_1475, _1476, _1477));
        float _1857 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1489 = isnan(1.0) ? _1857 : (isnan(_1857) ? 1.0 : min(_1857, 1.0));
        float _1490 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1475, _1476, _1477));
        float _1868 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1494 = _1467 * _1467;
        float _1498 = ((_1489 * _1489) * (_1494 + (-1.0))) + 1.0;
        float _1510 = (exp2(log2(1.0 - (isnan(1.0) ? _1868 : (isnan(_1868) ? 1.0 : min(_1868, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1512 = 1.0 - _1467;
        float _1523 = (0.5 / (((_1485 * ((_1481 * _1512) + _1467)) + 9.9999999392252902907785028219223e-09) + (((_1485 * _1512) + _1467) * _1481))) * _1481;
        float _1879 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1525 = (isnan(1.0) ? _1879 : (isnan(_1879) ? 1.0 : min(_1879, 1.0))) * (_1494 / ((_1498 * _1498) * 3.141590118408203125));
        _1532 = ((_821 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1447;
        _1533 = ((_822 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1447;
        _1534 = ((_823 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1447;
        _1535 = (_1510 * g_sceneCB._m0[5u].x) * _1525;
        _1536 = (_1510 * g_sceneCB._m0[5u].y) * _1525;
        _1537 = (_1510 * g_sceneCB._m0[5u].z) * _1525;
    }
    else
    {
        _1532 = 0.0;
        _1533 = 0.0;
        _1534 = 0.0;
        _1535 = 0.0;
        _1536 = 0.0;
        _1537 = 0.0;
    }
    bool _1539 = abs(_1358) < 0.89999997615814208984375;
    float _1541 = float(_1539);
    float _1542 = _1539 ? 0.0 : 1.0;
    float _1545 = (_1541 * _1359) - (_1542 * _1358);
    float _1546 = _1542 * _1357;
    float _1548 = (-0.0) - (_1357 * _1541);
    float _1552 = inversesqrt(dot(vec3(_1545, _1546, _1548), vec3(_1545, _1546, _1548)));
    float _1553 = _1545 * _1552;
    float _1554 = _1546 * _1552;
    float _1555 = _1552 * _1548;
    float _1558 = (_1554 * _1359) - (_1555 * _1358);
    float _1561 = (_1555 * _1357) - (_1553 * _1359);
    float _1564 = (_1553 * _1358) - (_1554 * _1357);
    float _1566;
    float _1574;
    float _1565 = 0.0;
    uint _1567 = 0u;
    float _1571;
    bool _1573;
    for (;;)
    {
        _1571 = (float(_1567) + _1400) * 0.03125;
        _1573 = _1567 == 0u;
        float frontier_phi_49_pred;
        if (_1573)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1711;
            float _1712;
            uint _1714;
            _1711 = 0.0;
            _1712 = 0.5;
            _1714 = _1567;
            float _1575;
            for (;;)
            {
                _1575 = ((_1714 & 1u) != 0u) ? (_1712 + _1711) : _1711;
                uint _1715 = _1714 >> 1u;
                if (_1715 == 0u)
                {
                    break;
                }
                else
                {
                    _1711 = _1575;
                    _1712 *= 0.5;
                    _1714 = _1715;
                }
            }
            frontier_phi_49_pred = _1575;
        }
        _1574 = frontier_phi_49_pred;
        float _1576 = _1574 + _1413;
        float _1580 = sqrt(_1571);
        float _1581 = ((_1576 > 1.0) ? (_1576 + (-1.0)) : _1576) * 6.283185482025146484375;
        float _1584 = cos(_1581) * _1580;
        float _1586 = sin(_1581) * _1580;
        float _1588 = sqrt(1.0 - _1571);
        float _1601 = ((_1588 * _1357) + (_1584 * _1558)) + (_1586 * _1553);
        float _1602 = ((_1588 * _1358) + (_1584 * _1561)) + (_1586 * _1554);
        float _1603 = ((_1588 * _1359) + (_1584 * _1564)) + (_1586 * _1555);
        _70._m0 = 1u;
        uvec4 _1607 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1608 = _1607.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1608, _1607.w, _1608, vec3(_1371, _1372, _1373), 9.9999997473787516355514526367188e-05, vec3(_1601, _1602, _1603), 10000.0, 1);
        float _1614 = dot(vec3(_1357, _1358, _1359), vec3(_1601, _1602, _1603));
        float _1890 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1617 = isnan(1.0) ? _1890 : (isnan(_1890) ? 1.0 : min(_1890, 1.0));
        _1566 = ((float(_70._m0 == 0u) * _1617) / (_1617 * 0.3183098733425140380859375)) + _1565;
        uint _1568 = _1567 + 1u;
        if (_1568 == 32u)
        {
            break;
        }
        else
        {
            _1565 = _1566;
            _1567 = _1568;
            continue;
        }
    }
    float _1625 = _1566 * 0.009947183541953563690185546875;
    float _1630 = dot(vec3(_1196, _1197, _1198), vec3(_1357, _1358, _1359)) * 2.0;
    vec4 _1644 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1196 - (_1630 * _1357), _1197 - (_1630 * _1358), _1198 - (_1630 * _1359)), 4.0 - (_912 * 4.0));
    float _1649 = dot(vec3(_1374, _1375, _1376), vec3(_1357, _1358, _1359));
    float _1901 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
    float _1658 = (exp2(log2(1.0 - (isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1664 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1357, _1358, _1359), 0.0);
    float _1676 = ((_1532 + (((((_1060 * cbMtdParam._m0[12u].x) - _1317) * _608) + _1317) * cbMtdParam._m0[15u].y)) + _1535) + (((_1664.x * _821) + (_1658 * _1644.x)) * _1625);
    float _1681 = ((_1533 + (((((_1061 * cbMtdParam._m0[12u].y) - _1318) * _608) + _1318) * cbMtdParam._m0[15u].y)) + _1536) + (((_1664.y * _822) + (_1658 * _1644.y)) * _1625);
    float _1686 = ((_1534 + (((((_1062 * cbMtdParam._m0[12u].z) - _1319) * _608) + _1319) * cbMtdParam._m0[15u].y)) + _1537) + (((_1664.z * _823) + (_1658 * _1644.z)) * _1625);
    float _1912 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
    float _1923 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
    float _1934 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
    bool _1694 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1705;
    _1705.x = _1694 ? ((_670 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0)));
    _1705.y = _1694 ? ((_673 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1923 : (isnan(_1923) ? 1.0 : min(_1923, 1.0)));
    _1705.z = _1694 ? ((_676 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1934 : (isnan(_1934) ? 1.0 : min(_1934, 1.0)));
    payload._m0 = _1705;
}


