#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _48
{
    vec3 _m0;
};

struct _52
{
    vec2 _m0;
};

struct _55
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _48 payload;
hitAttributeEXT _52 hit;
layout(location = 1) rayPayloadEXT _55 _57;
layout(location = 2) rayPayloadEXT _55 _58;

vec3 _911;

void main()
{
    float _66 = float(gl_LaunchSizeEXT.y);
    float _96 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _97 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _116 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _117 = _116.y;
    uint _157;
    uint _159;
    uint _160;
    if (_116.x == 0u)
    {
        uint _125 = (_117 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _134 = uvec3(texelFetch(l_geomIndexBuffer, int(_125)).x, texelFetch(l_geomIndexBuffer, int(_125 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_125 + 2u)).x);
        _157 = _134.x;
        _159 = _134.y;
        _160 = _134.z;
    }
    else
    {
        uint _138 = uint(gl_PrimitiveID) * 6u;
        uint _140 = _138 & 4294967292u;
        uint _143 = (_117 + _140) >> 2u;
        uvec2 _150 = uvec2(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x);
        uint _151 = _150.x;
        uint _152 = _150.y;
        uint _154 = _151 >> 16u;
        uint _155 = _152 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_140 == _138)
        {
            frontier_phi_3_2_ladder = _155;
            frontier_phi_3_2_ladder_1 = _151 & 65535u;
            frontier_phi_3_2_ladder_2 = _154;
        }
        else
        {
            frontier_phi_3_2_ladder = _152 >> 16u;
            frontier_phi_3_2_ladder_1 = _154;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _157 = frontier_phi_3_2_ladder_1;
        _159 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder;
    }
    uvec4 _164 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _165 = _164.x;
    uint _166 = _164.z;
    bool _167 = _166 != 0u;
    bool _169 = _116.w == 0u;
    bool _170 = _167 || _169;
    uint _172 = (_165 * _157) + 12u;
    uint _196;
    uint _197;
    uint _198;
    uint _199;
    if (_170)
    {
        uvec4 _175 = texelFetch(l_geomAttrib_0, int(_172 >> 2u));
        uint _176 = _175.x;
        _196 = _176 & 255u;
        _197 = (_176 >> 8u) & 255u;
        _198 = (_176 >> 16u) & 255u;
        _199 = 20u;
    }
    else
    {
        uint _184 = _172 >> 2u;
        uvec2 _190 = uvec2(texelFetch(l_geomAttrib_0, int(_184)).x, texelFetch(l_geomAttrib_0, int(_184 + 1u)).x);
        uint _191 = _190.x;
        _196 = _191 & 65535u;
        _197 = _191 >> 16u;
        _198 = _190.y & 65535u;
        _199 = 24u;
    }
    bool _205 = _166 == 0u;
    uint _206;
    if (_205)
    {
        _206 = _199;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_169)
        {
            frontier_phi_9_10_ladder = _199 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _199 + 8u;
        }
        _206 = frontier_phi_9_10_ladder;
    }
    uvec4 _217 = texelFetch(l_geomAttrib_0, int((((_165 * _157) + 4u) + (_167 ? (_206 + 4u) : _206)) >> 2u));
    uint _218 = _217.x;
    float _222 = float(int(uint(int(_218 << 16u) >> int(16u))));
    float _223 = float(int(uint(int(_218) >> int(16u))));
    uint _225 = (_165 * _159) + 12u;
    uint _246;
    uint _247;
    uint _248;
    uint _249;
    if (_170)
    {
        uvec4 _227 = texelFetch(l_geomAttrib_0, int(_225 >> 2u));
        uint _228 = _227.x;
        _246 = _228 & 255u;
        _247 = (_228 >> 8u) & 255u;
        _248 = (_228 >> 16u) & 255u;
        _249 = 20u;
    }
    else
    {
        uint _234 = _225 >> 2u;
        uvec2 _240 = uvec2(texelFetch(l_geomAttrib_0, int(_234)).x, texelFetch(l_geomAttrib_0, int(_234 + 1u)).x);
        uint _241 = _240.x;
        _246 = _241 & 65535u;
        _247 = _241 >> 16u;
        _248 = _240.y & 65535u;
        _249 = 24u;
    }
    uint _253;
    if (_205)
    {
        _253 = _249;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_169)
        {
            frontier_phi_16_17_ladder = _249 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _249 + 8u;
        }
        _253 = frontier_phi_16_17_ladder;
    }
    uvec4 _262 = texelFetch(l_geomAttrib_0, int((((_165 * _159) + 4u) + (_167 ? (_253 + 4u) : _253)) >> 2u));
    uint _263 = _262.x;
    float _267 = float(int(uint(int(_263 << 16u) >> int(16u))));
    float _268 = float(int(uint(int(_263) >> int(16u))));
    uint _270 = (_165 * _160) + 12u;
    uint _291;
    uint _292;
    uint _293;
    uint _294;
    if (_170)
    {
        uvec4 _272 = texelFetch(l_geomAttrib_0, int(_270 >> 2u));
        uint _273 = _272.x;
        _291 = _273 & 255u;
        _292 = (_273 >> 8u) & 255u;
        _293 = (_273 >> 16u) & 255u;
        _294 = 20u;
    }
    else
    {
        uint _279 = _270 >> 2u;
        uvec2 _285 = uvec2(texelFetch(l_geomAttrib_0, int(_279)).x, texelFetch(l_geomAttrib_0, int(_279 + 1u)).x);
        uint _286 = _285.x;
        _291 = _286 & 65535u;
        _292 = _286 >> 16u;
        _293 = _285.y & 65535u;
        _294 = 24u;
    }
    uint _298;
    if (_205)
    {
        _298 = _294;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_169)
        {
            frontier_phi_23_24_ladder = _294 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _294 + 8u;
        }
        _298 = frontier_phi_23_24_ladder;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int((((_165 * _160) + 4u) + (_167 ? (_298 + 4u) : _298)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    bool _315 = _116.z == 0u;
    float _351;
    float _352;
    float _353;
    if (_315)
    {
        uint _318 = _157 * 3u;
        uvec3 _327 = uvec3(texelFetch(l_geomPositionBuffer, int(_318)).x, texelFetch(l_geomPositionBuffer, int(_318 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_318 + 2u)).x);
        _351 = uintBitsToFloat(_327.x);
        _352 = uintBitsToFloat(_327.y);
        _353 = uintBitsToFloat(_327.z);
    }
    else
    {
        uint _335 = _157 * 2u;
        uvec2 _341 = uvec2(texelFetch(l_geomPositionBuffer, int(_335)).x, texelFetch(l_geomPositionBuffer, int(_335 + 1u)).x);
        uint _342 = _341.x;
        _351 = unpackHalf2x16(_342).x;
        _352 = unpackHalf2x16(_342 >> 16u).x;
        _353 = unpackHalf2x16(_341.y).x;
    }
    float _389;
    float _390;
    float _391;
    if (_315)
    {
        uint _356 = _159 * 3u;
        uvec3 _365 = uvec3(texelFetch(l_geomPositionBuffer, int(_356)).x, texelFetch(l_geomPositionBuffer, int(_356 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_356 + 2u)).x);
        _389 = uintBitsToFloat(_365.x);
        _390 = uintBitsToFloat(_365.y);
        _391 = uintBitsToFloat(_365.z);
    }
    else
    {
        uint _373 = _159 * 2u;
        uvec2 _379 = uvec2(texelFetch(l_geomPositionBuffer, int(_373)).x, texelFetch(l_geomPositionBuffer, int(_373 + 1u)).x);
        uint _380 = _379.x;
        _389 = unpackHalf2x16(_380).x;
        _390 = unpackHalf2x16(_380 >> 16u).x;
        _391 = unpackHalf2x16(_379.y).x;
    }
    float _427;
    float _428;
    float _429;
    if (_315)
    {
        uint _394 = _160 * 3u;
        uvec3 _403 = uvec3(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_394 + 2u)).x);
        _427 = uintBitsToFloat(_403.x);
        _428 = uintBitsToFloat(_403.y);
        _429 = uintBitsToFloat(_403.z);
    }
    else
    {
        uint _411 = _160 * 2u;
        uvec2 _417 = uvec2(texelFetch(l_geomPositionBuffer, int(_411)).x, texelFetch(l_geomPositionBuffer, int(_411 + 1u)).x);
        uint _418 = _417.x;
        _427 = unpackHalf2x16(_418).x;
        _428 = unpackHalf2x16(_418 >> 16u).x;
        _429 = unpackHalf2x16(_417.y).x;
    }
    float _432 = (1.0 - hit._m0.x) - hit._m0.y;
    float _473 = _389 - _351;
    float _474 = _390 - _352;
    float _475 = _391 - _353;
    float _478 = fma(_475, gl_ObjectToWorldEXT[2u].x, fma(_474, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _473));
    float _481 = fma(_475, gl_ObjectToWorldEXT[2u].y, fma(_474, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _473));
    float _484 = fma(_475, gl_ObjectToWorldEXT[2u].z, fma(_474, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _473));
    float _485 = _427 - _351;
    float _486 = _428 - _352;
    float _487 = _429 - _353;
    float _490 = fma(_487, gl_ObjectToWorldEXT[2u].x, fma(_486, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _485));
    float _493 = fma(_487, gl_ObjectToWorldEXT[2u].y, fma(_486, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _485));
    float _496 = fma(_487, gl_ObjectToWorldEXT[2u].z, fma(_486, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _485));
    float _503 = (((float(_196) * _432) + (-127.0)) + (float(_246) * hit._m0.x)) + (float(_291) * hit._m0.y);
    float _506 = (((float(_197) * _432) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _509 = (((float(_198) * _432) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _510 = _503 * 0.0078740157186985015869140625;
    float _512 = _506 * 0.0078740157186985015869140625;
    float _513 = _509 * 0.0078740157186985015869140625;
    uvec2 _532 = uvec2(textureSize(M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1, int(0u)));
    float _541 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _542 = _541 * gl_WorldRayDirectionEXT.x;
    float _543 = _541 * gl_WorldRayDirectionEXT.y;
    float _544 = _541 * gl_WorldRayDirectionEXT.z;
    float _596;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _558 = (_496 * _481) - (_493 * _484);
        float _561 = (_490 * _484) - (_496 * _478);
        float _564 = (_493 * _478) - (_490 * _481);
        float _593 = ((log2((((float(_532.y) * 0.5) * float(_532.x)) * abs((((_313 - _223) * (_267 - _222)) - ((_312 - _222) * (_268 - _223))) * 2.384185791015625e-07)) / (sqrt(((_561 * _561) + (_564 * _564)) + (_558 * _558)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_97 * _97) + (_96 * _96)) + (_98 * _98)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _66)))))) / abs(dot(vec3(_542, _543, _544), vec3(_510, _512, _513))));
        _596 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    }
    else
    {
        _596 = 0.0;
    }
    vec4 _600 = textureLod(sampler2D(M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((((((_267 * hit._m0.x) + (_222 * _432)) + (_312 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[10u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((((_268 * hit._m0.x) + (_223 * _432)) + (_313 * hit._m0.y)) * 0.00048828125) * cbMtdParam._m0[10u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _596);
    float _621 = inversesqrt(dot(vec3(_510, _512, _513), vec3(_510, _512, _513)));
    float _622 = _621 * _510;
    float _623 = _621 * _512;
    float _624 = _621 * _513;
    float _636 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _637 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _638 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _639 = (-0.0) - _542;
    float _641 = (-0.0) - _543;
    float _642 = (-0.0) - _544;
    float _648 = float(gl_LaunchIDEXT.x);
    float _649 = float(gl_LaunchIDEXT.y);
    float _652 = float(gl_LaunchSizeEXT.x);
    float _666 = fract(fract(sin(dot(vec2(_648 / _652, _649 / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _679 = fract(fract(sin(dot(vec2((_648 + 128.0) / _652, (_649 + 128.0) / _66), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _58._m0 = 1u;
    uvec4 _689 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _690 = _689.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _690, _689.w, _690, vec3(_636, _637, _638), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _756;
    float _757;
    float _758;
    if (_58._m0 == 0u)
    {
        float _711 = g_sceneCB._m0[4u].x - _542;
        float _712 = g_sceneCB._m0[4u].y - _543;
        float _713 = g_sceneCB._m0[4u].z - _544;
        float _717 = inversesqrt(dot(vec3(_711, _712, _713), vec3(_711, _712, _713)));
        float _721 = dot(vec3(_622, _623, _624), vec3(g_sceneCB._m0[4u].xyz));
        float _990 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
        float _724 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
        float _725 = dot(vec3(_622, _623, _624), vec3(_639, _641, _642));
        float _1001 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
        float _729 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_711 * _717, _712 * _717, _713 * _717));
        float _1012 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
        float _740 = (exp2(log2(1.0 - (isnan(1.0) ? _1012 : (isnan(_1012) ? 1.0 : min(_1012, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _746 = (0.5 / ((_724 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0))))) * _724;
        float _1023 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        float _748 = (isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0))) * 0.31831014156341552734375;
        _756 = (_740 * g_sceneCB._m0[5u].x) * _748;
        _757 = (_740 * g_sceneCB._m0[5u].y) * _748;
        _758 = (_740 * g_sceneCB._m0[5u].z) * _748;
    }
    else
    {
        _756 = 0.0;
        _757 = 0.0;
        _758 = 0.0;
    }
    bool _760 = abs(_623) < 0.89999997615814208984375;
    float _762 = float(_760);
    float _763 = _760 ? 0.0 : 1.0;
    float _766 = (_762 * _624) - (_763 * _623);
    float _767 = _763 * _622;
    float _769 = (-0.0) - (_622 * _762);
    float _773 = inversesqrt(dot(vec3(_766, _767, _769), vec3(_766, _767, _769)));
    float _774 = _766 * _773;
    float _775 = _767 * _773;
    float _776 = _773 * _769;
    float _779 = (_775 * _624) - (_776 * _623);
    float _782 = (_776 * _622) - (_774 * _624);
    float _785 = (_774 * _623) - (_775 * _622);
    float _787;
    float _795;
    float _786 = 0.0;
    uint _788 = 0u;
    float _792;
    bool _794;
    for (;;)
    {
        _792 = (float(_788) + _666) * 0.03125;
        _794 = _788 == 0u;
        float frontier_phi_41_pred;
        if (_794)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _916;
            float _917;
            uint _919;
            _916 = 0.0;
            _917 = 0.5;
            _919 = _788;
            float _796;
            for (;;)
            {
                _796 = ((_919 & 1u) != 0u) ? (_917 + _916) : _916;
                uint _920 = _919 >> 1u;
                if (_920 == 0u)
                {
                    break;
                }
                else
                {
                    _916 = _796;
                    _917 *= 0.5;
                    _919 = _920;
                }
            }
            frontier_phi_41_pred = _796;
        }
        _795 = frontier_phi_41_pred;
        float _797 = _795 + _679;
        float _802 = sqrt(_792);
        float _803 = ((_797 > 1.0) ? (_797 + (-1.0)) : _797) * 6.283185482025146484375;
        float _806 = cos(_803) * _802;
        float _808 = sin(_803) * _802;
        float _810 = sqrt(1.0 - _792);
        float _823 = ((_810 * _622) + (_806 * _779)) + (_808 * _774);
        float _824 = ((_810 * _623) + (_806 * _782)) + (_808 * _775);
        float _825 = ((_810 * _624) + (_806 * _785)) + (_808 * _776);
        _57._m0 = 1u;
        uvec4 _829 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _830 = _829.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _830, _829.w, _830, vec3(_636, _637, _638), 9.9999997473787516355514526367188e-05, vec3(_823, _824, _825), 10000.0, 1);
        float _836 = dot(vec3(_622, _623, _624), vec3(_823, _824, _825));
        float _1034 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _839 = isnan(1.0) ? _1034 : (isnan(_1034) ? 1.0 : min(_1034, 1.0));
        _787 = ((float(_57._m0 == 0u) * _839) / (_839 * 0.3183098733425140380859375)) + _786;
        uint _789 = _788 + 1u;
        if (_789 == 32u)
        {
            break;
        }
        else
        {
            _786 = _787;
            _788 = _789;
            continue;
        }
    }
    float _848 = _787 * 0.009947183541953563690185546875;
    float _853 = dot(vec3(_542, _543, _544), vec3(_622, _623, _624)) * 2.0;
    vec4 _865 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_542 - (_853 * _622), _543 - (_853 * _623), _544 - (_853 * _624)), 4.0);
    float _870 = dot(vec3(_639, _641, _642), vec3(_622, _623, _624));
    float _1045 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _879 = (exp2(log2(1.0 - (isnan(1.0) ? _1045 : (isnan(_1045) ? 1.0 : min(_1045, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _887 = (_756 + ((cbMtdParam._m0[10u].x * _600.x) * cbMtdParam._m0[9u].x)) + ((_865.x * _848) * _879);
    float _889 = (_757 + ((cbMtdParam._m0[10u].x * _600.y) * cbMtdParam._m0[9u].y)) + ((_865.y * _848) * _879);
    float _891 = (_758 + ((cbMtdParam._m0[10u].x * _600.z) * cbMtdParam._m0[9u].z)) + ((_865.z * _848) * _879);
    float _1056 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _1067 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _1078 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    bool _899 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _910;
    _910.x = _899 ? ((_503 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0)));
    _910.y = _899 ? ((_506 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0)));
    _910.z = _899 ? ((_509 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1078 : (isnan(_1078) ? 1.0 : min(_1078, 1.0)));
    payload._m0 = _910;
}


