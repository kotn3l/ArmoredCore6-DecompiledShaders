#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_8;
layout(set = 0, binding = 8) uniform texture2D M_Water_Coaltar_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _1924;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _115 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _124 = sqrt(((_116 * _116) + (_115 * _115)) + (_117 * _117)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _135 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _136 = _135.y;
    uint _176;
    uint _178;
    uint _179;
    if (_135.x == 0u)
    {
        uint _144 = (_136 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _153 = uvec3(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_144 + 2u)).x);
        _176 = _153.x;
        _178 = _153.y;
        _179 = _153.z;
    }
    else
    {
        uint _157 = uint(gl_PrimitiveID) * 6u;
        uint _159 = _157 & 4294967292u;
        uint _162 = (_136 + _159) >> 2u;
        uvec2 _169 = uvec2(texelFetch(l_geomIndexBuffer, int(_162)).x, texelFetch(l_geomIndexBuffer, int(_162 + 1u)).x);
        uint _170 = _169.x;
        uint _171 = _169.y;
        uint _173 = _170 >> 16u;
        uint _174 = _171 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_159 == _157)
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _170 & 65535u;
            frontier_phi_3_2_ladder_2 = _174;
        }
        else
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _171 >> 16u;
        }
        _176 = frontier_phi_3_2_ladder_1;
        _178 = frontier_phi_3_2_ladder;
        _179 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _183 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _184 = _183.x;
    uint _185 = _183.z;
    bool _186 = _185 != 0u;
    bool _188 = _135.w == 0u;
    bool _189 = _186 || _188;
    uint _190 = _184 * _176;
    uint _191 = _190 + 12u;
    uint _215;
    uint _216;
    uint _217;
    uint _218;
    if (_189)
    {
        uvec4 _194 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _195 = _194.x;
        _215 = _195 & 255u;
        _216 = (_195 >> 8u) & 255u;
        _217 = (_195 >> 16u) & 255u;
        _218 = 16u;
    }
    else
    {
        uint _203 = _191 >> 2u;
        uvec2 _209 = uvec2(texelFetch(l_geomAttrib_0, int(_203)).x, texelFetch(l_geomAttrib_0, int(_203 + 1u)).x);
        uint _210 = _209.x;
        _215 = _210 & 65535u;
        _216 = _210 >> 16u;
        _217 = _209.y & 65535u;
        _218 = 20u;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((_218 + _190) >> 2u));
    uint _227 = _226.x;
    bool _241 = _185 == 0u;
    uint _242;
    if (_241)
    {
        _242 = _218 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_188)
        {
            frontier_phi_9_10_ladder = _218 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _218 + 12u;
        }
        _242 = frontier_phi_9_10_ladder;
    }
    uint _246 = _186 ? (_242 + 4u) : _242;
    uvec4 _250 = texelFetch(l_geomAttrib_0, int(((_190 + 4u) + _246) >> 2u));
    uint _251 = _250.x;
    float _255 = float(int(uint(int(_251 << 16u) >> int(16u))));
    float _256 = float(int(uint(int(_251) >> int(16u))));
    uvec4 _267 = texelFetch(l_geomAttrib_0, int(((_190 + 12u) + _246) >> 2u));
    uint _268 = _267.x;
    uint _277 = _184 * _178;
    uint _278 = _277 + 12u;
    uint _299;
    uint _300;
    uint _301;
    uint _302;
    if (_189)
    {
        uvec4 _280 = texelFetch(l_geomAttrib_0, int(_278 >> 2u));
        uint _281 = _280.x;
        _299 = _281 & 255u;
        _300 = (_281 >> 8u) & 255u;
        _301 = (_281 >> 16u) & 255u;
        _302 = 16u;
    }
    else
    {
        uint _287 = _278 >> 2u;
        uvec2 _293 = uvec2(texelFetch(l_geomAttrib_0, int(_287)).x, texelFetch(l_geomAttrib_0, int(_287 + 1u)).x);
        uint _294 = _293.x;
        _299 = _294 & 65535u;
        _300 = _294 >> 16u;
        _301 = _293.y & 65535u;
        _302 = 20u;
    }
    uvec4 _308 = texelFetch(l_geomAttrib_0, int((_302 + _277) >> 2u));
    uint _309 = _308.x;
    uint _321;
    if (_241)
    {
        _321 = _302 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_188)
        {
            frontier_phi_16_17_ladder = _302 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _302 + 12u;
        }
        _321 = frontier_phi_16_17_ladder;
    }
    uint _325 = _186 ? (_321 + 4u) : _321;
    uvec4 _329 = texelFetch(l_geomAttrib_0, int(((_277 + 4u) + _325) >> 2u));
    uint _330 = _329.x;
    float _334 = float(int(uint(int(_330 << 16u) >> int(16u))));
    float _335 = float(int(uint(int(_330) >> int(16u))));
    uvec4 _346 = texelFetch(l_geomAttrib_0, int(((_277 + 12u) + _325) >> 2u));
    uint _347 = _346.x;
    uint _356 = _184 * _179;
    uint _357 = _356 + 12u;
    uint _378;
    uint _379;
    uint _380;
    uint _381;
    if (_189)
    {
        uvec4 _359 = texelFetch(l_geomAttrib_0, int(_357 >> 2u));
        uint _360 = _359.x;
        _378 = _360 & 255u;
        _379 = (_360 >> 8u) & 255u;
        _380 = (_360 >> 16u) & 255u;
        _381 = 16u;
    }
    else
    {
        uint _366 = _357 >> 2u;
        uvec2 _372 = uvec2(texelFetch(l_geomAttrib_0, int(_366)).x, texelFetch(l_geomAttrib_0, int(_366 + 1u)).x);
        uint _373 = _372.x;
        _378 = _373 & 65535u;
        _379 = _373 >> 16u;
        _380 = _372.y & 65535u;
        _381 = 20u;
    }
    uvec4 _387 = texelFetch(l_geomAttrib_0, int((_381 + _356) >> 2u));
    uint _388 = _387.x;
    uint _400;
    if (_241)
    {
        _400 = _381 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_188)
        {
            frontier_phi_23_24_ladder = _381 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _381 + 12u;
        }
        _400 = frontier_phi_23_24_ladder;
    }
    uint _404 = _186 ? (_400 + 4u) : _400;
    uvec4 _408 = texelFetch(l_geomAttrib_0, int(((_356 + 4u) + _404) >> 2u));
    uint _409 = _408.x;
    float _413 = float(int(uint(int(_409 << 16u) >> int(16u))));
    float _414 = float(int(uint(int(_409) >> int(16u))));
    uvec4 _425 = texelFetch(l_geomAttrib_0, int(((_356 + 12u) + _404) >> 2u));
    uint _426 = _425.x;
    bool _436 = _135.z == 0u;
    float _472;
    float _473;
    float _474;
    if (_436)
    {
        uint _439 = _176 * 3u;
        uvec3 _448 = uvec3(texelFetch(l_geomPositionBuffer, int(_439)).x, texelFetch(l_geomPositionBuffer, int(_439 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_439 + 2u)).x);
        _472 = uintBitsToFloat(_448.x);
        _473 = uintBitsToFloat(_448.y);
        _474 = uintBitsToFloat(_448.z);
    }
    else
    {
        uint _456 = _176 * 2u;
        uvec2 _462 = uvec2(texelFetch(l_geomPositionBuffer, int(_456)).x, texelFetch(l_geomPositionBuffer, int(_456 + 1u)).x);
        uint _463 = _462.x;
        _472 = unpackHalf2x16(_463).x;
        _473 = unpackHalf2x16(_463 >> 16u).x;
        _474 = unpackHalf2x16(_462.y).x;
    }
    float _510;
    float _511;
    float _512;
    if (_436)
    {
        uint _477 = _178 * 3u;
        uvec3 _486 = uvec3(texelFetch(l_geomPositionBuffer, int(_477)).x, texelFetch(l_geomPositionBuffer, int(_477 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_477 + 2u)).x);
        _510 = uintBitsToFloat(_486.x);
        _511 = uintBitsToFloat(_486.y);
        _512 = uintBitsToFloat(_486.z);
    }
    else
    {
        uint _494 = _178 * 2u;
        uvec2 _500 = uvec2(texelFetch(l_geomPositionBuffer, int(_494)).x, texelFetch(l_geomPositionBuffer, int(_494 + 1u)).x);
        uint _501 = _500.x;
        _510 = unpackHalf2x16(_501).x;
        _511 = unpackHalf2x16(_501 >> 16u).x;
        _512 = unpackHalf2x16(_500.y).x;
    }
    float _548;
    float _549;
    float _550;
    if (_436)
    {
        uint _515 = _179 * 3u;
        uvec3 _524 = uvec3(texelFetch(l_geomPositionBuffer, int(_515)).x, texelFetch(l_geomPositionBuffer, int(_515 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_515 + 2u)).x);
        _548 = uintBitsToFloat(_524.x);
        _549 = uintBitsToFloat(_524.y);
        _550 = uintBitsToFloat(_524.z);
    }
    else
    {
        uint _532 = _179 * 2u;
        uvec2 _538 = uvec2(texelFetch(l_geomPositionBuffer, int(_532)).x, texelFetch(l_geomPositionBuffer, int(_532 + 1u)).x);
        uint _539 = _538.x;
        _548 = unpackHalf2x16(_539).x;
        _549 = unpackHalf2x16(_539 >> 16u).x;
        _550 = unpackHalf2x16(_538.y).x;
    }
    float _553 = (1.0 - hit._m0.x) - hit._m0.y;
    float _590 = (((float(texelFetch(l_geomAttrib_0, int(((_277 + 8u) + _325) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_190 + 8u) + _246) >> 2u)).x & 255u) * _553)) + (float(texelFetch(l_geomAttrib_0, int(((_356 + 8u) + _404) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _603 = (((float(_347 & 255u) * hit._m0.x) + (float(_268 & 255u) * _553)) + (float(_426 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _612 = (_334 - _255) * 0.00048828125;
    float _614 = (_335 - _256) * 0.00048828125;
    float _617 = (_413 - _255) * 0.00048828125;
    float _618 = (_414 - _256) * 0.00048828125;
    float _640 = _510 - _472;
    float _641 = _511 - _473;
    float _642 = _512 - _474;
    float _645 = fma(_642, gl_ObjectToWorldEXT[2u].x, fma(_641, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _640));
    float _648 = fma(_642, gl_ObjectToWorldEXT[2u].y, fma(_641, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _640));
    float _651 = fma(_642, gl_ObjectToWorldEXT[2u].z, fma(_641, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _640));
    float _652 = _548 - _472;
    float _653 = _549 - _473;
    float _654 = _550 - _474;
    float _657 = fma(_654, gl_ObjectToWorldEXT[2u].x, fma(_653, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _652));
    float _660 = fma(_654, gl_ObjectToWorldEXT[2u].y, fma(_653, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _652));
    float _663 = fma(_654, gl_ObjectToWorldEXT[2u].z, fma(_653, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _652));
    float _664 = (((_334 * hit._m0.x) + (_255 * _553)) + (_413 * hit._m0.y)) * 0.00048828125;
    float _665 = (((_335 * hit._m0.x) + (_256 * _553)) + (_414 * hit._m0.y)) * 0.00048828125;
    float _669 = (((float(_215) * _553) + (-127.0)) + (float(_299) * hit._m0.x)) + (float(_378) * hit._m0.y);
    float _672 = (((float(_216) * _553) + (-127.0)) + (float(_300) * hit._m0.x)) + (float(_379) * hit._m0.y);
    float _675 = (((float(_217) * _553) + (-127.0)) + (float(_301) * hit._m0.x)) + (float(_380) * hit._m0.y);
    float _676 = _669 * 0.0078740157186985015869140625;
    float _678 = _672 * 0.0078740157186985015869140625;
    float _679 = _675 * 0.0078740157186985015869140625;
    float _692 = ((((float(_227 & 255u) * _553) + (-127.0)) + (float(_309 & 255u) * hit._m0.x)) + (float(_388 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _693 = ((((float((_227 >> 8u) & 255u) * _553) + (-127.0)) + (float((_309 >> 8u) & 255u) * hit._m0.x)) + (float((_388 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _694 = ((((float((_227 >> 16u) & 255u) * _553) + (-127.0)) + (float((_309 >> 16u) & 255u) * hit._m0.x)) + (float((_388 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _695 = ((((float(_227 >> 24u) * _553) + (-127.0)) + (float(_309 >> 24u) * hit._m0.x)) + (float(_388 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _705 = ((_693 * _679) - (_694 * _678)) * _695;
    float _706 = ((_694 * _676) - (_692 * _679)) * _695;
    float _707 = ((_692 * _678) - (_693 * _676)) * _695;
    float _711 = inversesqrt(dot(vec3(_705, _706, _707), vec3(_705, _706, _707)));
    uvec2 _733 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_10, int(0u)));
    bool _738 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _791;
    if (_738)
    {
        float _749 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _755 = (_663 * _648) - (_660 * _651);
        float _758 = (_657 * _651) - (_663 * _645);
        float _761 = (_660 * _645) - (_657 * _648);
        float _788 = ((log2((((float(_733.y) * 0.5) * float(_733.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_758 * _758) + (_761 * _761)) + (_755 * _755)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_749 * gl_WorldRayDirectionEXT.x, _749 * gl_WorldRayDirectionEXT.y, _749 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _791 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    }
    else
    {
        _791 = 0.0;
    }
    float _809 = cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x;
    float _818 = (cbMtdParam._m0[23u].x * _664) + (_809 * cbMtdParam._m0[21u].x);
    float _819 = (cbMtdParam._m0[23u].y * _665) + (_809 * cbMtdParam._m0[21u].y);
    uvec2 _831 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_0, int(0u)));
    float _882;
    if (_738)
    {
        float _842 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _848 = (_663 * _648) - (_660 * _651);
        float _851 = (_657 * _651) - (_663 * _645);
        float _854 = (_660 * _645) - (_657 * _648);
        float _880 = ((log2((((float(_831.y) * 0.5) * float(_831.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_851 * _851) + (_854 * _854)) + (_848 * _848)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_842 * gl_WorldRayDirectionEXT.x, _842 * gl_WorldRayDirectionEXT.y, _842 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _882 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    }
    else
    {
        _882 = 0.0;
    }
    float _906 = (cbMtdParam._m0[20u].z * _664) + (cbMtdParam._m0[18u].x * _809);
    float _907 = (cbMtdParam._m0[20u].w * _665) + (cbMtdParam._m0[18u].y * _809);
    uvec2 _919 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_1, int(0u)));
    float _970;
    if (_738)
    {
        float _930 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _936 = (_663 * _648) - (_660 * _651);
        float _939 = (_657 * _651) - (_663 * _645);
        float _942 = (_660 * _645) - (_657 * _648);
        float _968 = ((log2((((float(_919.y) * 0.5) * float(_919.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_939 * _939) + (_942 * _942)) + (_936 * _936)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_930 * gl_WorldRayDirectionEXT.x, _930 * gl_WorldRayDirectionEXT.y, _930 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _970 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    }
    else
    {
        _970 = 0.0;
    }
    vec4 _973 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_1, SS_DiffuseMap), vec2((_906 * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (_907 * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _970);
    float _978 = _973.x * cbMtdParam._m0[9u].x;
    float _979 = _973.y * cbMtdParam._m0[9u].y;
    float _980 = _973.z * cbMtdParam._m0[9u].z;
    uvec2 _999 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_2, int(0u)));
    float _1050;
    if (_738)
    {
        float _1010 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1016 = (_663 * _648) - (_660 * _651);
        float _1019 = (_657 * _651) - (_663 * _645);
        float _1022 = (_660 * _645) - (_657 * _648);
        float _1048 = ((log2((((float(_999.y) * 0.5) * float(_999.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1019 * _1019) + (_1022 * _1022)) + (_1016 * _1016)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1010 * gl_WorldRayDirectionEXT.x, _1010 * gl_WorldRayDirectionEXT.y, _1010 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1050 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    }
    else
    {
        _1050 = 0.0;
    }
    vec4 _1052 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _818) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _819) + cbTextureTilingScale._m0[5u].w), _1050);
    float _1067 = (_590 - ((cbMtdParam._m0[13u].x * (1.0 - _590)) * (textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_0, SS_WrapLinear), vec2((_818 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_819 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _882).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[13u].y + 1.0);
    float _2034 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1068 = isnan(1.0) ? _2034 : (isnan(_2034) ? 1.0 : min(_2034, 1.0));
    float _1075 = (((_1052.x * cbMtdParam._m0[10u].x) - _978) * _1068) + _978;
    float _1076 = (((_1052.y * cbMtdParam._m0[10u].y) - _979) * _1068) + _979;
    float _1077 = (((_1052.z * cbMtdParam._m0[10u].z) - _980) * _1068) + _980;
    float _1101 = _603 - ((cbMtdParam._m0[16u].w * (1.0 - _603)) * (textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _664) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _665) + cbTextureTilingScale._m0[2u].w), _791).x + 0.00999999977648258209228515625));
    float _1103 = _1101 * (cbMtdParam._m0[17u].y + 1.0);
    float _2045 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _1104 = isnan(1.0) ? _2045 : (isnan(_2045) ? 1.0 : min(_2045, 1.0));
    float _1114 = (((cbMtdParam._m0[11u].x - _1075) + ((cbMtdParam._m0[14u].x * _603) * (_1075 - cbMtdParam._m0[11u].x))) * _1104) + _1075;
    float _1115 = (((cbMtdParam._m0[11u].y - _1076) + ((((((float((_347 >> 8u) & 255u) * hit._m0.x) + (float((_268 >> 8u) & 255u) * _553)) + (float((_426 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[14u].x) * (_1076 - cbMtdParam._m0[11u].y))) * _1104) + _1076;
    float _1116 = (((cbMtdParam._m0[11u].z - _1077) + ((((((float((_347 >> 16u) & 255u) * hit._m0.x) + (float((_268 >> 16u) & 255u) * _553)) + (float((_426 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[14u].x) * (_1077 - cbMtdParam._m0[11u].z))) * _1104) + _1077;
    uvec2 _1141 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_8, int(0u)));
    float _1192;
    if (_738)
    {
        float _1152 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1158 = (_663 * _648) - (_660 * _651);
        float _1161 = (_657 * _651) - (_663 * _645);
        float _1164 = (_660 * _645) - (_657 * _648);
        float _1190 = ((log2((((float(_1141.y) * 0.5) * float(_1141.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1161 * _1161) + (_1164 * _1164)) + (_1158 * _1158)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1152 * gl_WorldRayDirectionEXT.x, _1152 * gl_WorldRayDirectionEXT.y, _1152 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1192 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
    }
    else
    {
        _1192 = 0.0;
    }
    vec4 _1195 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_8, SS_BumpMap), vec2((((cbMtdParam._m0[19u].z * _664) + (cbMtdParam._m0[18u].z * _809)) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((cbMtdParam._m0[19u].w * _665) + (cbMtdParam._m0[18u].w * _809)) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1192);
    float _1197 = _1195.z;
    float _1262;
    if (_738)
    {
        float _1222 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1228 = (_663 * _648) - (_660 * _651);
        float _1231 = (_657 * _651) - (_663 * _645);
        float _1234 = (_660 * _645) - (_657 * _648);
        float _1260 = ((log2((((float(_1141.y) * 0.5) * float(_1141.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1231 * _1231) + (_1234 * _1234)) + (_1228 * _1228)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1222 * gl_WorldRayDirectionEXT.x, _1222 * gl_WorldRayDirectionEXT.y, _1222 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1262 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
    }
    else
    {
        _1262 = 0.0;
    }
    vec4 _1264 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_8, SS_BumpMap), vec2((((cbMtdParam._m0[20u].x * _664) + (cbMtdParam._m0[19u].x * _809)) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((cbMtdParam._m0[20u].y * _665) + (cbMtdParam._m0[19u].y * _809)) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1262);
    float _1266 = _1264.z;
    float _1267 = isnan(_1266) ? _1197 : (isnan(_1197) ? _1266 : max(_1197, _1266));
    float _1274 = (_1114 - (_1267 * _1114)) + _1114;
    float _1275 = (_1115 - (_1267 * _1115)) + _1115;
    float _1276 = (_1116 - (_1267 * _1116)) + _1116;
    uvec2 _1288 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_14, int(0u)));
    float _1339;
    if (_738)
    {
        float _1299 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1305 = (_663 * _648) - (_660 * _651);
        float _1308 = (_657 * _651) - (_663 * _645);
        float _1311 = (_660 * _645) - (_657 * _648);
        float _1337 = ((log2((((float(_1288.y) * 0.5) * float(_1288.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1308 * _1308) + (_1311 * _1311)) + (_1305 * _1305)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1299 * gl_WorldRayDirectionEXT.x, _1299 * gl_WorldRayDirectionEXT.y, _1299 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1339 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
    }
    else
    {
        _1339 = 0.0;
    }
    vec4 _1341 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _818) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _819) + cbTextureTilingScale._m0[4u].w), _1339);
    float _1348 = (_1341.x * 2.0) + (-1.0);
    float _1350 = (_1341.y * 2.0) + (-1.0);
    float _1351 = dot(vec2(_1348, _1350), vec2(_1348, _1350));
    float _2076 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
    uvec2 _1370 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_13, int(0u)));
    float _1421;
    if (_738)
    {
        float _1381 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1387 = (_663 * _648) - (_660 * _651);
        float _1390 = (_657 * _651) - (_663 * _645);
        float _1393 = (_660 * _645) - (_657 * _648);
        float _1419 = ((log2((((float(_1370.y) * 0.5) * float(_1370.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1390 * _1390) + (_1393 * _1393)) + (_1387 * _1387)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1381 * gl_WorldRayDirectionEXT.x, _1381 * gl_WorldRayDirectionEXT.y, _1381 * gl_WorldRayDirectionEXT.z), vec3(_676, _678, _679))));
        _1421 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    }
    else
    {
        _1421 = 0.0;
    }
    vec4 _1423 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _906) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _907) + cbTextureTilingScale._m0[3u].w), _1421);
    float _1430 = (_1423.x * 2.0) + (-1.0);
    float _1431 = (_1423.y * 2.0) + (-1.0);
    float _1432 = dot(vec2(_1430, _1431), vec2(_1430, _1431));
    float _2092 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
    float _1437 = sqrt(1.0 - (isnan(1.0) ? _2092 : (isnan(_2092) ? 1.0 : min(_2092, 1.0))));
    float _1439 = cbMtdParam._m0[14u].y + _1423.z;
    float _1448 = _1101 * (cbMtdParam._m0[16u].w + 1.0);
    float _2103 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
    float _1451 = ((((cbMtdParam._m0[14u].z + _1341.z) - _1439) * _1068) + _1439) + ((isnan(1.0) ? _2103 : (isnan(_2103) ? 1.0 : min(_2103, 1.0))) * cbMtdParam._m0[15u].z);
    float _1458 = (_1068 * (_1348 - _1430)) + _1430;
    float _1459 = (_1068 * (_1350 - _1431)) + _1431;
    float _1460 = (_1068 * (sqrt(1.0 - (isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0)))) - _1437)) + _1437;
    uvec2 _1479 = uvec2(textureSize(M_Water_Coaltar_snp_0_Texture2D_9, int(0u)));
    float _1483 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1484 = _1483 * gl_WorldRayDirectionEXT.x;
    float _1485 = _1483 * gl_WorldRayDirectionEXT.y;
    float _1486 = _1483 * gl_WorldRayDirectionEXT.z;
    float _1530;
    if (_738)
    {
        float _1496 = (_663 * _648) - (_660 * _651);
        float _1499 = (_657 * _651) - (_663 * _645);
        float _1502 = (_660 * _645) - (_657 * _648);
        float _1528 = ((log2((((float(_1479.y) * 0.5) * float(_1479.x)) * abs((_618 * _612) - (_617 * _614))) / (sqrt(((_1499 * _1499) + (_1502 * _1502)) + (_1496 * _1496)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1484, _1485, _1486), vec3(_676, _678, _679))));
        _1530 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
    }
    else
    {
        _1530 = 0.0;
    }
    vec4 _1532 = textureLod(sampler2D(M_Water_Coaltar_snp_0_Texture2D_9, SS_BumpMap), vec2((((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _664) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _665) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), _1530);
    float _1538 = (_1532.x * 2.0) + (-1.0);
    float _1539 = (_1532.y * 2.0) + (-1.0);
    float _1540 = dot(vec2(_1538, _1539), vec2(_1538, _1539));
    float _2119 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
    float _1561 = ((((_1538 - _1458) + (_1538 * cbMtdParam._m0[14u].w)) + (cbMtdParam._m0[13u].z * _1458)) * _1104) + _1458;
    float _1562 = ((((_1539 - _1459) + (_1539 * cbMtdParam._m0[14u].w)) + (cbMtdParam._m0[13u].z * _1459)) * _1104) + _1459;
    float _1563 = (_1104 * (sqrt(1.0 - (isnan(1.0) ? _2119 : (isnan(_2119) ? 1.0 : min(_2119, 1.0)))) - _1460)) + _1460;
    float _1566 = fma(_1563, _676, fma(_1562, _692, (_711 * _705) * _1561));
    float _1569 = fma(_1563, _678, fma(_1562, _693, (_711 * _706) * _1561));
    float _1572 = fma(_1563, _679, fma(_1562, _694, (_711 * _707) * _1561));
    float _1576 = inversesqrt(dot(vec3(_1566, _1569, _1572), vec3(_1566, _1569, _1572)));
    float _1577 = _1576 * _1566;
    float _1578 = _1576 * _1569;
    float _1579 = _1576 * _1572;
    float _1591 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1592 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1593 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1594 = (-0.0) - _1484;
    float _1596 = (-0.0) - _1485;
    float _1597 = (-0.0) - _1486;
    float _1603 = float(gl_LaunchIDEXT.x);
    float _1604 = float(gl_LaunchIDEXT.y);
    float _1607 = float(gl_LaunchSizeEXT.x);
    float _1621 = fract(fract(sin(dot(vec2(_1603 / _1607, _1604 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1634 = fract(fract(sin(dot(vec2((_1603 + 128.0) / _1607, (_1604 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _73._m0 = 1u;
    uvec4 _1644 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1645 = _1644.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1645, _1644.w, _1645, vec3(_1591, _1592, _1593), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    if (_73._m0 == 0u)
    {
        float _1665 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1577, _1578, _1579));
        float _2130 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1668 = isnan(1.0) ? _2130 : (isnan(_2130) ? 1.0 : min(_2130, 1.0));
        float _1687 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1451) * 0.949999988079071044921875);
        float _1688 = _1687 * _1687;
        float _1689 = g_sceneCB._m0[4u].x - _1484;
        float _1690 = g_sceneCB._m0[4u].y - _1485;
        float _1691 = g_sceneCB._m0[4u].z - _1486;
        float _1695 = inversesqrt(dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691)));
        float _1696 = _1695 * _1689;
        float _1697 = _1695 * _1690;
        float _1698 = _1695 * _1691;
        float _1699 = dot(vec3(_1577, _1578, _1579), vec3(g_sceneCB._m0[4u].xyz));
        float _2141 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1702 = isnan(1.0) ? _2141 : (isnan(_2141) ? 1.0 : min(_2141, 1.0));
        float _1703 = dot(vec3(_1577, _1578, _1579), vec3(_1594, _1596, _1597));
        float _2152 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1706 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        float _1707 = dot(vec3(_1577, _1578, _1579), vec3(_1696, _1697, _1698));
        float _2163 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1710 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        float _1711 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1696, _1697, _1698));
        float _2174 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1715 = _1688 * _1688;
        float _1719 = ((_1710 * _1710) * (_1715 + (-1.0))) + 1.0;
        float _1731 = (exp2(log2(1.0 - (isnan(1.0) ? _2174 : (isnan(_2174) ? 1.0 : min(_2174, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1733 = 1.0 - _1688;
        float _1744 = (0.5 / (((_1706 * ((_1702 * _1733) + _1688)) + 9.9999999392252902907785028219223e-09) + (((_1706 * _1733) + _1688) * _1702))) * _1702;
        float _2185 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1746 = (isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0))) * (_1715 / ((_1719 * _1719) * 3.141590118408203125));
        _1753 = ((_1274 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1668;
        _1754 = ((_1275 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1668;
        _1755 = ((_1276 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1668;
        _1756 = (_1731 * g_sceneCB._m0[5u].x) * _1746;
        _1757 = (_1731 * g_sceneCB._m0[5u].y) * _1746;
        _1758 = (_1731 * g_sceneCB._m0[5u].z) * _1746;
    }
    else
    {
        _1753 = 0.0;
        _1754 = 0.0;
        _1755 = 0.0;
        _1756 = 0.0;
        _1757 = 0.0;
        _1758 = 0.0;
    }
    bool _1760 = abs(_1578) < 0.89999997615814208984375;
    float _1762 = float(_1760);
    float _1763 = _1760 ? 0.0 : 1.0;
    float _1766 = (_1762 * _1579) - (_1763 * _1578);
    float _1767 = _1763 * _1577;
    float _1769 = (-0.0) - (_1577 * _1762);
    float _1773 = inversesqrt(dot(vec3(_1766, _1767, _1769), vec3(_1766, _1767, _1769)));
    float _1774 = _1766 * _1773;
    float _1775 = _1767 * _1773;
    float _1776 = _1773 * _1769;
    float _1779 = (_1775 * _1579) - (_1776 * _1578);
    float _1782 = (_1776 * _1577) - (_1774 * _1579);
    float _1785 = (_1774 * _1578) - (_1775 * _1577);
    float _1787;
    float _1795;
    float _1786 = 0.0;
    uint _1788 = 0u;
    float _1792;
    bool _1794;
    for (;;)
    {
        _1792 = (float(_1788) + _1621) * 0.03125;
        _1794 = _1788 == 0u;
        float frontier_phi_57_pred;
        if (_1794)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1929;
            float _1930;
            uint _1932;
            _1929 = 0.0;
            _1930 = 0.5;
            _1932 = _1788;
            float _1796;
            for (;;)
            {
                _1796 = ((_1932 & 1u) != 0u) ? (_1930 + _1929) : _1929;
                uint _1933 = _1932 >> 1u;
                if (_1933 == 0u)
                {
                    break;
                }
                else
                {
                    _1929 = _1796;
                    _1930 *= 0.5;
                    _1932 = _1933;
                }
            }
            frontier_phi_57_pred = _1796;
        }
        _1795 = frontier_phi_57_pred;
        float _1797 = _1795 + _1634;
        float _1801 = sqrt(_1792);
        float _1802 = ((_1797 > 1.0) ? (_1797 + (-1.0)) : _1797) * 6.283185482025146484375;
        float _1805 = cos(_1802) * _1801;
        float _1807 = sin(_1802) * _1801;
        float _1809 = sqrt(1.0 - _1792);
        float _1822 = ((_1809 * _1577) + (_1805 * _1779)) + (_1807 * _1774);
        float _1823 = ((_1809 * _1578) + (_1805 * _1782)) + (_1807 * _1775);
        float _1824 = ((_1809 * _1579) + (_1805 * _1785)) + (_1807 * _1776);
        _72._m0 = 1u;
        uvec4 _1828 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1829 = _1828.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1829, _1828.w, _1829, vec3(_1591, _1592, _1593), 9.9999997473787516355514526367188e-05, vec3(_1822, _1823, _1824), 10000.0, 1);
        float _1835 = dot(vec3(_1577, _1578, _1579), vec3(_1822, _1823, _1824));
        float _2196 = isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0));
        float _1838 = isnan(1.0) ? _2196 : (isnan(_2196) ? 1.0 : min(_2196, 1.0));
        _1787 = ((float(_72._m0 == 0u) * _1838) / (_1838 * 0.3183098733425140380859375)) + _1786;
        uint _1789 = _1788 + 1u;
        if (_1789 == 32u)
        {
            break;
        }
        else
        {
            _1786 = _1787;
            _1788 = _1789;
            continue;
        }
    }
    float _1846 = _1787 * 0.009947183541953563690185546875;
    float _1851 = dot(vec3(_1484, _1485, _1486), vec3(_1577, _1578, _1579)) * 2.0;
    vec4 _1865 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1484 - (_1851 * _1577), _1485 - (_1851 * _1578), _1486 - (_1851 * _1579)), 4.0 - (_1451 * 4.0));
    float _1870 = dot(vec3(_1594, _1596, _1597), vec3(_1577, _1578, _1579));
    float _2207 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
    float _1879 = (exp2(log2(1.0 - (isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1885 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1577, _1578, _1579), 0.0);
    float _1896 = (_1756 + _1753) + (((_1885.x * _1274) + (_1879 * _1865.x)) * _1846);
    float _1900 = (_1757 + _1754) + (((_1885.y * _1275) + (_1879 * _1865.y)) * _1846);
    float _1904 = (_1758 + _1755) + (((_1885.z * _1276) + (_1879 * _1865.z)) * _1846);
    float _2218 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
    float _2229 = isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0));
    float _2240 = isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0));
    bool _1912 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1923;
    _1923.x = _1912 ? ((_669 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2218 : (isnan(_2218) ? 1.0 : min(_2218, 1.0)));
    _1923.y = _1912 ? ((_672 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0)));
    _1923.z = _1912 ? ((_675 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2240 : (isnan(_2240) ? 1.0 : min(_2240, 1.0)));
    payload._m0 = _1923;
}


