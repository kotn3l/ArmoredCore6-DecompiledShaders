#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

uint _189;
uint _301;
uint _402;
vec3 _2386;

void main()
{
    float _86 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _86)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _169 & 65535u;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _170 >> 16u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        _175 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
        _178 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _183 * _175;
    uint _186 = _184 >> 2u;
    uvec3 _193 = uvec3(texelFetch(l_geomAttrib_0, int(_186)).x, _189, texelFetch(l_geomAttrib_0, int(_186 + 2u)).x);
    uint _198 = _182.z;
    bool _199 = _198 != 0u;
    bool _201 = _134.w == 0u;
    bool _202 = _199 || _201;
    uint _203 = _184 + 12u;
    uint _226;
    uint _227;
    uint _228;
    uint _229;
    if (_202)
    {
        uvec4 _205 = texelFetch(l_geomAttrib_0, int(_203 >> 2u));
        uint _206 = _205.x;
        _226 = _206 & 255u;
        _227 = (_206 >> 8u) & 255u;
        _228 = (_206 >> 16u) & 255u;
        _229 = 16u;
    }
    else
    {
        uint _214 = _203 >> 2u;
        uvec2 _220 = uvec2(texelFetch(l_geomAttrib_0, int(_214)).x, texelFetch(l_geomAttrib_0, int(_214 + 1u)).x);
        uint _221 = _220.x;
        _226 = _221 & 65535u;
        _227 = _221 >> 16u;
        _228 = _220.y & 65535u;
        _229 = 20u;
    }
    uvec4 _236 = texelFetch(l_geomAttrib_0, int((_229 + _184) >> 2u));
    uint _237 = _236.x;
    bool _251 = _198 == 0u;
    uint _252;
    if (_251)
    {
        _252 = _229 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_201)
        {
            frontier_phi_9_10_ladder = _229 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _229 + 12u;
        }
        _252 = frontier_phi_9_10_ladder;
    }
    uint _256 = _199 ? (_252 + 4u) : _252;
    uvec4 _260 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + _256) >> 2u));
    uint _261 = _260.x;
    float _265 = float(int(uint(int(_261 << 16u) >> int(16u))));
    float _266 = float(int(uint(int(_261) >> int(16u))));
    uvec4 _270 = texelFetch(l_geomAttrib_0, int(((_184 + 8u) + _256) >> 2u));
    uint _271 = _270.x;
    uvec4 _287 = texelFetch(l_geomAttrib_0, int(((_184 + 16u) + _256) >> 2u));
    uint _288 = _287.x;
    uint _297 = _183 * _177;
    uint _298 = _297 >> 2u;
    uvec3 _305 = uvec3(texelFetch(l_geomAttrib_0, int(_298)).x, _301, texelFetch(l_geomAttrib_0, int(_298 + 2u)).x);
    uint _310 = _297 + 12u;
    uint _331;
    uint _332;
    uint _333;
    uint _334;
    if (_202)
    {
        uvec4 _312 = texelFetch(l_geomAttrib_0, int(_310 >> 2u));
        uint _313 = _312.x;
        _331 = _313 & 255u;
        _332 = (_313 >> 8u) & 255u;
        _333 = (_313 >> 16u) & 255u;
        _334 = 16u;
    }
    else
    {
        uint _319 = _310 >> 2u;
        uvec2 _325 = uvec2(texelFetch(l_geomAttrib_0, int(_319)).x, texelFetch(l_geomAttrib_0, int(_319 + 1u)).x);
        uint _326 = _325.x;
        _331 = _326 & 65535u;
        _332 = _326 >> 16u;
        _333 = _325.y & 65535u;
        _334 = 20u;
    }
    uvec4 _340 = texelFetch(l_geomAttrib_0, int((_334 + _297) >> 2u));
    uint _341 = _340.x;
    uint _353;
    if (_251)
    {
        _353 = _334 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_201)
        {
            frontier_phi_16_17_ladder = _334 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _334 + 12u;
        }
        _353 = frontier_phi_16_17_ladder;
    }
    uint _357 = _199 ? (_353 + 4u) : _353;
    uvec4 _361 = texelFetch(l_geomAttrib_0, int(((_297 + 4u) + _357) >> 2u));
    uint _362 = _361.x;
    float _366 = float(int(uint(int(_362 << 16u) >> int(16u))));
    float _367 = float(int(uint(int(_362) >> int(16u))));
    uvec4 _371 = texelFetch(l_geomAttrib_0, int(((_297 + 8u) + _357) >> 2u));
    uint _372 = _371.x;
    uvec4 _388 = texelFetch(l_geomAttrib_0, int(((_297 + 16u) + _357) >> 2u));
    uint _389 = _388.x;
    uint _398 = _183 * _178;
    uint _399 = _398 >> 2u;
    uvec3 _406 = uvec3(texelFetch(l_geomAttrib_0, int(_399)).x, _402, texelFetch(l_geomAttrib_0, int(_399 + 2u)).x);
    uint _411 = _398 + 12u;
    uint _432;
    uint _433;
    uint _434;
    uint _435;
    if (_202)
    {
        uvec4 _413 = texelFetch(l_geomAttrib_0, int(_411 >> 2u));
        uint _414 = _413.x;
        _432 = _414 & 255u;
        _433 = (_414 >> 8u) & 255u;
        _434 = (_414 >> 16u) & 255u;
        _435 = 16u;
    }
    else
    {
        uint _420 = _411 >> 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomAttrib_0, int(_420)).x, texelFetch(l_geomAttrib_0, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _432 = _427 & 65535u;
        _433 = _427 >> 16u;
        _434 = _426.y & 65535u;
        _435 = 20u;
    }
    uvec4 _441 = texelFetch(l_geomAttrib_0, int((_435 + _398) >> 2u));
    uint _442 = _441.x;
    uint _454;
    if (_251)
    {
        _454 = _435 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_201)
        {
            frontier_phi_23_24_ladder = _435 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _435 + 12u;
        }
        _454 = frontier_phi_23_24_ladder;
    }
    uint _458 = _199 ? (_454 + 4u) : _454;
    uvec4 _462 = texelFetch(l_geomAttrib_0, int(((_398 + 4u) + _458) >> 2u));
    uint _463 = _462.x;
    float _467 = float(int(uint(int(_463 << 16u) >> int(16u))));
    float _468 = float(int(uint(int(_463) >> int(16u))));
    uvec4 _472 = texelFetch(l_geomAttrib_0, int(((_398 + 8u) + _458) >> 2u));
    uint _473 = _472.x;
    uvec4 _489 = texelFetch(l_geomAttrib_0, int(((_398 + 16u) + _458) >> 2u));
    uint _490 = _489.x;
    bool _500 = _134.z == 0u;
    float _536;
    float _537;
    float _538;
    if (_500)
    {
        uint _503 = _175 * 3u;
        uvec3 _512 = uvec3(texelFetch(l_geomPositionBuffer, int(_503)).x, texelFetch(l_geomPositionBuffer, int(_503 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_503 + 2u)).x);
        _536 = uintBitsToFloat(_512.x);
        _537 = uintBitsToFloat(_512.y);
        _538 = uintBitsToFloat(_512.z);
    }
    else
    {
        uint _520 = _175 * 2u;
        uvec2 _526 = uvec2(texelFetch(l_geomPositionBuffer, int(_520)).x, texelFetch(l_geomPositionBuffer, int(_520 + 1u)).x);
        uint _527 = _526.x;
        _536 = unpackHalf2x16(_527).x;
        _537 = unpackHalf2x16(_527 >> 16u).x;
        _538 = unpackHalf2x16(_526.y).x;
    }
    float _574;
    float _575;
    float _576;
    if (_500)
    {
        uint _541 = _177 * 3u;
        uvec3 _550 = uvec3(texelFetch(l_geomPositionBuffer, int(_541)).x, texelFetch(l_geomPositionBuffer, int(_541 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_541 + 2u)).x);
        _574 = uintBitsToFloat(_550.x);
        _575 = uintBitsToFloat(_550.y);
        _576 = uintBitsToFloat(_550.z);
    }
    else
    {
        uint _558 = _177 * 2u;
        uvec2 _564 = uvec2(texelFetch(l_geomPositionBuffer, int(_558)).x, texelFetch(l_geomPositionBuffer, int(_558 + 1u)).x);
        uint _565 = _564.x;
        _574 = unpackHalf2x16(_565).x;
        _575 = unpackHalf2x16(_565 >> 16u).x;
        _576 = unpackHalf2x16(_564.y).x;
    }
    float _612;
    float _613;
    float _614;
    if (_500)
    {
        uint _579 = _178 * 3u;
        uvec3 _588 = uvec3(texelFetch(l_geomPositionBuffer, int(_579)).x, texelFetch(l_geomPositionBuffer, int(_579 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_579 + 2u)).x);
        _612 = uintBitsToFloat(_588.x);
        _613 = uintBitsToFloat(_588.y);
        _614 = uintBitsToFloat(_588.z);
    }
    else
    {
        uint _596 = _178 * 2u;
        uvec2 _602 = uvec2(texelFetch(l_geomPositionBuffer, int(_596)).x, texelFetch(l_geomPositionBuffer, int(_596 + 1u)).x);
        uint _603 = _602.x;
        _612 = unpackHalf2x16(_603).x;
        _613 = unpackHalf2x16(_603 >> 16u).x;
        _614 = unpackHalf2x16(_602.y).x;
    }
    float _617 = (1.0 - hit._m0.x) - hit._m0.y;
    float _671 = (((float((_372 >> 8u) & 255u) * hit._m0.x) + (float((_271 >> 8u) & 255u) * _617)) + (float((_473 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _698 = (_366 - _265) * 0.00048828125;
    float _700 = (_367 - _266) * 0.00048828125;
    float _703 = (_467 - _265) * 0.00048828125;
    float _704 = (_468 - _266) * 0.00048828125;
    float _726 = _574 - _536;
    float _727 = _575 - _537;
    float _728 = _576 - _538;
    float _731 = fma(_728, gl_ObjectToWorldEXT[2u].x, fma(_727, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _726));
    float _734 = fma(_728, gl_ObjectToWorldEXT[2u].y, fma(_727, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _726));
    float _737 = fma(_728, gl_ObjectToWorldEXT[2u].z, fma(_727, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _726));
    float _738 = _612 - _536;
    float _739 = _613 - _537;
    float _740 = _614 - _538;
    float _743 = fma(_740, gl_ObjectToWorldEXT[2u].x, fma(_739, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _738));
    float _746 = fma(_740, gl_ObjectToWorldEXT[2u].y, fma(_739, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _738));
    float _749 = fma(_740, gl_ObjectToWorldEXT[2u].z, fma(_739, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _738));
    float _750 = (((_366 * hit._m0.x) + (_265 * _617)) + (_467 * hit._m0.y)) * 0.00048828125;
    float _751 = (((_367 * hit._m0.x) + (_266 * _617)) + (_468 * hit._m0.y)) * 0.00048828125;
    float _755 = (((float(_226) * _617) + (-127.0)) + (float(_331) * hit._m0.x)) + (float(_432) * hit._m0.y);
    float _758 = (((float(_227) * _617) + (-127.0)) + (float(_332) * hit._m0.x)) + (float(_433) * hit._m0.y);
    float _761 = (((float(_228) * _617) + (-127.0)) + (float(_333) * hit._m0.x)) + (float(_434) * hit._m0.y);
    float _762 = _755 * 0.0078740157186985015869140625;
    float _764 = _758 * 0.0078740157186985015869140625;
    float _765 = _761 * 0.0078740157186985015869140625;
    float _778 = ((((float(_237 & 255u) * _617) + (-127.0)) + (float(_341 & 255u) * hit._m0.x)) + (float(_442 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _779 = ((((float((_237 >> 8u) & 255u) * _617) + (-127.0)) + (float((_341 >> 8u) & 255u) * hit._m0.x)) + (float((_442 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _780 = ((((float((_237 >> 16u) & 255u) * _617) + (-127.0)) + (float((_341 >> 16u) & 255u) * hit._m0.x)) + (float((_442 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _781 = ((((float(_237 >> 24u) * _617) + (-127.0)) + (float(_341 >> 24u) * hit._m0.x)) + (float(_442 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _791 = ((_779 * _765) - (_780 * _764)) * _781;
    float _792 = ((_780 * _762) - (_778 * _765)) * _781;
    float _793 = ((_778 * _764) - (_779 * _762)) * _781;
    float _797 = inversesqrt(dot(vec3(_791, _792, _793), vec3(_791, _792, _793)));
    float _798 = _797 * _791;
    float _799 = _797 * _792;
    float _800 = _797 * _793;
    float _810 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _813 = ((-0.0) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0)));
    float _817 = _813 / cbMtdParam._m0[22u].z;
    float _818 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _819 = isnan(8.0) ? _818 : (isnan(_818) ? 8.0 : min(_818, 8.0));
    float _827 = cbMtdParam._m0[10u].x * _819;
    float _828 = cbMtdParam._m0[10u].y * _819;
    float _829 = cbMtdParam._m0[10u].z * _819;
    float _830 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _831 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _832 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _848 = (cbMtdParam._m0[21u].y + _813) * cbMtdParam._m0[23u].z;
    float _2523 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _857 = 1.0 - (isnan(cbMtdParam._m0[24u].w) ? 0.0 : (isnan(0.0) ? cbMtdParam._m0[24u].w : max(0.0, cbMtdParam._m0[24u].w)));
    float _859 = (cbMtdParam._m0[24u].z + ((((float(_372 & 255u) * hit._m0.x) + (float(_271 & 255u) * _617)) + (float(_473 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) - (_857 * cbMtdParam._m0[20u].z);
    float _875 = (cbMtdParam._m0[27u].w + cbPerFrame._m0[22u].x) * cbMtdParam._m0[19u].z;
    float _880 = cbMtdParam._m0[33u].x * _750;
    float _881 = cbMtdParam._m0[33u].y * _751;
    uvec2 _895 = uvec2(textureSize(M_Water_Melange_Low_01_snp_0_Texture2D_2, int(0u)));
    bool _900 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _952;
    if (_900)
    {
        float _911 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _917 = (_749 * _734) - (_746 * _737);
        float _920 = (_743 * _737) - (_749 * _731);
        float _923 = (_746 * _731) - (_743 * _734);
        float _950 = ((log2((((float(_895.y) * 0.5) * float(_895.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_920 * _920) + (_923 * _923)) + (_917 * _917)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_911 * gl_WorldRayDirectionEXT.x, _911 * gl_WorldRayDirectionEXT.y, _911 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _952 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    }
    else
    {
        _952 = 0.0;
    }
    vec4 _956 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_2, SS_BumpMap), vec2((((_875 * cbMtdParam._m0[33u].z) + _880) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_881 + (_875 * cbMtdParam._m0[33u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _952);
    float _958 = _956.x;
    float _959 = _956.y;
    float _2544 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _962 = isnan(1.0) ? _2544 : (isnan(_2544) ? 1.0 : min(_2544, 1.0));
    float _963 = _956.z - _962;
    float _2555 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _964 = isnan(1.0) ? _2555 : (isnan(_2555) ? 1.0 : min(_2555, 1.0));
    float _976 = (_964 * 0.00999999977648258209228515625) + _750;
    float _978 = (_964 * (-0.00999999977648258209228515625)) + _751;
    uvec2 _991 = uvec2(textureSize(M_Water_Melange_Low_01_snp_0_Texture2D_0, int(0u)));
    float _1042;
    if (_900)
    {
        float _1002 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1008 = (_749 * _734) - (_746 * _737);
        float _1011 = (_743 * _737) - (_749 * _731);
        float _1014 = (_746 * _731) - (_743 * _734);
        float _1040 = ((log2((((float(_991.y) * 0.5) * float(_991.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1011 * _1011) + (_1014 * _1014)) + (_1008 * _1008)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1002 * gl_WorldRayDirectionEXT.x, _1002 * gl_WorldRayDirectionEXT.y, _1002 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1042 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    }
    else
    {
        _1042 = 0.0;
    }
    vec4 _1044 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2(((_976 + (cbMtdParam._m0[29u].z * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_978 + (cbMtdParam._m0[29u].w * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1042);
    float _1048 = _1044.z;
    float _1109;
    if (_900)
    {
        float _1069 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1075 = (_749 * _734) - (_746 * _737);
        float _1078 = (_743 * _737) - (_749 * _731);
        float _1081 = (_746 * _731) - (_743 * _734);
        float _1107 = ((log2((((float(_991.y) * 0.5) * float(_991.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1078 * _1078) + (_1081 * _1081)) + (_1075 * _1075)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1069 * gl_WorldRayDirectionEXT.x, _1069 * gl_WorldRayDirectionEXT.y, _1069 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1109 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    }
    else
    {
        _1109 = 0.0;
    }
    vec4 _1111 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2(((_976 + (cbMtdParam._m0[29u].x * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_978 + (cbMtdParam._m0[29u].y * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1109);
    float _1115 = _1111.z;
    float _1118 = (_857 - _956.w) + (isnan(_1115) ? _1048 : (isnan(_1048) ? _1115 : max(_1048, _1115)));
    float _2581 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    float _1120 = (_859 * (isnan(1.0) ? _2523 : (isnan(_2523) ? 1.0 : min(_2523, 1.0)))) * (isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0)));
    float _1121 = _1120 * ((((float(texelFetch(l_geomAttrib_0, int(((_297 + 12u) + _357) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_184 + 12u) + _256) >> 2u)).x & 255u) * _617)) + (float(texelFetch(l_geomAttrib_0, int(((_398 + 12u) + _458) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1133 = ((_1120 + cbMtdParam._m0[9u].x) - _1121) + (cbMtdParam._m0[15u].x * _964);
    float _1136 = ((_1120 + cbMtdParam._m0[9u].y) - _1121) + (cbMtdParam._m0[15u].y * _964);
    float _1139 = ((_1120 + cbMtdParam._m0[9u].z) - _1121) + (cbMtdParam._m0[15u].z * _964);
    float _1184;
    if (_900)
    {
        float _1168 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1176 = log2(0.0);
        float _1182 = ((_1176 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1168 * gl_WorldRayDirectionEXT.x, _1168 * gl_WorldRayDirectionEXT.y, _1168 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1184 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    }
    else
    {
        _1184 = 0.0;
    }
    vec4 _1187 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (((((uintBitsToFloat(_305.x) * hit._m0.x) + (uintBitsToFloat(_193.x) * _617)) + (uintBitsToFloat(_406.x) * hit._m0.y)) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[34u].x * _875))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (((((uintBitsToFloat(_305.z) * hit._m0.x) + (uintBitsToFloat(_193.z) * _617)) + (uintBitsToFloat(_406.z) * hit._m0.y)) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[34u].y * _875))) + cbTextureTilingScale._m0[1u].w), _1184);
    float _1192 = _1187.z * 0.099999986588954925537109375;
    float _2597 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _1194 = isnan(1.0) ? _2597 : (isnan(_2597) ? 1.0 : min(_2597, 1.0));
    float _1196 = cbMtdParam._m0[23u].x * _813;
    float _2608 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1197 = isnan(1.0) ? _2608 : (isnan(_2608) ? 1.0 : min(_2608, 1.0));
    float _1211 = (_1133 + (isnan(0.07999999821186065673828125) ? _830 : (isnan(_830) ? 0.07999999821186065673828125 : min(_830, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1133) - _1194) + _1192));
    float _1213 = (_1136 + (isnan(0.07999999821186065673828125) ? _831 : (isnan(_831) ? 0.07999999821186065673828125 : min(_831, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1136) - _1194) + _1192));
    float _1215 = (_1139 + (isnan(0.07999999821186065673828125) ? _832 : (isnan(_832) ? 0.07999999821186065673828125 : min(_832, 0.07999999821186065673828125)))) + (_1197 * (((1.0 - _1139) + _1192) - _1194));
    float _2619 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
    float _1216 = isnan(1.0) ? _2619 : (isnan(_2619) ? 1.0 : min(_2619, 1.0));
    float _2630 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
    float _1217 = isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0));
    float _2641 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    float _1218 = isnan(1.0) ? _2641 : (isnan(_2641) ? 1.0 : min(_2641, 1.0));
    float _1223 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _962) + cbMtdParam._m0[19u].x;
    float _1235 = (1.0 - cbMtdParam._m0[27u].y) * (1.0 / cbMtdParam._m0[27u].x);
    float _2652 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
    float _1236 = isnan(1.0) ? _2652 : (isnan(_2652) ? 1.0 : min(_2652, 1.0));
    float _1250 = (cbMtdParam._m0[32u].x * _875) + _880;
    float _1251 = (cbMtdParam._m0[32u].y * _875) + _881;
    float _1276 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[31u].z * _875) + _880)) + cbTextureTilingScale._m0[3u].z;
    float _1277 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[31u].w * _875) + _881)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _1279 = uvec2(textureSize(M_Water_Melange_Low_01_snp_0_Texture2D_3, int(0u)));
    float _1330;
    if (_900)
    {
        float _1290 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1296 = (_749 * _734) - (_746 * _737);
        float _1299 = (_743 * _737) - (_749 * _731);
        float _1302 = (_746 * _731) - (_743 * _734);
        float _1328 = ((log2((((float(_1279.y) * 0.5) * float(_1279.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1299 * _1299) + (_1302 * _1302)) + (_1296 * _1296)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1290 * gl_WorldRayDirectionEXT.x, _1290 * gl_WorldRayDirectionEXT.y, _1290 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1330 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
    }
    else
    {
        _1330 = 0.0;
    }
    vec4 _1332 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_3, SS_BumpMap), vec2(_1276, _1277), _1330);
    float _1338 = (_1332.x * 2.0) + (-1.0);
    float _1340 = (_1332.y * 2.0) + (-1.0);
    float _1344 = 1.0 - dot(vec2(_1338, _1340), vec2(_1338, _1340));
    float _2668 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
    float _1346 = sqrt(isnan(1.0) ? _2668 : (isnan(_2668) ? 1.0 : min(_2668, 1.0)));
    float _1349 = fma(_1346, _762, fma(_1340, _778, _1338 * _798));
    float _1352 = fma(_1346, _764, fma(_1340, _779, _1338 * _799));
    float _1355 = fma(_1346, _765, fma(_1340, _780, _1338 * _800));
    float _1359 = inversesqrt(dot(vec3(_1349, _1352, _1355), vec3(_1349, _1352, _1355)));
    float _1360 = cbPerFrame._m0[22u].x * 2.0;
    float _1361 = _1360 * cbMtdParam._m0[25u].w;
    float _1369 = (((_1352 * 0.5) * _1359) + (-0.25)) * cbMtdParam._m0[26u].x;
    float _1371 = (-0.0) - (cbMtdParam._m0[26u].x * (((_1349 * 0.5) * _1359) + (-0.25)));
    float _1372 = fract(_1361);
    float _1374 = fract(_1361 + 0.5);
    float _1385 = abs((_1372 * 2.0) + (-1.0));
    vec4 _1404 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1372 * _1371) + _1250) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1369 * _1372) + _1251) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1406 = _1404.x;
    float _1407 = _1404.y;
    float _1408 = _1404.z;
    vec4 _1409 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1374 * _1371) + _1250) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1369 * _1374) + _1251) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1420 = ((_1409.x - _1406) * _1385) + _1406;
    float _1421 = ((_1409.y - _1407) * _1385) + _1407;
    float _1422 = ((_1409.z - _1408) * _1385) + _1408;
    float _1436 = (cbMtdParam._m0[31u].x * _875) + _880;
    float _1437 = (cbMtdParam._m0[31u].y * _875) + _881;
    float _1490;
    if (_900)
    {
        float _1450 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1456 = (_749 * _734) - (_746 * _737);
        float _1459 = (_743 * _737) - (_749 * _731);
        float _1462 = (_746 * _731) - (_743 * _734);
        float _1488 = ((log2((((float(_1279.y) * 0.5) * float(_1279.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1459 * _1459) + (_1462 * _1462)) + (_1456 * _1456)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1450 * gl_WorldRayDirectionEXT.x, _1450 * gl_WorldRayDirectionEXT.y, _1450 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1490 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    }
    else
    {
        _1490 = 0.0;
    }
    vec4 _1492 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_3, SS_BumpMap), vec2(_1276, _1277), _1490);
    float _1498 = (_1492.x * 2.0) + (-1.0);
    float _1499 = (_1492.y * 2.0) + (-1.0);
    float _1503 = 1.0 - dot(vec2(_1498, _1499), vec2(_1498, _1499));
    float _2684 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
    float _1505 = sqrt(isnan(1.0) ? _2684 : (isnan(_2684) ? 1.0 : min(_2684, 1.0)));
    float _1508 = fma(_1505, _762, fma(_1499, _778, _1498 * _798));
    float _1511 = fma(_1505, _764, fma(_1499, _779, _1498 * _799));
    float _1514 = fma(_1505, _765, fma(_1499, _780, _1498 * _800));
    float _1518 = inversesqrt(dot(vec3(_1508, _1511, _1514), vec3(_1508, _1511, _1514)));
    float _1519 = _1360 * cbMtdParam._m0[25u].z;
    float _1526 = (((_1511 * 0.5) * _1518) + (-0.25)) * cbMtdParam._m0[25u].y;
    float _1528 = (-0.0) - (cbMtdParam._m0[25u].y * (((_1508 * 0.5) * _1518) + (-0.25)));
    float _1529 = fract(_1519);
    float _1531 = fract(_1519 + 0.5);
    float _1542 = abs((_1529 * 2.0) + (-1.0));
    vec4 _1559 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1529 * _1528) + _1436) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1526 * _1529) + _1437) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1561 = _1559.x;
    float _1562 = _1559.y;
    float _1563 = _1559.z;
    vec4 _1564 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1531 * _1528) + _1436) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1526 * _1531) + _1437) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1598 = (((((cbMtdParam._m0[16u].x - cbMtdParam._m0[18u].x) * _1420) * cbMtdParam._m0[28u].x) + cbMtdParam._m0[18u].x) * (((_1564.x - _1561) * _1542) + _1561)) + (_1420 * cbMtdParam._m0[17u].x);
    float _1601 = (((((cbMtdParam._m0[16u].y - cbMtdParam._m0[18u].y) * _1421) * cbMtdParam._m0[28u].x) + cbMtdParam._m0[18u].y) * (((_1564.y - _1562) * _1542) + _1562)) + (_1421 * cbMtdParam._m0[17u].y);
    float _1604 = ((((cbMtdParam._m0[28u].x * _1422) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_1564.z - _1563) * _1542) + _1563)) + (_1422 * cbMtdParam._m0[17u].z);
    float _1608 = _1598 - (_1598 * _1236);
    float _1609 = _1601 - (_1601 * _1236);
    float _1610 = _1604 - (_1604 * _1236);
    float _1615 = (1.0 - cbMtdParam._m0[26u].w) * (1.0 / cbMtdParam._m0[26u].z);
    float _2695 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
    float _1616 = isnan(1.0) ? _2695 : (isnan(_2695) ? 1.0 : min(_2695, 1.0));
    float _1627 = (cbMtdParam._m0[32u].z * _875) + _880;
    float _1628 = (cbMtdParam._m0[32u].w * _875) + _881;
    uvec2 _1640 = uvec2(textureSize(M_Water_Melange_Low_01_snp_0_Texture2D_8, int(0u)));
    float _1691;
    if (_900)
    {
        float _1651 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1657 = (_749 * _734) - (_746 * _737);
        float _1660 = (_743 * _737) - (_749 * _731);
        float _1663 = (_746 * _731) - (_743 * _734);
        float _1689 = ((log2((((float(_1640.y) * 0.5) * float(_1640.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1660 * _1660) + (_1663 * _1663)) + (_1657 * _1657)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1651 * gl_WorldRayDirectionEXT.x, _1651 * gl_WorldRayDirectionEXT.y, _1651 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1691 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
    }
    else
    {
        _1691 = 0.0;
    }
    vec4 _1693 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_1627 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_1628 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _1691);
    float _1695 = _1693.x;
    float _1696 = _1693.y;
    float _1697 = _1693.z;
    uvec2 _1717 = uvec2(textureSize(M_Water_Melange_Low_01_snp_0_Texture2D_9, int(0u)));
    float _1768;
    if (_900)
    {
        float _1728 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1734 = (_749 * _734) - (_746 * _737);
        float _1737 = (_743 * _737) - (_749 * _731);
        float _1740 = (_746 * _731) - (_743 * _734);
        float _1766 = ((log2((((float(_1717.y) * 0.5) * float(_1717.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1737 * _1737) + (_1740 * _1740)) + (_1734 * _1734)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1728 * gl_WorldRayDirectionEXT.x, _1728 * gl_WorldRayDirectionEXT.y, _1728 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1768 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
    }
    else
    {
        _1768 = 0.0;
    }
    vec4 _1770 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _1627) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _1628) + cbTextureTilingScale._m0[7u].w), _1768);
    float _1810 = (cbMtdParam._m0[27u].z * cbMtdParam._m0[14u].x) * (((((_1695 * cbMtdParam._m0[11u].x) - _1608) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _1695) * cbMtdParam._m0[28u].y) + cbMtdParam._m0[12u].x) * _1770.x)) * _1616) + _1608);
    float _1812 = (cbMtdParam._m0[27u].z * cbMtdParam._m0[14u].y) * (((((_1696 * cbMtdParam._m0[11u].y) - _1609) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _1696) * cbMtdParam._m0[28u].y) + cbMtdParam._m0[12u].y) * _1770.y)) * _1616) + _1609);
    float _1814 = (cbMtdParam._m0[27u].z * cbMtdParam._m0[14u].z) * (((((_1697 * cbMtdParam._m0[11u].z) - _1610) + ((((cbMtdParam._m0[28u].y * _1697) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _1770.z)) * _1616) + _1610);
    float _2716 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _1818 = isnan(1.0) ? _2716 : (isnan(_2716) ? 1.0 : min(_2716, 1.0));
    float _1826 = _813 / cbMtdParam._m0[22u].w;
    float _2727 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
    float _1827 = isnan(1.0) ? _2727 : (isnan(_2727) ? 1.0 : min(_2727, 1.0));
    float _1828 = _964 * 0.23999999463558197021484375;
    float _1830 = _964 * (-0.20000000298023223876953125);
    float _1841 = cbMtdParam._m0[35u].x * _750;
    float _1842 = cbMtdParam._m0[35u].y * _751;
    float _1901;
    if (_900)
    {
        float _1861 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1867 = (_749 * _734) - (_746 * _737);
        float _1870 = (_743 * _737) - (_749 * _731);
        float _1873 = (_746 * _731) - (_743 * _734);
        float _1899 = ((log2((((float(_991.y) * 0.5) * float(_991.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1870 * _1870) + (_1873 * _1873)) + (_1867 * _1867)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1861 * gl_WorldRayDirectionEXT.x, _1861 * gl_WorldRayDirectionEXT.y, _1861 * gl_WorldRayDirectionEXT.z), vec3(_762, _764, _765))));
        _1901 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
    }
    else
    {
        _1901 = 0.0;
    }
    vec4 _1903 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].z * _875) + _1828) + _1841) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[34u].w * _875) + _1830) + _1842) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1901);
    float _1922 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1923 = _1922 * gl_WorldRayDirectionEXT.x;
    float _1924 = _1922 * gl_WorldRayDirectionEXT.y;
    float _1925 = _1922 * gl_WorldRayDirectionEXT.z;
    float _1969;
    if (_900)
    {
        float _1935 = (_749 * _734) - (_746 * _737);
        float _1938 = (_743 * _737) - (_749 * _731);
        float _1941 = (_746 * _731) - (_743 * _734);
        float _1967 = ((log2((((float(_991.y) * 0.5) * float(_991.x)) * abs((_704 * _698) - (_703 * _700))) / (sqrt(((_1938 * _1938) + (_1941 * _1941)) + (_1935 * _1935)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1923, _1924, _1925), vec3(_762, _764, _765))));
        _1969 = isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0));
    }
    else
    {
        _1969 = 0.0;
    }
    vec4 _1971 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1841 + _1828) + (cbMtdParam._m0[35u].z * _875)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1842 + _1830) + (cbMtdParam._m0[35u].w * _875)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1969);
    float _1989 = (((_1111.x + (-0.5)) * 0.5) + _1044.x) + (((_1903.x + (-1.0)) + _1971.x) * cbMtdParam._m0[24u].y);
    float _1990 = (((_1111.y + (-0.5)) * 0.5) + _1044.y) + (((_1903.y + (-1.0)) + _1971.y) * cbMtdParam._m0[24u].y);
    float _1995 = ((_1187.x - _1989) * _1827) + _1989;
    float _1996 = ((_1187.y - _1990) * _1827) + _1990;
    float _1998 = _813 / cbMtdParam._m0[22u].y;
    float _2748 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    float _1999 = isnan(1.0) ? _2748 : (isnan(_2748) ? 1.0 : min(_2748, 1.0));
    float _2015 = ((((_1818 * (0.5 - _958)) + _958) + (((_1995 + (-0.5)) + ((0.5 - _1995) * _1999)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2016 = ((((_1818 * (0.5 - _959)) + _959) + (((_1996 + (-0.5)) + ((0.5 - _1996) * _1999)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2017 = dot(vec2(_2015, _2016), vec2(_2015, _2016));
    float _2759 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2022 = sqrt(1.0 - (isnan(1.0) ? _2759 : (isnan(_2759) ? 1.0 : min(_2759, 1.0))));
    float _2025 = fma(_2022, _762, fma(_2016, _778, _2015 * _798));
    float _2028 = fma(_2022, _764, fma(_2016, _779, _2015 * _799));
    float _2031 = fma(_2022, _765, fma(_2016, _780, _2015 * _800));
    float _2035 = inversesqrt(dot(vec3(_2025, _2028, _2031), vec3(_2025, _2028, _2031)));
    float _2036 = _2035 * _2025;
    float _2037 = _2035 * _2028;
    float _2038 = _2035 * _2031;
    float _2050 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2051 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2052 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2053 = (-0.0) - _1923;
    float _2054 = (-0.0) - _1924;
    float _2055 = (-0.0) - _1925;
    float _2061 = float(gl_LaunchIDEXT.x);
    float _2062 = float(gl_LaunchIDEXT.y);
    float _2065 = float(gl_LaunchSizeEXT.x);
    float _2079 = fract(fract(sin(dot(vec2(_2061 / _2065, _2062 / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2092 = fract(fract(sin(dot(vec2((_2061 + 128.0) / _2065, (_2062 + 128.0) / _86), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _2102 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2103 = _2102.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2103, _2102.w, _2103, vec3(_2050, _2051, _2052), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2210;
    float _2211;
    float _2212;
    float _2213;
    float _2214;
    float _2215;
    if (_72._m0 == 0u)
    {
        float _2122 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2036, _2037, _2038));
        float _2770 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
        float _2125 = isnan(1.0) ? _2770 : (isnan(_2770) ? 1.0 : min(_2770, 1.0));
        float _2144 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1223) * 0.949999988079071044921875);
        float _2145 = _2144 * _2144;
        float _2146 = g_sceneCB._m0[4u].x - _1923;
        float _2147 = g_sceneCB._m0[4u].y - _1924;
        float _2148 = g_sceneCB._m0[4u].z - _1925;
        float _2152 = inversesqrt(dot(vec3(_2146, _2147, _2148), vec3(_2146, _2147, _2148)));
        float _2153 = _2152 * _2146;
        float _2154 = _2152 * _2147;
        float _2155 = _2152 * _2148;
        float _2156 = dot(vec3(_2036, _2037, _2038), vec3(g_sceneCB._m0[4u].xyz));
        float _2781 = isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0));
        float _2159 = isnan(1.0) ? _2781 : (isnan(_2781) ? 1.0 : min(_2781, 1.0));
        float _2160 = dot(vec3(_2036, _2037, _2038), vec3(_2053, _2054, _2055));
        float _2792 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
        float _2163 = isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0));
        float _2164 = dot(vec3(_2036, _2037, _2038), vec3(_2153, _2154, _2155));
        float _2803 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
        float _2167 = isnan(1.0) ? _2803 : (isnan(_2803) ? 1.0 : min(_2803, 1.0));
        float _2168 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2153, _2154, _2155));
        float _2814 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
        float _2172 = _2145 * _2145;
        float _2176 = ((_2167 * _2167) * (_2172 + (-1.0))) + 1.0;
        float _2188 = (exp2(log2(1.0 - (isnan(1.0) ? _2814 : (isnan(_2814) ? 1.0 : min(_2814, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2190 = 1.0 - _2145;
        float _2201 = (0.5 / (((_2163 * ((_2159 * _2190) + _2145)) + 9.9999999392252902907785028219223e-09) + (((_2163 * _2190) + _2145) * _2159))) * _2159;
        float _2825 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
        float _2203 = (isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0))) * (_2172 / ((_2176 * _2176) * 3.141590118408203125));
        _2210 = ((_1216 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2125;
        _2211 = ((_1217 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2125;
        _2212 = ((_1218 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2125;
        _2213 = (_2188 * g_sceneCB._m0[5u].x) * _2203;
        _2214 = (_2188 * g_sceneCB._m0[5u].y) * _2203;
        _2215 = (_2188 * g_sceneCB._m0[5u].z) * _2203;
    }
    else
    {
        _2210 = 0.0;
        _2211 = 0.0;
        _2212 = 0.0;
        _2213 = 0.0;
        _2214 = 0.0;
        _2215 = 0.0;
    }
    bool _2217 = abs(_2037) < 0.89999997615814208984375;
    float _2219 = float(_2217);
    float _2220 = _2217 ? 0.0 : 1.0;
    float _2223 = (_2219 * _2038) - (_2220 * _2037);
    float _2224 = _2220 * _2036;
    float _2226 = (-0.0) - (_2036 * _2219);
    float _2230 = inversesqrt(dot(vec3(_2223, _2224, _2226), vec3(_2223, _2224, _2226)));
    float _2231 = _2223 * _2230;
    float _2232 = _2224 * _2230;
    float _2233 = _2230 * _2226;
    float _2236 = (_2232 * _2038) - (_2233 * _2037);
    float _2239 = (_2233 * _2036) - (_2231 * _2038);
    float _2242 = (_2231 * _2037) - (_2232 * _2036);
    float _2244;
    float _2252;
    float _2243 = 0.0;
    uint _2245 = 0u;
    float _2249;
    bool _2251;
    for (;;)
    {
        _2249 = (float(_2245) + _2079) * 0.03125;
        _2251 = _2245 == 0u;
        float frontier_phi_59_pred;
        if (_2251)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _2391;
            float _2392;
            uint _2394;
            _2391 = 0.0;
            _2392 = 0.5;
            _2394 = _2245;
            float _2253;
            for (;;)
            {
                _2253 = ((_2394 & 1u) != 0u) ? (_2392 + _2391) : _2391;
                uint _2395 = _2394 >> 1u;
                if (_2395 == 0u)
                {
                    break;
                }
                else
                {
                    _2391 = _2253;
                    _2392 *= 0.5;
                    _2394 = _2395;
                }
            }
            frontier_phi_59_pred = _2253;
        }
        _2252 = frontier_phi_59_pred;
        float _2254 = _2252 + _2092;
        float _2258 = sqrt(_2249);
        float _2259 = ((_2254 > 1.0) ? (_2254 + (-1.0)) : _2254) * 6.283185482025146484375;
        float _2262 = cos(_2259) * _2258;
        float _2264 = sin(_2259) * _2258;
        float _2266 = sqrt(1.0 - _2249);
        float _2279 = ((_2266 * _2036) + (_2262 * _2236)) + (_2264 * _2231);
        float _2280 = ((_2266 * _2037) + (_2262 * _2239)) + (_2264 * _2232);
        float _2281 = ((_2266 * _2038) + (_2262 * _2242)) + (_2264 * _2233);
        _71._m0 = 1u;
        uvec4 _2285 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2286 = _2285.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2286, _2285.w, _2286, vec3(_2050, _2051, _2052), 9.9999997473787516355514526367188e-05, vec3(_2279, _2280, _2281), 10000.0, 1);
        float _2292 = dot(vec3(_2036, _2037, _2038), vec3(_2279, _2280, _2281));
        float _2836 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
        float _2295 = isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0));
        _2244 = ((float(_71._m0 == 0u) * _2295) / (_2295 * 0.3183098733425140380859375)) + _2243;
        uint _2246 = _2245 + 1u;
        if (_2246 == 32u)
        {
            break;
        }
        else
        {
            _2243 = _2244;
            _2245 = _2246;
            continue;
        }
    }
    float _2302 = _2244 * 0.009947183541953563690185546875;
    float _2307 = dot(vec3(_1923, _1924, _1925), vec3(_2036, _2037, _2038)) * 2.0;
    vec4 _2321 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1923 - (_2307 * _2036), _1924 - (_2307 * _2037), _1925 - (_2307 * _2038)), 4.0 - (_1223 * 4.0));
    float _2326 = dot(vec3(_2053, _2054, _2055), vec3(_2036, _2037, _2038));
    float _2847 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
    float _2335 = (exp2(log2(1.0 - (isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2341 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2036, _2037, _2038), 0.0);
    float _2354 = (((_1810 - (((((float(_389 & 255u) * hit._m0.x) + (float(_288 & 255u) * _617)) + (float(_490 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1810)) + _2210) + _2213) + (((_2341.x * _1216) + (_2335 * _2321.x)) * _2302);
    float _2360 = (((_1812 - (((((float((_389 >> 8u) & 255u) * hit._m0.x) + (float((_288 >> 8u) & 255u) * _617)) + (float((_490 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1812)) + _2211) + _2214) + (((_2341.y * _1217) + (_2335 * _2321.y)) * _2302);
    float _2366 = (((_1814 - (((((float((_389 >> 16u) & 255u) * hit._m0.x) + (float((_288 >> 16u) & 255u) * _617)) + (float((_490 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1814)) + _2212) + _2215) + (((_2341.z * _1218) + (_2335 * _2321.z)) * _2302);
    float _2858 = isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0));
    float _2869 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
    float _2880 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
    bool _2374 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2385;
    _2385.x = _2374 ? ((_755 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0)));
    _2385.y = _2374 ? ((_758 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2869 : (isnan(_2869) ? 1.0 : min(_2869, 1.0)));
    _2385.z = _2374 ? ((_761 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2880 : (isnan(_2880) ? 1.0 : min(_2880, 1.0)));
    payload._m0 = _2385;
}


