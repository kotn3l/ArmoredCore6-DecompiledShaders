#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _70
{
    vec3 _m0;
};

struct _74
{
    vec2 _m0;
};

struct _77
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _70 payload;
hitAttributeEXT _74 hit;
layout(location = 1) rayPayloadEXT _77 _79;
layout(location = 2) rayPayloadEXT _77 _80;

vec3 _2513;

void main()
{
    float _94 = float(gl_LaunchSizeEXT.y);
    float _122 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _123 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _124 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _131 = sqrt(((_123 * _123) + (_122 * _122)) + (_124 * _124)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _94)))));
    uvec4 _142 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _143 = _142.y;
    uint _183;
    uint _185;
    uint _186;
    if (_142.x == 0u)
    {
        uint _151 = (_143 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _160 = uvec3(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_151 + 2u)).x);
        _183 = _160.x;
        _185 = _160.y;
        _186 = _160.z;
    }
    else
    {
        uint _164 = uint(gl_PrimitiveID) * 6u;
        uint _166 = _164 & 4294967292u;
        uint _169 = (_143 + _166) >> 2u;
        uvec2 _176 = uvec2(texelFetch(l_geomIndexBuffer, int(_169)).x, texelFetch(l_geomIndexBuffer, int(_169 + 1u)).x);
        uint _177 = _176.x;
        uint _178 = _176.y;
        uint _180 = _177 >> 16u;
        uint _181 = _178 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_166 == _164)
        {
            frontier_phi_3_2_ladder = _180;
            frontier_phi_3_2_ladder_1 = _177 & 65535u;
            frontier_phi_3_2_ladder_2 = _181;
        }
        else
        {
            frontier_phi_3_2_ladder = _181;
            frontier_phi_3_2_ladder_1 = _180;
            frontier_phi_3_2_ladder_2 = _178 >> 16u;
        }
        _183 = frontier_phi_3_2_ladder_1;
        _185 = frontier_phi_3_2_ladder;
        _186 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _190 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _191 = _190.x;
    uint _192 = _191 * _183;
    uint _194 = _192 >> 2u;
    uvec3 _203 = uvec3(texelFetch(l_geomAttrib_0, int(_194)).x, texelFetch(l_geomAttrib_0, int(_194 + 1u)).x, texelFetch(l_geomAttrib_0, int(_194 + 2u)).x);
    uint _210 = _190.z;
    bool _211 = _210 != 0u;
    bool _213 = _142.w == 0u;
    bool _214 = _211 || _213;
    uint _215 = _192 + 12u;
    uint _238;
    uint _239;
    uint _240;
    uint _241;
    if (_214)
    {
        uvec4 _217 = texelFetch(l_geomAttrib_0, int(_215 >> 2u));
        uint _218 = _217.x;
        _238 = _218 & 255u;
        _239 = (_218 >> 8u) & 255u;
        _240 = (_218 >> 16u) & 255u;
        _241 = 16u;
    }
    else
    {
        uint _226 = _215 >> 2u;
        uvec2 _232 = uvec2(texelFetch(l_geomAttrib_0, int(_226)).x, texelFetch(l_geomAttrib_0, int(_226 + 1u)).x);
        uint _233 = _232.x;
        _238 = _233 & 65535u;
        _239 = _233 >> 16u;
        _240 = _232.y & 65535u;
        _241 = 20u;
    }
    uvec4 _248 = texelFetch(l_geomAttrib_0, int((_241 + _192) >> 2u));
    uint _249 = _248.x;
    uint _261 = _241 | 8u;
    bool _262 = _210 == 0u;
    uint _263;
    if (_262)
    {
        _263 = _261;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_213)
        {
            frontier_phi_9_10_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _261 + 8u;
        }
        _263 = frontier_phi_9_10_ladder;
    }
    uint _271 = ((_192 + 4u) + (_211 ? (_263 + 4u) : _263)) >> 2u;
    uvec2 _277 = uvec2(texelFetch(l_geomAttrib_0, int(_271)).x, texelFetch(l_geomAttrib_0, int(_271 + 1u)).x);
    uint _278 = _277.x;
    uint _279 = _277.y;
    float _283 = float(int(uint(int(_278 << 16u) >> int(16u))));
    float _284 = float(int(uint(int(_278) >> int(16u))));
    float _288 = float(int(uint(int(_279 << 16u) >> int(16u))));
    float _289 = float(int(uint(int(_279) >> int(16u))));
    uint _290 = _191 * _185;
    uint _291 = _290 >> 2u;
    uvec3 _300 = uvec3(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x, texelFetch(l_geomAttrib_0, int(_291 + 2u)).x);
    uint _307 = _290 + 12u;
    uint _328;
    uint _329;
    uint _330;
    uint _331;
    if (_214)
    {
        uvec4 _309 = texelFetch(l_geomAttrib_0, int(_307 >> 2u));
        uint _310 = _309.x;
        _328 = _310 & 255u;
        _329 = (_310 >> 8u) & 255u;
        _330 = (_310 >> 16u) & 255u;
        _331 = 16u;
    }
    else
    {
        uint _316 = _307 >> 2u;
        uvec2 _322 = uvec2(texelFetch(l_geomAttrib_0, int(_316)).x, texelFetch(l_geomAttrib_0, int(_316 + 1u)).x);
        uint _323 = _322.x;
        _328 = _323 & 65535u;
        _329 = _323 >> 16u;
        _330 = _322.y & 65535u;
        _331 = 20u;
    }
    uvec4 _337 = texelFetch(l_geomAttrib_0, int((_331 + _290) >> 2u));
    uint _338 = _337.x;
    uint _349 = _331 | 8u;
    uint _350;
    if (_262)
    {
        _350 = _349;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_213)
        {
            frontier_phi_16_17_ladder = _349 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _349 + 8u;
        }
        _350 = frontier_phi_16_17_ladder;
    }
    uint _357 = ((_290 + 4u) + (_211 ? (_350 + 4u) : _350)) >> 2u;
    uvec2 _363 = uvec2(texelFetch(l_geomAttrib_0, int(_357)).x, texelFetch(l_geomAttrib_0, int(_357 + 1u)).x);
    uint _364 = _363.x;
    uint _365 = _363.y;
    float _369 = float(int(uint(int(_364 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_364) >> int(16u))));
    float _374 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _375 = float(int(uint(int(_365) >> int(16u))));
    uint _376 = _191 * _186;
    uint _377 = _376 >> 2u;
    uvec3 _386 = uvec3(texelFetch(l_geomAttrib_0, int(_377)).x, texelFetch(l_geomAttrib_0, int(_377 + 1u)).x, texelFetch(l_geomAttrib_0, int(_377 + 2u)).x);
    uint _393 = _376 + 12u;
    uint _414;
    uint _415;
    uint _416;
    uint _417;
    if (_214)
    {
        uvec4 _395 = texelFetch(l_geomAttrib_0, int(_393 >> 2u));
        uint _396 = _395.x;
        _414 = _396 & 255u;
        _415 = (_396 >> 8u) & 255u;
        _416 = (_396 >> 16u) & 255u;
        _417 = 16u;
    }
    else
    {
        uint _402 = _393 >> 2u;
        uvec2 _408 = uvec2(texelFetch(l_geomAttrib_0, int(_402)).x, texelFetch(l_geomAttrib_0, int(_402 + 1u)).x);
        uint _409 = _408.x;
        _414 = _409 & 65535u;
        _415 = _409 >> 16u;
        _416 = _408.y & 65535u;
        _417 = 20u;
    }
    uvec4 _423 = texelFetch(l_geomAttrib_0, int((_417 + _376) >> 2u));
    uint _424 = _423.x;
    uint _435 = _417 | 8u;
    uint _436;
    if (_262)
    {
        _436 = _435;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_213)
        {
            frontier_phi_23_24_ladder = _435 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _435 + 8u;
        }
        _436 = frontier_phi_23_24_ladder;
    }
    uint _443 = ((_376 + 4u) + (_211 ? (_436 + 4u) : _436)) >> 2u;
    uvec2 _449 = uvec2(texelFetch(l_geomAttrib_0, int(_443)).x, texelFetch(l_geomAttrib_0, int(_443 + 1u)).x);
    uint _450 = _449.x;
    uint _451 = _449.y;
    float _455 = float(int(uint(int(_450 << 16u) >> int(16u))));
    float _456 = float(int(uint(int(_450) >> int(16u))));
    float _460 = float(int(uint(int(_451 << 16u) >> int(16u))));
    float _461 = float(int(uint(int(_451) >> int(16u))));
    bool _463 = _142.z == 0u;
    float _499;
    float _500;
    float _501;
    if (_463)
    {
        uint _466 = _183 * 3u;
        uvec3 _475 = uvec3(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_466 + 2u)).x);
        _499 = uintBitsToFloat(_475.x);
        _500 = uintBitsToFloat(_475.y);
        _501 = uintBitsToFloat(_475.z);
    }
    else
    {
        uint _483 = _183 * 2u;
        uvec2 _489 = uvec2(texelFetch(l_geomPositionBuffer, int(_483)).x, texelFetch(l_geomPositionBuffer, int(_483 + 1u)).x);
        uint _490 = _489.x;
        _499 = unpackHalf2x16(_490).x;
        _500 = unpackHalf2x16(_490 >> 16u).x;
        _501 = unpackHalf2x16(_489.y).x;
    }
    float _537;
    float _538;
    float _539;
    if (_463)
    {
        uint _504 = _185 * 3u;
        uvec3 _513 = uvec3(texelFetch(l_geomPositionBuffer, int(_504)).x, texelFetch(l_geomPositionBuffer, int(_504 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_504 + 2u)).x);
        _537 = uintBitsToFloat(_513.x);
        _538 = uintBitsToFloat(_513.y);
        _539 = uintBitsToFloat(_513.z);
    }
    else
    {
        uint _521 = _185 * 2u;
        uvec2 _527 = uvec2(texelFetch(l_geomPositionBuffer, int(_521)).x, texelFetch(l_geomPositionBuffer, int(_521 + 1u)).x);
        uint _528 = _527.x;
        _537 = unpackHalf2x16(_528).x;
        _538 = unpackHalf2x16(_528 >> 16u).x;
        _539 = unpackHalf2x16(_527.y).x;
    }
    float _575;
    float _576;
    float _577;
    if (_463)
    {
        uint _542 = _186 * 3u;
        uvec3 _551 = uvec3(texelFetch(l_geomPositionBuffer, int(_542)).x, texelFetch(l_geomPositionBuffer, int(_542 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_542 + 2u)).x);
        _575 = uintBitsToFloat(_551.x);
        _576 = uintBitsToFloat(_551.y);
        _577 = uintBitsToFloat(_551.z);
    }
    else
    {
        uint _559 = _186 * 2u;
        uvec2 _565 = uvec2(texelFetch(l_geomPositionBuffer, int(_559)).x, texelFetch(l_geomPositionBuffer, int(_559 + 1u)).x);
        uint _566 = _565.x;
        _575 = unpackHalf2x16(_566).x;
        _576 = unpackHalf2x16(_566 >> 16u).x;
        _577 = unpackHalf2x16(_565.y).x;
    }
    float _580 = (1.0 - hit._m0.x) - hit._m0.y;
    float _593 = ((uintBitsToFloat(_300.x) * hit._m0.x) + (uintBitsToFloat(_203.x) * _580)) + (uintBitsToFloat(_386.x) * hit._m0.y);
    float _594 = ((uintBitsToFloat(_300.y) * hit._m0.x) + (uintBitsToFloat(_203.y) * _580)) + (uintBitsToFloat(_386.y) * hit._m0.y);
    float _595 = ((uintBitsToFloat(_300.z) * hit._m0.x) + (uintBitsToFloat(_203.z) * _580)) + (uintBitsToFloat(_386.z) * hit._m0.y);
    float _639 = (_369 - _283) * 0.00048828125;
    float _641 = (_370 - _284) * 0.00048828125;
    float _644 = (_455 - _283) * 0.00048828125;
    float _645 = (_456 - _284) * 0.00048828125;
    float _648 = (_374 - _288) * 0.00048828125;
    float _649 = (_375 - _289) * 0.00048828125;
    float _652 = (_460 - _288) * 0.00048828125;
    float _653 = (_461 - _289) * 0.00048828125;
    float _675 = _537 - _499;
    float _676 = _538 - _500;
    float _677 = _539 - _501;
    float _680 = fma(_677, gl_ObjectToWorldEXT[2u].x, fma(_676, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _675));
    float _683 = fma(_677, gl_ObjectToWorldEXT[2u].y, fma(_676, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _675));
    float _686 = fma(_677, gl_ObjectToWorldEXT[2u].z, fma(_676, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _675));
    float _687 = _575 - _499;
    float _688 = _576 - _500;
    float _689 = _577 - _501;
    float _692 = fma(_689, gl_ObjectToWorldEXT[2u].x, fma(_688, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _687));
    float _695 = fma(_689, gl_ObjectToWorldEXT[2u].y, fma(_688, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _687));
    float _698 = fma(_689, gl_ObjectToWorldEXT[2u].z, fma(_688, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _687));
    float _699 = (((_369 * hit._m0.x) + (_283 * _580)) + (_455 * hit._m0.y)) * 0.00048828125;
    float _700 = (((_370 * hit._m0.x) + (_284 * _580)) + (_456 * hit._m0.y)) * 0.00048828125;
    float _701 = (((_374 * hit._m0.x) + (_288 * _580)) + (_460 * hit._m0.y)) * 0.00048828125;
    float _702 = (((_375 * hit._m0.x) + (_289 * _580)) + (_461 * hit._m0.y)) * 0.00048828125;
    float _706 = (((float(_238) * _580) + (-127.0)) + (float(_328) * hit._m0.x)) + (float(_414) * hit._m0.y);
    float _709 = (((float(_239) * _580) + (-127.0)) + (float(_329) * hit._m0.x)) + (float(_415) * hit._m0.y);
    float _712 = (((float(_240) * _580) + (-127.0)) + (float(_330) * hit._m0.x)) + (float(_416) * hit._m0.y);
    float _713 = _706 * 0.0078740157186985015869140625;
    float _715 = _709 * 0.0078740157186985015869140625;
    float _716 = _712 * 0.0078740157186985015869140625;
    float _729 = ((((float(_249 & 255u) * _580) + (-127.0)) + (float(_338 & 255u) * hit._m0.x)) + (float(_424 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _730 = ((((float((_249 >> 8u) & 255u) * _580) + (-127.0)) + (float((_338 >> 8u) & 255u) * hit._m0.x)) + (float((_424 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _731 = ((((float((_249 >> 16u) & 255u) * _580) + (-127.0)) + (float((_338 >> 16u) & 255u) * hit._m0.x)) + (float((_424 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _732 = ((((float(_249 >> 24u) * _580) + (-127.0)) + (float(_338 >> 24u) * hit._m0.x)) + (float(_424 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _742 = ((_730 * _716) - (_731 * _715)) * _732;
    float _743 = ((_731 * _713) - (_729 * _716)) * _732;
    float _744 = ((_729 * _715) - (_730 * _713)) * _732;
    float _748 = inversesqrt(dot(vec3(_742, _743, _744), vec3(_742, _743, _744)));
    uvec4 _755 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _757 = _755.z != 0u;
    uvec2 _777 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_0, int(0u)));
    bool _782 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _835;
    if (_782)
    {
        float _793 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _799 = (_698 * _683) - (_695 * _686);
        float _802 = (_692 * _686) - (_698 * _680);
        float _805 = (_695 * _680) - (_692 * _683);
        float _832 = ((log2((((float(_777.y) * 0.5) * float(_777.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_802 * _802) + (_805 * _805)) + (_799 * _799)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_793 * gl_WorldRayDirectionEXT.x, _793 * gl_WorldRayDirectionEXT.y, _793 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _835 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    }
    else
    {
        _835 = 0.0;
    }
    vec4 _839 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _699) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _700) + cbTextureTilingScale._m0[0u].w), _835);
    float _841 = _839.x;
    float _842 = _839.y;
    float _843 = _839.z;
    bool _863 = _755.x != 0u;
    uvec2 _883 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_8, int(0u)));
    float _934;
    if (_782)
    {
        float _894 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _900 = (_698 * _683) - (_695 * _686);
        float _903 = (_692 * _686) - (_698 * _680);
        float _906 = (_695 * _680) - (_692 * _683);
        float _932 = ((log2((((float(_883.y) * 0.5) * float(_883.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_903 * _903) + (_906 * _906)) + (_900 * _900)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_894 * gl_WorldRayDirectionEXT.x, _894 * gl_WorldRayDirectionEXT.y, _894 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _934 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    }
    else
    {
        _934 = 0.0;
    }
    vec4 _936 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _699) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _700) + cbTextureTilingScale._m0[12u].w), _934);
    float _938 = _936.x;
    float _939 = _936.y;
    float _940 = _936.z;
    float _956 = _863 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[9u].w - _938)) + _938) : (_938 * cbMtdParam._m0[9u].w);
    float _957 = _863 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[10u].x - _939)) + _939) : (_939 * cbMtdParam._m0[10u].x);
    float _958 = _863 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[10u].y - _940)) + _940) : (_940 * cbMtdParam._m0[10u].y);
    bool _960 = _755.y != 0u;
    uvec2 _975 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_4, int(0u)));
    float _1026;
    if (_782)
    {
        float _986 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _992 = (_698 * _683) - (_695 * _686);
        float _995 = (_692 * _686) - (_698 * _680);
        float _998 = (_695 * _680) - (_692 * _683);
        float _1024 = ((log2((((float(_975.y) * 0.5) * float(_975.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_995 * _995) + (_998 * _998)) + (_992 * _992)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_986 * gl_WorldRayDirectionEXT.x, _986 * gl_WorldRayDirectionEXT.y, _986 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1026 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    }
    else
    {
        _1026 = 0.0;
    }
    vec4 _1028 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _699) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _700) + cbTextureTilingScale._m0[10u].w), _1026);
    float _1030 = _1028.x;
    float _1031 = _1028.y;
    float _1032 = _1028.z;
    uvec2 _1061 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_9, int(0u)));
    float _1112;
    if (_782)
    {
        float _1072 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1078 = (_698 * _683) - (_695 * _686);
        float _1081 = (_692 * _686) - (_698 * _680);
        float _1084 = (_695 * _680) - (_692 * _683);
        float _1110 = ((log2((((float(_1061.y) * 0.5) * float(_1061.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1081 * _1081) + (_1084 * _1084)) + (_1078 * _1078)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1072 * gl_WorldRayDirectionEXT.x, _1072 * gl_WorldRayDirectionEXT.y, _1072 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1112 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    }
    else
    {
        _1112 = 0.0;
    }
    vec4 _1115 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * _699) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _700) + cbTextureTilingScale._m0[13u].w), _1112);
    float _1117 = _1115.x;
    float _1118 = _1115.y;
    float _1128 = ((cbMtdParam._m0[21u].z * (-1.39999997615814208984375)) * (1.0 - _1117)) + 1.0;
    float _2633 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _1136 = (cbMtdParam._m0[18u].z * ((isnan(1.0) ? _2633 : (isnan(_2633) ? 1.0 : min(_2633, 1.0))) - _1117)) + _1117;
    float _1143 = (_1136 * ((_960 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[10u].w - _1030)) + _1030) : (_1030 * cbMtdParam._m0[10u].w)) - _956)) + _956;
    float _1144 = (_1136 * ((_960 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[11u].x - _1031)) + _1031) : (_1031 * cbMtdParam._m0[11u].x)) - _957)) + _957;
    float _1145 = (_1136 * ((_960 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[11u].y - _1032)) + _1032) : (_1032 * cbMtdParam._m0[11u].y)) - _958)) + _958;
    float _1151 = (((1.0 - _1118) * (-1.39999997615814208984375)) * cbMtdParam._m0[20u].y) + 1.0;
    float _2644 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    float _1159 = (cbMtdParam._m0[15u].w * ((isnan(1.0) ? _2644 : (isnan(_2644) ? 1.0 : min(_2644, 1.0))) - _1118)) + _1118;
    float _1166 = (_1159 * ((_757 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[11u].w - _841)) + _841) : (_841 * cbMtdParam._m0[11u].w)) - _1143)) + _1143;
    float _1167 = (_1159 * ((_757 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[12u].x - _842)) + _842) : (_842 * cbMtdParam._m0[12u].x)) - _1144)) + _1144;
    float _1168 = (_1159 * ((_757 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[12u].y - _843)) + _843) : (_843 * cbMtdParam._m0[12u].y)) - _1145)) + _1145;
    uvec2 _1191 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_13, int(0u)));
    float _1242;
    if (_782)
    {
        float _1202 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1208 = (_698 * _683) - (_695 * _686);
        float _1211 = (_692 * _686) - (_698 * _680);
        float _1214 = (_695 * _680) - (_692 * _683);
        float _1240 = ((log2((((float(_1191.y) * 0.5) * float(_1191.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1211 * _1211) + (_1214 * _1214)) + (_1208 * _1208)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1202 * gl_WorldRayDirectionEXT.x, _1202 * gl_WorldRayDirectionEXT.y, _1202 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1242 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    }
    else
    {
        _1242 = 0.0;
    }
    float _1251 = cbMtdParam._m0[17u].x * textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_13, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _699) + cbMtdParam._m0[22u].y) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((cbMtdParam._m0[23u].z * _700) + cbMtdParam._m0[22u].z) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _1242).x;
    uvec2 _1263 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_11, int(0u)));
    float _1314;
    if (_782)
    {
        float _1274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1280 = (_698 * _683) - (_695 * _686);
        float _1283 = (_692 * _686) - (_698 * _680);
        float _1286 = (_695 * _680) - (_692 * _683);
        float _1312 = ((log2((((float(_1263.y) * 0.5) * float(_1263.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1283 * _1283) + (_1286 * _1286)) + (_1280 * _1280)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1274 * gl_WorldRayDirectionEXT.x, _1274 * gl_WorldRayDirectionEXT.y, _1274 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1314 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
    }
    else
    {
        _1314 = 0.0;
    }
    vec4 _1316 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _699) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _700) + cbTextureTilingScale._m0[3u].w), _1314);
    float _1318 = _1316.x;
    float _1319 = _1316.y;
    float _1320 = _1316.z;
    float _1343 = (((_1318 - _1166) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[14u].w - _1318))) * _1251) + _1166;
    float _1344 = (((_1319 - _1167) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[15u].x - _1319))) * _1251) + _1167;
    float _1345 = (((_1320 - _1168) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[15u].y - _1320))) * _1251) + _1168;
    float _1366 = cbMtdParam._m0[20u].z * cbPerFrame._m0[22u].x;
    uvec2 _1384 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_16, int(0u)));
    float _1435;
    if (_782)
    {
        float _1395 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1401 = (_698 * _683) - (_695 * _686);
        float _1404 = (_692 * _686) - (_698 * _680);
        float _1407 = (_695 * _680) - (_692 * _683);
        float _1433 = ((log2((((float(_1384.y) * 0.5) * float(_1384.x)) * abs((_653 * _648) - (_652 * _649))) / (sqrt(((_1404 * _1404) + (_1407 * _1407)) + (_1401 * _1401)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1395 * gl_WorldRayDirectionEXT.x, _1395 * gl_WorldRayDirectionEXT.y, _1395 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1435 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
    }
    else
    {
        _1435 = 0.0;
    }
    vec4 _1437 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_16, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[7u].x * cbMtdParam._m0[25u].w) * ((_1366 * cbMtdParam._m0[26u].y) + _701)) + cbTextureTilingScale._m0[7u].z, ((cbTextureTilingScale._m0[7u].y * cbMtdParam._m0[26u].x) * ((_1366 * cbMtdParam._m0[26u].z) + _702)) + cbTextureTilingScale._m0[7u].w), _1435);
    float _1439 = _1437.x;
    uvec2 _1474 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_17, int(0u)));
    float _1525;
    if (_782)
    {
        float _1485 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1491 = (_698 * _683) - (_695 * _686);
        float _1494 = (_692 * _686) - (_698 * _680);
        float _1497 = (_695 * _680) - (_692 * _683);
        float _1523 = ((log2((((float(_1474.y) * 0.5) * float(_1474.x)) * abs((_653 * _648) - (_652 * _649))) / (sqrt(((_1494 * _1494) + (_1497 * _1497)) + (_1491 * _1491)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1485 * gl_WorldRayDirectionEXT.x, _1485 * gl_WorldRayDirectionEXT.y, _1485 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1525 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    }
    else
    {
        _1525 = 0.0;
    }
    vec4 _1528 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_17, SS_ClampLinear), vec2((((cbMtdParam._m0[25u].y + _701) * cbMtdParam._m0[26u].w) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((cbMtdParam._m0[25u].z + _702) * cbMtdParam._m0[27u].x) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), _1525);
    uvec2 _1557 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_15, int(0u)));
    float _1608;
    if (_782)
    {
        float _1568 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1574 = (_698 * _683) - (_695 * _686);
        float _1577 = (_692 * _686) - (_698 * _680);
        float _1580 = (_695 * _680) - (_692 * _683);
        float _1606 = ((log2((((float(_1557.y) * 0.5) * float(_1557.x)) * abs((_653 * _648) - (_652 * _649))) / (sqrt(((_1577 * _1577) + (_1580 * _1580)) + (_1574 * _1574)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1568 * gl_WorldRayDirectionEXT.x, _1568 * gl_WorldRayDirectionEXT.y, _1568 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1608 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
    }
    else
    {
        _1608 = 0.0;
    }
    float _1617 = exp2(log2(cbMtdParam._m0[21u].x * textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_15, SS_DiffuseMap), vec2(((((((cbMtdParam._m0[24u].y * _1366) + (_1439 * cbMtdParam._m0[23u].w)) + cbMtdParam._m0[22u].w) + (cbMtdParam._m0[24u].w * _701)) + ((_1528.x + (-0.5)) * cbMtdParam._m0[20u].w)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((((cbMtdParam._m0[24u].z * _1366) + (_1439 * cbMtdParam._m0[24u].x)) + cbMtdParam._m0[23u].x) + (cbMtdParam._m0[25u].x * _702)) + ((_1528.y + (-0.5)) * cbMtdParam._m0[20u].w)) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _1608).w) * cbMtdParam._m0[21u].y);
    float _2680 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
    float _1618 = isnan(1.0) ? _2680 : (isnan(_2680) ? 1.0 : min(_2680, 1.0));
    float _1632 = ((_1618 * (cbMtdParam._m0[13u].w - _1343)) * cbMtdParam._m0[19u].w) + _1343;
    float _1633 = ((_1618 * (cbMtdParam._m0[14u].x - _1344)) * cbMtdParam._m0[19u].w) + _1344;
    float _1634 = ((_1618 * (cbMtdParam._m0[14u].y - _1345)) * cbMtdParam._m0[19u].w) + _1345;
    float _1646 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_713, _715, _716, 0.0)) - cbMtdParam._m0[16u].w;
    float _2691 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
    float _1656 = (exp2(log2(1.0 - (isnan(1.0) ? _2691 : (isnan(_2691) ? 1.0 : min(_2691, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[16u].z : (isnan(cbMtdParam._m0[16u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[16u].z, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[17u].z - cbMtdParam._m0[17u].y)) + cbMtdParam._m0[17u].y;
    float _1666 = (((_1656 * cbMtdParam._m0[12u].w) - _1632) * _1656) + _1632;
    float _1667 = (((_1656 * cbMtdParam._m0[13u].x) - _1633) * _1656) + _1633;
    float _1668 = (((_1656 * cbMtdParam._m0[13u].y) - _1634) * _1656) + _1634;
    uvec2 _1680 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_1, int(0u)));
    float _1731;
    if (_782)
    {
        float _1691 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1697 = (_698 * _683) - (_695 * _686);
        float _1700 = (_692 * _686) - (_698 * _680);
        float _1703 = (_695 * _680) - (_692 * _683);
        float _1729 = ((log2((((float(_1680.y) * 0.5) * float(_1680.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1700 * _1700) + (_1703 * _1703)) + (_1697 * _1697)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1691 * gl_WorldRayDirectionEXT.x, _1691 * gl_WorldRayDirectionEXT.y, _1691 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1731 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
    }
    else
    {
        _1731 = 0.0;
    }
    vec4 _1734 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _699) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _700) + cbTextureTilingScale._m0[1u].w), _1731);
    uvec2 _1750 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_2, int(0u)));
    float _1801;
    if (_782)
    {
        float _1761 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1767 = (_698 * _683) - (_695 * _686);
        float _1770 = (_692 * _686) - (_698 * _680);
        float _1773 = (_695 * _680) - (_692 * _683);
        float _1799 = ((log2((((float(_1750.y) * 0.5) * float(_1750.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1770 * _1770) + (_1773 * _1773)) + (_1767 * _1767)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1761 * gl_WorldRayDirectionEXT.x, _1761 * gl_WorldRayDirectionEXT.y, _1761 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1801 = isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0));
    }
    else
    {
        _1801 = 0.0;
    }
    vec4 _1803 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _699) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _700) + cbTextureTilingScale._m0[9u].w), _1801);
    float _1805 = _1803.x;
    float _1806 = _1803.y;
    float _1807 = _1803.z;
    float _1814 = ((_1734.x - _1805) * _1136) + _1805;
    float _1815 = ((_1734.y - _1806) * _1136) + _1806;
    float _1816 = ((_1734.z - _1807) * _1136) + _1807;
    uvec2 _1828 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_6, int(0u)));
    float _1879;
    if (_782)
    {
        float _1839 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1845 = (_698 * _683) - (_695 * _686);
        float _1848 = (_692 * _686) - (_698 * _680);
        float _1851 = (_695 * _680) - (_692 * _683);
        float _1877 = ((log2((((float(_1828.y) * 0.5) * float(_1828.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1848 * _1848) + (_1851 * _1851)) + (_1845 * _1845)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1839 * gl_WorldRayDirectionEXT.x, _1839 * gl_WorldRayDirectionEXT.y, _1839 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1879 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
    }
    else
    {
        _1879 = 0.0;
    }
    vec4 _1881 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _699) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _700) + cbTextureTilingScale._m0[11u].w), _1879);
    uvec2 _1907 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_10, int(0u)));
    float _1958;
    if (_782)
    {
        float _1918 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1924 = (_698 * _683) - (_695 * _686);
        float _1927 = (_692 * _686) - (_698 * _680);
        float _1930 = (_695 * _680) - (_692 * _683);
        float _1956 = ((log2((((float(_1907.y) * 0.5) * float(_1907.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_1927 * _1927) + (_1930 * _1930)) + (_1924 * _1924)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1918 * gl_WorldRayDirectionEXT.x, _1918 * gl_WorldRayDirectionEXT.y, _1918 * gl_WorldRayDirectionEXT.z), vec3(_713, _715, _716))));
        _1958 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
    }
    else
    {
        _1958 = 0.0;
    }
    vec4 _1960 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _699) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _700) + cbTextureTilingScale._m0[2u].w), _1958);
    float _1971 = (((_1881.x - _1814) * _1159) + _1814) + ((_1960.x + (-0.5)) * cbMtdParam._m0[21u].w);
    float _1972 = (((_1881.y - _1815) * _1159) + _1815) + ((_1960.y + (-0.5)) * cbMtdParam._m0[21u].w);
    float _1973 = (((_1881.z - _1816) * _1159) + _1816) + ((_1960.z + (-0.5)) * cbMtdParam._m0[21u].w);
    uvec2 _1985 = uvec2(textureSize(M_Planet_GroundSurface_003_snp_0_Texture2D_12, int(0u)));
    float _1989 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1990 = _1989 * gl_WorldRayDirectionEXT.x;
    float _1991 = _1989 * gl_WorldRayDirectionEXT.y;
    float _1992 = _1989 * gl_WorldRayDirectionEXT.z;
    float _2036;
    if (_782)
    {
        float _2002 = (_698 * _683) - (_695 * _686);
        float _2005 = (_692 * _686) - (_698 * _680);
        float _2008 = (_695 * _680) - (_692 * _683);
        float _2034 = ((log2((((float(_1985.y) * 0.5) * float(_1985.x)) * abs((_645 * _639) - (_644 * _641))) / (sqrt(((_2005 * _2005) + (_2008 * _2008)) + (_2002 * _2002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_131) / abs(dot(vec3(_1990, _1991, _1992), vec3(_713, _715, _716))));
        _2036 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
    }
    else
    {
        _2036 = 0.0;
    }
    vec4 _2038 = textureLod(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _699) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _700) + cbTextureTilingScale._m0[4u].w), _2036);
    float _2049 = ((_2038.x - _1971) * _1251) + _1971;
    float _2050 = ((_2038.y - _1972) * _1251) + _1972;
    float _2051 = ((_2038.z - _1973) * _1251) + _1973;
    float _2061 = ((1.0 - _2051) * _1656) + _2051;
    float _2064 = ((((0.502016007900238037109375 - _2049) * _1656) + _2049) * 2.0) + (-1.0);
    float _2066 = ((((0.502016007900238037109375 - _2050) * _1656) + _2050) * 2.0) + (-1.0);
    float _2067 = dot(vec2(_2064, _2066), vec2(_2064, _2066));
    float _2732 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
    float _2072 = sqrt(1.0 - (isnan(1.0) ? _2732 : (isnan(_2732) ? 1.0 : min(_2732, 1.0))));
    float _2078 = inversesqrt(dot(vec3(_593, _594, _595), vec3(_593, _594, _595)));
    float _2088 = inversesqrt(dot(vec3(cbMtdParam._m0[27u].yzw), vec3(cbMtdParam._m0[27u].yzw)));
    float _2104 = (((_2088 * cbMtdParam._m0[27u].y) - g_sceneCB._m0[4u].x) * cbMtdParam._m0[19u].z) + g_sceneCB._m0[4u].x;
    float _2105 = (((_2088 * cbMtdParam._m0[27u].z) - g_sceneCB._m0[4u].y) * cbMtdParam._m0[19u].z) + g_sceneCB._m0[4u].y;
    float _2106 = (((_2088 * cbMtdParam._m0[27u].w) - g_sceneCB._m0[4u].z) * cbMtdParam._m0[19u].z) + g_sceneCB._m0[4u].z;
    float _2110 = inversesqrt(dot(vec3(_2104, _2105, _2106), vec3(_2104, _2105, _2106)));
    float _2111 = _2104 * _2110;
    float _2112 = _2105 * _2110;
    float _2113 = _2106 * _2110;
    float _2117 = inversesqrt(dot(vec3(_2111, _2112, _2113), vec3(_2111, _2112, _2113)));
    float _2132 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_2078 * _593, _2078 * _594, _2078 * _595, 0.0), vec4(_2111 * _2117, _2112 * _2117, _2113 * _2117, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _2743 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
    float _2134 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
    float _2140 = exp2(log2(_2134 * 6.5) * 7.0);
    float _2754 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
    float _2147 = exp2(log2(cbMtdParam._m0[19u].x * ((isnan(1.0) ? _2754 : (isnan(_2754) ? 1.0 : min(_2754, 1.0))) + _2134)) * cbMtdParam._m0[18u].w);
    float _2765 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2148 = isnan(1.0) ? _2765 : (isnan(_2765) ? 1.0 : min(_2765, 1.0));
    float _2776 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
    float _2149 = isnan(1.0) ? _2776 : (isnan(_2776) ? 1.0 : min(_2776, 1.0));
    float _2158 = fma(_2072, _713, fma(_2066, _729, (_748 * _742) * _2064));
    float _2161 = fma(_2072, _715, fma(_2066, _730, (_748 * _743) * _2064));
    float _2164 = fma(_2072, _716, fma(_2066, _731, (_748 * _744) * _2064));
    float _2168 = inversesqrt(dot(vec3(_2158, _2161, _2164), vec3(_2158, _2161, _2164)));
    float _2169 = _2168 * _2158;
    float _2170 = _2168 * _2161;
    float _2171 = _2168 * _2164;
    float _2183 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2184 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2185 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2186 = (-0.0) - _1990;
    float _2188 = (-0.0) - _1991;
    float _2189 = (-0.0) - _1992;
    float _2195 = float(gl_LaunchIDEXT.x);
    float _2196 = float(gl_LaunchIDEXT.y);
    float _2199 = float(gl_LaunchSizeEXT.x);
    float _2213 = fract(fract(sin(dot(vec2(_2195 / _2199, _2196 / _94), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2226 = fract(fract(sin(dot(vec2((_2195 + 128.0) / _2199, (_2196 + 128.0) / _94), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _80._m0 = 1u;
    uvec4 _2231 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2232 = _2231.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2232, _2231.w, _2232, vec3(_2183, _2184, _2185), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2339;
    float _2340;
    float _2341;
    float _2342;
    float _2343;
    float _2344;
    if (_80._m0 == 0u)
    {
        float _2251 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2169, _2170, _2171));
        float _2787 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2254 = isnan(1.0) ? _2787 : (isnan(_2787) ? 1.0 : min(_2787, 1.0));
        float _2273 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2061) * 0.949999988079071044921875);
        float _2274 = _2273 * _2273;
        float _2275 = g_sceneCB._m0[4u].x - _1990;
        float _2276 = g_sceneCB._m0[4u].y - _1991;
        float _2277 = g_sceneCB._m0[4u].z - _1992;
        float _2281 = inversesqrt(dot(vec3(_2275, _2276, _2277), vec3(_2275, _2276, _2277)));
        float _2282 = _2281 * _2275;
        float _2283 = _2281 * _2276;
        float _2284 = _2281 * _2277;
        float _2285 = dot(vec3(_2169, _2170, _2171), vec3(g_sceneCB._m0[4u].xyz));
        float _2798 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
        float _2288 = isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0));
        float _2289 = dot(vec3(_2169, _2170, _2171), vec3(_2186, _2188, _2189));
        float _2809 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
        float _2292 = isnan(1.0) ? _2809 : (isnan(_2809) ? 1.0 : min(_2809, 1.0));
        float _2293 = dot(vec3(_2169, _2170, _2171), vec3(_2282, _2283, _2284));
        float _2820 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
        float _2296 = isnan(1.0) ? _2820 : (isnan(_2820) ? 1.0 : min(_2820, 1.0));
        float _2297 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2282, _2283, _2284));
        float _2831 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
        float _2301 = _2274 * _2274;
        float _2305 = ((_2296 * _2296) * (_2301 + (-1.0))) + 1.0;
        float _2317 = (exp2(log2(1.0 - (isnan(1.0) ? _2831 : (isnan(_2831) ? 1.0 : min(_2831, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2319 = 1.0 - _2274;
        float _2330 = (0.5 / (((_2292 * ((_2288 * _2319) + _2274)) + 9.9999999392252902907785028219223e-09) + (((_2292 * _2319) + _2274) * _2288))) * _2288;
        float _2842 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
        float _2332 = (isnan(1.0) ? _2842 : (isnan(_2842) ? 1.0 : min(_2842, 1.0))) * (_2301 / ((_2305 * _2305) * 3.141590118408203125));
        _2339 = ((_1666 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2254;
        _2340 = ((_1667 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2254;
        _2341 = ((_1668 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2254;
        _2342 = (_2317 * g_sceneCB._m0[5u].x) * _2332;
        _2343 = (_2317 * g_sceneCB._m0[5u].y) * _2332;
        _2344 = (_2317 * g_sceneCB._m0[5u].z) * _2332;
    }
    else
    {
        _2339 = 0.0;
        _2340 = 0.0;
        _2341 = 0.0;
        _2342 = 0.0;
        _2343 = 0.0;
        _2344 = 0.0;
    }
    bool _2346 = abs(_2170) < 0.89999997615814208984375;
    float _2348 = float(_2346);
    float _2349 = _2346 ? 0.0 : 1.0;
    float _2352 = (_2348 * _2171) - (_2349 * _2170);
    float _2353 = _2349 * _2169;
    float _2355 = (-0.0) - (_2169 * _2348);
    float _2359 = inversesqrt(dot(vec3(_2352, _2353, _2355), vec3(_2352, _2353, _2355)));
    float _2360 = _2352 * _2359;
    float _2361 = _2353 * _2359;
    float _2362 = _2359 * _2355;
    float _2365 = (_2361 * _2171) - (_2362 * _2170);
    float _2368 = (_2362 * _2169) - (_2360 * _2171);
    float _2371 = (_2360 * _2170) - (_2361 * _2169);
    float _2373;
    float _2381;
    float _2372 = 0.0;
    uint _2374 = 0u;
    float _2378;
    bool _2380;
    for (;;)
    {
        _2378 = (float(_2374) + _2213) * 0.03125;
        _2380 = _2374 == 0u;
        float frontier_phi_67_pred;
        if (_2380)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2518;
            float _2519;
            uint _2521;
            _2518 = 0.0;
            _2519 = 0.5;
            _2521 = _2374;
            float _2382;
            for (;;)
            {
                _2382 = ((_2521 & 1u) != 0u) ? (_2519 + _2518) : _2518;
                uint _2522 = _2521 >> 1u;
                if (_2522 == 0u)
                {
                    break;
                }
                else
                {
                    _2518 = _2382;
                    _2519 *= 0.5;
                    _2521 = _2522;
                }
            }
            frontier_phi_67_pred = _2382;
        }
        _2381 = frontier_phi_67_pred;
        float _2383 = _2381 + _2226;
        float _2387 = sqrt(_2378);
        float _2388 = ((_2383 > 1.0) ? (_2383 + (-1.0)) : _2383) * 6.283185482025146484375;
        float _2391 = cos(_2388) * _2387;
        float _2393 = sin(_2388) * _2387;
        float _2395 = sqrt(1.0 - _2378);
        float _2408 = ((_2395 * _2169) + (_2391 * _2365)) + (_2393 * _2360);
        float _2409 = ((_2395 * _2170) + (_2391 * _2368)) + (_2393 * _2361);
        float _2410 = ((_2395 * _2171) + (_2391 * _2371)) + (_2393 * _2362);
        _79._m0 = 1u;
        uvec4 _2414 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2415 = _2414.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2415, _2414.w, _2415, vec3(_2183, _2184, _2185), 9.9999997473787516355514526367188e-05, vec3(_2408, _2409, _2410), 10000.0, 1);
        float _2421 = dot(vec3(_2169, _2170, _2171), vec3(_2408, _2409, _2410));
        float _2853 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
        float _2424 = isnan(1.0) ? _2853 : (isnan(_2853) ? 1.0 : min(_2853, 1.0));
        _2373 = ((float(_79._m0 == 0u) * _2424) / (_2424 * 0.3183098733425140380859375)) + _2372;
        uint _2375 = _2374 + 1u;
        if (_2375 == 32u)
        {
            break;
        }
        else
        {
            _2372 = _2373;
            _2374 = _2375;
            continue;
        }
    }
    float _2432 = _2373 * 0.009947183541953563690185546875;
    float _2437 = dot(vec3(_1990, _1991, _1992), vec3(_2169, _2170, _2171)) * 2.0;
    vec4 _2451 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1990 - (_2437 * _2169), _1991 - (_2437 * _2170), _1992 - (_2437 * _2171)), 4.0 - (_2061 * 4.0));
    float _2456 = dot(vec3(_2186, _2188, _2189), vec3(_2169, _2170, _2171));
    float _2864 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2465 = (exp2(log2(1.0 - (isnan(1.0) ? _2864 : (isnan(_2864) ? 1.0 : min(_2864, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2471 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2169, _2170, _2171), 0.0);
    float _2483 = ((_2339 + ((cbMtdParam._m0[17u].w * _1666) * _2149)) + _2342) + (((_2471.x * _1666) + (_2465 * _2451.x)) * _2432);
    float _2488 = ((_2340 + ((cbMtdParam._m0[17u].w * _1667) * _2149)) + _2343) + (((_2471.y * _1667) + (_2465 * _2451.y)) * _2432);
    float _2493 = ((_2341 + ((cbMtdParam._m0[17u].w * _1668) * _2149)) + _2344) + (((_2471.z * _1668) + (_2465 * _2451.z)) * _2432);
    float _2875 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
    float _2886 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
    float _2897 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
    bool _2501 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2512;
    _2512.x = _2501 ? ((_706 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2875 : (isnan(_2875) ? 1.0 : min(_2875, 1.0)));
    _2512.y = _2501 ? ((_709 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2886 : (isnan(_2886) ? 1.0 : min(_2886, 1.0)));
    _2512.z = _2501 ? ((_712 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2897 : (isnan(_2897) ? 1.0 : min(_2897, 1.0)));
    payload._m0 = _2512;
}


