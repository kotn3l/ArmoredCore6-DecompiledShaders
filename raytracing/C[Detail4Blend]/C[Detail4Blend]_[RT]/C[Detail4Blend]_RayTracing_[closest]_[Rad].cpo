#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Detail4Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail4Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail4Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail4Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail4Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail4Blend_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail4Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail4Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail4Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail4Blend_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1861;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _162 & 65535u;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _165;
        }
        else
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _163 >> 16u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        _168 = frontier_phi_3_2_ladder;
        _170 = frontier_phi_3_2_ladder_2;
        _171 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _182 = _176 * _168;
    uint _183 = _182 + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 16u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_210 + _182) >> 2u));
    uint _219 = _218.x;
    bool _233 = _177 == 0u;
    uint _234;
    if (_233)
    {
        _234 = _210 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 12u;
        }
        _234 = frontier_phi_9_10_ladder;
    }
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_182 + 4u) + (_178 ? (_234 + 4u) : _234)) >> 2u));
    uint _243 = _242.x;
    float _247 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_243) >> int(16u))));
    uint _249 = _176 * _170;
    uint _250 = _249 + 12u;
    uint _271;
    uint _272;
    uint _273;
    uint _274;
    if (_181)
    {
        uvec4 _252 = texelFetch(l_geomAttrib_0, int(_250 >> 2u));
        uint _253 = _252.x;
        _271 = _253 & 255u;
        _272 = (_253 >> 8u) & 255u;
        _273 = (_253 >> 16u) & 255u;
        _274 = 16u;
    }
    else
    {
        uint _259 = _250 >> 2u;
        uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
        uint _266 = _265.x;
        _271 = _266 & 65535u;
        _272 = _266 >> 16u;
        _273 = _265.y & 65535u;
        _274 = 20u;
    }
    uvec4 _280 = texelFetch(l_geomAttrib_0, int((_274 + _249) >> 2u));
    uint _281 = _280.x;
    uint _293;
    if (_233)
    {
        _293 = _274 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _274 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _274 + 12u;
        }
        _293 = frontier_phi_16_17_ladder;
    }
    uvec4 _301 = texelFetch(l_geomAttrib_0, int(((_249 + 4u) + (_178 ? (_293 + 4u) : _293)) >> 2u));
    uint _302 = _301.x;
    float _306 = float(int(uint(int(_302 << 16u) >> int(16u))));
    float _307 = float(int(uint(int(_302) >> int(16u))));
    uint _308 = _176 * _171;
    uint _309 = _308 + 12u;
    uint _330;
    uint _331;
    uint _332;
    uint _333;
    if (_181)
    {
        uvec4 _311 = texelFetch(l_geomAttrib_0, int(_309 >> 2u));
        uint _312 = _311.x;
        _330 = _312 & 255u;
        _331 = (_312 >> 8u) & 255u;
        _332 = (_312 >> 16u) & 255u;
        _333 = 16u;
    }
    else
    {
        uint _318 = _309 >> 2u;
        uvec2 _324 = uvec2(texelFetch(l_geomAttrib_0, int(_318)).x, texelFetch(l_geomAttrib_0, int(_318 + 1u)).x);
        uint _325 = _324.x;
        _330 = _325 & 65535u;
        _331 = _325 >> 16u;
        _332 = _324.y & 65535u;
        _333 = 20u;
    }
    uvec4 _339 = texelFetch(l_geomAttrib_0, int((_333 + _308) >> 2u));
    uint _340 = _339.x;
    uint _352;
    if (_233)
    {
        _352 = _333 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _333 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _333 + 12u;
        }
        _352 = frontier_phi_23_24_ladder;
    }
    uvec4 _360 = texelFetch(l_geomAttrib_0, int(((_308 + 4u) + (_178 ? (_352 + 4u) : _352)) >> 2u));
    uint _361 = _360.x;
    float _365 = float(int(uint(int(_361 << 16u) >> int(16u))));
    float _366 = float(int(uint(int(_361) >> int(16u))));
    bool _368 = _127.z == 0u;
    float _404;
    float _405;
    float _406;
    if (_368)
    {
        uint _371 = _168 * 3u;
        uvec3 _380 = uvec3(texelFetch(l_geomPositionBuffer, int(_371)).x, texelFetch(l_geomPositionBuffer, int(_371 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_371 + 2u)).x);
        _404 = uintBitsToFloat(_380.x);
        _405 = uintBitsToFloat(_380.y);
        _406 = uintBitsToFloat(_380.z);
    }
    else
    {
        uint _388 = _168 * 2u;
        uvec2 _394 = uvec2(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x);
        uint _395 = _394.x;
        _404 = unpackHalf2x16(_395).x;
        _405 = unpackHalf2x16(_395 >> 16u).x;
        _406 = unpackHalf2x16(_394.y).x;
    }
    float _442;
    float _443;
    float _444;
    if (_368)
    {
        uint _409 = _170 * 3u;
        uvec3 _418 = uvec3(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_409 + 2u)).x);
        _442 = uintBitsToFloat(_418.x);
        _443 = uintBitsToFloat(_418.y);
        _444 = uintBitsToFloat(_418.z);
    }
    else
    {
        uint _426 = _170 * 2u;
        uvec2 _432 = uvec2(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x);
        uint _433 = _432.x;
        _442 = unpackHalf2x16(_433).x;
        _443 = unpackHalf2x16(_433 >> 16u).x;
        _444 = unpackHalf2x16(_432.y).x;
    }
    float _480;
    float _481;
    float _482;
    if (_368)
    {
        uint _447 = _171 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _171 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _485 = (1.0 - hit._m0.x) - hit._m0.y;
    float _519 = (_306 - _247) * 0.00048828125;
    float _521 = (_307 - _248) * 0.00048828125;
    float _524 = (_365 - _247) * 0.00048828125;
    float _525 = (_366 - _248) * 0.00048828125;
    float _547 = _442 - _404;
    float _548 = _443 - _405;
    float _549 = _444 - _406;
    float _552 = fma(_549, gl_ObjectToWorldEXT[2u].x, fma(_548, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _547));
    float _555 = fma(_549, gl_ObjectToWorldEXT[2u].y, fma(_548, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _547));
    float _558 = fma(_549, gl_ObjectToWorldEXT[2u].z, fma(_548, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _547));
    float _559 = _480 - _404;
    float _560 = _481 - _405;
    float _561 = _482 - _406;
    float _564 = fma(_561, gl_ObjectToWorldEXT[2u].x, fma(_560, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _559));
    float _567 = fma(_561, gl_ObjectToWorldEXT[2u].y, fma(_560, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _559));
    float _570 = fma(_561, gl_ObjectToWorldEXT[2u].z, fma(_560, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _559));
    float _571 = (((_306 * hit._m0.x) + (_247 * _485)) + (_365 * hit._m0.y)) * 0.00048828125;
    float _572 = (((_307 * hit._m0.x) + (_248 * _485)) + (_366 * hit._m0.y)) * 0.00048828125;
    float _576 = (((float(_207) * _485) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _579 = (((float(_208) * _485) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_331) * hit._m0.y);
    float _582 = (((float(_209) * _485) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _583 = _576 * 0.0078740157186985015869140625;
    float _585 = _579 * 0.0078740157186985015869140625;
    float _586 = _582 * 0.0078740157186985015869140625;
    float _599 = ((((float(_219 & 255u) * _485) + (-127.0)) + (float(_281 & 255u) * hit._m0.x)) + (float(_340 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float((_219 >> 8u) & 255u) * _485) + (-127.0)) + (float((_281 >> 8u) & 255u) * hit._m0.x)) + (float((_340 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _601 = ((((float((_219 >> 16u) & 255u) * _485) + (-127.0)) + (float((_281 >> 16u) & 255u) * hit._m0.x)) + (float((_340 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float(_219 >> 24u) * _485) + (-127.0)) + (float(_281 >> 24u) * hit._m0.x)) + (float(_340 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _612 = ((_600 * _586) - (_601 * _585)) * _602;
    float _613 = ((_601 * _583) - (_599 * _586)) * _602;
    float _614 = ((_599 * _585) - (_600 * _583)) * _602;
    float _618 = inversesqrt(dot(vec3(_612, _613, _614), vec3(_612, _613, _614)));
    uvec2 _633 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_0, int(0u)));
    bool _638 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _691;
    if (_638)
    {
        float _649 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _655 = (_570 * _555) - (_567 * _558);
        float _658 = (_564 * _558) - (_570 * _552);
        float _661 = (_567 * _552) - (_564 * _555);
        float _688 = ((log2((((float(_633.y) * 0.5) * float(_633.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_658 * _658) + (_661 * _661)) + (_655 * _655)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_649 * gl_WorldRayDirectionEXT.x, _649 * gl_WorldRayDirectionEXT.y, _649 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _691 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    }
    else
    {
        _691 = 0.0;
    }
    vec4 _695 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _571) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _572) + cbTextureTilingScale._m0[1u].w), _691);
    float _699 = _695.z;
    float _700 = _695.w;
    float _706 = exp2(log2(_699 * 22.0) * 260.0);
    float _707 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _708 = isnan(1.0) ? _707 : (isnan(_707) ? 1.0 : min(_707, 1.0));
    float _713 = exp2(log2(1.0 - _700) * 10.0);
    uvec2 _725 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_3, int(0u)));
    float _776;
    if (_638)
    {
        float _736 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _742 = (_570 * _555) - (_567 * _558);
        float _745 = (_564 * _558) - (_570 * _552);
        float _748 = (_567 * _552) - (_564 * _555);
        float _774 = ((log2((((float(_725.y) * 0.5) * float(_725.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_745 * _745) + (_748 * _748)) + (_742 * _742)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_736 * gl_WorldRayDirectionEXT.x, _736 * gl_WorldRayDirectionEXT.y, _736 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _776 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    }
    else
    {
        _776 = 0.0;
    }
    vec4 _779 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _571) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _572) + cbTextureTilingScale._m0[4u].w), _776);
    uvec2 _804 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_1, int(0u)));
    float _855;
    if (_638)
    {
        float _815 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _821 = (_570 * _555) - (_567 * _558);
        float _824 = (_564 * _558) - (_570 * _552);
        float _827 = (_567 * _552) - (_564 * _555);
        float _853 = ((log2((((float(_804.y) * 0.5) * float(_804.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_824 * _824) + (_827 * _827)) + (_821 * _821)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_815 * gl_WorldRayDirectionEXT.x, _815 * gl_WorldRayDirectionEXT.y, _815 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _855 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    }
    else
    {
        _855 = 0.0;
    }
    vec4 _857 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _571) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _572) + cbTextureTilingScale._m0[2u].w), _855);
    float _868 = cbMtdParam._m0[9u].x * _857.x;
    float _869 = cbMtdParam._m0[9u].y * _857.y;
    float _870 = cbMtdParam._m0[9u].z * _857.z;
    float _877 = (((cbMtdParam._m0[10u].x * _779.x) - _868) * _713) + _868;
    float _878 = (((cbMtdParam._m0[10u].y * _779.y) - _869) * _713) + _869;
    float _879 = (((cbMtdParam._m0[10u].z * _779.z) - _870) * _713) + _870;
    float _882 = exp2(log2(_700) * 10.0);
    uvec2 _894 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_2, int(0u)));
    float _945;
    if (_638)
    {
        float _905 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _911 = (_570 * _555) - (_567 * _558);
        float _914 = (_564 * _558) - (_570 * _552);
        float _917 = (_567 * _552) - (_564 * _555);
        float _943 = ((log2((((float(_894.y) * 0.5) * float(_894.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_914 * _914) + (_917 * _917)) + (_911 * _911)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_905 * gl_WorldRayDirectionEXT.x, _905 * gl_WorldRayDirectionEXT.y, _905 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _945 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
    }
    else
    {
        _945 = 0.0;
    }
    vec4 _947 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _571) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _572) + cbTextureTilingScale._m0[3u].w), _945);
    uvec2 _982 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_4, int(0u)));
    float _1033;
    if (_638)
    {
        float _993 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _999 = (_570 * _555) - (_567 * _558);
        float _1002 = (_564 * _558) - (_570 * _552);
        float _1005 = (_567 * _552) - (_564 * _555);
        float _1031 = ((log2((((float(_982.y) * 0.5) * float(_982.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1002 * _1002) + (_1005 * _1005)) + (_999 * _999)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_993 * gl_WorldRayDirectionEXT.x, _993 * gl_WorldRayDirectionEXT.y, _993 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1033 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    }
    else
    {
        _1033 = 0.0;
    }
    vec4 _1035 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _571) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _572) + cbTextureTilingScale._m0[5u].w), _1033);
    float _1045 = cbMtdParam._m0[12u].x * _1035.x;
    float _1046 = cbMtdParam._m0[12u].y * _1035.y;
    float _1047 = cbMtdParam._m0[12u].z * _1035.z;
    uvec2 _1068 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_7, int(0u)));
    float _1119;
    if (_638)
    {
        float _1079 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1085 = (_570 * _555) - (_567 * _558);
        float _1088 = (_564 * _558) - (_570 * _552);
        float _1091 = (_567 * _552) - (_564 * _555);
        float _1117 = ((log2((((float(_1068.y) * 0.5) * float(_1068.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1088 * _1088) + (_1091 * _1091)) + (_1085 * _1085)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1079 * gl_WorldRayDirectionEXT.x, _1079 * gl_WorldRayDirectionEXT.y, _1079 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1119 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    }
    else
    {
        _1119 = 0.0;
    }
    vec4 _1121 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _571) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _572) + cbTextureTilingScale._m0[0u].w), _1119);
    float _1128 = ((((((((cbMtdParam._m0[11u].x * _947.x) - _877) * _882) + _877) - _1045) * _708) + _1045) * 4.55000019073486328125) * _1121.x;
    float _1130 = ((((((((cbMtdParam._m0[11u].y * _947.y) - _878) * _882) + _878) - _1046) * _708) + _1046) * 4.55000019073486328125) * _1121.y;
    float _1132 = ((((((((cbMtdParam._m0[11u].z * _947.z) - _879) * _882) + _879) - _1047) * _708) + _1047) * 4.55000019073486328125) * _1121.z;
    uvec2 _1148 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_5, int(0u)));
    float _1199;
    if (_638)
    {
        float _1159 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1165 = (_570 * _555) - (_567 * _558);
        float _1168 = (_564 * _558) - (_570 * _552);
        float _1171 = (_567 * _552) - (_564 * _555);
        float _1197 = ((log2((((float(_1148.y) * 0.5) * float(_1148.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1168 * _1168) + (_1171 * _1171)) + (_1165 * _1165)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1159 * gl_WorldRayDirectionEXT.x, _1159 * gl_WorldRayDirectionEXT.y, _1159 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1199 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    }
    else
    {
        _1199 = 0.0;
    }
    vec4 _1201 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _571) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _572) + cbTextureTilingScale._m0[6u].w), _1199);
    uvec2 _1222 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_6, int(0u)));
    float _1273;
    if (_638)
    {
        float _1233 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1239 = (_570 * _555) - (_567 * _558);
        float _1242 = (_564 * _558) - (_570 * _552);
        float _1245 = (_567 * _552) - (_564 * _555);
        float _1271 = ((log2((((float(_1222.y) * 0.5) * float(_1222.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1242 * _1242) + (_1245 * _1245)) + (_1239 * _1239)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1233 * gl_WorldRayDirectionEXT.x, _1233 * gl_WorldRayDirectionEXT.y, _1233 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1273 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
    }
    else
    {
        _1273 = 0.0;
    }
    vec4 _1275 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _571) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _572) + cbTextureTilingScale._m0[7u].w), _1273);
    float _1277 = _1275.x;
    float _1278 = _1275.y;
    float _1281 = cbMtdParam._m0[13u].x + _1275.z;
    float _1284 = (((cbMtdParam._m0[13u].y + _1201.z) - _1281) * _713) + _1281;
    uvec2 _1296 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_8, int(0u)));
    float _1347;
    if (_638)
    {
        float _1307 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1313 = (_570 * _555) - (_567 * _558);
        float _1316 = (_564 * _558) - (_570 * _552);
        float _1319 = (_567 * _552) - (_564 * _555);
        float _1345 = ((log2((((float(_1296.y) * 0.5) * float(_1296.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1316 * _1316) + (_1319 * _1319)) + (_1313 * _1313)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1307 * gl_WorldRayDirectionEXT.x, _1307 * gl_WorldRayDirectionEXT.y, _1307 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1347 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
    }
    else
    {
        _1347 = 0.0;
    }
    vec4 _1349 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _571) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _572) + cbTextureTilingScale._m0[8u].w), _1347);
    uvec2 _1372 = uvec2(textureSize(C_Detail4Blend_snp_0_Texture2D_9, int(0u)));
    float _1376 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1377 = _1376 * gl_WorldRayDirectionEXT.x;
    float _1378 = _1376 * gl_WorldRayDirectionEXT.y;
    float _1379 = _1376 * gl_WorldRayDirectionEXT.z;
    float _1423;
    if (_638)
    {
        float _1389 = (_570 * _555) - (_567 * _558);
        float _1392 = (_564 * _558) - (_570 * _552);
        float _1395 = (_567 * _552) - (_564 * _555);
        float _1421 = ((log2((((float(_1372.y) * 0.5) * float(_1372.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1392 * _1392) + (_1395 * _1395)) + (_1389 * _1389)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1377, _1378, _1379), vec3(_583, _585, _586))));
        _1423 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    }
    else
    {
        _1423 = 0.0;
    }
    vec4 _1425 = textureLod(sampler2D(C_Detail4Blend_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _571) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _572) + cbTextureTilingScale._m0[9u].w), _1423);
    float _1427 = _1425.x;
    float _1428 = _1425.y;
    float _1431 = cbMtdParam._m0[13u].z + _1425.z;
    float _1434 = ((((_699 * 2.0) * ((((_1349.z - _1284) + cbMtdParam._m0[14u].y) * _882) + _1284)) - _1431) * _708) + _1431;
    float _1445 = ((_1201.x - _1277) * _713) + _1277;
    float _1446 = ((_1201.y - _1278) * _713) + _1278;
    float _1461 = (((((((_1349.x - _1445) * _882) + _1445) - _1427) * _708) + _1427) * 2.0) + (-1.0);
    float _1462 = (((((((_1349.y - _1446) * _882) + _1446) - _1428) * _708) + _1428) * 2.0) + (-1.0);
    float _1463 = dot(vec2(_1461, _1462), vec2(_1461, _1462));
    float _2013 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
    float _1468 = sqrt(1.0 - (isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0))));
    float _1471 = _1461 + (cbMtdParam._m0[13u].w * ((_695.x * 2.0) + (-1.0)));
    float _1472 = _1462 + (cbMtdParam._m0[13u].w * ((_695.y * 2.0) + (-1.0)));
    float _1475 = fma(_1468, _583, fma(_1472, _599, (_618 * _612) * _1471));
    float _1478 = fma(_1468, _585, fma(_1472, _600, (_618 * _613) * _1471));
    float _1481 = fma(_1468, _586, fma(_1472, _601, (_618 * _614) * _1471));
    float _1485 = inversesqrt(dot(vec3(_1475, _1478, _1481), vec3(_1475, _1478, _1481)));
    float _1486 = _1485 * _1475;
    float _1487 = _1485 * _1478;
    float _1488 = _1485 * _1481;
    float _1500 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1501 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1502 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1503 = (-0.0) - _1377;
    float _1505 = (-0.0) - _1378;
    float _1506 = (-0.0) - _1379;
    float _1512 = float(gl_LaunchIDEXT.x);
    float _1513 = float(gl_LaunchIDEXT.y);
    float _1516 = float(gl_LaunchSizeEXT.x);
    float _1530 = fract(fract(sin(dot(vec2(_1512 / _1516, _1513 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1543 = fract(fract(sin(dot(vec2((_1512 + 128.0) / _1516, (_1513 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1544 = 1.0 - cbMtdParam._m0[14u].x;
    float _1545 = _1128 * _1544;
    float _1546 = _1130 * _1544;
    float _1547 = _1132 * _1544;
    float _1552 = (_1128 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1553 = (_1130 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1554 = (_1132 + (-0.039999999105930328369140625)) * cbMtdParam._m0[14u].x;
    float _1555 = _1552 + 0.039999999105930328369140625;
    float _1557 = _1553 + 0.039999999105930328369140625;
    float _1558 = _1554 + 0.039999999105930328369140625;
    _69._m0 = 1u;
    uvec4 _1568 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1569 = _1568.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1569, _1568.w, _1569, vec3(_1500, _1501, _1502), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    if (_69._m0 == 0u)
    {
        float _1589 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1486, _1487, _1488));
        float _2024 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1592 = isnan(1.0) ? _2024 : (isnan(_2024) ? 1.0 : min(_2024, 1.0));
        float _1611 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1434) * 0.949999988079071044921875);
        float _1612 = _1611 * _1611;
        float _1613 = g_sceneCB._m0[4u].x - _1377;
        float _1614 = g_sceneCB._m0[4u].y - _1378;
        float _1615 = g_sceneCB._m0[4u].z - _1379;
        float _1619 = inversesqrt(dot(vec3(_1613, _1614, _1615), vec3(_1613, _1614, _1615)));
        float _1620 = _1619 * _1613;
        float _1621 = _1619 * _1614;
        float _1622 = _1619 * _1615;
        float _1623 = dot(vec3(_1486, _1487, _1488), vec3(g_sceneCB._m0[4u].xyz));
        float _2035 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1626 = isnan(1.0) ? _2035 : (isnan(_2035) ? 1.0 : min(_2035, 1.0));
        float _1627 = dot(vec3(_1486, _1487, _1488), vec3(_1503, _1505, _1506));
        float _2046 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1630 = isnan(1.0) ? _2046 : (isnan(_2046) ? 1.0 : min(_2046, 1.0));
        float _1631 = dot(vec3(_1486, _1487, _1488), vec3(_1620, _1621, _1622));
        float _2057 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1634 = isnan(1.0) ? _2057 : (isnan(_2057) ? 1.0 : min(_2057, 1.0));
        float _1635 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1620, _1621, _1622));
        float _2068 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1639 = _1612 * _1612;
        float _1643 = ((_1634 * _1634) * (_1639 + (-1.0))) + 1.0;
        float _1652 = exp2(log2(1.0 - (isnan(1.0) ? _2068 : (isnan(_2068) ? 1.0 : min(_2068, 1.0)))) * 5.0);
        float _1663 = 1.0 - _1612;
        float _1674 = (0.5 / (((_1630 * ((_1626 * _1663) + _1612)) + 9.9999999392252902907785028219223e-09) + (((_1630 * _1663) + _1612) * _1626))) * _1626;
        float _2079 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1676 = (isnan(1.0) ? _2079 : (isnan(_2079) ? 1.0 : min(_2079, 1.0))) * (_1639 / ((_1643 * _1643) * 3.141590118408203125));
        _1683 = ((_1545 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1592;
        _1684 = ((_1546 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1592;
        _1685 = ((_1547 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1592;
        _1686 = (((_1652 * (0.959999978542327880859375 - _1552)) + _1555) * g_sceneCB._m0[5u].x) * _1676;
        _1687 = (((_1652 * (0.959999978542327880859375 - _1553)) + _1557) * g_sceneCB._m0[5u].y) * _1676;
        _1688 = (((_1652 * (0.959999978542327880859375 - _1554)) + _1558) * g_sceneCB._m0[5u].z) * _1676;
    }
    else
    {
        _1683 = 0.0;
        _1684 = 0.0;
        _1685 = 0.0;
        _1686 = 0.0;
        _1687 = 0.0;
        _1688 = 0.0;
    }
    bool _1690 = abs(_1487) < 0.89999997615814208984375;
    float _1692 = float(_1690);
    float _1693 = _1690 ? 0.0 : 1.0;
    float _1696 = (_1692 * _1488) - (_1693 * _1487);
    float _1697 = _1693 * _1486;
    float _1699 = (-0.0) - (_1486 * _1692);
    float _1703 = inversesqrt(dot(vec3(_1696, _1697, _1699), vec3(_1696, _1697, _1699)));
    float _1704 = _1696 * _1703;
    float _1705 = _1697 * _1703;
    float _1706 = _1703 * _1699;
    float _1709 = (_1705 * _1488) - (_1706 * _1487);
    float _1712 = (_1706 * _1486) - (_1704 * _1488);
    float _1715 = (_1704 * _1487) - (_1705 * _1486);
    float _1717;
    float _1725;
    float _1716 = 0.0;
    uint _1718 = 0u;
    float _1722;
    bool _1724;
    for (;;)
    {
        _1722 = (float(_1718) + _1530) * 0.03125;
        _1724 = _1718 == 0u;
        float frontier_phi_59_pred;
        if (_1724)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _1866;
            float _1867;
            uint _1869;
            _1866 = 0.0;
            _1867 = 0.5;
            _1869 = _1718;
            float _1726;
            for (;;)
            {
                _1726 = ((_1869 & 1u) != 0u) ? (_1867 + _1866) : _1866;
                uint _1870 = _1869 >> 1u;
                if (_1870 == 0u)
                {
                    break;
                }
                else
                {
                    _1866 = _1726;
                    _1867 *= 0.5;
                    _1869 = _1870;
                }
            }
            frontier_phi_59_pred = _1726;
        }
        _1725 = frontier_phi_59_pred;
        float _1727 = _1725 + _1543;
        float _1731 = sqrt(_1722);
        float _1732 = ((_1727 > 1.0) ? (_1727 + (-1.0)) : _1727) * 6.283185482025146484375;
        float _1735 = cos(_1732) * _1731;
        float _1737 = sin(_1732) * _1731;
        float _1739 = sqrt(1.0 - _1722);
        float _1752 = ((_1739 * _1486) + (_1735 * _1709)) + (_1737 * _1704);
        float _1753 = ((_1739 * _1487) + (_1735 * _1712)) + (_1737 * _1705);
        float _1754 = ((_1739 * _1488) + (_1735 * _1715)) + (_1737 * _1706);
        _68._m0 = 1u;
        uvec4 _1758 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1759 = _1758.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1759, _1758.w, _1759, vec3(_1500, _1501, _1502), 9.9999997473787516355514526367188e-05, vec3(_1752, _1753, _1754), 10000.0, 1);
        float _1765 = dot(vec3(_1486, _1487, _1488), vec3(_1752, _1753, _1754));
        float _2090 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1768 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _1717 = ((float(_68._m0 == 0u) * _1768) / (_1768 * 0.3183098733425140380859375)) + _1716;
        uint _1719 = _1718 + 1u;
        if (_1719 == 32u)
        {
            break;
        }
        else
        {
            _1716 = _1717;
            _1718 = _1719;
            continue;
        }
    }
    float _1776 = _1717 * 0.009947183541953563690185546875;
    float _1781 = dot(vec3(_1377, _1378, _1379), vec3(_1486, _1487, _1488)) * 2.0;
    vec4 _1795 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1377 - (_1781 * _1486), _1378 - (_1781 * _1487), _1379 - (_1781 * _1488)), 4.0 - (_1434 * 4.0));
    float _1800 = dot(vec3(_1503, _1505, _1506), vec3(_1486, _1487, _1488));
    float _2101 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
    float _1810 = exp2(log2(1.0 - (isnan(1.0) ? _2101 : (isnan(_2101) ? 1.0 : min(_2101, 1.0)))) * 5.0);
    vec4 _1822 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1486, _1487, _1488), 0.0);
    float _1833 = (_1686 + _1683) + (((_1822.x * _1545) + (((_1810 * (0.959999978542327880859375 - _1552)) + _1555) * _1795.x)) * _1776);
    float _1837 = (_1687 + _1684) + (((_1822.y * _1546) + (((_1810 * (0.959999978542327880859375 - _1553)) + _1557) * _1795.y)) * _1776);
    float _1841 = (_1688 + _1685) + (((_1822.z * _1547) + (((_1810 * (0.959999978542327880859375 - _1554)) + _1558) * _1795.z)) * _1776);
    float _2112 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
    float _2123 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
    float _2134 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
    bool _1849 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1860;
    _1860.x = _1849 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2112 : (isnan(_2112) ? 1.0 : min(_2112, 1.0)));
    _1860.y = _1849 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2123 : (isnan(_2123) ? 1.0 : min(_2123, 1.0)));
    _1860.z = _1849 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2134 : (isnan(_2134) ? 1.0 : min(_2134, 1.0)));
    payload._m0 = _1860;
}


