#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1805;

void main()
{
    float _77 = float(gl_LaunchSizeEXT.y);
    float _107 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _108 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _116 = sqrt(((_108 * _108) + (_107 * _107)) + (_109 * _109)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _77)))));
    uvec4 _127 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _128 = _127.y;
    uint _168;
    uint _170;
    uint _171;
    if (_127.x == 0u)
    {
        uint _136 = (_128 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _145 = uvec3(texelFetch(l_geomIndexBuffer, int(_136)).x, texelFetch(l_geomIndexBuffer, int(_136 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_136 + 2u)).x);
        _168 = _145.x;
        _170 = _145.y;
        _171 = _145.z;
    }
    else
    {
        uint _149 = uint(gl_PrimitiveID) * 6u;
        uint _151 = _149 & 4294967292u;
        uint _154 = (_128 + _151) >> 2u;
        uvec2 _161 = uvec2(texelFetch(l_geomIndexBuffer, int(_154)).x, texelFetch(l_geomIndexBuffer, int(_154 + 1u)).x);
        uint _162 = _161.x;
        uint _163 = _161.y;
        uint _165 = _162 >> 16u;
        uint _166 = _163 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_151 == _149)
        {
            frontier_phi_3_2_ladder = _165;
            frontier_phi_3_2_ladder_1 = _162 & 65535u;
            frontier_phi_3_2_ladder_2 = _166;
        }
        else
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _165;
            frontier_phi_3_2_ladder_2 = _163 >> 16u;
        }
        _168 = frontier_phi_3_2_ladder_1;
        _170 = frontier_phi_3_2_ladder;
        _171 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _175 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _176 = _175.x;
    uint _177 = _175.z;
    bool _178 = _177 != 0u;
    bool _180 = _127.w == 0u;
    bool _181 = _178 || _180;
    uint _182 = _176 * _168;
    uint _183 = _182 + 12u;
    uint _207;
    uint _208;
    uint _209;
    uint _210;
    if (_181)
    {
        uvec4 _186 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _187 = _186.x;
        _207 = _187 & 255u;
        _208 = (_187 >> 8u) & 255u;
        _209 = (_187 >> 16u) & 255u;
        _210 = 16u;
    }
    else
    {
        uint _195 = _183 >> 2u;
        uvec2 _201 = uvec2(texelFetch(l_geomAttrib_0, int(_195)).x, texelFetch(l_geomAttrib_0, int(_195 + 1u)).x);
        uint _202 = _201.x;
        _207 = _202 & 65535u;
        _208 = _202 >> 16u;
        _209 = _201.y & 65535u;
        _210 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_210 + _182) >> 2u));
    uint _219 = _218.x;
    bool _233 = _177 == 0u;
    uint _234;
    if (_233)
    {
        _234 = _210 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_180)
        {
            frontier_phi_9_10_ladder = _210 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _210 + 12u;
        }
        _234 = frontier_phi_9_10_ladder;
    }
    uint _238 = _178 ? (_234 + 4u) : _234;
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_182 + 4u) + _238) >> 2u));
    uint _243 = _242.x;
    float _247 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_243) >> int(16u))));
    uint _256 = _176 * _170;
    uint _257 = _256 + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_181)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 16u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 20u;
    }
    uvec4 _287 = texelFetch(l_geomAttrib_0, int((_281 + _256) >> 2u));
    uint _288 = _287.x;
    uint _300;
    if (_233)
    {
        _300 = _281 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_180)
        {
            frontier_phi_16_17_ladder = _281 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _281 + 12u;
        }
        _300 = frontier_phi_16_17_ladder;
    }
    uint _304 = _178 ? (_300 + 4u) : _300;
    uvec4 _308 = texelFetch(l_geomAttrib_0, int(((_256 + 4u) + _304) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _322 = _176 * _171;
    uint _323 = _322 + 12u;
    uint _344;
    uint _345;
    uint _346;
    uint _347;
    if (_181)
    {
        uvec4 _325 = texelFetch(l_geomAttrib_0, int(_323 >> 2u));
        uint _326 = _325.x;
        _344 = _326 & 255u;
        _345 = (_326 >> 8u) & 255u;
        _346 = (_326 >> 16u) & 255u;
        _347 = 16u;
    }
    else
    {
        uint _332 = _323 >> 2u;
        uvec2 _338 = uvec2(texelFetch(l_geomAttrib_0, int(_332)).x, texelFetch(l_geomAttrib_0, int(_332 + 1u)).x);
        uint _339 = _338.x;
        _344 = _339 & 65535u;
        _345 = _339 >> 16u;
        _346 = _338.y & 65535u;
        _347 = 20u;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int((_347 + _322) >> 2u));
    uint _354 = _353.x;
    uint _366;
    if (_233)
    {
        _366 = _347 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_180)
        {
            frontier_phi_23_24_ladder = _347 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _347 + 12u;
        }
        _366 = frontier_phi_23_24_ladder;
    }
    uint _370 = _178 ? (_366 + 4u) : _366;
    uvec4 _374 = texelFetch(l_geomAttrib_0, int(((_322 + 4u) + _370) >> 2u));
    uint _375 = _374.x;
    float _379 = float(int(uint(int(_375 << 16u) >> int(16u))));
    float _380 = float(int(uint(int(_375) >> int(16u))));
    bool _389 = _127.z == 0u;
    float _425;
    float _426;
    float _427;
    if (_389)
    {
        uint _392 = _168 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _168 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_389)
    {
        uint _430 = _170 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _170 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_389)
    {
        uint _468 = _171 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _171 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _506 = (1.0 - hit._m0.x) - hit._m0.y;
    float _547 = (_313 - _247) * 0.00048828125;
    float _549 = (_314 - _248) * 0.00048828125;
    float _552 = (_379 - _247) * 0.00048828125;
    float _553 = (_380 - _248) * 0.00048828125;
    float _575 = _463 - _425;
    float _576 = _464 - _426;
    float _577 = _465 - _427;
    float _580 = fma(_577, gl_ObjectToWorldEXT[2u].x, fma(_576, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _575));
    float _583 = fma(_577, gl_ObjectToWorldEXT[2u].y, fma(_576, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _575));
    float _586 = fma(_577, gl_ObjectToWorldEXT[2u].z, fma(_576, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _575));
    float _587 = _501 - _425;
    float _588 = _502 - _426;
    float _589 = _503 - _427;
    float _592 = fma(_589, gl_ObjectToWorldEXT[2u].x, fma(_588, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _587));
    float _595 = fma(_589, gl_ObjectToWorldEXT[2u].y, fma(_588, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _587));
    float _598 = fma(_589, gl_ObjectToWorldEXT[2u].z, fma(_588, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _587));
    float _599 = (((_313 * hit._m0.x) + (_247 * _506)) + (_379 * hit._m0.y)) * 0.00048828125;
    float _600 = (((_314 * hit._m0.x) + (_248 * _506)) + (_380 * hit._m0.y)) * 0.00048828125;
    float _604 = (((float(_207) * _506) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _607 = (((float(_208) * _506) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_345) * hit._m0.y);
    float _610 = (((float(_209) * _506) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _611 = _604 * 0.0078740157186985015869140625;
    float _613 = _607 * 0.0078740157186985015869140625;
    float _614 = _610 * 0.0078740157186985015869140625;
    float _627 = ((((float(_219 & 255u) * _506) + (-127.0)) + (float(_288 & 255u) * hit._m0.x)) + (float(_354 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _628 = ((((float((_219 >> 8u) & 255u) * _506) + (-127.0)) + (float((_288 >> 8u) & 255u) * hit._m0.x)) + (float((_354 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float((_219 >> 16u) & 255u) * _506) + (-127.0)) + (float((_288 >> 16u) & 255u) * hit._m0.x)) + (float((_354 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float(_219 >> 24u) * _506) + (-127.0)) + (float(_288 >> 24u) * hit._m0.x)) + (float(_354 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _640 = ((_628 * _614) - (_629 * _613)) * _630;
    float _641 = ((_629 * _611) - (_627 * _614)) * _630;
    float _642 = ((_627 * _613) - (_628 * _611)) * _630;
    float _646 = inversesqrt(dot(vec3(_640, _641, _642), vec3(_640, _641, _642)));
    float _647 = _646 * _640;
    float _648 = _646 * _641;
    float _649 = _646 * _642;
    float _670 = (1.0 - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].w);
    float _1895 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _672 = isnan(1.0) ? _1895 : (isnan(_1895) ? 1.0 : min(_1895, 1.0));
    uvec2 _684 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0, int(0u)));
    bool _689 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _741;
    if (_689)
    {
        float _700 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _706 = (_598 * _583) - (_595 * _586);
        float _709 = (_592 * _586) - (_598 * _580);
        float _712 = (_595 * _580) - (_592 * _583);
        float _739 = ((log2((((float(_684.y) * 0.5) * float(_684.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_709 * _709) + (_712 * _712)) + (_706 * _706)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_700 * gl_WorldRayDirectionEXT.x, _700 * gl_WorldRayDirectionEXT.y, _700 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _741 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    }
    else
    {
        _741 = 0.0;
    }
    vec4 _745 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _599) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _600) + cbTextureTilingScale._m0[0u].w), _741);
    float _747 = _745.x;
    float _748 = _745.y;
    float _749 = _745.z;
    uvec2 _761 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7, int(0u)));
    float _812;
    if (_689)
    {
        float _772 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _778 = (_598 * _583) - (_595 * _586);
        float _781 = (_592 * _586) - (_598 * _580);
        float _784 = (_595 * _580) - (_592 * _583);
        float _810 = ((log2((((float(_761.y) * 0.5) * float(_761.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_781 * _781) + (_784 * _784)) + (_778 * _778)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_772 * gl_WorldRayDirectionEXT.x, _772 * gl_WorldRayDirectionEXT.y, _772 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _812 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    }
    else
    {
        _812 = 0.0;
    }
    vec4 _814 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _599) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _600) + cbTextureTilingScale._m0[6u].w), _812);
    uvec2 _840 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5, int(0u)));
    float _891;
    if (_689)
    {
        float _851 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _857 = (_598 * _583) - (_595 * _586);
        float _860 = (_592 * _586) - (_598 * _580);
        float _863 = (_595 * _580) - (_592 * _583);
        float _889 = ((log2((((float(_840.y) * 0.5) * float(_840.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_860 * _860) + (_863 * _863)) + (_857 * _857)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_851 * gl_WorldRayDirectionEXT.x, _851 * gl_WorldRayDirectionEXT.y, _851 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _891 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    }
    else
    {
        _891 = 0.0;
    }
    vec4 _893 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _599) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _600) + cbTextureTilingScale._m0[4u].w), _891);
    float _895 = _893.x;
    float _896 = _893.y;
    uvec2 _909 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_6, int(0u)));
    float _960;
    if (_689)
    {
        float _920 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _926 = (_598 * _583) - (_595 * _586);
        float _929 = (_592 * _586) - (_598 * _580);
        float _932 = (_595 * _580) - (_592 * _583);
        float _958 = ((log2((((float(_909.y) * 0.5) * float(_909.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_929 * _929) + (_932 * _932)) + (_926 * _926)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_920 * gl_WorldRayDirectionEXT.x, _920 * gl_WorldRayDirectionEXT.y, _920 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _960 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    }
    else
    {
        _960 = 0.0;
    }
    vec4 _962 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _599) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _600) + cbTextureTilingScale._m0[5u].w), _960);
    float _1926 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _966 = isnan(1.0) ? _1926 : (isnan(_1926) ? 1.0 : min(_1926, 1.0));
    float _968 = 3.0 - (_966 * 2.0);
    float _970 = _966 * _966;
    float _984 = (((_814.x - _747) * _672) + _747) + (((_895 + (-0.5)) + ((_970 * (_962.x - _895)) * _968)) * cbMtdParam._m0[12u].y);
    float _985 = (((_814.y - _748) * _672) + _748) + (((_896 + (-0.5)) + ((_970 * (_962.y - _896)) * _968)) * cbMtdParam._m0[12u].y);
    float _988 = (_984 * 2.0) + (-1.0);
    float _990 = (_985 * 2.0) + (-1.0);
    float _991 = dot(vec2(_988, _990), vec2(_988, _990));
    float _1937 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _996 = sqrt(1.0 - (isnan(1.0) ? _1937 : (isnan(_1937) ? 1.0 : min(_1937, 1.0))));
    float _999 = fma(_996, _611, fma(_990, _627, _988 * _647));
    float _1002 = fma(_996, _613, fma(_990, _628, _988 * _648));
    float _1005 = fma(_996, _614, fma(_990, _629, _988 * _649));
    float _1014 = exp2(log2(inversesqrt(dot(vec3(_999, _1002, _1005), vec3(_999, _1002, _1005))) * _1002) * cbMtdParam._m0[11u].y) * cbMtdParam._m0[13u].x;
    float _1948 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _1015 = isnan(1.0) ? _1948 : (isnan(_1948) ? 1.0 : min(_1948, 1.0));
    float _1017 = 1.0 - _1015;
    float _1021 = (cbMtdParam._m0[11u].w * ((_1015 + 1.0) - _1017)) + _1017;
    float _1022 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _1024 = (isnan(1.0) ? _1022 : (isnan(_1022) ? 1.0 : min(_1022, 1.0))) + ((((float(texelFetch(l_geomAttrib_0, int(((_256 + 8u) + _304) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_182 + 8u) + _238) >> 2u)).x & 255u) * _506)) + (float(texelFetch(l_geomAttrib_0, int(((_322 + 8u) + _370) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1025 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    uvec2 _1039 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4, int(0u)));
    float _1090;
    if (_689)
    {
        float _1050 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1056 = (_598 * _583) - (_595 * _586);
        float _1059 = (_592 * _586) - (_598 * _580);
        float _1062 = (_595 * _580) - (_592 * _583);
        float _1088 = ((log2((((float(_1039.y) * 0.5) * float(_1039.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1059 * _1059) + (_1062 * _1062)) + (_1056 * _1056)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1050 * gl_WorldRayDirectionEXT.x, _1050 * gl_WorldRayDirectionEXT.y, _1050 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1090 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    }
    else
    {
        _1090 = 0.0;
    }
    float _1097 = ((1.0 - (isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0)))) * 2.0) - textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _599) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _600) + cbTextureTilingScale._m0[3u].w), _1090).x;
    float _1098 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
    float _1105 = (((1.0 - (isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0)))) * (-1.39999997615814208984375)) * cbMtdParam._m0[11u].x) + 1.0;
    float _1994 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1106 = isnan(1.0) ? _1994 : (isnan(_1994) ? 1.0 : min(_1994, 1.0));
    uvec2 _1124 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2, int(0u)));
    float _1175;
    if (_689)
    {
        float _1135 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1141 = (_598 * _583) - (_595 * _586);
        float _1144 = (_592 * _586) - (_598 * _580);
        float _1147 = (_595 * _580) - (_592 * _583);
        float _1173 = ((log2((((float(_1124.y) * 0.5) * float(_1124.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1144 * _1144) + (_1147 * _1147)) + (_1141 * _1141)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1135 * gl_WorldRayDirectionEXT.x, _1135 * gl_WorldRayDirectionEXT.y, _1135 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1175 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
    }
    else
    {
        _1175 = 0.0;
    }
    vec4 _1178 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _599) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _600) + cbTextureTilingScale._m0[2u].w), _1175);
    float _1180 = _1178.x;
    float _1181 = _1178.y;
    float _1182 = _1178.z;
    uvec2 _1194 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9, int(0u)));
    float _1245;
    if (_689)
    {
        float _1205 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1211 = (_598 * _583) - (_595 * _586);
        float _1214 = (_592 * _586) - (_598 * _580);
        float _1217 = (_595 * _580) - (_592 * _583);
        float _1243 = ((log2((((float(_1194.y) * 0.5) * float(_1194.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1214 * _1214) + (_1217 * _1217)) + (_1211 * _1211)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1205 * gl_WorldRayDirectionEXT.x, _1205 * gl_WorldRayDirectionEXT.y, _1205 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1245 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
    }
    else
    {
        _1245 = 0.0;
    }
    vec4 _1247 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _599) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _600) + cbTextureTilingScale._m0[8u].w), _1245);
    float _1261 = (((_1247.x - _1180) * _672) + _1180) * cbMtdParam._m0[10u].x;
    float _1262 = (((_1247.y - _1181) * _672) + _1181) * cbMtdParam._m0[10u].y;
    float _1263 = (((_1247.z - _1182) * _672) + _1182) * cbMtdParam._m0[10u].z;
    float _1270 = ((cbMtdParam._m0[9u].x - _1261) * _1106) + _1261;
    float _1271 = ((cbMtdParam._m0[9u].y - _1262) * _1106) + _1262;
    float _1272 = ((cbMtdParam._m0[9u].z - _1263) * _1106) + _1263;
    float _1274 = cbMtdParam._m0[12u].z * (((_814.z - _749) * _672) + _749);
    uvec2 _1286 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1, int(0u)));
    float _1337;
    if (_689)
    {
        float _1297 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1303 = (_598 * _583) - (_595 * _586);
        float _1306 = (_592 * _586) - (_598 * _580);
        float _1309 = (_595 * _580) - (_592 * _583);
        float _1335 = ((log2((((float(_1286.y) * 0.5) * float(_1286.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1306 * _1306) + (_1309 * _1309)) + (_1303 * _1303)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1297 * gl_WorldRayDirectionEXT.x, _1297 * gl_WorldRayDirectionEXT.y, _1297 * gl_WorldRayDirectionEXT.z), vec3(_611, _613, _614))));
        _1337 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
    }
    else
    {
        _1337 = 0.0;
    }
    vec4 _1339 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _599) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _600) + cbTextureTilingScale._m0[1u].w), _1337);
    float _1341 = _1339.x;
    float _1342 = _1339.y;
    uvec2 _1354 = uvec2(textureSize(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_8, int(0u)));
    float _1358 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1359 = _1358 * gl_WorldRayDirectionEXT.x;
    float _1360 = _1358 * gl_WorldRayDirectionEXT.y;
    float _1361 = _1358 * gl_WorldRayDirectionEXT.z;
    float _1405;
    if (_689)
    {
        float _1371 = (_598 * _583) - (_595 * _586);
        float _1374 = (_592 * _586) - (_598 * _580);
        float _1377 = (_595 * _580) - (_592 * _583);
        float _1403 = ((log2((((float(_1354.y) * 0.5) * float(_1354.x)) * abs((_553 * _547) - (_552 * _549))) / (sqrt(((_1374 * _1374) + (_1377 * _1377)) + (_1371 * _1371)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_116) / abs(dot(vec3(_1359, _1360, _1361), vec3(_611, _613, _614))));
        _1405 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
    }
    else
    {
        _1405 = 0.0;
    }
    vec4 _1407 = textureLod(sampler2D(M_AMSN_M0_Mb2_Far_AN_Ov_N_Snow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _599) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _600) + cbTextureTilingScale._m0[7u].w), _1405);
    float _1416 = cbMtdParam._m0[11u].z * _1106;
    float _1423 = (_1416 * ((_1341 - _984) + ((_1407.x - _1341) * _672))) + _984;
    float _1424 = (_1416 * ((_1342 - _985) + ((_1407.y - _1342) * _672))) + _985;
    float _1437 = (((((_1423 * cbMtdParam._m0[13u].y) - _1423) * _672) + _1423) * 2.0) + (-1.0);
    float _1438 = (((((_1424 * cbMtdParam._m0[13u].z) - _1424) * _672) + _1424) * 2.0) + (-1.0);
    float _1439 = dot(vec2(_1437, _1438), vec2(_1437, _1438));
    float _2025 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
    float _1444 = sqrt(1.0 - (isnan(1.0) ? _2025 : (isnan(_2025) ? 1.0 : min(_2025, 1.0))));
    float _1447 = fma(_1444, _611, fma(_1438, _627, _1437 * _647));
    float _1450 = fma(_1444, _613, fma(_1438, _628, _1437 * _648));
    float _1453 = fma(_1444, _614, fma(_1438, _629, _1437 * _649));
    float _1457 = inversesqrt(dot(vec3(_1447, _1450, _1453), vec3(_1447, _1450, _1453)));
    float _1458 = _1457 * _1447;
    float _1459 = _1457 * _1450;
    float _1460 = _1457 * _1453;
    float _1472 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1473 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1474 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1475 = (-0.0) - _1359;
    float _1477 = (-0.0) - _1360;
    float _1478 = (-0.0) - _1361;
    float _1484 = float(gl_LaunchIDEXT.x);
    float _1485 = float(gl_LaunchIDEXT.y);
    float _1488 = float(gl_LaunchSizeEXT.x);
    float _1502 = fract(fract(sin(dot(vec2(_1484 / _1488, _1485 / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1515 = fract(fract(sin(dot(vec2((_1484 + 128.0) / _1488, (_1485 + 128.0) / _77), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1525 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1526 = _1525.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1526, _1525.w, _1526, vec3(_1472, _1473, _1474), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    if (_69._m0 == 0u)
    {
        float _1546 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1458, _1459, _1460));
        float _2036 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1549 = isnan(1.0) ? _2036 : (isnan(_2036) ? 1.0 : min(_2036, 1.0));
        float _1568 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1274) * 0.949999988079071044921875);
        float _1569 = _1568 * _1568;
        float _1570 = g_sceneCB._m0[4u].x - _1359;
        float _1571 = g_sceneCB._m0[4u].y - _1360;
        float _1572 = g_sceneCB._m0[4u].z - _1361;
        float _1576 = inversesqrt(dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572)));
        float _1577 = _1576 * _1570;
        float _1578 = _1576 * _1571;
        float _1579 = _1576 * _1572;
        float _1580 = dot(vec3(_1458, _1459, _1460), vec3(g_sceneCB._m0[4u].xyz));
        float _2047 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1583 = isnan(1.0) ? _2047 : (isnan(_2047) ? 1.0 : min(_2047, 1.0));
        float _1584 = dot(vec3(_1458, _1459, _1460), vec3(_1475, _1477, _1478));
        float _2058 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1587 = isnan(1.0) ? _2058 : (isnan(_2058) ? 1.0 : min(_2058, 1.0));
        float _1588 = dot(vec3(_1458, _1459, _1460), vec3(_1577, _1578, _1579));
        float _2069 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1591 = isnan(1.0) ? _2069 : (isnan(_2069) ? 1.0 : min(_2069, 1.0));
        float _1592 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1577, _1578, _1579));
        float _2080 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1596 = _1569 * _1569;
        float _1600 = ((_1591 * _1591) * (_1596 + (-1.0))) + 1.0;
        float _1612 = (exp2(log2(1.0 - (isnan(1.0) ? _2080 : (isnan(_2080) ? 1.0 : min(_2080, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1614 = 1.0 - _1569;
        float _1625 = (0.5 / (((_1587 * ((_1583 * _1614) + _1569)) + 9.9999999392252902907785028219223e-09) + (((_1587 * _1614) + _1569) * _1583))) * _1583;
        float _2091 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1627 = (isnan(1.0) ? _2091 : (isnan(_2091) ? 1.0 : min(_2091, 1.0))) * (_1596 / ((_1600 * _1600) * 3.141590118408203125));
        _1634 = ((_1270 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1549;
        _1635 = ((_1271 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1549;
        _1636 = ((_1272 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1549;
        _1637 = (_1612 * g_sceneCB._m0[5u].x) * _1627;
        _1638 = (_1612 * g_sceneCB._m0[5u].y) * _1627;
        _1639 = (_1612 * g_sceneCB._m0[5u].z) * _1627;
    }
    else
    {
        _1634 = 0.0;
        _1635 = 0.0;
        _1636 = 0.0;
        _1637 = 0.0;
        _1638 = 0.0;
        _1639 = 0.0;
    }
    bool _1641 = abs(_1459) < 0.89999997615814208984375;
    float _1643 = float(_1641);
    float _1644 = _1641 ? 0.0 : 1.0;
    float _1647 = (_1643 * _1460) - (_1644 * _1459);
    float _1648 = _1644 * _1458;
    float _1650 = (-0.0) - (_1458 * _1643);
    float _1654 = inversesqrt(dot(vec3(_1647, _1648, _1650), vec3(_1647, _1648, _1650)));
    float _1655 = _1647 * _1654;
    float _1656 = _1648 * _1654;
    float _1657 = _1654 * _1650;
    float _1660 = (_1656 * _1460) - (_1657 * _1459);
    float _1663 = (_1657 * _1458) - (_1655 * _1460);
    float _1666 = (_1655 * _1459) - (_1656 * _1458);
    float _1668;
    float _1676;
    float _1667 = 0.0;
    uint _1669 = 0u;
    float _1673;
    bool _1675;
    for (;;)
    {
        _1673 = (float(_1669) + _1502) * 0.03125;
        _1675 = _1669 == 0u;
        float frontier_phi_57_pred;
        if (_1675)
        {
            frontier_phi_57_pred = 0.0;
        }
        else
        {
            float _1810;
            float _1811;
            uint _1813;
            _1810 = 0.0;
            _1811 = 0.5;
            _1813 = _1669;
            float _1677;
            for (;;)
            {
                _1677 = ((_1813 & 1u) != 0u) ? (_1811 + _1810) : _1810;
                uint _1814 = _1813 >> 1u;
                if (_1814 == 0u)
                {
                    break;
                }
                else
                {
                    _1810 = _1677;
                    _1811 *= 0.5;
                    _1813 = _1814;
                }
            }
            frontier_phi_57_pred = _1677;
        }
        _1676 = frontier_phi_57_pred;
        float _1678 = _1676 + _1515;
        float _1682 = sqrt(_1673);
        float _1683 = ((_1678 > 1.0) ? (_1678 + (-1.0)) : _1678) * 6.283185482025146484375;
        float _1686 = cos(_1683) * _1682;
        float _1688 = sin(_1683) * _1682;
        float _1690 = sqrt(1.0 - _1673);
        float _1703 = ((_1690 * _1458) + (_1686 * _1660)) + (_1688 * _1655);
        float _1704 = ((_1690 * _1459) + (_1686 * _1663)) + (_1688 * _1656);
        float _1705 = ((_1690 * _1460) + (_1686 * _1666)) + (_1688 * _1657);
        _68._m0 = 1u;
        uvec4 _1709 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1710 = _1709.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1710, _1709.w, _1710, vec3(_1472, _1473, _1474), 9.9999997473787516355514526367188e-05, vec3(_1703, _1704, _1705), 10000.0, 1);
        float _1716 = dot(vec3(_1458, _1459, _1460), vec3(_1703, _1704, _1705));
        float _2102 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1719 = isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0));
        _1668 = ((float(_68._m0 == 0u) * _1719) / (_1719 * 0.3183098733425140380859375)) + _1667;
        uint _1670 = _1669 + 1u;
        if (_1670 == 32u)
        {
            break;
        }
        else
        {
            _1667 = _1668;
            _1669 = _1670;
            continue;
        }
    }
    float _1727 = _1668 * 0.009947183541953563690185546875;
    float _1732 = dot(vec3(_1359, _1360, _1361), vec3(_1458, _1459, _1460)) * 2.0;
    vec4 _1746 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1359 - (_1732 * _1458), _1360 - (_1732 * _1459), _1361 - (_1732 * _1460)), 4.0 - (_1274 * 4.0));
    float _1751 = dot(vec3(_1475, _1477, _1478), vec3(_1458, _1459, _1460));
    float _2113 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
    float _1760 = (exp2(log2(1.0 - (isnan(1.0) ? _2113 : (isnan(_2113) ? 1.0 : min(_2113, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1766 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1458, _1459, _1460), 0.0);
    float _1777 = (_1637 + _1634) + (((_1766.x * _1270) + (_1760 * _1746.x)) * _1727);
    float _1781 = (_1638 + _1635) + (((_1766.y * _1271) + (_1760 * _1746.y)) * _1727);
    float _1785 = (_1639 + _1636) + (((_1766.z * _1272) + (_1760 * _1746.z)) * _1727);
    float _2124 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
    float _2135 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
    float _2146 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
    bool _1793 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1804;
    _1804.x = _1793 ? ((_604 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0)));
    _1804.y = _1793 ? ((_607 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2135 : (isnan(_2135) ? 1.0 : min(_2135, 1.0)));
    _1804.z = _1793 ? ((_610 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0)));
    payload._m0 = _1804;
}


