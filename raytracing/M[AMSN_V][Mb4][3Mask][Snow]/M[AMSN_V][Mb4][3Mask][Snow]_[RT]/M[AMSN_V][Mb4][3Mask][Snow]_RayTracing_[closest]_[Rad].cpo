#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _62
{
    vec3 _m0;
};

struct _66
{
    vec2 _m0;
};

struct _69
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(location = 0) rayPayloadInEXT _62 payload;
hitAttributeEXT _66 hit;
layout(location = 1) rayPayloadEXT _69 _71;
layout(location = 2) rayPayloadEXT _69 _72;

vec3 _2086;

void main()
{
    float _80 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _80)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _165 & 65535u;
            frontier_phi_3_2_ladder_2 = _169;
        }
        else
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _166 >> 16u;
        }
        _171 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
        _174 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _185 = _179 * _171;
    uint _186 = _185 + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 16u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 20u;
    }
    uvec4 _221 = texelFetch(l_geomAttrib_0, int((_213 + _185) >> 2u));
    uint _222 = _221.x;
    bool _236 = _180 == 0u;
    uint _237;
    if (_236)
    {
        _237 = _213 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 12u;
        }
        _237 = frontier_phi_9_10_ladder;
    }
    uint _241 = _181 ? (_237 + 4u) : _237;
    uvec4 _245 = texelFetch(l_geomAttrib_0, int(((_185 + 4u) + _241) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uvec4 _255 = texelFetch(l_geomAttrib_0, int(((_185 + 8u) + _241) >> 2u));
    uint _256 = _255.x;
    uint _265 = _179 * _173;
    uint _266 = _265 + 12u;
    uint _287;
    uint _288;
    uint _289;
    uint _290;
    if (_184)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_266 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
        _290 = 16u;
    }
    else
    {
        uint _275 = _266 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
        _290 = 20u;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int((_290 + _265) >> 2u));
    uint _297 = _296.x;
    uint _309;
    if (_236)
    {
        _309 = _290 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _290 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _290 + 12u;
        }
        _309 = frontier_phi_16_17_ladder;
    }
    uint _313 = _181 ? (_309 + 4u) : _309;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_265 + 4u) + _313) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uvec4 _327 = texelFetch(l_geomAttrib_0, int(((_265 + 8u) + _313) >> 2u));
    uint _328 = _327.x;
    uint _337 = _179 * _174;
    uint _338 = _337 + 12u;
    uint _359;
    uint _360;
    uint _361;
    uint _362;
    if (_184)
    {
        uvec4 _340 = texelFetch(l_geomAttrib_0, int(_338 >> 2u));
        uint _341 = _340.x;
        _359 = _341 & 255u;
        _360 = (_341 >> 8u) & 255u;
        _361 = (_341 >> 16u) & 255u;
        _362 = 16u;
    }
    else
    {
        uint _347 = _338 >> 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomAttrib_0, int(_347)).x, texelFetch(l_geomAttrib_0, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _359 = _354 & 65535u;
        _360 = _354 >> 16u;
        _361 = _353.y & 65535u;
        _362 = 20u;
    }
    uvec4 _368 = texelFetch(l_geomAttrib_0, int((_362 + _337) >> 2u));
    uint _369 = _368.x;
    uint _381;
    if (_236)
    {
        _381 = _362 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _362 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _362 + 12u;
        }
        _381 = frontier_phi_23_24_ladder;
    }
    uint _385 = _181 ? (_381 + 4u) : _381;
    uvec4 _389 = texelFetch(l_geomAttrib_0, int(((_337 + 4u) + _385) >> 2u));
    uint _390 = _389.x;
    float _394 = float(int(uint(int(_390 << 16u) >> int(16u))));
    float _395 = float(int(uint(int(_390) >> int(16u))));
    uvec4 _399 = texelFetch(l_geomAttrib_0, int(((_337 + 8u) + _385) >> 2u));
    uint _400 = _399.x;
    bool _410 = _130.z == 0u;
    float _446;
    float _447;
    float _448;
    if (_410)
    {
        uint _413 = _171 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _171 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_410)
    {
        uint _451 = _173 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _173 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _522;
    float _523;
    float _524;
    if (_410)
    {
        uint _489 = _174 * 3u;
        uvec3 _498 = uvec3(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_489 + 2u)).x);
        _522 = uintBitsToFloat(_498.x);
        _523 = uintBitsToFloat(_498.y);
        _524 = uintBitsToFloat(_498.z);
    }
    else
    {
        uint _506 = _174 * 2u;
        uvec2 _512 = uvec2(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x);
        uint _513 = _512.x;
        _522 = unpackHalf2x16(_513).x;
        _523 = unpackHalf2x16(_513 >> 16u).x;
        _524 = unpackHalf2x16(_512.y).x;
    }
    float _527 = (1.0 - hit._m0.x) - hit._m0.y;
    float _559 = _527 * 0.0039215688593685626983642578125;
    float _564 = hit._m0.x * 0.0039215688593685626983642578125;
    float _568 = hit._m0.y * 0.0039215688593685626983642578125;
    float _574 = (_322 - _250) * 0.00048828125;
    float _576 = (_323 - _251) * 0.00048828125;
    float _579 = (_394 - _250) * 0.00048828125;
    float _580 = (_395 - _251) * 0.00048828125;
    float _602 = _484 - _446;
    float _603 = _485 - _447;
    float _604 = _486 - _448;
    float _607 = fma(_604, gl_ObjectToWorldEXT[2u].x, fma(_603, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _602));
    float _610 = fma(_604, gl_ObjectToWorldEXT[2u].y, fma(_603, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _602));
    float _613 = fma(_604, gl_ObjectToWorldEXT[2u].z, fma(_603, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _602));
    float _614 = _522 - _446;
    float _615 = _523 - _447;
    float _616 = _524 - _448;
    float _619 = fma(_616, gl_ObjectToWorldEXT[2u].x, fma(_615, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _614));
    float _622 = fma(_616, gl_ObjectToWorldEXT[2u].y, fma(_615, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _614));
    float _625 = fma(_616, gl_ObjectToWorldEXT[2u].z, fma(_615, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _614));
    float _626 = (((_322 * hit._m0.x) + (_250 * _527)) + (_394 * hit._m0.y)) * 0.00048828125;
    float _627 = (((_323 * hit._m0.x) + (_251 * _527)) + (_395 * hit._m0.y)) * 0.00048828125;
    float _631 = (((float(_210) * _527) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_359) * hit._m0.y);
    float _634 = (((float(_211) * _527) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_360) * hit._m0.y);
    float _637 = (((float(_212) * _527) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _638 = _631 * 0.0078740157186985015869140625;
    float _640 = _634 * 0.0078740157186985015869140625;
    float _641 = _637 * 0.0078740157186985015869140625;
    float _654 = ((((float(_222 & 255u) * _527) + (-127.0)) + (float(_297 & 255u) * hit._m0.x)) + (float(_369 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _655 = ((((float((_222 >> 8u) & 255u) * _527) + (-127.0)) + (float((_297 >> 8u) & 255u) * hit._m0.x)) + (float((_369 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float((_222 >> 16u) & 255u) * _527) + (-127.0)) + (float((_297 >> 16u) & 255u) * hit._m0.x)) + (float((_369 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((((float(_222 >> 24u) * _527) + (-127.0)) + (float(_297 >> 24u) * hit._m0.x)) + (float(_369 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _667 = ((_655 * _641) - (_656 * _640)) * _657;
    float _668 = ((_656 * _638) - (_654 * _641)) * _657;
    float _669 = ((_654 * _640) - (_655 * _638)) * _657;
    float _673 = inversesqrt(dot(vec3(_667, _668, _669), vec3(_667, _668, _669)));
    float _674 = _673 * _667;
    float _675 = _673 * _668;
    float _676 = _673 * _669;
    uvec2 _694 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_1, int(0u)));
    bool _699 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _752;
    if (_699)
    {
        float _710 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _716 = (_625 * _610) - (_622 * _613);
        float _719 = (_619 * _613) - (_625 * _607);
        float _722 = (_622 * _607) - (_619 * _610);
        float _749 = ((log2((((float(_694.y) * 0.5) * float(_694.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_719 * _719) + (_722 * _722)) + (_716 * _716)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_710 * gl_WorldRayDirectionEXT.x, _710 * gl_WorldRayDirectionEXT.y, _710 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _752 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    }
    else
    {
        _752 = 0.0;
    }
    vec4 _756 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _626) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _627) + cbTextureTilingScale._m0[1u].w), _752);
    float _761 = _756.x * cbMtdParam._m0[10u].x;
    float _762 = _756.y * cbMtdParam._m0[10u].y;
    float _763 = _756.z * cbMtdParam._m0[10u].z;
    uvec2 _781 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_2, int(0u)));
    float _832;
    if (_699)
    {
        float _792 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _798 = (_625 * _610) - (_622 * _613);
        float _801 = (_619 * _613) - (_625 * _607);
        float _804 = (_622 * _607) - (_619 * _610);
        float _830 = ((log2((((float(_781.y) * 0.5) * float(_781.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_801 * _801) + (_804 * _804)) + (_798 * _798)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_792 * gl_WorldRayDirectionEXT.x, _792 * gl_WorldRayDirectionEXT.y, _792 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _832 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    }
    else
    {
        _832 = 0.0;
    }
    vec4 _834 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _626) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _627) + cbTextureTilingScale._m0[6u].w), _832);
    uvec2 _853 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_0, int(0u)));
    float _904;
    if (_699)
    {
        float _864 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _870 = (_625 * _610) - (_622 * _613);
        float _873 = (_619 * _613) - (_625 * _607);
        float _876 = (_622 * _607) - (_619 * _610);
        float _902 = ((log2((((float(_853.y) * 0.5) * float(_853.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_873 * _873) + (_876 * _876)) + (_870 * _870)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_864 * gl_WorldRayDirectionEXT.x, _864 * gl_WorldRayDirectionEXT.y, _864 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _904 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    }
    else
    {
        _904 = 0.0;
    }
    vec4 _907 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * _626) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _627) + cbTextureTilingScale._m0[0u].w), _904);
    uvec2 _939 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_3, int(0u)));
    float _990;
    if (_699)
    {
        float _950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _956 = (_625 * _610) - (_622 * _613);
        float _959 = (_619 * _613) - (_625 * _607);
        float _962 = (_622 * _607) - (_619 * _610);
        float _988 = ((log2((((float(_939.y) * 0.5) * float(_939.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_959 * _959) + (_962 * _962)) + (_956 * _956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_950 * gl_WorldRayDirectionEXT.x, _950 * gl_WorldRayDirectionEXT.y, _950 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _990 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    }
    else
    {
        _990 = 0.0;
    }
    float _996 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _626) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _627) + cbTextureTilingScale._m0[7u].w), _990).x;
    float _1006 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * ((((((1.0 - (_559 * float(_256 & 255u))) - (_564 * float(_328 & 255u))) - (_568 * float(_400 & 255u))) - _907.x) * 2.0) - _996)) + 1.0;
    float _2202 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1007 = isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0));
    float _1014 = (_1007 * ((_834.x * cbMtdParam._m0[11u].x) - _761)) + _761;
    float _1015 = (_1007 * ((_834.y * cbMtdParam._m0[11u].y) - _762)) + _762;
    float _1016 = (_1007 * ((_834.z * cbMtdParam._m0[11u].z) - _763)) + _763;
    uvec2 _1033 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_8, int(0u)));
    float _1084;
    if (_699)
    {
        float _1044 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1050 = (_625 * _610) - (_622 * _613);
        float _1053 = (_619 * _613) - (_625 * _607);
        float _1056 = (_622 * _607) - (_619 * _610);
        float _1082 = ((log2((((float(_1033.y) * 0.5) * float(_1033.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1053 * _1053) + (_1056 * _1056)) + (_1050 * _1050)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1044 * gl_WorldRayDirectionEXT.x, _1044 * gl_WorldRayDirectionEXT.y, _1044 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1084 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    }
    else
    {
        _1084 = 0.0;
    }
    vec4 _1086 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _626) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _627) + cbTextureTilingScale._m0[11u].w), _1084);
    float _1099 = ((((((((1.0 - (_559 * float((_256 >> 8u) & 255u))) - (_564 * float((_328 >> 8u) & 255u))) - (_568 * float((_400 >> 8u) & 255u))) - _907.y) * 2.0) - _996) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].z) + 1.0;
    float _2218 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1100 = isnan(1.0) ? _2218 : (isnan(_2218) ? 1.0 : min(_2218, 1.0));
    float _1107 = (((_1086.x * cbMtdParam._m0[12u].x) - _1014) * _1100) + _1014;
    float _1108 = (_1100 * ((_1086.y * cbMtdParam._m0[12u].y) - _1015)) + _1015;
    float _1109 = (_1100 * ((_1086.z * cbMtdParam._m0[12u].z) - _1016)) + _1016;
    uvec2 _1127 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_11, int(0u)));
    float _1178;
    if (_699)
    {
        float _1138 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1144 = (_625 * _610) - (_622 * _613);
        float _1147 = (_619 * _613) - (_625 * _607);
        float _1150 = (_622 * _607) - (_619 * _610);
        float _1176 = ((log2((((float(_1127.y) * 0.5) * float(_1127.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1147 * _1147) + (_1150 * _1150)) + (_1144 * _1144)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1138 * gl_WorldRayDirectionEXT.x, _1138 * gl_WorldRayDirectionEXT.y, _1138 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1178 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
    }
    else
    {
        _1178 = 0.0;
    }
    vec4 _1180 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _626) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _627) + cbTextureTilingScale._m0[2u].w), _1178);
    float _1193 = ((((((((1.0 - (_559 * float((_256 >> 16u) & 255u))) - (_564 * float((_328 >> 16u) & 255u))) - (_568 * float((_400 >> 16u) & 255u))) - _907.z) * 2.0) - _996) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].w) + 1.0;
    float _2234 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _1194 = isnan(1.0) ? _2234 : (isnan(_2234) ? 1.0 : min(_2234, 1.0));
    float _1201 = (((_1180.x * cbMtdParam._m0[13u].x) - _1107) * _1194) + _1107;
    float _1202 = (_1194 * ((_1180.y * cbMtdParam._m0[13u].y) - _1108)) + _1108;
    float _1203 = (_1194 * ((_1180.z * cbMtdParam._m0[13u].z) - _1109)) + _1109;
    uvec2 _1221 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_13, int(0u)));
    float _1272;
    if (_699)
    {
        float _1232 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1238 = (_625 * _610) - (_622 * _613);
        float _1241 = (_619 * _613) - (_625 * _607);
        float _1244 = (_622 * _607) - (_619 * _610);
        float _1270 = ((log2((((float(_1221.y) * 0.5) * float(_1221.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1241 * _1241) + (_1244 * _1244)) + (_1238 * _1238)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1232 * gl_WorldRayDirectionEXT.x, _1232 * gl_WorldRayDirectionEXT.y, _1232 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1272 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
    }
    else
    {
        _1272 = 0.0;
    }
    vec4 _1274 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_13, SS_ClampAniso), vec2((cbTextureTilingScale._m0[3u].x * _626) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _627) + cbTextureTilingScale._m0[3u].w), _1272);
    uvec2 _1295 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_5, int(0u)));
    float _1346;
    if (_699)
    {
        float _1306 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1312 = (_625 * _610) - (_622 * _613);
        float _1315 = (_619 * _613) - (_625 * _607);
        float _1318 = (_622 * _607) - (_619 * _610);
        float _1344 = ((log2((((float(_1295.y) * 0.5) * float(_1295.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1315 * _1315) + (_1318 * _1318)) + (_1312 * _1312)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1306 * gl_WorldRayDirectionEXT.x, _1306 * gl_WorldRayDirectionEXT.y, _1306 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1346 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
    }
    else
    {
        _1346 = 0.0;
    }
    vec4 _1349 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _626) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _627) + cbTextureTilingScale._m0[8u].w), _1346);
    float _1351 = _1349.x;
    float _1352 = _1349.y;
    float _1353 = _1349.z;
    uvec2 _1365 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_6, int(0u)));
    float _1416;
    if (_699)
    {
        float _1376 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1382 = (_625 * _610) - (_622 * _613);
        float _1385 = (_619 * _613) - (_625 * _607);
        float _1388 = (_622 * _607) - (_619 * _610);
        float _1414 = ((log2((((float(_1365.y) * 0.5) * float(_1365.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1385 * _1385) + (_1388 * _1388)) + (_1382 * _1382)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1376 * gl_WorldRayDirectionEXT.x, _1376 * gl_WorldRayDirectionEXT.y, _1376 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1416 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
    }
    else
    {
        _1416 = 0.0;
    }
    vec4 _1418 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _626) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _627) + cbTextureTilingScale._m0[9u].w), _1416);
    float _1429 = ((_1418.x - _1351) * _1007) + _1351;
    float _1430 = ((_1418.y - _1352) * _1007) + _1352;
    float _1431 = ((_1418.z - _1353) * _1007) + _1353;
    uvec2 _1443 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_15, int(0u)));
    float _1494;
    if (_699)
    {
        float _1454 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1460 = (_625 * _610) - (_622 * _613);
        float _1463 = (_619 * _613) - (_625 * _607);
        float _1466 = (_622 * _607) - (_619 * _610);
        float _1492 = ((log2((((float(_1443.y) * 0.5) * float(_1443.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1463 * _1463) + (_1466 * _1466)) + (_1460 * _1460)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1454 * gl_WorldRayDirectionEXT.x, _1454 * gl_WorldRayDirectionEXT.y, _1454 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1494 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
    }
    else
    {
        _1494 = 0.0;
    }
    vec4 _1496 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _626) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _627) + cbTextureTilingScale._m0[4u].w), _1494);
    float _1507 = ((_1496.x - _1429) * _1100) + _1429;
    float _1508 = ((_1496.y - _1430) * _1100) + _1430;
    float _1509 = ((_1496.z - _1431) * _1100) + _1431;
    uvec2 _1522 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_16, int(0u)));
    float _1573;
    if (_699)
    {
        float _1533 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1539 = (_625 * _610) - (_622 * _613);
        float _1542 = (_619 * _613) - (_625 * _607);
        float _1545 = (_622 * _607) - (_619 * _610);
        float _1571 = ((log2((((float(_1522.y) * 0.5) * float(_1522.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1542 * _1542) + (_1545 * _1545)) + (_1539 * _1539)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1533 * gl_WorldRayDirectionEXT.x, _1533 * gl_WorldRayDirectionEXT.y, _1533 * gl_WorldRayDirectionEXT.z), vec3(_638, _640, _641))));
        _1573 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    }
    else
    {
        _1573 = 0.0;
    }
    vec4 _1575 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _626) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _627) + cbTextureTilingScale._m0[5u].w), _1573);
    float _1588 = ((_1575.z - _1509) * _1194) + _1509;
    float _1591 = ((((_1575.x - _1507) * _1194) + _1507) * 2.0) + (-1.0);
    float _1593 = ((((_1575.y - _1508) * _1194) + _1508) * 2.0) + (-1.0);
    float _1594 = dot(vec2(_1591, _1593), vec2(_1591, _1593));
    float _2270 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
    float _1599 = sqrt(1.0 - (isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0))));
    float _1602 = fma(_1599, _638, fma(_1593, _654, _1591 * _674));
    float _1605 = fma(_1599, _640, fma(_1593, _655, _1591 * _675));
    float _1608 = fma(_1599, _641, fma(_1593, _656, _1591 * _676));
    float _1617 = exp2(log2(inversesqrt(dot(vec3(_1602, _1605, _1608), vec3(_1602, _1605, _1608))) * _1605) * cbMtdParam._m0[15u].y) * cbMtdParam._m0[14u].y;
    float _2281 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
    float _1618 = isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0));
    float _2292 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
    float _1619 = isnan(1.0) ? _2292 : (isnan(_2292) ? 1.0 : min(_2292, 1.0));
    float _1621 = 3.0 - (_1619 * 2.0);
    float _1626 = _1619 * _1619;
    float _1633 = ((_1626 * ((_1274.x * cbMtdParam._m0[9u].x) - _1201)) * _1621) + _1201;
    float _1634 = ((_1626 * ((_1274.y * cbMtdParam._m0[9u].y) - _1202)) * _1621) + _1202;
    float _1635 = ((_1626 * ((_1274.z * cbMtdParam._m0[9u].z) - _1203)) * _1621) + _1203;
    uvec2 _1647 = uvec2(textureSize(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_7, int(0u)));
    float _1651 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1652 = _1651 * gl_WorldRayDirectionEXT.x;
    float _1653 = _1651 * gl_WorldRayDirectionEXT.y;
    float _1654 = _1651 * gl_WorldRayDirectionEXT.z;
    float _1698;
    if (_699)
    {
        float _1664 = (_625 * _610) - (_622 * _613);
        float _1667 = (_619 * _613) - (_625 * _607);
        float _1670 = (_622 * _607) - (_619 * _610);
        float _1696 = ((log2((((float(_1647.y) * 0.5) * float(_1647.x)) * abs((_580 * _574) - (_579 * _576))) / (sqrt(((_1667 * _1667) + (_1670 * _1670)) + (_1664 * _1664)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_1652, _1653, _1654), vec3(_638, _640, _641))));
        _1698 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
    }
    else
    {
        _1698 = 0.0;
    }
    vec4 _1700 = textureLod(sampler2D(M_AMSN_V_Mb4_3Mask_Snow_snp_0_Texture2D_7, SS_ClampAniso), vec2((cbTextureTilingScale._m0[10u].x * _626) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _627) + cbTextureTilingScale._m0[10u].w), _1698);
    float _1706 = (_1700.x * 2.0) + (-1.0);
    float _1707 = (_1700.y * 2.0) + (-1.0);
    float _1708 = dot(vec2(_1706, _1707), vec2(_1706, _1707));
    float _2308 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
    float _1723 = ((_1626 * (_1706 - _1591)) * _1621) + _1591;
    float _1724 = ((_1626 * (_1707 - _1593)) * _1621) + _1593;
    float _1725 = ((_1626 * (sqrt(1.0 - (isnan(1.0) ? _2308 : (isnan(_2308) ? 1.0 : min(_2308, 1.0)))) - _1599)) * _1621) + _1599;
    float _1728 = fma(_1725, _638, fma(_1724, _654, _1723 * _674));
    float _1731 = fma(_1725, _640, fma(_1724, _655, _1723 * _675));
    float _1734 = fma(_1725, _641, fma(_1724, _656, _1723 * _676));
    float _1738 = inversesqrt(dot(vec3(_1728, _1731, _1734), vec3(_1728, _1731, _1734)));
    float _1739 = _1738 * _1728;
    float _1740 = _1738 * _1731;
    float _1741 = _1738 * _1734;
    float _1753 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1754 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1755 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1756 = (-0.0) - _1652;
    float _1758 = (-0.0) - _1653;
    float _1759 = (-0.0) - _1654;
    float _1765 = float(gl_LaunchIDEXT.x);
    float _1766 = float(gl_LaunchIDEXT.y);
    float _1769 = float(gl_LaunchSizeEXT.x);
    float _1783 = fract(fract(sin(dot(vec2(_1765 / _1769, _1766 / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1796 = fract(fract(sin(dot(vec2((_1765 + 128.0) / _1769, (_1766 + 128.0) / _80), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _72._m0 = 1u;
    uvec4 _1806 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1807 = _1806.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1807, _1806.w, _1807, vec3(_1753, _1754, _1755), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    if (_72._m0 == 0u)
    {
        float _1827 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1739, _1740, _1741));
        float _2319 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1830 = isnan(1.0) ? _2319 : (isnan(_2319) ? 1.0 : min(_2319, 1.0));
        float _1849 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1588) * 0.949999988079071044921875);
        float _1850 = _1849 * _1849;
        float _1851 = g_sceneCB._m0[4u].x - _1652;
        float _1852 = g_sceneCB._m0[4u].y - _1653;
        float _1853 = g_sceneCB._m0[4u].z - _1654;
        float _1857 = inversesqrt(dot(vec3(_1851, _1852, _1853), vec3(_1851, _1852, _1853)));
        float _1858 = _1857 * _1851;
        float _1859 = _1857 * _1852;
        float _1860 = _1857 * _1853;
        float _1861 = dot(vec3(_1739, _1740, _1741), vec3(g_sceneCB._m0[4u].xyz));
        float _2330 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
        float _1864 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
        float _1865 = dot(vec3(_1739, _1740, _1741), vec3(_1756, _1758, _1759));
        float _2341 = isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0));
        float _1868 = isnan(1.0) ? _2341 : (isnan(_2341) ? 1.0 : min(_2341, 1.0));
        float _1869 = dot(vec3(_1739, _1740, _1741), vec3(_1858, _1859, _1860));
        float _2352 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
        float _1872 = isnan(1.0) ? _2352 : (isnan(_2352) ? 1.0 : min(_2352, 1.0));
        float _1873 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1858, _1859, _1860));
        float _2363 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1877 = _1850 * _1850;
        float _1881 = ((_1872 * _1872) * (_1877 + (-1.0))) + 1.0;
        float _1893 = (exp2(log2(1.0 - (isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1895 = 1.0 - _1850;
        float _1906 = (0.5 / (((_1868 * ((_1864 * _1895) + _1850)) + 9.9999999392252902907785028219223e-09) + (((_1868 * _1895) + _1850) * _1864))) * _1864;
        float _2374 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1908 = (isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0))) * (_1877 / ((_1881 * _1881) * 3.141590118408203125));
        _1915 = ((_1633 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1830;
        _1916 = ((_1634 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1830;
        _1917 = ((_1635 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1830;
        _1918 = (_1893 * g_sceneCB._m0[5u].x) * _1908;
        _1919 = (_1893 * g_sceneCB._m0[5u].y) * _1908;
        _1920 = (_1893 * g_sceneCB._m0[5u].z) * _1908;
    }
    else
    {
        _1915 = 0.0;
        _1916 = 0.0;
        _1917 = 0.0;
        _1918 = 0.0;
        _1919 = 0.0;
        _1920 = 0.0;
    }
    bool _1922 = abs(_1740) < 0.89999997615814208984375;
    float _1924 = float(_1922);
    float _1925 = _1922 ? 0.0 : 1.0;
    float _1928 = (_1924 * _1741) - (_1925 * _1740);
    float _1929 = _1925 * _1739;
    float _1931 = (-0.0) - (_1739 * _1924);
    float _1935 = inversesqrt(dot(vec3(_1928, _1929, _1931), vec3(_1928, _1929, _1931)));
    float _1936 = _1928 * _1935;
    float _1937 = _1929 * _1935;
    float _1938 = _1935 * _1931;
    float _1941 = (_1937 * _1741) - (_1938 * _1740);
    float _1944 = (_1938 * _1739) - (_1936 * _1741);
    float _1947 = (_1936 * _1740) - (_1937 * _1739);
    float _1949;
    float _1957;
    float _1948 = 0.0;
    uint _1950 = 0u;
    float _1954;
    bool _1956;
    for (;;)
    {
        _1954 = (float(_1950) + _1783) * 0.03125;
        _1956 = _1950 == 0u;
        float frontier_phi_63_pred;
        if (_1956)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _2091;
            float _2092;
            uint _2094;
            _2091 = 0.0;
            _2092 = 0.5;
            _2094 = _1950;
            float _1958;
            for (;;)
            {
                _1958 = ((_2094 & 1u) != 0u) ? (_2092 + _2091) : _2091;
                uint _2095 = _2094 >> 1u;
                if (_2095 == 0u)
                {
                    break;
                }
                else
                {
                    _2091 = _1958;
                    _2092 *= 0.5;
                    _2094 = _2095;
                }
            }
            frontier_phi_63_pred = _1958;
        }
        _1957 = frontier_phi_63_pred;
        float _1959 = _1957 + _1796;
        float _1963 = sqrt(_1954);
        float _1964 = ((_1959 > 1.0) ? (_1959 + (-1.0)) : _1959) * 6.283185482025146484375;
        float _1967 = cos(_1964) * _1963;
        float _1969 = sin(_1964) * _1963;
        float _1971 = sqrt(1.0 - _1954);
        float _1984 = ((_1971 * _1739) + (_1967 * _1941)) + (_1969 * _1936);
        float _1985 = ((_1971 * _1740) + (_1967 * _1944)) + (_1969 * _1937);
        float _1986 = ((_1971 * _1741) + (_1967 * _1947)) + (_1969 * _1938);
        _71._m0 = 1u;
        uvec4 _1990 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1991 = _1990.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1991, _1990.w, _1991, vec3(_1753, _1754, _1755), 9.9999997473787516355514526367188e-05, vec3(_1984, _1985, _1986), 10000.0, 1);
        float _1997 = dot(vec3(_1739, _1740, _1741), vec3(_1984, _1985, _1986));
        float _2385 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _2000 = isnan(1.0) ? _2385 : (isnan(_2385) ? 1.0 : min(_2385, 1.0));
        _1949 = ((float(_71._m0 == 0u) * _2000) / (_2000 * 0.3183098733425140380859375)) + _1948;
        uint _1951 = _1950 + 1u;
        if (_1951 == 32u)
        {
            break;
        }
        else
        {
            _1948 = _1949;
            _1950 = _1951;
            continue;
        }
    }
    float _2008 = _1949 * 0.009947183541953563690185546875;
    float _2013 = dot(vec3(_1652, _1653, _1654), vec3(_1739, _1740, _1741)) * 2.0;
    vec4 _2027 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1652 - (_2013 * _1739), _1653 - (_2013 * _1740), _1654 - (_2013 * _1741)), 4.0 - (_1588 * 4.0));
    float _2032 = dot(vec3(_1756, _1758, _1759), vec3(_1739, _1740, _1741));
    float _2396 = isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0));
    float _2041 = (exp2(log2(1.0 - (isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2047 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1739, _1740, _1741), 0.0);
    float _2058 = (_1918 + _1915) + (((_2047.x * _1633) + (_2041 * _2027.x)) * _2008);
    float _2062 = (_1919 + _1916) + (((_2047.y * _1634) + (_2041 * _2027.y)) * _2008);
    float _2066 = (_1920 + _1917) + (((_2047.z * _1635) + (_2041 * _2027.z)) * _2008);
    float _2407 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2418 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
    float _2429 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
    bool _2074 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2085;
    _2085.x = _2074 ? ((_631 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0)));
    _2085.y = _2074 ? ((_634 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2418 : (isnan(_2418) ? 1.0 : min(_2418, 1.0)));
    _2085.z = _2074 ? ((_637 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2429 : (isnan(_2429) ? 1.0 : min(_2429, 1.0)));
    payload._m0 = _2085;
}


