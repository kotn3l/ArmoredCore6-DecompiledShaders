#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Ice_Ov_N_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Ice_Ov_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Ice_Ov_N_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Ice_Ov_N_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Ice_Ov_N_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1612;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _157 & 65535u;
            frontier_phi_3_2_ladder_2 = _161;
        }
        else
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _158 >> 16u;
        }
        _163 = frontier_phi_3_2_ladder_1;
        _165 = frontier_phi_3_2_ladder;
        _166 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _171 * _163;
    uint _174 = _172 >> 2u;
    uvec3 _183 = uvec3(texelFetch(l_geomAttrib_0, int(_174)).x, texelFetch(l_geomAttrib_0, int(_174 + 1u)).x, texelFetch(l_geomAttrib_0, int(_174 + 2u)).x);
    uint _190 = _170.z;
    bool _191 = _190 != 0u;
    bool _193 = _122.w == 0u;
    bool _194 = _191 || _193;
    uint _195 = _172 + 12u;
    uint _218;
    uint _219;
    uint _220;
    uint _221;
    if (_194)
    {
        uvec4 _197 = texelFetch(l_geomAttrib_0, int(_195 >> 2u));
        uint _198 = _197.x;
        _218 = _198 & 255u;
        _219 = (_198 >> 8u) & 255u;
        _220 = (_198 >> 16u) & 255u;
        _221 = 16u;
    }
    else
    {
        uint _206 = _195 >> 2u;
        uvec2 _212 = uvec2(texelFetch(l_geomAttrib_0, int(_206)).x, texelFetch(l_geomAttrib_0, int(_206 + 1u)).x);
        uint _213 = _212.x;
        _218 = _213 & 65535u;
        _219 = _213 >> 16u;
        _220 = _212.y & 65535u;
        _221 = 20u;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((_221 + _172) >> 2u));
    uint _229 = _228.x;
    bool _243 = _190 == 0u;
    uint _244;
    if (_243)
    {
        _244 = _221 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_193)
        {
            frontier_phi_9_10_ladder = _221 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _221 + 12u;
        }
        _244 = frontier_phi_9_10_ladder;
    }
    uint _248 = _191 ? (_244 + 4u) : _244;
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_172 + 4u) + _248) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uint _266 = _171 * _165;
    uint _267 = _266 >> 2u;
    uvec3 _276 = uvec3(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x, texelFetch(l_geomAttrib_0, int(_267 + 2u)).x);
    uint _283 = _266 + 12u;
    uint _304;
    uint _305;
    uint _306;
    uint _307;
    if (_194)
    {
        uvec4 _285 = texelFetch(l_geomAttrib_0, int(_283 >> 2u));
        uint _286 = _285.x;
        _304 = _286 & 255u;
        _305 = (_286 >> 8u) & 255u;
        _306 = (_286 >> 16u) & 255u;
        _307 = 16u;
    }
    else
    {
        uint _292 = _283 >> 2u;
        uvec2 _298 = uvec2(texelFetch(l_geomAttrib_0, int(_292)).x, texelFetch(l_geomAttrib_0, int(_292 + 1u)).x);
        uint _299 = _298.x;
        _304 = _299 & 65535u;
        _305 = _299 >> 16u;
        _306 = _298.y & 65535u;
        _307 = 20u;
    }
    uvec4 _313 = texelFetch(l_geomAttrib_0, int((_307 + _266) >> 2u));
    uint _314 = _313.x;
    uint _326;
    if (_243)
    {
        _326 = _307 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_193)
        {
            frontier_phi_16_17_ladder = _307 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _307 + 12u;
        }
        _326 = frontier_phi_16_17_ladder;
    }
    uint _330 = _191 ? (_326 + 4u) : _326;
    uvec4 _334 = texelFetch(l_geomAttrib_0, int(((_266 + 4u) + _330) >> 2u));
    uint _335 = _334.x;
    float _339 = float(int(uint(int(_335 << 16u) >> int(16u))));
    float _340 = float(int(uint(int(_335) >> int(16u))));
    uint _348 = _171 * _166;
    uint _349 = _348 >> 2u;
    uvec3 _358 = uvec3(texelFetch(l_geomAttrib_0, int(_349)).x, texelFetch(l_geomAttrib_0, int(_349 + 1u)).x, texelFetch(l_geomAttrib_0, int(_349 + 2u)).x);
    uint _365 = _348 + 12u;
    uint _386;
    uint _387;
    uint _388;
    uint _389;
    if (_194)
    {
        uvec4 _367 = texelFetch(l_geomAttrib_0, int(_365 >> 2u));
        uint _368 = _367.x;
        _386 = _368 & 255u;
        _387 = (_368 >> 8u) & 255u;
        _388 = (_368 >> 16u) & 255u;
        _389 = 16u;
    }
    else
    {
        uint _374 = _365 >> 2u;
        uvec2 _380 = uvec2(texelFetch(l_geomAttrib_0, int(_374)).x, texelFetch(l_geomAttrib_0, int(_374 + 1u)).x);
        uint _381 = _380.x;
        _386 = _381 & 65535u;
        _387 = _381 >> 16u;
        _388 = _380.y & 65535u;
        _389 = 20u;
    }
    uvec4 _395 = texelFetch(l_geomAttrib_0, int((_389 + _348) >> 2u));
    uint _396 = _395.x;
    uint _408;
    if (_243)
    {
        _408 = _389 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_193)
        {
            frontier_phi_23_24_ladder = _389 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _389 + 12u;
        }
        _408 = frontier_phi_23_24_ladder;
    }
    uint _412 = _191 ? (_408 + 4u) : _408;
    uvec4 _416 = texelFetch(l_geomAttrib_0, int(((_348 + 4u) + _412) >> 2u));
    uint _417 = _416.x;
    float _421 = float(int(uint(int(_417 << 16u) >> int(16u))));
    float _422 = float(int(uint(int(_417) >> int(16u))));
    bool _431 = _122.z == 0u;
    float _467;
    float _468;
    float _469;
    if (_431)
    {
        uint _434 = _163 * 3u;
        uvec3 _443 = uvec3(texelFetch(l_geomPositionBuffer, int(_434)).x, texelFetch(l_geomPositionBuffer, int(_434 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_434 + 2u)).x);
        _467 = uintBitsToFloat(_443.x);
        _468 = uintBitsToFloat(_443.y);
        _469 = uintBitsToFloat(_443.z);
    }
    else
    {
        uint _451 = _163 * 2u;
        uvec2 _457 = uvec2(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x);
        uint _458 = _457.x;
        _467 = unpackHalf2x16(_458).x;
        _468 = unpackHalf2x16(_458 >> 16u).x;
        _469 = unpackHalf2x16(_457.y).x;
    }
    float _505;
    float _506;
    float _507;
    if (_431)
    {
        uint _472 = _165 * 3u;
        uvec3 _481 = uvec3(texelFetch(l_geomPositionBuffer, int(_472)).x, texelFetch(l_geomPositionBuffer, int(_472 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_472 + 2u)).x);
        _505 = uintBitsToFloat(_481.x);
        _506 = uintBitsToFloat(_481.y);
        _507 = uintBitsToFloat(_481.z);
    }
    else
    {
        uint _489 = _165 * 2u;
        uvec2 _495 = uvec2(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x);
        uint _496 = _495.x;
        _505 = unpackHalf2x16(_496).x;
        _506 = unpackHalf2x16(_496 >> 16u).x;
        _507 = unpackHalf2x16(_495.y).x;
    }
    float _543;
    float _544;
    float _545;
    if (_431)
    {
        uint _510 = _166 * 3u;
        uvec3 _519 = uvec3(texelFetch(l_geomPositionBuffer, int(_510)).x, texelFetch(l_geomPositionBuffer, int(_510 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_510 + 2u)).x);
        _543 = uintBitsToFloat(_519.x);
        _544 = uintBitsToFloat(_519.y);
        _545 = uintBitsToFloat(_519.z);
    }
    else
    {
        uint _527 = _166 * 2u;
        uvec2 _533 = uvec2(texelFetch(l_geomPositionBuffer, int(_527)).x, texelFetch(l_geomPositionBuffer, int(_527 + 1u)).x);
        uint _534 = _533.x;
        _543 = unpackHalf2x16(_534).x;
        _544 = unpackHalf2x16(_534 >> 16u).x;
        _545 = unpackHalf2x16(_533.y).x;
    }
    float _548 = (1.0 - hit._m0.x) - hit._m0.y;
    float _604 = (_339 - _257) * 0.00048828125;
    float _606 = (_340 - _258) * 0.00048828125;
    float _609 = (_421 - _257) * 0.00048828125;
    float _610 = (_422 - _258) * 0.00048828125;
    float _632 = _505 - _467;
    float _633 = _506 - _468;
    float _634 = _507 - _469;
    float _637 = fma(_634, gl_ObjectToWorldEXT[2u].x, fma(_633, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _632));
    float _640 = fma(_634, gl_ObjectToWorldEXT[2u].y, fma(_633, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _632));
    float _643 = fma(_634, gl_ObjectToWorldEXT[2u].z, fma(_633, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _632));
    float _644 = _543 - _467;
    float _645 = _544 - _468;
    float _646 = _545 - _469;
    float _649 = fma(_646, gl_ObjectToWorldEXT[2u].x, fma(_645, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _644));
    float _652 = fma(_646, gl_ObjectToWorldEXT[2u].y, fma(_645, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _644));
    float _655 = fma(_646, gl_ObjectToWorldEXT[2u].z, fma(_645, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _644));
    float _656 = (((_339 * hit._m0.x) + (_257 * _548)) + (_421 * hit._m0.y)) * 0.00048828125;
    float _657 = (((_340 * hit._m0.x) + (_258 * _548)) + (_422 * hit._m0.y)) * 0.00048828125;
    float _661 = (((float(_218) * _548) + (-127.0)) + (float(_304) * hit._m0.x)) + (float(_386) * hit._m0.y);
    float _664 = (((float(_219) * _548) + (-127.0)) + (float(_305) * hit._m0.x)) + (float(_387) * hit._m0.y);
    float _667 = (((float(_220) * _548) + (-127.0)) + (float(_306) * hit._m0.x)) + (float(_388) * hit._m0.y);
    float _668 = _661 * 0.0078740157186985015869140625;
    float _670 = _664 * 0.0078740157186985015869140625;
    float _671 = _667 * 0.0078740157186985015869140625;
    float _684 = ((((float(_229 & 255u) * _548) + (-127.0)) + (float(_314 & 255u) * hit._m0.x)) + (float(_396 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _685 = ((((float((_229 >> 8u) & 255u) * _548) + (-127.0)) + (float((_314 >> 8u) & 255u) * hit._m0.x)) + (float((_396 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _686 = ((((float((_229 >> 16u) & 255u) * _548) + (-127.0)) + (float((_314 >> 16u) & 255u) * hit._m0.x)) + (float((_396 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _687 = ((((float(_229 >> 24u) * _548) + (-127.0)) + (float(_314 >> 24u) * hit._m0.x)) + (float(_396 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _697 = ((_685 * _671) - (_686 * _670)) * _687;
    float _698 = ((_686 * _668) - (_684 * _671)) * _687;
    float _699 = ((_684 * _670) - (_685 * _668)) * _687;
    float _703 = inversesqrt(dot(vec3(_697, _698, _699), vec3(_697, _698, _699)));
    float _704 = _703 * _697;
    float _705 = _703 * _698;
    float _706 = _703 * _699;
    float _725 = inversesqrt(dot(vec3(_668, _670, _671), vec3(_668, _670, _671)));
    float _729 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_725 * _668, _725 * _670, _725 * _671, 0.0));
    float _1698 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _738 = exp2(log2(1.0 - (isnan(1.0) ? _1698 : (isnan(_1698) ? 1.0 : min(_1698, 1.0)))) * cbMtdParam._m0[12u].z);
    float _1709 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _739 = isnan(1.0) ? _1709 : (isnan(_1709) ? 1.0 : min(_1709, 1.0));
    float _746 = (_739 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x;
    float _747 = (_739 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y;
    float _748 = (_739 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z;
    uvec2 _766 = uvec2(textureSize(M_Ice_Ov_N_snp_0_Texture2D_10, int(0u)));
    bool _771 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _823;
    if (_771)
    {
        float _782 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _788 = (_655 * _640) - (_652 * _643);
        float _791 = (_649 * _643) - (_655 * _637);
        float _794 = (_652 * _637) - (_649 * _640);
        float _821 = ((log2((((float(_766.y) * 0.5) * float(_766.x)) * abs((_610 * _604) - (_609 * _606))) / (sqrt(((_791 * _791) + (_794 * _794)) + (_788 * _788)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_782 * gl_WorldRayDirectionEXT.x, _782 * gl_WorldRayDirectionEXT.y, _782 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _823 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    }
    else
    {
        _823 = 0.0;
    }
    vec4 _827 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _656) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _657) + cbTextureTilingScale._m0[2u].w), _823);
    float _833 = (_827.x * 2.0) + (-1.0);
    float _835 = (_827.y * 2.0) + (-1.0);
    float _836 = dot(vec2(_833, _835), vec2(_833, _835));
    float _1725 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _841 = sqrt(1.0 - (isnan(1.0) ? _1725 : (isnan(_1725) ? 1.0 : min(_1725, 1.0))));
    float _844 = fma(_841, _668, fma(_835, _684, _833 * _704));
    float _847 = fma(_841, _670, fma(_835, _685, _833 * _705));
    float _850 = fma(_841, _671, fma(_835, _686, _833 * _706));
    float _854 = inversesqrt(dot(vec3(_844, _847, _850), vec3(_844, _847, _850)));
    float _865 = cbMtdParam._m0[13u].y + dot(vec4(_854 * _844, _854 * _847, _854 * _850, 0.0), vec4(cbMtdParam._m0[14u].yzw, 0.0));
    float _1736 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _867 = (isnan(1.0) ? _1736 : (isnan(_1736) ? 1.0 : min(_1736, 1.0))) * ((((float(texelFetch(l_geomAttrib_0, int(((_266 + 8u) + _330) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_172 + 8u) + _248) >> 2u)).x & 255u) * _548)) + (float(texelFetch(l_geomAttrib_0, int(((_348 + 8u) + _412) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125);
    float _1747 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _868 = isnan(1.0) ? _1747 : (isnan(_1747) ? 1.0 : min(_1747, 1.0));
    uvec2 _880 = uvec2(textureSize(M_Ice_Ov_N_snp_0_Texture2D_2, int(0u)));
    float _931;
    if (_771)
    {
        float _891 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _897 = (_655 * _640) - (_652 * _643);
        float _900 = (_649 * _643) - (_655 * _637);
        float _903 = (_652 * _637) - (_649 * _640);
        float _929 = ((log2((((float(_880.y) * 0.5) * float(_880.x)) * abs((_610 * _604) - (_609 * _606))) / (sqrt(((_900 * _900) + (_903 * _903)) + (_897 * _897)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_891 * gl_WorldRayDirectionEXT.x, _891 * gl_WorldRayDirectionEXT.y, _891 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _931 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    }
    else
    {
        _931 = 0.0;
    }
    vec4 _934 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _656) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _657) + cbTextureTilingScale._m0[3u].w), _931);
    float _954 = (((cbMtdParam._m0[9u].x * _934.x) - _746) * _868) + _746;
    float _955 = (((cbMtdParam._m0[9u].y * _934.y) - _747) * _868) + _747;
    float _956 = (((cbMtdParam._m0[9u].z * _934.z) - _748) * _868) + _748;
    float _961 = ((cbMtdParam._m0[14u].x - cbMtdParam._m0[12u].x) * _868) + cbMtdParam._m0[12u].x;
    float _963 = abs(_668);
    float _964 = abs(_670);
    float _965 = abs(_671);
    float _966 = _963 * _963;
    float _967 = _964 * _964;
    float _968 = _965 * _965;
    float _971 = (((uintBitsToFloat(_276.y) * hit._m0.x) + (uintBitsToFloat(_183.y) * _548)) + (uintBitsToFloat(_358.y) * hit._m0.y)) * 0.0500000007450580596923828125;
    float _981 = (cbTextureTilingScale._m0[4u].x * ((((uintBitsToFloat(_276.x) * hit._m0.x) + (uintBitsToFloat(_183.x) * _548)) + (uintBitsToFloat(_358.x) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[4u].z;
    float _1005;
    if (_771)
    {
        float _989 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _997 = log2(0.0);
        float _1003 = ((_997 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_989 * gl_WorldRayDirectionEXT.x, _989 * gl_WorldRayDirectionEXT.y, _989 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _1005 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    }
    else
    {
        _1005 = 0.0;
    }
    vec4 _1008 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_9, SS_BumpMap), vec2(_981, (cbTextureTilingScale._m0[4u].y * _971) + cbTextureTilingScale._m0[4u].w), _1005);
    float _1015 = (cbTextureTilingScale._m0[4u].y * ((((uintBitsToFloat(_276.z) * hit._m0.x) + (uintBitsToFloat(_183.z) * _548)) + (uintBitsToFloat(_358.z) * hit._m0.y)) * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[4u].w;
    float _1038;
    if (_771)
    {
        float _1022 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1030 = log2(0.0);
        float _1036 = ((_1030 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_1022 * gl_WorldRayDirectionEXT.x, _1022 * gl_WorldRayDirectionEXT.y, _1022 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _1038 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    }
    else
    {
        _1038 = 0.0;
    }
    vec4 _1040 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_9, SS_BumpMap), vec2(_981, _1015), _1038);
    float _1072;
    if (_771)
    {
        float _1056 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1064 = log2(0.0);
        float _1070 = ((_1064 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_1056 * gl_WorldRayDirectionEXT.x, _1056 * gl_WorldRayDirectionEXT.y, _1056 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _1072 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    }
    else
    {
        _1072 = 0.0;
    }
    vec4 _1074 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _971) + cbTextureTilingScale._m0[4u].z, _1015), _1072);
    uvec2 _1101 = uvec2(textureSize(M_Ice_Ov_N_snp_0_Texture2D_1, int(0u)));
    float _1152;
    if (_771)
    {
        float _1112 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1118 = (_655 * _640) - (_652 * _643);
        float _1121 = (_649 * _643) - (_655 * _637);
        float _1124 = (_652 * _637) - (_649 * _640);
        float _1150 = ((log2((((float(_1101.y) * 0.5) * float(_1101.x)) * abs((_610 * _604) - (_609 * _606))) / (sqrt(((_1121 * _1121) + (_1124 * _1124)) + (_1118 * _1118)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_1112 * gl_WorldRayDirectionEXT.x, _1112 * gl_WorldRayDirectionEXT.y, _1112 * gl_WorldRayDirectionEXT.z), vec3(_668, _670, _671))));
        _1152 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    }
    else
    {
        _1152 = 0.0;
    }
    vec4 _1154 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _656) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _657) + cbTextureTilingScale._m0[1u].w), _1152);
    uvec2 _1173 = uvec2(textureSize(M_Ice_Ov_N_snp_0_Texture2D_0, int(0u)));
    float _1177 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1178 = _1177 * gl_WorldRayDirectionEXT.x;
    float _1179 = _1177 * gl_WorldRayDirectionEXT.y;
    float _1180 = _1177 * gl_WorldRayDirectionEXT.z;
    float _1224;
    if (_771)
    {
        float _1190 = (_655 * _640) - (_652 * _643);
        float _1193 = (_649 * _643) - (_655 * _637);
        float _1196 = (_652 * _637) - (_649 * _640);
        float _1222 = ((log2((((float(_1173.y) * 0.5) * float(_1173.x)) * abs((_610 * _604) - (_609 * _606))) / (sqrt(((_1193 * _1193) + (_1196 * _1196)) + (_1190 * _1190)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_1178, _1179, _1180), vec3(_668, _670, _671))));
        _1224 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    }
    else
    {
        _1224 = 0.0;
    }
    vec4 _1226 = textureLod(sampler2D(M_Ice_Ov_N_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _656) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _657) + cbTextureTilingScale._m0[0u].w), _1224);
    float _1232 = (_1226.x * 2.0) + (-1.0);
    float _1233 = (_1226.y * 2.0) + (-1.0);
    float _1788 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _1234 = isnan(1.0) ? _1788 : (isnan(_1788) ? 1.0 : min(_1788, 1.0));
    float _1239 = (_1234 * _1234) * (3.0 - (_1234 * 2.0));
    float _1249 = (((((((_1040.x * _967) + (_1008.x * _968)) + (_1074.x * _966)) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].x) + _833) + (((_1239 * (((_1154.x * 2.0) + (-1.0)) - _1232)) + _1232) * cbMtdParam._m0[12u].y);
    float _1250 = (((((((_1040.y * _967) + (_1008.y * _968)) + (_1074.y * _966)) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].x) + _835) + (((_1239 * (((_1154.y * 2.0) + (-1.0)) - _1233)) + _1233) * cbMtdParam._m0[12u].y);
    float _1253 = fma(_841, _668, fma(_1250, _684, _1249 * _704));
    float _1256 = fma(_841, _670, fma(_1250, _685, _1249 * _705));
    float _1259 = fma(_841, _671, fma(_1250, _686, _1249 * _706));
    float _1263 = inversesqrt(dot(vec3(_1253, _1256, _1259), vec3(_1253, _1256, _1259)));
    float _1264 = _1263 * _1253;
    float _1265 = _1263 * _1256;
    float _1266 = _1263 * _1259;
    float _1278 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1279 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1280 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1281 = (-0.0) - _1178;
    float _1283 = (-0.0) - _1179;
    float _1284 = (-0.0) - _1180;
    float _1290 = float(gl_LaunchIDEXT.x);
    float _1291 = float(gl_LaunchIDEXT.y);
    float _1294 = float(gl_LaunchSizeEXT.x);
    float _1308 = fract(fract(sin(dot(vec2(_1290 / _1294, _1291 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1321 = fract(fract(sin(dot(vec2((_1290 + 128.0) / _1294, (_1291 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _64._m0 = 1u;
    uvec4 _1331 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1332 = _1331.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1332, _1331.w, _1332, vec3(_1278, _1279, _1280), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    if (_64._m0 == 0u)
    {
        float _1353 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1264, _1265, _1266));
        float _1799 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1356 = isnan(1.0) ? _1799 : (isnan(_1799) ? 1.0 : min(_1799, 1.0));
        float _1375 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _961) * 0.949999988079071044921875);
        float _1376 = _1375 * _1375;
        float _1377 = g_sceneCB._m0[4u].x - _1178;
        float _1378 = g_sceneCB._m0[4u].y - _1179;
        float _1379 = g_sceneCB._m0[4u].z - _1180;
        float _1383 = inversesqrt(dot(vec3(_1377, _1378, _1379), vec3(_1377, _1378, _1379)));
        float _1384 = _1383 * _1377;
        float _1385 = _1383 * _1378;
        float _1386 = _1383 * _1379;
        float _1387 = dot(vec3(_1264, _1265, _1266), vec3(g_sceneCB._m0[4u].xyz));
        float _1810 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1390 = isnan(1.0) ? _1810 : (isnan(_1810) ? 1.0 : min(_1810, 1.0));
        float _1391 = dot(vec3(_1264, _1265, _1266), vec3(_1281, _1283, _1284));
        float _1821 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1394 = isnan(1.0) ? _1821 : (isnan(_1821) ? 1.0 : min(_1821, 1.0));
        float _1395 = dot(vec3(_1264, _1265, _1266), vec3(_1384, _1385, _1386));
        float _1832 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1398 = isnan(1.0) ? _1832 : (isnan(_1832) ? 1.0 : min(_1832, 1.0));
        float _1399 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1384, _1385, _1386));
        float _1843 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = _1376 * _1376;
        float _1407 = ((_1398 * _1398) * (_1403 + (-1.0))) + 1.0;
        float _1419 = (exp2(log2(1.0 - (isnan(1.0) ? _1843 : (isnan(_1843) ? 1.0 : min(_1843, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1421 = 1.0 - _1376;
        float _1432 = (0.5 / (((_1394 * ((_1390 * _1421) + _1376)) + 9.9999999392252902907785028219223e-09) + (((_1394 * _1421) + _1376) * _1390))) * _1390;
        float _1854 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1434 = (isnan(1.0) ? _1854 : (isnan(_1854) ? 1.0 : min(_1854, 1.0))) * (_1403 / ((_1407 * _1407) * 3.141590118408203125));
        _1441 = ((_954 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1356;
        _1442 = ((_955 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1356;
        _1443 = ((_956 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1356;
        _1444 = (_1419 * g_sceneCB._m0[5u].x) * _1434;
        _1445 = (_1419 * g_sceneCB._m0[5u].y) * _1434;
        _1446 = (_1419 * g_sceneCB._m0[5u].z) * _1434;
    }
    else
    {
        _1441 = 0.0;
        _1442 = 0.0;
        _1443 = 0.0;
        _1444 = 0.0;
        _1445 = 0.0;
        _1446 = 0.0;
    }
    bool _1448 = abs(_1265) < 0.89999997615814208984375;
    float _1450 = float(_1448);
    float _1451 = _1448 ? 0.0 : 1.0;
    float _1454 = (_1450 * _1266) - (_1451 * _1265);
    float _1455 = _1451 * _1264;
    float _1457 = (-0.0) - (_1264 * _1450);
    float _1461 = inversesqrt(dot(vec3(_1454, _1455, _1457), vec3(_1454, _1455, _1457)));
    float _1462 = _1454 * _1461;
    float _1463 = _1455 * _1461;
    float _1464 = _1461 * _1457;
    float _1467 = (_1463 * _1266) - (_1464 * _1265);
    float _1470 = (_1464 * _1264) - (_1462 * _1266);
    float _1473 = (_1462 * _1265) - (_1463 * _1264);
    float _1475;
    float _1483;
    float _1474 = 0.0;
    uint _1476 = 0u;
    float _1480;
    bool _1482;
    for (;;)
    {
        _1480 = (float(_1476) + _1308) * 0.03125;
        _1482 = _1476 == 0u;
        float frontier_phi_53_pred;
        if (_1482)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1617;
            float _1618;
            uint _1620;
            _1617 = 0.0;
            _1618 = 0.5;
            _1620 = _1476;
            float _1484;
            for (;;)
            {
                _1484 = ((_1620 & 1u) != 0u) ? (_1618 + _1617) : _1617;
                uint _1621 = _1620 >> 1u;
                if (_1621 == 0u)
                {
                    break;
                }
                else
                {
                    _1617 = _1484;
                    _1618 *= 0.5;
                    _1620 = _1621;
                }
            }
            frontier_phi_53_pred = _1484;
        }
        _1483 = frontier_phi_53_pred;
        float _1485 = _1483 + _1321;
        float _1489 = sqrt(_1480);
        float _1490 = ((_1485 > 1.0) ? (_1485 + (-1.0)) : _1485) * 6.283185482025146484375;
        float _1493 = cos(_1490) * _1489;
        float _1495 = sin(_1490) * _1489;
        float _1497 = sqrt(1.0 - _1480);
        float _1510 = ((_1497 * _1264) + (_1493 * _1467)) + (_1495 * _1462);
        float _1511 = ((_1497 * _1265) + (_1493 * _1470)) + (_1495 * _1463);
        float _1512 = ((_1497 * _1266) + (_1493 * _1473)) + (_1495 * _1464);
        _63._m0 = 1u;
        uvec4 _1516 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1517 = _1516.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1517, _1516.w, _1517, vec3(_1278, _1279, _1280), 9.9999997473787516355514526367188e-05, vec3(_1510, _1511, _1512), 10000.0, 1);
        float _1523 = dot(vec3(_1264, _1265, _1266), vec3(_1510, _1511, _1512));
        float _1865 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1526 = isnan(1.0) ? _1865 : (isnan(_1865) ? 1.0 : min(_1865, 1.0));
        _1475 = ((float(_63._m0 == 0u) * _1526) / (_1526 * 0.3183098733425140380859375)) + _1474;
        uint _1477 = _1476 + 1u;
        if (_1477 == 32u)
        {
            break;
        }
        else
        {
            _1474 = _1475;
            _1476 = _1477;
            continue;
        }
    }
    float _1534 = _1475 * 0.009947183541953563690185546875;
    float _1539 = dot(vec3(_1178, _1179, _1180), vec3(_1264, _1265, _1266)) * 2.0;
    vec4 _1553 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1178 - (_1539 * _1264), _1179 - (_1539 * _1265), _1180 - (_1539 * _1266)), 4.0 - (_961 * 4.0));
    float _1558 = dot(vec3(_1281, _1283, _1284), vec3(_1264, _1265, _1266));
    float _1876 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
    float _1567 = (exp2(log2(1.0 - (isnan(1.0) ? _1876 : (isnan(_1876) ? 1.0 : min(_1876, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1573 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1264, _1265, _1266), 0.0);
    float _1584 = (_1444 + _1441) + (((_1573.x * _954) + (_1567 * _1553.x)) * _1534);
    float _1588 = (_1445 + _1442) + (((_1573.y * _955) + (_1567 * _1553.y)) * _1534);
    float _1592 = (_1446 + _1443) + (((_1573.z * _956) + (_1567 * _1553.z)) * _1534);
    float _1887 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
    float _1898 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
    float _1909 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    bool _1600 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1611;
    _1611.x = _1600 ? ((_661 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1887 : (isnan(_1887) ? 1.0 : min(_1887, 1.0)));
    _1611.y = _1600 ? ((_664 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1898 : (isnan(_1898) ? 1.0 : min(_1898, 1.0)));
    _1611.z = _1600 ? ((_667 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1909 : (isnan(_1909) ? 1.0 : min(_1909, 1.0)));
    payload._m0 = _1611;
}


