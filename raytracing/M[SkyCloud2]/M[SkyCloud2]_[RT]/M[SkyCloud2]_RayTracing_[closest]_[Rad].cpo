#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_SkyCloud2_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_SkyCloud2_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1498;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _164 & 65535u;
            frontier_phi_3_2_ladder_2 = _168;
        }
        else
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _165 >> 16u;
        }
        _170 = frontier_phi_3_2_ladder_1;
        _172 = frontier_phi_3_2_ladder;
        _173 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _184 = _178 * _170;
    uint _185 = _184 + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 16u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 20u;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((_212 + _184) >> 2u));
    uint _221 = _220.x;
    bool _235 = _179 == 0u;
    uint _236;
    if (_235)
    {
        _236 = _212 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 12u;
        }
        _236 = frontier_phi_9_10_ladder;
    }
    uint _240 = _180 ? (_236 + 4u) : _236;
    uvec4 _250 = texelFetch(l_geomAttrib_0, int(((_184 + 4u) + _240) >> 2u));
    uint _251 = _250.x;
    float _255 = float(int(uint(int(_251 << 16u) >> int(16u))));
    float _256 = float(int(uint(int(_251) >> int(16u))));
    uint _257 = _178 * _172;
    uint _258 = _257 + 12u;
    uint _279;
    uint _280;
    uint _281;
    uint _282;
    if (_183)
    {
        uvec4 _260 = texelFetch(l_geomAttrib_0, int(_258 >> 2u));
        uint _261 = _260.x;
        _279 = _261 & 255u;
        _280 = (_261 >> 8u) & 255u;
        _281 = (_261 >> 16u) & 255u;
        _282 = 16u;
    }
    else
    {
        uint _267 = _258 >> 2u;
        uvec2 _273 = uvec2(texelFetch(l_geomAttrib_0, int(_267)).x, texelFetch(l_geomAttrib_0, int(_267 + 1u)).x);
        uint _274 = _273.x;
        _279 = _274 & 65535u;
        _280 = _274 >> 16u;
        _281 = _273.y & 65535u;
        _282 = 20u;
    }
    uvec4 _288 = texelFetch(l_geomAttrib_0, int((_282 + _257) >> 2u));
    uint _289 = _288.x;
    uint _301;
    if (_235)
    {
        _301 = _282 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _282 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _282 + 12u;
        }
        _301 = frontier_phi_16_17_ladder;
    }
    uint _305 = _180 ? (_301 + 4u) : _301;
    uvec4 _315 = texelFetch(l_geomAttrib_0, int(((_257 + 4u) + _305) >> 2u));
    uint _316 = _315.x;
    float _320 = float(int(uint(int(_316 << 16u) >> int(16u))));
    float _321 = float(int(uint(int(_316) >> int(16u))));
    uint _322 = _178 * _173;
    uint _323 = _322 + 12u;
    uint _344;
    uint _345;
    uint _346;
    uint _347;
    if (_183)
    {
        uvec4 _325 = texelFetch(l_geomAttrib_0, int(_323 >> 2u));
        uint _326 = _325.x;
        _344 = _326 & 255u;
        _345 = (_326 >> 8u) & 255u;
        _346 = (_326 >> 16u) & 255u;
        _347 = 16u;
    }
    else
    {
        uint _332 = _323 >> 2u;
        uvec2 _338 = uvec2(texelFetch(l_geomAttrib_0, int(_332)).x, texelFetch(l_geomAttrib_0, int(_332 + 1u)).x);
        uint _339 = _338.x;
        _344 = _339 & 65535u;
        _345 = _339 >> 16u;
        _346 = _338.y & 65535u;
        _347 = 20u;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int((_347 + _322) >> 2u));
    uint _354 = _353.x;
    uint _366;
    if (_235)
    {
        _366 = _347 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _347 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _347 + 12u;
        }
        _366 = frontier_phi_23_24_ladder;
    }
    uint _370 = _180 ? (_366 + 4u) : _366;
    uvec4 _380 = texelFetch(l_geomAttrib_0, int(((_322 + 4u) + _370) >> 2u));
    uint _381 = _380.x;
    float _385 = float(int(uint(int(_381 << 16u) >> int(16u))));
    float _386 = float(int(uint(int(_381) >> int(16u))));
    bool _388 = _129.z == 0u;
    float _424;
    float _425;
    float _426;
    if (_388)
    {
        uint _391 = _170 * 3u;
        uvec3 _400 = uvec3(texelFetch(l_geomPositionBuffer, int(_391)).x, texelFetch(l_geomPositionBuffer, int(_391 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_391 + 2u)).x);
        _424 = uintBitsToFloat(_400.x);
        _425 = uintBitsToFloat(_400.y);
        _426 = uintBitsToFloat(_400.z);
    }
    else
    {
        uint _408 = _170 * 2u;
        uvec2 _414 = uvec2(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x);
        uint _415 = _414.x;
        _424 = unpackHalf2x16(_415).x;
        _425 = unpackHalf2x16(_415 >> 16u).x;
        _426 = unpackHalf2x16(_414.y).x;
    }
    float _462;
    float _463;
    float _464;
    if (_388)
    {
        uint _429 = _172 * 3u;
        uvec3 _438 = uvec3(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_429 + 2u)).x);
        _462 = uintBitsToFloat(_438.x);
        _463 = uintBitsToFloat(_438.y);
        _464 = uintBitsToFloat(_438.z);
    }
    else
    {
        uint _446 = _172 * 2u;
        uvec2 _452 = uvec2(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x);
        uint _453 = _452.x;
        _462 = unpackHalf2x16(_453).x;
        _463 = unpackHalf2x16(_453 >> 16u).x;
        _464 = unpackHalf2x16(_452.y).x;
    }
    float _500;
    float _501;
    float _502;
    if (_388)
    {
        uint _467 = _173 * 3u;
        uvec3 _476 = uvec3(texelFetch(l_geomPositionBuffer, int(_467)).x, texelFetch(l_geomPositionBuffer, int(_467 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_467 + 2u)).x);
        _500 = uintBitsToFloat(_476.x);
        _501 = uintBitsToFloat(_476.y);
        _502 = uintBitsToFloat(_476.z);
    }
    else
    {
        uint _484 = _173 * 2u;
        uvec2 _490 = uvec2(texelFetch(l_geomPositionBuffer, int(_484)).x, texelFetch(l_geomPositionBuffer, int(_484 + 1u)).x);
        uint _491 = _490.x;
        _500 = unpackHalf2x16(_491).x;
        _501 = unpackHalf2x16(_491 >> 16u).x;
        _502 = unpackHalf2x16(_490.y).x;
    }
    float _505 = (1.0 - hit._m0.x) - hit._m0.y;
    float _532 = (((float(texelFetch(l_geomAttrib_0, int((_305 + _257) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_240 + _184) >> 2u)).x >> 24u) * _505)) + (float(texelFetch(l_geomAttrib_0, int((_370 + _322) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _546 = (_320 - _255) * 0.00048828125;
    float _548 = (_321 - _256) * 0.00048828125;
    float _551 = (_385 - _255) * 0.00048828125;
    float _552 = (_386 - _256) * 0.00048828125;
    float _574 = _462 - _424;
    float _575 = _463 - _425;
    float _576 = _464 - _426;
    float _579 = fma(_576, gl_ObjectToWorldEXT[2u].x, fma(_575, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _574));
    float _582 = fma(_576, gl_ObjectToWorldEXT[2u].y, fma(_575, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _574));
    float _585 = fma(_576, gl_ObjectToWorldEXT[2u].z, fma(_575, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _574));
    float _586 = _500 - _424;
    float _587 = _501 - _425;
    float _588 = _502 - _426;
    float _591 = fma(_588, gl_ObjectToWorldEXT[2u].x, fma(_587, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _586));
    float _594 = fma(_588, gl_ObjectToWorldEXT[2u].y, fma(_587, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _586));
    float _597 = fma(_588, gl_ObjectToWorldEXT[2u].z, fma(_587, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _586));
    float _598 = (((_320 * hit._m0.x) + (_255 * _505)) + (_385 * hit._m0.y)) * 0.00048828125;
    float _599 = (((_321 * hit._m0.x) + (_256 * _505)) + (_386 * hit._m0.y)) * 0.00048828125;
    float _603 = (((float(_209) * _505) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _606 = (((float(_210) * _505) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_345) * hit._m0.y);
    float _609 = (((float(_211) * _505) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _610 = _603 * 0.0078740157186985015869140625;
    float _612 = _606 * 0.0078740157186985015869140625;
    float _613 = _609 * 0.0078740157186985015869140625;
    float _626 = ((((float(_221 & 255u) * _505) + (-127.0)) + (float(_289 & 255u) * hit._m0.x)) + (float(_354 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _627 = ((((float((_221 >> 8u) & 255u) * _505) + (-127.0)) + (float((_289 >> 8u) & 255u) * hit._m0.x)) + (float((_354 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _628 = ((((float((_221 >> 16u) & 255u) * _505) + (-127.0)) + (float((_289 >> 16u) & 255u) * hit._m0.x)) + (float((_354 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float(_221 >> 24u) * _505) + (-127.0)) + (float(_289 >> 24u) * hit._m0.x)) + (float(_354 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _639 = ((_627 * _613) - (_628 * _612)) * _629;
    float _640 = ((_628 * _610) - (_626 * _613)) * _629;
    float _641 = ((_626 * _612) - (_627 * _610)) * _629;
    float _645 = inversesqrt(dot(vec3(_639, _640, _641), vec3(_639, _640, _641)));
    float _657 = cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x;
    float _664 = _599 - ((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    uvec2 _678 = uvec2(textureSize(M_SkyCloud2_snp_0_Texture2D_0, int(0u)));
    bool _683 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _736;
    if (_683)
    {
        float _694 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _700 = (_597 * _582) - (_594 * _585);
        float _703 = (_591 * _585) - (_597 * _579);
        float _706 = (_594 * _579) - (_591 * _582);
        float _733 = ((log2((((float(_678.y) * 0.5) * float(_678.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_703 * _703) + (_706 * _706)) + (_700 * _700)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_694 * gl_WorldRayDirectionEXT.x, _694 * gl_WorldRayDirectionEXT.y, _694 * gl_WorldRayDirectionEXT.z), vec3(_610, _612, _613))));
        _736 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    }
    else
    {
        _736 = 0.0;
    }
    vec4 _740 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[12u].x) * ((_657 * 3.2999999523162841796875) + _598)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[12u].x) * _664) + cbTextureTilingScale._m0[0u].w), _736);
    float _742 = _740.y;
    float _743 = _742 * (-0.20000000298023223876953125);
    float _807;
    if (_683)
    {
        float _767 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _773 = (_597 * _582) - (_594 * _585);
        float _776 = (_591 * _585) - (_597 * _579);
        float _779 = (_594 * _579) - (_591 * _582);
        float _805 = ((log2((((float(_678.y) * 0.5) * float(_678.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_776 * _776) + (_779 * _779)) + (_773 * _773)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_767 * gl_WorldRayDirectionEXT.x, _767 * gl_WorldRayDirectionEXT.y, _767 * gl_WorldRayDirectionEXT.z), vec3(_610, _612, _613))));
        _807 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    }
    else
    {
        _807 = 0.0;
    }
    vec4 _809 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + _598) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) + _599) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _807);
    float _811 = _809.z;
    float _822 = ((_664 * cbMtdParam._m0[12u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _873;
    if (_683)
    {
        float _833 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _839 = (_597 * _582) - (_594 * _585);
        float _842 = (_591 * _585) - (_597 * _579);
        float _845 = (_594 * _579) - (_591 * _582);
        float _871 = ((log2((((float(_678.y) * 0.5) * float(_678.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_842 * _842) + (_845 * _845)) + (_839 * _839)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_833 * gl_WorldRayDirectionEXT.x, _833 * gl_WorldRayDirectionEXT.y, _833 * gl_WorldRayDirectionEXT.z), vec3(_610, _612, _613))));
        _873 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    }
    else
    {
        _873 = 0.0;
    }
    float _878 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((((_657 * 6.900000095367431640625) + _598) * cbMtdParam._m0[12u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _822), _873).x * 0.0500000007450580596923828125;
    float _938;
    if (_683)
    {
        float _898 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _904 = (_597 * _582) - (_594 * _585);
        float _907 = (_591 * _585) - (_597 * _579);
        float _910 = (_594 * _579) - (_591 * _582);
        float _936 = ((log2((((float(_678.y) * 0.5) * float(_678.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_907 * _907) + (_910 * _910)) + (_904 * _904)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_898 * gl_WorldRayDirectionEXT.x, _898 * gl_WorldRayDirectionEXT.y, _898 * gl_WorldRayDirectionEXT.z), vec3(_610, _612, _613))));
        _938 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    }
    else
    {
        _938 = 0.0;
    }
    float _943 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((((_657 * 16.0) + _598) * cbMtdParam._m0[12u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _822), _938).x * 0.100000001490116119384765625;
    float _945 = ((_811 + _743) + _878) + _943;
    uvec2 _964 = uvec2(textureSize(M_SkyCloud2_snp_0_Texture2D_2, int(0u)));
    float _1015;
    if (_683)
    {
        float _975 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _981 = (_597 * _582) - (_594 * _585);
        float _984 = (_591 * _585) - (_597 * _579);
        float _987 = (_594 * _579) - (_591 * _582);
        float _1013 = ((log2((((float(_964.y) * 0.5) * float(_964.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_984 * _984) + (_987 * _987)) + (_981 * _981)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_975 * gl_WorldRayDirectionEXT.x, _975 * gl_WorldRayDirectionEXT.y, _975 * gl_WorldRayDirectionEXT.z), vec3(_610, _612, _613))));
        _1015 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    }
    else
    {
        _1015 = 0.0;
    }
    vec4 _1017 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _598) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _599) + cbTextureTilingScale._m0[2u].w), _1015);
    float _1031 = (((cbMtdParam._m0[11u].x * _532) * _945) * _1017.x) * cbMtdParam._m0[9u].x;
    float _1035 = (((_945 * _532) * cbMtdParam._m0[11u].y) * _1017.y) * cbMtdParam._m0[9u].y;
    float _1039 = ((((((_811 - (_742 * 0.20000000298023223876953125)) + _878) + _943) * _532) * cbMtdParam._m0[11u].z) * _1017.z) * cbMtdParam._m0[9u].z;
    uvec2 _1061 = uvec2(textureSize(M_SkyCloud2_snp_0_Texture2D_1, int(0u)));
    float _1065 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1066 = _1065 * gl_WorldRayDirectionEXT.x;
    float _1067 = _1065 * gl_WorldRayDirectionEXT.y;
    float _1068 = _1065 * gl_WorldRayDirectionEXT.z;
    float _1112;
    if (_683)
    {
        float _1078 = (_597 * _582) - (_594 * _585);
        float _1081 = (_591 * _585) - (_597 * _579);
        float _1084 = (_594 * _579) - (_591 * _582);
        float _1110 = ((log2((((float(_1061.y) * 0.5) * float(_1061.x)) * abs((_552 * _546) - (_551 * _548))) / (sqrt(((_1081 * _1081) + (_1084 * _1084)) + (_1078 * _1078)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_1066, _1067, _1068), vec3(_610, _612, _613))));
        _1112 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    }
    else
    {
        _1112 = 0.0;
    }
    vec4 _1115 = textureLod(sampler2D(M_SkyCloud2_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (_743 + _598)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (_743 + _599)) + cbTextureTilingScale._m0[1u].w), _1112);
    float _1121 = (_1115.x * 2.0) + (-1.0);
    float _1123 = (_1115.y * 2.0) + (-1.0);
    float _1124 = dot(vec2(_1121, _1123), vec2(_1121, _1123));
    float _1612 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1129 = sqrt(1.0 - (isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0))));
    float _1132 = (_1121 * cbMtdParam._m0[12u].z) + _1121;
    float _1133 = (_1123 * cbMtdParam._m0[12u].z) + _1123;
    float _1136 = fma(_1129, _610, fma(_1133, _626, (_645 * _639) * _1132));
    float _1139 = fma(_1129, _612, fma(_1133, _627, (_645 * _640) * _1132));
    float _1142 = fma(_1129, _613, fma(_1133, _628, (_645 * _641) * _1132));
    float _1146 = inversesqrt(dot(vec3(_1136, _1139, _1142), vec3(_1136, _1139, _1142)));
    float _1147 = _1146 * _1136;
    float _1148 = _1146 * _1139;
    float _1149 = _1146 * _1142;
    float _1161 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1162 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1163 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1164 = (-0.0) - _1066;
    float _1166 = (-0.0) - _1067;
    float _1167 = (-0.0) - _1068;
    float _1173 = float(gl_LaunchIDEXT.x);
    float _1174 = float(gl_LaunchIDEXT.y);
    float _1177 = float(gl_LaunchSizeEXT.x);
    float _1191 = fract(fract(sin(dot(vec2(_1173 / _1177, _1174 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1204 = fract(fract(sin(dot(vec2((_1173 + 128.0) / _1177, (_1174 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1214 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1215 = _1214.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1215, _1214.w, _1215, vec3(_1161, _1162, _1163), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    if (_67._m0 == 0u)
    {
        float _1236 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1147, _1148, _1149));
        float _1623 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1239 = isnan(1.0) ? _1623 : (isnan(_1623) ? 1.0 : min(_1623, 1.0));
        float _1258 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[12u].y) * 0.949999988079071044921875);
        float _1259 = _1258 * _1258;
        float _1260 = g_sceneCB._m0[4u].x - _1066;
        float _1261 = g_sceneCB._m0[4u].y - _1067;
        float _1262 = g_sceneCB._m0[4u].z - _1068;
        float _1266 = inversesqrt(dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262)));
        float _1267 = _1266 * _1260;
        float _1268 = _1266 * _1261;
        float _1269 = _1266 * _1262;
        float _1270 = dot(vec3(_1147, _1148, _1149), vec3(g_sceneCB._m0[4u].xyz));
        float _1634 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1273 = isnan(1.0) ? _1634 : (isnan(_1634) ? 1.0 : min(_1634, 1.0));
        float _1274 = dot(vec3(_1147, _1148, _1149), vec3(_1164, _1166, _1167));
        float _1645 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1277 = isnan(1.0) ? _1645 : (isnan(_1645) ? 1.0 : min(_1645, 1.0));
        float _1278 = dot(vec3(_1147, _1148, _1149), vec3(_1267, _1268, _1269));
        float _1656 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1281 = isnan(1.0) ? _1656 : (isnan(_1656) ? 1.0 : min(_1656, 1.0));
        float _1282 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1267, _1268, _1269));
        float _1667 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1286 = _1259 * _1259;
        float _1290 = ((_1281 * _1281) * (_1286 + (-1.0))) + 1.0;
        float _1302 = (exp2(log2(1.0 - (isnan(1.0) ? _1667 : (isnan(_1667) ? 1.0 : min(_1667, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1304 = 1.0 - _1259;
        float _1315 = (0.5 / (((_1277 * ((_1273 * _1304) + _1259)) + 9.9999999392252902907785028219223e-09) + (((_1277 * _1304) + _1259) * _1273))) * _1273;
        float _1678 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1317 = (isnan(1.0) ? _1678 : (isnan(_1678) ? 1.0 : min(_1678, 1.0))) * (_1286 / ((_1290 * _1290) * 3.141590118408203125));
        _1324 = ((_1031 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1239;
        _1325 = ((_1035 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1239;
        _1326 = ((_1039 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1239;
        _1327 = (_1302 * g_sceneCB._m0[5u].x) * _1317;
        _1328 = (_1302 * g_sceneCB._m0[5u].y) * _1317;
        _1329 = (_1302 * g_sceneCB._m0[5u].z) * _1317;
    }
    else
    {
        _1324 = 0.0;
        _1325 = 0.0;
        _1326 = 0.0;
        _1327 = 0.0;
        _1328 = 0.0;
        _1329 = 0.0;
    }
    bool _1331 = abs(_1148) < 0.89999997615814208984375;
    float _1333 = float(_1331);
    float _1334 = _1331 ? 0.0 : 1.0;
    float _1337 = (_1333 * _1149) - (_1334 * _1148);
    float _1338 = _1334 * _1147;
    float _1340 = (-0.0) - (_1147 * _1333);
    float _1344 = inversesqrt(dot(vec3(_1337, _1338, _1340), vec3(_1337, _1338, _1340)));
    float _1345 = _1337 * _1344;
    float _1346 = _1338 * _1344;
    float _1347 = _1344 * _1340;
    float _1350 = (_1346 * _1149) - (_1347 * _1148);
    float _1353 = (_1347 * _1147) - (_1345 * _1149);
    float _1356 = (_1345 * _1148) - (_1346 * _1147);
    float _1358;
    float _1366;
    float _1357 = 0.0;
    uint _1359 = 0u;
    float _1363;
    bool _1365;
    for (;;)
    {
        _1363 = (float(_1359) + _1191) * 0.03125;
        _1365 = _1359 == 0u;
        float frontier_phi_51_pred;
        if (_1365)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1503;
            float _1504;
            uint _1506;
            _1503 = 0.0;
            _1504 = 0.5;
            _1506 = _1359;
            float _1367;
            for (;;)
            {
                _1367 = ((_1506 & 1u) != 0u) ? (_1504 + _1503) : _1503;
                uint _1507 = _1506 >> 1u;
                if (_1507 == 0u)
                {
                    break;
                }
                else
                {
                    _1503 = _1367;
                    _1504 *= 0.5;
                    _1506 = _1507;
                }
            }
            frontier_phi_51_pred = _1367;
        }
        _1366 = frontier_phi_51_pred;
        float _1368 = _1366 + _1204;
        float _1372 = sqrt(_1363);
        float _1373 = ((_1368 > 1.0) ? (_1368 + (-1.0)) : _1368) * 6.283185482025146484375;
        float _1376 = cos(_1373) * _1372;
        float _1378 = sin(_1373) * _1372;
        float _1380 = sqrt(1.0 - _1363);
        float _1393 = ((_1380 * _1147) + (_1376 * _1350)) + (_1378 * _1345);
        float _1394 = ((_1380 * _1148) + (_1376 * _1353)) + (_1378 * _1346);
        float _1395 = ((_1380 * _1149) + (_1376 * _1356)) + (_1378 * _1347);
        _66._m0 = 1u;
        uvec4 _1399 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1400 = _1399.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1400, _1399.w, _1400, vec3(_1161, _1162, _1163), 9.9999997473787516355514526367188e-05, vec3(_1393, _1394, _1395), 10000.0, 1);
        float _1406 = dot(vec3(_1147, _1148, _1149), vec3(_1393, _1394, _1395));
        float _1689 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1409 = isnan(1.0) ? _1689 : (isnan(_1689) ? 1.0 : min(_1689, 1.0));
        _1358 = ((float(_66._m0 == 0u) * _1409) / (_1409 * 0.3183098733425140380859375)) + _1357;
        uint _1360 = _1359 + 1u;
        if (_1360 == 32u)
        {
            break;
        }
        else
        {
            _1357 = _1358;
            _1359 = _1360;
            continue;
        }
    }
    float _1417 = _1358 * 0.009947183541953563690185546875;
    float _1422 = dot(vec3(_1066, _1067, _1068), vec3(_1147, _1148, _1149)) * 2.0;
    vec4 _1436 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1066 - (_1422 * _1147), _1067 - (_1422 * _1148), _1068 - (_1422 * _1149)), 4.0 - (cbMtdParam._m0[12u].y * 4.0));
    float _1441 = dot(vec3(_1164, _1166, _1167), vec3(_1147, _1148, _1149));
    float _1700 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
    float _1450 = (exp2(log2(1.0 - (isnan(1.0) ? _1700 : (isnan(_1700) ? 1.0 : min(_1700, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1456 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1147, _1148, _1149), 0.0);
    float _1468 = ((_1324 + cbMtdParam._m0[10u].x) + _1327) + (((_1456.x * _1031) + (_1450 * _1436.x)) * _1417);
    float _1473 = ((_1325 + cbMtdParam._m0[10u].y) + _1328) + (((_1456.y * _1035) + (_1450 * _1436.y)) * _1417);
    float _1478 = ((_1326 + cbMtdParam._m0[10u].z) + _1329) + (((_1456.z * _1039) + (_1450 * _1436.z)) * _1417);
    float _1711 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
    float _1722 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
    float _1733 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    bool _1486 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1497;
    _1497.x = _1486 ? ((_603 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1711 : (isnan(_1711) ? 1.0 : min(_1711, 1.0)));
    _1497.y = _1486 ? ((_606 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1722 : (isnan(_1722) ? 1.0 : min(_1722, 1.0)));
    _1497.z = _1486 ? ((_609 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1733 : (isnan(_1733) ? 1.0 : min(_1733, 1.0)));
    payload._m0 = _1497;
}


