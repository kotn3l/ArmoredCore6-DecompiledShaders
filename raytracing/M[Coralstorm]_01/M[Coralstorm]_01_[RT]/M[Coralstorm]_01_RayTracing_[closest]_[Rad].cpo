#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_Coralstorm_01_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1645;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _166 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _167 >> 16u;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _169;
        }
        _172 = frontier_phi_3_2_ladder_2;
        _174 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _220 = _181 == 0u;
    uint _221;
    if (_220)
    {
        _221 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _221 = frontier_phi_9_10_ladder;
    }
    uint _226 = _182 ? (_221 + 4u) : _221;
    uint _227 = _180 * _172;
    uint _231 = ((_227 + 4u) + _226) >> 2u;
    uvec2 _237 = uvec2(texelFetch(l_geomAttrib_0, int(_231)).x, texelFetch(l_geomAttrib_0, int(_231 + 1u)).x);
    uint _238 = _237.x;
    uint _239 = _237.y;
    float _243 = float(int(uint(int(_238 << 16u) >> int(16u))));
    float _244 = float(int(uint(int(_238) >> int(16u))));
    uvec4 _253 = texelFetch(l_geomAttrib_0, int(((_227 + 12u) + _226) >> 2u));
    uint _254 = _253.x;
    uint _264 = (_180 * _174) + 12u;
    uint _285;
    uint _286;
    uint _287;
    uint _288;
    if (_185)
    {
        uvec4 _266 = texelFetch(l_geomAttrib_0, int(_264 >> 2u));
        uint _267 = _266.x;
        _285 = _267 & 255u;
        _286 = (_267 >> 8u) & 255u;
        _287 = (_267 >> 16u) & 255u;
        _288 = 20u;
    }
    else
    {
        uint _273 = _264 >> 2u;
        uvec2 _279 = uvec2(texelFetch(l_geomAttrib_0, int(_273)).x, texelFetch(l_geomAttrib_0, int(_273 + 1u)).x);
        uint _280 = _279.x;
        _285 = _280 & 65535u;
        _286 = _280 >> 16u;
        _287 = _279.y & 65535u;
        _288 = 24u;
    }
    uint _292;
    if (_220)
    {
        _292 = _288;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _288 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _288 + 8u;
        }
        _292 = frontier_phi_16_17_ladder;
    }
    uint _296 = _182 ? (_292 + 4u) : _292;
    uint _297 = _180 * _174;
    uint _300 = ((_297 + 4u) + _296) >> 2u;
    uvec2 _306 = uvec2(texelFetch(l_geomAttrib_0, int(_300)).x, texelFetch(l_geomAttrib_0, int(_300 + 1u)).x);
    uint _307 = _306.x;
    uint _308 = _306.y;
    float _312 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_307) >> int(16u))));
    uvec4 _322 = texelFetch(l_geomAttrib_0, int(((_297 + 12u) + _296) >> 2u));
    uint _323 = _322.x;
    uint _333 = (_180 * _175) + 12u;
    uint _354;
    uint _355;
    uint _356;
    uint _357;
    if (_185)
    {
        uvec4 _335 = texelFetch(l_geomAttrib_0, int(_333 >> 2u));
        uint _336 = _335.x;
        _354 = _336 & 255u;
        _355 = (_336 >> 8u) & 255u;
        _356 = (_336 >> 16u) & 255u;
        _357 = 20u;
    }
    else
    {
        uint _342 = _333 >> 2u;
        uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
        uint _349 = _348.x;
        _354 = _349 & 65535u;
        _355 = _349 >> 16u;
        _356 = _348.y & 65535u;
        _357 = 24u;
    }
    uint _361;
    if (_220)
    {
        _361 = _357;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _357 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _357 + 8u;
        }
        _361 = frontier_phi_23_24_ladder;
    }
    uint _365 = _182 ? (_361 + 4u) : _361;
    uint _366 = _180 * _175;
    uint _369 = ((_366 + 4u) + _365) >> 2u;
    uvec2 _375 = uvec2(texelFetch(l_geomAttrib_0, int(_369)).x, texelFetch(l_geomAttrib_0, int(_369 + 1u)).x);
    uint _376 = _375.x;
    uint _377 = _375.y;
    float _381 = float(int(uint(int(_376 << 16u) >> int(16u))));
    float _382 = float(int(uint(int(_376) >> int(16u))));
    uvec4 _391 = texelFetch(l_geomAttrib_0, int(((_366 + 12u) + _365) >> 2u));
    uint _392 = _391.x;
    bool _402 = _131.z == 0u;
    float _438;
    float _439;
    float _440;
    if (_402)
    {
        uint _405 = _172 * 3u;
        uvec3 _414 = uvec3(texelFetch(l_geomPositionBuffer, int(_405)).x, texelFetch(l_geomPositionBuffer, int(_405 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_405 + 2u)).x);
        _438 = uintBitsToFloat(_414.x);
        _439 = uintBitsToFloat(_414.y);
        _440 = uintBitsToFloat(_414.z);
    }
    else
    {
        uint _422 = _172 * 2u;
        uvec2 _428 = uvec2(texelFetch(l_geomPositionBuffer, int(_422)).x, texelFetch(l_geomPositionBuffer, int(_422 + 1u)).x);
        uint _429 = _428.x;
        _438 = unpackHalf2x16(_429).x;
        _439 = unpackHalf2x16(_429 >> 16u).x;
        _440 = unpackHalf2x16(_428.y).x;
    }
    float _476;
    float _477;
    float _478;
    if (_402)
    {
        uint _443 = _174 * 3u;
        uvec3 _452 = uvec3(texelFetch(l_geomPositionBuffer, int(_443)).x, texelFetch(l_geomPositionBuffer, int(_443 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_443 + 2u)).x);
        _476 = uintBitsToFloat(_452.x);
        _477 = uintBitsToFloat(_452.y);
        _478 = uintBitsToFloat(_452.z);
    }
    else
    {
        uint _460 = _174 * 2u;
        uvec2 _466 = uvec2(texelFetch(l_geomPositionBuffer, int(_460)).x, texelFetch(l_geomPositionBuffer, int(_460 + 1u)).x);
        uint _467 = _466.x;
        _476 = unpackHalf2x16(_467).x;
        _477 = unpackHalf2x16(_467 >> 16u).x;
        _478 = unpackHalf2x16(_466.y).x;
    }
    float _514;
    float _515;
    float _516;
    if (_402)
    {
        uint _481 = _175 * 3u;
        uvec3 _490 = uvec3(texelFetch(l_geomPositionBuffer, int(_481)).x, texelFetch(l_geomPositionBuffer, int(_481 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_481 + 2u)).x);
        _514 = uintBitsToFloat(_490.x);
        _515 = uintBitsToFloat(_490.y);
        _516 = uintBitsToFloat(_490.z);
    }
    else
    {
        uint _498 = _175 * 2u;
        uvec2 _504 = uvec2(texelFetch(l_geomPositionBuffer, int(_498)).x, texelFetch(l_geomPositionBuffer, int(_498 + 1u)).x);
        uint _505 = _504.x;
        _514 = unpackHalf2x16(_505).x;
        _515 = unpackHalf2x16(_505 >> 16u).x;
        _516 = unpackHalf2x16(_504.y).x;
    }
    float _519 = (1.0 - hit._m0.x) - hit._m0.y;
    float _570 = (_312 - _243) * 0.00048828125;
    float _572 = (_313 - _244) * 0.00048828125;
    float _575 = (_381 - _243) * 0.00048828125;
    float _576 = (_382 - _244) * 0.00048828125;
    float _598 = _476 - _438;
    float _599 = _477 - _439;
    float _600 = _478 - _440;
    float _603 = fma(_600, gl_ObjectToWorldEXT[2u].x, fma(_599, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _598));
    float _606 = fma(_600, gl_ObjectToWorldEXT[2u].y, fma(_599, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _598));
    float _609 = fma(_600, gl_ObjectToWorldEXT[2u].z, fma(_599, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _598));
    float _610 = _514 - _438;
    float _611 = _515 - _439;
    float _612 = _516 - _440;
    float _615 = fma(_612, gl_ObjectToWorldEXT[2u].x, fma(_611, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _610));
    float _618 = fma(_612, gl_ObjectToWorldEXT[2u].y, fma(_611, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _610));
    float _621 = fma(_612, gl_ObjectToWorldEXT[2u].z, fma(_611, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _610));
    float _622 = (((_312 * hit._m0.x) + (_243 * _519)) + (_381 * hit._m0.y)) * 0.00048828125;
    float _623 = (((_313 * hit._m0.x) + (_244 * _519)) + (_382 * hit._m0.y)) * 0.00048828125;
    float _629 = (((float(_211) * _519) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _632 = (((float(_212) * _519) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _635 = (((float(_213) * _519) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _636 = _629 * 0.0078740157186985015869140625;
    float _638 = _632 * 0.0078740157186985015869140625;
    float _639 = _635 * 0.0078740157186985015869140625;
    float _649 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    float _652 = (_649 * cbMtdParam._m0[19u].x) + _622;
    float _653 = (_649 * cbMtdParam._m0[19u].y) + _623;
    float _676 = (cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x) + _622)) + cbTextureTilingScale._m0[3u].z;
    float _677 = (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[19u].w * cbPerFrame._m0[22u].x) + _623)) + cbTextureTilingScale._m0[3u].w;
    uvec2 _679 = uvec2(textureSize(M_Coralstorm_01_snp_0_Texture2D_4, int(0u)));
    bool _684 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _737;
    if (_684)
    {
        float _695 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _701 = (_621 * _606) - (_618 * _609);
        float _704 = (_615 * _609) - (_621 * _603);
        float _707 = (_618 * _603) - (_615 * _606);
        float _734 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_576 * _570) - (_575 * _572))) / (sqrt(((_704 * _704) + (_707 * _707)) + (_701 * _701)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_695 * gl_WorldRayDirectionEXT.x, _695 * gl_WorldRayDirectionEXT.y, _695 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _737 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    }
    else
    {
        _737 = 0.0;
    }
    vec4 _741 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_676, _677), _737);
    float _745 = cbPerFrame._m0[22u].x * 2.0;
    float _746 = _745 * cbMtdParam._m0[15u].x;
    float _752 = ((_741.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].w;
    float _754 = (-0.0) - (cbMtdParam._m0[14u].w * ((_741.x * 0.5) + (-0.25)));
    float _756 = fract(_746);
    float _758 = fract(_746 + 0.5);
    float _770 = abs((_756 * 2.0) + (-1.0));
    vec4 _788 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_756 * _754) + _652) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_752 * _756) + _653) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _790 = _788.x;
    float _791 = _788.y;
    float _792 = _788.z;
    vec4 _793 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_758 * _754) + _652) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_752 * _758) + _653) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _814 = (cbMtdParam._m0[18u].x * _649) + _622;
    float _815 = (cbMtdParam._m0[18u].y * _649) + _623;
    float _866;
    if (_684)
    {
        float _826 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _832 = (_621 * _606) - (_618 * _609);
        float _835 = (_615 * _609) - (_621 * _603);
        float _838 = (_618 * _603) - (_615 * _606);
        float _864 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_576 * _570) - (_575 * _572))) / (sqrt(((_835 * _835) + (_838 * _838)) + (_832 * _832)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_826 * gl_WorldRayDirectionEXT.x, _826 * gl_WorldRayDirectionEXT.y, _826 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _866 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    }
    else
    {
        _866 = 0.0;
    }
    vec4 _868 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_676, _677), _866);
    float _876 = ((_868.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].w;
    float _878 = (-0.0) - (cbMtdParam._m0[14u].w * ((_868.x * 0.5) + (-0.25)));
    vec4 _903 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_756 * _878) + _814) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_876 * _756) + _815) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _905 = _903.x;
    float _906 = _903.y;
    float _907 = _903.z;
    vec4 _908 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_758 * _878) + _814) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_876 * _758) + _815) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _924 = sin(cbMtdParam._m0[14u].z);
    float _925 = cos(cbMtdParam._m0[14u].z);
    float _926 = ((((float(int(uint(int(_308 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_239 << 16u) >> int(16u)))) * _519)) + (float(int(uint(int(_377 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].y;
    float _927 = ((((float(int(uint(int(_308) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_239) >> int(16u)))) * _519)) + (float(int(uint(int(_377) >> int(16u)))) * hit._m0.y)) * 0.00048828125) - cbMtdParam._m0[14u].y;
    float _933 = fma(_927, (-0.0) - _924, _925 * _926) + cbMtdParam._m0[14u].y;
    float _934 = fma(_927, _925, _926 * _924) + cbMtdParam._m0[14u].y;
    float _985;
    if (_684)
    {
        float _945 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _951 = (_621 * _606) - (_618 * _609);
        float _954 = (_615 * _609) - (_621 * _603);
        float _957 = (_618 * _603) - (_615 * _606);
        float _983 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_576 * _570) - (_575 * _572))) / (sqrt(((_954 * _954) + (_957 * _957)) + (_951 * _951)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_945 * gl_WorldRayDirectionEXT.x, _945 * gl_WorldRayDirectionEXT.y, _945 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _985 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    }
    else
    {
        _985 = 0.0;
    }
    vec4 _987 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_676, _677), _985);
    float _995 = ((_987.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].w;
    float _997 = (-0.0) - (cbMtdParam._m0[14u].w * ((_987.x * 0.5) + (-0.25)));
    vec4 _1023 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_756 * _997) + _933) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_995 * _756) + _934) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1025 = _1023.x;
    float _1057 = (cbMtdParam._m0[13u].x * (((_793.x - _790) * _770) + _790)) + (cbMtdParam._m0[11u].x * (((_908.x - _905) * _770) + _905));
    float _1058 = (cbMtdParam._m0[13u].y * (((_793.y - _791) * _770) + _791)) + (cbMtdParam._m0[11u].y * (((_908.y - _906) * _770) + _906));
    float _1059 = (cbMtdParam._m0[13u].z * (((_793.z - _792) * _770) + _792)) + (cbMtdParam._m0[11u].z * (((_908.z - _907) * _770) + _907));
    float _1065 = abs((fract(cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1742 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _1066 = isnan(1.0) ? _1742 : (isnan(_1742) ? 1.0 : min(_1742, 1.0));
    float _1073 = ((_1066 * _1066) * (3.0 - (_1066 * 2.0))) - cbMtdParam._m0[15u].y;
    float _1086 = (cbMtdParam._m0[20u].x * _649) + _622;
    float _1087 = (cbMtdParam._m0[20u].y * _649) + _623;
    float _1138;
    if (_684)
    {
        float _1098 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1104 = (_621 * _606) - (_618 * _609);
        float _1107 = (_615 * _609) - (_621 * _603);
        float _1110 = (_618 * _603) - (_615 * _606);
        float _1136 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_576 * _570) - (_575 * _572))) / (sqrt(((_1107 * _1107) + (_1110 * _1110)) + (_1104 * _1104)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1098 * gl_WorldRayDirectionEXT.x, _1098 * gl_WorldRayDirectionEXT.y, _1098 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1138 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
    }
    else
    {
        _1138 = 0.0;
    }
    vec4 _1140 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_676, _677), _1138);
    float _1148 = ((_1140.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].w;
    float _1150 = (-0.0) - (cbMtdParam._m0[14u].w * ((_1140.x * 0.5) + (-0.25)));
    vec4 _1175 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_756 * _1150) + _1086) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1148 * _756) + _1087) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1177 = _1175.x;
    float _1178 = _1175.y;
    float _1179 = _1175.z;
    vec4 _1180 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_758 * _1150) + _1086) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1148 * _758) + _1087) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1206 = (cbMtdParam._m0[18u].z * _649) + _622;
    float _1207 = (cbMtdParam._m0[18u].w * _649) + _623;
    float _1213 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1214 = _1213 * gl_WorldRayDirectionEXT.x;
    float _1215 = _1213 * gl_WorldRayDirectionEXT.y;
    float _1216 = _1213 * gl_WorldRayDirectionEXT.z;
    float _1260;
    if (_684)
    {
        float _1226 = (_621 * _606) - (_618 * _609);
        float _1229 = (_615 * _609) - (_621 * _603);
        float _1232 = (_618 * _603) - (_615 * _606);
        float _1258 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_576 * _570) - (_575 * _572))) / (sqrt(((_1229 * _1229) + (_1232 * _1232)) + (_1226 * _1226)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1214, _1215, _1216), vec3(_636, _638, _639))));
        _1260 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
    }
    else
    {
        _1260 = 0.0;
    }
    vec4 _1262 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_4, SS_WrapLinear), vec2(_676, _677), _1260);
    float _1266 = _745 * cbMtdParam._m0[17u].w;
    float _1271 = ((_1262.y * 0.5) + (-0.25)) * cbMtdParam._m0[17u].z;
    float _1273 = (-0.0) - (cbMtdParam._m0[17u].z * ((_1262.x * 0.5) + (-0.25)));
    float _1274 = fract(_1266);
    float _1276 = fract(_1266 + 0.5);
    float _1287 = abs((_1274 * 2.0) + (-1.0));
    vec4 _1304 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1274 * _1273) + _1206) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1271 * _1274) + _1207) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1306 = _1304.x;
    float _1307 = _1304.y;
    float _1308 = _1304.z;
    vec4 _1309 = textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_1276 * _1273) + _1206) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1271 * _1276) + _1207) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1333 = cbMtdParam._m0[14u].x * (((textureLod(sampler2D(M_Coralstorm_01_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_758 * _997) + _933) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_995 * _758) + _934) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0).x - _1025) * _770) + _1025);
    float _1340 = (_1333 * (((((((_1309.x - _1306) * _1287) + _1306) * cbMtdParam._m0[12u].x) + ((((_1180.x - _1177) * _770) + _1177) * cbMtdParam._m0[9u].x)) * _1073) - _1057)) + _1057;
    float _1341 = (_1333 * (((((((_1309.y - _1307) * _1287) + _1307) * cbMtdParam._m0[12u].y) + ((((_1180.y - _1178) * _770) + _1178) * cbMtdParam._m0[9u].y)) * _1073) - _1058)) + _1058;
    float _1342 = (_1333 * (((((((_1309.z - _1308) * _1287) + _1308) * cbMtdParam._m0[12u].z) + ((((_1180.z - _1179) * _770) + _1179) * cbMtdParam._m0[9u].z)) * _1073) - _1059)) + _1059;
    float _1358 = inversesqrt(dot(vec3(_636, _638, _639), vec3(_636, _638, _639)));
    float _1359 = _1358 * _636;
    float _1360 = _1358 * _638;
    float _1361 = _1358 * _639;
    float _1373 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1374 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1375 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1376 = (-0.0) - _1214;
    float _1377 = (-0.0) - _1215;
    float _1378 = (-0.0) - _1216;
    float _1384 = float(gl_LaunchIDEXT.x);
    float _1385 = float(gl_LaunchIDEXT.y);
    float _1388 = float(gl_LaunchSizeEXT.x);
    float _1402 = fract(fract(sin(dot(vec2(_1384 / _1388, _1385 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1415 = fract(fract(sin(dot(vec2((_1384 + 128.0) / _1388, (_1385 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1425 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1426 = _1425.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1426, _1425.w, _1426, vec3(_1373, _1374, _1375), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1491;
    float _1492;
    float _1493;
    if (_69._m0 == 0u)
    {
        float _1446 = g_sceneCB._m0[4u].x - _1214;
        float _1447 = g_sceneCB._m0[4u].y - _1215;
        float _1448 = g_sceneCB._m0[4u].z - _1216;
        float _1452 = inversesqrt(dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448)));
        float _1456 = dot(vec3(_1359, _1360, _1361), vec3(g_sceneCB._m0[4u].xyz));
        float _1763 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1459 = isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0));
        float _1460 = dot(vec3(_1359, _1360, _1361), vec3(_1376, _1377, _1378));
        float _1774 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1464 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1446 * _1452, _1447 * _1452, _1448 * _1452));
        float _1785 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1475 = (exp2(log2(1.0 - (isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1481 = (0.5 / ((_1459 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1774 : (isnan(_1774) ? 1.0 : min(_1774, 1.0))))) * _1459;
        float _1796 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1483 = (isnan(1.0) ? _1796 : (isnan(_1796) ? 1.0 : min(_1796, 1.0))) * 0.31831014156341552734375;
        _1491 = (_1475 * g_sceneCB._m0[5u].x) * _1483;
        _1492 = (_1475 * g_sceneCB._m0[5u].y) * _1483;
        _1493 = (_1475 * g_sceneCB._m0[5u].z) * _1483;
    }
    else
    {
        _1491 = 0.0;
        _1492 = 0.0;
        _1493 = 0.0;
    }
    bool _1495 = abs(_1360) < 0.89999997615814208984375;
    float _1497 = float(_1495);
    float _1498 = _1495 ? 0.0 : 1.0;
    float _1501 = (_1497 * _1361) - (_1498 * _1360);
    float _1502 = _1498 * _1359;
    float _1504 = (-0.0) - (_1359 * _1497);
    float _1508 = inversesqrt(dot(vec3(_1501, _1502, _1504), vec3(_1501, _1502, _1504)));
    float _1509 = _1501 * _1508;
    float _1510 = _1502 * _1508;
    float _1511 = _1508 * _1504;
    float _1514 = (_1510 * _1361) - (_1511 * _1360);
    float _1517 = (_1511 * _1359) - (_1509 * _1361);
    float _1520 = (_1509 * _1360) - (_1510 * _1359);
    float _1522;
    float _1530;
    float _1521 = 0.0;
    uint _1523 = 0u;
    float _1527;
    bool _1529;
    for (;;)
    {
        _1527 = (float(_1523) + _1402) * 0.03125;
        _1529 = _1523 == 0u;
        float frontier_phi_49_pred;
        if (_1529)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1650;
            float _1651;
            uint _1653;
            _1650 = 0.0;
            _1651 = 0.5;
            _1653 = _1523;
            float _1531;
            for (;;)
            {
                _1531 = ((_1653 & 1u) != 0u) ? (_1651 + _1650) : _1650;
                uint _1654 = _1653 >> 1u;
                if (_1654 == 0u)
                {
                    break;
                }
                else
                {
                    _1650 = _1531;
                    _1651 *= 0.5;
                    _1653 = _1654;
                }
            }
            frontier_phi_49_pred = _1531;
        }
        _1530 = frontier_phi_49_pred;
        float _1532 = _1530 + _1415;
        float _1536 = sqrt(_1527);
        float _1537 = ((_1532 > 1.0) ? (_1532 + (-1.0)) : _1532) * 6.283185482025146484375;
        float _1540 = cos(_1537) * _1536;
        float _1542 = sin(_1537) * _1536;
        float _1544 = sqrt(1.0 - _1527);
        float _1557 = ((_1544 * _1359) + (_1540 * _1514)) + (_1542 * _1509);
        float _1558 = ((_1544 * _1360) + (_1540 * _1517)) + (_1542 * _1510);
        float _1559 = ((_1544 * _1361) + (_1540 * _1520)) + (_1542 * _1511);
        _68._m0 = 1u;
        uvec4 _1563 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1564 = _1563.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1564, _1563.w, _1564, vec3(_1373, _1374, _1375), 9.9999997473787516355514526367188e-05, vec3(_1557, _1558, _1559), 10000.0, 1);
        float _1570 = dot(vec3(_1359, _1360, _1361), vec3(_1557, _1558, _1559));
        float _1807 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
        float _1573 = isnan(1.0) ? _1807 : (isnan(_1807) ? 1.0 : min(_1807, 1.0));
        _1522 = ((float(_68._m0 == 0u) * _1573) / (_1573 * 0.3183098733425140380859375)) + _1521;
        uint _1524 = _1523 + 1u;
        if (_1524 == 32u)
        {
            break;
        }
        else
        {
            _1521 = _1522;
            _1523 = _1524;
            continue;
        }
    }
    float _1582 = _1522 * 0.009947183541953563690185546875;
    float _1587 = dot(vec3(_1214, _1215, _1216), vec3(_1359, _1360, _1361)) * 2.0;
    vec4 _1599 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1214 - (_1587 * _1359), _1215 - (_1587 * _1360), _1216 - (_1587 * _1361)), 4.0);
    float _1604 = dot(vec3(_1376, _1377, _1378), vec3(_1359, _1360, _1361));
    float _1818 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
    float _1613 = (exp2(log2(1.0 - (isnan(1.0) ? _1818 : (isnan(_1818) ? 1.0 : min(_1818, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1621 = (_1491 + (((((((float(_323 & 255u) * hit._m0.x) + (float(_254 & 255u) * _519)) + (float(_392 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].x - _1340)) + _1340) * cbMtdParam._m0[17u].x)) + ((_1599.x * _1582) * _1613);
    float _1623 = (_1492 + (((((((float((_323 >> 8u) & 255u) * hit._m0.x) + (float((_254 >> 8u) & 255u) * _519)) + (float((_392 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].y - _1341)) + _1341) * cbMtdParam._m0[17u].x)) + ((_1599.y * _1582) * _1613);
    float _1625 = (_1493 + (((((((float((_323 >> 16u) & 255u) * hit._m0.x) + (float((_254 >> 16u) & 255u) * _519)) + (float((_392 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * (cbMtdParam._m0[10u].z - _1342)) + _1342) * cbMtdParam._m0[17u].x)) + ((_1599.z * _1582) * _1613);
    float _1829 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
    float _1840 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
    float _1851 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
    bool _1633 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1644;
    _1644.x = _1633 ? ((_629 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1829 : (isnan(_1829) ? 1.0 : min(_1829, 1.0)));
    _1644.y = _1633 ? ((_632 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1840 : (isnan(_1840) ? 1.0 : min(_1840, 1.0)));
    _1644.z = _1633 ? ((_635 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1851 : (isnan(_1851) ? 1.0 : min(_1851, 1.0)));
    payload._m0 = _1644;
}


