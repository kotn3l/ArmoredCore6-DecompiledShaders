#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _52
{
    vec3 _m0;
};

struct _56
{
    vec2 _m0;
};

struct _59
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _52 payload;
hitAttributeEXT _56 hit;
layout(location = 1) rayPayloadEXT _59 _61;
layout(location = 2) rayPayloadEXT _59 _62;

vec3 _1249;

void main()
{
    float _70 = float(gl_LaunchSizeEXT.y);
    float _100 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _109 = sqrt(((_101 * _101) + (_100 * _100)) + (_102 * _102)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _70)))));
    uvec4 _120 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _121 = _120.y;
    uint _161;
    uint _163;
    uint _164;
    if (_120.x == 0u)
    {
        uint _129 = (_121 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _138 = uvec3(texelFetch(l_geomIndexBuffer, int(_129)).x, texelFetch(l_geomIndexBuffer, int(_129 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_129 + 2u)).x);
        _161 = _138.x;
        _163 = _138.y;
        _164 = _138.z;
    }
    else
    {
        uint _142 = uint(gl_PrimitiveID) * 6u;
        uint _144 = _142 & 4294967292u;
        uint _147 = (_121 + _144) >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomIndexBuffer, int(_147)).x, texelFetch(l_geomIndexBuffer, int(_147 + 1u)).x);
        uint _155 = _154.x;
        uint _156 = _154.y;
        uint _158 = _155 >> 16u;
        uint _159 = _156 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_144 == _142)
        {
            frontier_phi_3_2_ladder = _158;
            frontier_phi_3_2_ladder_1 = _155 & 65535u;
            frontier_phi_3_2_ladder_2 = _159;
        }
        else
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _156 >> 16u;
        }
        _161 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder;
        _164 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _168 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _169 = _168.x;
    uint _170 = _168.z;
    bool _171 = _170 != 0u;
    bool _173 = _120.w == 0u;
    bool _174 = _171 || _173;
    uint _175 = _169 * _161;
    uint _176 = _175 + 12u;
    uint _200;
    uint _201;
    uint _202;
    uint _203;
    if (_174)
    {
        uvec4 _179 = texelFetch(l_geomAttrib_0, int(_176 >> 2u));
        uint _180 = _179.x;
        _200 = _180 & 255u;
        _201 = (_180 >> 8u) & 255u;
        _202 = (_180 >> 16u) & 255u;
        _203 = 16u;
    }
    else
    {
        uint _188 = _176 >> 2u;
        uvec2 _194 = uvec2(texelFetch(l_geomAttrib_0, int(_188)).x, texelFetch(l_geomAttrib_0, int(_188 + 1u)).x);
        uint _195 = _194.x;
        _200 = _195 & 65535u;
        _201 = _195 >> 16u;
        _202 = _194.y & 65535u;
        _203 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_203 + _175) >> 2u));
    uint _212 = _211.x;
    bool _226 = _170 == 0u;
    uint _227;
    if (_226)
    {
        _227 = _203 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_173)
        {
            frontier_phi_9_10_ladder = _203 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _203 + 12u;
        }
        _227 = frontier_phi_9_10_ladder;
    }
    uvec4 _235 = texelFetch(l_geomAttrib_0, int(((_175 + 4u) + (_171 ? (_227 + 4u) : _227)) >> 2u));
    uint _236 = _235.x;
    float _240 = float(int(uint(int(_236 << 16u) >> int(16u))));
    float _241 = float(int(uint(int(_236) >> int(16u))));
    uint _242 = _169 * _163;
    uint _243 = _242 + 12u;
    uint _264;
    uint _265;
    uint _266;
    uint _267;
    if (_174)
    {
        uvec4 _245 = texelFetch(l_geomAttrib_0, int(_243 >> 2u));
        uint _246 = _245.x;
        _264 = _246 & 255u;
        _265 = (_246 >> 8u) & 255u;
        _266 = (_246 >> 16u) & 255u;
        _267 = 16u;
    }
    else
    {
        uint _252 = _243 >> 2u;
        uvec2 _258 = uvec2(texelFetch(l_geomAttrib_0, int(_252)).x, texelFetch(l_geomAttrib_0, int(_252 + 1u)).x);
        uint _259 = _258.x;
        _264 = _259 & 65535u;
        _265 = _259 >> 16u;
        _266 = _258.y & 65535u;
        _267 = 20u;
    }
    uvec4 _273 = texelFetch(l_geomAttrib_0, int((_267 + _242) >> 2u));
    uint _274 = _273.x;
    uint _286;
    if (_226)
    {
        _286 = _267 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_173)
        {
            frontier_phi_16_17_ladder = _267 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _267 + 12u;
        }
        _286 = frontier_phi_16_17_ladder;
    }
    uvec4 _294 = texelFetch(l_geomAttrib_0, int(((_242 + 4u) + (_171 ? (_286 + 4u) : _286)) >> 2u));
    uint _295 = _294.x;
    float _299 = float(int(uint(int(_295 << 16u) >> int(16u))));
    float _300 = float(int(uint(int(_295) >> int(16u))));
    uint _301 = _169 * _164;
    uint _302 = _301 + 12u;
    uint _323;
    uint _324;
    uint _325;
    uint _326;
    if (_174)
    {
        uvec4 _304 = texelFetch(l_geomAttrib_0, int(_302 >> 2u));
        uint _305 = _304.x;
        _323 = _305 & 255u;
        _324 = (_305 >> 8u) & 255u;
        _325 = (_305 >> 16u) & 255u;
        _326 = 16u;
    }
    else
    {
        uint _311 = _302 >> 2u;
        uvec2 _317 = uvec2(texelFetch(l_geomAttrib_0, int(_311)).x, texelFetch(l_geomAttrib_0, int(_311 + 1u)).x);
        uint _318 = _317.x;
        _323 = _318 & 65535u;
        _324 = _318 >> 16u;
        _325 = _317.y & 65535u;
        _326 = 20u;
    }
    uvec4 _332 = texelFetch(l_geomAttrib_0, int((_326 + _301) >> 2u));
    uint _333 = _332.x;
    uint _345;
    if (_226)
    {
        _345 = _326 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_173)
        {
            frontier_phi_23_24_ladder = _326 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _326 + 12u;
        }
        _345 = frontier_phi_23_24_ladder;
    }
    uvec4 _353 = texelFetch(l_geomAttrib_0, int(((_301 + 4u) + (_171 ? (_345 + 4u) : _345)) >> 2u));
    uint _354 = _353.x;
    float _358 = float(int(uint(int(_354 << 16u) >> int(16u))));
    float _359 = float(int(uint(int(_354) >> int(16u))));
    bool _361 = _120.z == 0u;
    float _397;
    float _398;
    float _399;
    if (_361)
    {
        uint _364 = _161 * 3u;
        uvec3 _373 = uvec3(texelFetch(l_geomPositionBuffer, int(_364)).x, texelFetch(l_geomPositionBuffer, int(_364 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_364 + 2u)).x);
        _397 = uintBitsToFloat(_373.x);
        _398 = uintBitsToFloat(_373.y);
        _399 = uintBitsToFloat(_373.z);
    }
    else
    {
        uint _381 = _161 * 2u;
        uvec2 _387 = uvec2(texelFetch(l_geomPositionBuffer, int(_381)).x, texelFetch(l_geomPositionBuffer, int(_381 + 1u)).x);
        uint _388 = _387.x;
        _397 = unpackHalf2x16(_388).x;
        _398 = unpackHalf2x16(_388 >> 16u).x;
        _399 = unpackHalf2x16(_387.y).x;
    }
    float _435;
    float _436;
    float _437;
    if (_361)
    {
        uint _402 = _163 * 3u;
        uvec3 _411 = uvec3(texelFetch(l_geomPositionBuffer, int(_402)).x, texelFetch(l_geomPositionBuffer, int(_402 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_402 + 2u)).x);
        _435 = uintBitsToFloat(_411.x);
        _436 = uintBitsToFloat(_411.y);
        _437 = uintBitsToFloat(_411.z);
    }
    else
    {
        uint _419 = _163 * 2u;
        uvec2 _425 = uvec2(texelFetch(l_geomPositionBuffer, int(_419)).x, texelFetch(l_geomPositionBuffer, int(_419 + 1u)).x);
        uint _426 = _425.x;
        _435 = unpackHalf2x16(_426).x;
        _436 = unpackHalf2x16(_426 >> 16u).x;
        _437 = unpackHalf2x16(_425.y).x;
    }
    float _473;
    float _474;
    float _475;
    if (_361)
    {
        uint _440 = _164 * 3u;
        uvec3 _449 = uvec3(texelFetch(l_geomPositionBuffer, int(_440)).x, texelFetch(l_geomPositionBuffer, int(_440 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_440 + 2u)).x);
        _473 = uintBitsToFloat(_449.x);
        _474 = uintBitsToFloat(_449.y);
        _475 = uintBitsToFloat(_449.z);
    }
    else
    {
        uint _457 = _164 * 2u;
        uvec2 _463 = uvec2(texelFetch(l_geomPositionBuffer, int(_457)).x, texelFetch(l_geomPositionBuffer, int(_457 + 1u)).x);
        uint _464 = _463.x;
        _473 = unpackHalf2x16(_464).x;
        _474 = unpackHalf2x16(_464 >> 16u).x;
        _475 = unpackHalf2x16(_463.y).x;
    }
    float _478 = (1.0 - hit._m0.x) - hit._m0.y;
    float _512 = (_299 - _240) * 0.00048828125;
    float _514 = (_300 - _241) * 0.00048828125;
    float _517 = (_358 - _240) * 0.00048828125;
    float _518 = (_359 - _241) * 0.00048828125;
    float _540 = _435 - _397;
    float _541 = _436 - _398;
    float _542 = _437 - _399;
    float _545 = fma(_542, gl_ObjectToWorldEXT[2u].x, fma(_541, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _540));
    float _548 = fma(_542, gl_ObjectToWorldEXT[2u].y, fma(_541, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _540));
    float _551 = fma(_542, gl_ObjectToWorldEXT[2u].z, fma(_541, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _540));
    float _552 = _473 - _397;
    float _553 = _474 - _398;
    float _554 = _475 - _399;
    float _557 = fma(_554, gl_ObjectToWorldEXT[2u].x, fma(_553, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _552));
    float _560 = fma(_554, gl_ObjectToWorldEXT[2u].y, fma(_553, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _552));
    float _563 = fma(_554, gl_ObjectToWorldEXT[2u].z, fma(_553, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _552));
    float _564 = (((_299 * hit._m0.x) + (_240 * _478)) + (_358 * hit._m0.y)) * 0.00048828125;
    float _565 = (((_300 * hit._m0.x) + (_241 * _478)) + (_359 * hit._m0.y)) * 0.00048828125;
    float _569 = (((float(_200) * _478) + (-127.0)) + (float(_264) * hit._m0.x)) + (float(_323) * hit._m0.y);
    float _572 = (((float(_201) * _478) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_324) * hit._m0.y);
    float _575 = (((float(_202) * _478) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _576 = _569 * 0.0078740157186985015869140625;
    float _578 = _572 * 0.0078740157186985015869140625;
    float _579 = _575 * 0.0078740157186985015869140625;
    float _592 = ((((float(_212 & 255u) * _478) + (-127.0)) + (float(_274 & 255u) * hit._m0.x)) + (float(_333 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _593 = ((((float((_212 >> 8u) & 255u) * _478) + (-127.0)) + (float((_274 >> 8u) & 255u) * hit._m0.x)) + (float((_333 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _594 = ((((float((_212 >> 16u) & 255u) * _478) + (-127.0)) + (float((_274 >> 16u) & 255u) * hit._m0.x)) + (float((_333 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _595 = ((((float(_212 >> 24u) * _478) + (-127.0)) + (float(_274 >> 24u) * hit._m0.x)) + (float(_333 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((_593 * _579) - (_594 * _578)) * _595;
    float _606 = ((_594 * _576) - (_592 * _579)) * _595;
    float _607 = ((_592 * _578) - (_593 * _576)) * _595;
    float _611 = inversesqrt(dot(vec3(_605, _606, _607), vec3(_605, _606, _607)));
    uvec2 _626 = uvec2(textureSize(M_AMSN_Ov_N_snp_0_Texture2D_2, int(0u)));
    bool _631 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _684;
    if (_631)
    {
        float _642 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _648 = (_563 * _548) - (_560 * _551);
        float _651 = (_557 * _551) - (_563 * _545);
        float _654 = (_560 * _545) - (_557 * _548);
        float _681 = ((log2((((float(_626.y) * 0.5) * float(_626.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_651 * _651) + (_654 * _654)) + (_648 * _648)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_642 * gl_WorldRayDirectionEXT.x, _642 * gl_WorldRayDirectionEXT.y, _642 * gl_WorldRayDirectionEXT.z), vec3(_576, _578, _579))));
        _684 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    }
    else
    {
        _684 = 0.0;
    }
    vec4 _688 = textureLod(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _564) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _565) + cbTextureTilingScale._m0[0u].w), _684);
    float _690 = _688.x;
    float _691 = _688.y;
    float _692 = _688.z;
    uvec2 _709 = uvec2(textureSize(M_AMSN_Ov_N_snp_0_Texture2D_3, int(0u)));
    float _760;
    if (_631)
    {
        float _720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _726 = (_563 * _548) - (_560 * _551);
        float _729 = (_557 * _551) - (_563 * _545);
        float _732 = (_560 * _545) - (_557 * _548);
        float _758 = ((log2((((float(_709.y) * 0.5) * float(_709.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_729 * _729) + (_732 * _732)) + (_726 * _726)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_720 * gl_WorldRayDirectionEXT.x, _720 * gl_WorldRayDirectionEXT.y, _720 * gl_WorldRayDirectionEXT.z), vec3(_576, _578, _579))));
        _760 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    }
    else
    {
        _760 = 0.0;
    }
    vec4 _763 = textureLod(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _564) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _565) + cbTextureTilingScale._m0[2u].w), _760);
    uvec2 _784 = uvec2(textureSize(M_AMSN_Ov_N_snp_0_Texture2D_1, int(0u)));
    float _788 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _789 = _788 * gl_WorldRayDirectionEXT.x;
    float _790 = _788 * gl_WorldRayDirectionEXT.y;
    float _791 = _788 * gl_WorldRayDirectionEXT.z;
    float _835;
    if (_631)
    {
        float _801 = (_563 * _548) - (_560 * _551);
        float _804 = (_557 * _551) - (_563 * _545);
        float _807 = (_560 * _545) - (_557 * _548);
        float _833 = ((log2((((float(_784.y) * 0.5) * float(_784.x)) * abs((_518 * _512) - (_517 * _514))) / (sqrt(((_804 * _804) + (_807 * _807)) + (_801 * _801)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_109) / abs(dot(vec3(_789, _790, _791), vec3(_576, _578, _579))));
        _835 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    }
    else
    {
        _835 = 0.0;
    }
    vec4 _837 = textureLod(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _564) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _565) + cbTextureTilingScale._m0[1u].w), _835);
    float _841 = _837.z;
    float _844 = (_837.x * 2.0) + (-1.0);
    float _845 = (_837.y * 2.0) + (-1.0);
    float _846 = dot(vec2(_844, _845), vec2(_844, _845));
    float _1342 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _851 = sqrt(1.0 - (isnan(1.0) ? _1342 : (isnan(_1342) ? 1.0 : min(_1342, 1.0))));
    float _854 = ((_763.z - _841) * cbMtdParam._m0[9u].y) + _841;
    float _1353 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _855 = isnan(1.0) ? _1353 : (isnan(_1353) ? 1.0 : min(_1353, 1.0));
    float _858 = _844 + (((_763.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _859 = _845 + (((_763.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _862 = fma(_851, _576, fma(_859, _592, (_611 * _605) * _858));
    float _865 = fma(_851, _578, fma(_859, _593, (_611 * _606) * _858));
    float _868 = fma(_851, _579, fma(_859, _594, (_611 * _607) * _858));
    float _872 = inversesqrt(dot(vec3(_862, _865, _868), vec3(_862, _865, _868)));
    float _873 = _872 * _862;
    float _874 = _872 * _865;
    float _875 = _872 * _868;
    float _887 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _888 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _889 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _890 = (-0.0) - _789;
    float _892 = (-0.0) - _790;
    float _893 = (-0.0) - _791;
    float _899 = float(gl_LaunchIDEXT.x);
    float _900 = float(gl_LaunchIDEXT.y);
    float _903 = float(gl_LaunchSizeEXT.x);
    float _917 = fract(fract(sin(dot(vec2(_899 / _903, _900 / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _930 = fract(fract(sin(dot(vec2((_899 + 128.0) / _903, (_900 + 128.0) / _70), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _931 = 1.0 - cbMtdParam._m0[9u].x;
    float _932 = _931 * _690;
    float _933 = _931 * _691;
    float _934 = _931 * _692;
    float _939 = cbMtdParam._m0[9u].x * (_690 + (-0.039999999105930328369140625));
    float _940 = cbMtdParam._m0[9u].x * (_691 + (-0.039999999105930328369140625));
    float _941 = cbMtdParam._m0[9u].x * (_692 + (-0.039999999105930328369140625));
    float _942 = _939 + 0.039999999105930328369140625;
    float _944 = _940 + 0.039999999105930328369140625;
    float _945 = _941 + 0.039999999105930328369140625;
    _62._m0 = 1u;
    uvec4 _955 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _956 = _955.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _956, _955.w, _956, vec3(_887, _888, _889), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1071;
    float _1072;
    float _1073;
    float _1074;
    float _1075;
    float _1076;
    if (_62._m0 == 0u)
    {
        float _977 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_873, _874, _875));
        float _1364 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _980 = isnan(1.0) ? _1364 : (isnan(_1364) ? 1.0 : min(_1364, 1.0));
        float _999 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _855) * 0.949999988079071044921875);
        float _1000 = _999 * _999;
        float _1001 = g_sceneCB._m0[4u].x - _789;
        float _1002 = g_sceneCB._m0[4u].y - _790;
        float _1003 = g_sceneCB._m0[4u].z - _791;
        float _1007 = inversesqrt(dot(vec3(_1001, _1002, _1003), vec3(_1001, _1002, _1003)));
        float _1008 = _1007 * _1001;
        float _1009 = _1007 * _1002;
        float _1010 = _1007 * _1003;
        float _1011 = dot(vec3(_873, _874, _875), vec3(g_sceneCB._m0[4u].xyz));
        float _1375 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
        float _1014 = isnan(1.0) ? _1375 : (isnan(_1375) ? 1.0 : min(_1375, 1.0));
        float _1015 = dot(vec3(_873, _874, _875), vec3(_890, _892, _893));
        float _1386 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1018 = isnan(1.0) ? _1386 : (isnan(_1386) ? 1.0 : min(_1386, 1.0));
        float _1019 = dot(vec3(_873, _874, _875), vec3(_1008, _1009, _1010));
        float _1397 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1022 = isnan(1.0) ? _1397 : (isnan(_1397) ? 1.0 : min(_1397, 1.0));
        float _1023 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1008, _1009, _1010));
        float _1408 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
        float _1027 = _1000 * _1000;
        float _1031 = ((_1022 * _1022) * (_1027 + (-1.0))) + 1.0;
        float _1040 = exp2(log2(1.0 - (isnan(1.0) ? _1408 : (isnan(_1408) ? 1.0 : min(_1408, 1.0)))) * 5.0);
        float _1051 = 1.0 - _1000;
        float _1062 = (0.5 / (((_1018 * ((_1014 * _1051) + _1000)) + 9.9999999392252902907785028219223e-09) + (((_1018 * _1051) + _1000) * _1014))) * _1014;
        float _1419 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1064 = (isnan(1.0) ? _1419 : (isnan(_1419) ? 1.0 : min(_1419, 1.0))) * (_1027 / ((_1031 * _1031) * 3.141590118408203125));
        _1071 = ((_932 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _980;
        _1072 = ((_933 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _980;
        _1073 = ((_934 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _980;
        _1074 = (((_1040 * (0.959999978542327880859375 - _939)) + _942) * g_sceneCB._m0[5u].x) * _1064;
        _1075 = (((_1040 * (0.959999978542327880859375 - _940)) + _944) * g_sceneCB._m0[5u].y) * _1064;
        _1076 = (((_1040 * (0.959999978542327880859375 - _941)) + _945) * g_sceneCB._m0[5u].z) * _1064;
    }
    else
    {
        _1071 = 0.0;
        _1072 = 0.0;
        _1073 = 0.0;
        _1074 = 0.0;
        _1075 = 0.0;
        _1076 = 0.0;
    }
    bool _1078 = abs(_874) < 0.89999997615814208984375;
    float _1080 = float(_1078);
    float _1081 = _1078 ? 0.0 : 1.0;
    float _1084 = (_1080 * _875) - (_1081 * _874);
    float _1085 = _1081 * _873;
    float _1087 = (-0.0) - (_873 * _1080);
    float _1091 = inversesqrt(dot(vec3(_1084, _1085, _1087), vec3(_1084, _1085, _1087)));
    float _1092 = _1084 * _1091;
    float _1093 = _1085 * _1091;
    float _1094 = _1091 * _1087;
    float _1097 = (_1093 * _875) - (_1094 * _874);
    float _1100 = (_1094 * _873) - (_1092 * _875);
    float _1103 = (_1092 * _874) - (_1093 * _873);
    float _1105;
    float _1113;
    float _1104 = 0.0;
    uint _1106 = 0u;
    float _1110;
    bool _1112;
    for (;;)
    {
        _1110 = (float(_1106) + _917) * 0.03125;
        _1112 = _1106 == 0u;
        float frontier_phi_45_pred;
        if (_1112)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1254;
            float _1255;
            uint _1257;
            _1254 = 0.0;
            _1255 = 0.5;
            _1257 = _1106;
            float _1114;
            for (;;)
            {
                _1114 = ((_1257 & 1u) != 0u) ? (_1255 + _1254) : _1254;
                uint _1258 = _1257 >> 1u;
                if (_1258 == 0u)
                {
                    break;
                }
                else
                {
                    _1254 = _1114;
                    _1255 *= 0.5;
                    _1257 = _1258;
                }
            }
            frontier_phi_45_pred = _1114;
        }
        _1113 = frontier_phi_45_pred;
        float _1115 = _1113 + _930;
        float _1119 = sqrt(_1110);
        float _1120 = ((_1115 > 1.0) ? (_1115 + (-1.0)) : _1115) * 6.283185482025146484375;
        float _1123 = cos(_1120) * _1119;
        float _1125 = sin(_1120) * _1119;
        float _1127 = sqrt(1.0 - _1110);
        float _1140 = ((_1127 * _873) + (_1123 * _1097)) + (_1125 * _1092);
        float _1141 = ((_1127 * _874) + (_1123 * _1100)) + (_1125 * _1093);
        float _1142 = ((_1127 * _875) + (_1123 * _1103)) + (_1125 * _1094);
        _61._m0 = 1u;
        uvec4 _1146 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1147 = _1146.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1147, _1146.w, _1147, vec3(_887, _888, _889), 9.9999997473787516355514526367188e-05, vec3(_1140, _1141, _1142), 10000.0, 1);
        float _1153 = dot(vec3(_873, _874, _875), vec3(_1140, _1141, _1142));
        float _1430 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1156 = isnan(1.0) ? _1430 : (isnan(_1430) ? 1.0 : min(_1430, 1.0));
        _1105 = ((float(_61._m0 == 0u) * _1156) / (_1156 * 0.3183098733425140380859375)) + _1104;
        uint _1107 = _1106 + 1u;
        if (_1107 == 32u)
        {
            break;
        }
        else
        {
            _1104 = _1105;
            _1106 = _1107;
            continue;
        }
    }
    float _1164 = _1105 * 0.009947183541953563690185546875;
    float _1169 = dot(vec3(_789, _790, _791), vec3(_873, _874, _875)) * 2.0;
    vec4 _1183 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_789 - (_1169 * _873), _790 - (_1169 * _874), _791 - (_1169 * _875)), 4.0 - (_855 * 4.0));
    float _1188 = dot(vec3(_890, _892, _893), vec3(_873, _874, _875));
    float _1441 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
    float _1198 = exp2(log2(1.0 - (isnan(1.0) ? _1441 : (isnan(_1441) ? 1.0 : min(_1441, 1.0)))) * 5.0);
    vec4 _1210 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_873, _874, _875), 0.0);
    float _1221 = (_1074 + _1071) + (((_1210.x * _932) + (((_1198 * (0.959999978542327880859375 - _939)) + _942) * _1183.x)) * _1164);
    float _1225 = (_1075 + _1072) + (((_1210.y * _933) + (((_1198 * (0.959999978542327880859375 - _940)) + _944) * _1183.y)) * _1164);
    float _1229 = (_1076 + _1073) + (((_1210.z * _934) + (((_1198 * (0.959999978542327880859375 - _941)) + _945) * _1183.z)) * _1164);
    float _1452 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1463 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1474 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
    bool _1237 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1248;
    _1248.x = _1237 ? ((_569 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1452 : (isnan(_1452) ? 1.0 : min(_1452, 1.0)));
    _1248.y = _1237 ? ((_572 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1463 : (isnan(_1463) ? 1.0 : min(_1463, 1.0)));
    _1248.z = _1237 ? ((_575 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1474 : (isnan(_1474) ? 1.0 : min(_1474, 1.0)));
    payload._m0 = _1248;
}


