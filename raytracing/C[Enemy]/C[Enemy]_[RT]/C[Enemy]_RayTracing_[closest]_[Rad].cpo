#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_snp_0_Texture2D_3;
layout(set = 0, binding = 13) uniform texture2D C_Enemy_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_Enemy_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_Enemy_snp_0_Texture2D_6;
layout(set = 0, binding = 16) uniform texture2D C_Enemy_snp_0_Texture2D_7;
layout(set = 0, binding = 17) uniform texture2D C_Enemy_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D C_Enemy_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_snp_0_Texture2D_13;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _2166;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_186 + 4u) + (_182 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _180 * _174;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_185)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_182 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _180 * _175;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_185)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_182 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _131.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _172 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _172 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _174 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _174 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _175 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _175 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_211) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_212) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_213) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    uvec2 _637 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_7, int(0u)));
    bool _642 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _695;
    if (_642)
    {
        float _653 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _659 = (_574 * _559) - (_571 * _562);
        float _662 = (_568 * _562) - (_574 * _556);
        float _665 = (_571 * _556) - (_568 * _559);
        float _692 = ((log2((((float(_637.y) * 0.5) * float(_637.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_662 * _662) + (_665 * _665)) + (_659 * _659)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_653 * gl_WorldRayDirectionEXT.x, _653 * gl_WorldRayDirectionEXT.y, _653 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _695 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    }
    else
    {
        _695 = 0.0;
    }
    vec4 _699 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * _575) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _576) + cbTextureTilingScale._m0[16u].w), _695);
    float _708 = log2(0.0);
    float _710 = exp2(_708 * cbMtdParam._m0[21u].y);
    float _711 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _712 = isnan(1.0) ? _711 : (isnan(_711) ? 1.0 : min(_711, 1.0));
    uvec2 _725 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_0, int(0u)));
    float _776;
    if (_642)
    {
        float _736 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _742 = (_574 * _559) - (_571 * _562);
        float _745 = (_568 * _562) - (_574 * _556);
        float _748 = (_571 * _556) - (_568 * _559);
        float _774 = ((log2((((float(_725.y) * 0.5) * float(_725.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_745 * _745) + (_748 * _748)) + (_742 * _742)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_736 * gl_WorldRayDirectionEXT.x, _736 * gl_WorldRayDirectionEXT.y, _736 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _776 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    }
    else
    {
        _776 = 0.0;
    }
    vec4 _779 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _575) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _576) + cbTextureTilingScale._m0[0u].w), _776);
    float _783 = _779.z;
    float _791 = exp2(log2(_783 * cbMtdParam._m0[21u].w) * cbMtdParam._m0[20u].y);
    float _792 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _793 = isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0));
    uvec2 _805 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_3, int(0u)));
    float _856;
    if (_642)
    {
        float _816 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _822 = (_574 * _559) - (_571 * _562);
        float _825 = (_568 * _562) - (_574 * _556);
        float _828 = (_571 * _556) - (_568 * _559);
        float _854 = ((log2((((float(_805.y) * 0.5) * float(_805.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_825 * _825) + (_828 * _828)) + (_822 * _822)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_816 * gl_WorldRayDirectionEXT.x, _816 * gl_WorldRayDirectionEXT.y, _816 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _856 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    }
    else
    {
        _856 = 0.0;
    }
    vec4 _858 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _575) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _576) + cbTextureTilingScale._m0[12u].w), _856);
    uvec2 _883 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_1, int(0u)));
    float _934;
    if (_642)
    {
        float _894 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _900 = (_574 * _559) - (_571 * _562);
        float _903 = (_568 * _562) - (_574 * _556);
        float _906 = (_571 * _556) - (_568 * _559);
        float _932 = ((log2((((float(_883.y) * 0.5) * float(_883.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_903 * _903) + (_906 * _906)) + (_900 * _900)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_894 * gl_WorldRayDirectionEXT.x, _894 * gl_WorldRayDirectionEXT.y, _894 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _934 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    }
    else
    {
        _934 = 0.0;
    }
    vec4 _936 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _575) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _576) + cbTextureTilingScale._m0[1u].w), _934);
    float _947 = cbMtdParam._m0[9u].x * _936.x;
    float _948 = cbMtdParam._m0[9u].y * _936.y;
    float _949 = cbMtdParam._m0[9u].z * _936.z;
    float _956 = (((cbMtdParam._m0[10u].x * _858.x) - _947) * _793) + _947;
    float _957 = (((cbMtdParam._m0[10u].y * _858.y) - _948) * _793) + _948;
    float _958 = (((cbMtdParam._m0[10u].z * _858.z) - _949) * _793) + _949;
    float _965 = exp2(log2(_779.w) * cbMtdParam._m0[22u].y);
    uvec2 _978 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_2, int(0u)));
    float _1029;
    if (_642)
    {
        float _989 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _995 = (_574 * _559) - (_571 * _562);
        float _998 = (_568 * _562) - (_574 * _556);
        float _1001 = (_571 * _556) - (_568 * _559);
        float _1027 = ((log2((((float(_978.y) * 0.5) * float(_978.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_998 * _998) + (_1001 * _1001)) + (_995 * _995)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_989 * gl_WorldRayDirectionEXT.x, _989 * gl_WorldRayDirectionEXT.y, _989 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1029 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    }
    else
    {
        _1029 = 0.0;
    }
    vec4 _1031 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _575) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _576) + cbTextureTilingScale._m0[11u].w), _1029);
    float _1050 = (((cbMtdParam._m0[12u].x * _1031.x) - _956) * _965) + _956;
    float _1051 = (((cbMtdParam._m0[12u].y * _1031.y) - _957) * _965) + _957;
    float _1052 = (((cbMtdParam._m0[12u].z * _1031.z) - _958) * _965) + _958;
    uvec2 _1065 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_4, int(0u)));
    float _1116;
    if (_642)
    {
        float _1076 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1082 = (_574 * _559) - (_571 * _562);
        float _1085 = (_568 * _562) - (_574 * _556);
        float _1088 = (_571 * _556) - (_568 * _559);
        float _1114 = ((log2((((float(_1065.y) * 0.5) * float(_1065.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1085 * _1085) + (_1088 * _1088)) + (_1082 * _1082)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1076 * gl_WorldRayDirectionEXT.x, _1076 * gl_WorldRayDirectionEXT.y, _1076 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1116 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    }
    else
    {
        _1116 = 0.0;
    }
    vec4 _1118 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _575) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _576) + cbTextureTilingScale._m0[13u].w), _1116);
    float _1142 = (_699.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _1118.x) - _1050) * _712) + _1050);
    float _1144 = (_699.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _1118.y) - _1051) * _712) + _1051);
    float _1146 = (_699.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _1118.z) - _1052) * _712) + _1052);
    uvec2 _1158 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_11, int(0u)));
    float _1209;
    if (_642)
    {
        float _1169 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1175 = (_574 * _559) - (_571 * _562);
        float _1178 = (_568 * _562) - (_574 * _556);
        float _1181 = (_571 * _556) - (_568 * _559);
        float _1207 = ((log2((((float(_1158.y) * 0.5) * float(_1158.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1178 * _1178) + (_1181 * _1181)) + (_1175 * _1175)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1169 * gl_WorldRayDirectionEXT.x, _1169 * gl_WorldRayDirectionEXT.y, _1169 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1209 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
    }
    else
    {
        _1209 = 0.0;
    }
    uvec2 _1226 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_10, int(0u)));
    float _1277;
    if (_642)
    {
        float _1237 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1243 = (_574 * _559) - (_571 * _562);
        float _1246 = (_568 * _562) - (_574 * _556);
        float _1249 = (_571 * _556) - (_568 * _559);
        float _1275 = ((log2((((float(_1226.y) * 0.5) * float(_1226.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1246 * _1246) + (_1249 * _1249)) + (_1243 * _1243)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1237 * gl_WorldRayDirectionEXT.x, _1237 * gl_WorldRayDirectionEXT.y, _1237 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1277 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
    }
    else
    {
        _1277 = 0.0;
    }
    float _1286 = cbMtdParam._m0[23u].z + textureLod(sampler2D(C_Enemy_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _1277).x;
    float _1289 = ((textureLod(sampler2D(C_Enemy_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _575) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _576) + cbTextureTilingScale._m0[3u].w), _1209).x - _1286) * _793) + _1286;
    uvec2 _1301 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_12, int(0u)));
    float _1352;
    if (_642)
    {
        float _1312 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1318 = (_574 * _559) - (_571 * _562);
        float _1321 = (_568 * _562) - (_574 * _556);
        float _1324 = (_571 * _556) - (_568 * _559);
        float _1350 = ((log2((((float(_1301.y) * 0.5) * float(_1301.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1321 * _1321) + (_1324 * _1324)) + (_1318 * _1318)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1312 * gl_WorldRayDirectionEXT.x, _1312 * gl_WorldRayDirectionEXT.y, _1312 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1352 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
    }
    else
    {
        _1352 = 0.0;
    }
    float _1361 = (((textureLod(sampler2D(C_Enemy_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _575) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _576) + cbTextureTilingScale._m0[4u].w), _1352).x - _1289) + cbMtdParam._m0[21u].z) * _965) + _1289;
    uvec2 _1374 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_13, int(0u)));
    float _1425;
    if (_642)
    {
        float _1385 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1391 = (_574 * _559) - (_571 * _562);
        float _1394 = (_568 * _562) - (_574 * _556);
        float _1397 = (_571 * _556) - (_568 * _559);
        float _1423 = ((log2((((float(_1374.y) * 0.5) * float(_1374.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1394 * _1394) + (_1397 * _1397)) + (_1391 * _1391)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1385 * gl_WorldRayDirectionEXT.x, _1385 * gl_WorldRayDirectionEXT.y, _1385 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1425 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
    }
    else
    {
        _1425 = 0.0;
    }
    float _1436 = (((textureLod(sampler2D(C_Enemy_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _575) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _576) + cbTextureTilingScale._m0[5u].w), _1425).x - _1361) + cbMtdParam._m0[24u].z) * _712) + _1361;
    uvec2 _1450 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_5, int(0u)));
    float _1501;
    if (_642)
    {
        float _1461 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1467 = (_574 * _559) - (_571 * _562);
        float _1470 = (_568 * _562) - (_574 * _556);
        float _1473 = (_571 * _556) - (_568 * _559);
        float _1499 = ((log2((((float(_1450.y) * 0.5) * float(_1450.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1470 * _1470) + (_1473 * _1473)) + (_1467 * _1467)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1461 * gl_WorldRayDirectionEXT.x, _1461 * gl_WorldRayDirectionEXT.y, _1461 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1501 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
    }
    else
    {
        _1501 = 0.0;
    }
    vec4 _1503 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _575) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _576) + cbTextureTilingScale._m0[14u].w), _1501);
    uvec2 _1522 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_6, int(0u)));
    float _1573;
    if (_642)
    {
        float _1533 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1539 = (_574 * _559) - (_571 * _562);
        float _1542 = (_568 * _562) - (_574 * _556);
        float _1545 = (_571 * _556) - (_568 * _559);
        float _1571 = ((log2((((float(_1522.y) * 0.5) * float(_1522.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1542 * _1542) + (_1545 * _1545)) + (_1539 * _1539)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1533 * gl_WorldRayDirectionEXT.x, _1533 * gl_WorldRayDirectionEXT.y, _1533 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1573 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    }
    else
    {
        _1573 = 0.0;
    }
    vec4 _1575 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _575) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _576) + cbTextureTilingScale._m0[15u].w), _1573);
    float _1577 = _1575.x;
    float _1578 = _1575.y;
    float _1581 = cbMtdParam._m0[20u].x + _1575.z;
    float _1584 = (((cbMtdParam._m0[21u].x + _1503.z) - _1581) * _793) + _1581;
    uvec2 _1597 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_8, int(0u)));
    float _1648;
    if (_642)
    {
        float _1608 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1614 = (_574 * _559) - (_571 * _562);
        float _1617 = (_568 * _562) - (_574 * _556);
        float _1620 = (_571 * _556) - (_568 * _559);
        float _1646 = ((log2((((float(_1597.y) * 0.5) * float(_1597.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1617 * _1617) + (_1620 * _1620)) + (_1614 * _1614)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1608 * gl_WorldRayDirectionEXT.x, _1608 * gl_WorldRayDirectionEXT.y, _1608 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1648 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
    }
    else
    {
        _1648 = 0.0;
    }
    vec4 _1650 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _575) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _576) + cbTextureTilingScale._m0[17u].w), _1648);
    float _1659 = (((_1650.z - _1584) + cbMtdParam._m0[24u].x) * _965) + _1584;
    float _1664 = ((((_783 * 2.0) * _1659) - _1659) * cbMtdParam._m0[23u].y) + _1659;
    uvec2 _1677 = uvec2(textureSize(C_Enemy_snp_0_Texture2D_9, int(0u)));
    float _1681 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1682 = _1681 * gl_WorldRayDirectionEXT.x;
    float _1683 = _1681 * gl_WorldRayDirectionEXT.y;
    float _1684 = _1681 * gl_WorldRayDirectionEXT.z;
    float _1728;
    if (_642)
    {
        float _1694 = (_574 * _559) - (_571 * _562);
        float _1697 = (_568 * _562) - (_574 * _556);
        float _1700 = (_571 * _556) - (_568 * _559);
        float _1726 = ((log2((((float(_1677.y) * 0.5) * float(_1677.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1697 * _1697) + (_1700 * _1700)) + (_1694 * _1694)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1682, _1683, _1684), vec3(_587, _589, _590))));
        _1728 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
    }
    else
    {
        _1728 = 0.0;
    }
    vec4 _1730 = textureLod(sampler2D(C_Enemy_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _575) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _576) + cbTextureTilingScale._m0[18u].w), _1728);
    float _1739 = (((_1730.z - _1664) + cbMtdParam._m0[22u].x) * _712) + _1664;
    float _1750 = ((_1503.x - _1577) * _793) + _1577;
    float _1751 = ((_1503.y - _1578) * _793) + _1578;
    float _1756 = ((_1650.x - _1750) * _965) + _1750;
    float _1757 = ((_1650.y - _1751) * _965) + _1751;
    float _1766 = ((((_1730.x - _1756) * _712) + _1756) * 2.0) + (-1.0);
    float _1767 = ((((_1730.y - _1757) * _712) + _1757) * 2.0) + (-1.0);
    float _1768 = dot(vec2(_1766, _1767), vec2(_1766, _1767));
    float _2356 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
    float _1773 = sqrt(1.0 - (isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0))));
    float _1776 = _1766 + (cbMtdParam._m0[23u].w * ((_779.x * 2.0) + (-1.0)));
    float _1777 = _1767 + (cbMtdParam._m0[23u].w * ((_779.y * 2.0) + (-1.0)));
    float _1780 = fma(_1773, _587, fma(_1777, _603, (_622 * _616) * _1776));
    float _1783 = fma(_1773, _589, fma(_1777, _604, (_622 * _617) * _1776));
    float _1786 = fma(_1773, _590, fma(_1777, _605, (_622 * _618) * _1776));
    float _1790 = inversesqrt(dot(vec3(_1780, _1783, _1786), vec3(_1780, _1783, _1786)));
    float _1791 = _1790 * _1780;
    float _1792 = _1790 * _1783;
    float _1793 = _1790 * _1786;
    float _1805 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1806 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1807 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1808 = (-0.0) - _1682;
    float _1810 = (-0.0) - _1683;
    float _1811 = (-0.0) - _1684;
    float _1817 = float(gl_LaunchIDEXT.x);
    float _1818 = float(gl_LaunchIDEXT.y);
    float _1821 = float(gl_LaunchSizeEXT.x);
    float _1835 = fract(fract(sin(dot(vec2(_1817 / _1821, _1818 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1848 = fract(fract(sin(dot(vec2((_1817 + 128.0) / _1821, (_1818 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1849 = 1.0 - _1436;
    float _1850 = _1849 * _1142;
    float _1851 = _1849 * _1144;
    float _1852 = _1849 * _1146;
    float _1857 = _1436 * (_1142 + (-0.039999999105930328369140625));
    float _1858 = _1436 * (_1144 + (-0.039999999105930328369140625));
    float _1859 = _1436 * (_1146 + (-0.039999999105930328369140625));
    float _1860 = _1857 + 0.039999999105930328369140625;
    float _1862 = _1858 + 0.039999999105930328369140625;
    float _1863 = _1859 + 0.039999999105930328369140625;
    _73._m0 = 1u;
    uvec4 _1873 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1874 = _1873.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1874, _1873.w, _1874, vec3(_1805, _1806, _1807), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1988;
    float _1989;
    float _1990;
    float _1991;
    float _1992;
    float _1993;
    if (_73._m0 == 0u)
    {
        float _1894 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1791, _1792, _1793));
        float _2367 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
        float _1897 = isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0));
        float _1916 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1739) * 0.949999988079071044921875);
        float _1917 = _1916 * _1916;
        float _1918 = g_sceneCB._m0[4u].x - _1682;
        float _1919 = g_sceneCB._m0[4u].y - _1683;
        float _1920 = g_sceneCB._m0[4u].z - _1684;
        float _1924 = inversesqrt(dot(vec3(_1918, _1919, _1920), vec3(_1918, _1919, _1920)));
        float _1925 = _1924 * _1918;
        float _1926 = _1924 * _1919;
        float _1927 = _1924 * _1920;
        float _1928 = dot(vec3(_1791, _1792, _1793), vec3(g_sceneCB._m0[4u].xyz));
        float _2378 = isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0));
        float _1931 = isnan(1.0) ? _2378 : (isnan(_2378) ? 1.0 : min(_2378, 1.0));
        float _1932 = dot(vec3(_1791, _1792, _1793), vec3(_1808, _1810, _1811));
        float _2389 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
        float _1935 = isnan(1.0) ? _2389 : (isnan(_2389) ? 1.0 : min(_2389, 1.0));
        float _1936 = dot(vec3(_1791, _1792, _1793), vec3(_1925, _1926, _1927));
        float _2400 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
        float _1939 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
        float _1940 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1925, _1926, _1927));
        float _2411 = isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0));
        float _1944 = _1917 * _1917;
        float _1948 = ((_1939 * _1939) * (_1944 + (-1.0))) + 1.0;
        float _1957 = exp2(log2(1.0 - (isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0)))) * 5.0);
        float _1968 = 1.0 - _1917;
        float _1979 = (0.5 / (((_1935 * ((_1931 * _1968) + _1917)) + 9.9999999392252902907785028219223e-09) + (((_1935 * _1968) + _1917) * _1931))) * _1931;
        float _2422 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
        float _1981 = (isnan(1.0) ? _2422 : (isnan(_2422) ? 1.0 : min(_2422, 1.0))) * (_1944 / ((_1948 * _1948) * 3.141590118408203125));
        _1988 = ((_1850 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1897;
        _1989 = ((_1851 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1897;
        _1990 = ((_1852 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1897;
        _1991 = (((_1957 * (0.959999978542327880859375 - _1857)) + _1860) * g_sceneCB._m0[5u].x) * _1981;
        _1992 = (((_1957 * (0.959999978542327880859375 - _1858)) + _1862) * g_sceneCB._m0[5u].y) * _1981;
        _1993 = (((_1957 * (0.959999978542327880859375 - _1859)) + _1863) * g_sceneCB._m0[5u].z) * _1981;
    }
    else
    {
        _1988 = 0.0;
        _1989 = 0.0;
        _1990 = 0.0;
        _1991 = 0.0;
        _1992 = 0.0;
        _1993 = 0.0;
    }
    bool _1995 = abs(_1792) < 0.89999997615814208984375;
    float _1997 = float(_1995);
    float _1998 = _1995 ? 0.0 : 1.0;
    float _2001 = (_1997 * _1793) - (_1998 * _1792);
    float _2002 = _1998 * _1791;
    float _2004 = (-0.0) - (_1791 * _1997);
    float _2008 = inversesqrt(dot(vec3(_2001, _2002, _2004), vec3(_2001, _2002, _2004)));
    float _2009 = _2001 * _2008;
    float _2010 = _2002 * _2008;
    float _2011 = _2008 * _2004;
    float _2014 = (_2010 * _1793) - (_2011 * _1792);
    float _2017 = (_2011 * _1791) - (_2009 * _1793);
    float _2020 = (_2009 * _1792) - (_2010 * _1791);
    float _2022;
    float _2030;
    float _2021 = 0.0;
    uint _2023 = 0u;
    float _2027;
    bool _2029;
    for (;;)
    {
        _2027 = (float(_2023) + _1835) * 0.03125;
        _2029 = _2023 == 0u;
        float frontier_phi_67_pred;
        if (_2029)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2171;
            float _2172;
            uint _2174;
            _2171 = 0.0;
            _2172 = 0.5;
            _2174 = _2023;
            float _2031;
            for (;;)
            {
                _2031 = ((_2174 & 1u) != 0u) ? (_2172 + _2171) : _2171;
                uint _2175 = _2174 >> 1u;
                if (_2175 == 0u)
                {
                    break;
                }
                else
                {
                    _2171 = _2031;
                    _2172 *= 0.5;
                    _2174 = _2175;
                }
            }
            frontier_phi_67_pred = _2031;
        }
        _2030 = frontier_phi_67_pred;
        float _2032 = _2030 + _1848;
        float _2036 = sqrt(_2027);
        float _2037 = ((_2032 > 1.0) ? (_2032 + (-1.0)) : _2032) * 6.283185482025146484375;
        float _2040 = cos(_2037) * _2036;
        float _2042 = sin(_2037) * _2036;
        float _2044 = sqrt(1.0 - _2027);
        float _2057 = ((_2044 * _1791) + (_2040 * _2014)) + (_2042 * _2009);
        float _2058 = ((_2044 * _1792) + (_2040 * _2017)) + (_2042 * _2010);
        float _2059 = ((_2044 * _1793) + (_2040 * _2020)) + (_2042 * _2011);
        _72._m0 = 1u;
        uvec4 _2063 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2064 = _2063.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2064, _2063.w, _2064, vec3(_1805, _1806, _1807), 9.9999997473787516355514526367188e-05, vec3(_2057, _2058, _2059), 10000.0, 1);
        float _2070 = dot(vec3(_1791, _1792, _1793), vec3(_2057, _2058, _2059));
        float _2433 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
        float _2073 = isnan(1.0) ? _2433 : (isnan(_2433) ? 1.0 : min(_2433, 1.0));
        _2022 = ((float(_72._m0 == 0u) * _2073) / (_2073 * 0.3183098733425140380859375)) + _2021;
        uint _2024 = _2023 + 1u;
        if (_2024 == 32u)
        {
            break;
        }
        else
        {
            _2021 = _2022;
            _2023 = _2024;
            continue;
        }
    }
    float _2081 = _2022 * 0.009947183541953563690185546875;
    float _2086 = dot(vec3(_1682, _1683, _1684), vec3(_1791, _1792, _1793)) * 2.0;
    vec4 _2100 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1682 - (_2086 * _1791), _1683 - (_2086 * _1792), _1684 - (_2086 * _1793)), 4.0 - (_1739 * 4.0));
    float _2105 = dot(vec3(_1808, _1810, _1811), vec3(_1791, _1792, _1793));
    float _2444 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2115 = exp2(log2(1.0 - (isnan(1.0) ? _2444 : (isnan(_2444) ? 1.0 : min(_2444, 1.0)))) * 5.0);
    vec4 _2127 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1791, _1792, _1793), 0.0);
    float _2138 = (_1991 + _1988) + (((_2127.x * _1850) + (((_2115 * (0.959999978542327880859375 - _1857)) + _1860) * _2100.x)) * _2081);
    float _2142 = (_1992 + _1989) + (((_2127.y * _1851) + (((_2115 * (0.959999978542327880859375 - _1858)) + _1862) * _2100.y)) * _2081);
    float _2146 = (_1993 + _1990) + (((_2127.z * _1852) + (((_2115 * (0.959999978542327880859375 - _1859)) + _1863) * _2100.z)) * _2081);
    float _2455 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2466 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
    float _2477 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
    bool _2154 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2165;
    _2165.x = _2154 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2455 : (isnan(_2455) ? 1.0 : min(_2455, 1.0)));
    _2165.y = _2154 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2466 : (isnan(_2466) ? 1.0 : min(_2466, 1.0)));
    _2165.z = _2154 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2477 : (isnan(_2477) ? 1.0 : min(_2477, 1.0)));
    payload._m0 = _2165;
}


