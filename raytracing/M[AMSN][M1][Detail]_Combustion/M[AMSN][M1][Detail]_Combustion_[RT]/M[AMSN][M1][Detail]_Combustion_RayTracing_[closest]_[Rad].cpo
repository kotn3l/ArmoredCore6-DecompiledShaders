#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_23;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1520;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _238 = _182 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _183 ? (_239 + 4u) : _239;
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_187 + 4u) + _243) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uint _261 = _181 * _175;
    uint _262 = _261 + 12u;
    uint _283;
    uint _284;
    uint _285;
    uint _286;
    if (_186)
    {
        uvec4 _264 = texelFetch(l_geomAttrib_0, int(_262 >> 2u));
        uint _265 = _264.x;
        _283 = _265 & 255u;
        _284 = (_265 >> 8u) & 255u;
        _285 = (_265 >> 16u) & 255u;
        _286 = 16u;
    }
    else
    {
        uint _271 = _262 >> 2u;
        uvec2 _277 = uvec2(texelFetch(l_geomAttrib_0, int(_271)).x, texelFetch(l_geomAttrib_0, int(_271 + 1u)).x);
        uint _278 = _277.x;
        _283 = _278 & 65535u;
        _284 = _278 >> 16u;
        _285 = _277.y & 65535u;
        _286 = 20u;
    }
    uvec4 _292 = texelFetch(l_geomAttrib_0, int((_286 + _261) >> 2u));
    uint _293 = _292.x;
    uint _305;
    if (_238)
    {
        _305 = _286 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _286 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _286 + 12u;
        }
        _305 = frontier_phi_16_17_ladder;
    }
    uint _309 = _183 ? (_305 + 4u) : _305;
    uvec4 _313 = texelFetch(l_geomAttrib_0, int(((_261 + 4u) + _309) >> 2u));
    uint _314 = _313.x;
    float _318 = float(int(uint(int(_314 << 16u) >> int(16u))));
    float _319 = float(int(uint(int(_314) >> int(16u))));
    uint _327 = _181 * _176;
    uint _328 = _327 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_186)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _327) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_238)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _352 + 12u;
        }
        _371 = frontier_phi_23_24_ladder;
    }
    uint _375 = _183 ? (_371 + 4u) : _371;
    uvec4 _379 = texelFetch(l_geomAttrib_0, int(((_327 + 4u) + _375) >> 2u));
    uint _380 = _379.x;
    float _384 = float(int(uint(int(_380 << 16u) >> int(16u))));
    float _385 = float(int(uint(int(_380) >> int(16u))));
    bool _394 = _132.z == 0u;
    float _430;
    float _431;
    float _432;
    if (_394)
    {
        uint _397 = _173 * 3u;
        uvec3 _406 = uvec3(texelFetch(l_geomPositionBuffer, int(_397)).x, texelFetch(l_geomPositionBuffer, int(_397 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_397 + 2u)).x);
        _430 = uintBitsToFloat(_406.x);
        _431 = uintBitsToFloat(_406.y);
        _432 = uintBitsToFloat(_406.z);
    }
    else
    {
        uint _414 = _173 * 2u;
        uvec2 _420 = uvec2(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x);
        uint _421 = _420.x;
        _430 = unpackHalf2x16(_421).x;
        _431 = unpackHalf2x16(_421 >> 16u).x;
        _432 = unpackHalf2x16(_420.y).x;
    }
    float _468;
    float _469;
    float _470;
    if (_394)
    {
        uint _435 = _175 * 3u;
        uvec3 _444 = uvec3(texelFetch(l_geomPositionBuffer, int(_435)).x, texelFetch(l_geomPositionBuffer, int(_435 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_435 + 2u)).x);
        _468 = uintBitsToFloat(_444.x);
        _469 = uintBitsToFloat(_444.y);
        _470 = uintBitsToFloat(_444.z);
    }
    else
    {
        uint _452 = _175 * 2u;
        uvec2 _458 = uvec2(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x);
        uint _459 = _458.x;
        _468 = unpackHalf2x16(_459).x;
        _469 = unpackHalf2x16(_459 >> 16u).x;
        _470 = unpackHalf2x16(_458.y).x;
    }
    float _506;
    float _507;
    float _508;
    if (_394)
    {
        uint _473 = _176 * 3u;
        uvec3 _482 = uvec3(texelFetch(l_geomPositionBuffer, int(_473)).x, texelFetch(l_geomPositionBuffer, int(_473 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_473 + 2u)).x);
        _506 = uintBitsToFloat(_482.x);
        _507 = uintBitsToFloat(_482.y);
        _508 = uintBitsToFloat(_482.z);
    }
    else
    {
        uint _490 = _176 * 2u;
        uvec2 _496 = uvec2(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x);
        uint _497 = _496.x;
        _506 = unpackHalf2x16(_497).x;
        _507 = unpackHalf2x16(_497 >> 16u).x;
        _508 = unpackHalf2x16(_496.y).x;
    }
    float _511 = (1.0 - hit._m0.x) - hit._m0.y;
    float _548 = (((float(texelFetch(l_geomAttrib_0, int(((_261 + 8u) + _309) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_187 + 8u) + _243) >> 2u)).x & 255u) * _511)) + (float(texelFetch(l_geomAttrib_0, int(((_327 + 8u) + _375) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _552 = (_318 - _252) * 0.00048828125;
    float _554 = (_319 - _253) * 0.00048828125;
    float _557 = (_384 - _252) * 0.00048828125;
    float _558 = (_385 - _253) * 0.00048828125;
    float _580 = _468 - _430;
    float _581 = _469 - _431;
    float _582 = _470 - _432;
    float _585 = fma(_582, gl_ObjectToWorldEXT[2u].x, fma(_581, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _580));
    float _588 = fma(_582, gl_ObjectToWorldEXT[2u].y, fma(_581, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _580));
    float _591 = fma(_582, gl_ObjectToWorldEXT[2u].z, fma(_581, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _580));
    float _592 = _506 - _430;
    float _593 = _507 - _431;
    float _594 = _508 - _432;
    float _597 = fma(_594, gl_ObjectToWorldEXT[2u].x, fma(_593, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _592));
    float _600 = fma(_594, gl_ObjectToWorldEXT[2u].y, fma(_593, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _592));
    float _603 = fma(_594, gl_ObjectToWorldEXT[2u].z, fma(_593, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _592));
    float _604 = (((_318 * hit._m0.x) + (_252 * _511)) + (_384 * hit._m0.y)) * 0.00048828125;
    float _605 = (((_319 * hit._m0.x) + (_253 * _511)) + (_385 * hit._m0.y)) * 0.00048828125;
    float _609 = (((float(_212) * _511) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _612 = (((float(_213) * _511) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _615 = (((float(_214) * _511) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _616 = _609 * 0.0078740157186985015869140625;
    float _618 = _612 * 0.0078740157186985015869140625;
    float _619 = _615 * 0.0078740157186985015869140625;
    float _632 = ((((float(_224 & 255u) * _511) + (-127.0)) + (float(_293 & 255u) * hit._m0.x)) + (float(_359 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _633 = ((((float((_224 >> 8u) & 255u) * _511) + (-127.0)) + (float((_293 >> 8u) & 255u) * hit._m0.x)) + (float((_359 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _634 = ((((float((_224 >> 16u) & 255u) * _511) + (-127.0)) + (float((_293 >> 16u) & 255u) * hit._m0.x)) + (float((_359 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _635 = ((((float(_224 >> 24u) * _511) + (-127.0)) + (float(_293 >> 24u) * hit._m0.x)) + (float(_359 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _645 = ((_633 * _619) - (_634 * _618)) * _635;
    float _646 = ((_634 * _616) - (_632 * _619)) * _635;
    float _647 = ((_632 * _618) - (_633 * _616)) * _635;
    float _651 = inversesqrt(dot(vec3(_645, _646, _647), vec3(_645, _646, _647)));
    uvec2 _672 = uvec2(textureSize(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_13, int(0u)));
    bool _677 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _730;
    if (_677)
    {
        float _688 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _694 = (_603 * _588) - (_600 * _591);
        float _697 = (_597 * _591) - (_603 * _585);
        float _700 = (_600 * _585) - (_597 * _588);
        float _727 = ((log2((((float(_672.y) * 0.5) * float(_672.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_697 * _697) + (_700 * _700)) + (_694 * _694)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_688 * gl_WorldRayDirectionEXT.x, _688 * gl_WorldRayDirectionEXT.y, _688 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _730 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    }
    else
    {
        _730 = 0.0;
    }
    vec4 _734 = textureLod(sampler2D(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _604) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _605) + cbTextureTilingScale._m0[2u].w), _730);
    float _739 = _734.x * cbMtdParam._m0[9u].x;
    float _740 = _734.y * cbMtdParam._m0[9u].y;
    float _741 = _734.z * cbMtdParam._m0[9u].z;
    uvec2 _753 = uvec2(textureSize(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_7, int(0u)));
    float _804;
    if (_677)
    {
        float _764 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _770 = (_603 * _588) - (_600 * _591);
        float _773 = (_597 * _591) - (_603 * _585);
        float _776 = (_600 * _585) - (_597 * _588);
        float _802 = ((log2((((float(_753.y) * 0.5) * float(_753.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_773 * _773) + (_776 * _776)) + (_770 * _770)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_764 * gl_WorldRayDirectionEXT.x, _764 * gl_WorldRayDirectionEXT.y, _764 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _804 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    }
    else
    {
        _804 = 0.0;
    }
    vec4 _807 = textureLod(sampler2D(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _604) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _605) + cbTextureTilingScale._m0[7u].w), _804);
    float _811 = _807.z;
    float _814 = (_807.x * 2.0) + (-1.0);
    float _816 = (_807.y * 2.0) + (-1.0);
    float _817 = dot(vec2(_814, _816), vec2(_814, _816));
    float _1612 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _822 = sqrt(1.0 - (isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0))));
    float _848 = (cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _604;
    float _849 = (cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _605;
    uvec2 _861 = uvec2(textureSize(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_4, int(0u)));
    float _912;
    if (_677)
    {
        float _872 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _878 = (_603 * _588) - (_600 * _591);
        float _881 = (_597 * _591) - (_603 * _585);
        float _884 = (_600 * _585) - (_597 * _588);
        float _910 = ((log2((((float(_861.y) * 0.5) * float(_861.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_881 * _881) + (_884 * _884)) + (_878 * _878)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_872 * gl_WorldRayDirectionEXT.x, _872 * gl_WorldRayDirectionEXT.y, _872 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _912 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    }
    else
    {
        _912 = 0.0;
    }
    vec4 _914 = textureLod(sampler2D(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((_848 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_849 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _912);
    float _928 = abs((fract(cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1628 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _929 = isnan(1.0) ? _1628 : (isnan(_1628) ? 1.0 : min(_1628, 1.0));
    float _937 = (((_929 * _929) * (3.0 - (_929 * 2.0))) * cbMtdParam._m0[14u].x) - cbMtdParam._m0[14u].y;
    float _946 = cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x;
    float _954 = abs((fract(cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1639 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _955 = isnan(1.0) ? _1639 : (isnan(_1639) ? 1.0 : min(_1639, 1.0));
    float _959 = (_955 * _955) * (3.0 - (_955 * 2.0));
    float _960 = _959 * cbMtdParam._m0[17u].x;
    float _961 = _959 * cbMtdParam._m0[17u].y;
    float _962 = sin(_946);
    float _963 = cos(_946);
    float _964 = _604 - _960;
    float _965 = _605 - _961;
    uvec2 _985 = uvec2(textureSize(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_10, int(0u)));
    float _1036;
    if (_677)
    {
        float _996 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1002 = (_603 * _588) - (_600 * _591);
        float _1005 = (_597 * _591) - (_603 * _585);
        float _1008 = (_600 * _585) - (_597 * _588);
        float _1034 = ((log2((((float(_985.y) * 0.5) * float(_985.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1005 * _1005) + (_1008 * _1008)) + (_1002 * _1002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_996 * gl_WorldRayDirectionEXT.x, _996 * gl_WorldRayDirectionEXT.y, _996 * gl_WorldRayDirectionEXT.z), vec3(_616, _618, _619))));
        _1036 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    }
    else
    {
        _1036 = 0.0;
    }
    vec4 _1038 = textureLod(sampler2D(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_960 + fma(_965, (-0.0) - _962, _964 * _963))) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (fma(_965, _963, _964 * _962) + _961)) + cbTextureTilingScale._m0[0u].w), _1036);
    float _1044 = (cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].w) * _1038.x;
    float _1046 = (cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].w) * _1038.y;
    float _1048 = (cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].w) * _1038.z;
    uvec2 _1071 = uvec2(textureSize(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_23, int(0u)));
    float _1075 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1076 = _1075 * gl_WorldRayDirectionEXT.x;
    float _1077 = _1075 * gl_WorldRayDirectionEXT.y;
    float _1078 = _1075 * gl_WorldRayDirectionEXT.z;
    float _1122;
    if (_677)
    {
        float _1088 = (_603 * _588) - (_600 * _591);
        float _1091 = (_597 * _591) - (_603 * _585);
        float _1094 = (_600 * _585) - (_597 * _588);
        float _1120 = ((log2((((float(_1071.y) * 0.5) * float(_1071.x)) * abs((_558 * _552) - (_557 * _554))) / (sqrt(((_1091 * _1091) + (_1094 * _1094)) + (_1088 * _1088)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1076, _1077, _1078), vec3(_616, _618, _619))));
        _1122 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    }
    else
    {
        _1122 = 0.0;
    }
    float _1135 = (_548 - ((cbMtdParam._m0[16u].w * (1.0 - _548)) * (textureLod(sampler2D(M_AMSN_M1_Detail_Combustion_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _848) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _849) + cbTextureTilingScale._m0[5u].w), _1122).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[13u].x + 1.0);
    float _1660 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
    float _1136 = isnan(1.0) ? _1660 : (isnan(_1660) ? 1.0 : min(_1660, 1.0));
    float _1137 = cbMtdParam._m0[13u].y * cbMtdParam._m0[15u].y;
    float _1156 = (cbMtdParam._m0[16u].y * _814) + _814;
    float _1157 = (cbMtdParam._m0[16u].y * _816) + _816;
    float _1160 = fma(_822, _616, fma(_1157, _632, (_651 * _645) * _1156));
    float _1163 = fma(_822, _618, fma(_1157, _633, (_651 * _646) * _1156));
    float _1166 = fma(_822, _619, fma(_1157, _634, (_651 * _647) * _1156));
    float _1170 = inversesqrt(dot(vec3(_1160, _1163, _1166), vec3(_1160, _1163, _1166)));
    float _1171 = _1170 * _1160;
    float _1172 = _1170 * _1163;
    float _1173 = _1170 * _1166;
    float _1185 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1186 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1187 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1188 = (-0.0) - _1076;
    float _1189 = (-0.0) - _1077;
    float _1190 = (-0.0) - _1078;
    float _1196 = float(gl_LaunchIDEXT.x);
    float _1197 = float(gl_LaunchIDEXT.y);
    float _1200 = float(gl_LaunchSizeEXT.x);
    float _1214 = fract(fract(sin(dot(vec2(_1196 / _1200, _1197 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1227 = fract(fract(sin(dot(vec2((_1196 + 128.0) / _1200, (_1197 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1237 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1238 = _1237.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1238, _1237.w, _1238, vec3(_1185, _1186, _1187), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    if (_70._m0 == 0u)
    {
        float _1258 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1171, _1172, _1173));
        float _1671 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1261 = isnan(1.0) ? _1671 : (isnan(_1671) ? 1.0 : min(_1671, 1.0));
        float _1280 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _811) * 0.949999988079071044921875);
        float _1281 = _1280 * _1280;
        float _1282 = g_sceneCB._m0[4u].x - _1076;
        float _1283 = g_sceneCB._m0[4u].y - _1077;
        float _1284 = g_sceneCB._m0[4u].z - _1078;
        float _1288 = inversesqrt(dot(vec3(_1282, _1283, _1284), vec3(_1282, _1283, _1284)));
        float _1289 = _1288 * _1282;
        float _1290 = _1288 * _1283;
        float _1291 = _1288 * _1284;
        float _1292 = dot(vec3(_1171, _1172, _1173), vec3(g_sceneCB._m0[4u].xyz));
        float _1682 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1295 = isnan(1.0) ? _1682 : (isnan(_1682) ? 1.0 : min(_1682, 1.0));
        float _1296 = dot(vec3(_1171, _1172, _1173), vec3(_1188, _1189, _1190));
        float _1693 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1299 = isnan(1.0) ? _1693 : (isnan(_1693) ? 1.0 : min(_1693, 1.0));
        float _1300 = dot(vec3(_1171, _1172, _1173), vec3(_1289, _1290, _1291));
        float _1704 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1303 = isnan(1.0) ? _1704 : (isnan(_1704) ? 1.0 : min(_1704, 1.0));
        float _1304 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1289, _1290, _1291));
        float _1715 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1308 = _1281 * _1281;
        float _1312 = ((_1303 * _1303) * (_1308 + (-1.0))) + 1.0;
        float _1324 = (exp2(log2(1.0 - (isnan(1.0) ? _1715 : (isnan(_1715) ? 1.0 : min(_1715, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1326 = 1.0 - _1281;
        float _1337 = (0.5 / (((_1299 * ((_1295 * _1326) + _1281)) + 9.9999999392252902907785028219223e-09) + (((_1299 * _1326) + _1281) * _1295))) * _1295;
        float _1726 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1339 = (isnan(1.0) ? _1726 : (isnan(_1726) ? 1.0 : min(_1726, 1.0))) * (_1308 / ((_1312 * _1312) * 3.141590118408203125));
        _1346 = ((_739 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1261;
        _1347 = ((_740 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1261;
        _1348 = ((_741 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1261;
        _1349 = (_1324 * g_sceneCB._m0[5u].x) * _1339;
        _1350 = (_1324 * g_sceneCB._m0[5u].y) * _1339;
        _1351 = (_1324 * g_sceneCB._m0[5u].z) * _1339;
    }
    else
    {
        _1346 = 0.0;
        _1347 = 0.0;
        _1348 = 0.0;
        _1349 = 0.0;
        _1350 = 0.0;
        _1351 = 0.0;
    }
    bool _1353 = abs(_1172) < 0.89999997615814208984375;
    float _1355 = float(_1353);
    float _1356 = _1353 ? 0.0 : 1.0;
    float _1359 = (_1355 * _1173) - (_1356 * _1172);
    float _1360 = _1356 * _1171;
    float _1362 = (-0.0) - (_1171 * _1355);
    float _1366 = inversesqrt(dot(vec3(_1359, _1360, _1362), vec3(_1359, _1360, _1362)));
    float _1367 = _1359 * _1366;
    float _1368 = _1360 * _1366;
    float _1369 = _1366 * _1362;
    float _1372 = (_1368 * _1173) - (_1369 * _1172);
    float _1375 = (_1369 * _1171) - (_1367 * _1173);
    float _1378 = (_1367 * _1172) - (_1368 * _1171);
    float _1380;
    float _1388;
    float _1379 = 0.0;
    uint _1381 = 0u;
    float _1385;
    bool _1387;
    for (;;)
    {
        _1385 = (float(_1381) + _1214) * 0.03125;
        _1387 = _1381 == 0u;
        float frontier_phi_49_pred;
        if (_1387)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1525;
            float _1526;
            uint _1528;
            _1525 = 0.0;
            _1526 = 0.5;
            _1528 = _1381;
            float _1389;
            for (;;)
            {
                _1389 = ((_1528 & 1u) != 0u) ? (_1526 + _1525) : _1525;
                uint _1529 = _1528 >> 1u;
                if (_1529 == 0u)
                {
                    break;
                }
                else
                {
                    _1525 = _1389;
                    _1526 *= 0.5;
                    _1528 = _1529;
                }
            }
            frontier_phi_49_pred = _1389;
        }
        _1388 = frontier_phi_49_pred;
        float _1390 = _1388 + _1227;
        float _1394 = sqrt(_1385);
        float _1395 = ((_1390 > 1.0) ? (_1390 + (-1.0)) : _1390) * 6.283185482025146484375;
        float _1398 = cos(_1395) * _1394;
        float _1400 = sin(_1395) * _1394;
        float _1402 = sqrt(1.0 - _1385);
        float _1415 = ((_1402 * _1171) + (_1398 * _1372)) + (_1400 * _1367);
        float _1416 = ((_1402 * _1172) + (_1398 * _1375)) + (_1400 * _1368);
        float _1417 = ((_1402 * _1173) + (_1398 * _1378)) + (_1400 * _1369);
        _69._m0 = 1u;
        uvec4 _1421 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1422 = _1421.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1422, _1421.w, _1422, vec3(_1185, _1186, _1187), 9.9999997473787516355514526367188e-05, vec3(_1415, _1416, _1417), 10000.0, 1);
        float _1428 = dot(vec3(_1171, _1172, _1173), vec3(_1415, _1416, _1417));
        float _1737 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1431 = isnan(1.0) ? _1737 : (isnan(_1737) ? 1.0 : min(_1737, 1.0));
        _1380 = ((float(_69._m0 == 0u) * _1431) / (_1431 * 0.3183098733425140380859375)) + _1379;
        uint _1382 = _1381 + 1u;
        if (_1382 == 32u)
        {
            break;
        }
        else
        {
            _1379 = _1380;
            _1381 = _1382;
            continue;
        }
    }
    float _1439 = _1380 * 0.009947183541953563690185546875;
    float _1444 = dot(vec3(_1076, _1077, _1078), vec3(_1171, _1172, _1173)) * 2.0;
    vec4 _1458 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1076 - (_1444 * _1171), _1077 - (_1444 * _1172), _1078 - (_1444 * _1173)), 4.0 - (_811 * 4.0));
    float _1463 = dot(vec3(_1188, _1189, _1190), vec3(_1171, _1172, _1173));
    float _1748 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
    float _1472 = (exp2(log2(1.0 - (isnan(1.0) ? _1748 : (isnan(_1748) ? 1.0 : min(_1748, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1478 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1171, _1172, _1173), 0.0);
    float _1490 = ((_1346 + (((((_1137 * cbMtdParam._m0[10u].x) * _914.x) * _937) * (((1.0 - _1044) * cbMtdParam._m0[16u].z) + _1044)) * _1136)) + _1349) + (((_1478.x * _739) + (_1472 * _1458.x)) * _1439);
    float _1495 = ((_1347 + (((((_1137 * cbMtdParam._m0[10u].y) * _914.y) * _937) * (((1.0 - _1046) * cbMtdParam._m0[16u].z) + _1046)) * _1136)) + _1350) + (((_1478.y * _740) + (_1472 * _1458.y)) * _1439);
    float _1500 = ((_1348 + (((((_1137 * cbMtdParam._m0[10u].z) * _914.z) * _937) * (((1.0 - _1048) * cbMtdParam._m0[16u].z) + _1048)) * _1136)) + _1351) + (((_1478.z * _741) + (_1472 * _1458.z)) * _1439);
    float _1759 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _1770 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
    float _1781 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
    bool _1508 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1519;
    _1519.x = _1508 ? ((_609 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1759 : (isnan(_1759) ? 1.0 : min(_1759, 1.0)));
    _1519.y = _1508 ? ((_612 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1770 : (isnan(_1770) ? 1.0 : min(_1770, 1.0)));
    _1519.z = _1508 ? ((_615 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1781 : (isnan(_1781) ? 1.0 : min(_1781, 1.0)));
    payload._m0 = _1519;
}


