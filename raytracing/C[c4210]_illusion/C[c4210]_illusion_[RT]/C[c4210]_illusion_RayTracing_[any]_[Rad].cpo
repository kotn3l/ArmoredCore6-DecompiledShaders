#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D C_c4210_illusion_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D C_c4210_illusion_snp_0_Texture2D_11;
layout(set = 0, binding = 2) uniform texture2D C_c4210_illusion_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c4210_illusion_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D C_c4210_illusion_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D C_c4210_illusion_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;

void main()
{
    vec3 _63 = payload._m0;
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _159 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _160 >> 16u;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _162;
        }
        _165 = frontier_phi_3_2_ladder_2;
        _167 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _180 = (_173 * _165) + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 20u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 24u;
    }
    bool _213 = _174 == 0u;
    uint _214;
    if (_213)
    {
        _214 = _207;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _207 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _207 + 8u;
        }
        _214 = frontier_phi_9_10_ladder;
    }
    uvec4 _225 = texelFetch(l_geomAttrib_0, int((((_173 * _165) + 4u) + (_175 ? (_214 + 4u) : _214)) >> 2u));
    uint _226 = _225.x;
    float _230 = float(int(uint(int(_226 << 16u) >> int(16u))));
    float _231 = float(int(uint(int(_226) >> int(16u))));
    uint _233 = (_173 * _167) + 12u;
    uint _254;
    uint _255;
    uint _256;
    uint _257;
    if (_178)
    {
        uvec4 _235 = texelFetch(l_geomAttrib_0, int(_233 >> 2u));
        uint _236 = _235.x;
        _254 = _236 & 255u;
        _255 = (_236 >> 8u) & 255u;
        _256 = (_236 >> 16u) & 255u;
        _257 = 20u;
    }
    else
    {
        uint _242 = _233 >> 2u;
        uvec2 _248 = uvec2(texelFetch(l_geomAttrib_0, int(_242)).x, texelFetch(l_geomAttrib_0, int(_242 + 1u)).x);
        uint _249 = _248.x;
        _254 = _249 & 65535u;
        _255 = _249 >> 16u;
        _256 = _248.y & 65535u;
        _257 = 24u;
    }
    uint _261;
    if (_213)
    {
        _261 = _257;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _257 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _257 + 8u;
        }
        _261 = frontier_phi_16_17_ladder;
    }
    uvec4 _270 = texelFetch(l_geomAttrib_0, int((((_173 * _167) + 4u) + (_175 ? (_261 + 4u) : _261)) >> 2u));
    uint _271 = _270.x;
    float _275 = float(int(uint(int(_271 << 16u) >> int(16u))));
    float _276 = float(int(uint(int(_271) >> int(16u))));
    uint _278 = (_173 * _168) + 12u;
    uint _299;
    uint _300;
    uint _301;
    uint _302;
    if (_178)
    {
        uvec4 _280 = texelFetch(l_geomAttrib_0, int(_278 >> 2u));
        uint _281 = _280.x;
        _299 = _281 & 255u;
        _300 = (_281 >> 8u) & 255u;
        _301 = (_281 >> 16u) & 255u;
        _302 = 20u;
    }
    else
    {
        uint _287 = _278 >> 2u;
        uvec2 _293 = uvec2(texelFetch(l_geomAttrib_0, int(_287)).x, texelFetch(l_geomAttrib_0, int(_287 + 1u)).x);
        uint _294 = _293.x;
        _299 = _294 & 65535u;
        _300 = _294 >> 16u;
        _301 = _293.y & 65535u;
        _302 = 24u;
    }
    uint _306;
    if (_213)
    {
        _306 = _302;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _302 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _302 + 8u;
        }
        _306 = frontier_phi_23_24_ladder;
    }
    uvec4 _315 = texelFetch(l_geomAttrib_0, int((((_173 * _168) + 4u) + (_175 ? (_306 + 4u) : _306)) >> 2u));
    uint _316 = _315.x;
    float _320 = float(int(uint(int(_316 << 16u) >> int(16u))));
    float _321 = float(int(uint(int(_316) >> int(16u))));
    bool _323 = _124.z == 0u;
    float _359;
    float _360;
    float _361;
    if (_323)
    {
        uint _326 = _165 * 3u;
        uvec3 _335 = uvec3(texelFetch(l_geomPositionBuffer, int(_326)).x, texelFetch(l_geomPositionBuffer, int(_326 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_326 + 2u)).x);
        _359 = uintBitsToFloat(_335.x);
        _360 = uintBitsToFloat(_335.y);
        _361 = uintBitsToFloat(_335.z);
    }
    else
    {
        uint _343 = _165 * 2u;
        uvec2 _349 = uvec2(texelFetch(l_geomPositionBuffer, int(_343)).x, texelFetch(l_geomPositionBuffer, int(_343 + 1u)).x);
        uint _350 = _349.x;
        _359 = unpackHalf2x16(_350).x;
        _360 = unpackHalf2x16(_350 >> 16u).x;
        _361 = unpackHalf2x16(_349.y).x;
    }
    float _397;
    float _398;
    float _399;
    if (_323)
    {
        uint _364 = _167 * 3u;
        uvec3 _373 = uvec3(texelFetch(l_geomPositionBuffer, int(_364)).x, texelFetch(l_geomPositionBuffer, int(_364 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_364 + 2u)).x);
        _397 = uintBitsToFloat(_373.x);
        _398 = uintBitsToFloat(_373.y);
        _399 = uintBitsToFloat(_373.z);
    }
    else
    {
        uint _381 = _167 * 2u;
        uvec2 _387 = uvec2(texelFetch(l_geomPositionBuffer, int(_381)).x, texelFetch(l_geomPositionBuffer, int(_381 + 1u)).x);
        uint _388 = _387.x;
        _397 = unpackHalf2x16(_388).x;
        _398 = unpackHalf2x16(_388 >> 16u).x;
        _399 = unpackHalf2x16(_387.y).x;
    }
    float _435;
    float _436;
    float _437;
    if (_323)
    {
        uint _402 = _168 * 3u;
        uvec3 _411 = uvec3(texelFetch(l_geomPositionBuffer, int(_402)).x, texelFetch(l_geomPositionBuffer, int(_402 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_402 + 2u)).x);
        _435 = uintBitsToFloat(_411.x);
        _436 = uintBitsToFloat(_411.y);
        _437 = uintBitsToFloat(_411.z);
    }
    else
    {
        uint _419 = _168 * 2u;
        uvec2 _425 = uvec2(texelFetch(l_geomPositionBuffer, int(_419)).x, texelFetch(l_geomPositionBuffer, int(_419 + 1u)).x);
        uint _426 = _425.x;
        _435 = unpackHalf2x16(_426).x;
        _436 = unpackHalf2x16(_426 >> 16u).x;
        _437 = unpackHalf2x16(_425.y).x;
    }
    float _440 = (1.0 - hit._m0.x) - hit._m0.y;
    float _462 = (_275 - _230) * 0.00048828125;
    float _464 = (_276 - _231) * 0.00048828125;
    float _467 = (_320 - _230) * 0.00048828125;
    float _468 = (_321 - _231) * 0.00048828125;
    float _490 = _397 - _359;
    float _491 = _398 - _360;
    float _492 = _399 - _361;
    float _495 = fma(_492, gl_ObjectToWorldEXT[2u].x, fma(_491, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _490));
    float _498 = fma(_492, gl_ObjectToWorldEXT[2u].y, fma(_491, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _490));
    float _501 = fma(_492, gl_ObjectToWorldEXT[2u].z, fma(_491, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _490));
    float _502 = _435 - _359;
    float _503 = _436 - _360;
    float _504 = _437 - _361;
    float _507 = fma(_504, gl_ObjectToWorldEXT[2u].x, fma(_503, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _502));
    float _510 = fma(_504, gl_ObjectToWorldEXT[2u].y, fma(_503, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _502));
    float _513 = fma(_504, gl_ObjectToWorldEXT[2u].z, fma(_503, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _502));
    float _514 = (((_275 * hit._m0.x) + (_230 * _440)) + (_320 * hit._m0.y)) * 0.00048828125;
    float _515 = (((_276 * hit._m0.x) + (_231 * _440)) + (_321 * hit._m0.y)) * 0.00048828125;
    float _526 = ((((float(_204) * _440) + (-127.0)) + (float(_254) * hit._m0.x)) + (float(_299) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _528 = ((((float(_205) * _440) + (-127.0)) + (float(_255) * hit._m0.x)) + (float(_300) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _529 = ((((float(_206) * _440) + (-127.0)) + (float(_256) * hit._m0.x)) + (float(_301) * hit._m0.y)) * 0.0078740157186985015869140625;
    uvec2 _541 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_12, int(0u)));
    bool _546 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _599;
    if (_546)
    {
        float _557 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _563 = (_513 * _498) - (_510 * _501);
        float _566 = (_507 * _501) - (_513 * _495);
        float _569 = (_510 * _495) - (_507 * _498);
        float _596 = ((log2((((float(_541.y) * 0.5) * float(_541.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_566 * _566) + (_569 * _569)) + (_563 * _563)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_557 * gl_WorldRayDirectionEXT.x, _557 * gl_WorldRayDirectionEXT.y, _557 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _599 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    }
    else
    {
        _599 = 0.0;
    }
    vec4 _603 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _514) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _515) + cbTextureTilingScale._m0[2u].w), _599);
    float _605 = _603.x;
    float _610 = cbMtdParam._m0[11u].y * 0.116666667163372039794921875;
    float _616 = fract(abs(_610));
    float _628 = cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x;
    float _631 = (_628 * cbMtdParam._m0[17u].z) + _514;
    float _632 = (_628 * cbMtdParam._m0[17u].w) + _515;
    float _653 = (cbTextureTilingScale._m0[6u].x * ((_628 * cbMtdParam._m0[16u].z) + _514)) + cbTextureTilingScale._m0[6u].z;
    float _654 = (cbTextureTilingScale._m0[6u].y * ((cbMtdParam._m0[16u].w * _628) + _515)) + cbTextureTilingScale._m0[6u].w;
    uvec2 _656 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_7, int(0u)));
    float _707;
    if (_546)
    {
        float _667 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _673 = (_513 * _498) - (_510 * _501);
        float _676 = (_507 * _501) - (_513 * _495);
        float _679 = (_510 * _495) - (_507 * _498);
        float _705 = ((log2((((float(_656.y) * 0.5) * float(_656.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_676 * _676) + (_679 * _679)) + (_673 * _673)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_667 * gl_WorldRayDirectionEXT.x, _667 * gl_WorldRayDirectionEXT.y, _667 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _707 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    }
    else
    {
        _707 = 0.0;
    }
    vec4 _709 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_653, _654), _707);
    float _713 = cbPerFrame._m0[22u].x * 2.0;
    float _714 = _713 * cbMtdParam._m0[12u].z;
    float _720 = ((_709.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _722 = (-0.0) - (cbMtdParam._m0[11u].z * ((_709.x * 0.5) + (-0.25)));
    float _723 = fract(_714);
    float _725 = fract(_714 + 0.5);
    float _737 = abs((_723 * 2.0) + (-1.0));
    vec4 _755 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_723 * _722) + _631) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_720 * _723) + _632) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _757 = _755.x;
    float _766 = ((0.25 - ((((_610 >= ((-0.0) - _610)) ? _616 : ((-0.0) - _616)) * 3.0) - _605)) + _757) + ((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_725 * _722) + _631) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_720 * _725) + _632) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0).x - _757) * _737);
    float _767 = ceil(_766);
    float _1403 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _780 = (cbMtdParam._m0[18u].x * _628) + _514;
    float _781 = (cbMtdParam._m0[18u].y * _628) + _515;
    float _837;
    if (_546)
    {
        float _797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _803 = (_513 * _498) - (_510 * _501);
        float _806 = (_507 * _501) - (_513 * _495);
        float _809 = (_510 * _495) - (_507 * _498);
        float _835 = ((log2((((float(_656.y) * 0.5) * float(_656.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_806 * _806) + (_809 * _809)) + (_803 * _803)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_797 * gl_WorldRayDirectionEXT.x, _797 * gl_WorldRayDirectionEXT.y, _797 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _837 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    }
    else
    {
        _837 = 0.0;
    }
    vec4 _839 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_653, _654), _837);
    float _843 = _713 * cbMtdParam._m0[13u].x;
    float _848 = ((_839.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _850 = (-0.0) - (cbMtdParam._m0[12u].w * ((_839.x * 0.5) + (-0.25)));
    float _851 = fract(_843);
    float _853 = fract(_843 + 0.5);
    vec4 _881 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_851 * _850) + _780) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_848 * _851) + _781) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _883 = _881.x;
    float _890 = (((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_853 * _850) + _780) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_848 * _853) + _781) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0).x - _883) * abs((_851 * 2.0) + (-1.0))) + _883) * cbMtdParam._m0[10u].x;
    float _892 = _890 - (_890 * (isnan(1.0) ? _1403 : (isnan(_1403) ? 1.0 : min(_1403, 1.0))));
    float _897 = abs(cbMtdParam._m0[12u].y * _766);
    float _901 = (((_897 * cbMtdParam._m0[12u].x) - _605) * _897) + _605;
    float _1419 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _902 = isnan(1.0) ? _1419 : (isnan(_1419) ? 1.0 : min(_1419, 1.0));
    float _905 = exp2(log2(_902) * cbMtdParam._m0[11u].w);
    uvec2 _923 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_10, int(0u)));
    float _974;
    if (_546)
    {
        float _934 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _940 = (_513 * _498) - (_510 * _501);
        float _943 = (_507 * _501) - (_513 * _495);
        float _946 = (_510 * _495) - (_507 * _498);
        float _972 = ((log2((((float(_923.y) * 0.5) * float(_923.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_943 * _943) + (_946 * _946)) + (_940 * _940)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_934 * gl_WorldRayDirectionEXT.x, _934 * gl_WorldRayDirectionEXT.y, _934 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _974 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    }
    else
    {
        _974 = 0.0;
    }
    float _983 = (cbMtdParam._m0[17u].x * _628) + _514;
    float _984 = (cbMtdParam._m0[17u].y * _628) + _515;
    float _1035;
    if (_546)
    {
        float _995 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1001 = (_513 * _498) - (_510 * _501);
        float _1004 = (_507 * _501) - (_513 * _495);
        float _1007 = (_510 * _495) - (_507 * _498);
        float _1033 = ((log2((((float(_656.y) * 0.5) * float(_656.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_1004 * _1004) + (_1007 * _1007)) + (_1001 * _1001)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_995 * gl_WorldRayDirectionEXT.x, _995 * gl_WorldRayDirectionEXT.y, _995 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _1035 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    }
    else
    {
        _1035 = 0.0;
    }
    vec4 _1037 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_653, _654), _1035);
    float _1045 = ((_1037.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _1047 = (-0.0) - (cbMtdParam._m0[11u].z * ((_1037.x * 0.5) + (-0.25)));
    vec4 _1065 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_723 * _1047) + _983) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1045 * _723) + _984) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1067 = _1065.x;
    float _1074 = (((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_725 * _1047) + _983) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1045 * _725) + _984) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0).x - _1067) * _737) + _1067) * cbMtdParam._m0[9u].x;
    uvec2 _1099 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_14, int(0u)));
    float _1150;
    if (_546)
    {
        float _1110 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1116 = (_513 * _498) - (_510 * _501);
        float _1119 = (_507 * _501) - (_513 * _495);
        float _1122 = (_510 * _495) - (_507 * _498);
        float _1148 = ((log2((((float(_1099.y) * 0.5) * float(_1099.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_1119 * _1119) + (_1122 * _1122)) + (_1116 * _1116)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1110 * gl_WorldRayDirectionEXT.x, _1110 * gl_WorldRayDirectionEXT.y, _1110 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _1150 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
    }
    else
    {
        _1150 = 0.0;
    }
    float _1159 = cbMtdParam._m0[13u].y * cbMtdParam._m0[14u].x;
    float _1164 = _1159 + cbMtdParam._m0[15u].x;
    float _1165 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
    float _1166 = isnan(200.0) ? _1165 : (isnan(_1165) ? 200.0 : min(_1165, 200.0));
    uvec2 _1182 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_15, int(0u)));
    float _1233;
    if (_546)
    {
        float _1193 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1199 = (_513 * _498) - (_510 * _501);
        float _1202 = (_507 * _501) - (_513 * _495);
        float _1205 = (_510 * _495) - (_507 * _498);
        float _1231 = ((log2((((float(_1182.y) * 0.5) * float(_1182.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_1202 * _1202) + (_1205 * _1205)) + (_1199 * _1199)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1193 * gl_WorldRayDirectionEXT.x, _1193 * gl_WorldRayDirectionEXT.y, _1193 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _1233 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    }
    else
    {
        _1233 = 0.0;
    }
    uvec2 _1257 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_13, int(0u)));
    float _1308;
    if (_546)
    {
        float _1268 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1274 = (_513 * _498) - (_510 * _501);
        float _1277 = (_507 * _501) - (_513 * _495);
        float _1280 = (_510 * _495) - (_507 * _498);
        float _1306 = ((log2((((float(_1257.y) * 0.5) * float(_1257.x)) * abs((_468 * _462) - (_467 * _464))) / (sqrt(((_1277 * _1277) + (_1280 * _1280)) + (_1274 * _1274)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1268 * gl_WorldRayDirectionEXT.x, _1268 * gl_WorldRayDirectionEXT.y, _1268 * gl_WorldRayDirectionEXT.z), vec3(_526, _528, _529))));
        _1308 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
    }
    else
    {
        _1308 = 0.0;
    }
    bool _1326 = ((((((((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _514) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _515) + cbTextureTilingScale._m0[5u].w), _1233).x * _1166) * cbMtdParam._m0[14u].w) + (_1166 * (textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _514) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _515) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1150).y + (-0.5)))) * cbMtdParam._m0[15u].z) >= cbMtdParam._m0[15u].y) ? 0.0 : 1.0) * ((_892 - (_892 * _905)) + ((_1074 - (_1074 * _902)) * _905))) * ((1.0 - cbMtdParam._m0[13u].z) - (((_1159 * (1.0 - textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _514) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _515) + cbTextureTilingScale._m0[0u].w), _974).x)) * textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _514) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _515) + cbTextureTilingScale._m0[3u].w), _1308).x) * cbMtdParam._m0[13u].w))) < cbMtdParam._m0[1u].x;
    if (_1326)
    {
        payload._m0 = _63;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _63;
        return;
    }
}


