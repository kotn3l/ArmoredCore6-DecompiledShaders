#version 460
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

void main()
{
    uvec4 _69 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _74 = (((_69.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_74 < _69.x)
    {
        uint _86 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _74;
        uint _87 = _86 >> 2u;
        uvec3 _97 = uvec3(texelFetch(l_geomAttrib_0, int(_87)).x, texelFetch(l_geomAttrib_0, int(_87 + 1u)).x, texelFetch(l_geomAttrib_0, int(_87 + 2u)).x);
        float _101 = uintBitsToFloat(_97.x);
        float _102 = uintBitsToFloat(_97.y);
        float _103 = uintBitsToFloat(_97.z);
        uvec4 _106 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
        uint _109 = _86 + 20u;
        uint _139;
        uint _140;
        uint _141;
        uint _142;
        uint _143;
        if (_106.y == 0u)
        {
            uvec4 _112 = texelFetch(l_geomAttrib_0, int(_109 >> 2u));
            uint _113 = _112.x;
            _139 = _113 & 255u;
            _140 = (_113 >> 8u) & 255u;
            _141 = (_113 >> 16u) & 255u;
            _142 = _113 >> 24u;
            _143 = 24u;
        }
        else
        {
            uint _124 = _109 >> 2u;
            uvec2 _131 = uvec2(texelFetch(l_geomAttrib_0, int(_124)).x, texelFetch(l_geomAttrib_0, int(_124 + 1u)).x);
            uint _132 = _131.x;
            uint _133 = _131.y;
            _139 = _132 & 65535u;
            _140 = _132 >> 16u;
            _141 = _133 & 65535u;
            _142 = _133 >> 16u;
            _143 = 28u;
        }
        uvec4 _147 = texelFetch(l_geomAttrib_0, int((_143 + _86) >> 2u));
        uint _148 = _147.x;
        float _159 = float(_148 & 255u) * 0.0039215688593685626983642578125;
        float _161 = float((_148 >> 8u) & 255u) * 0.0039215688593685626983642578125;
        float _162 = float((_148 >> 16u) & 255u) * 0.0039215688593685626983642578125;
        float _163 = float(_148 >> 24u) * 0.0039215688593685626983642578125;
        uvec4 _167 = texelFetch(l_geomAttrib_0, int(((_86 + 8u) + _143) >> 2u));
        uint _168 = _167.x;
        float _174 = float(int(uint(int(_168 << 16u) >> int(16u)))) * 0.00048828125;
        float _176 = float(int(uint(int(_168) >> int(16u)))) * 0.00048828125;
        float _177 = dot(vec4(1.0), vec4(_159, _161, _162, _163));
        float _182 = isnan(_177) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _177 : max(0.001000000047497451305389404296875, _177));
        float _184 = _159 / _182;
        float _185 = _161 / _182;
        float _186 = _162 / _182;
        float _187 = _163 / _182;
        uint _188 = _139 * 3u;
        uint _196 = _188 + 1u;
        uint _203 = _188 + 2u;
        uint _222 = _140 * 3u;
        uint _229 = _222 + 1u;
        uint _236 = _222 + 2u;
        uint _267 = _141 * 3u;
        uint _274 = _267 + 1u;
        uint _281 = _267 + 2u;
        uint _312 = _142 * 3u;
        uint _319 = _312 + 1u;
        uint _326 = _312 + 2u;
        vec4 _392 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + _174) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _176) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
        float _412 = (cbMtdParam._m0[13u].y * cbMtdParam._m0[14u].x) + cbMtdParam._m0[15u].x;
        float _413 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
        float _414 = isnan(200.0) ? _413 : (isnan(_413) ? 200.0 : min(_413, 200.0));
        float _446 = (((((cbObjMatrix._m0[_222].w * _185) + (cbObjMatrix._m0[_188].w * _184)) + (cbObjMatrix._m0[_267].w * _186)) + (cbObjMatrix._m0[_312].w * _187)) + fma(_103, (((cbObjMatrix._m0[_222].z * _185) + (cbObjMatrix._m0[_188].z * _184)) + (cbObjMatrix._m0[_267].z * _186)) + (cbObjMatrix._m0[_312].z * _187), fma(_102, (((cbObjMatrix._m0[_222].y * _185) + (cbObjMatrix._m0[_188].y * _184)) + (cbObjMatrix._m0[_267].y * _186)) + (cbObjMatrix._m0[_312].y * _187), ((((cbObjMatrix._m0[_222].x * _185) + (cbObjMatrix._m0[_188].x * _184)) + (cbObjMatrix._m0[_267].x * _186)) + (cbObjMatrix._m0[_312].x * _187)) * _101))) + ((_414 * (_392.x + (-0.5))) * cbMtdParam._m0[15u].w);
        float _447 = (((((cbObjMatrix._m0[_229].w * _185) + (cbObjMatrix._m0[_196].w * _184)) + (cbObjMatrix._m0[_274].w * _186)) + (cbObjMatrix._m0[_319].w * _187)) + fma(_103, (((cbObjMatrix._m0[_229].z * _185) + (cbObjMatrix._m0[_196].z * _184)) + (cbObjMatrix._m0[_274].z * _186)) + (cbObjMatrix._m0[_319].z * _187), fma(_102, (((cbObjMatrix._m0[_229].y * _185) + (cbObjMatrix._m0[_196].y * _184)) + (cbObjMatrix._m0[_274].y * _186)) + (cbObjMatrix._m0[_319].y * _187), ((((cbObjMatrix._m0[_229].x * _185) + (cbObjMatrix._m0[_196].x * _184)) + (cbObjMatrix._m0[_274].x * _186)) + (cbObjMatrix._m0[_319].x * _187)) * _101))) + ((((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _174) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _176) + cbTextureTilingScale._m0[5u].w), 0.0).x * _414) * cbMtdParam._m0[14u].w) + (_414 * (_392.y + (-0.5)))) * cbMtdParam._m0[15u].z);
        float _448 = (((((cbObjMatrix._m0[_236].w * _185) + (cbObjMatrix._m0[_203].w * _184)) + (cbObjMatrix._m0[_281].w * _186)) + (cbObjMatrix._m0[_326].w * _187)) + fma(_103, (((cbObjMatrix._m0[_236].z * _185) + (cbObjMatrix._m0[_203].z * _184)) + (cbObjMatrix._m0[_281].z * _186)) + (cbObjMatrix._m0[_326].z * _187), fma(_102, (((cbObjMatrix._m0[_236].y * _185) + (cbObjMatrix._m0[_203].y * _184)) + (cbObjMatrix._m0[_281].y * _186)) + (cbObjMatrix._m0[_326].y * _187), ((((cbObjMatrix._m0[_236].x * _185) + (cbObjMatrix._m0[_203].x * _184)) + (cbObjMatrix._m0[_281].x * _186)) + (cbObjMatrix._m0[_326].x * _187)) * _101))) + ((_414 * (_392.z + (-0.5))) * cbMtdParam._m0[16u].x);
        float _471 = fma(_448, CB_CS_ANIMATION._m0[5u].z, fma(_447, CB_CS_ANIMATION._m0[5u].y, _446 * CB_CS_ANIMATION._m0[5u].x)) + CB_CS_ANIMATION._m0[5u].w;
        float _475 = fma(_448, CB_CS_ANIMATION._m0[6u].z, fma(_447, CB_CS_ANIMATION._m0[6u].y, _446 * CB_CS_ANIMATION._m0[6u].x)) + CB_CS_ANIMATION._m0[6u].w;
        float _479 = fma(_448, CB_CS_ANIMATION._m0[7u].z, fma(_447, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _446)) + CB_CS_ANIMATION._m0[7u].w;
        if (_106.w == 0u)
        {
            uint _493 = _74 * 3u;
            imageStore(outPositionBuffer, int(_493), uvec4(uint(float(floatBitsToUint(_471)))));
            imageStore(outPositionBuffer, int(_493 + 1u), uvec4(uint(float(floatBitsToUint(_475)))));
            imageStore(outPositionBuffer, int(_493 + 2u), uvec4(uint(float(floatBitsToUint(_479)))));
        }
        else
        {
            uint _512 = _74 * 2u;
            imageStore(outPositionBuffer, int(_512), uvec4((packHalf2x16(vec2(_475, 0.0)) << 16u) | packHalf2x16(vec2(_471, 0.0))));
            imageStore(outPositionBuffer, int(_512 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_479, 0.0))));
        }
    }
}


