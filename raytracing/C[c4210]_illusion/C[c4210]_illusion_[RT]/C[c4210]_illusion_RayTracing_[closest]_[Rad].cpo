#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _58
{
    vec3 _m0;
};

struct _62
{
    vec2 _m0;
};

struct _65
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_c4210_illusion_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D C_c4210_illusion_snp_0_Texture2D_11;
layout(set = 0, binding = 2) uniform texture2D C_c4210_illusion_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_c4210_illusion_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D C_c4210_illusion_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _58 payload;
hitAttributeEXT _62 hit;
layout(location = 1) rayPayloadEXT _65 _67;
layout(location = 2) rayPayloadEXT _65 _68;

vec3 _1360;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _110 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _119 = sqrt(((_111 * _111) + (_110 * _110)) + (_112 * _112)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _130 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _131 = _130.y;
    uint _171;
    uint _173;
    uint _174;
    if (_130.x == 0u)
    {
        uint _139 = (_131 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _148 = uvec3(texelFetch(l_geomIndexBuffer, int(_139)).x, texelFetch(l_geomIndexBuffer, int(_139 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_139 + 2u)).x);
        _171 = _148.x;
        _173 = _148.y;
        _174 = _148.z;
    }
    else
    {
        uint _152 = uint(gl_PrimitiveID) * 6u;
        uint _154 = _152 & 4294967292u;
        uint _157 = (_131 + _154) >> 2u;
        uvec2 _164 = uvec2(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x);
        uint _165 = _164.x;
        uint _166 = _164.y;
        uint _168 = _165 >> 16u;
        uint _169 = _166 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_154 == _152)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _165 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _166 >> 16u;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _168;
        }
        _171 = frontier_phi_3_2_ladder_2;
        _173 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
    }
    uvec4 _178 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _179 = _178.x;
    uint _180 = _178.z;
    bool _181 = _180 != 0u;
    bool _183 = _130.w == 0u;
    bool _184 = _181 || _183;
    uint _186 = (_179 * _171) + 12u;
    uint _210;
    uint _211;
    uint _212;
    uint _213;
    if (_184)
    {
        uvec4 _189 = texelFetch(l_geomAttrib_0, int(_186 >> 2u));
        uint _190 = _189.x;
        _210 = _190 & 255u;
        _211 = (_190 >> 8u) & 255u;
        _212 = (_190 >> 16u) & 255u;
        _213 = 20u;
    }
    else
    {
        uint _198 = _186 >> 2u;
        uvec2 _204 = uvec2(texelFetch(l_geomAttrib_0, int(_198)).x, texelFetch(l_geomAttrib_0, int(_198 + 1u)).x);
        uint _205 = _204.x;
        _210 = _205 & 65535u;
        _211 = _205 >> 16u;
        _212 = _204.y & 65535u;
        _213 = 24u;
    }
    bool _219 = _180 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _213;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_183)
        {
            frontier_phi_9_10_ladder = _213 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _213 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uvec4 _231 = texelFetch(l_geomAttrib_0, int((((_179 * _171) + 4u) + (_181 ? (_220 + 4u) : _220)) >> 2u));
    uint _232 = _231.x;
    float _236 = float(int(uint(int(_232 << 16u) >> int(16u))));
    float _237 = float(int(uint(int(_232) >> int(16u))));
    uint _239 = (_179 * _173) + 12u;
    uint _260;
    uint _261;
    uint _262;
    uint _263;
    if (_184)
    {
        uvec4 _241 = texelFetch(l_geomAttrib_0, int(_239 >> 2u));
        uint _242 = _241.x;
        _260 = _242 & 255u;
        _261 = (_242 >> 8u) & 255u;
        _262 = (_242 >> 16u) & 255u;
        _263 = 20u;
    }
    else
    {
        uint _248 = _239 >> 2u;
        uvec2 _254 = uvec2(texelFetch(l_geomAttrib_0, int(_248)).x, texelFetch(l_geomAttrib_0, int(_248 + 1u)).x);
        uint _255 = _254.x;
        _260 = _255 & 65535u;
        _261 = _255 >> 16u;
        _262 = _254.y & 65535u;
        _263 = 24u;
    }
    uint _267;
    if (_219)
    {
        _267 = _263;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_183)
        {
            frontier_phi_16_17_ladder = _263 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _263 + 8u;
        }
        _267 = frontier_phi_16_17_ladder;
    }
    uvec4 _276 = texelFetch(l_geomAttrib_0, int((((_179 * _173) + 4u) + (_181 ? (_267 + 4u) : _267)) >> 2u));
    uint _277 = _276.x;
    float _281 = float(int(uint(int(_277 << 16u) >> int(16u))));
    float _282 = float(int(uint(int(_277) >> int(16u))));
    uint _284 = (_179 * _174) + 12u;
    uint _305;
    uint _306;
    uint _307;
    uint _308;
    if (_184)
    {
        uvec4 _286 = texelFetch(l_geomAttrib_0, int(_284 >> 2u));
        uint _287 = _286.x;
        _305 = _287 & 255u;
        _306 = (_287 >> 8u) & 255u;
        _307 = (_287 >> 16u) & 255u;
        _308 = 20u;
    }
    else
    {
        uint _293 = _284 >> 2u;
        uvec2 _299 = uvec2(texelFetch(l_geomAttrib_0, int(_293)).x, texelFetch(l_geomAttrib_0, int(_293 + 1u)).x);
        uint _300 = _299.x;
        _305 = _300 & 65535u;
        _306 = _300 >> 16u;
        _307 = _299.y & 65535u;
        _308 = 24u;
    }
    uint _312;
    if (_219)
    {
        _312 = _308;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_183)
        {
            frontier_phi_23_24_ladder = _308 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _308 + 8u;
        }
        _312 = frontier_phi_23_24_ladder;
    }
    uvec4 _321 = texelFetch(l_geomAttrib_0, int((((_179 * _174) + 4u) + (_181 ? (_312 + 4u) : _312)) >> 2u));
    uint _322 = _321.x;
    float _326 = float(int(uint(int(_322 << 16u) >> int(16u))));
    float _327 = float(int(uint(int(_322) >> int(16u))));
    bool _329 = _130.z == 0u;
    float _365;
    float _366;
    float _367;
    if (_329)
    {
        uint _332 = _171 * 3u;
        uvec3 _341 = uvec3(texelFetch(l_geomPositionBuffer, int(_332)).x, texelFetch(l_geomPositionBuffer, int(_332 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_332 + 2u)).x);
        _365 = uintBitsToFloat(_341.x);
        _366 = uintBitsToFloat(_341.y);
        _367 = uintBitsToFloat(_341.z);
    }
    else
    {
        uint _349 = _171 * 2u;
        uvec2 _355 = uvec2(texelFetch(l_geomPositionBuffer, int(_349)).x, texelFetch(l_geomPositionBuffer, int(_349 + 1u)).x);
        uint _356 = _355.x;
        _365 = unpackHalf2x16(_356).x;
        _366 = unpackHalf2x16(_356 >> 16u).x;
        _367 = unpackHalf2x16(_355.y).x;
    }
    float _403;
    float _404;
    float _405;
    if (_329)
    {
        uint _370 = _173 * 3u;
        uvec3 _379 = uvec3(texelFetch(l_geomPositionBuffer, int(_370)).x, texelFetch(l_geomPositionBuffer, int(_370 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_370 + 2u)).x);
        _403 = uintBitsToFloat(_379.x);
        _404 = uintBitsToFloat(_379.y);
        _405 = uintBitsToFloat(_379.z);
    }
    else
    {
        uint _387 = _173 * 2u;
        uvec2 _393 = uvec2(texelFetch(l_geomPositionBuffer, int(_387)).x, texelFetch(l_geomPositionBuffer, int(_387 + 1u)).x);
        uint _394 = _393.x;
        _403 = unpackHalf2x16(_394).x;
        _404 = unpackHalf2x16(_394 >> 16u).x;
        _405 = unpackHalf2x16(_393.y).x;
    }
    float _441;
    float _442;
    float _443;
    if (_329)
    {
        uint _408 = _174 * 3u;
        uvec3 _417 = uvec3(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_408 + 2u)).x);
        _441 = uintBitsToFloat(_417.x);
        _442 = uintBitsToFloat(_417.y);
        _443 = uintBitsToFloat(_417.z);
    }
    else
    {
        uint _425 = _174 * 2u;
        uvec2 _431 = uvec2(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x);
        uint _432 = _431.x;
        _441 = unpackHalf2x16(_432).x;
        _442 = unpackHalf2x16(_432 >> 16u).x;
        _443 = unpackHalf2x16(_431.y).x;
    }
    float _446 = (1.0 - hit._m0.x) - hit._m0.y;
    float _468 = (_281 - _236) * 0.00048828125;
    float _470 = (_282 - _237) * 0.00048828125;
    float _473 = (_326 - _236) * 0.00048828125;
    float _474 = (_327 - _237) * 0.00048828125;
    float _496 = _403 - _365;
    float _497 = _404 - _366;
    float _498 = _405 - _367;
    float _501 = fma(_498, gl_ObjectToWorldEXT[2u].x, fma(_497, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _496));
    float _504 = fma(_498, gl_ObjectToWorldEXT[2u].y, fma(_497, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _496));
    float _507 = fma(_498, gl_ObjectToWorldEXT[2u].z, fma(_497, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _496));
    float _508 = _441 - _365;
    float _509 = _442 - _366;
    float _510 = _443 - _367;
    float _513 = fma(_510, gl_ObjectToWorldEXT[2u].x, fma(_509, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _508));
    float _516 = fma(_510, gl_ObjectToWorldEXT[2u].y, fma(_509, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _508));
    float _519 = fma(_510, gl_ObjectToWorldEXT[2u].z, fma(_509, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _508));
    float _520 = (((_281 * hit._m0.x) + (_236 * _446)) + (_326 * hit._m0.y)) * 0.00048828125;
    float _521 = (((_282 * hit._m0.x) + (_237 * _446)) + (_327 * hit._m0.y)) * 0.00048828125;
    float _525 = (((float(_210) * _446) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _528 = (((float(_211) * _446) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_306) * hit._m0.y);
    float _531 = (((float(_212) * _446) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_307) * hit._m0.y);
    float _532 = _525 * 0.0078740157186985015869140625;
    float _534 = _528 * 0.0078740157186985015869140625;
    float _535 = _531 * 0.0078740157186985015869140625;
    uvec2 _547 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_12, int(0u)));
    bool _552 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _605;
    if (_552)
    {
        float _563 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _569 = (_519 * _504) - (_516 * _507);
        float _572 = (_513 * _507) - (_519 * _501);
        float _575 = (_516 * _501) - (_513 * _504);
        float _602 = ((log2((((float(_547.y) * 0.5) * float(_547.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_572 * _572) + (_575 * _575)) + (_569 * _569)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_563 * gl_WorldRayDirectionEXT.x, _563 * gl_WorldRayDirectionEXT.y, _563 * gl_WorldRayDirectionEXT.z), vec3(_532, _534, _535))));
        _605 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    }
    else
    {
        _605 = 0.0;
    }
    vec4 _609 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _520) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _521) + cbTextureTilingScale._m0[2u].w), _605);
    float _611 = _609.x;
    float _616 = cbMtdParam._m0[11u].y * 0.116666667163372039794921875;
    float _622 = fract(abs(_616));
    float _634 = cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x;
    float _637 = (_634 * cbMtdParam._m0[17u].z) + _520;
    float _638 = (_634 * cbMtdParam._m0[17u].w) + _521;
    float _659 = (cbTextureTilingScale._m0[6u].x * ((_634 * cbMtdParam._m0[16u].z) + _520)) + cbTextureTilingScale._m0[6u].z;
    float _660 = (cbTextureTilingScale._m0[6u].y * ((cbMtdParam._m0[16u].w * _634) + _521)) + cbTextureTilingScale._m0[6u].w;
    uvec2 _662 = uvec2(textureSize(C_c4210_illusion_snp_0_Texture2D_7, int(0u)));
    float _713;
    if (_552)
    {
        float _673 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _679 = (_519 * _504) - (_516 * _507);
        float _682 = (_513 * _507) - (_519 * _501);
        float _685 = (_516 * _501) - (_513 * _504);
        float _711 = ((log2((((float(_662.y) * 0.5) * float(_662.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_682 * _682) + (_685 * _685)) + (_679 * _679)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_673 * gl_WorldRayDirectionEXT.x, _673 * gl_WorldRayDirectionEXT.y, _673 * gl_WorldRayDirectionEXT.z), vec3(_532, _534, _535))));
        _713 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    }
    else
    {
        _713 = 0.0;
    }
    vec4 _715 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_659, _660), _713);
    float _719 = cbPerFrame._m0[22u].x * 2.0;
    float _720 = _719 * cbMtdParam._m0[12u].z;
    float _726 = ((_715.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _728 = (-0.0) - (cbMtdParam._m0[11u].z * ((_715.x * 0.5) + (-0.25)));
    float _729 = fract(_720);
    float _731 = fract(_720 + 0.5);
    float _743 = abs((_729 * 2.0) + (-1.0));
    vec4 _761 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_729 * _728) + _637) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_726 * _729) + _638) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _763 = _761.x;
    float _772 = (0.25 - ((((_616 >= ((-0.0) - _616)) ? _622 : ((-0.0) - _622)) * 3.0) - _611)) + (((textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_731 * _728) + _637) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_726 * _731) + _638) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0).x - _763) * _743) + _763);
    float _773 = ceil(_772);
    float _1450 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _774 = isnan(1.0) ? _1450 : (isnan(_1450) ? 1.0 : min(_1450, 1.0));
    float _788 = (cbMtdParam._m0[18u].x * _634) + _520;
    float _789 = (cbMtdParam._m0[18u].y * _634) + _521;
    float _845;
    if (_552)
    {
        float _805 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _811 = (_519 * _504) - (_516 * _507);
        float _814 = (_513 * _507) - (_519 * _501);
        float _817 = (_516 * _501) - (_513 * _504);
        float _843 = ((log2((((float(_662.y) * 0.5) * float(_662.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_814 * _814) + (_817 * _817)) + (_811 * _811)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_805 * gl_WorldRayDirectionEXT.x, _805 * gl_WorldRayDirectionEXT.y, _805 * gl_WorldRayDirectionEXT.z), vec3(_532, _534, _535))));
        _845 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    }
    else
    {
        _845 = 0.0;
    }
    vec4 _847 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_659, _660), _845);
    float _851 = _719 * cbMtdParam._m0[13u].x;
    float _856 = ((_847.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _858 = (-0.0) - (cbMtdParam._m0[12u].w * ((_847.x * 0.5) + (-0.25)));
    float _859 = fract(_851);
    float _861 = fract(_851 + 0.5);
    float _872 = abs((_859 * 2.0) + (-1.0));
    vec4 _889 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_859 * _858) + _788) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_856 * _859) + _789) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _891 = _889.x;
    float _892 = _889.y;
    float _893 = _889.z;
    vec4 _894 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_861 * _858) + _788) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_856 * _861) + _789) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _908 = (((_894.x - _891) * _872) + _891) * cbMtdParam._m0[10u].x;
    float _909 = (((_894.y - _892) * _872) + _892) * cbMtdParam._m0[10u].y;
    float _910 = (((_894.z - _893) * _872) + _893) * cbMtdParam._m0[10u].z;
    float _914 = _908 - (_908 * _774);
    float _915 = _909 - (_909 * _774);
    float _916 = _910 - (_910 * _774);
    float _921 = abs(cbMtdParam._m0[12u].y * _772);
    float _925 = (((_921 * cbMtdParam._m0[12u].x) - _611) * _921) + _611;
    float _1466 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    float _926 = isnan(1.0) ? _1466 : (isnan(_1466) ? 1.0 : min(_1466, 1.0));
    float _929 = exp2(log2(_926) * cbMtdParam._m0[11u].w);
    float _943 = (cbMtdParam._m0[17u].x * _634) + _520;
    float _944 = (cbMtdParam._m0[17u].y * _634) + _521;
    float _948 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _949 = _948 * gl_WorldRayDirectionEXT.x;
    float _950 = _948 * gl_WorldRayDirectionEXT.y;
    float _951 = _948 * gl_WorldRayDirectionEXT.z;
    float _995;
    if (_552)
    {
        float _961 = (_519 * _504) - (_516 * _507);
        float _964 = (_513 * _507) - (_519 * _501);
        float _967 = (_516 * _501) - (_513 * _504);
        float _993 = ((log2((((float(_662.y) * 0.5) * float(_662.x)) * abs((_474 * _468) - (_473 * _470))) / (sqrt(((_964 * _964) + (_967 * _967)) + (_961 * _961)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_119) / abs(dot(vec3(_949, _950, _951), vec3(_532, _534, _535))));
        _995 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    }
    else
    {
        _995 = 0.0;
    }
    vec4 _997 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_7, SS_WrapLinear), vec2(_659, _660), _995);
    float _1005 = ((_997.y * 0.5) + (-0.25)) * cbMtdParam._m0[11u].z;
    float _1007 = (-0.0) - (cbMtdParam._m0[11u].z * ((_997.x * 0.5) + (-0.25)));
    vec4 _1032 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_729 * _1007) + _943) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1005 * _729) + _944) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1034 = _1032.x;
    float _1035 = _1032.y;
    float _1036 = _1032.z;
    vec4 _1037 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((_731 * _1007) + _943) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1005 * _731) + _944) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1051 = (((_1037.x - _1034) * _743) + _1034) * cbMtdParam._m0[9u].x;
    float _1052 = (((_1037.y - _1035) * _743) + _1035) * cbMtdParam._m0[9u].y;
    float _1053 = (((_1037.z - _1036) * _743) + _1036) * cbMtdParam._m0[9u].z;
    float _1066 = inversesqrt(dot(vec3(_532, _534, _535), vec3(_532, _534, _535)));
    float _1067 = _1066 * _532;
    float _1068 = _1066 * _534;
    float _1069 = _1066 * _535;
    float _1081 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1082 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1083 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1084 = (-0.0) - _949;
    float _1085 = (-0.0) - _950;
    float _1086 = (-0.0) - _951;
    float _1092 = float(gl_LaunchIDEXT.x);
    float _1093 = float(gl_LaunchIDEXT.y);
    float _1096 = float(gl_LaunchSizeEXT.x);
    float _1110 = fract(fract(sin(dot(vec2(_1092 / _1096, _1093 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1123 = fract(fract(sin(dot(vec2((_1092 + 128.0) / _1096, (_1093 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _68._m0 = 1u;
    uvec4 _1133 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1134 = _1133.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1134, _1133.w, _1134, vec3(_1081, _1082, _1083), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1200;
    float _1201;
    float _1202;
    if (_68._m0 == 0u)
    {
        float _1155 = g_sceneCB._m0[4u].x - _949;
        float _1156 = g_sceneCB._m0[4u].y - _950;
        float _1157 = g_sceneCB._m0[4u].z - _951;
        float _1161 = inversesqrt(dot(vec3(_1155, _1156, _1157), vec3(_1155, _1156, _1157)));
        float _1165 = dot(vec3(_1067, _1068, _1069), vec3(g_sceneCB._m0[4u].xyz));
        float _1482 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1168 = isnan(1.0) ? _1482 : (isnan(_1482) ? 1.0 : min(_1482, 1.0));
        float _1169 = dot(vec3(_1067, _1068, _1069), vec3(_1084, _1085, _1086));
        float _1493 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1173 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1155 * _1161, _1156 * _1161, _1157 * _1161));
        float _1504 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1184 = (exp2(log2(1.0 - (isnan(1.0) ? _1504 : (isnan(_1504) ? 1.0 : min(_1504, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1190 = (0.5 / ((_1168 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1493 : (isnan(_1493) ? 1.0 : min(_1493, 1.0))))) * _1168;
        float _1515 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1192 = (isnan(1.0) ? _1515 : (isnan(_1515) ? 1.0 : min(_1515, 1.0))) * 0.31831014156341552734375;
        _1200 = (_1184 * g_sceneCB._m0[5u].x) * _1192;
        _1201 = (_1184 * g_sceneCB._m0[5u].y) * _1192;
        _1202 = (_1184 * g_sceneCB._m0[5u].z) * _1192;
    }
    else
    {
        _1200 = 0.0;
        _1201 = 0.0;
        _1202 = 0.0;
    }
    bool _1204 = abs(_1068) < 0.89999997615814208984375;
    float _1206 = float(_1204);
    float _1207 = _1204 ? 0.0 : 1.0;
    float _1210 = (_1206 * _1069) - (_1207 * _1068);
    float _1211 = _1207 * _1067;
    float _1213 = (-0.0) - (_1067 * _1206);
    float _1217 = inversesqrt(dot(vec3(_1210, _1211, _1213), vec3(_1210, _1211, _1213)));
    float _1218 = _1210 * _1217;
    float _1219 = _1211 * _1217;
    float _1220 = _1217 * _1213;
    float _1223 = (_1219 * _1069) - (_1220 * _1068);
    float _1226 = (_1220 * _1067) - (_1218 * _1069);
    float _1229 = (_1218 * _1068) - (_1219 * _1067);
    float _1231;
    float _1239;
    float _1230 = 0.0;
    uint _1232 = 0u;
    float _1236;
    bool _1238;
    for (;;)
    {
        _1236 = (float(_1232) + _1110) * 0.03125;
        _1238 = _1232 == 0u;
        float frontier_phi_47_pred;
        if (_1238)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1365;
            float _1366;
            uint _1368;
            _1365 = 0.0;
            _1366 = 0.5;
            _1368 = _1232;
            float _1240;
            for (;;)
            {
                _1240 = ((_1368 & 1u) != 0u) ? (_1366 + _1365) : _1365;
                uint _1369 = _1368 >> 1u;
                if (_1369 == 0u)
                {
                    break;
                }
                else
                {
                    _1365 = _1240;
                    _1366 *= 0.5;
                    _1368 = _1369;
                }
            }
            frontier_phi_47_pred = _1240;
        }
        _1239 = frontier_phi_47_pred;
        float _1241 = _1239 + _1123;
        float _1245 = sqrt(_1236);
        float _1246 = ((_1241 > 1.0) ? (_1241 + (-1.0)) : _1241) * 6.283185482025146484375;
        float _1249 = cos(_1246) * _1245;
        float _1251 = sin(_1246) * _1245;
        float _1253 = sqrt(1.0 - _1236);
        float _1266 = ((_1253 * _1067) + (_1249 * _1223)) + (_1251 * _1218);
        float _1267 = ((_1253 * _1068) + (_1249 * _1226)) + (_1251 * _1219);
        float _1268 = ((_1253 * _1069) + (_1249 * _1229)) + (_1251 * _1220);
        _67._m0 = 1u;
        uvec4 _1272 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1273 = _1272.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1273, _1272.w, _1273, vec3(_1081, _1082, _1083), 9.9999997473787516355514526367188e-05, vec3(_1266, _1267, _1268), 10000.0, 1);
        float _1279 = dot(vec3(_1067, _1068, _1069), vec3(_1266, _1267, _1268));
        float _1526 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1282 = isnan(1.0) ? _1526 : (isnan(_1526) ? 1.0 : min(_1526, 1.0));
        _1231 = ((float(_67._m0 == 0u) * _1282) / (_1282 * 0.3183098733425140380859375)) + _1230;
        uint _1233 = _1232 + 1u;
        if (_1233 == 32u)
        {
            break;
        }
        else
        {
            _1230 = _1231;
            _1232 = _1233;
            continue;
        }
    }
    float _1291 = _1231 * 0.009947183541953563690185546875;
    float _1296 = dot(vec3(_949, _950, _951), vec3(_1067, _1068, _1069)) * 2.0;
    vec4 _1308 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_949 - (_1296 * _1067), _950 - (_1296 * _1068), _951 - (_1296 * _1069)), 4.0);
    float _1313 = dot(vec3(_1084, _1085, _1086), vec3(_1067, _1068, _1069));
    float _1537 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
    float _1322 = (exp2(log2(1.0 - (isnan(1.0) ? _1537 : (isnan(_1537) ? 1.0 : min(_1537, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1332 = (((_914 - (_929 * _914)) + ((_1051 - (_1051 * _926)) * _929)) + _1200) + ((_1308.x * _1291) * _1322);
    float _1336 = (((_915 - (_929 * _915)) + ((_1052 - (_1052 * _926)) * _929)) + _1201) + ((_1308.y * _1291) * _1322);
    float _1340 = (((_916 - (_929 * _916)) + ((_1053 - (_1053 * _926)) * _929)) + _1202) + ((_1308.z * _1291) * _1322);
    float _1548 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
    float _1559 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
    float _1570 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
    bool _1348 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1359;
    _1359.x = _1348 ? ((_525 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1548 : (isnan(_1548) ? 1.0 : min(_1548, 1.0)));
    _1359.y = _1348 ? ((_528 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1559 : (isnan(_1559) ? 1.0 : min(_1559, 1.0)));
    _1359.z = _1348 ? ((_531 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1570 : (isnan(_1570) ? 1.0 : min(_1570, 1.0)));
    payload._m0 = _1359;
}


