#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _2094;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_186 + 4u) + (_182 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _180 * _174;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_185)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_182 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _180 * _175;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_185)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_182 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _131.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _172 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _172 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _174 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _174 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _175 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _175 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_211) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_212) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_213) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    uvec2 _637 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_7, int(0u)));
    bool _642 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _695;
    if (_642)
    {
        float _653 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _659 = (_574 * _559) - (_571 * _562);
        float _662 = (_568 * _562) - (_574 * _556);
        float _665 = (_571 * _556) - (_568 * _559);
        float _692 = ((log2((((float(_637.y) * 0.5) * float(_637.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_662 * _662) + (_665 * _665)) + (_659 * _659)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_653 * gl_WorldRayDirectionEXT.x, _653 * gl_WorldRayDirectionEXT.y, _653 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _695 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    }
    else
    {
        _695 = 0.0;
    }
    vec4 _699 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _575) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _576) + cbTextureTilingScale._m0[12u].w), _695);
    float _707 = log2(0.0);
    float _709 = exp2(_707 * cbMtdParam._m0[20u].y);
    float _710 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _711 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    uvec2 _724 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_0, int(0u)));
    float _775;
    if (_642)
    {
        float _735 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _741 = (_574 * _559) - (_571 * _562);
        float _744 = (_568 * _562) - (_574 * _556);
        float _747 = (_571 * _556) - (_568 * _559);
        float _773 = ((log2((((float(_724.y) * 0.5) * float(_724.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_744 * _744) + (_747 * _747)) + (_741 * _741)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_735 * gl_WorldRayDirectionEXT.x, _735 * gl_WorldRayDirectionEXT.y, _735 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _775 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    }
    else
    {
        _775 = 0.0;
    }
    vec4 _778 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _575) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _576) + cbTextureTilingScale._m0[0u].w), _775);
    float _782 = _778.z;
    float _783 = _778.w;
    float _791 = exp2(log2(_782 * cbMtdParam._m0[20u].w) * cbMtdParam._m0[19u].y);
    float _792 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _793 = isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0));
    uvec2 _805 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_3, int(0u)));
    float _856;
    if (_642)
    {
        float _816 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _822 = (_574 * _559) - (_571 * _562);
        float _825 = (_568 * _562) - (_574 * _556);
        float _828 = (_571 * _556) - (_568 * _559);
        float _854 = ((log2((((float(_805.y) * 0.5) * float(_805.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_825 * _825) + (_828 * _828)) + (_822 * _822)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_816 * gl_WorldRayDirectionEXT.x, _816 * gl_WorldRayDirectionEXT.y, _816 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _856 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    }
    else
    {
        _856 = 0.0;
    }
    vec4 _858 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _575) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _576) + cbTextureTilingScale._m0[8u].w), _856);
    uvec2 _883 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_1, int(0u)));
    float _934;
    if (_642)
    {
        float _894 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _900 = (_574 * _559) - (_571 * _562);
        float _903 = (_568 * _562) - (_574 * _556);
        float _906 = (_571 * _556) - (_568 * _559);
        float _932 = ((log2((((float(_883.y) * 0.5) * float(_883.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_903 * _903) + (_906 * _906)) + (_900 * _900)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_894 * gl_WorldRayDirectionEXT.x, _894 * gl_WorldRayDirectionEXT.y, _894 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _934 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    }
    else
    {
        _934 = 0.0;
    }
    vec4 _936 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _575) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _576) + cbTextureTilingScale._m0[1u].w), _934);
    float _947 = cbMtdParam._m0[9u].x * _936.x;
    float _948 = cbMtdParam._m0[9u].y * _936.y;
    float _949 = cbMtdParam._m0[9u].z * _936.z;
    float _956 = (((cbMtdParam._m0[10u].x * _858.x) - _947) * _793) + _947;
    float _957 = (((cbMtdParam._m0[10u].y * _858.y) - _948) * _793) + _948;
    float _958 = (((cbMtdParam._m0[10u].z * _858.z) - _949) * _793) + _949;
    float _965 = exp2(log2(_783) * cbMtdParam._m0[21u].y);
    uvec2 _977 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_2, int(0u)));
    float _1028;
    if (_642)
    {
        float _988 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _994 = (_574 * _559) - (_571 * _562);
        float _997 = (_568 * _562) - (_574 * _556);
        float _1000 = (_571 * _556) - (_568 * _559);
        float _1026 = ((log2((((float(_977.y) * 0.5) * float(_977.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_997 * _997) + (_1000 * _1000)) + (_994 * _994)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_988 * gl_WorldRayDirectionEXT.x, _988 * gl_WorldRayDirectionEXT.y, _988 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1028 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    }
    else
    {
        _1028 = 0.0;
    }
    vec4 _1030 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _575) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _576) + cbTextureTilingScale._m0[7u].w), _1028);
    float _1050 = (((cbMtdParam._m0[11u].x * _1030.x) - _956) * _965) + _956;
    float _1051 = (((cbMtdParam._m0[11u].y * _1030.y) - _957) * _965) + _957;
    float _1052 = (((cbMtdParam._m0[11u].z * _1030.z) - _958) * _965) + _958;
    uvec2 _1064 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_4, int(0u)));
    float _1115;
    if (_642)
    {
        float _1075 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1081 = (_574 * _559) - (_571 * _562);
        float _1084 = (_568 * _562) - (_574 * _556);
        float _1087 = (_571 * _556) - (_568 * _559);
        float _1113 = ((log2((((float(_1064.y) * 0.5) * float(_1064.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1084 * _1084) + (_1087 * _1087)) + (_1081 * _1081)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1075 * gl_WorldRayDirectionEXT.x, _1075 * gl_WorldRayDirectionEXT.y, _1075 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1115 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    }
    else
    {
        _1115 = 0.0;
    }
    vec4 _1117 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _575) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _576) + cbTextureTilingScale._m0[9u].w), _1115);
    float _1141 = (_699.x * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].x * _1117.x) - _1050) * _711) + _1050);
    float _1143 = (_699.y * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].y * _1117.y) - _1051) * _711) + _1051);
    float _1145 = (_699.z * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].z * _1117.z) - _1052) * _711) + _1052);
    float _1150 = exp2(log2(1.0 - _783) * 0.00999999977648258209228515625);
    uvec2 _1162 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_11, int(0u)));
    float _1213;
    if (_642)
    {
        float _1173 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1179 = (_574 * _559) - (_571 * _562);
        float _1182 = (_568 * _562) - (_574 * _556);
        float _1185 = (_571 * _556) - (_568 * _559);
        float _1211 = ((log2((((float(_1162.y) * 0.5) * float(_1162.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1182 * _1182) + (_1185 * _1185)) + (_1179 * _1179)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1173 * gl_WorldRayDirectionEXT.x, _1173 * gl_WorldRayDirectionEXT.y, _1173 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1213 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
    }
    else
    {
        _1213 = 0.0;
    }
    float _1222 = ((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _1213).x - cbMtdParam._m0[21u].z) * _1150) + cbMtdParam._m0[21u].z;
    uvec2 _1234 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_12, int(0u)));
    float _1285;
    if (_642)
    {
        float _1245 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1251 = (_574 * _559) - (_571 * _562);
        float _1254 = (_568 * _562) - (_574 * _556);
        float _1257 = (_571 * _556) - (_568 * _559);
        float _1283 = ((log2((((float(_1234.y) * 0.5) * float(_1234.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1254 * _1254) + (_1257 * _1257)) + (_1251 * _1251)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1245 * gl_WorldRayDirectionEXT.x, _1245 * gl_WorldRayDirectionEXT.y, _1245 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1285 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
    }
    else
    {
        _1285 = 0.0;
    }
    float _1294 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _575) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _576) + cbTextureTilingScale._m0[3u].w), _1285).x - _1222) + cbMtdParam._m0[20u].z) * _965) + _1222;
    uvec2 _1306 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_13, int(0u)));
    float _1357;
    if (_642)
    {
        float _1317 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1323 = (_574 * _559) - (_571 * _562);
        float _1326 = (_568 * _562) - (_574 * _556);
        float _1329 = (_571 * _556) - (_568 * _559);
        float _1355 = ((log2((((float(_1306.y) * 0.5) * float(_1306.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1326 * _1326) + (_1329 * _1329)) + (_1323 * _1323)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1317 * gl_WorldRayDirectionEXT.x, _1317 * gl_WorldRayDirectionEXT.y, _1317 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1357 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
    }
    else
    {
        _1357 = 0.0;
    }
    float _1369 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _575) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _576) + cbTextureTilingScale._m0[4u].w), _1357).x - _1294) + cbMtdParam._m0[22u].z) * _711) + _1294;
    uvec2 _1381 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_5, int(0u)));
    float _1432;
    if (_642)
    {
        float _1392 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1398 = (_574 * _559) - (_571 * _562);
        float _1401 = (_568 * _562) - (_574 * _556);
        float _1404 = (_571 * _556) - (_568 * _559);
        float _1430 = ((log2((((float(_1381.y) * 0.5) * float(_1381.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1401 * _1401) + (_1404 * _1404)) + (_1398 * _1398)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1392 * gl_WorldRayDirectionEXT.x, _1392 * gl_WorldRayDirectionEXT.y, _1392 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1432 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
    }
    else
    {
        _1432 = 0.0;
    }
    vec4 _1434 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _575) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _576) + cbTextureTilingScale._m0[10u].w), _1432);
    uvec2 _1452 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_6, int(0u)));
    float _1503;
    if (_642)
    {
        float _1463 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1469 = (_574 * _559) - (_571 * _562);
        float _1472 = (_568 * _562) - (_574 * _556);
        float _1475 = (_571 * _556) - (_568 * _559);
        float _1501 = ((log2((((float(_1452.y) * 0.5) * float(_1452.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1472 * _1472) + (_1475 * _1475)) + (_1469 * _1469)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1463 * gl_WorldRayDirectionEXT.x, _1463 * gl_WorldRayDirectionEXT.y, _1463 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1503 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    }
    else
    {
        _1503 = 0.0;
    }
    vec4 _1505 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _575) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _576) + cbTextureTilingScale._m0[11u].w), _1503);
    float _1507 = _1505.x;
    float _1508 = _1505.y;
    float _1511 = cbMtdParam._m0[19u].x + _1505.z;
    float _1514 = (((cbMtdParam._m0[20u].x + _1434.z) - _1511) * _1150) + _1511;
    uvec2 _1527 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_8, int(0u)));
    float _1578;
    if (_642)
    {
        float _1538 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1544 = (_574 * _559) - (_571 * _562);
        float _1547 = (_568 * _562) - (_574 * _556);
        float _1550 = (_571 * _556) - (_568 * _559);
        float _1576 = ((log2((((float(_1527.y) * 0.5) * float(_1527.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1547 * _1547) + (_1550 * _1550)) + (_1544 * _1544)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1538 * gl_WorldRayDirectionEXT.x, _1538 * gl_WorldRayDirectionEXT.y, _1538 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _1578 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    }
    else
    {
        _1578 = 0.0;
    }
    vec4 _1580 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _575) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _576) + cbTextureTilingScale._m0[13u].w), _1578);
    float _1591 = (_782 * 2.0) * ((((_1580.z - _1514) + cbMtdParam._m0[22u].x) * _965) + _1514);
    uvec2 _1604 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_9, int(0u)));
    float _1608 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1609 = _1608 * gl_WorldRayDirectionEXT.x;
    float _1610 = _1608 * gl_WorldRayDirectionEXT.y;
    float _1611 = _1608 * gl_WorldRayDirectionEXT.z;
    float _1655;
    if (_642)
    {
        float _1621 = (_574 * _559) - (_571 * _562);
        float _1624 = (_568 * _562) - (_574 * _556);
        float _1627 = (_571 * _556) - (_568 * _559);
        float _1653 = ((log2((((float(_1604.y) * 0.5) * float(_1604.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1624 * _1624) + (_1627 * _1627)) + (_1621 * _1621)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1609, _1610, _1611), vec3(_587, _589, _590))));
        _1655 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
    }
    else
    {
        _1655 = 0.0;
    }
    vec4 _1657 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _575) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _576) + cbTextureTilingScale._m0[14u].w), _1655);
    float _1666 = (((_1657.z - _1591) + cbMtdParam._m0[21u].x) * _711) + _1591;
    float _1677 = ((_1434.x - _1507) * _1150) + _1507;
    float _1678 = ((_1434.y - _1508) * _1150) + _1508;
    float _1683 = ((_1580.x - _1677) * _965) + _1677;
    float _1684 = ((_1580.y - _1678) * _965) + _1678;
    float _1693 = ((((_1657.x - _1683) * _711) + _1683) * 2.0) + (-1.0);
    float _1694 = ((((_1657.y - _1684) * _711) + _1684) * 2.0) + (-1.0);
    float _1695 = dot(vec2(_1693, _1694), vec2(_1693, _1694));
    float _2277 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
    float _1700 = sqrt(1.0 - (isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0))));
    float _1703 = _1693 + (cbMtdParam._m0[21u].w * ((_778.x * 2.0) + (-1.0)));
    float _1704 = _1694 + (cbMtdParam._m0[21u].w * ((_778.y * 2.0) + (-1.0)));
    float _1707 = fma(_1700, _587, fma(_1704, _603, (_622 * _616) * _1703));
    float _1710 = fma(_1700, _589, fma(_1704, _604, (_622 * _617) * _1703));
    float _1713 = fma(_1700, _590, fma(_1704, _605, (_622 * _618) * _1703));
    float _1717 = inversesqrt(dot(vec3(_1707, _1710, _1713), vec3(_1707, _1710, _1713)));
    float _1718 = _1717 * _1707;
    float _1719 = _1717 * _1710;
    float _1720 = _1717 * _1713;
    float _1732 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1733 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1734 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1735 = (-0.0) - _1609;
    float _1737 = (-0.0) - _1610;
    float _1738 = (-0.0) - _1611;
    float _1744 = float(gl_LaunchIDEXT.x);
    float _1745 = float(gl_LaunchIDEXT.y);
    float _1748 = float(gl_LaunchSizeEXT.x);
    float _1762 = fract(fract(sin(dot(vec2(_1744 / _1748, _1745 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1775 = fract(fract(sin(dot(vec2((_1744 + 128.0) / _1748, (_1745 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1776 = 1.0 - _1369;
    float _1777 = _1776 * _1141;
    float _1778 = _1776 * _1143;
    float _1779 = _1776 * _1145;
    float _1784 = _1369 * (_1141 + (-0.039999999105930328369140625));
    float _1785 = _1369 * (_1143 + (-0.039999999105930328369140625));
    float _1786 = _1369 * (_1145 + (-0.039999999105930328369140625));
    float _1787 = _1784 + 0.039999999105930328369140625;
    float _1789 = _1785 + 0.039999999105930328369140625;
    float _1790 = _1786 + 0.039999999105930328369140625;
    _73._m0 = 1u;
    uvec4 _1800 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1801 = _1800.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1801, _1800.w, _1801, vec3(_1732, _1733, _1734), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    if (_73._m0 == 0u)
    {
        float _1822 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1718, _1719, _1720));
        float _2288 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1825 = isnan(1.0) ? _2288 : (isnan(_2288) ? 1.0 : min(_2288, 1.0));
        float _1844 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1666) * 0.949999988079071044921875);
        float _1845 = _1844 * _1844;
        float _1846 = g_sceneCB._m0[4u].x - _1609;
        float _1847 = g_sceneCB._m0[4u].y - _1610;
        float _1848 = g_sceneCB._m0[4u].z - _1611;
        float _1852 = inversesqrt(dot(vec3(_1846, _1847, _1848), vec3(_1846, _1847, _1848)));
        float _1853 = _1852 * _1846;
        float _1854 = _1852 * _1847;
        float _1855 = _1852 * _1848;
        float _1856 = dot(vec3(_1718, _1719, _1720), vec3(g_sceneCB._m0[4u].xyz));
        float _2299 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
        float _1859 = isnan(1.0) ? _2299 : (isnan(_2299) ? 1.0 : min(_2299, 1.0));
        float _1860 = dot(vec3(_1718, _1719, _1720), vec3(_1735, _1737, _1738));
        float _2310 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1863 = isnan(1.0) ? _2310 : (isnan(_2310) ? 1.0 : min(_2310, 1.0));
        float _1864 = dot(vec3(_1718, _1719, _1720), vec3(_1853, _1854, _1855));
        float _2321 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1867 = isnan(1.0) ? _2321 : (isnan(_2321) ? 1.0 : min(_2321, 1.0));
        float _1868 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1853, _1854, _1855));
        float _2332 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1872 = _1845 * _1845;
        float _1876 = ((_1867 * _1867) * (_1872 + (-1.0))) + 1.0;
        float _1885 = exp2(log2(1.0 - (isnan(1.0) ? _2332 : (isnan(_2332) ? 1.0 : min(_2332, 1.0)))) * 5.0);
        float _1896 = 1.0 - _1845;
        float _1907 = (0.5 / (((_1863 * ((_1859 * _1896) + _1845)) + 9.9999999392252902907785028219223e-09) + (((_1863 * _1896) + _1845) * _1859))) * _1859;
        float _2343 = isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0));
        float _1909 = (isnan(1.0) ? _2343 : (isnan(_2343) ? 1.0 : min(_2343, 1.0))) * (_1872 / ((_1876 * _1876) * 3.141590118408203125));
        _1916 = ((_1777 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1825;
        _1917 = ((_1778 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1825;
        _1918 = ((_1779 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1825;
        _1919 = (((_1885 * (0.959999978542327880859375 - _1784)) + _1787) * g_sceneCB._m0[5u].x) * _1909;
        _1920 = (((_1885 * (0.959999978542327880859375 - _1785)) + _1789) * g_sceneCB._m0[5u].y) * _1909;
        _1921 = (((_1885 * (0.959999978542327880859375 - _1786)) + _1790) * g_sceneCB._m0[5u].z) * _1909;
    }
    else
    {
        _1916 = 0.0;
        _1917 = 0.0;
        _1918 = 0.0;
        _1919 = 0.0;
        _1920 = 0.0;
        _1921 = 0.0;
    }
    bool _1923 = abs(_1719) < 0.89999997615814208984375;
    float _1925 = float(_1923);
    float _1926 = _1923 ? 0.0 : 1.0;
    float _1929 = (_1925 * _1720) - (_1926 * _1719);
    float _1930 = _1926 * _1718;
    float _1932 = (-0.0) - (_1718 * _1925);
    float _1936 = inversesqrt(dot(vec3(_1929, _1930, _1932), vec3(_1929, _1930, _1932)));
    float _1937 = _1929 * _1936;
    float _1938 = _1930 * _1936;
    float _1939 = _1936 * _1932;
    float _1942 = (_1938 * _1720) - (_1939 * _1719);
    float _1945 = (_1939 * _1718) - (_1937 * _1720);
    float _1948 = (_1937 * _1719) - (_1938 * _1718);
    float _1950;
    float _1958;
    float _1949 = 0.0;
    uint _1951 = 0u;
    float _1955;
    bool _1957;
    for (;;)
    {
        _1955 = (float(_1951) + _1762) * 0.03125;
        _1957 = _1951 == 0u;
        float frontier_phi_65_pred;
        if (_1957)
        {
            frontier_phi_65_pred = 0.0;
        }
        else
        {
            float _2099;
            float _2100;
            uint _2102;
            _2099 = 0.0;
            _2100 = 0.5;
            _2102 = _1951;
            float _1959;
            for (;;)
            {
                _1959 = ((_2102 & 1u) != 0u) ? (_2100 + _2099) : _2099;
                uint _2103 = _2102 >> 1u;
                if (_2103 == 0u)
                {
                    break;
                }
                else
                {
                    _2099 = _1959;
                    _2100 *= 0.5;
                    _2102 = _2103;
                }
            }
            frontier_phi_65_pred = _1959;
        }
        _1958 = frontier_phi_65_pred;
        float _1960 = _1958 + _1775;
        float _1964 = sqrt(_1955);
        float _1965 = ((_1960 > 1.0) ? (_1960 + (-1.0)) : _1960) * 6.283185482025146484375;
        float _1968 = cos(_1965) * _1964;
        float _1970 = sin(_1965) * _1964;
        float _1972 = sqrt(1.0 - _1955);
        float _1985 = ((_1972 * _1718) + (_1968 * _1942)) + (_1970 * _1937);
        float _1986 = ((_1972 * _1719) + (_1968 * _1945)) + (_1970 * _1938);
        float _1987 = ((_1972 * _1720) + (_1968 * _1948)) + (_1970 * _1939);
        _72._m0 = 1u;
        uvec4 _1991 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1992 = _1991.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1992, _1991.w, _1992, vec3(_1732, _1733, _1734), 9.9999997473787516355514526367188e-05, vec3(_1985, _1986, _1987), 10000.0, 1);
        float _1998 = dot(vec3(_1718, _1719, _1720), vec3(_1985, _1986, _1987));
        float _2354 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2001 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
        _1950 = ((float(_72._m0 == 0u) * _2001) / (_2001 * 0.3183098733425140380859375)) + _1949;
        uint _1952 = _1951 + 1u;
        if (_1952 == 32u)
        {
            break;
        }
        else
        {
            _1949 = _1950;
            _1951 = _1952;
            continue;
        }
    }
    float _2009 = _1950 * 0.009947183541953563690185546875;
    float _2014 = dot(vec3(_1609, _1610, _1611), vec3(_1718, _1719, _1720)) * 2.0;
    vec4 _2028 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1609 - (_2014 * _1718), _1610 - (_2014 * _1719), _1611 - (_2014 * _1720)), 4.0 - (_1666 * 4.0));
    float _2033 = dot(vec3(_1735, _1737, _1738), vec3(_1718, _1719, _1720));
    float _2365 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
    float _2043 = exp2(log2(1.0 - (isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0)))) * 5.0);
    vec4 _2055 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1718, _1719, _1720), 0.0);
    float _2066 = (_1919 + _1916) + (((_2055.x * _1777) + (((_2043 * (0.959999978542327880859375 - _1784)) + _1787) * _2028.x)) * _2009);
    float _2070 = (_1920 + _1917) + (((_2055.y * _1778) + (((_2043 * (0.959999978542327880859375 - _1785)) + _1789) * _2028.y)) * _2009);
    float _2074 = (_1921 + _1918) + (((_2055.z * _1779) + (((_2043 * (0.959999978542327880859375 - _1786)) + _1790) * _2028.z)) * _2009);
    float _2376 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
    float _2387 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
    float _2398 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
    bool _2082 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2093;
    _2093.x = _2082 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2376 : (isnan(_2376) ? 1.0 : min(_2376, 1.0)));
    _2093.y = _2082 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2387 : (isnan(_2387) ? 1.0 : min(_2387, 1.0)));
    _2093.z = _2082 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0)));
    payload._m0 = _2093;
}


