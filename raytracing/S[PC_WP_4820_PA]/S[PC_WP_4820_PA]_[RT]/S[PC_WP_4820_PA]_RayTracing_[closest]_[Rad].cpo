#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_PC_WP_4820_PA_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_PC_WP_4820_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_PC_WP_4820_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_PC_WP_4820_PA_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1289;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _164 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _165 >> 16u;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _167;
        }
        _170 = frontier_phi_3_2_ladder_2;
        _172 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _185 = (_178 * _170) + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 20u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 24u;
    }
    bool _217 = _179 == 0u;
    uint _218;
    if (_217)
    {
        _218 = _212;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 8u;
        }
        _218 = frontier_phi_9_10_ladder;
    }
    uvec4 _229 = texelFetch(l_geomAttrib_0, int((((_178 * _170) + 4u) + (_180 ? (_218 + 4u) : _218)) >> 2u));
    uint _230 = _229.x;
    float _234 = float(int(uint(int(_230 << 16u) >> int(16u))));
    float _235 = float(int(uint(int(_230) >> int(16u))));
    uint _237 = (_178 * _172) + 12u;
    uint _258;
    uint _259;
    uint _260;
    uint _261;
    if (_183)
    {
        uvec4 _239 = texelFetch(l_geomAttrib_0, int(_237 >> 2u));
        uint _240 = _239.x;
        _258 = _240 & 255u;
        _259 = (_240 >> 8u) & 255u;
        _260 = (_240 >> 16u) & 255u;
        _261 = 20u;
    }
    else
    {
        uint _246 = _237 >> 2u;
        uvec2 _252 = uvec2(texelFetch(l_geomAttrib_0, int(_246)).x, texelFetch(l_geomAttrib_0, int(_246 + 1u)).x);
        uint _253 = _252.x;
        _258 = _253 & 65535u;
        _259 = _253 >> 16u;
        _260 = _252.y & 65535u;
        _261 = 24u;
    }
    uint _265;
    if (_217)
    {
        _265 = _261;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _261 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _261 + 8u;
        }
        _265 = frontier_phi_16_17_ladder;
    }
    uvec4 _274 = texelFetch(l_geomAttrib_0, int((((_178 * _172) + 4u) + (_180 ? (_265 + 4u) : _265)) >> 2u));
    uint _275 = _274.x;
    float _279 = float(int(uint(int(_275 << 16u) >> int(16u))));
    float _280 = float(int(uint(int(_275) >> int(16u))));
    uint _282 = (_178 * _173) + 12u;
    uint _303;
    uint _304;
    uint _305;
    uint _306;
    if (_183)
    {
        uvec4 _284 = texelFetch(l_geomAttrib_0, int(_282 >> 2u));
        uint _285 = _284.x;
        _303 = _285 & 255u;
        _304 = (_285 >> 8u) & 255u;
        _305 = (_285 >> 16u) & 255u;
        _306 = 20u;
    }
    else
    {
        uint _291 = _282 >> 2u;
        uvec2 _297 = uvec2(texelFetch(l_geomAttrib_0, int(_291)).x, texelFetch(l_geomAttrib_0, int(_291 + 1u)).x);
        uint _298 = _297.x;
        _303 = _298 & 65535u;
        _304 = _298 >> 16u;
        _305 = _297.y & 65535u;
        _306 = 24u;
    }
    uint _310;
    if (_217)
    {
        _310 = _306;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _306 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _306 + 8u;
        }
        _310 = frontier_phi_23_24_ladder;
    }
    uvec4 _319 = texelFetch(l_geomAttrib_0, int((((_178 * _173) + 4u) + (_180 ? (_310 + 4u) : _310)) >> 2u));
    uint _320 = _319.x;
    float _324 = float(int(uint(int(_320 << 16u) >> int(16u))));
    float _325 = float(int(uint(int(_320) >> int(16u))));
    bool _327 = _129.z == 0u;
    float _363;
    float _364;
    float _365;
    if (_327)
    {
        uint _330 = _170 * 3u;
        uvec3 _339 = uvec3(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_330 + 2u)).x);
        _363 = uintBitsToFloat(_339.x);
        _364 = uintBitsToFloat(_339.y);
        _365 = uintBitsToFloat(_339.z);
    }
    else
    {
        uint _347 = _170 * 2u;
        uvec2 _353 = uvec2(texelFetch(l_geomPositionBuffer, int(_347)).x, texelFetch(l_geomPositionBuffer, int(_347 + 1u)).x);
        uint _354 = _353.x;
        _363 = unpackHalf2x16(_354).x;
        _364 = unpackHalf2x16(_354 >> 16u).x;
        _365 = unpackHalf2x16(_353.y).x;
    }
    float _401;
    float _402;
    float _403;
    if (_327)
    {
        uint _368 = _172 * 3u;
        uvec3 _377 = uvec3(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_368 + 2u)).x);
        _401 = uintBitsToFloat(_377.x);
        _402 = uintBitsToFloat(_377.y);
        _403 = uintBitsToFloat(_377.z);
    }
    else
    {
        uint _385 = _172 * 2u;
        uvec2 _391 = uvec2(texelFetch(l_geomPositionBuffer, int(_385)).x, texelFetch(l_geomPositionBuffer, int(_385 + 1u)).x);
        uint _392 = _391.x;
        _401 = unpackHalf2x16(_392).x;
        _402 = unpackHalf2x16(_392 >> 16u).x;
        _403 = unpackHalf2x16(_391.y).x;
    }
    float _439;
    float _440;
    float _441;
    if (_327)
    {
        uint _406 = _173 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _173 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _444 = (1.0 - hit._m0.x) - hit._m0.y;
    float _466 = (_279 - _234) * 0.00048828125;
    float _468 = (_280 - _235) * 0.00048828125;
    float _471 = (_324 - _234) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _494 = _401 - _363;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _499 = fma(_496, gl_ObjectToWorldEXT[2u].x, fma(_495, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _494));
    float _502 = fma(_496, gl_ObjectToWorldEXT[2u].y, fma(_495, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _494));
    float _505 = fma(_496, gl_ObjectToWorldEXT[2u].z, fma(_495, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _494));
    float _506 = _439 - _363;
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _511 = fma(_508, gl_ObjectToWorldEXT[2u].x, fma(_507, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _506));
    float _514 = fma(_508, gl_ObjectToWorldEXT[2u].y, fma(_507, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _506));
    float _517 = fma(_508, gl_ObjectToWorldEXT[2u].z, fma(_507, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _506));
    float _518 = (((_279 * hit._m0.x) + (_234 * _444)) + (_324 * hit._m0.y)) * 0.00048828125;
    float _519 = (((_280 * hit._m0.x) + (_235 * _444)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _523 = (((float(_209) * _444) + (-127.0)) + (float(_258) * hit._m0.x)) + (float(_303) * hit._m0.y);
    float _526 = (((float(_210) * _444) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _529 = (((float(_211) * _444) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = _523 * 0.0078740157186985015869140625;
    float _532 = _526 * 0.0078740157186985015869140625;
    float _533 = _529 * 0.0078740157186985015869140625;
    float _540 = cbMtdParam._m0[17u].x * cbPerFrame._m0[22u].x;
    float _543 = (_540 * cbMtdParam._m0[17u].y) + _518;
    float _544 = (_540 * cbMtdParam._m0[17u].z) + _519;
    float _570 = (cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _518)) + cbTextureTilingScale._m0[1u].z;
    float _571 = (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x) + _519)) + cbTextureTilingScale._m0[1u].w;
    uvec2 _573 = uvec2(textureSize(S_PC_WP_4820_PA_snp_0_Texture2D_4, int(0u)));
    bool _578 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _631;
    if (_578)
    {
        float _589 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _595 = (_517 * _502) - (_514 * _505);
        float _598 = (_511 * _505) - (_517 * _499);
        float _601 = (_514 * _499) - (_511 * _502);
        float _628 = ((log2((((float(_573.y) * 0.5) * float(_573.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_598 * _598) + (_601 * _601)) + (_595 * _595)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_589 * gl_WorldRayDirectionEXT.x, _589 * gl_WorldRayDirectionEXT.y, _589 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _631 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    }
    else
    {
        _631 = 0.0;
    }
    vec4 _635 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_4, SS_WrapLinear), vec2(_570, _571), _631);
    float _640 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[14u].y;
    float _646 = ((_635.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].w;
    float _648 = (-0.0) - (cbMtdParam._m0[13u].w * ((_635.x * 0.5) + (-0.25)));
    float _650 = fract(_640);
    float _652 = fract(_640 + 0.5);
    float _664 = abs((_650 * 2.0) + (-1.0));
    vec4 _682 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_650 * _648) + _543) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_646 * _650) + _544) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _684 = _682.x;
    float _701 = (cbMtdParam._m0[17u].w * _540) + _518;
    float _702 = (cbMtdParam._m0[18u].x * _540) + _519;
    float _753;
    if (_578)
    {
        float _713 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _719 = (_517 * _502) - (_514 * _505);
        float _722 = (_511 * _505) - (_517 * _499);
        float _725 = (_514 * _499) - (_511 * _502);
        float _751 = ((log2((((float(_573.y) * 0.5) * float(_573.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_722 * _722) + (_725 * _725)) + (_719 * _719)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_713 * gl_WorldRayDirectionEXT.x, _713 * gl_WorldRayDirectionEXT.y, _713 * gl_WorldRayDirectionEXT.z), vec3(_530, _532, _533))));
        _753 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    }
    else
    {
        _753 = 0.0;
    }
    vec4 _755 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_4, SS_WrapLinear), vec2(_570, _571), _753);
    float _763 = ((_755.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].w;
    float _765 = (-0.0) - (cbMtdParam._m0[13u].w * ((_755.x * 0.5) + (-0.25)));
    vec4 _790 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_650 * _765) + _701) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_763 * _650) + _702) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _792 = _790.x;
    float _793 = _790.y;
    float _794 = _790.z;
    vec4 _795 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_652 * _765) + _701) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_763 * _652) + _702) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _809 = (((_795.x - _792) * _664) + _792) * cbMtdParam._m0[11u].x;
    float _810 = (((_795.y - _793) * _664) + _793) * cbMtdParam._m0[11u].y;
    float _811 = (((_795.z - _794) * _664) + _794) * cbMtdParam._m0[11u].z;
    float _815 = cbMtdParam._m0[12u].y * (((textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_652 * _648) + _543) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_646 * _652) + _544) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0).x - _684) * _664) + _684);
    float _829 = (cbMtdParam._m0[18u].w * _540) + _518;
    float _830 = (cbMtdParam._m0[19u].x * _540) + _519;
    float _834 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _835 = _834 * gl_WorldRayDirectionEXT.x;
    float _836 = _834 * gl_WorldRayDirectionEXT.y;
    float _837 = _834 * gl_WorldRayDirectionEXT.z;
    float _881;
    if (_578)
    {
        float _847 = (_517 * _502) - (_514 * _505);
        float _850 = (_511 * _505) - (_517 * _499);
        float _853 = (_514 * _499) - (_511 * _502);
        float _879 = ((log2((((float(_573.y) * 0.5) * float(_573.x)) * abs((_472 * _466) - (_471 * _468))) / (sqrt(((_850 * _850) + (_853 * _853)) + (_847 * _847)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_835, _836, _837), vec3(_530, _532, _533))));
        _881 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    }
    else
    {
        _881 = 0.0;
    }
    vec4 _883 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_4, SS_WrapLinear), vec2(_570, _571), _881);
    float _891 = ((_883.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].w;
    float _893 = (-0.0) - (cbMtdParam._m0[13u].w * ((_883.x * 0.5) + (-0.25)));
    vec4 _918 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_650 * _893) + _829) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_891 * _650) + _830) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _920 = _918.x;
    float _921 = _918.y;
    float _922 = _918.z;
    vec4 _923 = textureLod(sampler2D(S_PC_WP_4820_PA_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_652 * _893) + _829) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_891 * _652) + _830) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _945 = abs((fract(cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1382 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
    float _946 = isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0));
    float _956 = 1.0 - cbMtdParam._m0[16u].w;
    float _959 = (((_946 * _946) * (3.0 - (_946 * 2.0))) - cbMtdParam._m0[16u].w) / (isnan(0.001000000047497451305389404296875) ? _956 : (isnan(_956) ? 0.001000000047497451305389404296875 : max(_956, 0.001000000047497451305389404296875)));
    float _1398 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _967 = abs((fract(cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1409 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _968 = isnan(1.0) ? _1409 : (isnan(_1409) ? 1.0 : min(_1409, 1.0));
    float _975 = 1.0 - cbMtdParam._m0[12u].z;
    float _977 = (((_968 * _968) * (3.0 - (_968 * 2.0))) - cbMtdParam._m0[12u].z) / (isnan(0.001000000047497451305389404296875) ? _975 : (isnan(_975) ? 0.001000000047497451305389404296875 : max(_975, 0.001000000047497451305389404296875)));
    float _1425 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _980 = ((isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0))) - cbMtdParam._m0[14u].z) + (isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0)));
    float _1000 = inversesqrt(dot(vec3(_530, _532, _533), vec3(_530, _532, _533)));
    float _1001 = _1000 * _530;
    float _1002 = _1000 * _532;
    float _1003 = _1000 * _533;
    float _1015 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1016 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1017 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1018 = (-0.0) - _835;
    float _1019 = (-0.0) - _836;
    float _1020 = (-0.0) - _837;
    float _1026 = float(gl_LaunchIDEXT.x);
    float _1027 = float(gl_LaunchIDEXT.y);
    float _1030 = float(gl_LaunchSizeEXT.x);
    float _1044 = fract(fract(sin(dot(vec2(_1026 / _1030, _1027 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1057 = fract(fract(sin(dot(vec2((_1026 + 128.0) / _1030, (_1027 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1067 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1068 = _1067.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1068, _1067.w, _1068, vec3(_1015, _1016, _1017), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1134;
    float _1135;
    float _1136;
    if (_67._m0 == 0u)
    {
        float _1089 = g_sceneCB._m0[4u].x - _835;
        float _1090 = g_sceneCB._m0[4u].y - _836;
        float _1091 = g_sceneCB._m0[4u].z - _837;
        float _1095 = inversesqrt(dot(vec3(_1089, _1090, _1091), vec3(_1089, _1090, _1091)));
        float _1099 = dot(vec3(_1001, _1002, _1003), vec3(g_sceneCB._m0[4u].xyz));
        float _1436 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1102 = isnan(1.0) ? _1436 : (isnan(_1436) ? 1.0 : min(_1436, 1.0));
        float _1103 = dot(vec3(_1001, _1002, _1003), vec3(_1018, _1019, _1020));
        float _1447 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1089 * _1095, _1090 * _1095, _1091 * _1095));
        float _1458 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1118 = (exp2(log2(1.0 - (isnan(1.0) ? _1458 : (isnan(_1458) ? 1.0 : min(_1458, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1124 = (0.5 / ((_1102 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1447 : (isnan(_1447) ? 1.0 : min(_1447, 1.0))))) * _1102;
        float _1469 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1126 = (isnan(1.0) ? _1469 : (isnan(_1469) ? 1.0 : min(_1469, 1.0))) * 0.31831014156341552734375;
        _1134 = (_1118 * g_sceneCB._m0[5u].x) * _1126;
        _1135 = (_1118 * g_sceneCB._m0[5u].y) * _1126;
        _1136 = (_1118 * g_sceneCB._m0[5u].z) * _1126;
    }
    else
    {
        _1134 = 0.0;
        _1135 = 0.0;
        _1136 = 0.0;
    }
    bool _1138 = abs(_1002) < 0.89999997615814208984375;
    float _1140 = float(_1138);
    float _1141 = _1138 ? 0.0 : 1.0;
    float _1144 = (_1140 * _1003) - (_1141 * _1002);
    float _1145 = _1141 * _1001;
    float _1147 = (-0.0) - (_1001 * _1140);
    float _1151 = inversesqrt(dot(vec3(_1144, _1145, _1147), vec3(_1144, _1145, _1147)));
    float _1152 = _1144 * _1151;
    float _1153 = _1145 * _1151;
    float _1154 = _1151 * _1147;
    float _1157 = (_1153 * _1003) - (_1154 * _1002);
    float _1160 = (_1154 * _1001) - (_1152 * _1003);
    float _1163 = (_1152 * _1002) - (_1153 * _1001);
    float _1165;
    float _1173;
    float _1164 = 0.0;
    uint _1166 = 0u;
    float _1170;
    bool _1172;
    for (;;)
    {
        _1170 = (float(_1166) + _1044) * 0.03125;
        _1172 = _1166 == 0u;
        float frontier_phi_45_pred;
        if (_1172)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1294;
            float _1295;
            uint _1297;
            _1294 = 0.0;
            _1295 = 0.5;
            _1297 = _1166;
            float _1174;
            for (;;)
            {
                _1174 = ((_1297 & 1u) != 0u) ? (_1295 + _1294) : _1294;
                uint _1298 = _1297 >> 1u;
                if (_1298 == 0u)
                {
                    break;
                }
                else
                {
                    _1294 = _1174;
                    _1295 *= 0.5;
                    _1297 = _1298;
                }
            }
            frontier_phi_45_pred = _1174;
        }
        _1173 = frontier_phi_45_pred;
        float _1175 = _1173 + _1057;
        float _1179 = sqrt(_1170);
        float _1180 = ((_1175 > 1.0) ? (_1175 + (-1.0)) : _1175) * 6.283185482025146484375;
        float _1183 = cos(_1180) * _1179;
        float _1185 = sin(_1180) * _1179;
        float _1187 = sqrt(1.0 - _1170);
        float _1200 = ((_1187 * _1001) + (_1183 * _1157)) + (_1185 * _1152);
        float _1201 = ((_1187 * _1002) + (_1183 * _1160)) + (_1185 * _1153);
        float _1202 = ((_1187 * _1003) + (_1183 * _1163)) + (_1185 * _1154);
        _66._m0 = 1u;
        uvec4 _1206 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1207 = _1206.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1207, _1206.w, _1207, vec3(_1015, _1016, _1017), 9.9999997473787516355514526367188e-05, vec3(_1200, _1201, _1202), 10000.0, 1);
        float _1213 = dot(vec3(_1001, _1002, _1003), vec3(_1200, _1201, _1202));
        float _1480 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1216 = isnan(1.0) ? _1480 : (isnan(_1480) ? 1.0 : min(_1480, 1.0));
        _1165 = ((float(_66._m0 == 0u) * _1216) / (_1216 * 0.3183098733425140380859375)) + _1164;
        uint _1167 = _1166 + 1u;
        if (_1167 == 32u)
        {
            break;
        }
        else
        {
            _1164 = _1165;
            _1166 = _1167;
            continue;
        }
    }
    float _1225 = _1165 * 0.009947183541953563690185546875;
    float _1230 = dot(vec3(_835, _836, _837), vec3(_1001, _1002, _1003)) * 2.0;
    vec4 _1242 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_835 - (_1230 * _1001), _836 - (_1230 * _1002), _837 - (_1230 * _1003)), 4.0);
    float _1247 = dot(vec3(_1018, _1019, _1020), vec3(_1001, _1002, _1003));
    float _1491 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
    float _1256 = (exp2(log2(1.0 - (isnan(1.0) ? _1491 : (isnan(_1491) ? 1.0 : min(_1491, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1264 = (_1134 + (((_815 * ((((((_923.x - _920) * _664) + _920) * cbMtdParam._m0[9u].x) * _980) - _809)) + _809) * cbMtdParam._m0[16u].z)) + ((_1242.x * _1225) * _1256);
    float _1266 = (_1135 + (((_815 * ((((((_923.y - _921) * _664) + _921) * cbMtdParam._m0[9u].y) * _980) - _810)) + _810) * cbMtdParam._m0[16u].z)) + ((_1242.y * _1225) * _1256);
    float _1268 = (_1136 + (((_815 * ((((((_923.z - _922) * _664) + _922) * cbMtdParam._m0[9u].z) * _980) - _811)) + _811) * cbMtdParam._m0[16u].z)) + ((_1242.z * _1225) * _1256);
    float _1502 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
    float _1513 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
    float _1524 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
    bool _1277 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1288;
    _1288.x = _1277 ? ((_523 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1502 : (isnan(_1502) ? 1.0 : min(_1502, 1.0)));
    _1288.y = _1277 ? ((_526 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1513 : (isnan(_1513) ? 1.0 : min(_1513, 1.0)));
    _1288.z = _1277 ? ((_529 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0)));
    payload._m0 = _1288;
}


