#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2183;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    bool _185 = _132.w == 0u;
    bool _186 = _183 || _185;
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    bool _237 = _182 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _215 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_185)
        {
            frontier_phi_9_10_ladder = _215 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _215 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uint _242 = _183 ? (_238 + 4u) : _238;
    uvec4 _252 = texelFetch(l_geomAttrib_0, int(((_187 + 8u) + _242) >> 2u));
    uint _253 = _252.x;
    float _257 = float(int(uint(int(_253 << 16u) >> int(16u))));
    float _258 = float(int(uint(int(_253) >> int(16u))));
    uint _259 = _181 * _175;
    uint _260 = _259 + 12u;
    uint _281;
    uint _282;
    uint _283;
    uint _284;
    if (_186)
    {
        uvec4 _262 = texelFetch(l_geomAttrib_0, int(_260 >> 2u));
        uint _263 = _262.x;
        _281 = _263 & 255u;
        _282 = (_263 >> 8u) & 255u;
        _283 = (_263 >> 16u) & 255u;
        _284 = 16u;
    }
    else
    {
        uint _269 = _260 >> 2u;
        uvec2 _275 = uvec2(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x);
        uint _276 = _275.x;
        _281 = _276 & 65535u;
        _282 = _276 >> 16u;
        _283 = _275.y & 65535u;
        _284 = 20u;
    }
    uvec4 _290 = texelFetch(l_geomAttrib_0, int((_284 + _259) >> 2u));
    uint _291 = _290.x;
    uint _303;
    if (_237)
    {
        _303 = _284 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_185)
        {
            frontier_phi_16_17_ladder = _284 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _284 + 12u;
        }
        _303 = frontier_phi_16_17_ladder;
    }
    uint _307 = _183 ? (_303 + 4u) : _303;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_259 + 8u) + _307) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uint _324 = _181 * _176;
    uint _325 = _324 + 12u;
    uint _346;
    uint _347;
    uint _348;
    uint _349;
    if (_186)
    {
        uvec4 _327 = texelFetch(l_geomAttrib_0, int(_325 >> 2u));
        uint _328 = _327.x;
        _346 = _328 & 255u;
        _347 = (_328 >> 8u) & 255u;
        _348 = (_328 >> 16u) & 255u;
        _349 = 16u;
    }
    else
    {
        uint _334 = _325 >> 2u;
        uvec2 _340 = uvec2(texelFetch(l_geomAttrib_0, int(_334)).x, texelFetch(l_geomAttrib_0, int(_334 + 1u)).x);
        uint _341 = _340.x;
        _346 = _341 & 65535u;
        _347 = _341 >> 16u;
        _348 = _340.y & 65535u;
        _349 = 20u;
    }
    uvec4 _355 = texelFetch(l_geomAttrib_0, int((_349 + _324) >> 2u));
    uint _356 = _355.x;
    uint _368;
    if (_237)
    {
        _368 = _349 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_185)
        {
            frontier_phi_23_24_ladder = _349 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _349 + 12u;
        }
        _368 = frontier_phi_23_24_ladder;
    }
    uint _372 = _183 ? (_368 + 4u) : _368;
    uvec4 _382 = texelFetch(l_geomAttrib_0, int(((_324 + 8u) + _372) >> 2u));
    uint _383 = _382.x;
    float _387 = float(int(uint(int(_383 << 16u) >> int(16u))));
    float _388 = float(int(uint(int(_383) >> int(16u))));
    bool _390 = _132.z == 0u;
    float _426;
    float _427;
    float _428;
    if (_390)
    {
        uint _393 = _173 * 3u;
        uvec3 _402 = uvec3(texelFetch(l_geomPositionBuffer, int(_393)).x, texelFetch(l_geomPositionBuffer, int(_393 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_393 + 2u)).x);
        _426 = uintBitsToFloat(_402.x);
        _427 = uintBitsToFloat(_402.y);
        _428 = uintBitsToFloat(_402.z);
    }
    else
    {
        uint _410 = _173 * 2u;
        uvec2 _416 = uvec2(texelFetch(l_geomPositionBuffer, int(_410)).x, texelFetch(l_geomPositionBuffer, int(_410 + 1u)).x);
        uint _417 = _416.x;
        _426 = unpackHalf2x16(_417).x;
        _427 = unpackHalf2x16(_417 >> 16u).x;
        _428 = unpackHalf2x16(_416.y).x;
    }
    float _464;
    float _465;
    float _466;
    if (_390)
    {
        uint _431 = _175 * 3u;
        uvec3 _440 = uvec3(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_431 + 2u)).x);
        _464 = uintBitsToFloat(_440.x);
        _465 = uintBitsToFloat(_440.y);
        _466 = uintBitsToFloat(_440.z);
    }
    else
    {
        uint _448 = _175 * 2u;
        uvec2 _454 = uvec2(texelFetch(l_geomPositionBuffer, int(_448)).x, texelFetch(l_geomPositionBuffer, int(_448 + 1u)).x);
        uint _455 = _454.x;
        _464 = unpackHalf2x16(_455).x;
        _465 = unpackHalf2x16(_455 >> 16u).x;
        _466 = unpackHalf2x16(_454.y).x;
    }
    float _502;
    float _503;
    float _504;
    if (_390)
    {
        uint _469 = _176 * 3u;
        uvec3 _478 = uvec3(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_469 + 2u)).x);
        _502 = uintBitsToFloat(_478.x);
        _503 = uintBitsToFloat(_478.y);
        _504 = uintBitsToFloat(_478.z);
    }
    else
    {
        uint _486 = _176 * 2u;
        uvec2 _492 = uvec2(texelFetch(l_geomPositionBuffer, int(_486)).x, texelFetch(l_geomPositionBuffer, int(_486 + 1u)).x);
        uint _493 = _492.x;
        _502 = unpackHalf2x16(_493).x;
        _503 = unpackHalf2x16(_493 >> 16u).x;
        _504 = unpackHalf2x16(_492.y).x;
    }
    float _507 = (1.0 - hit._m0.x) - hit._m0.y;
    float _548 = (_322 - _257) * 0.00048828125;
    float _550 = (_323 - _258) * 0.00048828125;
    float _553 = (_387 - _257) * 0.00048828125;
    float _554 = (_388 - _258) * 0.00048828125;
    float _576 = _464 - _426;
    float _577 = _465 - _427;
    float _578 = _466 - _428;
    float _581 = fma(_578, gl_ObjectToWorldEXT[2u].x, fma(_577, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _576));
    float _584 = fma(_578, gl_ObjectToWorldEXT[2u].y, fma(_577, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _576));
    float _587 = fma(_578, gl_ObjectToWorldEXT[2u].z, fma(_577, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _576));
    float _588 = _502 - _426;
    float _589 = _503 - _427;
    float _590 = _504 - _428;
    float _593 = fma(_590, gl_ObjectToWorldEXT[2u].x, fma(_589, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _588));
    float _596 = fma(_590, gl_ObjectToWorldEXT[2u].y, fma(_589, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _588));
    float _599 = fma(_590, gl_ObjectToWorldEXT[2u].z, fma(_589, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _588));
    float _600 = (((_322 * hit._m0.x) + (_257 * _507)) + (_387 * hit._m0.y)) * 0.00048828125;
    float _601 = (((_323 * hit._m0.x) + (_258 * _507)) + (_388 * hit._m0.y)) * 0.00048828125;
    float _605 = (((float(_212) * _507) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_346) * hit._m0.y);
    float _608 = (((float(_213) * _507) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_347) * hit._m0.y);
    float _611 = (((float(_214) * _507) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_348) * hit._m0.y);
    float _612 = _605 * 0.0078740157186985015869140625;
    float _614 = _608 * 0.0078740157186985015869140625;
    float _615 = _611 * 0.0078740157186985015869140625;
    float _628 = ((((float(_224 & 255u) * _507) + (-127.0)) + (float(_291 & 255u) * hit._m0.x)) + (float(_356 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _629 = ((((float((_224 >> 8u) & 255u) * _507) + (-127.0)) + (float((_291 >> 8u) & 255u) * hit._m0.x)) + (float((_356 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _630 = ((((float((_224 >> 16u) & 255u) * _507) + (-127.0)) + (float((_291 >> 16u) & 255u) * hit._m0.x)) + (float((_356 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _631 = ((((float(_224 >> 24u) * _507) + (-127.0)) + (float(_291 >> 24u) * hit._m0.x)) + (float(_356 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _641 = ((_629 * _615) - (_630 * _614)) * _631;
    float _642 = ((_630 * _612) - (_628 * _615)) * _631;
    float _643 = ((_628 * _614) - (_629 * _612)) * _631;
    float _647 = inversesqrt(dot(vec3(_641, _642, _643), vec3(_641, _642, _643)));
    uvec2 _676 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_11, int(0u)));
    bool _681 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _734;
    if (_681)
    {
        float _692 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _698 = (_599 * _584) - (_596 * _587);
        float _701 = (_593 * _587) - (_599 * _581);
        float _704 = (_596 * _581) - (_593 * _584);
        float _731 = ((log2((((float(_676.y) * 0.5) * float(_676.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_701 * _701) + (_704 * _704)) + (_698 * _698)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_692 * gl_WorldRayDirectionEXT.x, _692 * gl_WorldRayDirectionEXT.y, _692 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _734 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    }
    else
    {
        _734 = 0.0;
    }
    vec4 _738 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _600) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _601) + cbTextureTilingScale._m0[4u].w), _734);
    uvec2 _765 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_8, int(0u)));
    float _816;
    if (_681)
    {
        float _776 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _782 = (_599 * _584) - (_596 * _587);
        float _785 = (_593 * _587) - (_599 * _581);
        float _788 = (_596 * _581) - (_593 * _584);
        float _814 = ((log2((((float(_765.y) * 0.5) * float(_765.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_785 * _785) + (_788 * _788)) + (_782 * _782)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_776 * gl_WorldRayDirectionEXT.x, _776 * gl_WorldRayDirectionEXT.y, _776 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _816 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    }
    else
    {
        _816 = 0.0;
    }
    vec4 _818 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _600) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _601) + cbTextureTilingScale._m0[13u].w), _816);
    uvec2 _844 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_1, int(0u)));
    float _895;
    if (_681)
    {
        float _855 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _861 = (_599 * _584) - (_596 * _587);
        float _864 = (_593 * _587) - (_599 * _581);
        float _867 = (_596 * _581) - (_593 * _584);
        float _893 = ((log2((((float(_844.y) * 0.5) * float(_844.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_864 * _864) + (_867 * _867)) + (_861 * _861)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_855 * gl_WorldRayDirectionEXT.x, _855 * gl_WorldRayDirectionEXT.y, _855 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _895 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    }
    else
    {
        _895 = 0.0;
    }
    vec4 _897 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _600) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _601) + cbTextureTilingScale._m0[0u].w), _895);
    float _902 = _897.x * cbMatDynParam._m0[17u].x;
    float _903 = _897.y * cbMatDynParam._m0[17u].y;
    float _904 = _897.z * cbMatDynParam._m0[17u].z;
    uvec2 _922 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_2, int(0u)));
    float _973;
    if (_681)
    {
        float _933 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _939 = (_599 * _584) - (_596 * _587);
        float _942 = (_593 * _587) - (_599 * _581);
        float _945 = (_596 * _581) - (_593 * _584);
        float _971 = ((log2((((float(_922.y) * 0.5) * float(_922.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_942 * _942) + (_945 * _945)) + (_939 * _939)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_933 * gl_WorldRayDirectionEXT.x, _933 * gl_WorldRayDirectionEXT.y, _933 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _973 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    }
    else
    {
        _973 = 0.0;
    }
    vec4 _975 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _600) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _601) + cbTextureTilingScale._m0[7u].w), _973);
    uvec2 _994 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_0, int(0u)));
    float _1045;
    if (_681)
    {
        float _1005 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1011 = (_599 * _584) - (_596 * _587);
        float _1014 = (_593 * _587) - (_599 * _581);
        float _1017 = (_596 * _581) - (_593 * _584);
        float _1043 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1014 * _1014) + (_1017 * _1017)) + (_1011 * _1011)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1005 * gl_WorldRayDirectionEXT.x, _1005 * gl_WorldRayDirectionEXT.y, _1005 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1045 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    }
    else
    {
        _1045 = 0.0;
    }
    vec4 _1047 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _600) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _601) + cbTextureTilingScale._m0[2u].w), _1045);
    float _1057 = (((((float(texelFetch(l_geomAttrib_0, int((_307 + _259) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_242 + _187) >> 2u)).x >> 24u) * _507)) + (float(texelFetch(l_geomAttrib_0, int((_372 + _324) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[21u].y) + 1.0;
    float _1058 = (0.5 - ((cbMatDynParam._m0[21u].x * 0.5) * (_1047.x + 0.00999999977648258209228515625))) * _1057;
    float _2308 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1059 = isnan(1.0) ? _2308 : (isnan(_2308) ? 1.0 : min(_2308, 1.0));
    float _1066 = (_1059 * ((_975.x * cbMatDynParam._m0[18u].x) - _902)) + _902;
    float _1067 = (_1059 * ((_975.y * cbMatDynParam._m0[18u].y) - _903)) + _903;
    float _1068 = (_1059 * ((_975.z * cbMatDynParam._m0[18u].z) - _904)) + _904;
    float _1073 = (0.5 - ((cbMatDynParam._m0[22u].z * 0.5) * (_1047.y + 0.00999999977648258209228515625))) * _1057;
    float _2319 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    float _1074 = isnan(1.0) ? _2319 : (isnan(_2319) ? 1.0 : min(_2319, 1.0));
    float _1081 = (((_818.x * cbMatDynParam._m0[19u].x) - _1066) * _1074) + _1066;
    float _1082 = (((_818.y * cbMatDynParam._m0[19u].y) - _1067) * _1074) + _1067;
    float _1083 = (((_818.z * cbMatDynParam._m0[19u].z) - _1068) * _1074) + _1068;
    float _1088 = (0.5 - ((cbMatDynParam._m0[22u].w * 0.5) * (_1047.z + 0.00999999977648258209228515625))) * _1057;
    float _2330 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _1089 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
    float _1096 = (((_738.x * cbMatDynParam._m0[20u].x) - _1081) * _1089) + _1081;
    float _1097 = (((_738.y * cbMatDynParam._m0[20u].y) - _1082) * _1089) + _1082;
    float _1098 = (((_738.z * cbMatDynParam._m0[20u].z) - _1083) * _1089) + _1083;
    uvec2 _1111 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_4, int(0u)));
    float _1162;
    if (_681)
    {
        float _1122 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1128 = (_599 * _584) - (_596 * _587);
        float _1131 = (_593 * _587) - (_599 * _581);
        float _1134 = (_596 * _581) - (_593 * _584);
        float _1160 = ((log2((((float(_1111.y) * 0.5) * float(_1111.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1131 * _1131) + (_1134 * _1134)) + (_1128 * _1128)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1122 * gl_WorldRayDirectionEXT.x, _1122 * gl_WorldRayDirectionEXT.y, _1122 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1162 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
    }
    else
    {
        _1162 = 0.0;
    }
    vec4 _1165 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_4, SS_SpecularMap), vec2((cbTextureTilingScale._m0[9u].x * _600) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _601) + cbTextureTilingScale._m0[9u].w), _1162);
    float _1167 = _1165.x;
    float _1168 = _1165.y;
    float _1169 = _1165.z;
    uvec2 _1182 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_9, int(0u)));
    float _1233;
    if (_681)
    {
        float _1193 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1199 = (_599 * _584) - (_596 * _587);
        float _1202 = (_593 * _587) - (_599 * _581);
        float _1205 = (_596 * _581) - (_593 * _584);
        float _1231 = ((log2((((float(_1182.y) * 0.5) * float(_1182.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1202 * _1202) + (_1205 * _1205)) + (_1199 * _1199)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1193 * gl_WorldRayDirectionEXT.x, _1193 * gl_WorldRayDirectionEXT.y, _1193 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1233 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    }
    else
    {
        _1233 = 0.0;
    }
    vec4 _1235 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_9, SS_SpecularMap), vec2((cbTextureTilingScale._m0[14u].x * _600) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _601) + cbTextureTilingScale._m0[14u].w), _1233);
    float _1246 = ((_1235.x - _1167) * _1059) + _1167;
    float _1247 = ((_1235.y - _1168) * _1059) + _1168;
    float _1248 = ((_1235.z - _1169) * _1059) + _1169;
    uvec2 _1260 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_3, int(0u)));
    float _1311;
    if (_681)
    {
        float _1271 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1277 = (_599 * _584) - (_596 * _587);
        float _1280 = (_593 * _587) - (_599 * _581);
        float _1283 = (_596 * _581) - (_593 * _584);
        float _1309 = ((log2((((float(_1260.y) * 0.5) * float(_1260.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1280 * _1280) + (_1283 * _1283)) + (_1277 * _1277)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1271 * gl_WorldRayDirectionEXT.x, _1271 * gl_WorldRayDirectionEXT.y, _1271 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1311 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
    }
    else
    {
        _1311 = 0.0;
    }
    vec4 _1313 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_3, SS_SpecularMap), vec2((cbTextureTilingScale._m0[8u].x * _600) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _601) + cbTextureTilingScale._m0[8u].w), _1311);
    float _1324 = ((_1313.x - _1246) * _1074) + _1246;
    float _1325 = ((_1313.y - _1247) * _1074) + _1247;
    float _1326 = ((_1313.z - _1248) * _1074) + _1248;
    uvec2 _1338 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_10, int(0u)));
    float _1389;
    if (_681)
    {
        float _1349 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1355 = (_599 * _584) - (_596 * _587);
        float _1358 = (_593 * _587) - (_599 * _581);
        float _1361 = (_596 * _581) - (_593 * _584);
        float _1387 = ((log2((((float(_1338.y) * 0.5) * float(_1338.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1358 * _1358) + (_1361 * _1361)) + (_1355 * _1355)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1349 * gl_WorldRayDirectionEXT.x, _1349 * gl_WorldRayDirectionEXT.y, _1349 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1389 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
    }
    else
    {
        _1389 = 0.0;
    }
    vec4 _1391 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_10, SS_SpecularMap), vec2((cbTextureTilingScale._m0[3u].x * _600) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _601) + cbTextureTilingScale._m0[3u].w), _1389);
    float _1402 = ((_1391.x - _1324) * _1089) + _1324;
    float _1403 = ((_1391.y - _1325) * _1089) + _1325;
    float _1404 = ((_1391.z - _1326) * _1089) + _1326;
    uvec2 _1420 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_16, int(0u)));
    float _1471;
    if (_681)
    {
        float _1431 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1437 = (_599 * _584) - (_596 * _587);
        float _1440 = (_593 * _587) - (_599 * _581);
        float _1443 = (_596 * _581) - (_593 * _584);
        float _1469 = ((log2((((float(_1420.y) * 0.5) * float(_1420.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1440 * _1440) + (_1443 * _1443)) + (_1437 * _1437)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1431 * gl_WorldRayDirectionEXT.x, _1431 * gl_WorldRayDirectionEXT.y, _1431 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1471 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    }
    else
    {
        _1471 = 0.0;
    }
    vec4 _1474 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _600) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _601) + cbTextureTilingScale._m0[6u].w), _1471);
    uvec2 _1493 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_15, int(0u)));
    float _1544;
    if (_681)
    {
        float _1504 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1510 = (_599 * _584) - (_596 * _587);
        float _1513 = (_593 * _587) - (_599 * _581);
        float _1516 = (_596 * _581) - (_593 * _584);
        float _1542 = ((log2((((float(_1493.y) * 0.5) * float(_1493.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1513 * _1513) + (_1516 * _1516)) + (_1510 * _1510)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1504 * gl_WorldRayDirectionEXT.x, _1504 * gl_WorldRayDirectionEXT.y, _1504 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1544 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
    }
    else
    {
        _1544 = 0.0;
    }
    vec4 _1546 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _600) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _601) + cbTextureTilingScale._m0[5u].w), _1544);
    uvec2 _1565 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_5, int(0u)));
    float _1616;
    if (_681)
    {
        float _1576 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1582 = (_599 * _584) - (_596 * _587);
        float _1585 = (_593 * _587) - (_599 * _581);
        float _1588 = (_596 * _581) - (_593 * _584);
        float _1614 = ((log2((((float(_1565.y) * 0.5) * float(_1565.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1585 * _1585) + (_1588 * _1588)) + (_1582 * _1582)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1576 * gl_WorldRayDirectionEXT.x, _1576 * gl_WorldRayDirectionEXT.y, _1576 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1616 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
    }
    else
    {
        _1616 = 0.0;
    }
    vec4 _1618 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _600) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _601) + cbTextureTilingScale._m0[10u].w), _1616);
    float _1620 = _1618.x;
    float _1621 = _1618.y;
    float _1623 = _1618.z * cbMatDynParam._m0[22u].x;
    uvec2 _1637 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_6, int(0u)));
    float _1688;
    if (_681)
    {
        float _1648 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1654 = (_599 * _584) - (_596 * _587);
        float _1657 = (_593 * _587) - (_599 * _581);
        float _1660 = (_596 * _581) - (_593 * _584);
        float _1686 = ((log2((((float(_1637.y) * 0.5) * float(_1637.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1657 * _1657) + (_1660 * _1660)) + (_1654 * _1654)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1648 * gl_WorldRayDirectionEXT.x, _1648 * gl_WorldRayDirectionEXT.y, _1648 * gl_WorldRayDirectionEXT.z), vec3(_612, _614, _615))));
        _1688 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
    }
    else
    {
        _1688 = 0.0;
    }
    vec4 _1690 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _600) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _601) + cbTextureTilingScale._m0[11u].w), _1688);
    float _1698 = (((_1690.z * cbMatDynParam._m0[21u].w) - _1623) * _1059) + _1623;
    float _1701 = (((_1546.z * cbMatDynParam._m0[21u].z) - _1698) * _1074) + _1698;
    float _1704 = (((_1474.z * cbMatDynParam._m0[23u].x) - _1701) * _1089) + _1701;
    uvec2 _1716 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_7, int(0u)));
    float _1720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1721 = _1720 * gl_WorldRayDirectionEXT.x;
    float _1722 = _1720 * gl_WorldRayDirectionEXT.y;
    float _1723 = _1720 * gl_WorldRayDirectionEXT.z;
    float _1767;
    if (_681)
    {
        float _1733 = (_599 * _584) - (_596 * _587);
        float _1736 = (_593 * _587) - (_599 * _581);
        float _1739 = (_596 * _581) - (_593 * _584);
        float _1765 = ((log2((((float(_1716.y) * 0.5) * float(_1716.x)) * abs((_554 * _548) - (_553 * _550))) / (sqrt(((_1736 * _1736) + (_1739 * _1739)) + (_1733 * _1733)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1721, _1722, _1723), vec3(_612, _614, _615))));
        _1767 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
    }
    else
    {
        _1767 = 0.0;
    }
    vec4 _1769 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _600) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _601) + cbTextureTilingScale._m0[12u].w), _1767);
    float _1782 = (_1059 * (_1690.x - _1620)) + _1620;
    float _1783 = (_1059 * (_1690.y - _1621)) + _1621;
    float _1788 = ((_1546.x - _1782) * _1074) + _1782;
    float _1789 = ((_1546.y - _1783) * _1074) + _1783;
    float _1798 = ((((_1474.x - _1788) * _1089) + _1788) * 2.0) + (-1.0);
    float _1799 = ((((_1474.y - _1789) * _1089) + _1789) * 2.0) + (-1.0);
    float _1800 = dot(vec2(_1798, _1799), vec2(_1798, _1799));
    float _2386 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
    float _1805 = sqrt(1.0 - (isnan(1.0) ? _2386 : (isnan(_2386) ? 1.0 : min(_2386, 1.0))));
    float _1809 = _1798 + (cbMatDynParam._m0[22u].y * ((_1769.x * 2.0) + (-1.0)));
    float _1810 = _1799 + (cbMatDynParam._m0[22u].y * ((_1769.y * 2.0) + (-1.0)));
    float _1813 = fma(_1805, _612, fma(_1810, _628, (_647 * _641) * _1809));
    float _1816 = fma(_1805, _614, fma(_1810, _629, (_647 * _642) * _1809));
    float _1819 = fma(_1805, _615, fma(_1810, _630, (_647 * _643) * _1809));
    float _1823 = inversesqrt(dot(vec3(_1813, _1816, _1819), vec3(_1813, _1816, _1819)));
    float _1824 = _1823 * _1813;
    float _1825 = _1823 * _1816;
    float _1826 = _1823 * _1819;
    float _1838 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1839 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1840 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1841 = (-0.0) - _1721;
    float _1843 = (-0.0) - _1722;
    float _1844 = (-0.0) - _1723;
    float _1850 = float(gl_LaunchIDEXT.x);
    float _1851 = float(gl_LaunchIDEXT.y);
    float _1854 = float(gl_LaunchSizeEXT.x);
    float _1868 = fract(fract(sin(dot(vec2(_1850 / _1854, _1851 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1881 = fract(fract(sin(dot(vec2((_1850 + 128.0) / _1854, (_1851 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _74._m0 = 1u;
    uvec4 _1891 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1892 = _1891.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1892, _1891.w, _1892, vec3(_1838, _1839, _1840), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2005;
    float _2006;
    float _2007;
    float _2008;
    float _2009;
    float _2010;
    if (_74._m0 == 0u)
    {
        float _1912 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1824, _1825, _1826));
        float _2397 = isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0));
        float _1915 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        float _1934 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1704) * 0.949999988079071044921875);
        float _1935 = _1934 * _1934;
        float _1936 = g_sceneCB._m0[4u].x - _1721;
        float _1937 = g_sceneCB._m0[4u].y - _1722;
        float _1938 = g_sceneCB._m0[4u].z - _1723;
        float _1942 = inversesqrt(dot(vec3(_1936, _1937, _1938), vec3(_1936, _1937, _1938)));
        float _1943 = _1942 * _1936;
        float _1944 = _1942 * _1937;
        float _1945 = _1942 * _1938;
        float _1946 = dot(vec3(_1824, _1825, _1826), vec3(g_sceneCB._m0[4u].xyz));
        float _2408 = isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0));
        float _1949 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
        float _1950 = dot(vec3(_1824, _1825, _1826), vec3(_1841, _1843, _1844));
        float _2419 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
        float _1953 = isnan(1.0) ? _2419 : (isnan(_2419) ? 1.0 : min(_2419, 1.0));
        float _1954 = dot(vec3(_1824, _1825, _1826), vec3(_1943, _1944, _1945));
        float _2430 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1957 = isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0));
        float _1958 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1943, _1944, _1945));
        float _2441 = isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0));
        float _1962 = _1935 * _1935;
        float _1966 = ((_1957 * _1957) * (_1962 + (-1.0))) + 1.0;
        float _1975 = exp2(log2(1.0 - (isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0)))) * 5.0);
        float _1985 = 1.0 - _1935;
        float _1996 = (0.5 / (((_1953 * ((_1949 * _1985) + _1935)) + 9.9999999392252902907785028219223e-09) + (((_1953 * _1985) + _1935) * _1949))) * _1949;
        float _2452 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _1998 = (isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0))) * (_1962 / ((_1966 * _1966) * 3.141590118408203125));
        _2005 = ((_1096 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1915;
        _2006 = ((_1097 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1915;
        _2007 = ((_1098 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1915;
        _2008 = (((_1975 * (1.0 - _1402)) + _1402) * g_sceneCB._m0[5u].x) * _1998;
        _2009 = (((_1975 * (1.0 - _1403)) + _1403) * g_sceneCB._m0[5u].y) * _1998;
        _2010 = (((_1975 * (1.0 - _1404)) + _1404) * g_sceneCB._m0[5u].z) * _1998;
    }
    else
    {
        _2005 = 0.0;
        _2006 = 0.0;
        _2007 = 0.0;
        _2008 = 0.0;
        _2009 = 0.0;
        _2010 = 0.0;
    }
    bool _2012 = abs(_1825) < 0.89999997615814208984375;
    float _2014 = float(_2012);
    float _2015 = _2012 ? 0.0 : 1.0;
    float _2018 = (_2014 * _1826) - (_2015 * _1825);
    float _2019 = _2015 * _1824;
    float _2021 = (-0.0) - (_1824 * _2014);
    float _2025 = inversesqrt(dot(vec3(_2018, _2019, _2021), vec3(_2018, _2019, _2021)));
    float _2026 = _2018 * _2025;
    float _2027 = _2019 * _2025;
    float _2028 = _2025 * _2021;
    float _2031 = (_2027 * _1826) - (_2028 * _1825);
    float _2034 = (_2028 * _1824) - (_2026 * _1826);
    float _2037 = (_2026 * _1825) - (_2027 * _1824);
    float _2039;
    float _2047;
    float _2038 = 0.0;
    uint _2040 = 0u;
    float _2044;
    bool _2046;
    for (;;)
    {
        _2044 = (float(_2040) + _1868) * 0.03125;
        _2046 = _2040 == 0u;
        float frontier_phi_67_pred;
        if (_2046)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2188;
            float _2189;
            uint _2191;
            _2188 = 0.0;
            _2189 = 0.5;
            _2191 = _2040;
            float _2048;
            for (;;)
            {
                _2048 = ((_2191 & 1u) != 0u) ? (_2189 + _2188) : _2188;
                uint _2192 = _2191 >> 1u;
                if (_2192 == 0u)
                {
                    break;
                }
                else
                {
                    _2188 = _2048;
                    _2189 *= 0.5;
                    _2191 = _2192;
                }
            }
            frontier_phi_67_pred = _2048;
        }
        _2047 = frontier_phi_67_pred;
        float _2049 = _2047 + _1881;
        float _2053 = sqrt(_2044);
        float _2054 = ((_2049 > 1.0) ? (_2049 + (-1.0)) : _2049) * 6.283185482025146484375;
        float _2057 = cos(_2054) * _2053;
        float _2059 = sin(_2054) * _2053;
        float _2061 = sqrt(1.0 - _2044);
        float _2074 = ((_2061 * _1824) + (_2057 * _2031)) + (_2059 * _2026);
        float _2075 = ((_2061 * _1825) + (_2057 * _2034)) + (_2059 * _2027);
        float _2076 = ((_2061 * _1826) + (_2057 * _2037)) + (_2059 * _2028);
        _73._m0 = 1u;
        uvec4 _2080 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2081 = _2080.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2081, _2080.w, _2081, vec3(_1838, _1839, _1840), 9.9999997473787516355514526367188e-05, vec3(_2074, _2075, _2076), 10000.0, 1);
        float _2087 = dot(vec3(_1824, _1825, _1826), vec3(_2074, _2075, _2076));
        float _2463 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
        float _2090 = isnan(1.0) ? _2463 : (isnan(_2463) ? 1.0 : min(_2463, 1.0));
        _2039 = ((float(_73._m0 == 0u) * _2090) / (_2090 * 0.3183098733425140380859375)) + _2038;
        uint _2041 = _2040 + 1u;
        if (_2041 == 32u)
        {
            break;
        }
        else
        {
            _2038 = _2039;
            _2040 = _2041;
            continue;
        }
    }
    float _2098 = _2039 * 0.009947183541953563690185546875;
    float _2103 = dot(vec3(_1721, _1722, _1723), vec3(_1824, _1825, _1826)) * 2.0;
    vec4 _2117 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1721 - (_2103 * _1824), _1722 - (_2103 * _1825), _1723 - (_2103 * _1826)), 4.0 - (_1704 * 4.0));
    float _2122 = dot(vec3(_1841, _1843, _1844), vec3(_1824, _1825, _1826));
    float _2474 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
    float _2132 = exp2(log2(1.0 - (isnan(1.0) ? _2474 : (isnan(_2474) ? 1.0 : min(_2474, 1.0)))) * 5.0);
    vec4 _2144 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1824, _1825, _1826), 0.0);
    float _2155 = (_2008 + _2005) + (((_2144.x * _1096) + (((_2132 * (1.0 - _1402)) + _1402) * _2117.x)) * _2098);
    float _2159 = (_2009 + _2006) + (((_2144.y * _1097) + (((_2132 * (1.0 - _1403)) + _1403) * _2117.y)) * _2098);
    float _2163 = (_2010 + _2007) + (((_2144.z * _1098) + (((_2132 * (1.0 - _1404)) + _1404) * _2117.z)) * _2098);
    float _2485 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _2496 = isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0));
    float _2507 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    bool _2171 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2182;
    _2182.x = _2171 ? ((_605 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0)));
    _2182.y = _2171 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2496 : (isnan(_2496) ? 1.0 : min(_2496, 1.0)));
    _2182.z = _2171 ? ((_611 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2507 : (isnan(_2507) ? 1.0 : min(_2507, 1.0)));
    payload._m0 = _2182;
}


