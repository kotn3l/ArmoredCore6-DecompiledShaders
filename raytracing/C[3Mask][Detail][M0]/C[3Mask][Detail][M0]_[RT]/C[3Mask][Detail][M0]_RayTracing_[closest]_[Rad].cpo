#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _60
{
    vec3 _m0;
};

struct _64
{
    vec2 _m0;
};

struct _67
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _60 payload;
hitAttributeEXT _64 hit;
layout(location = 1) rayPayloadEXT _67 _69;
layout(location = 2) rayPayloadEXT _67 _70;

vec3 _1960;

void main()
{
    float _78 = float(gl_LaunchSizeEXT.y);
    float _108 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _109 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _117 = sqrt(((_109 * _109) + (_108 * _108)) + (_110 * _110)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _78)))));
    uvec4 _128 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _129 = _128.y;
    uint _169;
    uint _171;
    uint _172;
    if (_128.x == 0u)
    {
        uint _137 = (_129 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _146 = uvec3(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_137 + 2u)).x);
        _169 = _146.x;
        _171 = _146.y;
        _172 = _146.z;
    }
    else
    {
        uint _150 = uint(gl_PrimitiveID) * 6u;
        uint _152 = _150 & 4294967292u;
        uint _155 = (_129 + _152) >> 2u;
        uvec2 _162 = uvec2(texelFetch(l_geomIndexBuffer, int(_155)).x, texelFetch(l_geomIndexBuffer, int(_155 + 1u)).x);
        uint _163 = _162.x;
        uint _164 = _162.y;
        uint _166 = _163 >> 16u;
        uint _167 = _164 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_152 == _150)
        {
            frontier_phi_3_2_ladder = _166;
            frontier_phi_3_2_ladder_1 = _163 & 65535u;
            frontier_phi_3_2_ladder_2 = _167;
        }
        else
        {
            frontier_phi_3_2_ladder = _167;
            frontier_phi_3_2_ladder_1 = _166;
            frontier_phi_3_2_ladder_2 = _164 >> 16u;
        }
        _169 = frontier_phi_3_2_ladder_1;
        _171 = frontier_phi_3_2_ladder;
        _172 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _176 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _177 = _176.x;
    uint _178 = _176.z;
    bool _179 = _178 != 0u;
    bool _181 = _128.w == 0u;
    bool _182 = _179 || _181;
    uint _183 = _177 * _169;
    uint _184 = _183 + 12u;
    uint _208;
    uint _209;
    uint _210;
    uint _211;
    if (_182)
    {
        uvec4 _187 = texelFetch(l_geomAttrib_0, int(_184 >> 2u));
        uint _188 = _187.x;
        _208 = _188 & 255u;
        _209 = (_188 >> 8u) & 255u;
        _210 = (_188 >> 16u) & 255u;
        _211 = 16u;
    }
    else
    {
        uint _196 = _184 >> 2u;
        uvec2 _202 = uvec2(texelFetch(l_geomAttrib_0, int(_196)).x, texelFetch(l_geomAttrib_0, int(_196 + 1u)).x);
        uint _203 = _202.x;
        _208 = _203 & 65535u;
        _209 = _203 >> 16u;
        _210 = _202.y & 65535u;
        _211 = 20u;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((_211 + _183) >> 2u));
    uint _219 = _218.x;
    bool _233 = _178 == 0u;
    uint _234;
    if (_233)
    {
        _234 = _211 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_181)
        {
            frontier_phi_9_10_ladder = _211 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _211 + 12u;
        }
        _234 = frontier_phi_9_10_ladder;
    }
    uvec4 _242 = texelFetch(l_geomAttrib_0, int(((_183 + 4u) + (_179 ? (_234 + 4u) : _234)) >> 2u));
    uint _243 = _242.x;
    float _247 = float(int(uint(int(_243 << 16u) >> int(16u))));
    float _248 = float(int(uint(int(_243) >> int(16u))));
    uint _249 = _177 * _171;
    uint _250 = _249 + 12u;
    uint _271;
    uint _272;
    uint _273;
    uint _274;
    if (_182)
    {
        uvec4 _252 = texelFetch(l_geomAttrib_0, int(_250 >> 2u));
        uint _253 = _252.x;
        _271 = _253 & 255u;
        _272 = (_253 >> 8u) & 255u;
        _273 = (_253 >> 16u) & 255u;
        _274 = 16u;
    }
    else
    {
        uint _259 = _250 >> 2u;
        uvec2 _265 = uvec2(texelFetch(l_geomAttrib_0, int(_259)).x, texelFetch(l_geomAttrib_0, int(_259 + 1u)).x);
        uint _266 = _265.x;
        _271 = _266 & 65535u;
        _272 = _266 >> 16u;
        _273 = _265.y & 65535u;
        _274 = 20u;
    }
    uvec4 _280 = texelFetch(l_geomAttrib_0, int((_274 + _249) >> 2u));
    uint _281 = _280.x;
    uint _293;
    if (_233)
    {
        _293 = _274 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_181)
        {
            frontier_phi_16_17_ladder = _274 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _274 + 12u;
        }
        _293 = frontier_phi_16_17_ladder;
    }
    uvec4 _301 = texelFetch(l_geomAttrib_0, int(((_249 + 4u) + (_179 ? (_293 + 4u) : _293)) >> 2u));
    uint _302 = _301.x;
    float _306 = float(int(uint(int(_302 << 16u) >> int(16u))));
    float _307 = float(int(uint(int(_302) >> int(16u))));
    uint _308 = _177 * _172;
    uint _309 = _308 + 12u;
    uint _330;
    uint _331;
    uint _332;
    uint _333;
    if (_182)
    {
        uvec4 _311 = texelFetch(l_geomAttrib_0, int(_309 >> 2u));
        uint _312 = _311.x;
        _330 = _312 & 255u;
        _331 = (_312 >> 8u) & 255u;
        _332 = (_312 >> 16u) & 255u;
        _333 = 16u;
    }
    else
    {
        uint _318 = _309 >> 2u;
        uvec2 _324 = uvec2(texelFetch(l_geomAttrib_0, int(_318)).x, texelFetch(l_geomAttrib_0, int(_318 + 1u)).x);
        uint _325 = _324.x;
        _330 = _325 & 65535u;
        _331 = _325 >> 16u;
        _332 = _324.y & 65535u;
        _333 = 20u;
    }
    uvec4 _339 = texelFetch(l_geomAttrib_0, int((_333 + _308) >> 2u));
    uint _340 = _339.x;
    uint _352;
    if (_233)
    {
        _352 = _333 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_181)
        {
            frontier_phi_23_24_ladder = _333 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _333 + 12u;
        }
        _352 = frontier_phi_23_24_ladder;
    }
    uvec4 _360 = texelFetch(l_geomAttrib_0, int(((_308 + 4u) + (_179 ? (_352 + 4u) : _352)) >> 2u));
    uint _361 = _360.x;
    float _365 = float(int(uint(int(_361 << 16u) >> int(16u))));
    float _366 = float(int(uint(int(_361) >> int(16u))));
    bool _368 = _128.z == 0u;
    float _404;
    float _405;
    float _406;
    if (_368)
    {
        uint _371 = _169 * 3u;
        uvec3 _380 = uvec3(texelFetch(l_geomPositionBuffer, int(_371)).x, texelFetch(l_geomPositionBuffer, int(_371 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_371 + 2u)).x);
        _404 = uintBitsToFloat(_380.x);
        _405 = uintBitsToFloat(_380.y);
        _406 = uintBitsToFloat(_380.z);
    }
    else
    {
        uint _388 = _169 * 2u;
        uvec2 _394 = uvec2(texelFetch(l_geomPositionBuffer, int(_388)).x, texelFetch(l_geomPositionBuffer, int(_388 + 1u)).x);
        uint _395 = _394.x;
        _404 = unpackHalf2x16(_395).x;
        _405 = unpackHalf2x16(_395 >> 16u).x;
        _406 = unpackHalf2x16(_394.y).x;
    }
    float _442;
    float _443;
    float _444;
    if (_368)
    {
        uint _409 = _171 * 3u;
        uvec3 _418 = uvec3(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_409 + 2u)).x);
        _442 = uintBitsToFloat(_418.x);
        _443 = uintBitsToFloat(_418.y);
        _444 = uintBitsToFloat(_418.z);
    }
    else
    {
        uint _426 = _171 * 2u;
        uvec2 _432 = uvec2(texelFetch(l_geomPositionBuffer, int(_426)).x, texelFetch(l_geomPositionBuffer, int(_426 + 1u)).x);
        uint _433 = _432.x;
        _442 = unpackHalf2x16(_433).x;
        _443 = unpackHalf2x16(_433 >> 16u).x;
        _444 = unpackHalf2x16(_432.y).x;
    }
    float _480;
    float _481;
    float _482;
    if (_368)
    {
        uint _447 = _172 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _172 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _485 = (1.0 - hit._m0.x) - hit._m0.y;
    float _519 = (_306 - _247) * 0.00048828125;
    float _521 = (_307 - _248) * 0.00048828125;
    float _524 = (_365 - _247) * 0.00048828125;
    float _525 = (_366 - _248) * 0.00048828125;
    float _547 = _442 - _404;
    float _548 = _443 - _405;
    float _549 = _444 - _406;
    float _552 = fma(_549, gl_ObjectToWorldEXT[2u].x, fma(_548, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _547));
    float _555 = fma(_549, gl_ObjectToWorldEXT[2u].y, fma(_548, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _547));
    float _558 = fma(_549, gl_ObjectToWorldEXT[2u].z, fma(_548, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _547));
    float _559 = _480 - _404;
    float _560 = _481 - _405;
    float _561 = _482 - _406;
    float _564 = fma(_561, gl_ObjectToWorldEXT[2u].x, fma(_560, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _559));
    float _567 = fma(_561, gl_ObjectToWorldEXT[2u].y, fma(_560, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _559));
    float _570 = fma(_561, gl_ObjectToWorldEXT[2u].z, fma(_560, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _559));
    float _571 = (((_306 * hit._m0.x) + (_247 * _485)) + (_365 * hit._m0.y)) * 0.00048828125;
    float _572 = (((_307 * hit._m0.x) + (_248 * _485)) + (_366 * hit._m0.y)) * 0.00048828125;
    float _576 = (((float(_208) * _485) + (-127.0)) + (float(_271) * hit._m0.x)) + (float(_330) * hit._m0.y);
    float _579 = (((float(_209) * _485) + (-127.0)) + (float(_272) * hit._m0.x)) + (float(_331) * hit._m0.y);
    float _582 = (((float(_210) * _485) + (-127.0)) + (float(_273) * hit._m0.x)) + (float(_332) * hit._m0.y);
    float _583 = _576 * 0.0078740157186985015869140625;
    float _585 = _579 * 0.0078740157186985015869140625;
    float _586 = _582 * 0.0078740157186985015869140625;
    float _599 = ((((float(_219 & 255u) * _485) + (-127.0)) + (float(_281 & 255u) * hit._m0.x)) + (float(_340 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _600 = ((((float((_219 >> 8u) & 255u) * _485) + (-127.0)) + (float((_281 >> 8u) & 255u) * hit._m0.x)) + (float((_340 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _601 = ((((float((_219 >> 16u) & 255u) * _485) + (-127.0)) + (float((_281 >> 16u) & 255u) * hit._m0.x)) + (float((_340 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _602 = ((((float(_219 >> 24u) * _485) + (-127.0)) + (float(_281 >> 24u) * hit._m0.x)) + (float(_340 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _612 = ((_600 * _586) - (_601 * _585)) * _602;
    float _613 = ((_601 * _583) - (_599 * _586)) * _602;
    float _614 = ((_599 * _585) - (_600 * _583)) * _602;
    float _618 = inversesqrt(dot(vec3(_612, _613, _614), vec3(_612, _613, _614)));
    uvec2 _639 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_1, int(0u)));
    bool _644 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _697;
    if (_644)
    {
        float _655 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _661 = (_570 * _555) - (_567 * _558);
        float _664 = (_564 * _558) - (_570 * _552);
        float _667 = (_567 * _552) - (_564 * _555);
        float _694 = ((log2((((float(_639.y) * 0.5) * float(_639.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_664 * _664) + (_667 * _667)) + (_661 * _661)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_655 * gl_WorldRayDirectionEXT.x, _655 * gl_WorldRayDirectionEXT.y, _655 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _697 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    }
    else
    {
        _697 = 0.0;
    }
    vec4 _701 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _571) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _572) + cbTextureTilingScale._m0[1u].w), _697);
    float _706 = _701.x * cbMtdParam._m0[10u].x;
    float _707 = _701.y * cbMtdParam._m0[10u].y;
    float _708 = _701.z * cbMtdParam._m0[10u].z;
    uvec2 _726 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_2, int(0u)));
    float _777;
    if (_644)
    {
        float _737 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _743 = (_570 * _555) - (_567 * _558);
        float _746 = (_564 * _558) - (_570 * _552);
        float _749 = (_567 * _552) - (_564 * _555);
        float _775 = ((log2((((float(_726.y) * 0.5) * float(_726.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_746 * _746) + (_749 * _749)) + (_743 * _743)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_737 * gl_WorldRayDirectionEXT.x, _737 * gl_WorldRayDirectionEXT.y, _737 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _777 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    }
    else
    {
        _777 = 0.0;
    }
    vec4 _779 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _571) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _572) + cbTextureTilingScale._m0[7u].w), _777);
    uvec2 _805 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_0, int(0u)));
    float _856;
    if (_644)
    {
        float _816 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _822 = (_570 * _555) - (_567 * _558);
        float _825 = (_564 * _558) - (_570 * _552);
        float _828 = (_567 * _552) - (_564 * _555);
        float _854 = ((log2((((float(_805.y) * 0.5) * float(_805.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_825 * _825) + (_828 * _828)) + (_822 * _822)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_816 * gl_WorldRayDirectionEXT.x, _816 * gl_WorldRayDirectionEXT.y, _816 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _856 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    }
    else
    {
        _856 = 0.0;
    }
    uvec2 _876 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_3, int(0u)));
    float _927;
    if (_644)
    {
        float _887 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _893 = (_570 * _555) - (_567 * _558);
        float _896 = (_564 * _558) - (_570 * _552);
        float _899 = (_567 * _552) - (_564 * _555);
        float _925 = ((log2((((float(_876.y) * 0.5) * float(_876.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_896 * _896) + (_899 * _899)) + (_893 * _893)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_887 * gl_WorldRayDirectionEXT.x, _887 * gl_WorldRayDirectionEXT.y, _887 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _927 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    }
    else
    {
        _927 = 0.0;
    }
    float _932 = cbMtdParam._m0[18u].y * textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _571) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _572) + cbTextureTilingScale._m0[9u].w), _927).x;
    float _942 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[18u].z * _571) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].w * _572) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _856).x) * 2.0) - _932)) + 1.0;
    float _2076 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _943 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
    float _950 = (_943 * ((_779.x * cbMtdParam._m0[11u].x) - _706)) + _706;
    float _951 = (_943 * ((_779.y * cbMtdParam._m0[11u].y) - _707)) + _707;
    float _952 = (_943 * ((_779.z * cbMtdParam._m0[11u].z) - _708)) + _708;
    uvec2 _970 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_8, int(0u)));
    float _1021;
    if (_644)
    {
        float _981 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _987 = (_570 * _555) - (_567 * _558);
        float _990 = (_564 * _558) - (_570 * _552);
        float _993 = (_567 * _552) - (_564 * _555);
        float _1019 = ((log2((((float(_970.y) * 0.5) * float(_970.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_990 * _990) + (_993 * _993)) + (_987 * _987)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_981 * gl_WorldRayDirectionEXT.x, _981 * gl_WorldRayDirectionEXT.y, _981 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1021 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    }
    else
    {
        _1021 = 0.0;
    }
    vec4 _1023 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _571) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _572) + cbTextureTilingScale._m0[13u].w), _1021);
    float _1092;
    if (_644)
    {
        float _1052 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1058 = (_570 * _555) - (_567 * _558);
        float _1061 = (_564 * _558) - (_570 * _552);
        float _1064 = (_567 * _552) - (_564 * _555);
        float _1090 = ((log2((((float(_805.y) * 0.5) * float(_805.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1061 * _1061) + (_1064 * _1064)) + (_1058 * _1058)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1052 * gl_WorldRayDirectionEXT.x, _1052 * gl_WorldRayDirectionEXT.y, _1052 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1092 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    }
    else
    {
        _1092 = 0.0;
    }
    float _1106 = ((cbMtdParam._m0[17u].w * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].x * _571) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].y * _572) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1092).y) * 2.0) - _932)) + 1.0;
    float _2097 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1107 = isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0));
    float _1114 = (_1107 * ((_1023.x * cbMtdParam._m0[12u].x) - _950)) + _950;
    float _1115 = (_1107 * ((_1023.y * cbMtdParam._m0[12u].y) - _951)) + _951;
    float _1116 = (_1107 * ((_1023.z * cbMtdParam._m0[12u].z) - _952)) + _952;
    uvec2 _1133 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_11, int(0u)));
    float _1184;
    if (_644)
    {
        float _1144 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1150 = (_570 * _555) - (_567 * _558);
        float _1153 = (_564 * _558) - (_570 * _552);
        float _1156 = (_567 * _552) - (_564 * _555);
        float _1182 = ((log2((((float(_1133.y) * 0.5) * float(_1133.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1153 * _1153) + (_1156 * _1156)) + (_1150 * _1150)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1144 * gl_WorldRayDirectionEXT.x, _1144 * gl_WorldRayDirectionEXT.y, _1144 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1184 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    }
    else
    {
        _1184 = 0.0;
    }
    vec4 _1186 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _571) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _572) + cbTextureTilingScale._m0[2u].w), _1184);
    float _1252;
    if (_644)
    {
        float _1212 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1218 = (_570 * _555) - (_567 * _558);
        float _1221 = (_564 * _558) - (_570 * _552);
        float _1224 = (_567 * _552) - (_564 * _555);
        float _1250 = ((log2((((float(_805.y) * 0.5) * float(_805.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1221 * _1221) + (_1224 * _1224)) + (_1218 * _1218)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1212 * gl_WorldRayDirectionEXT.x, _1212 * gl_WorldRayDirectionEXT.y, _1212 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1252 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
    }
    else
    {
        _1252 = 0.0;
    }
    float _1263 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * (((1.0 - textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].z * _571) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].w * _572) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1252).z) * 2.0) - _932)) + 1.0;
    float _2118 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
    float _1264 = isnan(1.0) ? _2118 : (isnan(_2118) ? 1.0 : min(_2118, 1.0));
    float _1271 = (_1264 * ((_1186.x * cbMtdParam._m0[13u].x) - _1114)) + _1114;
    float _1272 = (_1264 * ((_1186.y * cbMtdParam._m0[13u].y) - _1115)) + _1115;
    float _1273 = (_1264 * ((_1186.z * cbMtdParam._m0[13u].z) - _1116)) + _1116;
    uvec2 _1285 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_6, int(0u)));
    float _1336;
    if (_644)
    {
        float _1296 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1302 = (_570 * _555) - (_567 * _558);
        float _1305 = (_564 * _558) - (_570 * _552);
        float _1308 = (_567 * _552) - (_564 * _555);
        float _1334 = ((log2((((float(_1285.y) * 0.5) * float(_1285.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1305 * _1305) + (_1308 * _1308)) + (_1302 * _1302)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1296 * gl_WorldRayDirectionEXT.x, _1296 * gl_WorldRayDirectionEXT.y, _1296 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1336 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
    }
    else
    {
        _1336 = 0.0;
    }
    vec4 _1339 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _571) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _572) + cbTextureTilingScale._m0[11u].w), _1336);
    uvec2 _1357 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_5, int(0u)));
    float _1408;
    if (_644)
    {
        float _1368 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1374 = (_570 * _555) - (_567 * _558);
        float _1377 = (_564 * _558) - (_570 * _552);
        float _1380 = (_567 * _552) - (_564 * _555);
        float _1406 = ((log2((((float(_1357.y) * 0.5) * float(_1357.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1377 * _1377) + (_1380 * _1380)) + (_1374 * _1374)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1368 * gl_WorldRayDirectionEXT.x, _1368 * gl_WorldRayDirectionEXT.y, _1368 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1408 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
    }
    else
    {
        _1408 = 0.0;
    }
    vec4 _1410 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _571) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _572) + cbTextureTilingScale._m0[10u].w), _1408);
    float _1412 = _1410.x;
    float _1413 = _1410.y;
    float _1418 = cbMtdParam._m0[16u].w * _1410.z;
    float _1421 = (((cbMtdParam._m0[17u].x * _1339.z) - _1418) * _943) + _1418;
    uvec2 _1434 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_15, int(0u)));
    float _1485;
    if (_644)
    {
        float _1445 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1451 = (_570 * _555) - (_567 * _558);
        float _1454 = (_564 * _558) - (_570 * _552);
        float _1457 = (_567 * _552) - (_564 * _555);
        float _1483 = ((log2((((float(_1434.y) * 0.5) * float(_1434.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1454 * _1454) + (_1457 * _1457)) + (_1451 * _1451)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1445 * gl_WorldRayDirectionEXT.x, _1445 * gl_WorldRayDirectionEXT.y, _1445 * gl_WorldRayDirectionEXT.z), vec3(_583, _585, _586))));
        _1485 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
    }
    else
    {
        _1485 = 0.0;
    }
    vec4 _1487 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _571) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _572) + cbTextureTilingScale._m0[5u].w), _1485);
    float _1496 = (((cbMtdParam._m0[17u].y * _1487.z) - _1421) * _1107) + _1421;
    uvec2 _1508 = uvec2(textureSize(C_3Mask_Detail_M0_snp_0_Texture2D_16, int(0u)));
    float _1512 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1513 = _1512 * gl_WorldRayDirectionEXT.x;
    float _1514 = _1512 * gl_WorldRayDirectionEXT.y;
    float _1515 = _1512 * gl_WorldRayDirectionEXT.z;
    float _1559;
    if (_644)
    {
        float _1525 = (_570 * _555) - (_567 * _558);
        float _1528 = (_564 * _558) - (_570 * _552);
        float _1531 = (_567 * _552) - (_564 * _555);
        float _1557 = ((log2((((float(_1508.y) * 0.5) * float(_1508.x)) * abs((_525 * _519) - (_524 * _521))) / (sqrt(((_1528 * _1528) + (_1531 * _1531)) + (_1525 * _1525)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_117) / abs(dot(vec3(_1513, _1514, _1515), vec3(_583, _585, _586))));
        _1559 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
    }
    else
    {
        _1559 = 0.0;
    }
    vec4 _1561 = textureLod(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _571) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _572) + cbTextureTilingScale._m0[6u].w), _1559);
    float _1570 = (((cbMtdParam._m0[17u].z * _1561.z) - _1496) * _1264) + _1496;
    float _1575 = ((_1339.x - _1412) * _943) + _1412;
    float _1576 = ((_1339.y - _1413) * _943) + _1413;
    float _1581 = ((_1487.x - _1575) * _1107) + _1575;
    float _1582 = ((_1487.y - _1576) * _1107) + _1576;
    float _1591 = ((((_1561.x - _1581) * _1264) + _1581) * 2.0) + (-1.0);
    float _1593 = ((((_1561.y - _1582) * _1264) + _1582) * 2.0) + (-1.0);
    float _1594 = dot(vec2(_1591, _1593), vec2(_1591, _1593));
    float _2149 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
    float _1599 = sqrt(1.0 - (isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0))));
    float _1602 = fma(_1599, _583, fma(_1593, _599, (_618 * _612) * _1591));
    float _1605 = fma(_1599, _585, fma(_1593, _600, (_618 * _613) * _1591));
    float _1608 = fma(_1599, _586, fma(_1593, _601, (_618 * _614) * _1591));
    float _1612 = inversesqrt(dot(vec3(_1602, _1605, _1608), vec3(_1602, _1605, _1608)));
    float _1613 = _1612 * _1602;
    float _1614 = _1612 * _1605;
    float _1615 = _1612 * _1608;
    float _1627 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1628 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1629 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1630 = (-0.0) - _1513;
    float _1632 = (-0.0) - _1514;
    float _1633 = (-0.0) - _1515;
    float _1639 = float(gl_LaunchIDEXT.x);
    float _1640 = float(gl_LaunchIDEXT.y);
    float _1643 = float(gl_LaunchSizeEXT.x);
    float _1657 = fract(fract(sin(dot(vec2(_1639 / _1643, _1640 / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1670 = fract(fract(sin(dot(vec2((_1639 + 128.0) / _1643, (_1640 + 128.0) / _78), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _70._m0 = 1u;
    uvec4 _1680 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1681 = _1680.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1681, _1680.w, _1681, vec3(_1627, _1628, _1629), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    float _1794;
    if (_70._m0 == 0u)
    {
        float _1701 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1613, _1614, _1615));
        float _2160 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1704 = isnan(1.0) ? _2160 : (isnan(_2160) ? 1.0 : min(_2160, 1.0));
        float _1723 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1570) * 0.949999988079071044921875);
        float _1724 = _1723 * _1723;
        float _1725 = g_sceneCB._m0[4u].x - _1513;
        float _1726 = g_sceneCB._m0[4u].y - _1514;
        float _1727 = g_sceneCB._m0[4u].z - _1515;
        float _1731 = inversesqrt(dot(vec3(_1725, _1726, _1727), vec3(_1725, _1726, _1727)));
        float _1732 = _1731 * _1725;
        float _1733 = _1731 * _1726;
        float _1734 = _1731 * _1727;
        float _1735 = dot(vec3(_1613, _1614, _1615), vec3(g_sceneCB._m0[4u].xyz));
        float _2171 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1738 = isnan(1.0) ? _2171 : (isnan(_2171) ? 1.0 : min(_2171, 1.0));
        float _1739 = dot(vec3(_1613, _1614, _1615), vec3(_1630, _1632, _1633));
        float _2182 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1742 = isnan(1.0) ? _2182 : (isnan(_2182) ? 1.0 : min(_2182, 1.0));
        float _1743 = dot(vec3(_1613, _1614, _1615), vec3(_1732, _1733, _1734));
        float _2193 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1746 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        float _1747 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1732, _1733, _1734));
        float _2204 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1751 = _1724 * _1724;
        float _1755 = ((_1746 * _1746) * (_1751 + (-1.0))) + 1.0;
        float _1767 = (exp2(log2(1.0 - (isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1769 = 1.0 - _1724;
        float _1780 = (0.5 / (((_1742 * ((_1738 * _1769) + _1724)) + 9.9999999392252902907785028219223e-09) + (((_1742 * _1769) + _1724) * _1738))) * _1738;
        float _2215 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1782 = (isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0))) * (_1751 / ((_1755 * _1755) * 3.141590118408203125));
        _1789 = ((_1271 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1704;
        _1790 = ((_1272 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1704;
        _1791 = ((_1273 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1704;
        _1792 = (_1767 * g_sceneCB._m0[5u].x) * _1782;
        _1793 = (_1767 * g_sceneCB._m0[5u].y) * _1782;
        _1794 = (_1767 * g_sceneCB._m0[5u].z) * _1782;
    }
    else
    {
        _1789 = 0.0;
        _1790 = 0.0;
        _1791 = 0.0;
        _1792 = 0.0;
        _1793 = 0.0;
        _1794 = 0.0;
    }
    bool _1796 = abs(_1614) < 0.89999997615814208984375;
    float _1798 = float(_1796);
    float _1799 = _1796 ? 0.0 : 1.0;
    float _1802 = (_1798 * _1615) - (_1799 * _1614);
    float _1803 = _1799 * _1613;
    float _1805 = (-0.0) - (_1613 * _1798);
    float _1809 = inversesqrt(dot(vec3(_1802, _1803, _1805), vec3(_1802, _1803, _1805)));
    float _1810 = _1802 * _1809;
    float _1811 = _1803 * _1809;
    float _1812 = _1809 * _1805;
    float _1815 = (_1811 * _1615) - (_1812 * _1614);
    float _1818 = (_1812 * _1613) - (_1810 * _1615);
    float _1821 = (_1810 * _1614) - (_1811 * _1613);
    float _1823;
    float _1831;
    float _1822 = 0.0;
    uint _1824 = 0u;
    float _1828;
    bool _1830;
    for (;;)
    {
        _1828 = (float(_1824) + _1657) * 0.03125;
        _1830 = _1824 == 0u;
        float frontier_phi_63_pred;
        if (_1830)
        {
            frontier_phi_63_pred = 0.0;
        }
        else
        {
            float _1965;
            float _1966;
            uint _1968;
            _1965 = 0.0;
            _1966 = 0.5;
            _1968 = _1824;
            float _1832;
            for (;;)
            {
                _1832 = ((_1968 & 1u) != 0u) ? (_1966 + _1965) : _1965;
                uint _1969 = _1968 >> 1u;
                if (_1969 == 0u)
                {
                    break;
                }
                else
                {
                    _1965 = _1832;
                    _1966 *= 0.5;
                    _1968 = _1969;
                }
            }
            frontier_phi_63_pred = _1832;
        }
        _1831 = frontier_phi_63_pred;
        float _1833 = _1831 + _1670;
        float _1837 = sqrt(_1828);
        float _1838 = ((_1833 > 1.0) ? (_1833 + (-1.0)) : _1833) * 6.283185482025146484375;
        float _1841 = cos(_1838) * _1837;
        float _1843 = sin(_1838) * _1837;
        float _1845 = sqrt(1.0 - _1828);
        float _1858 = ((_1845 * _1613) + (_1841 * _1815)) + (_1843 * _1810);
        float _1859 = ((_1845 * _1614) + (_1841 * _1818)) + (_1843 * _1811);
        float _1860 = ((_1845 * _1615) + (_1841 * _1821)) + (_1843 * _1812);
        _69._m0 = 1u;
        uvec4 _1864 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1865 = _1864.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1865, _1864.w, _1865, vec3(_1627, _1628, _1629), 9.9999997473787516355514526367188e-05, vec3(_1858, _1859, _1860), 10000.0, 1);
        float _1871 = dot(vec3(_1613, _1614, _1615), vec3(_1858, _1859, _1860));
        float _2226 = isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0));
        float _1874 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
        _1823 = ((float(_69._m0 == 0u) * _1874) / (_1874 * 0.3183098733425140380859375)) + _1822;
        uint _1825 = _1824 + 1u;
        if (_1825 == 32u)
        {
            break;
        }
        else
        {
            _1822 = _1823;
            _1824 = _1825;
            continue;
        }
    }
    float _1882 = _1823 * 0.009947183541953563690185546875;
    float _1887 = dot(vec3(_1513, _1514, _1515), vec3(_1613, _1614, _1615)) * 2.0;
    vec4 _1901 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1513 - (_1887 * _1613), _1514 - (_1887 * _1614), _1515 - (_1887 * _1615)), 4.0 - (_1570 * 4.0));
    float _1906 = dot(vec3(_1630, _1632, _1633), vec3(_1613, _1614, _1615));
    float _2237 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
    float _1915 = (exp2(log2(1.0 - (isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1921 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1613, _1614, _1615), 0.0);
    float _1932 = (_1792 + _1789) + (((_1921.x * _1271) + (_1915 * _1901.x)) * _1882);
    float _1936 = (_1793 + _1790) + (((_1921.y * _1272) + (_1915 * _1901.y)) * _1882);
    float _1940 = (_1794 + _1791) + (((_1921.z * _1273) + (_1915 * _1901.z)) * _1882);
    float _2248 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
    float _2259 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
    float _2270 = isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0));
    bool _1948 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1959;
    _1959.x = _1948 ? ((_576 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0)));
    _1959.y = _1948 ? ((_579 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0)));
    _1959.z = _1948 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0)));
    payload._m0 = _1959;
}


