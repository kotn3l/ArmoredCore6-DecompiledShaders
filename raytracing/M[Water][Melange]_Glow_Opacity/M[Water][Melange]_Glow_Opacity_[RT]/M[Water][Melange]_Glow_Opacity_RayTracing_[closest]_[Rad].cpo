#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[39];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_Glow_Opacity_snp_0_Texture2D_9;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

uint _188;
uint _300;
uint _401;
vec3 _2446;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _182 * _174;
    uint _185 = _183 >> 2u;
    uvec3 _192 = uvec3(texelFetch(l_geomAttrib_0, int(_185)).x, _188, texelFetch(l_geomAttrib_0, int(_185 + 2u)).x);
    uint _197 = _181.z;
    bool _198 = _197 != 0u;
    bool _200 = _133.w == 0u;
    bool _201 = _198 || _200;
    uint _202 = _183 + 12u;
    uint _225;
    uint _226;
    uint _227;
    uint _228;
    if (_201)
    {
        uvec4 _204 = texelFetch(l_geomAttrib_0, int(_202 >> 2u));
        uint _205 = _204.x;
        _225 = _205 & 255u;
        _226 = (_205 >> 8u) & 255u;
        _227 = (_205 >> 16u) & 255u;
        _228 = 16u;
    }
    else
    {
        uint _213 = _202 >> 2u;
        uvec2 _219 = uvec2(texelFetch(l_geomAttrib_0, int(_213)).x, texelFetch(l_geomAttrib_0, int(_213 + 1u)).x);
        uint _220 = _219.x;
        _225 = _220 & 65535u;
        _226 = _220 >> 16u;
        _227 = _219.y & 65535u;
        _228 = 20u;
    }
    uvec4 _235 = texelFetch(l_geomAttrib_0, int((_228 + _183) >> 2u));
    uint _236 = _235.x;
    bool _250 = _197 == 0u;
    uint _251;
    if (_250)
    {
        _251 = _228 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_200)
        {
            frontier_phi_9_10_ladder = _228 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _228 + 12u;
        }
        _251 = frontier_phi_9_10_ladder;
    }
    uint _255 = _198 ? (_251 + 4u) : _251;
    uvec4 _259 = texelFetch(l_geomAttrib_0, int(((_183 + 4u) + _255) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uvec4 _269 = texelFetch(l_geomAttrib_0, int(((_183 + 8u) + _255) >> 2u));
    uint _270 = _269.x;
    uvec4 _286 = texelFetch(l_geomAttrib_0, int(((_183 + 16u) + _255) >> 2u));
    uint _287 = _286.x;
    uint _296 = _182 * _176;
    uint _297 = _296 >> 2u;
    uvec3 _304 = uvec3(texelFetch(l_geomAttrib_0, int(_297)).x, _300, texelFetch(l_geomAttrib_0, int(_297 + 2u)).x);
    uint _309 = _296 + 12u;
    uint _330;
    uint _331;
    uint _332;
    uint _333;
    if (_201)
    {
        uvec4 _311 = texelFetch(l_geomAttrib_0, int(_309 >> 2u));
        uint _312 = _311.x;
        _330 = _312 & 255u;
        _331 = (_312 >> 8u) & 255u;
        _332 = (_312 >> 16u) & 255u;
        _333 = 16u;
    }
    else
    {
        uint _318 = _309 >> 2u;
        uvec2 _324 = uvec2(texelFetch(l_geomAttrib_0, int(_318)).x, texelFetch(l_geomAttrib_0, int(_318 + 1u)).x);
        uint _325 = _324.x;
        _330 = _325 & 65535u;
        _331 = _325 >> 16u;
        _332 = _324.y & 65535u;
        _333 = 20u;
    }
    uvec4 _339 = texelFetch(l_geomAttrib_0, int((_333 + _296) >> 2u));
    uint _340 = _339.x;
    uint _352;
    if (_250)
    {
        _352 = _333 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_200)
        {
            frontier_phi_16_17_ladder = _333 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _333 + 12u;
        }
        _352 = frontier_phi_16_17_ladder;
    }
    uint _356 = _198 ? (_352 + 4u) : _352;
    uvec4 _360 = texelFetch(l_geomAttrib_0, int(((_296 + 4u) + _356) >> 2u));
    uint _361 = _360.x;
    float _365 = float(int(uint(int(_361 << 16u) >> int(16u))));
    float _366 = float(int(uint(int(_361) >> int(16u))));
    uvec4 _370 = texelFetch(l_geomAttrib_0, int(((_296 + 8u) + _356) >> 2u));
    uint _371 = _370.x;
    uvec4 _387 = texelFetch(l_geomAttrib_0, int(((_296 + 16u) + _356) >> 2u));
    uint _388 = _387.x;
    uint _397 = _182 * _177;
    uint _398 = _397 >> 2u;
    uvec3 _405 = uvec3(texelFetch(l_geomAttrib_0, int(_398)).x, _401, texelFetch(l_geomAttrib_0, int(_398 + 2u)).x);
    uint _410 = _397 + 12u;
    uint _431;
    uint _432;
    uint _433;
    uint _434;
    if (_201)
    {
        uvec4 _412 = texelFetch(l_geomAttrib_0, int(_410 >> 2u));
        uint _413 = _412.x;
        _431 = _413 & 255u;
        _432 = (_413 >> 8u) & 255u;
        _433 = (_413 >> 16u) & 255u;
        _434 = 16u;
    }
    else
    {
        uint _419 = _410 >> 2u;
        uvec2 _425 = uvec2(texelFetch(l_geomAttrib_0, int(_419)).x, texelFetch(l_geomAttrib_0, int(_419 + 1u)).x);
        uint _426 = _425.x;
        _431 = _426 & 65535u;
        _432 = _426 >> 16u;
        _433 = _425.y & 65535u;
        _434 = 20u;
    }
    uvec4 _440 = texelFetch(l_geomAttrib_0, int((_434 + _397) >> 2u));
    uint _441 = _440.x;
    uint _453;
    if (_250)
    {
        _453 = _434 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_200)
        {
            frontier_phi_23_24_ladder = _434 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _434 + 12u;
        }
        _453 = frontier_phi_23_24_ladder;
    }
    uint _457 = _198 ? (_453 + 4u) : _453;
    uvec4 _461 = texelFetch(l_geomAttrib_0, int(((_397 + 4u) + _457) >> 2u));
    uint _462 = _461.x;
    float _466 = float(int(uint(int(_462 << 16u) >> int(16u))));
    float _467 = float(int(uint(int(_462) >> int(16u))));
    uvec4 _471 = texelFetch(l_geomAttrib_0, int(((_397 + 8u) + _457) >> 2u));
    uint _472 = _471.x;
    uvec4 _488 = texelFetch(l_geomAttrib_0, int(((_397 + 16u) + _457) >> 2u));
    uint _489 = _488.x;
    bool _499 = _133.z == 0u;
    float _535;
    float _536;
    float _537;
    if (_499)
    {
        uint _502 = _174 * 3u;
        uvec3 _511 = uvec3(texelFetch(l_geomPositionBuffer, int(_502)).x, texelFetch(l_geomPositionBuffer, int(_502 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_502 + 2u)).x);
        _535 = uintBitsToFloat(_511.x);
        _536 = uintBitsToFloat(_511.y);
        _537 = uintBitsToFloat(_511.z);
    }
    else
    {
        uint _519 = _174 * 2u;
        uvec2 _525 = uvec2(texelFetch(l_geomPositionBuffer, int(_519)).x, texelFetch(l_geomPositionBuffer, int(_519 + 1u)).x);
        uint _526 = _525.x;
        _535 = unpackHalf2x16(_526).x;
        _536 = unpackHalf2x16(_526 >> 16u).x;
        _537 = unpackHalf2x16(_525.y).x;
    }
    float _573;
    float _574;
    float _575;
    if (_499)
    {
        uint _540 = _176 * 3u;
        uvec3 _549 = uvec3(texelFetch(l_geomPositionBuffer, int(_540)).x, texelFetch(l_geomPositionBuffer, int(_540 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_540 + 2u)).x);
        _573 = uintBitsToFloat(_549.x);
        _574 = uintBitsToFloat(_549.y);
        _575 = uintBitsToFloat(_549.z);
    }
    else
    {
        uint _557 = _176 * 2u;
        uvec2 _563 = uvec2(texelFetch(l_geomPositionBuffer, int(_557)).x, texelFetch(l_geomPositionBuffer, int(_557 + 1u)).x);
        uint _564 = _563.x;
        _573 = unpackHalf2x16(_564).x;
        _574 = unpackHalf2x16(_564 >> 16u).x;
        _575 = unpackHalf2x16(_563.y).x;
    }
    float _611;
    float _612;
    float _613;
    if (_499)
    {
        uint _578 = _177 * 3u;
        uvec3 _587 = uvec3(texelFetch(l_geomPositionBuffer, int(_578)).x, texelFetch(l_geomPositionBuffer, int(_578 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_578 + 2u)).x);
        _611 = uintBitsToFloat(_587.x);
        _612 = uintBitsToFloat(_587.y);
        _613 = uintBitsToFloat(_587.z);
    }
    else
    {
        uint _595 = _177 * 2u;
        uvec2 _601 = uvec2(texelFetch(l_geomPositionBuffer, int(_595)).x, texelFetch(l_geomPositionBuffer, int(_595 + 1u)).x);
        uint _602 = _601.x;
        _611 = unpackHalf2x16(_602).x;
        _612 = unpackHalf2x16(_602 >> 16u).x;
        _613 = unpackHalf2x16(_601.y).x;
    }
    float _616 = (1.0 - hit._m0.x) - hit._m0.y;
    float _670 = (((float((_371 >> 8u) & 255u) * hit._m0.x) + (float((_270 >> 8u) & 255u) * _616)) + (float((_472 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _697 = (_365 - _264) * 0.00048828125;
    float _699 = (_366 - _265) * 0.00048828125;
    float _702 = (_466 - _264) * 0.00048828125;
    float _703 = (_467 - _265) * 0.00048828125;
    float _725 = _573 - _535;
    float _726 = _574 - _536;
    float _727 = _575 - _537;
    float _730 = fma(_727, gl_ObjectToWorldEXT[2u].x, fma(_726, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _725));
    float _733 = fma(_727, gl_ObjectToWorldEXT[2u].y, fma(_726, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _725));
    float _736 = fma(_727, gl_ObjectToWorldEXT[2u].z, fma(_726, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _725));
    float _737 = _611 - _535;
    float _738 = _612 - _536;
    float _739 = _613 - _537;
    float _742 = fma(_739, gl_ObjectToWorldEXT[2u].x, fma(_738, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _737));
    float _745 = fma(_739, gl_ObjectToWorldEXT[2u].y, fma(_738, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _737));
    float _748 = fma(_739, gl_ObjectToWorldEXT[2u].z, fma(_738, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _737));
    float _749 = (((_365 * hit._m0.x) + (_264 * _616)) + (_466 * hit._m0.y)) * 0.00048828125;
    float _750 = (((_366 * hit._m0.x) + (_265 * _616)) + (_467 * hit._m0.y)) * 0.00048828125;
    float _754 = (((float(_225) * _616) + (-127.0)) + (float(_330) * hit._m0.x)) + (float(_431) * hit._m0.y);
    float _757 = (((float(_226) * _616) + (-127.0)) + (float(_331) * hit._m0.x)) + (float(_432) * hit._m0.y);
    float _760 = (((float(_227) * _616) + (-127.0)) + (float(_332) * hit._m0.x)) + (float(_433) * hit._m0.y);
    float _761 = _754 * 0.0078740157186985015869140625;
    float _763 = _757 * 0.0078740157186985015869140625;
    float _764 = _760 * 0.0078740157186985015869140625;
    float _777 = ((((float(_236 & 255u) * _616) + (-127.0)) + (float(_340 & 255u) * hit._m0.x)) + (float(_441 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _778 = ((((float((_236 >> 8u) & 255u) * _616) + (-127.0)) + (float((_340 >> 8u) & 255u) * hit._m0.x)) + (float((_441 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _779 = ((((float((_236 >> 16u) & 255u) * _616) + (-127.0)) + (float((_340 >> 16u) & 255u) * hit._m0.x)) + (float((_441 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _780 = ((((float(_236 >> 24u) * _616) + (-127.0)) + (float(_340 >> 24u) * hit._m0.x)) + (float(_441 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _790 = ((_778 * _764) - (_779 * _763)) * _780;
    float _791 = ((_779 * _761) - (_777 * _764)) * _780;
    float _792 = ((_777 * _763) - (_778 * _761)) * _780;
    float _796 = inversesqrt(dot(vec3(_790, _791, _792), vec3(_790, _791, _792)));
    float _797 = _796 * _790;
    float _798 = _796 * _791;
    float _799 = _796 * _792;
    float _807 = cbMtdParam._m0[18u].w - cbMtdParam._m0[18u].z;
    float _810 = ((-0.0) - cbMtdParam._m0[18u].z) / (isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0)));
    float _2543 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _821 = isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0));
    float _824 = ((cbMtdParam._m0[18u].x - cbMtdParam._m0[17u].x) * _821) + cbMtdParam._m0[17u].x;
    float _842 = cbMtdParam._m0[20u].w * (cbMtdParam._m0[19u].x + _810);
    float _2554 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _854 = 1.0 - (isnan(cbMtdParam._m0[22u].x) ? 0.0 : (isnan(0.0) ? cbMtdParam._m0[22u].x : max(0.0, cbMtdParam._m0[22u].x)));
    float _871 = (cbMtdParam._m0[25u].x + cbPerFrame._m0[22u].x) * cbMtdParam._m0[17u].y;
    float _879 = cbMtdParam._m0[30u].w * _749;
    float _880 = cbMtdParam._m0[31u].x * _750;
    uvec2 _894 = uvec2(textureSize(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, int(0u)));
    bool _899 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _951;
    if (_899)
    {
        float _910 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _916 = (_748 * _733) - (_745 * _736);
        float _919 = (_742 * _736) - (_748 * _730);
        float _922 = (_745 * _730) - (_742 * _733);
        float _949 = ((log2((((float(_894.y) * 0.5) * float(_894.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_919 * _919) + (_922 * _922)) + (_916 * _916)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_910 * gl_WorldRayDirectionEXT.x, _910 * gl_WorldRayDirectionEXT.y, _910 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _951 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    }
    else
    {
        _951 = 0.0;
    }
    vec4 _955 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, SS_BumpMap), vec2((((_871 * cbMtdParam._m0[31u].w) + _879) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_880 + (_871 * cbMtdParam._m0[32u].x)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _951);
    float _957 = _955.x;
    float _958 = _955.y;
    float _961 = _955.z - _821;
    float _2575 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _962 = isnan(1.0) ? _2575 : (isnan(_2575) ? 1.0 : min(_2575, 1.0));
    float _974 = (_962 * 0.00999999977648258209228515625) + _749;
    float _976 = (_962 * (-0.00999999977648258209228515625)) + _750;
    uvec2 _989 = uvec2(textureSize(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, int(0u)));
    float _1040;
    if (_899)
    {
        float _1000 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1006 = (_748 * _733) - (_745 * _736);
        float _1009 = (_742 * _736) - (_748 * _730);
        float _1012 = (_745 * _730) - (_742 * _733);
        float _1038 = ((log2((((float(_989.y) * 0.5) * float(_989.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1009 * _1009) + (_1012 * _1012)) + (_1006 * _1006)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1000 * gl_WorldRayDirectionEXT.x, _1000 * gl_WorldRayDirectionEXT.y, _1000 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1040 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    }
    else
    {
        _1040 = 0.0;
    }
    vec4 _1042 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_974 + (cbMtdParam._m0[27u].y * _871)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_976 + (cbMtdParam._m0[27u].z * _871)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1040);
    float _1046 = _1042.z;
    float _1110;
    if (_899)
    {
        float _1070 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1076 = (_748 * _733) - (_745 * _736);
        float _1079 = (_742 * _736) - (_748 * _730);
        float _1082 = (_745 * _730) - (_742 * _733);
        float _1108 = ((log2((((float(_989.y) * 0.5) * float(_989.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1079 * _1079) + (_1082 * _1082)) + (_1076 * _1076)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1070 * gl_WorldRayDirectionEXT.x, _1070 * gl_WorldRayDirectionEXT.y, _1070 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1110 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    }
    else
    {
        _1110 = 0.0;
    }
    vec4 _1112 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_974 + (cbMtdParam._m0[26u].w * _871)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_976 + (cbMtdParam._m0[27u].x * _871)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1110);
    float _1116 = _1112.z;
    float _1119 = (_854 - _955.w) + (isnan(_1116) ? _1046 : (isnan(_1046) ? _1116 : max(_1046, _1116)));
    float _2601 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _1121 = (((cbMtdParam._m0[21u].w + ((((float(_371 & 255u) * hit._m0.x) + (float(_270 & 255u) * _616)) + (float(_472 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) - (_854 * cbMtdParam._m0[18u].y)) * (isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0)))) * (isnan(1.0) ? _2601 : (isnan(_2601) ? 1.0 : min(_2601, 1.0)));
    float _1123 = _1121 - (_1121 * ((((float(texelFetch(l_geomAttrib_0, int(((_296 + 12u) + _356) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_183 + 12u) + _255) >> 2u)).x & 255u) * _616)) + (float(texelFetch(l_geomAttrib_0, int(((_397 + 12u) + _457) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125));
    float _1131 = (1.0 - cbMtdParam._m0[24u].z) * (1.0 / cbMtdParam._m0[24u].y);
    float _2612 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _1132 = isnan(1.0) ? _2612 : (isnan(_2612) ? 1.0 : min(_2612, 1.0));
    float _1146 = (cbMtdParam._m0[29u].w * _871) + _879;
    float _1147 = (cbMtdParam._m0[30u].x * _871) + _880;
    float _1154 = cbMtdParam._m0[29u].y * _871;
    float _1155 = cbMtdParam._m0[29u].z * _871;
    float _1170 = (cbTextureTilingScale._m0[3u].x * (_1154 + (_879 * cbMtdParam._m0[31u].y))) + cbTextureTilingScale._m0[3u].z;
    float _1171 = (cbTextureTilingScale._m0[3u].y * (_1155 + (_880 * cbMtdParam._m0[31u].z))) + cbTextureTilingScale._m0[3u].w;
    uvec2 _1173 = uvec2(textureSize(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, int(0u)));
    float _1224;
    if (_899)
    {
        float _1184 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1190 = (_748 * _733) - (_745 * _736);
        float _1193 = (_742 * _736) - (_748 * _730);
        float _1196 = (_745 * _730) - (_742 * _733);
        float _1222 = ((log2((((float(_1173.y) * 0.5) * float(_1173.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1193 * _1193) + (_1196 * _1196)) + (_1190 * _1190)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1184 * gl_WorldRayDirectionEXT.x, _1184 * gl_WorldRayDirectionEXT.y, _1184 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1224 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    }
    else
    {
        _1224 = 0.0;
    }
    vec4 _1226 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2(_1170, _1171), _1224);
    float _1232 = (_1226.x * 2.0) + (-1.0);
    float _1234 = (_1226.y * 2.0) + (-1.0);
    float _1238 = 1.0 - dot(vec2(_1232, _1234), vec2(_1232, _1234));
    float _2628 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _1240 = sqrt(isnan(1.0) ? _2628 : (isnan(_2628) ? 1.0 : min(_2628, 1.0)));
    float _1243 = fma(_1240, _761, fma(_1234, _777, _1232 * _797));
    float _1246 = fma(_1240, _763, fma(_1234, _778, _1232 * _798));
    float _1249 = fma(_1240, _764, fma(_1234, _779, _1232 * _799));
    float _1253 = inversesqrt(dot(vec3(_1243, _1246, _1249), vec3(_1243, _1246, _1249)));
    float _1254 = cbPerFrame._m0[22u].x * 2.0;
    float _1255 = _1254 * cbMtdParam._m0[23u].x;
    float _1263 = (((_1246 * 0.5) * _1253) + (-0.25)) * cbMtdParam._m0[23u].y;
    float _1265 = (-0.0) - (cbMtdParam._m0[23u].y * (((_1243 * 0.5) * _1253) + (-0.25)));
    float _1266 = fract(_1255);
    float _1268 = fract(_1255 + 0.5);
    float _1279 = abs((_1266 * 2.0) + (-1.0));
    vec4 _1298 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1266 * _1265) + _1146) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1263 * _1266) + _1147) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1300 = _1298.x;
    float _1301 = _1298.y;
    float _1302 = _1298.z;
    vec4 _1303 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_1268 * _1265) + _1146) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1263 * _1268) + _1147) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1314 = ((_1303.x - _1300) * _1279) + _1300;
    float _1315 = ((_1303.y - _1301) * _1279) + _1301;
    float _1316 = ((_1303.z - _1302) * _1279) + _1302;
    float _1332 = (cbMtdParam._m0[28u].w * _871) + _879;
    float _1333 = (cbMtdParam._m0[29u].x * _871) + _880;
    float _1386;
    if (_899)
    {
        float _1346 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1352 = (_748 * _733) - (_745 * _736);
        float _1355 = (_742 * _736) - (_748 * _730);
        float _1358 = (_745 * _730) - (_742 * _733);
        float _1384 = ((log2((((float(_1173.y) * 0.5) * float(_1173.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1355 * _1355) + (_1358 * _1358)) + (_1352 * _1352)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1346 * gl_WorldRayDirectionEXT.x, _1346 * gl_WorldRayDirectionEXT.y, _1346 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1386 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
    }
    else
    {
        _1386 = 0.0;
    }
    vec4 _1388 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2(_1170, _1171), _1386);
    float _1394 = (_1388.x * 2.0) + (-1.0);
    float _1395 = (_1388.y * 2.0) + (-1.0);
    float _1399 = 1.0 - dot(vec2(_1394, _1395), vec2(_1394, _1395));
    float _2644 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
    float _1401 = sqrt(isnan(1.0) ? _2644 : (isnan(_2644) ? 1.0 : min(_2644, 1.0)));
    float _1404 = fma(_1401, _761, fma(_1395, _777, _1394 * _797));
    float _1407 = fma(_1401, _763, fma(_1395, _778, _1394 * _798));
    float _1410 = fma(_1401, _764, fma(_1395, _779, _1394 * _799));
    float _1414 = inversesqrt(dot(vec3(_1404, _1407, _1410), vec3(_1404, _1407, _1410)));
    float _1415 = _1254 * cbMtdParam._m0[22u].w;
    float _1422 = (((_1407 * 0.5) * _1414) + (-0.25)) * cbMtdParam._m0[22u].z;
    float _1424 = (-0.0) - (cbMtdParam._m0[22u].z * (((_1404 * 0.5) * _1414) + (-0.25)));
    float _1425 = fract(_1415);
    float _1427 = fract(_1415 + 0.5);
    float _1438 = abs((_1425 * 2.0) + (-1.0));
    vec4 _1455 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1425 * _1424) + _1332) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1422 * _1425) + _1333) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1457 = _1455.x;
    float _1458 = _1455.y;
    float _1459 = _1455.z;
    vec4 _1460 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1427 * _1424) + _1332) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1422 * _1427) + _1333) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1492 = (((((cbMtdParam._m0[14u].x - cbMtdParam._m0[16u].x) * _1314) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[16u].x) * (((_1460.x - _1457) * _1438) + _1457)) + (_1314 * cbMtdParam._m0[15u].x);
    float _1495 = (((((cbMtdParam._m0[14u].y - cbMtdParam._m0[16u].y) * _1315) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[16u].y) * (((_1460.y - _1458) * _1438) + _1458)) + (_1315 * cbMtdParam._m0[15u].y);
    float _1498 = ((((cbMtdParam._m0[25u].y * _1316) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * (((_1460.z - _1459) * _1438) + _1459)) + (_1316 * cbMtdParam._m0[15u].z);
    float _1502 = _1492 - (_1492 * _1132);
    float _1503 = _1495 - (_1495 * _1132);
    float _1504 = _1498 - (_1498 * _1132);
    float _1509 = (1.0 - cbMtdParam._m0[24u].x) * (1.0 / cbMtdParam._m0[23u].w);
    float _2655 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    float _1510 = isnan(1.0) ? _2655 : (isnan(_2655) ? 1.0 : min(_2655, 1.0));
    float _1521 = (cbMtdParam._m0[30u].y * _871) + _879;
    float _1522 = (cbMtdParam._m0[30u].z * _871) + _880;
    float _1533 = (cbTextureTilingScale._m0[3u].x * ((_879 * cbMtdParam._m0[32u].y) + _1154)) + cbTextureTilingScale._m0[3u].z;
    float _1534 = (((_880 * cbMtdParam._m0[32u].z) + _1155) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w;
    float _1585;
    if (_899)
    {
        float _1545 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1551 = (_748 * _733) - (_745 * _736);
        float _1554 = (_742 * _736) - (_748 * _730);
        float _1557 = (_745 * _730) - (_742 * _733);
        float _1583 = ((log2((((float(_1173.y) * 0.5) * float(_1173.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1554 * _1554) + (_1557 * _1557)) + (_1551 * _1551)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1545 * gl_WorldRayDirectionEXT.x, _1545 * gl_WorldRayDirectionEXT.y, _1545 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1585 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
    }
    else
    {
        _1585 = 0.0;
    }
    vec4 _1587 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2(_1533, _1534), _1585);
    float _1593 = (_1587.x * 2.0) + (-1.0);
    float _1594 = (_1587.y * 2.0) + (-1.0);
    float _1598 = 1.0 - dot(vec2(_1593, _1594), vec2(_1593, _1594));
    float _2671 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
    float _1600 = sqrt(isnan(1.0) ? _2671 : (isnan(_2671) ? 1.0 : min(_2671, 1.0)));
    float _1603 = fma(_1600, _761, fma(_1594, _777, _1593 * _797));
    float _1606 = fma(_1600, _763, fma(_1594, _778, _1593 * _798));
    float _1609 = fma(_1600, _764, fma(_1594, _779, _1593 * _799));
    float _1613 = inversesqrt(dot(vec3(_1603, _1606, _1609), vec3(_1603, _1606, _1609)));
    float _1614 = _1254 * cbMtdParam._m0[26u].x;
    float _1621 = (((_1606 * 0.5) * _1613) + (-0.25)) * cbMtdParam._m0[25u].w;
    float _1623 = (-0.0) - (cbMtdParam._m0[25u].w * (((_1603 * 0.5) * _1613) + (-0.25)));
    float _1624 = fract(_1614);
    float _1626 = fract(_1614 + 0.5);
    float _1637 = abs((_1624 * 2.0) + (-1.0));
    vec4 _1654 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1624 * _1623) + _1521) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1621 * _1624) + _1522) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1656 = _1654.x;
    float _1657 = _1654.y;
    float _1658 = _1654.z;
    vec4 _1659 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((_1626 * _1623) + _1521) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1621 * _1626) + _1522) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1670 = ((_1659.x - _1656) * _1637) + _1656;
    float _1671 = ((_1659.y - _1657) * _1637) + _1657;
    float _1672 = ((_1659.z - _1658) * _1637) + _1658;
    float _1732;
    if (_899)
    {
        float _1692 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1698 = (_748 * _733) - (_745 * _736);
        float _1701 = (_742 * _736) - (_748 * _730);
        float _1704 = (_745 * _730) - (_742 * _733);
        float _1730 = ((log2((((float(_1173.y) * 0.5) * float(_1173.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1701 * _1701) + (_1704 * _1704)) + (_1698 * _1698)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1692 * gl_WorldRayDirectionEXT.x, _1692 * gl_WorldRayDirectionEXT.y, _1692 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1732 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
    }
    else
    {
        _1732 = 0.0;
    }
    vec4 _1734 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2(_1533, _1534), _1732);
    float _1740 = (_1734.x * 2.0) + (-1.0);
    float _1741 = (_1734.y * 2.0) + (-1.0);
    float _1745 = 1.0 - dot(vec2(_1740, _1741), vec2(_1740, _1741));
    float _2687 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
    float _1747 = sqrt(isnan(1.0) ? _2687 : (isnan(_2687) ? 1.0 : min(_2687, 1.0)));
    float _1750 = fma(_1747, _761, fma(_1741, _777, _1740 * _797));
    float _1753 = fma(_1747, _763, fma(_1741, _778, _1740 * _798));
    float _1756 = fma(_1747, _764, fma(_1741, _779, _1740 * _799));
    float _1760 = inversesqrt(dot(vec3(_1750, _1753, _1756), vec3(_1750, _1753, _1756)));
    float _1767 = (((_1753 * 0.5) * _1760) + (-0.25)) * cbMtdParam._m0[25u].w;
    float _1769 = (-0.0) - (cbMtdParam._m0[25u].w * (((_1750 * 0.5) * _1760) + (-0.25)));
    vec4 _1794 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_1624 * _1769) + _1521) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1767 * _1624) + _1522) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1796 = _1794.x;
    float _1797 = _1794.y;
    float _1798 = _1794.z;
    vec4 _1799 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((((_1626 * _1769) + _1521) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_1767 * _1626) + _1522) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), 0.0);
    float _1851 = (cbMtdParam._m0[24u].w * cbMtdParam._m0[13u].x) * ((_1502 + (_1123 * cbMtdParam._m0[12u].x)) + ((((_1670 * cbMtdParam._m0[9u].x) - _1502) + (((((cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x) * _1670) * cbMtdParam._m0[25u].z) + cbMtdParam._m0[10u].x) * (((_1799.x - _1796) * _1637) + _1796))) * _1510));
    float _1853 = (cbMtdParam._m0[24u].w * cbMtdParam._m0[13u].y) * ((_1503 + (_1123 * cbMtdParam._m0[12u].y)) + ((((_1671 * cbMtdParam._m0[9u].y) - _1503) + (((((cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y) * _1671) * cbMtdParam._m0[25u].z) + cbMtdParam._m0[10u].y) * (((_1799.y - _1797) * _1637) + _1797))) * _1510));
    float _1855 = (cbMtdParam._m0[24u].w * cbMtdParam._m0[13u].z) * ((_1504 + (_1123 * cbMtdParam._m0[12u].z)) + ((((_1672 * cbMtdParam._m0[9u].z) - _1504) + ((((cbMtdParam._m0[25u].z * _1672) * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * (((_1799.z - _1798) * _1637) + _1798))) * _1510));
    float _2698 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _1859 = isnan(1.0) ? _2698 : (isnan(_2698) ? 1.0 : min(_2698, 1.0));
    float _1867 = _810 / cbMtdParam._m0[20u].y;
    float _2709 = isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0));
    float _1868 = isnan(1.0) ? _2709 : (isnan(_2709) ? 1.0 : min(_2709, 1.0));
    float _1913;
    if (_899)
    {
        float _1897 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1905 = log2(0.0);
        float _1911 = ((_1905 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1897 * gl_WorldRayDirectionEXT.x, _1897 * gl_WorldRayDirectionEXT.y, _1897 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1913 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
    }
    else
    {
        _1913 = 0.0;
    }
    vec4 _1916 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * (((((uintBitsToFloat(_304.x) * hit._m0.x) + (uintBitsToFloat(_192.x) * _616)) + (uintBitsToFloat(_405.x) * hit._m0.y)) / cbMtdParam._m0[19u].y) + (cbMtdParam._m0[32u].w * _871))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (((((uintBitsToFloat(_304.z) * hit._m0.x) + (uintBitsToFloat(_192.z) * _616)) + (uintBitsToFloat(_405.z) * hit._m0.y)) / cbMtdParam._m0[19u].y) + (cbMtdParam._m0[33u].x * _871))) + cbTextureTilingScale._m0[1u].w), _1913);
    float _1920 = _962 * 0.23999999463558197021484375;
    float _1922 = _962 * (-0.20000000298023223876953125);
    float _1933 = cbMtdParam._m0[33u].w * _749;
    float _1934 = cbMtdParam._m0[34u].x * _750;
    float _1993;
    if (_899)
    {
        float _1953 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1959 = (_748 * _733) - (_745 * _736);
        float _1962 = (_742 * _736) - (_748 * _730);
        float _1965 = (_745 * _730) - (_742 * _733);
        float _1991 = ((log2((((float(_989.y) * 0.5) * float(_989.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_1962 * _1962) + (_1965 * _1965)) + (_1959 * _1959)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1953 * gl_WorldRayDirectionEXT.x, _1953 * gl_WorldRayDirectionEXT.y, _1953 * gl_WorldRayDirectionEXT.z), vec3(_761, _763, _764))));
        _1993 = isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0));
    }
    else
    {
        _1993 = 0.0;
    }
    vec4 _1995 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[33u].y * _871) + _1920) + _1933) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[33u].z * _871) + _1922) + _1934) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _1993);
    float _2014 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2015 = _2014 * gl_WorldRayDirectionEXT.x;
    float _2016 = _2014 * gl_WorldRayDirectionEXT.y;
    float _2017 = _2014 * gl_WorldRayDirectionEXT.z;
    float _2061;
    if (_899)
    {
        float _2027 = (_748 * _733) - (_745 * _736);
        float _2030 = (_742 * _736) - (_748 * _730);
        float _2033 = (_745 * _730) - (_742 * _733);
        float _2059 = ((log2((((float(_989.y) * 0.5) * float(_989.x)) * abs((_703 * _697) - (_702 * _699))) / (sqrt(((_2030 * _2030) + (_2033 * _2033)) + (_2027 * _2027)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_2015, _2016, _2017), vec3(_761, _763, _764))));
        _2061 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    }
    else
    {
        _2061 = 0.0;
    }
    vec4 _2063 = textureLod(sampler2D(M_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1933 + _1920) + (cbMtdParam._m0[34u].y * _871)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1934 + _1922) + (cbMtdParam._m0[34u].z * _871)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _2061);
    float _2081 = (((_1112.x + (-0.5)) * 0.5) + _1042.x) + (((_1995.x + (-1.0)) + _2063.x) * cbMtdParam._m0[21u].z);
    float _2082 = (((_1112.y + (-0.5)) * 0.5) + _1042.y) + (((_1995.y + (-1.0)) + _2063.y) * cbMtdParam._m0[21u].z);
    float _2087 = ((_1916.x - _2081) * _1868) + _2081;
    float _2088 = ((_1916.y - _2082) * _1868) + _2082;
    float _2090 = _810 / cbMtdParam._m0[20u].x;
    float _2735 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
    float _2091 = isnan(1.0) ? _2735 : (isnan(_2735) ? 1.0 : min(_2735, 1.0));
    float _2107 = ((((_1859 * (0.5 - _957)) + _957) + (((_2087 + (-0.5)) + ((0.5 - _2087) * _2091)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2108 = ((((_1859 * (0.5 - _958)) + _958) + (((_2088 + (-0.5)) + ((0.5 - _2088) * _2091)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _2109 = dot(vec2(_2107, _2108), vec2(_2107, _2108));
    float _2746 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
    float _2114 = sqrt(1.0 - (isnan(1.0) ? _2746 : (isnan(_2746) ? 1.0 : min(_2746, 1.0))));
    float _2117 = fma(_2114, _761, fma(_2108, _777, _2107 * _797));
    float _2120 = fma(_2114, _763, fma(_2108, _778, _2107 * _798));
    float _2123 = fma(_2114, _764, fma(_2108, _779, _2107 * _799));
    float _2127 = inversesqrt(dot(vec3(_2117, _2120, _2123), vec3(_2117, _2120, _2123)));
    float _2128 = _2127 * _2117;
    float _2129 = _2127 * _2120;
    float _2130 = _2127 * _2123;
    float _2142 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2143 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2144 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2145 = (-0.0) - _2015;
    float _2146 = (-0.0) - _2016;
    float _2147 = (-0.0) - _2017;
    float _2153 = float(gl_LaunchIDEXT.x);
    float _2154 = float(gl_LaunchIDEXT.y);
    float _2157 = float(gl_LaunchSizeEXT.x);
    float _2171 = fract(fract(sin(dot(vec2(_2153 / _2157, _2154 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2184 = fract(fract(sin(dot(vec2((_2153 + 128.0) / _2157, (_2154 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _2194 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2195 = _2194.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2195, _2194.w, _2195, vec3(_2142, _2143, _2144), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2288;
    float _2289;
    float _2290;
    if (_71._m0 == 0u)
    {
        float _2222 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _824) * 0.949999988079071044921875);
        float _2223 = _2222 * _2222;
        float _2224 = g_sceneCB._m0[4u].x - _2015;
        float _2225 = g_sceneCB._m0[4u].y - _2016;
        float _2226 = g_sceneCB._m0[4u].z - _2017;
        float _2230 = inversesqrt(dot(vec3(_2224, _2225, _2226), vec3(_2224, _2225, _2226)));
        float _2231 = _2230 * _2224;
        float _2232 = _2230 * _2225;
        float _2233 = _2230 * _2226;
        float _2234 = dot(vec3(_2128, _2129, _2130), vec3(g_sceneCB._m0[4u].xyz));
        float _2757 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
        float _2237 = isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0));
        float _2238 = dot(vec3(_2128, _2129, _2130), vec3(_2145, _2146, _2147));
        float _2768 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
        float _2241 = isnan(1.0) ? _2768 : (isnan(_2768) ? 1.0 : min(_2768, 1.0));
        float _2242 = dot(vec3(_2128, _2129, _2130), vec3(_2231, _2232, _2233));
        float _2779 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
        float _2245 = isnan(1.0) ? _2779 : (isnan(_2779) ? 1.0 : min(_2779, 1.0));
        float _2246 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2231, _2232, _2233));
        float _2790 = isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0));
        float _2250 = _2223 * _2223;
        float _2254 = ((_2245 * _2245) * (_2250 + (-1.0))) + 1.0;
        float _2266 = (exp2(log2(1.0 - (isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2268 = 1.0 - _2223;
        float _2279 = (0.5 / (((_2241 * ((_2237 * _2268) + _2223)) + 9.9999999392252902907785028219223e-09) + (((_2241 * _2268) + _2223) * _2237))) * _2237;
        float _2801 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
        float _2281 = (isnan(1.0) ? _2801 : (isnan(_2801) ? 1.0 : min(_2801, 1.0))) * (_2250 / ((_2254 * _2254) * 3.141590118408203125));
        _2288 = (_2266 * g_sceneCB._m0[5u].x) * _2281;
        _2289 = (_2266 * g_sceneCB._m0[5u].y) * _2281;
        _2290 = (_2266 * g_sceneCB._m0[5u].z) * _2281;
    }
    else
    {
        _2288 = 0.0;
        _2289 = 0.0;
        _2290 = 0.0;
    }
    bool _2292 = abs(_2129) < 0.89999997615814208984375;
    float _2294 = float(_2292);
    float _2295 = _2292 ? 0.0 : 1.0;
    float _2298 = (_2294 * _2130) - (_2295 * _2129);
    float _2299 = _2295 * _2128;
    float _2301 = (-0.0) - (_2128 * _2294);
    float _2305 = inversesqrt(dot(vec3(_2298, _2299, _2301), vec3(_2298, _2299, _2301)));
    float _2306 = _2298 * _2305;
    float _2307 = _2299 * _2305;
    float _2308 = _2305 * _2301;
    float _2311 = (_2307 * _2130) - (_2308 * _2129);
    float _2314 = (_2308 * _2128) - (_2306 * _2130);
    float _2317 = (_2306 * _2129) - (_2307 * _2128);
    float _2319;
    float _2327;
    float _2318 = 0.0;
    uint _2320 = 0u;
    float _2324;
    bool _2326;
    for (;;)
    {
        _2324 = (float(_2320) + _2171) * 0.03125;
        _2326 = _2320 == 0u;
        float frontier_phi_59_pred;
        if (_2326)
        {
            frontier_phi_59_pred = 0.0;
        }
        else
        {
            float _2451;
            float _2452;
            uint _2454;
            _2451 = 0.0;
            _2452 = 0.5;
            _2454 = _2320;
            float _2328;
            for (;;)
            {
                _2328 = ((_2454 & 1u) != 0u) ? (_2452 + _2451) : _2451;
                uint _2455 = _2454 >> 1u;
                if (_2455 == 0u)
                {
                    break;
                }
                else
                {
                    _2451 = _2328;
                    _2452 *= 0.5;
                    _2454 = _2455;
                }
            }
            frontier_phi_59_pred = _2328;
        }
        _2327 = frontier_phi_59_pred;
        float _2329 = _2327 + _2184;
        float _2333 = sqrt(_2324);
        float _2334 = ((_2329 > 1.0) ? (_2329 + (-1.0)) : _2329) * 6.283185482025146484375;
        float _2337 = cos(_2334) * _2333;
        float _2339 = sin(_2334) * _2333;
        float _2341 = sqrt(1.0 - _2324);
        float _2354 = ((_2341 * _2128) + (_2337 * _2311)) + (_2339 * _2306);
        float _2355 = ((_2341 * _2129) + (_2337 * _2314)) + (_2339 * _2307);
        float _2356 = ((_2341 * _2130) + (_2337 * _2317)) + (_2339 * _2308);
        _70._m0 = 1u;
        uvec4 _2360 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2361 = _2360.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2361, _2360.w, _2361, vec3(_2142, _2143, _2144), 9.9999997473787516355514526367188e-05, vec3(_2354, _2355, _2356), 10000.0, 1);
        float _2367 = dot(vec3(_2128, _2129, _2130), vec3(_2354, _2355, _2356));
        float _2812 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
        float _2370 = isnan(1.0) ? _2812 : (isnan(_2812) ? 1.0 : min(_2812, 1.0));
        _2319 = ((float(_70._m0 == 0u) * _2370) / (_2370 * 0.3183098733425140380859375)) + _2318;
        uint _2321 = _2320 + 1u;
        if (_2321 == 32u)
        {
            break;
        }
        else
        {
            _2318 = _2319;
            _2320 = _2321;
            continue;
        }
    }
    float _2378 = _2319 * 0.009947183541953563690185546875;
    float _2383 = dot(vec3(_2015, _2016, _2017), vec3(_2128, _2129, _2130)) * 2.0;
    vec4 _2397 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2015 - (_2383 * _2128), _2016 - (_2383 * _2129), _2017 - (_2383 * _2130)), 4.0 - (_824 * 4.0));
    float _2402 = dot(vec3(_2145, _2146, _2147), vec3(_2128, _2129, _2130));
    float _2823 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _2411 = (exp2(log2(1.0 - (isnan(1.0) ? _2823 : (isnan(_2823) ? 1.0 : min(_2823, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2420 = ((_1851 - (((((float(_388 & 255u) * hit._m0.x) + (float(_287 & 255u) * _616)) + (float(_489 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1851)) + _2288) + ((_2397.x * _2378) * _2411);
    float _2423 = ((_1853 - (((((float((_388 >> 8u) & 255u) * hit._m0.x) + (float((_287 >> 8u) & 255u) * _616)) + (float((_489 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1853)) + _2289) + ((_2397.y * _2378) * _2411);
    float _2426 = ((_1855 - (((((float((_388 >> 16u) & 255u) * hit._m0.x) + (float((_287 >> 16u) & 255u) * _616)) + (float((_489 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) * _1855)) + _2290) + ((_2397.z * _2378) * _2411);
    float _2834 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2845 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2856 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
    bool _2434 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2445;
    _2445.x = _2434 ? ((_754 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2834 : (isnan(_2834) ? 1.0 : min(_2834, 1.0)));
    _2445.y = _2434 ? ((_757 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2845 : (isnan(_2845) ? 1.0 : min(_2845, 1.0)));
    _2445.z = _2434 ? ((_760 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2856 : (isnan(_2856) ? 1.0 : min(_2856, 1.0)));
    payload._m0 = _2445;
}


