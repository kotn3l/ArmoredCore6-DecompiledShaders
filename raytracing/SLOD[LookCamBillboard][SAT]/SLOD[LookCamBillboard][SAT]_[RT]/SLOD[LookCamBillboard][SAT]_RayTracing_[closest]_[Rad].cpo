#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _54
{
    vec3 _m0;
};

struct _58
{
    vec2 _m0;
};

struct _61
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D SLOD_LookCamBillboard_SAT_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D SLOD_LookCamBillboard_SAT_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D SLOD_LookCamBillboard_SAT_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D SLOD_LookCamBillboard_SAT_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _54 payload;
hitAttributeEXT _58 hit;
layout(location = 1) rayPayloadEXT _61 _63;
layout(location = 2) rayPayloadEXT _61 _64;

vec3 _1021;

void main()
{
    float _72 = float(gl_LaunchSizeEXT.y);
    float _102 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _104 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _111 = sqrt(((_103 * _103) + (_102 * _102)) + (_104 * _104)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _72)))));
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _123 = _122.y;
    uint _163;
    uint _165;
    uint _166;
    if (_122.x == 0u)
    {
        uint _131 = (_123 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _140 = uvec3(texelFetch(l_geomIndexBuffer, int(_131)).x, texelFetch(l_geomIndexBuffer, int(_131 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_131 + 2u)).x);
        _163 = _140.x;
        _165 = _140.y;
        _166 = _140.z;
    }
    else
    {
        uint _144 = uint(gl_PrimitiveID) * 6u;
        uint _146 = _144 & 4294967292u;
        uint _149 = (_123 + _146) >> 2u;
        uvec2 _156 = uvec2(texelFetch(l_geomIndexBuffer, int(_149)).x, texelFetch(l_geomIndexBuffer, int(_149 + 1u)).x);
        uint _157 = _156.x;
        uint _158 = _156.y;
        uint _160 = _157 >> 16u;
        uint _161 = _158 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_146 == _144)
        {
            frontier_phi_3_2_ladder = _161;
            frontier_phi_3_2_ladder_1 = _160;
            frontier_phi_3_2_ladder_2 = _157 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _158 >> 16u;
            frontier_phi_3_2_ladder_1 = _161;
            frontier_phi_3_2_ladder_2 = _160;
        }
        _163 = frontier_phi_3_2_ladder_2;
        _165 = frontier_phi_3_2_ladder_1;
        _166 = frontier_phi_3_2_ladder;
    }
    uvec4 _170 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _171 = _170.x;
    uint _172 = _170.z;
    bool _173 = _172 != 0u;
    bool _175 = _122.w == 0u;
    bool _176 = _173 || _175;
    uint _177 = _171 * _163;
    uint _178 = _177 + 12u;
    uint _202;
    uint _203;
    uint _204;
    uint _205;
    if (_176)
    {
        uvec4 _181 = texelFetch(l_geomAttrib_0, int(_178 >> 2u));
        uint _182 = _181.x;
        _202 = _182 & 255u;
        _203 = (_182 >> 8u) & 255u;
        _204 = (_182 >> 16u) & 255u;
        _205 = 16u;
    }
    else
    {
        uint _190 = _178 >> 2u;
        uvec2 _196 = uvec2(texelFetch(l_geomAttrib_0, int(_190)).x, texelFetch(l_geomAttrib_0, int(_190 + 1u)).x);
        uint _197 = _196.x;
        _202 = _197 & 65535u;
        _203 = _197 >> 16u;
        _204 = _196.y & 65535u;
        _205 = 20u;
    }
    uvec4 _213 = texelFetch(l_geomAttrib_0, int((_205 + _177) >> 2u));
    uint _214 = _213.x;
    bool _228 = _172 == 0u;
    uint _229;
    if (_228)
    {
        _229 = _205 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_175)
        {
            frontier_phi_9_10_ladder = _205 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _205 + 12u;
        }
        _229 = frontier_phi_9_10_ladder;
    }
    uvec4 _237 = texelFetch(l_geomAttrib_0, int(((_177 + 4u) + (_173 ? (_229 + 4u) : _229)) >> 2u));
    uint _238 = _237.x;
    uint _244 = _171 * _165;
    uint _245 = _244 + 12u;
    uint _266;
    uint _267;
    uint _268;
    uint _269;
    if (_176)
    {
        uvec4 _247 = texelFetch(l_geomAttrib_0, int(_245 >> 2u));
        uint _248 = _247.x;
        _266 = _248 & 255u;
        _267 = (_248 >> 8u) & 255u;
        _268 = (_248 >> 16u) & 255u;
        _269 = 16u;
    }
    else
    {
        uint _254 = _245 >> 2u;
        uvec2 _260 = uvec2(texelFetch(l_geomAttrib_0, int(_254)).x, texelFetch(l_geomAttrib_0, int(_254 + 1u)).x);
        uint _261 = _260.x;
        _266 = _261 & 65535u;
        _267 = _261 >> 16u;
        _268 = _260.y & 65535u;
        _269 = 20u;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((_269 + _244) >> 2u));
    uint _276 = _275.x;
    uint _288;
    if (_228)
    {
        _288 = _269 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_175)
        {
            frontier_phi_16_17_ladder = _269 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _269 + 12u;
        }
        _288 = frontier_phi_16_17_ladder;
    }
    uvec4 _296 = texelFetch(l_geomAttrib_0, int(((_244 + 4u) + (_173 ? (_288 + 4u) : _288)) >> 2u));
    uint _297 = _296.x;
    uint _303 = _171 * _166;
    uint _304 = _303 + 12u;
    uint _325;
    uint _326;
    uint _327;
    uint _328;
    if (_176)
    {
        uvec4 _306 = texelFetch(l_geomAttrib_0, int(_304 >> 2u));
        uint _307 = _306.x;
        _325 = _307 & 255u;
        _326 = (_307 >> 8u) & 255u;
        _327 = (_307 >> 16u) & 255u;
        _328 = 16u;
    }
    else
    {
        uint _313 = _304 >> 2u;
        uvec2 _319 = uvec2(texelFetch(l_geomAttrib_0, int(_313)).x, texelFetch(l_geomAttrib_0, int(_313 + 1u)).x);
        uint _320 = _319.x;
        _325 = _320 & 65535u;
        _326 = _320 >> 16u;
        _327 = _319.y & 65535u;
        _328 = 20u;
    }
    uvec4 _334 = texelFetch(l_geomAttrib_0, int((_328 + _303) >> 2u));
    uint _335 = _334.x;
    uint _347;
    if (_228)
    {
        _347 = _328 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_175)
        {
            frontier_phi_23_24_ladder = _328 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _328 + 12u;
        }
        _347 = frontier_phi_23_24_ladder;
    }
    uvec4 _355 = texelFetch(l_geomAttrib_0, int(((_303 + 4u) + (_173 ? (_347 + 4u) : _347)) >> 2u));
    uint _356 = _355.x;
    float _364 = (1.0 - hit._m0.x) - hit._m0.y;
    float _402 = (((float(_202) * _364) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_325) * hit._m0.y);
    float _405 = (((float(_203) * _364) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_326) * hit._m0.y);
    float _408 = (((float(_204) * _364) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_327) * hit._m0.y);
    float _409 = _402 * 0.0078740157186985015869140625;
    float _411 = _405 * 0.0078740157186985015869140625;
    float _412 = _408 * 0.0078740157186985015869140625;
    float _425 = ((((float(_214 & 255u) * _364) + (-127.0)) + (float(_276 & 255u) * hit._m0.x)) + (float(_335 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _426 = ((((float((_214 >> 8u) & 255u) * _364) + (-127.0)) + (float((_276 >> 8u) & 255u) * hit._m0.x)) + (float((_335 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _427 = ((((float((_214 >> 16u) & 255u) * _364) + (-127.0)) + (float((_276 >> 16u) & 255u) * hit._m0.x)) + (float((_335 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _428 = ((((float(_214 >> 24u) * _364) + (-127.0)) + (float(_276 >> 24u) * hit._m0.x)) + (float(_335 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _438 = ((_426 * _412) - (_427 * _411)) * _428;
    float _439 = ((_427 * _409) - (_425 * _412)) * _428;
    float _440 = ((_425 * _411) - (_426 * _409)) * _428;
    float _444 = inversesqrt(dot(vec3(_438, _439, _440), vec3(_438, _439, _440)));
    float _452 = ((((float(int(uint(int(_297 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238 << 16u) >> int(16u)))) * _364)) + (float(int(uint(int(_356 << 16u) >> int(16u)))) * hit._m0.y)) * 0.00048828125) / cbMtdParam._m0[9u].x;
    float _453 = ((((float(int(uint(int(_297) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_238) >> int(16u)))) * _364)) + (float(int(uint(int(_356) >> int(16u)))) * hit._m0.y)) * 0.00048828125) / cbMtdParam._m0[9u].x;
    bool _468 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _493;
    if (_468)
    {
        float _475 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _483 = log2(0.0);
        float _491 = ((_483 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_475 * gl_WorldRayDirectionEXT.x, _475 * gl_WorldRayDirectionEXT.y, _475 * gl_WorldRayDirectionEXT.z), vec3(_409, _411, _412))));
        _493 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    }
    else
    {
        _493 = 0.0;
    }
    vec4 _498 = textureLod(sampler2D(SLOD_LookCamBillboard_SAT_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _452) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _453) + cbTextureTilingScale._m0[3u].w), _493);
    float _500 = _498.x;
    float _501 = _498.y;
    float _502 = _498.z;
    float _535;
    if (_468)
    {
        float _519 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _527 = log2(0.0);
        float _533 = ((_527 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_519 * gl_WorldRayDirectionEXT.x, _519 * gl_WorldRayDirectionEXT.y, _519 * gl_WorldRayDirectionEXT.z), vec3(_409, _411, _412))));
        _535 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    }
    else
    {
        _535 = 0.0;
    }
    vec4 _539 = textureLod(sampler2D(SLOD_LookCamBillboard_SAT_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _452) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _453) + cbTextureTilingScale._m0[0u].w), _535);
    float _575;
    if (_468)
    {
        float _559 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _567 = log2(0.0);
        float _573 = ((_567 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_559 * gl_WorldRayDirectionEXT.x, _559 * gl_WorldRayDirectionEXT.y, _559 * gl_WorldRayDirectionEXT.z), vec3(_409, _411, _412))));
        _575 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    }
    else
    {
        _575 = 0.0;
    }
    vec4 _579 = textureLod(sampler2D(SLOD_LookCamBillboard_SAT_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _452) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _453) + cbTextureTilingScale._m0[1u].w), _575);
    float _581 = _579.x;
    float _595 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _596 = _595 * gl_WorldRayDirectionEXT.x;
    float _597 = _595 * gl_WorldRayDirectionEXT.y;
    float _598 = _595 * gl_WorldRayDirectionEXT.z;
    float _614;
    if (_468)
    {
        float _606 = log2(0.0);
        float _612 = ((_606 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_111) / abs(dot(vec3(_596, _597, _598), vec3(_409, _411, _412))));
        _614 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    }
    else
    {
        _614 = 0.0;
    }
    vec4 _618 = textureLod(sampler2D(SLOD_LookCamBillboard_SAT_snp_0_Texture2D_2, SS_SpecularMap), vec2((cbTextureTilingScale._m0[2u].x * _452) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _453) + cbTextureTilingScale._m0[2u].w), _614);
    float _620 = _618.x;
    float _623 = (_539.x * 2.0) + (-1.0);
    float _625 = (_539.y * 2.0) + (-1.0);
    float _626 = dot(vec2(_623, _625), vec2(_623, _625));
    float _1112 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _631 = sqrt(1.0 - (isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0))));
    float _634 = fma(_631, _409, fma(_625, _425, (_444 * _438) * _623));
    float _637 = fma(_631, _411, fma(_625, _426, (_444 * _439) * _623));
    float _640 = fma(_631, _412, fma(_625, _427, (_444 * _440) * _623));
    float _644 = inversesqrt(dot(vec3(_634, _637, _640), vec3(_634, _637, _640)));
    float _645 = _644 * _634;
    float _646 = _644 * _637;
    float _647 = _644 * _640;
    float _659 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _660 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _661 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _662 = (-0.0) - _596;
    float _664 = (-0.0) - _597;
    float _665 = (-0.0) - _598;
    float _671 = float(gl_LaunchIDEXT.x);
    float _672 = float(gl_LaunchIDEXT.y);
    float _675 = float(gl_LaunchSizeEXT.x);
    float _689 = fract(fract(sin(dot(vec2(_671 / _675, _672 / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _702 = fract(fract(sin(dot(vec2((_671 + 128.0) / _675, (_672 + 128.0) / _72), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _703 = 1.0 - _581;
    float _704 = _703 * _500;
    float _705 = _703 * _501;
    float _706 = _703 * _502;
    float _711 = _581 * (_500 + (-0.039999999105930328369140625));
    float _712 = _581 * (_501 + (-0.039999999105930328369140625));
    float _713 = _581 * (_502 + (-0.039999999105930328369140625));
    float _714 = _711 + 0.039999999105930328369140625;
    float _716 = _712 + 0.039999999105930328369140625;
    float _717 = _713 + 0.039999999105930328369140625;
    _64._m0 = 1u;
    uvec4 _727 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _728 = _727.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _728, _727.w, _728, vec3(_659, _660, _661), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _843;
    float _844;
    float _845;
    float _846;
    float _847;
    float _848;
    if (_64._m0 == 0u)
    {
        float _749 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_645, _646, _647));
        float _1123 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
        float _752 = isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0));
        float _771 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _620) * 0.949999988079071044921875);
        float _772 = _771 * _771;
        float _773 = g_sceneCB._m0[4u].x - _596;
        float _774 = g_sceneCB._m0[4u].y - _597;
        float _775 = g_sceneCB._m0[4u].z - _598;
        float _779 = inversesqrt(dot(vec3(_773, _774, _775), vec3(_773, _774, _775)));
        float _780 = _779 * _773;
        float _781 = _779 * _774;
        float _782 = _779 * _775;
        float _783 = dot(vec3(_645, _646, _647), vec3(g_sceneCB._m0[4u].xyz));
        float _1134 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
        float _786 = isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0));
        float _787 = dot(vec3(_645, _646, _647), vec3(_662, _664, _665));
        float _1145 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
        float _790 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        float _791 = dot(vec3(_645, _646, _647), vec3(_780, _781, _782));
        float _1156 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
        float _794 = isnan(1.0) ? _1156 : (isnan(_1156) ? 1.0 : min(_1156, 1.0));
        float _795 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_780, _781, _782));
        float _1167 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
        float _799 = _772 * _772;
        float _803 = ((_794 * _794) * (_799 + (-1.0))) + 1.0;
        float _812 = exp2(log2(1.0 - (isnan(1.0) ? _1167 : (isnan(_1167) ? 1.0 : min(_1167, 1.0)))) * 5.0);
        float _823 = 1.0 - _772;
        float _834 = (0.5 / (((_790 * ((_786 * _823) + _772)) + 9.9999999392252902907785028219223e-09) + (((_790 * _823) + _772) * _786))) * _786;
        float _1178 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
        float _836 = (isnan(1.0) ? _1178 : (isnan(_1178) ? 1.0 : min(_1178, 1.0))) * (_799 / ((_803 * _803) * 3.141590118408203125));
        _843 = ((_704 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _752;
        _844 = ((_705 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _752;
        _845 = ((_706 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _752;
        _846 = (((_812 * (0.959999978542327880859375 - _711)) + _714) * g_sceneCB._m0[5u].x) * _836;
        _847 = (((_812 * (0.959999978542327880859375 - _712)) + _716) * g_sceneCB._m0[5u].y) * _836;
        _848 = (((_812 * (0.959999978542327880859375 - _713)) + _717) * g_sceneCB._m0[5u].z) * _836;
    }
    else
    {
        _843 = 0.0;
        _844 = 0.0;
        _845 = 0.0;
        _846 = 0.0;
        _847 = 0.0;
        _848 = 0.0;
    }
    bool _850 = abs(_646) < 0.89999997615814208984375;
    float _852 = float(_850);
    float _853 = _850 ? 0.0 : 1.0;
    float _856 = (_852 * _647) - (_853 * _646);
    float _857 = _853 * _645;
    float _859 = (-0.0) - (_645 * _852);
    float _863 = inversesqrt(dot(vec3(_856, _857, _859), vec3(_856, _857, _859)));
    float _864 = _856 * _863;
    float _865 = _857 * _863;
    float _866 = _863 * _859;
    float _869 = (_865 * _647) - (_866 * _646);
    float _872 = (_866 * _645) - (_864 * _647);
    float _875 = (_864 * _646) - (_865 * _645);
    float _877;
    float _885;
    float _876 = 0.0;
    uint _878 = 0u;
    float _882;
    bool _884;
    for (;;)
    {
        _882 = (float(_878) + _689) * 0.03125;
        _884 = _878 == 0u;
        float frontier_phi_38_pred;
        if (_884)
        {
            frontier_phi_38_pred = 0.0;
        }
        else
        {
            float _1026;
            float _1027;
            uint _1029;
            _1026 = 0.0;
            _1027 = 0.5;
            _1029 = _878;
            float _886;
            for (;;)
            {
                _886 = ((_1029 & 1u) != 0u) ? (_1027 + _1026) : _1026;
                uint _1030 = _1029 >> 1u;
                if (_1030 == 0u)
                {
                    break;
                }
                else
                {
                    _1026 = _886;
                    _1027 *= 0.5;
                    _1029 = _1030;
                }
            }
            frontier_phi_38_pred = _886;
        }
        _885 = frontier_phi_38_pred;
        float _887 = _885 + _702;
        float _891 = sqrt(_882);
        float _892 = ((_887 > 1.0) ? (_887 + (-1.0)) : _887) * 6.283185482025146484375;
        float _895 = cos(_892) * _891;
        float _897 = sin(_892) * _891;
        float _899 = sqrt(1.0 - _882);
        float _912 = ((_899 * _645) + (_895 * _869)) + (_897 * _864);
        float _913 = ((_899 * _646) + (_895 * _872)) + (_897 * _865);
        float _914 = ((_899 * _647) + (_895 * _875)) + (_897 * _866);
        _63._m0 = 1u;
        uvec4 _918 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _919 = _918.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _919, _918.w, _919, vec3(_659, _660, _661), 9.9999997473787516355514526367188e-05, vec3(_912, _913, _914), 10000.0, 1);
        float _925 = dot(vec3(_645, _646, _647), vec3(_912, _913, _914));
        float _1189 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _928 = isnan(1.0) ? _1189 : (isnan(_1189) ? 1.0 : min(_1189, 1.0));
        _877 = ((float(_63._m0 == 0u) * _928) / (_928 * 0.3183098733425140380859375)) + _876;
        uint _879 = _878 + 1u;
        if (_879 == 32u)
        {
            break;
        }
        else
        {
            _876 = _877;
            _878 = _879;
            continue;
        }
    }
    float _936 = _877 * 0.009947183541953563690185546875;
    float _941 = dot(vec3(_596, _597, _598), vec3(_645, _646, _647)) * 2.0;
    vec4 _955 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_596 - (_941 * _645), _597 - (_941 * _646), _598 - (_941 * _647)), 4.0 - (_620 * 4.0));
    float _960 = dot(vec3(_662, _664, _665), vec3(_645, _646, _647));
    float _1200 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _970 = exp2(log2(1.0 - (isnan(1.0) ? _1200 : (isnan(_1200) ? 1.0 : min(_1200, 1.0)))) * 5.0);
    vec4 _982 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_645, _646, _647), 0.0);
    float _993 = (_846 + _843) + (((_982.x * _704) + (((_970 * (0.959999978542327880859375 - _711)) + _714) * _955.x)) * _936);
    float _997 = (_847 + _844) + (((_982.y * _705) + (((_970 * (0.959999978542327880859375 - _712)) + _716) * _955.y)) * _936);
    float _1001 = (_848 + _845) + (((_982.z * _706) + (((_970 * (0.959999978542327880859375 - _713)) + _717) * _955.z)) * _936);
    float _1211 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _1222 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1233 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    bool _1009 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1020;
    _1020.x = _1009 ? ((_402 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1211 : (isnan(_1211) ? 1.0 : min(_1211, 1.0)));
    _1020.y = _1009 ? ((_405 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1222 : (isnan(_1222) ? 1.0 : min(_1222, 1.0)));
    _1020.z = _1009 ? ((_408 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1233 : (isnan(_1233) ? 1.0 : min(_1233, 1.0)));
    payload._m0 = _1020;
}


