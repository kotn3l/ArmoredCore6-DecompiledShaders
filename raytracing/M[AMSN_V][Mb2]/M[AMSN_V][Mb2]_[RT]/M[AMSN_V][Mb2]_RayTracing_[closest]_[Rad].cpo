#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[20];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb2_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb2_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb2_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb2_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1475;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _162;
    uint _164;
    uint _165;
    if (_121.x == 0u)
    {
        uint _130 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _139 = uvec3(texelFetch(l_geomIndexBuffer, int(_130)).x, texelFetch(l_geomIndexBuffer, int(_130 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_130 + 2u)).x);
        _162 = _139.x;
        _164 = _139.y;
        _165 = _139.z;
    }
    else
    {
        uint _143 = uint(gl_PrimitiveID) * 6u;
        uint _145 = _143 & 4294967292u;
        uint _148 = (_122 + _145) >> 2u;
        uvec2 _155 = uvec2(texelFetch(l_geomIndexBuffer, int(_148)).x, texelFetch(l_geomIndexBuffer, int(_148 + 1u)).x);
        uint _156 = _155.x;
        uint _157 = _155.y;
        uint _159 = _156 >> 16u;
        uint _160 = _157 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_145 == _143)
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _156 & 65535u;
            frontier_phi_3_2_ladder_2 = _160;
        }
        else
        {
            frontier_phi_3_2_ladder = _160;
            frontier_phi_3_2_ladder_1 = _159;
            frontier_phi_3_2_ladder_2 = _157 >> 16u;
        }
        _162 = frontier_phi_3_2_ladder_1;
        _164 = frontier_phi_3_2_ladder;
        _165 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _169 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _170 = _169.x;
    uint _171 = _169.z;
    bool _172 = _171 != 0u;
    bool _174 = _121.w == 0u;
    bool _175 = _172 || _174;
    uint _176 = _170 * _162;
    uint _177 = _176 + 12u;
    uint _201;
    uint _202;
    uint _203;
    uint _204;
    if (_175)
    {
        uvec4 _180 = texelFetch(l_geomAttrib_0, int(_177 >> 2u));
        uint _181 = _180.x;
        _201 = _181 & 255u;
        _202 = (_181 >> 8u) & 255u;
        _203 = (_181 >> 16u) & 255u;
        _204 = 16u;
    }
    else
    {
        uint _189 = _177 >> 2u;
        uvec2 _195 = uvec2(texelFetch(l_geomAttrib_0, int(_189)).x, texelFetch(l_geomAttrib_0, int(_189 + 1u)).x);
        uint _196 = _195.x;
        _201 = _196 & 65535u;
        _202 = _196 >> 16u;
        _203 = _195.y & 65535u;
        _204 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_204 + _176) >> 2u));
    uint _212 = _211.x;
    bool _226 = _171 == 0u;
    uint _227;
    if (_226)
    {
        _227 = _204 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_174)
        {
            frontier_phi_9_10_ladder = _204 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _204 + 12u;
        }
        _227 = frontier_phi_9_10_ladder;
    }
    uint _231 = _172 ? (_227 + 4u) : _227;
    uvec4 _241 = texelFetch(l_geomAttrib_0, int(((_176 + 8u) + _231) >> 2u));
    uint _242 = _241.x;
    float _246 = float(int(uint(int(_242 << 16u) >> int(16u))));
    float _247 = float(int(uint(int(_242) >> int(16u))));
    uint _255 = _170 * _164;
    uint _256 = _255 + 12u;
    uint _277;
    uint _278;
    uint _279;
    uint _280;
    if (_175)
    {
        uvec4 _258 = texelFetch(l_geomAttrib_0, int(_256 >> 2u));
        uint _259 = _258.x;
        _277 = _259 & 255u;
        _278 = (_259 >> 8u) & 255u;
        _279 = (_259 >> 16u) & 255u;
        _280 = 16u;
    }
    else
    {
        uint _265 = _256 >> 2u;
        uvec2 _271 = uvec2(texelFetch(l_geomAttrib_0, int(_265)).x, texelFetch(l_geomAttrib_0, int(_265 + 1u)).x);
        uint _272 = _271.x;
        _277 = _272 & 65535u;
        _278 = _272 >> 16u;
        _279 = _271.y & 65535u;
        _280 = 20u;
    }
    uvec4 _286 = texelFetch(l_geomAttrib_0, int((_280 + _255) >> 2u));
    uint _287 = _286.x;
    uint _299;
    if (_226)
    {
        _299 = _280 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_174)
        {
            frontier_phi_16_17_ladder = _280 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _280 + 12u;
        }
        _299 = frontier_phi_16_17_ladder;
    }
    uint _303 = _172 ? (_299 + 4u) : _299;
    uvec4 _313 = texelFetch(l_geomAttrib_0, int(((_255 + 8u) + _303) >> 2u));
    uint _314 = _313.x;
    float _318 = float(int(uint(int(_314 << 16u) >> int(16u))));
    float _319 = float(int(uint(int(_314) >> int(16u))));
    uint _327 = _170 * _165;
    uint _328 = _327 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_175)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _327) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_226)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_174)
        {
            frontier_phi_23_24_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _352 + 12u;
        }
        _371 = frontier_phi_23_24_ladder;
    }
    uint _375 = _172 ? (_371 + 4u) : _371;
    uvec4 _385 = texelFetch(l_geomAttrib_0, int(((_327 + 8u) + _375) >> 2u));
    uint _386 = _385.x;
    float _390 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _391 = float(int(uint(int(_386) >> int(16u))));
    bool _400 = _121.z == 0u;
    float _436;
    float _437;
    float _438;
    if (_400)
    {
        uint _403 = _162 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _162 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_400)
    {
        uint _441 = _164 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _164 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _512;
    float _513;
    float _514;
    if (_400)
    {
        uint _479 = _165 * 3u;
        uvec3 _488 = uvec3(texelFetch(l_geomPositionBuffer, int(_479)).x, texelFetch(l_geomPositionBuffer, int(_479 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_479 + 2u)).x);
        _512 = uintBitsToFloat(_488.x);
        _513 = uintBitsToFloat(_488.y);
        _514 = uintBitsToFloat(_488.z);
    }
    else
    {
        uint _496 = _165 * 2u;
        uvec2 _502 = uvec2(texelFetch(l_geomPositionBuffer, int(_496)).x, texelFetch(l_geomPositionBuffer, int(_496 + 1u)).x);
        uint _503 = _502.x;
        _512 = unpackHalf2x16(_503).x;
        _513 = unpackHalf2x16(_503 >> 16u).x;
        _514 = unpackHalf2x16(_502.y).x;
    }
    float _517 = (1.0 - hit._m0.x) - hit._m0.y;
    float _561 = (((float(texelFetch(l_geomAttrib_0, int(((_255 + 12u) + _303) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_176 + 12u) + _231) >> 2u)).x & 255u) * _517)) + (float(texelFetch(l_geomAttrib_0, int(((_327 + 12u) + _375) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _564 = (_318 - _246) * 0.00048828125;
    float _566 = (_319 - _247) * 0.00048828125;
    float _569 = (_390 - _246) * 0.00048828125;
    float _570 = (_391 - _247) * 0.00048828125;
    float _592 = _474 - _436;
    float _593 = _475 - _437;
    float _594 = _476 - _438;
    float _597 = fma(_594, gl_ObjectToWorldEXT[2u].x, fma(_593, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _592));
    float _600 = fma(_594, gl_ObjectToWorldEXT[2u].y, fma(_593, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _592));
    float _603 = fma(_594, gl_ObjectToWorldEXT[2u].z, fma(_593, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _592));
    float _604 = _512 - _436;
    float _605 = _513 - _437;
    float _606 = _514 - _438;
    float _609 = fma(_606, gl_ObjectToWorldEXT[2u].x, fma(_605, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _604));
    float _612 = fma(_606, gl_ObjectToWorldEXT[2u].y, fma(_605, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _604));
    float _615 = fma(_606, gl_ObjectToWorldEXT[2u].z, fma(_605, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _604));
    float _616 = (((_318 * hit._m0.x) + (_246 * _517)) + (_390 * hit._m0.y)) * 0.00048828125;
    float _617 = (((_319 * hit._m0.x) + (_247 * _517)) + (_391 * hit._m0.y)) * 0.00048828125;
    float _621 = (((float(_201) * _517) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _624 = (((float(_202) * _517) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _627 = (((float(_203) * _517) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _628 = _621 * 0.0078740157186985015869140625;
    float _630 = _624 * 0.0078740157186985015869140625;
    float _631 = _627 * 0.0078740157186985015869140625;
    float _644 = ((((float(_212 & 255u) * _517) + (-127.0)) + (float(_287 & 255u) * hit._m0.x)) + (float(_359 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _645 = ((((float((_212 >> 8u) & 255u) * _517) + (-127.0)) + (float((_287 >> 8u) & 255u) * hit._m0.x)) + (float((_359 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _646 = ((((float((_212 >> 16u) & 255u) * _517) + (-127.0)) + (float((_287 >> 16u) & 255u) * hit._m0.x)) + (float((_359 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _647 = ((((float(_212 >> 24u) * _517) + (-127.0)) + (float(_287 >> 24u) * hit._m0.x)) + (float(_359 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((_645 * _631) - (_646 * _630)) * _647;
    float _658 = ((_646 * _628) - (_644 * _631)) * _647;
    float _659 = ((_644 * _630) - (_645 * _628)) * _647;
    float _663 = inversesqrt(dot(vec3(_657, _658, _659), vec3(_657, _658, _659)));
    uvec2 _690 = uvec2(textureSize(M_AMSN_V_Mb2_snp_0_Texture2D_1, int(0u)));
    bool _695 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _748;
    if (_695)
    {
        float _706 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _712 = (_615 * _600) - (_612 * _603);
        float _715 = (_609 * _603) - (_615 * _597);
        float _718 = (_612 * _597) - (_609 * _600);
        float _745 = ((log2((((float(_690.y) * 0.5) * float(_690.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_715 * _715) + (_718 * _718)) + (_712 * _712)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_706 * gl_WorldRayDirectionEXT.x, _706 * gl_WorldRayDirectionEXT.y, _706 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _748 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    }
    else
    {
        _748 = 0.0;
    }
    vec4 _752 = textureLod(sampler2D(M_AMSN_V_Mb2_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _616) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _617) + cbTextureTilingScale._m0[1u].w), _748);
    float _757 = _752.x * cbMatDynParam._m0[17u].x;
    float _758 = _752.y * cbMatDynParam._m0[17u].y;
    float _759 = _752.z * cbMatDynParam._m0[17u].z;
    uvec2 _777 = uvec2(textureSize(M_AMSN_V_Mb2_snp_0_Texture2D_2, int(0u)));
    float _828;
    if (_695)
    {
        float _788 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _794 = (_615 * _600) - (_612 * _603);
        float _797 = (_609 * _603) - (_615 * _597);
        float _800 = (_612 * _597) - (_609 * _600);
        float _826 = ((log2((((float(_777.y) * 0.5) * float(_777.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_797 * _797) + (_800 * _800)) + (_794 * _794)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_788 * gl_WorldRayDirectionEXT.x, _788 * gl_WorldRayDirectionEXT.y, _788 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _828 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    }
    else
    {
        _828 = 0.0;
    }
    vec4 _830 = textureLod(sampler2D(M_AMSN_V_Mb2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _616) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _617) + cbTextureTilingScale._m0[4u].w), _828);
    uvec2 _852 = uvec2(textureSize(M_AMSN_V_Mb2_snp_0_Texture2D_0, int(0u)));
    float _903;
    if (_695)
    {
        float _863 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _869 = (_615 * _600) - (_612 * _603);
        float _872 = (_609 * _603) - (_615 * _597);
        float _875 = (_612 * _597) - (_609 * _600);
        float _901 = ((log2((((float(_852.y) * 0.5) * float(_852.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_872 * _872) + (_875 * _875)) + (_869 * _869)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_863 * gl_WorldRayDirectionEXT.x, _863 * gl_WorldRayDirectionEXT.y, _863 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _903 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    }
    else
    {
        _903 = 0.0;
    }
    float _915 = (_561 - ((cbMatDynParam._m0[19u].x * (1.0 - _561)) * (textureLod(sampler2D(M_AMSN_V_Mb2_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbMatDynParam._m0[19u].z * _616) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMatDynParam._m0[19u].z * _617) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _903).x + 0.00999999977648258209228515625))) * ((((((float(texelFetch(l_geomAttrib_0, int((_303 + _255) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_231 + _176) >> 2u)).x >> 24u) * _517)) + (float(texelFetch(l_geomAttrib_0, int((_375 + _327) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[19u].y) + 1.0);
    float _1572 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _916 = isnan(1.0) ? _1572 : (isnan(_1572) ? 1.0 : min(_1572, 1.0));
    float _923 = (_916 * ((_830.x * cbMatDynParam._m0[18u].x) - _757)) + _757;
    float _924 = (_916 * ((_830.y * cbMatDynParam._m0[18u].y) - _758)) + _758;
    float _925 = (_916 * ((_830.z * cbMatDynParam._m0[18u].z) - _759)) + _759;
    uvec2 _938 = uvec2(textureSize(M_AMSN_V_Mb2_snp_0_Texture2D_13, int(0u)));
    float _989;
    if (_695)
    {
        float _949 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _955 = (_615 * _600) - (_612 * _603);
        float _958 = (_609 * _603) - (_615 * _597);
        float _961 = (_612 * _597) - (_609 * _600);
        float _987 = ((log2((((float(_938.y) * 0.5) * float(_938.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_958 * _958) + (_961 * _961)) + (_955 * _955)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_949 * gl_WorldRayDirectionEXT.x, _949 * gl_WorldRayDirectionEXT.y, _949 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _989 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    }
    else
    {
        _989 = 0.0;
    }
    vec4 _991 = textureLod(sampler2D(M_AMSN_V_Mb2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _616) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _617) + cbTextureTilingScale._m0[2u].w), _989);
    float _993 = _991.x;
    float _994 = _991.y;
    float _995 = _991.z;
    uvec2 _1007 = uvec2(textureSize(M_AMSN_V_Mb2_snp_0_Texture2D_14, int(0u)));
    float _1011 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1012 = _1011 * gl_WorldRayDirectionEXT.x;
    float _1013 = _1011 * gl_WorldRayDirectionEXT.y;
    float _1014 = _1011 * gl_WorldRayDirectionEXT.z;
    float _1058;
    if (_695)
    {
        float _1024 = (_615 * _600) - (_612 * _603);
        float _1027 = (_609 * _603) - (_615 * _597);
        float _1030 = (_612 * _597) - (_609 * _600);
        float _1056 = ((log2((((float(_1007.y) * 0.5) * float(_1007.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_1027 * _1027) + (_1030 * _1030)) + (_1024 * _1024)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1012, _1013, _1014), vec3(_628, _630, _631))));
        _1058 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    }
    else
    {
        _1058 = 0.0;
    }
    vec4 _1060 = textureLod(sampler2D(M_AMSN_V_Mb2_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _616) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _617) + cbTextureTilingScale._m0[3u].w), _1058);
    float _1073 = ((_1060.z - _995) * _916) + _995;
    float _1076 = ((((_1060.x - _993) * _916) + _993) * 2.0) + (-1.0);
    float _1078 = ((((_1060.y - _994) * _916) + _994) * 2.0) + (-1.0);
    float _1079 = dot(vec2(_1076, _1078), vec2(_1076, _1078));
    float _1593 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _1084 = sqrt(1.0 - (isnan(1.0) ? _1593 : (isnan(_1593) ? 1.0 : min(_1593, 1.0))));
    float _1087 = fma(_1084, _628, fma(_1078, _644, (_663 * _657) * _1076));
    float _1090 = fma(_1084, _630, fma(_1078, _645, (_663 * _658) * _1076));
    float _1093 = fma(_1084, _631, fma(_1078, _646, (_663 * _659) * _1076));
    float _1097 = inversesqrt(dot(vec3(_1087, _1090, _1093), vec3(_1087, _1090, _1093)));
    float _1098 = _1097 * _1087;
    float _1099 = _1097 * _1090;
    float _1100 = _1097 * _1093;
    float _1112 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1113 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1114 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1115 = (-0.0) - _1012;
    float _1117 = (-0.0) - _1013;
    float _1118 = (-0.0) - _1014;
    float _1124 = float(gl_LaunchIDEXT.x);
    float _1125 = float(gl_LaunchIDEXT.y);
    float _1128 = float(gl_LaunchSizeEXT.x);
    float _1142 = fract(fract(sin(dot(vec2(_1124 / _1128, _1125 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1155 = fract(fract(sin(dot(vec2((_1124 + 128.0) / _1128, (_1125 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1156 = 1.0 - cbMatDynParam._m0[19u].w;
    float _1157 = _1156 * _923;
    float _1158 = _1156 * _924;
    float _1159 = _1156 * _925;
    float _1164 = (_923 + (-0.039999999105930328369140625)) * cbMatDynParam._m0[19u].w;
    float _1165 = (_924 + (-0.039999999105930328369140625)) * cbMatDynParam._m0[19u].w;
    float _1166 = (_925 + (-0.039999999105930328369140625)) * cbMatDynParam._m0[19u].w;
    float _1167 = _1164 + 0.039999999105930328369140625;
    float _1169 = _1165 + 0.039999999105930328369140625;
    float _1170 = _1166 + 0.039999999105930328369140625;
    _63._m0 = 1u;
    uvec4 _1180 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1181 = _1180.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1181, _1180.w, _1181, vec3(_1112, _1113, _1114), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    if (_63._m0 == 0u)
    {
        float _1202 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1098, _1099, _1100));
        float _1604 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1205 = isnan(1.0) ? _1604 : (isnan(_1604) ? 1.0 : min(_1604, 1.0));
        float _1224 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1073) * 0.949999988079071044921875);
        float _1225 = _1224 * _1224;
        float _1226 = g_sceneCB._m0[4u].x - _1012;
        float _1227 = g_sceneCB._m0[4u].y - _1013;
        float _1228 = g_sceneCB._m0[4u].z - _1014;
        float _1232 = inversesqrt(dot(vec3(_1226, _1227, _1228), vec3(_1226, _1227, _1228)));
        float _1233 = _1232 * _1226;
        float _1234 = _1232 * _1227;
        float _1235 = _1232 * _1228;
        float _1236 = dot(vec3(_1098, _1099, _1100), vec3(g_sceneCB._m0[4u].xyz));
        float _1615 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1239 = isnan(1.0) ? _1615 : (isnan(_1615) ? 1.0 : min(_1615, 1.0));
        float _1240 = dot(vec3(_1098, _1099, _1100), vec3(_1115, _1117, _1118));
        float _1626 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1243 = isnan(1.0) ? _1626 : (isnan(_1626) ? 1.0 : min(_1626, 1.0));
        float _1244 = dot(vec3(_1098, _1099, _1100), vec3(_1233, _1234, _1235));
        float _1637 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1247 = isnan(1.0) ? _1637 : (isnan(_1637) ? 1.0 : min(_1637, 1.0));
        float _1248 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1233, _1234, _1235));
        float _1648 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1252 = _1225 * _1225;
        float _1256 = ((_1247 * _1247) * (_1252 + (-1.0))) + 1.0;
        float _1265 = exp2(log2(1.0 - (isnan(1.0) ? _1648 : (isnan(_1648) ? 1.0 : min(_1648, 1.0)))) * 5.0);
        float _1276 = 1.0 - _1225;
        float _1287 = (0.5 / (((_1243 * ((_1239 * _1276) + _1225)) + 9.9999999392252902907785028219223e-09) + (((_1243 * _1276) + _1225) * _1239))) * _1239;
        float _1659 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1289 = (isnan(1.0) ? _1659 : (isnan(_1659) ? 1.0 : min(_1659, 1.0))) * (_1252 / ((_1256 * _1256) * 3.141590118408203125));
        _1296 = ((_1157 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1205;
        _1297 = ((_1158 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1205;
        _1298 = ((_1159 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1205;
        _1299 = (((_1265 * (0.959999978542327880859375 - _1164)) + _1167) * g_sceneCB._m0[5u].x) * _1289;
        _1300 = (((_1265 * (0.959999978542327880859375 - _1165)) + _1169) * g_sceneCB._m0[5u].y) * _1289;
        _1301 = (((_1265 * (0.959999978542327880859375 - _1166)) + _1170) * g_sceneCB._m0[5u].z) * _1289;
    }
    else
    {
        _1296 = 0.0;
        _1297 = 0.0;
        _1298 = 0.0;
        _1299 = 0.0;
        _1300 = 0.0;
        _1301 = 0.0;
    }
    bool _1303 = abs(_1099) < 0.89999997615814208984375;
    float _1305 = float(_1303);
    float _1306 = _1303 ? 0.0 : 1.0;
    float _1309 = (_1305 * _1100) - (_1306 * _1099);
    float _1310 = _1306 * _1098;
    float _1312 = (-0.0) - (_1098 * _1305);
    float _1316 = inversesqrt(dot(vec3(_1309, _1310, _1312), vec3(_1309, _1310, _1312)));
    float _1317 = _1309 * _1316;
    float _1318 = _1310 * _1316;
    float _1319 = _1316 * _1312;
    float _1322 = (_1318 * _1100) - (_1319 * _1099);
    float _1325 = (_1319 * _1098) - (_1317 * _1100);
    float _1328 = (_1317 * _1099) - (_1318 * _1098);
    float _1330;
    float _1338;
    float _1329 = 0.0;
    uint _1331 = 0u;
    float _1335;
    bool _1337;
    for (;;)
    {
        _1335 = (float(_1331) + _1142) * 0.03125;
        _1337 = _1331 == 0u;
        float frontier_phi_49_pred;
        if (_1337)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1480;
            float _1481;
            uint _1483;
            _1480 = 0.0;
            _1481 = 0.5;
            _1483 = _1331;
            float _1339;
            for (;;)
            {
                _1339 = ((_1483 & 1u) != 0u) ? (_1481 + _1480) : _1480;
                uint _1484 = _1483 >> 1u;
                if (_1484 == 0u)
                {
                    break;
                }
                else
                {
                    _1480 = _1339;
                    _1481 *= 0.5;
                    _1483 = _1484;
                }
            }
            frontier_phi_49_pred = _1339;
        }
        _1338 = frontier_phi_49_pred;
        float _1340 = _1338 + _1155;
        float _1344 = sqrt(_1335);
        float _1345 = ((_1340 > 1.0) ? (_1340 + (-1.0)) : _1340) * 6.283185482025146484375;
        float _1348 = cos(_1345) * _1344;
        float _1350 = sin(_1345) * _1344;
        float _1352 = sqrt(1.0 - _1335);
        float _1365 = ((_1352 * _1098) + (_1348 * _1322)) + (_1350 * _1317);
        float _1366 = ((_1352 * _1099) + (_1348 * _1325)) + (_1350 * _1318);
        float _1367 = ((_1352 * _1100) + (_1348 * _1328)) + (_1350 * _1319);
        _62._m0 = 1u;
        uvec4 _1371 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1372 = _1371.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1372, _1371.w, _1372, vec3(_1112, _1113, _1114), 9.9999997473787516355514526367188e-05, vec3(_1365, _1366, _1367), 10000.0, 1);
        float _1378 = dot(vec3(_1098, _1099, _1100), vec3(_1365, _1366, _1367));
        float _1670 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1381 = isnan(1.0) ? _1670 : (isnan(_1670) ? 1.0 : min(_1670, 1.0));
        _1330 = ((float(_62._m0 == 0u) * _1381) / (_1381 * 0.3183098733425140380859375)) + _1329;
        uint _1332 = _1331 + 1u;
        if (_1332 == 32u)
        {
            break;
        }
        else
        {
            _1329 = _1330;
            _1331 = _1332;
            continue;
        }
    }
    float _1389 = _1330 * 0.009947183541953563690185546875;
    float _1394 = dot(vec3(_1012, _1013, _1014), vec3(_1098, _1099, _1100)) * 2.0;
    vec4 _1408 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1012 - (_1394 * _1098), _1013 - (_1394 * _1099), _1014 - (_1394 * _1100)), 4.0 - (_1073 * 4.0));
    float _1413 = dot(vec3(_1115, _1117, _1118), vec3(_1098, _1099, _1100));
    float _1681 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    float _1423 = exp2(log2(1.0 - (isnan(1.0) ? _1681 : (isnan(_1681) ? 1.0 : min(_1681, 1.0)))) * 5.0);
    vec4 _1435 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1098, _1099, _1100), 0.0);
    float _1446 = (_1299 + _1296) + (((_1435.x * _1157) + (((_1423 * (0.959999978542327880859375 - _1164)) + _1167) * _1408.x)) * _1389);
    float _1450 = (_1300 + _1297) + (((_1435.y * _1158) + (((_1423 * (0.959999978542327880859375 - _1165)) + _1169) * _1408.y)) * _1389);
    float _1454 = (_1301 + _1298) + (((_1435.z * _1159) + (((_1423 * (0.959999978542327880859375 - _1166)) + _1170) * _1408.z)) * _1389);
    float _1692 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
    float _1703 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
    float _1714 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
    bool _1463 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1474;
    _1474.x = _1463 ? ((_621 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1692 : (isnan(_1692) ? 1.0 : min(_1692, 1.0)));
    _1474.y = _1463 ? ((_624 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1703 : (isnan(_1703) ? 1.0 : min(_1703, 1.0)));
    _1474.z = _1463 ? ((_627 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1714 : (isnan(_1714) ? 1.0 : min(_1714, 1.0)));
    payload._m0 = _1474;
}


