#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _66
{
    vec3 _m0;
};

struct _70
{
    vec2 _m0;
};

struct _73
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _66 payload;
hitAttributeEXT _70 hit;
layout(location = 1) rayPayloadEXT _73 _75;
layout(location = 2) rayPayloadEXT _73 _76;

vec3 _2500;

void main()
{
    float _84 = float(gl_LaunchSizeEXT.y);
    float _114 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _123 = sqrt(((_115 * _115) + (_114 * _114)) + (_116 * _116)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _84)))));
    uvec4 _134 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _135 = _134.y;
    uint _175;
    uint _177;
    uint _178;
    if (_134.x == 0u)
    {
        uint _143 = (_135 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _152 = uvec3(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_143 + 2u)).x);
        _175 = _152.x;
        _177 = _152.y;
        _178 = _152.z;
    }
    else
    {
        uint _156 = uint(gl_PrimitiveID) * 6u;
        uint _158 = _156 & 4294967292u;
        uint _161 = (_135 + _158) >> 2u;
        uvec2 _168 = uvec2(texelFetch(l_geomIndexBuffer, int(_161)).x, texelFetch(l_geomIndexBuffer, int(_161 + 1u)).x);
        uint _169 = _168.x;
        uint _170 = _168.y;
        uint _172 = _169 >> 16u;
        uint _173 = _170 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_158 == _156)
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _169 & 65535u;
            frontier_phi_3_2_ladder_2 = _173;
        }
        else
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _172;
            frontier_phi_3_2_ladder_2 = _170 >> 16u;
        }
        _175 = frontier_phi_3_2_ladder_1;
        _177 = frontier_phi_3_2_ladder;
        _178 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _182 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _183 = _182.x;
    uint _184 = _182.z;
    bool _185 = _184 != 0u;
    bool _187 = _134.w == 0u;
    bool _188 = _185 || _187;
    uint _189 = _183 * _175;
    uint _190 = _189 + 12u;
    uint _214;
    uint _215;
    uint _216;
    uint _217;
    if (_188)
    {
        uvec4 _193 = texelFetch(l_geomAttrib_0, int(_190 >> 2u));
        uint _194 = _193.x;
        _214 = _194 & 255u;
        _215 = (_194 >> 8u) & 255u;
        _216 = (_194 >> 16u) & 255u;
        _217 = 16u;
    }
    else
    {
        uint _202 = _190 >> 2u;
        uvec2 _208 = uvec2(texelFetch(l_geomAttrib_0, int(_202)).x, texelFetch(l_geomAttrib_0, int(_202 + 1u)).x);
        uint _209 = _208.x;
        _214 = _209 & 65535u;
        _215 = _209 >> 16u;
        _216 = _208.y & 65535u;
        _217 = 20u;
    }
    uvec4 _225 = texelFetch(l_geomAttrib_0, int((_217 + _189) >> 2u));
    uint _226 = _225.x;
    uint _238 = _189 + 4u;
    uvec4 _242 = texelFetch(l_geomAttrib_0, int((_238 + _217) >> 2u));
    uint _243 = _242.x;
    uint _252 = _217 | 8u;
    bool _253 = _184 == 0u;
    uint _254;
    if (_253)
    {
        _254 = _252;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_187)
        {
            frontier_phi_9_10_ladder = _252 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _252 + 8u;
        }
        _254 = frontier_phi_9_10_ladder;
    }
    uint _260 = (_238 + (_185 ? (_254 + 4u) : _254)) >> 2u;
    uvec2 _266 = uvec2(texelFetch(l_geomAttrib_0, int(_260)).x, texelFetch(l_geomAttrib_0, int(_260 + 1u)).x);
    uint _267 = _266.x;
    uint _268 = _266.y;
    float _272 = float(int(uint(int(_267 << 16u) >> int(16u))));
    float _273 = float(int(uint(int(_267) >> int(16u))));
    float _277 = float(int(uint(int(_268 << 16u) >> int(16u))));
    float _278 = float(int(uint(int(_268) >> int(16u))));
    uint _279 = _183 * _177;
    uint _280 = _279 + 12u;
    uint _301;
    uint _302;
    uint _303;
    uint _304;
    if (_188)
    {
        uvec4 _282 = texelFetch(l_geomAttrib_0, int(_280 >> 2u));
        uint _283 = _282.x;
        _301 = _283 & 255u;
        _302 = (_283 >> 8u) & 255u;
        _303 = (_283 >> 16u) & 255u;
        _304 = 16u;
    }
    else
    {
        uint _289 = _280 >> 2u;
        uvec2 _295 = uvec2(texelFetch(l_geomAttrib_0, int(_289)).x, texelFetch(l_geomAttrib_0, int(_289 + 1u)).x);
        uint _296 = _295.x;
        _301 = _296 & 65535u;
        _302 = _296 >> 16u;
        _303 = _295.y & 65535u;
        _304 = 20u;
    }
    uvec4 _310 = texelFetch(l_geomAttrib_0, int((_304 + _279) >> 2u));
    uint _311 = _310.x;
    uint _322 = _279 + 4u;
    uvec4 _325 = texelFetch(l_geomAttrib_0, int((_322 + _304) >> 2u));
    uint _326 = _325.x;
    uint _335 = _304 | 8u;
    uint _336;
    if (_253)
    {
        _336 = _335;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_187)
        {
            frontier_phi_16_17_ladder = _335 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _335 + 8u;
        }
        _336 = frontier_phi_16_17_ladder;
    }
    uint _342 = (_322 + (_185 ? (_336 + 4u) : _336)) >> 2u;
    uvec2 _348 = uvec2(texelFetch(l_geomAttrib_0, int(_342)).x, texelFetch(l_geomAttrib_0, int(_342 + 1u)).x);
    uint _349 = _348.x;
    uint _350 = _348.y;
    float _354 = float(int(uint(int(_349 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_349) >> int(16u))));
    float _359 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _360 = float(int(uint(int(_350) >> int(16u))));
    uint _361 = _183 * _178;
    uint _362 = _361 + 12u;
    uint _383;
    uint _384;
    uint _385;
    uint _386;
    if (_188)
    {
        uvec4 _364 = texelFetch(l_geomAttrib_0, int(_362 >> 2u));
        uint _365 = _364.x;
        _383 = _365 & 255u;
        _384 = (_365 >> 8u) & 255u;
        _385 = (_365 >> 16u) & 255u;
        _386 = 16u;
    }
    else
    {
        uint _371 = _362 >> 2u;
        uvec2 _377 = uvec2(texelFetch(l_geomAttrib_0, int(_371)).x, texelFetch(l_geomAttrib_0, int(_371 + 1u)).x);
        uint _378 = _377.x;
        _383 = _378 & 65535u;
        _384 = _378 >> 16u;
        _385 = _377.y & 65535u;
        _386 = 20u;
    }
    uvec4 _392 = texelFetch(l_geomAttrib_0, int((_386 + _361) >> 2u));
    uint _393 = _392.x;
    uint _404 = _361 + 4u;
    uvec4 _407 = texelFetch(l_geomAttrib_0, int((_404 + _386) >> 2u));
    uint _408 = _407.x;
    uint _417 = _386 | 8u;
    uint _418;
    if (_253)
    {
        _418 = _417;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_187)
        {
            frontier_phi_23_24_ladder = _417 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _417 + 8u;
        }
        _418 = frontier_phi_23_24_ladder;
    }
    uint _424 = (_404 + (_185 ? (_418 + 4u) : _418)) >> 2u;
    uvec2 _430 = uvec2(texelFetch(l_geomAttrib_0, int(_424)).x, texelFetch(l_geomAttrib_0, int(_424 + 1u)).x);
    uint _431 = _430.x;
    uint _432 = _430.y;
    float _436 = float(int(uint(int(_431 << 16u) >> int(16u))));
    float _437 = float(int(uint(int(_431) >> int(16u))));
    float _441 = float(int(uint(int(_432 << 16u) >> int(16u))));
    float _442 = float(int(uint(int(_432) >> int(16u))));
    bool _444 = _134.z == 0u;
    float _480;
    float _481;
    float _482;
    if (_444)
    {
        uint _447 = _175 * 3u;
        uvec3 _456 = uvec3(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_447 + 2u)).x);
        _480 = uintBitsToFloat(_456.x);
        _481 = uintBitsToFloat(_456.y);
        _482 = uintBitsToFloat(_456.z);
    }
    else
    {
        uint _464 = _175 * 2u;
        uvec2 _470 = uvec2(texelFetch(l_geomPositionBuffer, int(_464)).x, texelFetch(l_geomPositionBuffer, int(_464 + 1u)).x);
        uint _471 = _470.x;
        _480 = unpackHalf2x16(_471).x;
        _481 = unpackHalf2x16(_471 >> 16u).x;
        _482 = unpackHalf2x16(_470.y).x;
    }
    float _518;
    float _519;
    float _520;
    if (_444)
    {
        uint _485 = _177 * 3u;
        uvec3 _494 = uvec3(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_485 + 2u)).x);
        _518 = uintBitsToFloat(_494.x);
        _519 = uintBitsToFloat(_494.y);
        _520 = uintBitsToFloat(_494.z);
    }
    else
    {
        uint _502 = _177 * 2u;
        uvec2 _508 = uvec2(texelFetch(l_geomPositionBuffer, int(_502)).x, texelFetch(l_geomPositionBuffer, int(_502 + 1u)).x);
        uint _509 = _508.x;
        _518 = unpackHalf2x16(_509).x;
        _519 = unpackHalf2x16(_509 >> 16u).x;
        _520 = unpackHalf2x16(_508.y).x;
    }
    float _556;
    float _557;
    float _558;
    if (_444)
    {
        uint _523 = _178 * 3u;
        uvec3 _532 = uvec3(texelFetch(l_geomPositionBuffer, int(_523)).x, texelFetch(l_geomPositionBuffer, int(_523 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_523 + 2u)).x);
        _556 = uintBitsToFloat(_532.x);
        _557 = uintBitsToFloat(_532.y);
        _558 = uintBitsToFloat(_532.z);
    }
    else
    {
        uint _540 = _178 * 2u;
        uvec2 _546 = uvec2(texelFetch(l_geomPositionBuffer, int(_540)).x, texelFetch(l_geomPositionBuffer, int(_540 + 1u)).x);
        uint _547 = _546.x;
        _556 = unpackHalf2x16(_547).x;
        _557 = unpackHalf2x16(_547 >> 16u).x;
        _558 = unpackHalf2x16(_546.y).x;
    }
    float _561 = (1.0 - hit._m0.x) - hit._m0.y;
    float _614 = (_354 - _272) * 0.00048828125;
    float _616 = (_355 - _273) * 0.00048828125;
    float _619 = (_436 - _272) * 0.00048828125;
    float _620 = (_437 - _273) * 0.00048828125;
    float _623 = (_359 - _277) * 0.00048828125;
    float _624 = (_360 - _278) * 0.00048828125;
    float _627 = (_441 - _277) * 0.00048828125;
    float _628 = (_442 - _278) * 0.00048828125;
    float _650 = _518 - _480;
    float _651 = _519 - _481;
    float _652 = _520 - _482;
    float _655 = fma(_652, gl_ObjectToWorldEXT[2u].x, fma(_651, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _650));
    float _658 = fma(_652, gl_ObjectToWorldEXT[2u].y, fma(_651, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _650));
    float _661 = fma(_652, gl_ObjectToWorldEXT[2u].z, fma(_651, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _650));
    float _662 = _556 - _480;
    float _663 = _557 - _481;
    float _664 = _558 - _482;
    float _667 = fma(_664, gl_ObjectToWorldEXT[2u].x, fma(_663, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _662));
    float _670 = fma(_664, gl_ObjectToWorldEXT[2u].y, fma(_663, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _662));
    float _673 = fma(_664, gl_ObjectToWorldEXT[2u].z, fma(_663, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _662));
    float _674 = (((_354 * hit._m0.x) + (_272 * _561)) + (_436 * hit._m0.y)) * 0.00048828125;
    float _675 = (((_355 * hit._m0.x) + (_273 * _561)) + (_437 * hit._m0.y)) * 0.00048828125;
    float _676 = (((_359 * hit._m0.x) + (_277 * _561)) + (_441 * hit._m0.y)) * 0.00048828125;
    float _677 = (((_360 * hit._m0.x) + (_278 * _561)) + (_442 * hit._m0.y)) * 0.00048828125;
    float _681 = (((float(_214) * _561) + (-127.0)) + (float(_301) * hit._m0.x)) + (float(_383) * hit._m0.y);
    float _684 = (((float(_215) * _561) + (-127.0)) + (float(_302) * hit._m0.x)) + (float(_384) * hit._m0.y);
    float _687 = (((float(_216) * _561) + (-127.0)) + (float(_303) * hit._m0.x)) + (float(_385) * hit._m0.y);
    float _688 = _681 * 0.0078740157186985015869140625;
    float _690 = _684 * 0.0078740157186985015869140625;
    float _691 = _687 * 0.0078740157186985015869140625;
    float _704 = ((((float(_226 & 255u) * _561) + (-127.0)) + (float(_311 & 255u) * hit._m0.x)) + (float(_393 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _705 = ((((float((_226 >> 8u) & 255u) * _561) + (-127.0)) + (float((_311 >> 8u) & 255u) * hit._m0.x)) + (float((_393 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _706 = ((((float((_226 >> 16u) & 255u) * _561) + (-127.0)) + (float((_311 >> 16u) & 255u) * hit._m0.x)) + (float((_393 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _707 = ((((float(_226 >> 24u) * _561) + (-127.0)) + (float(_311 >> 24u) * hit._m0.x)) + (float(_393 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _729 = ((_705 * _691) - (_706 * _690)) * _707;
    float _730 = ((_706 * _688) - (_704 * _691)) * _707;
    float _731 = ((_704 * _690) - (_705 * _688)) * _707;
    float _735 = inversesqrt(dot(vec3(_729, _730, _731), vec3(_729, _730, _731)));
    float _736 = _735 * _729;
    float _737 = _735 * _730;
    float _738 = _735 * _731;
    uvec2 _757 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2, int(0u)));
    bool _762 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _815;
    if (_762)
    {
        float _773 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _779 = (_673 * _658) - (_670 * _661);
        float _782 = (_667 * _661) - (_673 * _655);
        float _785 = (_670 * _655) - (_667 * _658);
        float _812 = ((log2((((float(_757.y) * 0.5) * float(_757.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_782 * _782) + (_785 * _785)) + (_779 * _779)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_773 * gl_WorldRayDirectionEXT.x, _773 * gl_WorldRayDirectionEXT.y, _773 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _815 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    }
    else
    {
        _815 = 0.0;
    }
    vec4 _819 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _676) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _677) + cbTextureTilingScale._m0[9u].w), _815);
    uvec2 _844 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1, int(0u)));
    float _895;
    if (_762)
    {
        float _855 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _861 = (_673 * _658) - (_670 * _661);
        float _864 = (_667 * _661) - (_673 * _655);
        float _867 = (_670 * _655) - (_667 * _658);
        float _893 = ((log2((((float(_844.y) * 0.5) * float(_844.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_864 * _864) + (_867 * _867)) + (_861 * _861)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_855 * gl_WorldRayDirectionEXT.x, _855 * gl_WorldRayDirectionEXT.y, _855 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _895 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    }
    else
    {
        _895 = 0.0;
    }
    vec4 _897 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _676) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _677) + cbTextureTilingScale._m0[1u].w), _895);
    float _902 = _897.x * cbMtdParam._m0[13u].x;
    float _903 = _897.y * cbMtdParam._m0[13u].y;
    float _904 = _897.z * cbMtdParam._m0[13u].z;
    uvec2 _916 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0, int(0u)));
    float _967;
    if (_762)
    {
        float _927 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _933 = (_673 * _658) - (_670 * _661);
        float _936 = (_667 * _661) - (_673 * _655);
        float _939 = (_670 * _655) - (_667 * _658);
        float _965 = ((log2((((float(_916.y) * 0.5) * float(_916.x)) * abs((_620 * _614) - (_619 * _616))) / (sqrt(((_936 * _936) + (_939 * _939)) + (_933 * _933)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_927 * gl_WorldRayDirectionEXT.x, _927 * gl_WorldRayDirectionEXT.y, _927 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _967 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    }
    else
    {
        _967 = 0.0;
    }
    vec4 _970 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _674) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _675) + cbTextureTilingScale._m0[0u].w), _967);
    uvec2 _994 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3, int(0u)));
    float _1045;
    if (_762)
    {
        float _1005 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1011 = (_673 * _658) - (_670 * _661);
        float _1014 = (_667 * _661) - (_673 * _655);
        float _1017 = (_670 * _655) - (_667 * _658);
        float _1043 = ((log2((((float(_994.y) * 0.5) * float(_994.x)) * abs((_620 * _614) - (_619 * _616))) / (sqrt(((_1014 * _1014) + (_1017 * _1017)) + (_1011 * _1011)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1005 * gl_WorldRayDirectionEXT.x, _1005 * gl_WorldRayDirectionEXT.y, _1005 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1045 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    }
    else
    {
        _1045 = 0.0;
    }
    float _1050 = cbMtdParam._m0[15u].y * textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _674) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _675) + cbTextureTilingScale._m0[10u].w), _1045).x;
    float _1060 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _970.x) * 2.0) - _1050)) + 1.0;
    float _2626 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1061 = isnan(1.0) ? _2626 : (isnan(_2626) ? 1.0 : min(_2626, 1.0));
    float _1068 = (_1061 * ((_819.x * cbMtdParam._m0[11u].x) - _902)) + _902;
    float _1069 = (_1061 * ((_819.y * cbMtdParam._m0[11u].y) - _903)) + _903;
    float _1070 = (_1061 * ((_819.z * cbMtdParam._m0[11u].z) - _904)) + _904;
    uvec2 _1087 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8, int(0u)));
    float _1138;
    if (_762)
    {
        float _1098 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1104 = (_673 * _658) - (_670 * _661);
        float _1107 = (_667 * _661) - (_673 * _655);
        float _1110 = (_670 * _655) - (_667 * _658);
        float _1136 = ((log2((((float(_1087.y) * 0.5) * float(_1087.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1107 * _1107) + (_1110 * _1110)) + (_1104 * _1104)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1098 * gl_WorldRayDirectionEXT.x, _1098 * gl_WorldRayDirectionEXT.y, _1098 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1138 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
    }
    else
    {
        _1138 = 0.0;
    }
    vec4 _1140 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * _676) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _677) + cbTextureTilingScale._m0[15u].w), _1138);
    float _1153 = (((((1.0 - _970.y) * 2.0) - _1050) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].w) + 1.0;
    float _2642 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    float _1154 = isnan(1.0) ? _2642 : (isnan(_2642) ? 1.0 : min(_2642, 1.0));
    float _1161 = (((_1140.x * cbMtdParam._m0[9u].x) - _1068) * _1154) + _1068;
    float _1162 = (_1154 * ((_1140.y * cbMtdParam._m0[9u].y) - _1069)) + _1069;
    float _1163 = (_1154 * ((_1140.z * cbMtdParam._m0[9u].z) - _1070)) + _1070;
    uvec2 _1180 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11, int(0u)));
    float _1231;
    if (_762)
    {
        float _1191 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1197 = (_673 * _658) - (_670 * _661);
        float _1200 = (_667 * _661) - (_673 * _655);
        float _1203 = (_670 * _655) - (_667 * _658);
        float _1229 = ((log2((((float(_1180.y) * 0.5) * float(_1180.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1200 * _1200) + (_1203 * _1203)) + (_1197 * _1197)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1191 * gl_WorldRayDirectionEXT.x, _1191 * gl_WorldRayDirectionEXT.y, _1191 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1231 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
    }
    else
    {
        _1231 = 0.0;
    }
    vec4 _1233 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _676) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _677) + cbTextureTilingScale._m0[3u].w), _1231);
    float _1246 = (((((1.0 - _970.z) * 2.0) - _1050) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _2658 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
    float _1247 = isnan(1.0) ? _2658 : (isnan(_2658) ? 1.0 : min(_2658, 1.0));
    uvec2 _1274 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13, int(0u)));
    float _1325;
    if (_762)
    {
        float _1285 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1291 = (_673 * _658) - (_670 * _661);
        float _1294 = (_667 * _661) - (_673 * _655);
        float _1297 = (_670 * _655) - (_667 * _658);
        float _1323 = ((log2((((float(_1274.y) * 0.5) * float(_1274.x)) * abs((_620 * _614) - (_619 * _616))) / (sqrt(((_1294 * _1294) + (_1297 * _1297)) + (_1291 * _1291)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1285 * gl_WorldRayDirectionEXT.x, _1285 * gl_WorldRayDirectionEXT.y, _1285 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1325 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
    }
    else
    {
        _1325 = 0.0;
    }
    vec4 _1327 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _674) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _675) + cbTextureTilingScale._m0[5u].w), _1325);
    float _1335 = ((((((_1233.x * cbMtdParam._m0[10u].x) - _1161) * _1247) + _1161) * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _1327.x;
    float _1338 = ((((_1247 * ((_1233.y * cbMtdParam._m0[10u].y) - _1162)) + _1162) * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _1327.y;
    float _1341 = ((((_1247 * ((_1233.z * cbMtdParam._m0[10u].z) - _1163)) + _1163) * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _1327.z;
    uvec2 _1354 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5, int(0u)));
    float _1405;
    if (_762)
    {
        float _1365 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1371 = (_673 * _658) - (_670 * _661);
        float _1374 = (_667 * _661) - (_673 * _655);
        float _1377 = (_670 * _655) - (_667 * _658);
        float _1403 = ((log2((((float(_1354.y) * 0.5) * float(_1354.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1374 * _1374) + (_1377 * _1377)) + (_1371 * _1371)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1365 * gl_WorldRayDirectionEXT.x, _1365 * gl_WorldRayDirectionEXT.y, _1365 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1405 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
    }
    else
    {
        _1405 = 0.0;
    }
    vec4 _1408 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _676) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _677) + cbTextureTilingScale._m0[12u].w), _1405);
    float _1410 = _1408.x;
    float _1411 = _1408.y;
    float _1412 = _1408.z;
    uvec2 _1424 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _1475;
    if (_762)
    {
        float _1435 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1441 = (_673 * _658) - (_670 * _661);
        float _1444 = (_667 * _661) - (_673 * _655);
        float _1447 = (_670 * _655) - (_667 * _658);
        float _1473 = ((log2((((float(_1424.y) * 0.5) * float(_1424.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1444 * _1444) + (_1447 * _1447)) + (_1441 * _1441)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1435 * gl_WorldRayDirectionEXT.x, _1435 * gl_WorldRayDirectionEXT.y, _1435 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1475 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
    }
    else
    {
        _1475 = 0.0;
    }
    vec4 _1477 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _676) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _677) + cbTextureTilingScale._m0[13u].w), _1475);
    float _1488 = ((_1477.x - _1410) * _1061) + _1410;
    float _1489 = ((_1477.y - _1411) * _1061) + _1411;
    float _1490 = ((_1477.z - _1412) * _1061) + _1412;
    uvec2 _1502 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15, int(0u)));
    float _1553;
    if (_762)
    {
        float _1513 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1519 = (_673 * _658) - (_670 * _661);
        float _1522 = (_667 * _661) - (_673 * _655);
        float _1525 = (_670 * _655) - (_667 * _658);
        float _1551 = ((log2((((float(_1502.y) * 0.5) * float(_1502.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1522 * _1522) + (_1525 * _1525)) + (_1519 * _1519)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1513 * gl_WorldRayDirectionEXT.x, _1513 * gl_WorldRayDirectionEXT.y, _1513 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1553 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    }
    else
    {
        _1553 = 0.0;
    }
    vec4 _1555 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _676) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _677) + cbTextureTilingScale._m0[7u].w), _1553);
    float _1566 = ((_1555.x - _1488) * _1154) + _1488;
    float _1567 = ((_1555.y - _1489) * _1154) + _1489;
    float _1568 = ((_1555.z - _1490) * _1154) + _1490;
    uvec2 _1580 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16, int(0u)));
    float _1631;
    if (_762)
    {
        float _1591 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1597 = (_673 * _658) - (_670 * _661);
        float _1600 = (_667 * _661) - (_673 * _655);
        float _1603 = (_670 * _655) - (_667 * _658);
        float _1629 = ((log2((((float(_1580.y) * 0.5) * float(_1580.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1600 * _1600) + (_1603 * _1603)) + (_1597 * _1597)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1591 * gl_WorldRayDirectionEXT.x, _1591 * gl_WorldRayDirectionEXT.y, _1591 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1631 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
    }
    else
    {
        _1631 = 0.0;
    }
    vec4 _1633 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _676) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _677) + cbTextureTilingScale._m0[8u].w), _1631);
    float _1646 = ((_1633.z - _1568) * _1247) + _1568;
    uvec2 _1658 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_10, int(0u)));
    float _1709;
    if (_762)
    {
        float _1669 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1675 = (_673 * _658) - (_670 * _661);
        float _1678 = (_667 * _661) - (_673 * _655);
        float _1681 = (_670 * _655) - (_667 * _658);
        float _1707 = ((log2((((float(_1658.y) * 0.5) * float(_1658.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1678 * _1678) + (_1681 * _1681)) + (_1675 * _1675)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1669 * gl_WorldRayDirectionEXT.x, _1669 * gl_WorldRayDirectionEXT.y, _1669 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1709 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
    }
    else
    {
        _1709 = 0.0;
    }
    uvec2 _1725 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_9, int(0u)));
    float _1776;
    if (_762)
    {
        float _1736 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1742 = (_673 * _658) - (_670 * _661);
        float _1745 = (_667 * _661) - (_673 * _655);
        float _1748 = (_670 * _655) - (_667 * _658);
        float _1774 = ((log2((((float(_1725.y) * 0.5) * float(_1725.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1745 * _1745) + (_1748 * _1748)) + (_1742 * _1742)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1736 * gl_WorldRayDirectionEXT.x, _1736 * gl_WorldRayDirectionEXT.y, _1736 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1776 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
    }
    else
    {
        _1776 = 0.0;
    }
    vec4 _1778 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * _676) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _677) + cbTextureTilingScale._m0[16u].w), _1776);
    float _1780 = _1778.x;
    float _1783 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _676) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _677) + cbTextureTilingScale._m0[2u].w), _1709).x - _1780) * _1061) + _1780;
    uvec2 _1795 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_12, int(0u)));
    float _1846;
    if (_762)
    {
        float _1806 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1812 = (_673 * _658) - (_670 * _661);
        float _1815 = (_667 * _661) - (_673 * _655);
        float _1818 = (_670 * _655) - (_667 * _658);
        float _1844 = ((log2((((float(_1795.y) * 0.5) * float(_1795.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1815 * _1815) + (_1818 * _1818)) + (_1812 * _1812)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1806 * gl_WorldRayDirectionEXT.x, _1806 * gl_WorldRayDirectionEXT.y, _1806 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1846 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
    }
    else
    {
        _1846 = 0.0;
    }
    float _1853 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _676) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _677) + cbTextureTilingScale._m0[4u].w), _1846).x - _1783) * _1154) + _1783;
    uvec2 _1865 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_14, int(0u)));
    float _1916;
    if (_762)
    {
        float _1876 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1882 = (_673 * _658) - (_670 * _661);
        float _1885 = (_667 * _661) - (_673 * _655);
        float _1888 = (_670 * _655) - (_667 * _658);
        float _1914 = ((log2((((float(_1865.y) * 0.5) * float(_1865.x)) * abs((_628 * _623) - (_627 * _624))) / (sqrt(((_1885 * _1885) + (_1888 * _1888)) + (_1882 * _1882)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1876 * gl_WorldRayDirectionEXT.x, _1876 * gl_WorldRayDirectionEXT.y, _1876 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1916 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
    }
    else
    {
        _1916 = 0.0;
    }
    uvec2 _1935 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_4, int(0u)));
    float _1986;
    if (_762)
    {
        float _1946 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1952 = (_673 * _658) - (_670 * _661);
        float _1955 = (_667 * _661) - (_673 * _655);
        float _1958 = (_670 * _655) - (_667 * _658);
        float _1984 = ((log2((((float(_1935.y) * 0.5) * float(_1935.x)) * abs((_620 * _614) - (_619 * _616))) / (sqrt(((_1955 * _1955) + (_1958 * _1958)) + (_1952 * _1952)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_1946 * gl_WorldRayDirectionEXT.x, _1946 * gl_WorldRayDirectionEXT.y, _1946 * gl_WorldRayDirectionEXT.z), vec3(_688, _690, _691))));
        _1986 = isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0));
    }
    else
    {
        _1986 = 0.0;
    }
    vec4 _1988 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _674) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _675) + cbTextureTilingScale._m0[11u].w), _1986);
    float _1990 = _1988.x;
    float _2719 = isnan(0.0) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.0 : max(cbMtdParam._m0[14u].y, 0.0));
    float _1994 = (((((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _676) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _677) + cbTextureTilingScale._m0[6u].w), _1916).x - _1853) * _1247) + _1853) - _1990) * (isnan(1.0) ? _2719 : (isnan(_2719) ? 1.0 : min(_2719, 1.0)))) + _1990;
    float _1997 = ((((_1633.x - _1566) * _1247) + _1566) * 2.0) + (-1.0);
    float _1999 = ((((_1633.y - _1567) * _1247) + _1567) * 2.0) + (-1.0);
    float _2000 = dot(vec2(_1997, _1999), vec2(_1997, _1999));
    float _2730 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
    float _2005 = sqrt(1.0 - (isnan(1.0) ? _2730 : (isnan(_2730) ? 1.0 : min(_2730, 1.0))));
    float _2007 = fma(_2005, _688, fma(_1999, ((((float(_243 & 255u) * _561) + (-127.0)) + (float(_326 & 255u) * hit._m0.x)) + (float(_408 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _2009 = fma(_2005, _690, fma(_1999, ((((float((_243 >> 8u) & 255u) * _561) + (-127.0)) + (float((_326 >> 8u) & 255u) * hit._m0.x)) + (float((_408 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _2011 = fma(_2005, _691, fma(_1999, ((((float((_243 >> 16u) & 255u) * _561) + (-127.0)) + (float((_326 >> 16u) & 255u) * hit._m0.x)) + (float((_408 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625, 0.0));
    float _2015 = inversesqrt(dot(vec3(_2007, _2009, _2011), vec3(_2007, _2009, _2011)));
    float _2016 = _2015 * _2007;
    float _2017 = _2015 * _2009;
    float _2018 = _2015 * _2011;
    float _2021 = fma(_2018, _738, fma(_2017, _737, _2016 * _736));
    float _2024 = fma(_2018, _706, fma(_2017, _705, _2016 * _704));
    float _2027 = fma(_2018, _691, fma(_2017, _690, _2016 * _688));
    float _2031 = inversesqrt(dot(vec3(_2021, _2024, _2027), vec3(_2021, _2024, _2027)));
    float _2034 = _2031 * _2027;
    uvec2 _2047 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7, int(0u)));
    float _2051 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2052 = _2051 * gl_WorldRayDirectionEXT.x;
    float _2053 = _2051 * gl_WorldRayDirectionEXT.y;
    float _2054 = _2051 * gl_WorldRayDirectionEXT.z;
    float _2098;
    if (_762)
    {
        float _2064 = (_673 * _658) - (_670 * _661);
        float _2067 = (_667 * _661) - (_673 * _655);
        float _2070 = (_670 * _655) - (_667 * _658);
        float _2096 = ((log2((((float(_2047.y) * 0.5) * float(_2047.x)) * abs((_620 * _614) - (_619 * _616))) / (sqrt(((_2067 * _2067) + (_2070 * _2070)) + (_2064 * _2064)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_123) / abs(dot(vec3(_2052, _2053, _2054), vec3(_688, _690, _691))));
        _2098 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    }
    else
    {
        _2098 = 0.0;
    }
    vec4 _2100 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _674) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _675) + cbTextureTilingScale._m0[14u].w), _2098);
    float _2110 = (((_2100.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z) + (_2031 * _2021);
    float _2111 = (((_2100.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z) + (_2031 * _2024);
    float _2114 = fma(_2034, _688, fma(_2111, _704, _2110 * _736));
    float _2117 = fma(_2034, _690, fma(_2111, _705, _2110 * _737));
    float _2120 = fma(_2034, _691, fma(_2111, _706, _2110 * _738));
    float _2124 = inversesqrt(dot(vec3(_2114, _2117, _2120), vec3(_2114, _2117, _2120)));
    float _2125 = _2124 * _2114;
    float _2126 = _2124 * _2117;
    float _2127 = _2124 * _2120;
    float _2139 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2140 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2141 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2142 = (-0.0) - _2052;
    float _2144 = (-0.0) - _2053;
    float _2145 = (-0.0) - _2054;
    float _2151 = float(gl_LaunchIDEXT.x);
    float _2152 = float(gl_LaunchIDEXT.y);
    float _2155 = float(gl_LaunchSizeEXT.x);
    float _2169 = fract(fract(sin(dot(vec2(_2151 / _2155, _2152 / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2182 = fract(fract(sin(dot(vec2((_2151 + 128.0) / _2155, (_2152 + 128.0) / _84), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2183 = 1.0 - _1994;
    float _2184 = _2183 * _1335;
    float _2185 = _2183 * _1338;
    float _2186 = _2183 * _1341;
    float _2191 = _1994 * (_1335 + (-0.039999999105930328369140625));
    float _2192 = _1994 * (_1338 + (-0.039999999105930328369140625));
    float _2193 = _1994 * (_1341 + (-0.039999999105930328369140625));
    float _2194 = _2191 + 0.039999999105930328369140625;
    float _2196 = _2192 + 0.039999999105930328369140625;
    float _2197 = _2193 + 0.039999999105930328369140625;
    _76._m0 = 1u;
    uvec4 _2207 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2208 = _2207.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2208, _2207.w, _2208, vec3(_2139, _2140, _2141), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2322;
    float _2323;
    float _2324;
    float _2325;
    float _2326;
    float _2327;
    if (_76._m0 == 0u)
    {
        float _2228 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2125, _2126, _2127));
        float _2746 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
        float _2231 = isnan(1.0) ? _2746 : (isnan(_2746) ? 1.0 : min(_2746, 1.0));
        float _2250 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1646) * 0.949999988079071044921875);
        float _2251 = _2250 * _2250;
        float _2252 = g_sceneCB._m0[4u].x - _2052;
        float _2253 = g_sceneCB._m0[4u].y - _2053;
        float _2254 = g_sceneCB._m0[4u].z - _2054;
        float _2258 = inversesqrt(dot(vec3(_2252, _2253, _2254), vec3(_2252, _2253, _2254)));
        float _2259 = _2258 * _2252;
        float _2260 = _2258 * _2253;
        float _2261 = _2258 * _2254;
        float _2262 = dot(vec3(_2125, _2126, _2127), vec3(g_sceneCB._m0[4u].xyz));
        float _2757 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
        float _2265 = isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0));
        float _2266 = dot(vec3(_2125, _2126, _2127), vec3(_2142, _2144, _2145));
        float _2768 = isnan(0.0) ? _2266 : (isnan(_2266) ? 0.0 : max(_2266, 0.0));
        float _2269 = isnan(1.0) ? _2768 : (isnan(_2768) ? 1.0 : min(_2768, 1.0));
        float _2270 = dot(vec3(_2125, _2126, _2127), vec3(_2259, _2260, _2261));
        float _2779 = isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0));
        float _2273 = isnan(1.0) ? _2779 : (isnan(_2779) ? 1.0 : min(_2779, 1.0));
        float _2274 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2259, _2260, _2261));
        float _2790 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
        float _2278 = _2251 * _2251;
        float _2282 = ((_2273 * _2273) * (_2278 + (-1.0))) + 1.0;
        float _2291 = exp2(log2(1.0 - (isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0)))) * 5.0);
        float _2302 = 1.0 - _2251;
        float _2313 = (0.5 / (((_2269 * ((_2265 * _2302) + _2251)) + 9.9999999392252902907785028219223e-09) + (((_2269 * _2302) + _2251) * _2265))) * _2265;
        float _2801 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
        float _2315 = (isnan(1.0) ? _2801 : (isnan(_2801) ? 1.0 : min(_2801, 1.0))) * (_2278 / ((_2282 * _2282) * 3.141590118408203125));
        _2322 = ((_2184 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2231;
        _2323 = ((_2185 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2231;
        _2324 = ((_2186 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2231;
        _2325 = (((_2291 * (0.959999978542327880859375 - _2191)) + _2194) * g_sceneCB._m0[5u].x) * _2315;
        _2326 = (((_2291 * (0.959999978542327880859375 - _2192)) + _2196) * g_sceneCB._m0[5u].y) * _2315;
        _2327 = (((_2291 * (0.959999978542327880859375 - _2193)) + _2197) * g_sceneCB._m0[5u].z) * _2315;
    }
    else
    {
        _2322 = 0.0;
        _2323 = 0.0;
        _2324 = 0.0;
        _2325 = 0.0;
        _2326 = 0.0;
        _2327 = 0.0;
    }
    bool _2329 = abs(_2126) < 0.89999997615814208984375;
    float _2331 = float(_2329);
    float _2332 = _2329 ? 0.0 : 1.0;
    float _2335 = (_2331 * _2127) - (_2332 * _2126);
    float _2336 = _2332 * _2125;
    float _2338 = (-0.0) - (_2125 * _2331);
    float _2342 = inversesqrt(dot(vec3(_2335, _2336, _2338), vec3(_2335, _2336, _2338)));
    float _2343 = _2335 * _2342;
    float _2344 = _2336 * _2342;
    float _2345 = _2342 * _2338;
    float _2348 = (_2344 * _2127) - (_2345 * _2126);
    float _2351 = (_2345 * _2125) - (_2343 * _2127);
    float _2354 = (_2343 * _2126) - (_2344 * _2125);
    float _2356;
    float _2364;
    float _2355 = 0.0;
    uint _2357 = 0u;
    float _2361;
    bool _2363;
    for (;;)
    {
        _2361 = (float(_2357) + _2169) * 0.03125;
        _2363 = _2357 == 0u;
        float frontier_phi_73_pred;
        if (_2363)
        {
            frontier_phi_73_pred = 0.0;
        }
        else
        {
            float _2505;
            float _2506;
            uint _2508;
            _2505 = 0.0;
            _2506 = 0.5;
            _2508 = _2357;
            float _2365;
            for (;;)
            {
                _2365 = ((_2508 & 1u) != 0u) ? (_2506 + _2505) : _2505;
                uint _2509 = _2508 >> 1u;
                if (_2509 == 0u)
                {
                    break;
                }
                else
                {
                    _2505 = _2365;
                    _2506 *= 0.5;
                    _2508 = _2509;
                }
            }
            frontier_phi_73_pred = _2365;
        }
        _2364 = frontier_phi_73_pred;
        float _2366 = _2364 + _2182;
        float _2370 = sqrt(_2361);
        float _2371 = ((_2366 > 1.0) ? (_2366 + (-1.0)) : _2366) * 6.283185482025146484375;
        float _2374 = cos(_2371) * _2370;
        float _2376 = sin(_2371) * _2370;
        float _2378 = sqrt(1.0 - _2361);
        float _2391 = ((_2378 * _2125) + (_2374 * _2348)) + (_2376 * _2343);
        float _2392 = ((_2378 * _2126) + (_2374 * _2351)) + (_2376 * _2344);
        float _2393 = ((_2378 * _2127) + (_2374 * _2354)) + (_2376 * _2345);
        _75._m0 = 1u;
        uvec4 _2397 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2398 = _2397.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2398, _2397.w, _2398, vec3(_2139, _2140, _2141), 9.9999997473787516355514526367188e-05, vec3(_2391, _2392, _2393), 10000.0, 1);
        float _2404 = dot(vec3(_2125, _2126, _2127), vec3(_2391, _2392, _2393));
        float _2812 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
        float _2407 = isnan(1.0) ? _2812 : (isnan(_2812) ? 1.0 : min(_2812, 1.0));
        _2356 = ((float(_75._m0 == 0u) * _2407) / (_2407 * 0.3183098733425140380859375)) + _2355;
        uint _2358 = _2357 + 1u;
        if (_2358 == 32u)
        {
            break;
        }
        else
        {
            _2355 = _2356;
            _2357 = _2358;
            continue;
        }
    }
    float _2415 = _2356 * 0.009947183541953563690185546875;
    float _2420 = dot(vec3(_2052, _2053, _2054), vec3(_2125, _2126, _2127)) * 2.0;
    vec4 _2434 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2052 - (_2420 * _2125), _2053 - (_2420 * _2126), _2054 - (_2420 * _2127)), 4.0 - (_1646 * 4.0));
    float _2439 = dot(vec3(_2142, _2144, _2145), vec3(_2125, _2126, _2127));
    float _2823 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
    float _2449 = exp2(log2(1.0 - (isnan(1.0) ? _2823 : (isnan(_2823) ? 1.0 : min(_2823, 1.0)))) * 5.0);
    vec4 _2461 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2125, _2126, _2127), 0.0);
    float _2472 = (_2325 + _2322) + (((_2461.x * _2184) + (((_2449 * (0.959999978542327880859375 - _2191)) + _2194) * _2434.x)) * _2415);
    float _2476 = (_2326 + _2323) + (((_2461.y * _2185) + (((_2449 * (0.959999978542327880859375 - _2192)) + _2196) * _2434.y)) * _2415);
    float _2480 = (_2327 + _2324) + (((_2461.z * _2186) + (((_2449 * (0.959999978542327880859375 - _2193)) + _2197) * _2434.z)) * _2415);
    float _2834 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _2845 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2856 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
    bool _2488 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2499;
    _2499.x = _2488 ? ((_681 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2834 : (isnan(_2834) ? 1.0 : min(_2834, 1.0)));
    _2499.y = _2488 ? ((_684 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2845 : (isnan(_2845) ? 1.0 : min(_2845, 1.0)));
    _2499.z = _2488 ? ((_687 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2856 : (isnan(_2856) ? 1.0 : min(_2856, 1.0)));
    payload._m0 = _2499;
}


