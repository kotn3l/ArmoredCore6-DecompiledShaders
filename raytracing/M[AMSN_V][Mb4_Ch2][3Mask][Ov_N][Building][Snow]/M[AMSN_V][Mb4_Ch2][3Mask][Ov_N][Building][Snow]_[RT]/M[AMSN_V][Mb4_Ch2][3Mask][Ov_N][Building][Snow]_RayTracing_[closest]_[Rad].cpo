#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _67
{
    vec3 _m0;
};

struct _71
{
    vec2 _m0;
};

struct _74
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _67 payload;
hitAttributeEXT _71 hit;
layout(location = 1) rayPayloadEXT _74 _76;
layout(location = 2) rayPayloadEXT _74 _77;

vec3 _3210;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _115 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _124 = sqrt(((_116 * _116) + (_115 * _115)) + (_117 * _117)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _135 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _136 = _135.y;
    uint _176;
    uint _178;
    uint _179;
    if (_135.x == 0u)
    {
        uint _144 = (_136 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _153 = uvec3(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_144 + 2u)).x);
        _176 = _153.x;
        _178 = _153.y;
        _179 = _153.z;
    }
    else
    {
        uint _157 = uint(gl_PrimitiveID) * 6u;
        uint _159 = _157 & 4294967292u;
        uint _162 = (_136 + _159) >> 2u;
        uvec2 _169 = uvec2(texelFetch(l_geomIndexBuffer, int(_162)).x, texelFetch(l_geomIndexBuffer, int(_162 + 1u)).x);
        uint _170 = _169.x;
        uint _171 = _169.y;
        uint _173 = _170 >> 16u;
        uint _174 = _171 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_159 == _157)
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _170 & 65535u;
            frontier_phi_3_2_ladder_2 = _174;
        }
        else
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _171 >> 16u;
        }
        _176 = frontier_phi_3_2_ladder_1;
        _178 = frontier_phi_3_2_ladder;
        _179 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _183 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _184 = _183.x;
    uint _185 = _183.z;
    bool _186 = _185 != 0u;
    bool _188 = _135.w == 0u;
    bool _189 = _186 || _188;
    uint _190 = _184 * _176;
    uint _191 = _190 + 12u;
    uint _215;
    uint _216;
    uint _217;
    uint _218;
    if (_189)
    {
        uvec4 _194 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _195 = _194.x;
        _215 = _195 & 255u;
        _216 = (_195 >> 8u) & 255u;
        _217 = (_195 >> 16u) & 255u;
        _218 = 16u;
    }
    else
    {
        uint _203 = _191 >> 2u;
        uvec2 _209 = uvec2(texelFetch(l_geomAttrib_0, int(_203)).x, texelFetch(l_geomAttrib_0, int(_203 + 1u)).x);
        uint _210 = _209.x;
        _215 = _210 & 65535u;
        _216 = _210 >> 16u;
        _217 = _209.y & 65535u;
        _218 = 20u;
    }
    uvec4 _226 = texelFetch(l_geomAttrib_0, int((_218 + _190) >> 2u));
    uint _227 = _226.x;
    uint _239 = _190 + 4u;
    uvec4 _243 = texelFetch(l_geomAttrib_0, int((_239 + _218) >> 2u));
    uint _244 = _243.x;
    uint _253 = _218 | 8u;
    bool _254 = _185 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _253;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_188)
        {
            frontier_phi_9_10_ladder = _253 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _253 + 8u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uint _259 = _186 ? (_255 + 4u) : _255;
    uint _261 = (_239 + _259) >> 2u;
    uvec2 _267 = uvec2(texelFetch(l_geomAttrib_0, int(_261)).x, texelFetch(l_geomAttrib_0, int(_261 + 1u)).x);
    uint _268 = _267.x;
    uint _269 = _267.y;
    float _273 = float(int(uint(int(_268 << 16u) >> int(16u))));
    float _274 = float(int(uint(int(_268) >> int(16u))));
    float _278 = float(int(uint(int(_269 << 16u) >> int(16u))));
    float _279 = float(int(uint(int(_269) >> int(16u))));
    uvec4 _283 = texelFetch(l_geomAttrib_0, int(((_190 + 12u) + _259) >> 2u));
    uint _284 = _283.x;
    uvec4 _293 = texelFetch(l_geomAttrib_0, int(((_190 + 16u) + _259) >> 2u));
    uint _294 = _293.x;
    uvec4 _303 = texelFetch(l_geomAttrib_0, int(((_190 + 20u) + _259) >> 2u));
    uint _304 = _303.x;
    uint _313 = _184 * _178;
    uint _314 = _313 + 12u;
    uint _335;
    uint _336;
    uint _337;
    uint _338;
    if (_189)
    {
        uvec4 _316 = texelFetch(l_geomAttrib_0, int(_314 >> 2u));
        uint _317 = _316.x;
        _335 = _317 & 255u;
        _336 = (_317 >> 8u) & 255u;
        _337 = (_317 >> 16u) & 255u;
        _338 = 16u;
    }
    else
    {
        uint _323 = _314 >> 2u;
        uvec2 _329 = uvec2(texelFetch(l_geomAttrib_0, int(_323)).x, texelFetch(l_geomAttrib_0, int(_323 + 1u)).x);
        uint _330 = _329.x;
        _335 = _330 & 65535u;
        _336 = _330 >> 16u;
        _337 = _329.y & 65535u;
        _338 = 20u;
    }
    uvec4 _344 = texelFetch(l_geomAttrib_0, int((_338 + _313) >> 2u));
    uint _345 = _344.x;
    uint _356 = _313 + 4u;
    uvec4 _359 = texelFetch(l_geomAttrib_0, int((_356 + _338) >> 2u));
    uint _360 = _359.x;
    uint _369 = _338 | 8u;
    uint _370;
    if (_254)
    {
        _370 = _369;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_188)
        {
            frontier_phi_16_17_ladder = _369 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _369 + 8u;
        }
        _370 = frontier_phi_16_17_ladder;
    }
    uint _374 = _186 ? (_370 + 4u) : _370;
    uint _376 = (_356 + _374) >> 2u;
    uvec2 _382 = uvec2(texelFetch(l_geomAttrib_0, int(_376)).x, texelFetch(l_geomAttrib_0, int(_376 + 1u)).x);
    uint _383 = _382.x;
    uint _384 = _382.y;
    float _388 = float(int(uint(int(_383 << 16u) >> int(16u))));
    float _389 = float(int(uint(int(_383) >> int(16u))));
    float _393 = float(int(uint(int(_384 << 16u) >> int(16u))));
    float _394 = float(int(uint(int(_384) >> int(16u))));
    uvec4 _398 = texelFetch(l_geomAttrib_0, int(((_313 + 12u) + _374) >> 2u));
    uint _399 = _398.x;
    uvec4 _408 = texelFetch(l_geomAttrib_0, int(((_313 + 16u) + _374) >> 2u));
    uint _409 = _408.x;
    uvec4 _418 = texelFetch(l_geomAttrib_0, int(((_313 + 20u) + _374) >> 2u));
    uint _419 = _418.x;
    uint _428 = _184 * _179;
    uint _429 = _428 + 12u;
    uint _450;
    uint _451;
    uint _452;
    uint _453;
    if (_189)
    {
        uvec4 _431 = texelFetch(l_geomAttrib_0, int(_429 >> 2u));
        uint _432 = _431.x;
        _450 = _432 & 255u;
        _451 = (_432 >> 8u) & 255u;
        _452 = (_432 >> 16u) & 255u;
        _453 = 16u;
    }
    else
    {
        uint _438 = _429 >> 2u;
        uvec2 _444 = uvec2(texelFetch(l_geomAttrib_0, int(_438)).x, texelFetch(l_geomAttrib_0, int(_438 + 1u)).x);
        uint _445 = _444.x;
        _450 = _445 & 65535u;
        _451 = _445 >> 16u;
        _452 = _444.y & 65535u;
        _453 = 20u;
    }
    uvec4 _459 = texelFetch(l_geomAttrib_0, int((_453 + _428) >> 2u));
    uint _460 = _459.x;
    uint _471 = _428 + 4u;
    uvec4 _474 = texelFetch(l_geomAttrib_0, int((_471 + _453) >> 2u));
    uint _475 = _474.x;
    uint _484 = _453 | 8u;
    uint _485;
    if (_254)
    {
        _485 = _484;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_188)
        {
            frontier_phi_23_24_ladder = _484 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _484 + 8u;
        }
        _485 = frontier_phi_23_24_ladder;
    }
    uint _489 = _186 ? (_485 + 4u) : _485;
    uint _491 = (_471 + _489) >> 2u;
    uvec2 _497 = uvec2(texelFetch(l_geomAttrib_0, int(_491)).x, texelFetch(l_geomAttrib_0, int(_491 + 1u)).x);
    uint _498 = _497.x;
    uint _499 = _497.y;
    float _503 = float(int(uint(int(_498 << 16u) >> int(16u))));
    float _504 = float(int(uint(int(_498) >> int(16u))));
    float _508 = float(int(uint(int(_499 << 16u) >> int(16u))));
    float _509 = float(int(uint(int(_499) >> int(16u))));
    uvec4 _513 = texelFetch(l_geomAttrib_0, int(((_428 + 12u) + _489) >> 2u));
    uint _514 = _513.x;
    uvec4 _523 = texelFetch(l_geomAttrib_0, int(((_428 + 16u) + _489) >> 2u));
    uint _524 = _523.x;
    uvec4 _533 = texelFetch(l_geomAttrib_0, int(((_428 + 20u) + _489) >> 2u));
    uint _534 = _533.x;
    bool _544 = _135.z == 0u;
    float _580;
    float _581;
    float _582;
    if (_544)
    {
        uint _547 = _176 * 3u;
        uvec3 _556 = uvec3(texelFetch(l_geomPositionBuffer, int(_547)).x, texelFetch(l_geomPositionBuffer, int(_547 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_547 + 2u)).x);
        _580 = uintBitsToFloat(_556.x);
        _581 = uintBitsToFloat(_556.y);
        _582 = uintBitsToFloat(_556.z);
    }
    else
    {
        uint _564 = _176 * 2u;
        uvec2 _570 = uvec2(texelFetch(l_geomPositionBuffer, int(_564)).x, texelFetch(l_geomPositionBuffer, int(_564 + 1u)).x);
        uint _571 = _570.x;
        _580 = unpackHalf2x16(_571).x;
        _581 = unpackHalf2x16(_571 >> 16u).x;
        _582 = unpackHalf2x16(_570.y).x;
    }
    float _618;
    float _619;
    float _620;
    if (_544)
    {
        uint _585 = _178 * 3u;
        uvec3 _594 = uvec3(texelFetch(l_geomPositionBuffer, int(_585)).x, texelFetch(l_geomPositionBuffer, int(_585 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_585 + 2u)).x);
        _618 = uintBitsToFloat(_594.x);
        _619 = uintBitsToFloat(_594.y);
        _620 = uintBitsToFloat(_594.z);
    }
    else
    {
        uint _602 = _178 * 2u;
        uvec2 _608 = uvec2(texelFetch(l_geomPositionBuffer, int(_602)).x, texelFetch(l_geomPositionBuffer, int(_602 + 1u)).x);
        uint _609 = _608.x;
        _618 = unpackHalf2x16(_609).x;
        _619 = unpackHalf2x16(_609 >> 16u).x;
        _620 = unpackHalf2x16(_608.y).x;
    }
    float _656;
    float _657;
    float _658;
    if (_544)
    {
        uint _623 = _179 * 3u;
        uvec3 _632 = uvec3(texelFetch(l_geomPositionBuffer, int(_623)).x, texelFetch(l_geomPositionBuffer, int(_623 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_623 + 2u)).x);
        _656 = uintBitsToFloat(_632.x);
        _657 = uintBitsToFloat(_632.y);
        _658 = uintBitsToFloat(_632.z);
    }
    else
    {
        uint _640 = _179 * 2u;
        uvec2 _646 = uvec2(texelFetch(l_geomPositionBuffer, int(_640)).x, texelFetch(l_geomPositionBuffer, int(_640 + 1u)).x);
        uint _647 = _646.x;
        _656 = unpackHalf2x16(_647).x;
        _657 = unpackHalf2x16(_647 >> 16u).x;
        _658 = unpackHalf2x16(_646.y).x;
    }
    float _661 = (1.0 - hit._m0.x) - hit._m0.y;
    float _712 = _661 * 0.0039215688593685626983642578125;
    float _716 = hit._m0.x * 0.0039215688593685626983642578125;
    float _719 = hit._m0.y * 0.0039215688593685626983642578125;
    float _730 = (((float(_409 & 255u) * hit._m0.x) + (float(_294 & 255u) * _661)) + (float(_524 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _733 = (((float((_409 >> 8u) & 255u) * hit._m0.x) + (float((_294 >> 8u) & 255u) * _661)) + (float((_524 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _745 = (((float(_419 & 255u) * hit._m0.x) + (float(_304 & 255u) * _661)) + (float(_534 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _748 = (((float((_419 >> 8u) & 255u) * hit._m0.x) + (float((_304 >> 8u) & 255u) * _661)) + (float((_534 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _751 = (((float((_419 >> 16u) & 255u) * hit._m0.x) + (float((_304 >> 16u) & 255u) * _661)) + (float((_534 >> 16u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _754 = (_388 - _273) * 0.00048828125;
    float _756 = (_389 - _274) * 0.00048828125;
    float _759 = (_503 - _273) * 0.00048828125;
    float _760 = (_504 - _274) * 0.00048828125;
    float _763 = (_393 - _278) * 0.00048828125;
    float _764 = (_394 - _279) * 0.00048828125;
    float _767 = (_508 - _278) * 0.00048828125;
    float _768 = (_509 - _279) * 0.00048828125;
    float _790 = _618 - _580;
    float _791 = _619 - _581;
    float _792 = _620 - _582;
    float _795 = fma(_792, gl_ObjectToWorldEXT[2u].x, fma(_791, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _790));
    float _798 = fma(_792, gl_ObjectToWorldEXT[2u].y, fma(_791, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _790));
    float _801 = fma(_792, gl_ObjectToWorldEXT[2u].z, fma(_791, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _790));
    float _802 = _656 - _580;
    float _803 = _657 - _581;
    float _804 = _658 - _582;
    float _807 = fma(_804, gl_ObjectToWorldEXT[2u].x, fma(_803, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _802));
    float _810 = fma(_804, gl_ObjectToWorldEXT[2u].y, fma(_803, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _802));
    float _813 = fma(_804, gl_ObjectToWorldEXT[2u].z, fma(_803, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _802));
    float _814 = (((_388 * hit._m0.x) + (_273 * _661)) + (_503 * hit._m0.y)) * 0.00048828125;
    float _815 = (((_389 * hit._m0.x) + (_274 * _661)) + (_504 * hit._m0.y)) * 0.00048828125;
    float _816 = (((_393 * hit._m0.x) + (_278 * _661)) + (_508 * hit._m0.y)) * 0.00048828125;
    float _817 = (((_394 * hit._m0.x) + (_279 * _661)) + (_509 * hit._m0.y)) * 0.00048828125;
    float _821 = (((float(_215) * _661) + (-127.0)) + (float(_335) * hit._m0.x)) + (float(_450) * hit._m0.y);
    float _824 = (((float(_216) * _661) + (-127.0)) + (float(_336) * hit._m0.x)) + (float(_451) * hit._m0.y);
    float _827 = (((float(_217) * _661) + (-127.0)) + (float(_337) * hit._m0.x)) + (float(_452) * hit._m0.y);
    float _828 = _821 * 0.0078740157186985015869140625;
    float _830 = _824 * 0.0078740157186985015869140625;
    float _831 = _827 * 0.0078740157186985015869140625;
    float _844 = ((((float(_227 & 255u) * _661) + (-127.0)) + (float(_345 & 255u) * hit._m0.x)) + (float(_460 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _845 = ((((float((_227 >> 8u) & 255u) * _661) + (-127.0)) + (float((_345 >> 8u) & 255u) * hit._m0.x)) + (float((_460 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _846 = ((((float((_227 >> 16u) & 255u) * _661) + (-127.0)) + (float((_345 >> 16u) & 255u) * hit._m0.x)) + (float((_460 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _847 = ((((float(_227 >> 24u) * _661) + (-127.0)) + (float(_345 >> 24u) * hit._m0.x)) + (float(_460 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _857 = ((((float(_244 & 255u) * _661) + (-127.0)) + (float(_360 & 255u) * hit._m0.x)) + (float(_475 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _858 = ((((float((_244 >> 8u) & 255u) * _661) + (-127.0)) + (float((_360 >> 8u) & 255u) * hit._m0.x)) + (float((_475 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _859 = ((((float((_244 >> 16u) & 255u) * _661) + (-127.0)) + (float((_360 >> 16u) & 255u) * hit._m0.x)) + (float((_475 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _869 = ((_845 * _831) - (_846 * _830)) * _847;
    float _870 = ((_846 * _828) - (_844 * _831)) * _847;
    float _871 = ((_844 * _830) - (_845 * _828)) * _847;
    float _875 = inversesqrt(dot(vec3(_869, _870, _871), vec3(_869, _870, _871)));
    float _876 = _875 * _869;
    float _877 = _875 * _870;
    float _878 = _875 * _871;
    uvec2 _900 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0, int(0u)));
    bool _905 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _958;
    if (_905)
    {
        float _916 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _922 = (_813 * _798) - (_810 * _801);
        float _925 = (_807 * _801) - (_813 * _795);
        float _928 = (_810 * _795) - (_807 * _798);
        float _955 = ((log2((((float(_900.y) * 0.5) * float(_900.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_925 * _925) + (_928 * _928)) + (_922 * _922)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_916 * gl_WorldRayDirectionEXT.x, _916 * gl_WorldRayDirectionEXT.y, _916 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _958 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    }
    else
    {
        _958 = 0.0;
    }
    vec4 _962 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _814) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _815) + cbTextureTilingScale._m0[1u].w), _958);
    float _972 = 1.0 - ((1.0 - _962.z) * 1.39999997615814208984375);
    float _3321 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _973 = isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0));
    float _975 = 1.0 - ((1.0 - _962.x) * 1.39999997615814208984375);
    float _3332 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _976 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
    float _978 = 1.0 - ((1.0 - _962.y) * 1.39999997615814208984375);
    float _3343 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _979 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
    float _981 = (_976 + _973) + _979;
    float _988 = (_981 * (1.0 - cbMtdParam._m0[20u].x)) + cbMtdParam._m0[20u].x;
    float _989 = (_981 * (1.0 - cbMtdParam._m0[20u].y)) + cbMtdParam._m0[20u].y;
    float _990 = (_981 * (1.0 - cbMtdParam._m0[20u].z)) + cbMtdParam._m0[20u].z;
    uvec2 _1015 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4, int(0u)));
    float _1066;
    if (_905)
    {
        float _1026 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1032 = (_813 * _798) - (_810 * _801);
        float _1035 = (_807 * _801) - (_813 * _795);
        float _1038 = (_810 * _795) - (_807 * _798);
        float _1064 = ((log2((((float(_1015.y) * 0.5) * float(_1015.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1035 * _1035) + (_1038 * _1038)) + (_1032 * _1032)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1026 * gl_WorldRayDirectionEXT.x, _1026 * gl_WorldRayDirectionEXT.y, _1026 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1066 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    }
    else
    {
        _1066 = 0.0;
    }
    vec4 _1068 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _814) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _815) + cbTextureTilingScale._m0[11u].w), _1066);
    float _1077 = 1.0 - ((1.0 - _1068.x) * 1.39999997615814208984375);
    float _3359 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1078 = isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0));
    float _1088 = (_1078 * ((cbMtdParam._m0[9u].x - _988) + ((1.0 - cbMtdParam._m0[9u].x) * _981))) + _988;
    float _1089 = (_1078 * ((cbMtdParam._m0[9u].y - _989) + ((1.0 - cbMtdParam._m0[9u].y) * _981))) + _989;
    float _1090 = (_1078 * ((cbMtdParam._m0[9u].z - _990) + ((1.0 - cbMtdParam._m0[9u].z) * _981))) + _990;
    float _1104 = 1.0 - ((1.0 - _1068.y) * 1.39999997615814208984375);
    float _3370 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1105 = isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0));
    float _1115 = (((cbMtdParam._m0[18u].x - _1088) + ((1.0 - cbMtdParam._m0[18u].x) * _981)) * _1105) + _1088;
    float _1116 = (((cbMtdParam._m0[18u].y - _1089) + ((1.0 - cbMtdParam._m0[18u].y) * _981)) * _1105) + _1089;
    float _1117 = (((cbMtdParam._m0[18u].z - _1090) + ((1.0 - cbMtdParam._m0[18u].z) * _981)) * _1105) + _1090;
    float _1131 = 1.0 - ((1.0 - _1068.z) * 1.39999997615814208984375);
    float _3381 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _1132 = isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0));
    uvec2 _1160 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3, int(0u)));
    float _1211;
    if (_905)
    {
        float _1171 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1177 = (_813 * _798) - (_810 * _801);
        float _1180 = (_807 * _801) - (_813 * _795);
        float _1183 = (_810 * _795) - (_807 * _798);
        float _1209 = ((log2((((float(_1160.y) * 0.5) * float(_1160.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1180 * _1180) + (_1183 * _1183)) + (_1177 * _1177)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1171 * gl_WorldRayDirectionEXT.x, _1171 * gl_WorldRayDirectionEXT.y, _1171 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1211 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    }
    else
    {
        _1211 = 0.0;
    }
    vec4 _1213 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _816) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _817) + cbTextureTilingScale._m0[10u].w), _1211);
    float _1215 = _1213.x;
    float _1216 = _1215 * cbMtdParam._m0[25u].w;
    float _1231 = ((cbMtdParam._m0[22u].z * (-1.39999997615814208984375)) * ((_733 - _1216) + (cbMtdParam._m0[23u].y * _733))) + 1.0;
    float _3397 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    float _1233 = 1.0 - (isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0)));
    float _1241 = ((cbMtdParam._m0[22u].y * (-1.39999997615814208984375)) * ((_730 - _1216) + (cbMtdParam._m0[23u].z * _730))) + 1.0;
    float _3408 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1243 = 1.0 - (isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0)));
    uvec2 _1260 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13, int(0u)));
    float _1311;
    if (_905)
    {
        float _1271 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1277 = (_813 * _798) - (_810 * _801);
        float _1280 = (_807 * _801) - (_813 * _795);
        float _1283 = (_810 * _795) - (_807 * _798);
        float _1309 = ((log2((((float(_1260.y) * 0.5) * float(_1260.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1280 * _1280) + (_1283 * _1283)) + (_1277 * _1277)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1271 * gl_WorldRayDirectionEXT.x, _1271 * gl_WorldRayDirectionEXT.y, _1271 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1311 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
    }
    else
    {
        _1311 = 0.0;
    }
    vec4 _1314 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _816) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _817) + cbTextureTilingScale._m0[4u].w), _1311);
    float _1316 = _1314.x;
    float _1317 = _1314.y;
    float _1318 = _1314.z;
    float _1319 = cbMtdParam._m0[10u].x * _1243;
    float _1321 = cbMtdParam._m0[10u].y * _1243;
    float _1323 = cbMtdParam._m0[10u].z * _1243;
    float _1340 = ((_1316 * (cbMtdParam._m0[17u].x - _1319)) * _1233) + (_1319 * _1316);
    float _1341 = ((_1317 * (cbMtdParam._m0[17u].y - _1321)) * _1233) + (_1321 * _1317);
    float _1342 = ((_1318 * (cbMtdParam._m0[17u].z - _1323)) * _1233) + (_1323 * _1318);
    float _1362 = cbMtdParam._m0[23u].x * (-1.39999997615814208984375);
    float _1366 = (_1362 * ((_745 - _1216) + (cbMtdParam._m0[22u].x * _745))) + 1.0;
    float _1367 = (_1362 * ((_748 - _1216) + (cbMtdParam._m0[22u].x * _748))) + 1.0;
    float _1368 = (_1362 * ((_751 - _1216) + (cbMtdParam._m0[22u].x * _751))) + 1.0;
    float _3424 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
    float _3435 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
    float _3446 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
    float _1379 = (1.0 - cbMtdParam._m0[24u].y) + _976;
    float _1382 = _1379 * (1.0 - (isnan(1.0) ? _3424 : (isnan(_3424) ? 1.0 : min(_3424, 1.0))));
    float _1383 = _1379 * (1.0 - (isnan(1.0) ? _3435 : (isnan(_3435) ? 1.0 : min(_3435, 1.0))));
    float _1384 = ((_976 + 1.0) - cbMtdParam._m0[24u].y) * (1.0 - (isnan(1.0) ? _3446 : (isnan(_3446) ? 1.0 : min(_3446, 1.0))));
    float _1394 = _1243 + _1233;
    float _1395 = _1394 + _1382;
    float _1396 = _1394 + _1383;
    float _1397 = _1394 + _1384;
    float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
    float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
    float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
    float _1401 = isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0));
    float _1402 = isnan(1.0) ? _1399 : (isnan(_1399) ? 1.0 : min(_1399, 1.0));
    float _1403 = isnan(1.0) ? _1400 : (isnan(_1400) ? 1.0 : min(_1400, 1.0));
    uvec2 _1421 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1, int(0u)));
    float _1472;
    if (_905)
    {
        float _1432 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1438 = (_813 * _798) - (_810 * _801);
        float _1441 = (_807 * _801) - (_813 * _795);
        float _1444 = (_810 * _795) - (_807 * _798);
        float _1470 = ((log2((((float(_1421.y) * 0.5) * float(_1421.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1441 * _1441) + (_1444 * _1444)) + (_1438 * _1438)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1432 * gl_WorldRayDirectionEXT.x, _1432 * gl_WorldRayDirectionEXT.y, _1432 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1472 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
    }
    else
    {
        _1472 = 0.0;
    }
    vec4 _1474 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _816) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _817) + cbTextureTilingScale._m0[0u].w), _1472);
    float _1479 = _1474.x * cbMtdParam._m0[13u].x;
    float _1480 = _1474.y * cbMtdParam._m0[13u].y;
    float _1481 = _1474.z * cbMtdParam._m0[13u].z;
    uvec2 _1499 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2, int(0u)));
    float _1550;
    if (_905)
    {
        float _1510 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1516 = (_813 * _798) - (_810 * _801);
        float _1519 = (_807 * _801) - (_813 * _795);
        float _1522 = (_810 * _795) - (_807 * _798);
        float _1548 = ((log2((((float(_1499.y) * 0.5) * float(_1499.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1519 * _1519) + (_1522 * _1522)) + (_1516 * _1516)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1510 * gl_WorldRayDirectionEXT.x, _1510 * gl_WorldRayDirectionEXT.y, _1510 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1550 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    }
    else
    {
        _1550 = 0.0;
    }
    vec4 _1552 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _816) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _817) + cbTextureTilingScale._m0[9u].w), _1550);
    float _1566 = (((_1552.x * cbMtdParam._m0[14u].x) - _1479) * _976) + _1479;
    float _1567 = (((_1552.y * cbMtdParam._m0[14u].y) - _1480) * _976) + _1480;
    float _1568 = (((_1552.z * cbMtdParam._m0[14u].z) - _1481) * _976) + _1481;
    uvec2 _1586 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8, int(0u)));
    float _1637;
    if (_905)
    {
        float _1597 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1603 = (_813 * _798) - (_810 * _801);
        float _1606 = (_807 * _801) - (_813 * _795);
        float _1609 = (_810 * _795) - (_807 * _798);
        float _1635 = ((log2((((float(_1586.y) * 0.5) * float(_1586.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1606 * _1606) + (_1609 * _1609)) + (_1603 * _1603)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1597 * gl_WorldRayDirectionEXT.x, _1597 * gl_WorldRayDirectionEXT.y, _1597 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1637 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    }
    else
    {
        _1637 = 0.0;
    }
    vec4 _1639 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * _816) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _817) + cbTextureTilingScale._m0[15u].w), _1637);
    float _1653 = (((_1639.x * cbMtdParam._m0[15u].x) - _1566) * _979) + _1566;
    float _1654 = (((_1639.y * cbMtdParam._m0[15u].y) - _1567) * _979) + _1567;
    float _1655 = (((_1639.z * cbMtdParam._m0[15u].z) - _1568) * _979) + _1568;
    uvec2 _1672 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11, int(0u)));
    float _1723;
    if (_905)
    {
        float _1683 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1689 = (_813 * _798) - (_810 * _801);
        float _1692 = (_807 * _801) - (_813 * _795);
        float _1695 = (_810 * _795) - (_807 * _798);
        float _1721 = ((log2((((float(_1672.y) * 0.5) * float(_1672.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1692 * _1692) + (_1695 * _1695)) + (_1689 * _1689)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1683 * gl_WorldRayDirectionEXT.x, _1683 * gl_WorldRayDirectionEXT.y, _1683 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1723 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
    }
    else
    {
        _1723 = 0.0;
    }
    vec4 _1725 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _816) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _817) + cbTextureTilingScale._m0[2u].w), _1723);
    float _1739 = (((_1725.x * cbMtdParam._m0[16u].x) - _1653) * _973) + _1653;
    float _1740 = (((_1725.y * cbMtdParam._m0[16u].y) - _1654) * _973) + _1654;
    float _1741 = (((_1725.z * cbMtdParam._m0[16u].z) - _1655) * _973) + _1655;
    float _1761 = ((_1739 - (_1739 * _1401)) + (((_1401 * 4.55000019073486328125) * ((_1382 * ((cbMtdParam._m0[11u].x * _1316) - _1340)) + _1340)) * _1739)) * ((((cbMtdParam._m0[19u].x - _1115) + ((1.0 - cbMtdParam._m0[19u].x) * _981)) * _1132) + _1115);
    float _1762 = ((_1740 - (_1740 * _1402)) + (((_1402 * 4.55000019073486328125) * ((_1383 * ((cbMtdParam._m0[11u].y * _1317) - _1341)) + _1341)) * _1740)) * ((((cbMtdParam._m0[19u].y - _1116) + ((1.0 - cbMtdParam._m0[19u].y) * _981)) * _1132) + _1116);
    float _1763 = ((_1741 - (_1403 * _1741)) + (((_1403 * 4.55000019073486328125) * ((_1384 * ((cbMtdParam._m0[11u].z * _1318) - _1342)) + _1342)) * _1741)) * ((((cbMtdParam._m0[19u].z - _1117) + ((1.0 - cbMtdParam._m0[19u].z) * _981)) * _1132) + _1117);
    float _1771 = (((((1.0 - (_712 * float((_284 >> 8u) & 255u))) - (_716 * float((_399 >> 8u) & 255u))) - (_719 * float((_514 >> 8u) & 255u))) * (-2.7999999523162841796875)) * cbMtdParam._m0[25u].y) + 1.0;
    float _3507 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
    float _1784 = ((((_1215 + (-1.0)) + ((((1.0 - (_712 * float(_284 & 255u))) - (_716 * float(_399 & 255u))) - (_719 * float(_514 & 255u))) * 2.0)) * (-1.39999997615814208984375)) * cbMtdParam._m0[25u].x) + 1.0;
    float _3518 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
    uvec2 _1799 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5, int(0u)));
    float _1850;
    if (_905)
    {
        float _1810 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1816 = (_813 * _798) - (_810 * _801);
        float _1819 = (_807 * _801) - (_813 * _795);
        float _1822 = (_810 * _795) - (_807 * _798);
        float _1848 = ((log2((((float(_1799.y) * 0.5) * float(_1799.x)) * abs((_760 * _754) - (_759 * _756))) / (sqrt(((_1819 * _1819) + (_1822 * _1822)) + (_1816 * _1816)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1810 * gl_WorldRayDirectionEXT.x, _1810 * gl_WorldRayDirectionEXT.y, _1810 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1850 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
    }
    else
    {
        _1850 = 0.0;
    }
    vec4 _1853 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _814) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _815) + cbTextureTilingScale._m0[12u].w), _1850);
    float _1859 = (_1853.x * 2.0) + (-1.0);
    float _1860 = (_1853.y * 2.0) + (-1.0);
    float _1861 = dot(vec2(_1859, _1860), vec2(_1859, _1860));
    float _3534 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
    float _1866 = sqrt(1.0 - (isnan(1.0) ? _3534 : (isnan(_3534) ? 1.0 : min(_3534, 1.0))));
    float _1869 = fma(_1866, _828, fma(_1860, _844, _1859 * _876));
    float _1872 = fma(_1866, _830, fma(_1860, _845, _1859 * _877));
    float _1875 = fma(_1866, _831, fma(_1860, _846, _1859 * _878));
    float _1884 = exp2(log2(inversesqrt(dot(vec3(_1869, _1872, _1875), vec3(_1869, _1872, _1875))) * _1872) * cbMtdParam._m0[24u].w) * cbMtdParam._m0[24u].z;
    float _3545 = isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0));
    float _1887 = ((isnan(1.0) ? _3545 : (isnan(_3545) ? 1.0 : min(_3545, 1.0))) + (isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0)))) * (1.0 - (isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0))));
    float _3556 = isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0));
    float _1888 = isnan(1.0) ? _3556 : (isnan(_3556) ? 1.0 : min(_3556, 1.0));
    float _1890 = 3.0 - (_1888 * 2.0);
    float _1895 = _1888 * _1888;
    float _1902 = ((_1895 * (cbMtdParam._m0[12u].x - _1761)) * _1890) + _1761;
    float _1903 = ((_1895 * (cbMtdParam._m0[12u].y - _1762)) * _1890) + _1762;
    float _1904 = ((_1895 * (cbMtdParam._m0[12u].z - _1763)) * _1890) + _1763;
    float _1918 = ((cbMtdParam._m0[21u].w - cbMtdParam._m0[26u].x) * _1401) + cbMtdParam._m0[26u].x;
    float _1921 = ((cbMtdParam._m0[21u].x - _1918) * _976) + _1918;
    float _1924 = ((cbMtdParam._m0[21u].y - _1921) * _979) + _1921;
    float _1927 = ((cbMtdParam._m0[21u].z - _1924) * _973) + _1924;
    uvec2 _1939 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9, int(0u)));
    float _1990;
    if (_905)
    {
        float _1950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1956 = (_813 * _798) - (_810 * _801);
        float _1959 = (_807 * _801) - (_813 * _795);
        float _1962 = (_810 * _795) - (_807 * _798);
        float _1988 = ((log2((((float(_1939.y) * 0.5) * float(_1939.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_1959 * _1959) + (_1962 * _1962)) + (_1956 * _1956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1950 * gl_WorldRayDirectionEXT.x, _1950 * gl_WorldRayDirectionEXT.y, _1950 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _1990 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    }
    else
    {
        _1990 = 0.0;
    }
    vec4 _1992 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * _816) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _817) + cbTextureTilingScale._m0[16u].w), _1990);
    float _1996 = _1992.z;
    float _1999 = (_1992.x * 2.0) + (-1.0);
    float _2000 = (_1992.y * 2.0) + (-1.0);
    float _2001 = dot(vec2(_1999, _2000), vec2(_1999, _2000));
    float _3572 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
    float _2006 = sqrt(1.0 - (isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0))));
    float _2008 = fma(_2006, _828, fma(_2000, _857, 0.0));
    float _2010 = fma(_2006, _830, fma(_2000, _858, 0.0));
    float _2012 = fma(_2006, _831, fma(_2000, _859, 0.0));
    float _2016 = inversesqrt(dot(vec3(_2008, _2010, _2012), vec3(_2008, _2010, _2012)));
    float _2017 = _2016 * _2008;
    float _2018 = _2016 * _2010;
    float _2019 = _2016 * _2012;
    uvec2 _2031 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18, int(0u)));
    float _2082;
    if (_905)
    {
        float _2042 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2048 = (_813 * _798) - (_810 * _801);
        float _2051 = (_807 * _801) - (_813 * _795);
        float _2054 = (_810 * _795) - (_807 * _798);
        float _2080 = ((log2((((float(_2031.y) * 0.5) * float(_2031.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2051 * _2051) + (_2054 * _2054)) + (_2048 * _2048)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2042 * gl_WorldRayDirectionEXT.x, _2042 * gl_WorldRayDirectionEXT.y, _2042 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2082 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    }
    else
    {
        _2082 = 0.0;
    }
    vec4 _2084 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _816) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _817) + cbTextureTilingScale._m0[8u].w), _2082);
    float _2091 = (_2084.x * 2.0) + (-1.0);
    float _2092 = (_2084.y * 2.0) + (-1.0);
    float _2093 = dot(vec2(_2091, _2092), vec2(_2091, _2092));
    float _3588 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
    float _2101 = ((_2084.z - _1996) * _1887) + _1996;
    uvec2 _2114 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14, int(0u)));
    float _2165;
    if (_905)
    {
        float _2125 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2131 = (_813 * _798) - (_810 * _801);
        float _2134 = (_807 * _801) - (_813 * _795);
        float _2137 = (_810 * _795) - (_807 * _798);
        float _2163 = ((log2((((float(_2114.y) * 0.5) * float(_2114.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2134 * _2134) + (_2137 * _2137)) + (_2131 * _2131)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2125 * gl_WorldRayDirectionEXT.x, _2125 * gl_WorldRayDirectionEXT.y, _2125 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2165 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    }
    else
    {
        _2165 = 0.0;
    }
    vec4 _2167 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _816) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _817) + cbTextureTilingScale._m0[5u].w), _2165);
    float _2173 = (_2167.x * 2.0) + (-1.0);
    float _2174 = (_2167.y * 2.0) + (-1.0);
    float _2175 = dot(vec2(_2173, _2174), vec2(_2173, _2174));
    float _3604 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
    float _2180 = sqrt(1.0 - (isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0))));
    float _2182 = fma(_2180, _828, fma(_2174, _857, 0.0));
    float _2184 = fma(_2180, _830, fma(_2174, _858, 0.0));
    float _2186 = fma(_2180, _831, fma(_2174, _859, 0.0));
    float _2190 = inversesqrt(dot(vec3(_2182, _2184, _2186), vec3(_2182, _2184, _2186)));
    float _2191 = _2190 * _2182;
    float _2192 = _2190 * _2184;
    float _2193 = _2190 * _2186;
    float _2196 = fma(_2193, _878, fma(_2192, _877, _2191 * _876));
    float _2199 = fma(_2193, _846, fma(_2192, _845, _2191 * _844));
    float _2202 = fma(_2193, _831, fma(_2192, _830, _2191 * _828));
    float _2206 = inversesqrt(dot(vec3(_2196, _2199, _2202), vec3(_2196, _2199, _2202)));
    uvec2 _2219 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12, int(0u)));
    float _2270;
    if (_905)
    {
        float _2230 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2236 = (_813 * _798) - (_810 * _801);
        float _2239 = (_807 * _801) - (_813 * _795);
        float _2242 = (_810 * _795) - (_807 * _798);
        float _2268 = ((log2((((float(_2219.y) * 0.5) * float(_2219.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2239 * _2239) + (_2242 * _2242)) + (_2236 * _2236)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2230 * gl_WorldRayDirectionEXT.x, _2230 * gl_WorldRayDirectionEXT.y, _2230 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2270 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
    }
    else
    {
        _2270 = 0.0;
    }
    vec4 _2272 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _816) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _817) + cbTextureTilingScale._m0[3u].w), _2270);
    float _2278 = (_2272.x * 2.0) + (-1.0);
    float _2279 = (_2272.y * 2.0) + (-1.0);
    float _2280 = dot(vec2(_2278, _2279), vec2(_2278, _2279));
    float _3620 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _2285 = sqrt(1.0 - (isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0))));
    float _2287 = fma(_2285, _828, fma(_2279, _857, 0.0));
    float _2289 = fma(_2285, _830, fma(_2279, _858, 0.0));
    float _2291 = fma(_2285, _831, fma(_2279, _859, 0.0));
    float _2295 = inversesqrt(dot(vec3(_2287, _2289, _2291), vec3(_2287, _2289, _2291)));
    float _2296 = _2295 * _2287;
    float _2297 = _2295 * _2289;
    float _2298 = _2295 * _2291;
    float _2301 = fma(_2298, _878, fma(_2297, _877, _2296 * _876));
    float _2304 = fma(_2298, _846, fma(_2297, _845, _2296 * _844));
    float _2307 = fma(_2298, _831, fma(_2297, _830, _2296 * _828));
    float _2311 = inversesqrt(dot(vec3(_2301, _2304, _2307), vec3(_2301, _2304, _2307)));
    uvec2 _2324 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6, int(0u)));
    float _2375;
    if (_905)
    {
        float _2335 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2341 = (_813 * _798) - (_810 * _801);
        float _2344 = (_807 * _801) - (_813 * _795);
        float _2347 = (_810 * _795) - (_807 * _798);
        float _2373 = ((log2((((float(_2324.y) * 0.5) * float(_2324.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2344 * _2344) + (_2347 * _2347)) + (_2341 * _2341)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2335 * gl_WorldRayDirectionEXT.x, _2335 * gl_WorldRayDirectionEXT.y, _2335 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2375 = isnan(0.0) ? _2373 : (isnan(_2373) ? 0.0 : max(_2373, 0.0));
    }
    else
    {
        _2375 = 0.0;
    }
    vec4 _2377 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _816) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _817) + cbTextureTilingScale._m0[13u].w), _2375);
    float _2383 = (_2377.x * 2.0) + (-1.0);
    float _2384 = (_2377.y * 2.0) + (-1.0);
    float _2385 = dot(vec2(_2383, _2384), vec2(_2383, _2384));
    float _3636 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
    float _2390 = sqrt(1.0 - (isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0))));
    float _2392 = fma(_2390, _828, fma(_2384, _857, 0.0));
    float _2394 = fma(_2390, _830, fma(_2384, _858, 0.0));
    float _2396 = fma(_2390, _831, fma(_2384, _859, 0.0));
    float _2400 = inversesqrt(dot(vec3(_2392, _2394, _2396), vec3(_2392, _2394, _2396)));
    float _2401 = _2400 * _2392;
    float _2402 = _2400 * _2394;
    float _2403 = _2400 * _2396;
    float _2406 = fma(_2403, _878, fma(_2402, _877, _2401 * _876));
    float _2409 = fma(_2403, _846, fma(_2402, _845, _2401 * _844));
    float _2412 = fma(_2403, _831, fma(_2402, _830, _2401 * _828));
    float _2416 = inversesqrt(dot(vec3(_2406, _2409, _2412), vec3(_2406, _2409, _2412)));
    float _2422 = fma(_2019, _878, fma(_2018, _877, _2017 * _876));
    float _2425 = fma(_2019, _846, fma(_2018, _845, _2017 * _844));
    float _2428 = fma(_2019, _831, fma(_2018, _830, _2017 * _828));
    float _2432 = inversesqrt(dot(vec3(_2422, _2425, _2428), vec3(_2422, _2425, _2428)));
    float _2433 = _2432 * _2422;
    float _2434 = _2432 * _2425;
    float _2435 = _2432 * _2428;
    float _2442 = (((_2416 * _2406) - _2433) * _976) + _2433;
    float _2443 = (((_2416 * _2409) - _2434) * _976) + _2434;
    float _2444 = (((_2416 * _2412) - _2435) * _976) + _2435;
    uvec2 _2456 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15, int(0u)));
    float _2507;
    if (_905)
    {
        float _2467 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2473 = (_813 * _798) - (_810 * _801);
        float _2476 = (_807 * _801) - (_813 * _795);
        float _2479 = (_810 * _795) - (_807 * _798);
        float _2505 = ((log2((((float(_2456.y) * 0.5) * float(_2456.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2476 * _2476) + (_2479 * _2479)) + (_2473 * _2473)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2467 * gl_WorldRayDirectionEXT.x, _2467 * gl_WorldRayDirectionEXT.y, _2467 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2507 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    }
    else
    {
        _2507 = 0.0;
    }
    vec4 _2509 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _816) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _817) + cbTextureTilingScale._m0[6u].w), _2507);
    float _2515 = (_2509.x * 2.0) + (-1.0);
    float _2516 = (_2509.y * 2.0) + (-1.0);
    float _2517 = dot(vec2(_2515, _2516), vec2(_2515, _2516));
    float _3652 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
    float _2522 = sqrt(1.0 - (isnan(1.0) ? _3652 : (isnan(_3652) ? 1.0 : min(_3652, 1.0))));
    float _2524 = fma(_2522, _828, fma(_2516, _857, 0.0));
    float _2526 = fma(_2522, _830, fma(_2516, _858, 0.0));
    float _2528 = fma(_2522, _831, fma(_2516, _859, 0.0));
    float _2532 = inversesqrt(dot(vec3(_2524, _2526, _2528), vec3(_2524, _2526, _2528)));
    float _2533 = _2532 * _2524;
    float _2534 = _2532 * _2526;
    float _2535 = _2532 * _2528;
    float _2538 = fma(_2535, _878, fma(_2534, _877, _2533 * _876));
    float _2541 = fma(_2535, _846, fma(_2534, _845, _2533 * _844));
    float _2544 = fma(_2535, _831, fma(_2534, _830, _2533 * _828));
    float _2548 = inversesqrt(dot(vec3(_2538, _2541, _2544), vec3(_2538, _2541, _2544)));
    float _2558 = (((_2548 * _2538) - _2442) * _979) + _2442;
    float _2559 = (((_2548 * _2541) - _2443) * _979) + _2443;
    float _2560 = (((_2548 * _2544) - _2444) * _979) + _2444;
    uvec2 _2572 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16, int(0u)));
    float _2623;
    if (_905)
    {
        float _2583 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2589 = (_813 * _798) - (_810 * _801);
        float _2592 = (_807 * _801) - (_813 * _795);
        float _2595 = (_810 * _795) - (_807 * _798);
        float _2621 = ((log2((((float(_2572.y) * 0.5) * float(_2572.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2592 * _2592) + (_2595 * _2595)) + (_2589 * _2589)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2583 * gl_WorldRayDirectionEXT.x, _2583 * gl_WorldRayDirectionEXT.y, _2583 * gl_WorldRayDirectionEXT.z), vec3(_828, _830, _831))));
        _2623 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
    }
    else
    {
        _2623 = 0.0;
    }
    vec4 _2625 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * _816) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _817) + cbTextureTilingScale._m0[7u].w), _2623);
    float _2631 = (_2625.x * 2.0) + (-1.0);
    float _2632 = (_2625.y * 2.0) + (-1.0);
    float _2633 = dot(vec2(_2631, _2632), vec2(_2631, _2632));
    float _3668 = isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0));
    float _2638 = sqrt(1.0 - (isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0))));
    float _2640 = fma(_2638, _828, fma(_2632, _857, 0.0));
    float _2642 = fma(_2638, _830, fma(_2632, _858, 0.0));
    float _2644 = fma(_2638, _831, fma(_2632, _859, 0.0));
    float _2648 = inversesqrt(dot(vec3(_2640, _2642, _2644), vec3(_2640, _2642, _2644)));
    float _2649 = _2648 * _2640;
    float _2650 = _2648 * _2642;
    float _2651 = _2648 * _2644;
    float _2654 = fma(_2651, _878, fma(_2650, _877, _2649 * _876));
    float _2657 = fma(_2651, _846, fma(_2650, _845, _2649 * _844));
    float _2660 = fma(_2651, _831, fma(_2650, _830, _2649 * _828));
    float _2664 = inversesqrt(dot(vec3(_2654, _2657, _2660), vec3(_2654, _2657, _2660)));
    float _2674 = (((_2664 * _2660) - _2560) * _973) + _2560;
    uvec2 _2686 = uvec2(textureSize(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7, int(0u)));
    float _2690 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2691 = _2690 * gl_WorldRayDirectionEXT.x;
    float _2692 = _2690 * gl_WorldRayDirectionEXT.y;
    float _2693 = _2690 * gl_WorldRayDirectionEXT.z;
    float _2737;
    if (_905)
    {
        float _2703 = (_813 * _798) - (_810 * _801);
        float _2706 = (_807 * _801) - (_813 * _795);
        float _2709 = (_810 * _795) - (_807 * _798);
        float _2735 = ((log2((((float(_2686.y) * 0.5) * float(_2686.x)) * abs((_768 * _763) - (_767 * _764))) / (sqrt(((_2706 * _2706) + (_2709 * _2709)) + (_2703 * _2703)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_2691, _2692, _2693), vec3(_828, _830, _831))));
        _2737 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
    }
    else
    {
        _2737 = 0.0;
    }
    vec4 _2739 = textureLod(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _816) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _817) + cbTextureTilingScale._m0[14u].w), _2737);
    float _2745 = (_2739.x * 2.0) + (-1.0);
    float _2746 = (_2739.y * 2.0) + (-1.0);
    float _2747 = dot(vec2(_2745, _2746), vec2(_2745, _2746));
    float _3684 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2752 = sqrt(1.0 - (isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0))));
    float _2754 = fma(_2752, _828, fma(_2746, _857, 0.0));
    float _2756 = fma(_2752, _830, fma(_2746, _858, 0.0));
    float _2758 = fma(_2752, _831, fma(_2746, _859, 0.0));
    float _2762 = inversesqrt(dot(vec3(_2754, _2756, _2758), vec3(_2754, _2756, _2758)));
    float _2763 = _2762 * _2754;
    float _2764 = _2762 * _2756;
    float _2765 = _2762 * _2758;
    float _2768 = fma(_2765, _878, fma(_2764, _877, _2763 * _876));
    float _2771 = fma(_2765, _846, fma(_2764, _845, _2763 * _844));
    float _2774 = fma(_2765, _831, fma(_2764, _830, _2763 * _828));
    float _2778 = inversesqrt(dot(vec3(_2768, _2771, _2774), vec3(_2768, _2771, _2774)));
    float _2807 = (((((((_2301 * _1233) * _2311) * cbMtdParam._m0[23u].w) + ((((_1395 * _1379) * _2196) * _2206) * cbMtdParam._m0[24u].x)) + _2558) + (((_2664 * _2654) - _2558) * _973)) + (((_2768 * _1243) * _2778) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _1859);
    float _2812 = (((((((_2304 * _1233) * _2311) * cbMtdParam._m0[23u].w) + ((((_1396 * _1379) * _2199) * _2206) * cbMtdParam._m0[24u].x)) + _2559) + (((_2664 * _2657) - _2559) * _973)) + (((_2771 * _1243) * _2778) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _1860);
    float _2819 = ((_2091 - _2807) * _1887) + _2807;
    float _2820 = (_1887 * (_2092 - _2812)) + _2812;
    float _2821 = (_1887 * (sqrt(1.0 - (isnan(1.0) ? _3588 : (isnan(_3588) ? 1.0 : min(_3588, 1.0)))) - _2674)) + _2674;
    float _2824 = fma(_2821, _828, fma(_2820, _844, _2819 * _876));
    float _2827 = fma(_2821, _830, fma(_2820, _845, _2819 * _877));
    float _2830 = fma(_2821, _831, fma(_2820, _846, _2819 * _878));
    float _2834 = inversesqrt(dot(vec3(_2824, _2827, _2830), vec3(_2824, _2827, _2830)));
    float _2835 = _2834 * _2824;
    float _2836 = _2834 * _2827;
    float _2837 = _2834 * _2830;
    float _2849 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2850 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2851 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2852 = (-0.0) - _2691;
    float _2854 = (-0.0) - _2692;
    float _2855 = (-0.0) - _2693;
    float _2861 = float(gl_LaunchIDEXT.x);
    float _2862 = float(gl_LaunchIDEXT.y);
    float _2865 = float(gl_LaunchSizeEXT.x);
    float _2879 = fract(fract(sin(dot(vec2(_2861 / _2865, _2862 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2892 = fract(fract(sin(dot(vec2((_2861 + 128.0) / _2865, (_2862 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2893 = 1.0 - _1927;
    float _2894 = _2893 * _1902;
    float _2895 = _2893 * _1903;
    float _2896 = _2893 * _1904;
    float _2901 = _1927 * (_1902 + (-0.039999999105930328369140625));
    float _2902 = _1927 * (_1903 + (-0.039999999105930328369140625));
    float _2903 = _1927 * (_1904 + (-0.039999999105930328369140625));
    float _2904 = _2901 + 0.039999999105930328369140625;
    float _2906 = _2902 + 0.039999999105930328369140625;
    float _2907 = _2903 + 0.039999999105930328369140625;
    _77._m0 = 1u;
    uvec4 _2917 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2918 = _2917.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2918, _2917.w, _2918, vec3(_2849, _2850, _2851), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _3032;
    float _3033;
    float _3034;
    float _3035;
    float _3036;
    float _3037;
    if (_77._m0 == 0u)
    {
        float _2938 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2835, _2836, _2837));
        float _3695 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
        float _2941 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
        float _2960 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2101) * 0.949999988079071044921875);
        float _2961 = _2960 * _2960;
        float _2962 = g_sceneCB._m0[4u].x - _2691;
        float _2963 = g_sceneCB._m0[4u].y - _2692;
        float _2964 = g_sceneCB._m0[4u].z - _2693;
        float _2968 = inversesqrt(dot(vec3(_2962, _2963, _2964), vec3(_2962, _2963, _2964)));
        float _2969 = _2968 * _2962;
        float _2970 = _2968 * _2963;
        float _2971 = _2968 * _2964;
        float _2972 = dot(vec3(_2835, _2836, _2837), vec3(g_sceneCB._m0[4u].xyz));
        float _3706 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
        float _2975 = isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0));
        float _2976 = dot(vec3(_2835, _2836, _2837), vec3(_2852, _2854, _2855));
        float _3717 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
        float _2979 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
        float _2980 = dot(vec3(_2835, _2836, _2837), vec3(_2969, _2970, _2971));
        float _3728 = isnan(0.0) ? _2980 : (isnan(_2980) ? 0.0 : max(_2980, 0.0));
        float _2983 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
        float _2984 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2969, _2970, _2971));
        float _3739 = isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0));
        float _2988 = _2961 * _2961;
        float _2992 = ((_2983 * _2983) * (_2988 + (-1.0))) + 1.0;
        float _3001 = exp2(log2(1.0 - (isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0)))) * 5.0);
        float _3012 = 1.0 - _2961;
        float _3023 = (0.5 / (((_2979 * ((_2975 * _3012) + _2961)) + 9.9999999392252902907785028219223e-09) + (((_2979 * _3012) + _2961) * _2975))) * _2975;
        float _3750 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
        float _3025 = (isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0))) * (_2988 / ((_2992 * _2992) * 3.141590118408203125));
        _3032 = ((_2894 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2941;
        _3033 = ((_2895 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2941;
        _3034 = ((_2896 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2941;
        _3035 = (((_3001 * (0.959999978542327880859375 - _2901)) + _2904) * g_sceneCB._m0[5u].x) * _3025;
        _3036 = (((_3001 * (0.959999978542327880859375 - _2902)) + _2906) * g_sceneCB._m0[5u].y) * _3025;
        _3037 = (((_3001 * (0.959999978542327880859375 - _2903)) + _2907) * g_sceneCB._m0[5u].z) * _3025;
    }
    else
    {
        _3032 = 0.0;
        _3033 = 0.0;
        _3034 = 0.0;
        _3035 = 0.0;
        _3036 = 0.0;
        _3037 = 0.0;
    }
    bool _3039 = abs(_2836) < 0.89999997615814208984375;
    float _3041 = float(_3039);
    float _3042 = _3039 ? 0.0 : 1.0;
    float _3045 = (_3041 * _2837) - (_3042 * _2836);
    float _3046 = _3042 * _2835;
    float _3048 = (-0.0) - (_2835 * _3041);
    float _3052 = inversesqrt(dot(vec3(_3045, _3046, _3048), vec3(_3045, _3046, _3048)));
    float _3053 = _3045 * _3052;
    float _3054 = _3046 * _3052;
    float _3055 = _3052 * _3048;
    float _3058 = (_3054 * _2837) - (_3055 * _2836);
    float _3061 = (_3055 * _2835) - (_3053 * _2837);
    float _3064 = (_3053 * _2836) - (_3054 * _2835);
    float _3066;
    float _3074;
    float _3065 = 0.0;
    uint _3067 = 0u;
    float _3071;
    bool _3073;
    for (;;)
    {
        _3071 = (float(_3067) + _2879) * 0.03125;
        _3073 = _3067 == 0u;
        float frontier_phi_73_pred;
        if (_3073)
        {
            frontier_phi_73_pred = 0.0;
        }
        else
        {
            float _3215;
            float _3216;
            uint _3218;
            _3215 = 0.0;
            _3216 = 0.5;
            _3218 = _3067;
            float _3075;
            for (;;)
            {
                _3075 = ((_3218 & 1u) != 0u) ? (_3216 + _3215) : _3215;
                uint _3219 = _3218 >> 1u;
                if (_3219 == 0u)
                {
                    break;
                }
                else
                {
                    _3215 = _3075;
                    _3216 *= 0.5;
                    _3218 = _3219;
                }
            }
            frontier_phi_73_pred = _3075;
        }
        _3074 = frontier_phi_73_pred;
        float _3076 = _3074 + _2892;
        float _3080 = sqrt(_3071);
        float _3081 = ((_3076 > 1.0) ? (_3076 + (-1.0)) : _3076) * 6.283185482025146484375;
        float _3084 = cos(_3081) * _3080;
        float _3086 = sin(_3081) * _3080;
        float _3088 = sqrt(1.0 - _3071);
        float _3101 = ((_3088 * _2835) + (_3084 * _3058)) + (_3086 * _3053);
        float _3102 = ((_3088 * _2836) + (_3084 * _3061)) + (_3086 * _3054);
        float _3103 = ((_3088 * _2837) + (_3084 * _3064)) + (_3086 * _3055);
        _76._m0 = 1u;
        uvec4 _3107 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _3108 = _3107.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _3108, _3107.w, _3108, vec3(_2849, _2850, _2851), 9.9999997473787516355514526367188e-05, vec3(_3101, _3102, _3103), 10000.0, 1);
        float _3114 = dot(vec3(_2835, _2836, _2837), vec3(_3101, _3102, _3103));
        float _3761 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0));
        float _3117 = isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0));
        _3066 = ((float(_76._m0 == 0u) * _3117) / (_3117 * 0.3183098733425140380859375)) + _3065;
        uint _3068 = _3067 + 1u;
        if (_3068 == 32u)
        {
            break;
        }
        else
        {
            _3065 = _3066;
            _3067 = _3068;
            continue;
        }
    }
    float _3125 = _3066 * 0.009947183541953563690185546875;
    float _3130 = dot(vec3(_2691, _2692, _2693), vec3(_2835, _2836, _2837)) * 2.0;
    vec4 _3144 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2691 - (_3130 * _2835), _2692 - (_3130 * _2836), _2693 - (_3130 * _2837)), 4.0 - (_2101 * 4.0));
    float _3149 = dot(vec3(_2852, _2854, _2855), vec3(_2835, _2836, _2837));
    float _3772 = isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : max(_3149, 0.0));
    float _3159 = exp2(log2(1.0 - (isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0)))) * 5.0);
    vec4 _3171 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2835, _2836, _2837), 0.0);
    float _3182 = (_3035 + _3032) + (((_3171.x * _2894) + (((_3159 * (0.959999978542327880859375 - _2901)) + _2904) * _3144.x)) * _3125);
    float _3186 = (_3036 + _3033) + (((_3171.y * _2895) + (((_3159 * (0.959999978542327880859375 - _2902)) + _2906) * _3144.y)) * _3125);
    float _3190 = (_3037 + _3034) + (((_3171.z * _2896) + (((_3159 * (0.959999978542327880859375 - _2903)) + _2907) * _3144.z)) * _3125);
    float _3783 = isnan(0.0) ? _3182 : (isnan(_3182) ? 0.0 : max(_3182, 0.0));
    float _3794 = isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0));
    float _3805 = isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : max(_3190, 0.0));
    bool _3198 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _3209;
    _3209.x = _3198 ? ((_821 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0)));
    _3209.y = _3198 ? ((_824 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0)));
    _3209.z = _3198 ? ((_827 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0)));
    payload._m0 = _3209;
}


