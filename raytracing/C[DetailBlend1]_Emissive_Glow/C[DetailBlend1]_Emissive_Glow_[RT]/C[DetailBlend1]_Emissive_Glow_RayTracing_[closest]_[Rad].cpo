#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1435;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _186 = _180 * _172;
    uint _187 = _186 + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 16u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 20u;
    }
    uvec4 _222 = texelFetch(l_geomAttrib_0, int((_214 + _186) >> 2u));
    uint _223 = _222.x;
    bool _237 = _181 == 0u;
    uint _238;
    if (_237)
    {
        _238 = _214 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 12u;
        }
        _238 = frontier_phi_9_10_ladder;
    }
    uvec4 _246 = texelFetch(l_geomAttrib_0, int(((_186 + 4u) + (_182 ? (_238 + 4u) : _238)) >> 2u));
    uint _247 = _246.x;
    float _251 = float(int(uint(int(_247 << 16u) >> int(16u))));
    float _252 = float(int(uint(int(_247) >> int(16u))));
    uint _253 = _180 * _174;
    uint _254 = _253 + 12u;
    uint _275;
    uint _276;
    uint _277;
    uint _278;
    if (_185)
    {
        uvec4 _256 = texelFetch(l_geomAttrib_0, int(_254 >> 2u));
        uint _257 = _256.x;
        _275 = _257 & 255u;
        _276 = (_257 >> 8u) & 255u;
        _277 = (_257 >> 16u) & 255u;
        _278 = 16u;
    }
    else
    {
        uint _263 = _254 >> 2u;
        uvec2 _269 = uvec2(texelFetch(l_geomAttrib_0, int(_263)).x, texelFetch(l_geomAttrib_0, int(_263 + 1u)).x);
        uint _270 = _269.x;
        _275 = _270 & 65535u;
        _276 = _270 >> 16u;
        _277 = _269.y & 65535u;
        _278 = 20u;
    }
    uvec4 _284 = texelFetch(l_geomAttrib_0, int((_278 + _253) >> 2u));
    uint _285 = _284.x;
    uint _297;
    if (_237)
    {
        _297 = _278 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _278 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _278 + 12u;
        }
        _297 = frontier_phi_16_17_ladder;
    }
    uvec4 _305 = texelFetch(l_geomAttrib_0, int(((_253 + 4u) + (_182 ? (_297 + 4u) : _297)) >> 2u));
    uint _306 = _305.x;
    float _310 = float(int(uint(int(_306 << 16u) >> int(16u))));
    float _311 = float(int(uint(int(_306) >> int(16u))));
    uint _312 = _180 * _175;
    uint _313 = _312 + 12u;
    uint _334;
    uint _335;
    uint _336;
    uint _337;
    if (_185)
    {
        uvec4 _315 = texelFetch(l_geomAttrib_0, int(_313 >> 2u));
        uint _316 = _315.x;
        _334 = _316 & 255u;
        _335 = (_316 >> 8u) & 255u;
        _336 = (_316 >> 16u) & 255u;
        _337 = 16u;
    }
    else
    {
        uint _322 = _313 >> 2u;
        uvec2 _328 = uvec2(texelFetch(l_geomAttrib_0, int(_322)).x, texelFetch(l_geomAttrib_0, int(_322 + 1u)).x);
        uint _329 = _328.x;
        _334 = _329 & 65535u;
        _335 = _329 >> 16u;
        _336 = _328.y & 65535u;
        _337 = 20u;
    }
    uvec4 _343 = texelFetch(l_geomAttrib_0, int((_337 + _312) >> 2u));
    uint _344 = _343.x;
    uint _356;
    if (_237)
    {
        _356 = _337 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _337 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _337 + 12u;
        }
        _356 = frontier_phi_23_24_ladder;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int(((_312 + 4u) + (_182 ? (_356 + 4u) : _356)) >> 2u));
    uint _365 = _364.x;
    float _369 = float(int(uint(int(_365 << 16u) >> int(16u))));
    float _370 = float(int(uint(int(_365) >> int(16u))));
    bool _372 = _131.z == 0u;
    float _408;
    float _409;
    float _410;
    if (_372)
    {
        uint _375 = _172 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _172 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_372)
    {
        uint _413 = _174 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _174 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_372)
    {
        uint _451 = _175 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _175 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _489 = (1.0 - hit._m0.x) - hit._m0.y;
    float _523 = (_310 - _251) * 0.00048828125;
    float _525 = (_311 - _252) * 0.00048828125;
    float _528 = (_369 - _251) * 0.00048828125;
    float _529 = (_370 - _252) * 0.00048828125;
    float _551 = _446 - _408;
    float _552 = _447 - _409;
    float _553 = _448 - _410;
    float _556 = fma(_553, gl_ObjectToWorldEXT[2u].x, fma(_552, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _551));
    float _559 = fma(_553, gl_ObjectToWorldEXT[2u].y, fma(_552, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _551));
    float _562 = fma(_553, gl_ObjectToWorldEXT[2u].z, fma(_552, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _551));
    float _563 = _484 - _408;
    float _564 = _485 - _409;
    float _565 = _486 - _410;
    float _568 = fma(_565, gl_ObjectToWorldEXT[2u].x, fma(_564, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _563));
    float _571 = fma(_565, gl_ObjectToWorldEXT[2u].y, fma(_564, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _563));
    float _574 = fma(_565, gl_ObjectToWorldEXT[2u].z, fma(_564, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _563));
    float _575 = (((_310 * hit._m0.x) + (_251 * _489)) + (_369 * hit._m0.y)) * 0.00048828125;
    float _576 = (((_311 * hit._m0.x) + (_252 * _489)) + (_370 * hit._m0.y)) * 0.00048828125;
    float _580 = (((float(_211) * _489) + (-127.0)) + (float(_275) * hit._m0.x)) + (float(_334) * hit._m0.y);
    float _583 = (((float(_212) * _489) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_335) * hit._m0.y);
    float _586 = (((float(_213) * _489) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _587 = _580 * 0.0078740157186985015869140625;
    float _589 = _583 * 0.0078740157186985015869140625;
    float _590 = _586 * 0.0078740157186985015869140625;
    float _603 = ((((float(_223 & 255u) * _489) + (-127.0)) + (float(_285 & 255u) * hit._m0.x)) + (float(_344 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _604 = ((((float((_223 >> 8u) & 255u) * _489) + (-127.0)) + (float((_285 >> 8u) & 255u) * hit._m0.x)) + (float((_344 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _605 = ((((float((_223 >> 16u) & 255u) * _489) + (-127.0)) + (float((_285 >> 16u) & 255u) * hit._m0.x)) + (float((_344 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float(_223 >> 24u) * _489) + (-127.0)) + (float(_285 >> 24u) * hit._m0.x)) + (float(_344 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _616 = ((_604 * _590) - (_605 * _589)) * _606;
    float _617 = ((_605 * _587) - (_603 * _590)) * _606;
    float _618 = ((_603 * _589) - (_604 * _587)) * _606;
    float _622 = inversesqrt(dot(vec3(_616, _617, _618), vec3(_616, _617, _618)));
    uvec2 _637 = uvec2(textureSize(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_7, int(0u)));
    bool _642 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _695;
    if (_642)
    {
        float _653 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _659 = (_574 * _559) - (_571 * _562);
        float _662 = (_568 * _562) - (_574 * _556);
        float _665 = (_571 * _556) - (_568 * _559);
        float _692 = ((log2((((float(_637.y) * 0.5) * float(_637.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_662 * _662) + (_665 * _665)) + (_659 * _659)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_653 * gl_WorldRayDirectionEXT.x, _653 * gl_WorldRayDirectionEXT.y, _653 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _695 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    }
    else
    {
        _695 = 0.0;
    }
    vec4 _699 = textureLod(sampler2D(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _575) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _576) + cbTextureTilingScale._m0[4u].w), _695);
    uvec2 _715 = uvec2(textureSize(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _766;
    if (_642)
    {
        float _726 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _732 = (_574 * _559) - (_571 * _562);
        float _735 = (_568 * _562) - (_574 * _556);
        float _738 = (_571 * _556) - (_568 * _559);
        float _764 = ((log2((((float(_715.y) * 0.5) * float(_715.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_735 * _735) + (_738 * _738)) + (_732 * _732)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_726 * gl_WorldRayDirectionEXT.x, _726 * gl_WorldRayDirectionEXT.y, _726 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _766 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _768 = textureLod(sampler2D(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _575) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _576) + cbTextureTilingScale._m0[1u].w), _766);
    float _782 = ((_699.x * 4.55000019073486328125) * _768.x) * cbMtdParam._m0[9u].x;
    float _785 = ((_699.y * 4.55000019073486328125) * _768.y) * cbMtdParam._m0[9u].y;
    float _788 = ((_699.z * 4.55000019073486328125) * _768.z) * cbMtdParam._m0[9u].z;
    uvec2 _800 = uvec2(textureSize(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _851;
    if (_642)
    {
        float _811 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _817 = (_574 * _559) - (_571 * _562);
        float _820 = (_568 * _562) - (_574 * _556);
        float _823 = (_571 * _556) - (_568 * _559);
        float _849 = ((log2((((float(_800.y) * 0.5) * float(_800.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_820 * _820) + (_823 * _823)) + (_817 * _817)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_811 * gl_WorldRayDirectionEXT.x, _811 * gl_WorldRayDirectionEXT.y, _811 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _851 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    }
    else
    {
        _851 = 0.0;
    }
    vec4 _854 = textureLod(sampler2D(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _575) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _576) + cbTextureTilingScale._m0[0u].w), _851);
    float _858 = _854.z;
    float _864 = exp2(log2(_858 * 22.0) * 260.0);
    float _865 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    uvec2 _882 = uvec2(textureSize(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _933;
    if (_642)
    {
        float _893 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _899 = (_574 * _559) - (_571 * _562);
        float _902 = (_568 * _562) - (_574 * _556);
        float _905 = (_571 * _556) - (_568 * _559);
        float _931 = ((log2((((float(_882.y) * 0.5) * float(_882.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_902 * _902) + (_905 * _905)) + (_899 * _899)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_893 * gl_WorldRayDirectionEXT.x, _893 * gl_WorldRayDirectionEXT.y, _893 * gl_WorldRayDirectionEXT.z), vec3(_587, _589, _590))));
        _933 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    }
    else
    {
        _933 = 0.0;
    }
    vec4 _935 = textureLod(sampler2D(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _575) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _576) + cbTextureTilingScale._m0[3u].w), _933);
    float _945 = (cbMtdParam._m0[11u].x + _935.z) * (((isnan(1.0) ? _865 : (isnan(_865) ? 1.0 : min(_865, 1.0))) * (_858 + (-0.5))) + 0.5);
    float _963 = abs((fract(cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1547 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _964 = isnan(1.0) ? _1547 : (isnan(_1547) ? 1.0 : min(_1547, 1.0));
    float _969 = (_964 * _964) * (3.0 - (_964 * 2.0));
    uvec2 _981 = uvec2(textureSize(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_11, int(0u)));
    float _985 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _986 = _985 * gl_WorldRayDirectionEXT.x;
    float _987 = _985 * gl_WorldRayDirectionEXT.y;
    float _988 = _985 * gl_WorldRayDirectionEXT.z;
    float _1032;
    if (_642)
    {
        float _998 = (_574 * _559) - (_571 * _562);
        float _1001 = (_568 * _562) - (_574 * _556);
        float _1004 = (_571 * _556) - (_568 * _559);
        float _1030 = ((log2((((float(_981.y) * 0.5) * float(_981.x)) * abs((_529 * _523) - (_528 * _525))) / (sqrt(((_1001 * _1001) + (_1004 * _1004)) + (_998 * _998)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_986, _987, _988), vec3(_587, _589, _590))));
        _1032 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    }
    else
    {
        _1032 = 0.0;
    }
    vec4 _1034 = textureLod(sampler2D(C_DetailBlend1_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _575) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _576) + cbTextureTilingScale._m0[2u].w), _1032);
    float _1054 = (_854.x * 2.0) + (-1.0);
    float _1055 = (_854.y * 2.0) + (-1.0);
    float _1056 = dot(vec2(_1054, _1055), vec2(_1054, _1055));
    float _1563 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _1061 = sqrt(1.0 - (isnan(1.0) ? _1563 : (isnan(_1563) ? 1.0 : min(_1563, 1.0))));
    float _1068 = (cbMtdParam._m0[11u].y * ((_935.x * 2.0) + (-1.0))) + _1054;
    float _1069 = (cbMtdParam._m0[11u].y * ((_935.y * 2.0) + (-1.0))) + _1055;
    float _1072 = fma(_1061, _587, fma(_1069, _603, (_622 * _616) * _1068));
    float _1075 = fma(_1061, _589, fma(_1069, _604, (_622 * _617) * _1068));
    float _1078 = fma(_1061, _590, fma(_1069, _605, (_622 * _618) * _1068));
    float _1082 = inversesqrt(dot(vec3(_1072, _1075, _1078), vec3(_1072, _1075, _1078)));
    float _1083 = _1082 * _1072;
    float _1084 = _1082 * _1075;
    float _1085 = _1082 * _1078;
    float _1097 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1098 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1099 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1100 = (-0.0) - _986;
    float _1102 = (-0.0) - _987;
    float _1103 = (-0.0) - _988;
    float _1109 = float(gl_LaunchIDEXT.x);
    float _1110 = float(gl_LaunchIDEXT.y);
    float _1113 = float(gl_LaunchSizeEXT.x);
    float _1127 = fract(fract(sin(dot(vec2(_1109 / _1113, _1110 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1140 = fract(fract(sin(dot(vec2((_1109 + 128.0) / _1113, (_1110 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1150 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1151 = _1150.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1151, _1150.w, _1151, vec3(_1097, _1098, _1099), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    if (_69._m0 == 0u)
    {
        float _1172 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1083, _1084, _1085));
        float _1574 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1175 = isnan(1.0) ? _1574 : (isnan(_1574) ? 1.0 : min(_1574, 1.0));
        float _1194 = 1.0 - (sqrt((_945 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1195 = _1194 * _1194;
        float _1196 = g_sceneCB._m0[4u].x - _986;
        float _1197 = g_sceneCB._m0[4u].y - _987;
        float _1198 = g_sceneCB._m0[4u].z - _988;
        float _1202 = inversesqrt(dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198)));
        float _1203 = _1202 * _1196;
        float _1204 = _1202 * _1197;
        float _1205 = _1202 * _1198;
        float _1206 = dot(vec3(_1083, _1084, _1085), vec3(g_sceneCB._m0[4u].xyz));
        float _1585 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1209 = isnan(1.0) ? _1585 : (isnan(_1585) ? 1.0 : min(_1585, 1.0));
        float _1210 = dot(vec3(_1083, _1084, _1085), vec3(_1100, _1102, _1103));
        float _1596 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1213 = isnan(1.0) ? _1596 : (isnan(_1596) ? 1.0 : min(_1596, 1.0));
        float _1214 = dot(vec3(_1083, _1084, _1085), vec3(_1203, _1204, _1205));
        float _1607 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1217 = isnan(1.0) ? _1607 : (isnan(_1607) ? 1.0 : min(_1607, 1.0));
        float _1218 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1203, _1204, _1205));
        float _1618 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1222 = _1195 * _1195;
        float _1226 = ((_1217 * _1217) * (_1222 + (-1.0))) + 1.0;
        float _1238 = (exp2(log2(1.0 - (isnan(1.0) ? _1618 : (isnan(_1618) ? 1.0 : min(_1618, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1240 = 1.0 - _1195;
        float _1251 = (0.5 / (((_1213 * ((_1209 * _1240) + _1195)) + 9.9999999392252902907785028219223e-09) + (((_1213 * _1240) + _1195) * _1209))) * _1209;
        float _1629 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1253 = (isnan(1.0) ? _1629 : (isnan(_1629) ? 1.0 : min(_1629, 1.0))) * (_1222 / ((_1226 * _1226) * 3.141590118408203125));
        _1260 = ((_782 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1175;
        _1261 = ((_785 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1175;
        _1262 = ((_788 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1175;
        _1263 = (_1238 * g_sceneCB._m0[5u].x) * _1253;
        _1264 = (_1238 * g_sceneCB._m0[5u].y) * _1253;
        _1265 = (_1238 * g_sceneCB._m0[5u].z) * _1253;
    }
    else
    {
        _1260 = 0.0;
        _1261 = 0.0;
        _1262 = 0.0;
        _1263 = 0.0;
        _1264 = 0.0;
        _1265 = 0.0;
    }
    bool _1267 = abs(_1084) < 0.89999997615814208984375;
    float _1269 = float(_1267);
    float _1270 = _1267 ? 0.0 : 1.0;
    float _1273 = (_1269 * _1085) - (_1270 * _1084);
    float _1274 = _1270 * _1083;
    float _1276 = (-0.0) - (_1083 * _1269);
    float _1280 = inversesqrt(dot(vec3(_1273, _1274, _1276), vec3(_1273, _1274, _1276)));
    float _1281 = _1273 * _1280;
    float _1282 = _1274 * _1280;
    float _1283 = _1280 * _1276;
    float _1286 = (_1282 * _1085) - (_1283 * _1084);
    float _1289 = (_1283 * _1083) - (_1281 * _1085);
    float _1292 = (_1281 * _1084) - (_1282 * _1083);
    float _1294;
    float _1302;
    float _1293 = 0.0;
    uint _1295 = 0u;
    float _1299;
    bool _1301;
    for (;;)
    {
        _1299 = (float(_1295) + _1127) * 0.03125;
        _1301 = _1295 == 0u;
        float frontier_phi_49_pred;
        if (_1301)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1440;
            float _1441;
            uint _1443;
            _1440 = 0.0;
            _1441 = 0.5;
            _1443 = _1295;
            float _1303;
            for (;;)
            {
                _1303 = ((_1443 & 1u) != 0u) ? (_1441 + _1440) : _1440;
                uint _1444 = _1443 >> 1u;
                if (_1444 == 0u)
                {
                    break;
                }
                else
                {
                    _1440 = _1303;
                    _1441 *= 0.5;
                    _1443 = _1444;
                }
            }
            frontier_phi_49_pred = _1303;
        }
        _1302 = frontier_phi_49_pred;
        float _1304 = _1302 + _1140;
        float _1308 = sqrt(_1299);
        float _1309 = ((_1304 > 1.0) ? (_1304 + (-1.0)) : _1304) * 6.283185482025146484375;
        float _1312 = cos(_1309) * _1308;
        float _1314 = sin(_1309) * _1308;
        float _1316 = sqrt(1.0 - _1299);
        float _1329 = ((_1316 * _1083) + (_1312 * _1286)) + (_1314 * _1281);
        float _1330 = ((_1316 * _1084) + (_1312 * _1289)) + (_1314 * _1282);
        float _1331 = ((_1316 * _1085) + (_1312 * _1292)) + (_1314 * _1283);
        _68._m0 = 1u;
        uvec4 _1335 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1336 = _1335.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1336, _1335.w, _1336, vec3(_1097, _1098, _1099), 9.9999997473787516355514526367188e-05, vec3(_1329, _1330, _1331), 10000.0, 1);
        float _1342 = dot(vec3(_1083, _1084, _1085), vec3(_1329, _1330, _1331));
        float _1640 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1345 = isnan(1.0) ? _1640 : (isnan(_1640) ? 1.0 : min(_1640, 1.0));
        _1294 = ((float(_68._m0 == 0u) * _1345) / (_1345 * 0.3183098733425140380859375)) + _1293;
        uint _1296 = _1295 + 1u;
        if (_1296 == 32u)
        {
            break;
        }
        else
        {
            _1293 = _1294;
            _1295 = _1296;
            continue;
        }
    }
    float _1353 = _1294 * 0.009947183541953563690185546875;
    float _1358 = dot(vec3(_986, _987, _988), vec3(_1083, _1084, _1085)) * 2.0;
    vec4 _1373 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_986 - (_1358 * _1083), _987 - (_1358 * _1084), _988 - (_1358 * _1085)), 4.0 - (_945 * 8.0));
    float _1378 = dot(vec3(_1100, _1102, _1103), vec3(_1083, _1084, _1085));
    float _1651 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
    float _1387 = (exp2(log2(1.0 - (isnan(1.0) ? _1651 : (isnan(_1651) ? 1.0 : min(_1651, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1393 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1083, _1084, _1085), 0.0);
    float _1405 = ((_1260 + ((((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].x) * cbMtdParam._m0[11u].w) * _969) * _1034.x)) + _1263) + (((_1393.x * _782) + (_1387 * _1373.x)) * _1353);
    float _1410 = ((_1261 + ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].x) * cbMtdParam._m0[11u].w) * _969) * _1034.y)) + _1264) + (((_1393.y * _785) + (_1387 * _1373.y)) * _1353);
    float _1415 = ((_1262 + ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].x) * cbMtdParam._m0[11u].w) * _969) * _1034.z)) + _1265) + (((_1393.z * _788) + (_1387 * _1373.z)) * _1353);
    float _1662 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
    float _1673 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
    float _1684 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
    bool _1423 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1434;
    _1434.x = _1423 ? ((_580 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1662 : (isnan(_1662) ? 1.0 : min(_1662, 1.0)));
    _1434.y = _1423 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1673 : (isnan(_1673) ? 1.0 : min(_1673, 1.0)));
    _1434.z = _1423 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1684 : (isnan(_1684) ? 1.0 : min(_1684, 1.0)));
    payload._m0 = _1434;
}


