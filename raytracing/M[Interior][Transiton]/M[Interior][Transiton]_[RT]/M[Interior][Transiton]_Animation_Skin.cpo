#version 460
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;

void main()
{
    uvec4 _42 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _47 = (((_42.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_47 < _42.x)
    {
        uint _55 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _47;
        uint _56 = _55 >> 2u;
        uvec3 _66 = uvec3(texelFetch(l_geomAttrib_0, int(_56)).x, texelFetch(l_geomAttrib_0, int(_56 + 1u)).x, texelFetch(l_geomAttrib_0, int(_56 + 2u)).x);
        float _70 = uintBitsToFloat(_66.x);
        float _71 = uintBitsToFloat(_66.y);
        float _72 = uintBitsToFloat(_66.z);
        uint _75 = _55 + 28u;
        uint _105;
        uint _108;
        uint _109;
        uint _110;
        uint _111;
        if (_42.y == 0u)
        {
            uvec4 _78 = texelFetch(l_geomAttrib_0, int(_75 >> 2u));
            uint _79 = _78.x;
            _105 = 32u;
            _108 = _79 & 255u;
            _109 = (_79 >> 8u) & 255u;
            _110 = (_79 >> 16u) & 255u;
            _111 = _79 >> 24u;
        }
        else
        {
            uint _90 = _75 >> 2u;
            uvec2 _97 = uvec2(texelFetch(l_geomAttrib_0, int(_90)).x, texelFetch(l_geomAttrib_0, int(_90 + 1u)).x);
            uint _98 = _97.x;
            uint _99 = _97.y;
            _105 = 36u;
            _108 = _98 & 65535u;
            _109 = _98 >> 16u;
            _110 = _99 & 65535u;
            _111 = _99 >> 16u;
        }
        uvec4 _114 = texelFetch(l_geomAttrib_0, int((_105 + _55) >> 2u));
        uint _115 = _114.x;
        float _126 = float(_115 & 255u) * 0.0039215688593685626983642578125;
        float _128 = float((_115 >> 8u) & 255u) * 0.0039215688593685626983642578125;
        float _129 = float((_115 >> 16u) & 255u) * 0.0039215688593685626983642578125;
        float _130 = float(_115 >> 24u) * 0.0039215688593685626983642578125;
        float _131 = dot(vec4(1.0), vec4(_126, _128, _129, _130));
        float _136 = isnan(_131) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _131 : max(0.001000000047497451305389404296875, _131));
        float _138 = _126 / _136;
        float _139 = _128 / _136;
        float _140 = _129 / _136;
        float _141 = _130 / _136;
        uint _142 = _108 * 3u;
        uint _150 = _142 + 1u;
        uint _157 = _142 + 2u;
        uint _176 = _109 * 3u;
        uint _183 = _176 + 1u;
        uint _190 = _176 + 2u;
        uint _221 = _110 * 3u;
        uint _228 = _221 + 1u;
        uint _235 = _221 + 2u;
        uint _266 = _111 * 3u;
        uint _273 = _266 + 1u;
        uint _280 = _266 + 2u;
        float _314 = ((((cbObjMatrix._m0[_176].w * _139) + (cbObjMatrix._m0[_142].w * _138)) + (cbObjMatrix._m0[_221].w * _140)) + (cbObjMatrix._m0[_266].w * _141)) + fma(_72, (((cbObjMatrix._m0[_176].z * _139) + (cbObjMatrix._m0[_142].z * _138)) + (cbObjMatrix._m0[_221].z * _140)) + (cbObjMatrix._m0[_266].z * _141), fma(_71, (((cbObjMatrix._m0[_176].y * _139) + (cbObjMatrix._m0[_142].y * _138)) + (cbObjMatrix._m0[_221].y * _140)) + (cbObjMatrix._m0[_266].y * _141), ((((cbObjMatrix._m0[_176].x * _139) + (cbObjMatrix._m0[_142].x * _138)) + (cbObjMatrix._m0[_221].x * _140)) + (cbObjMatrix._m0[_266].x * _141)) * _70));
        float _318 = ((((cbObjMatrix._m0[_183].w * _139) + (cbObjMatrix._m0[_150].w * _138)) + (cbObjMatrix._m0[_228].w * _140)) + (cbObjMatrix._m0[_273].w * _141)) + fma(_72, (((cbObjMatrix._m0[_183].z * _139) + (cbObjMatrix._m0[_150].z * _138)) + (cbObjMatrix._m0[_228].z * _140)) + (cbObjMatrix._m0[_273].z * _141), fma(_71, (((cbObjMatrix._m0[_183].y * _139) + (cbObjMatrix._m0[_150].y * _138)) + (cbObjMatrix._m0[_228].y * _140)) + (cbObjMatrix._m0[_273].y * _141), ((((cbObjMatrix._m0[_183].x * _139) + (cbObjMatrix._m0[_150].x * _138)) + (cbObjMatrix._m0[_228].x * _140)) + (cbObjMatrix._m0[_273].x * _141)) * _70));
        float _322 = ((((cbObjMatrix._m0[_190].w * _139) + (cbObjMatrix._m0[_157].w * _138)) + (cbObjMatrix._m0[_235].w * _140)) + (cbObjMatrix._m0[_280].w * _141)) + fma(_72, (((cbObjMatrix._m0[_190].z * _139) + (cbObjMatrix._m0[_157].z * _138)) + (cbObjMatrix._m0[_235].z * _140)) + (cbObjMatrix._m0[_280].z * _141), fma(_71, (((cbObjMatrix._m0[_190].y * _139) + (cbObjMatrix._m0[_157].y * _138)) + (cbObjMatrix._m0[_235].y * _140)) + (cbObjMatrix._m0[_280].y * _141), ((((cbObjMatrix._m0[_190].x * _139) + (cbObjMatrix._m0[_157].x * _138)) + (cbObjMatrix._m0[_235].x * _140)) + (cbObjMatrix._m0[_280].x * _141)) * _70));
        float _346 = fma(_322, CB_CS_ANIMATION._m0[5u].z, fma(_318, CB_CS_ANIMATION._m0[5u].y, CB_CS_ANIMATION._m0[5u].x * _314)) + CB_CS_ANIMATION._m0[5u].w;
        float _350 = fma(_322, CB_CS_ANIMATION._m0[6u].z, fma(_318, CB_CS_ANIMATION._m0[6u].y, CB_CS_ANIMATION._m0[6u].x * _314)) + CB_CS_ANIMATION._m0[6u].w;
        float _354 = fma(_322, CB_CS_ANIMATION._m0[7u].z, fma(_318, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _314)) + CB_CS_ANIMATION._m0[7u].w;
        if (_42.w == 0u)
        {
            uint _368 = _47 * 3u;
            imageStore(outPositionBuffer, int(_368), uvec4(uint(float(floatBitsToUint(_346)))));
            imageStore(outPositionBuffer, int(_368 + 1u), uvec4(uint(float(floatBitsToUint(_350)))));
            imageStore(outPositionBuffer, int(_368 + 2u), uvec4(uint(float(floatBitsToUint(_354)))));
        }
        else
        {
            uint _389 = _47 * 2u;
            imageStore(outPositionBuffer, int(_389), uvec4((packHalf2x16(vec2(_350, 0.0)) << 16u) | packHalf2x16(vec2(_346, 0.0))));
            imageStore(outPositionBuffer, int(_389 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_354, 0.0))));
        }
    }
}


