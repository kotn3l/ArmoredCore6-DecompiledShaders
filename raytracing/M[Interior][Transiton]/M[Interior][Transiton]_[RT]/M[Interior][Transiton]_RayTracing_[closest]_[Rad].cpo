#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

float _852;
vec3 _1457;

void main()
{
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    uint _237 = _216 | 8u;
    bool _240 = _183 == 0u;
    uint _241;
    if (_240)
    {
        _241 = _237 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _237 + 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _237 + 12u;
        }
        _241 = frontier_phi_9_10_ladder;
    }
    uint _248 = ((_188 + 4u) + (_184 ? (_241 + 4u) : _241)) >> 2u;
    uvec2 _254 = uvec2(texelFetch(l_geomAttrib_0, int(_248)).x, texelFetch(l_geomAttrib_0, int(_248 + 1u)).x);
    uint _255 = _254.x;
    uint _256 = _254.y;
    float _260 = float(int(uint(int(_255 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_255) >> int(16u))));
    float _265 = float(int(uint(int(_256 << 16u) >> int(16u))));
    float _266 = float(int(uint(int(_256) >> int(16u))));
    uint _267 = _182 * _176;
    uint _268 = _267 + 12u;
    uint _289;
    uint _290;
    uint _291;
    uint _292;
    if (_187)
    {
        uvec4 _270 = texelFetch(l_geomAttrib_0, int(_268 >> 2u));
        uint _271 = _270.x;
        _289 = _271 & 255u;
        _290 = (_271 >> 8u) & 255u;
        _291 = (_271 >> 16u) & 255u;
        _292 = 16u;
    }
    else
    {
        uint _277 = _268 >> 2u;
        uvec2 _283 = uvec2(texelFetch(l_geomAttrib_0, int(_277)).x, texelFetch(l_geomAttrib_0, int(_277 + 1u)).x);
        uint _284 = _283.x;
        _289 = _284 & 65535u;
        _290 = _284 >> 16u;
        _291 = _283.y & 65535u;
        _292 = 20u;
    }
    uvec4 _298 = texelFetch(l_geomAttrib_0, int((_292 + _267) >> 2u));
    uint _299 = _298.x;
    uint _310 = _292 | 8u;
    uint _312;
    if (_240)
    {
        _312 = _310 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _310 + 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _310 + 12u;
        }
        _312 = frontier_phi_16_17_ladder;
    }
    uint _319 = ((_267 + 4u) + (_184 ? (_312 + 4u) : _312)) >> 2u;
    uvec2 _325 = uvec2(texelFetch(l_geomAttrib_0, int(_319)).x, texelFetch(l_geomAttrib_0, int(_319 + 1u)).x);
    uint _326 = _325.x;
    uint _327 = _325.y;
    float _331 = float(int(uint(int(_326 << 16u) >> int(16u))));
    float _332 = float(int(uint(int(_326) >> int(16u))));
    float _336 = float(int(uint(int(_327 << 16u) >> int(16u))));
    float _337 = float(int(uint(int(_327) >> int(16u))));
    uint _338 = _182 * _177;
    uint _339 = _338 + 12u;
    uint _360;
    uint _361;
    uint _362;
    uint _363;
    if (_187)
    {
        uvec4 _341 = texelFetch(l_geomAttrib_0, int(_339 >> 2u));
        uint _342 = _341.x;
        _360 = _342 & 255u;
        _361 = (_342 >> 8u) & 255u;
        _362 = (_342 >> 16u) & 255u;
        _363 = 16u;
    }
    else
    {
        uint _348 = _339 >> 2u;
        uvec2 _354 = uvec2(texelFetch(l_geomAttrib_0, int(_348)).x, texelFetch(l_geomAttrib_0, int(_348 + 1u)).x);
        uint _355 = _354.x;
        _360 = _355 & 65535u;
        _361 = _355 >> 16u;
        _362 = _354.y & 65535u;
        _363 = 20u;
    }
    uvec4 _369 = texelFetch(l_geomAttrib_0, int((_363 + _338) >> 2u));
    uint _370 = _369.x;
    uint _381 = _363 | 8u;
    uint _383;
    if (_240)
    {
        _383 = _381 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _381 + 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _381 + 12u;
        }
        _383 = frontier_phi_23_24_ladder;
    }
    uint _390 = ((_338 + 4u) + (_184 ? (_383 + 4u) : _383)) >> 2u;
    uvec2 _396 = uvec2(texelFetch(l_geomAttrib_0, int(_390)).x, texelFetch(l_geomAttrib_0, int(_390 + 1u)).x);
    uint _397 = _396.x;
    uint _398 = _396.y;
    float _402 = float(int(uint(int(_397 << 16u) >> int(16u))));
    float _403 = float(int(uint(int(_397) >> int(16u))));
    float _407 = float(int(uint(int(_398 << 16u) >> int(16u))));
    float _408 = float(int(uint(int(_398) >> int(16u))));
    bool _410 = _133.z == 0u;
    float _446;
    float _447;
    float _448;
    if (_410)
    {
        uint _413 = _174 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _174 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _484;
    float _485;
    float _486;
    if (_410)
    {
        uint _451 = _176 * 3u;
        uvec3 _460 = uvec3(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_451 + 2u)).x);
        _484 = uintBitsToFloat(_460.x);
        _485 = uintBitsToFloat(_460.y);
        _486 = uintBitsToFloat(_460.z);
    }
    else
    {
        uint _468 = _176 * 2u;
        uvec2 _474 = uvec2(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x);
        uint _475 = _474.x;
        _484 = unpackHalf2x16(_475).x;
        _485 = unpackHalf2x16(_475 >> 16u).x;
        _486 = unpackHalf2x16(_474.y).x;
    }
    float _522;
    float _523;
    float _524;
    if (_410)
    {
        uint _489 = _177 * 3u;
        uvec3 _498 = uvec3(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_489 + 2u)).x);
        _522 = uintBitsToFloat(_498.x);
        _523 = uintBitsToFloat(_498.y);
        _524 = uintBitsToFloat(_498.z);
    }
    else
    {
        uint _506 = _177 * 2u;
        uvec2 _512 = uvec2(texelFetch(l_geomPositionBuffer, int(_506)).x, texelFetch(l_geomPositionBuffer, int(_506 + 1u)).x);
        uint _513 = _512.x;
        _522 = unpackHalf2x16(_513).x;
        _523 = unpackHalf2x16(_513 >> 16u).x;
        _524 = unpackHalf2x16(_512.y).x;
    }
    float _527 = (1.0 - hit._m0.x) - hit._m0.y;
    float _571 = (_336 - _265) * 0.00048828125;
    float _573 = (_337 - _266) * 0.00048828125;
    float _576 = (_407 - _265) * 0.00048828125;
    float _577 = (_408 - _266) * 0.00048828125;
    float _599 = _484 - _446;
    float _600 = _485 - _447;
    float _601 = _486 - _448;
    float _604 = fma(_601, gl_ObjectToWorldEXT[2u].x, fma(_600, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _599));
    float _607 = fma(_601, gl_ObjectToWorldEXT[2u].y, fma(_600, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _599));
    float _610 = fma(_601, gl_ObjectToWorldEXT[2u].z, fma(_600, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _599));
    float _611 = _522 - _446;
    float _612 = _523 - _447;
    float _613 = _524 - _448;
    float _616 = fma(_613, gl_ObjectToWorldEXT[2u].x, fma(_612, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _611));
    float _619 = fma(_613, gl_ObjectToWorldEXT[2u].y, fma(_612, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _611));
    float _622 = fma(_613, gl_ObjectToWorldEXT[2u].z, fma(_612, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _611));
    float _623 = (((_331 * hit._m0.x) + (_260 * _527)) + (_402 * hit._m0.y)) * 0.00048828125;
    float _624 = (((_332 * hit._m0.x) + (_261 * _527)) + (_403 * hit._m0.y)) * 0.00048828125;
    float _625 = (((_336 * hit._m0.x) + (_265 * _527)) + (_407 * hit._m0.y)) * 0.00048828125;
    float _626 = (((_337 * hit._m0.x) + (_266 * _527)) + (_408 * hit._m0.y)) * 0.00048828125;
    float _630 = (((float(_213) * _527) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_360) * hit._m0.y);
    float _633 = (((float(_214) * _527) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_361) * hit._m0.y);
    float _636 = (((float(_215) * _527) + (-127.0)) + (float(_291) * hit._m0.x)) + (float(_362) * hit._m0.y);
    float _637 = _630 * 0.0078740157186985015869140625;
    float _639 = _633 * 0.0078740157186985015869140625;
    float _640 = _636 * 0.0078740157186985015869140625;
    float _653 = ((((float(_225 & 255u) * _527) + (-127.0)) + (float(_299 & 255u) * hit._m0.x)) + (float(_370 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _654 = ((((float((_225 >> 8u) & 255u) * _527) + (-127.0)) + (float((_299 >> 8u) & 255u) * hit._m0.x)) + (float((_370 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _655 = ((((float((_225 >> 16u) & 255u) * _527) + (-127.0)) + (float((_299 >> 16u) & 255u) * hit._m0.x)) + (float((_370 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _656 = ((((float(_225 >> 24u) * _527) + (-127.0)) + (float(_299 >> 24u) * hit._m0.x)) + (float(_370 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _666 = ((_654 * _640) - (_655 * _639)) * _656;
    float _667 = ((_655 * _637) - (_653 * _640)) * _656;
    float _668 = ((_653 * _639) - (_654 * _637)) * _656;
    float _672 = inversesqrt(dot(vec3(_666, _667, _668), vec3(_666, _667, _668)));
    float _673 = _672 * _666;
    float _674 = _672 * _667;
    float _675 = _672 * _668;
    uvec2 _702 = uvec2(textureSize(M_Interior_Transiton_snp_0_Texture2D_4, int(0u)));
    bool _707 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _766;
    if (_707)
    {
        float _722 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _728 = (_622 * _607) - (_619 * _610);
        float _731 = (_616 * _610) - (_622 * _604);
        float _734 = (_619 * _604) - (_616 * _607);
        float _763 = ((log2((((float(_702.y) * 0.5) * float(_702.x)) * abs((((_403 - _261) * (_331 - _260)) - ((_402 - _260) * (_332 - _261))) * 2.384185791015625e-07)) / (sqrt(((_731 * _731) + (_734 * _734)) + (_728 * _728)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_722 * gl_WorldRayDirectionEXT.x, _722 * gl_WorldRayDirectionEXT.y, _722 * gl_WorldRayDirectionEXT.z), vec3(_637, _639, _640))));
        _766 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    }
    else
    {
        _766 = 0.0;
    }
    vec4 _770 = textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _623) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _624) + cbTextureTilingScale._m0[8u].w), _766);
    float _784 = inversesqrt(dot(vec3(_673, _674, _675), vec3(_673, _674, _675)));
    float _791 = inversesqrt(dot(vec3(_653, _654, _655), vec3(_653, _654, _655)));
    float _817 = (-0.0) - dot(vec3(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x), vec3(_784 * _673, _784 * _674, _784 * _675));
    float _818 = (-0.0) - dot(vec3(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x), vec3(_791 * _653, _791 * _654, _791 * _655));
    float _819 = (-0.0) - dot(vec3(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x), vec3((-0.0) - _637, (-0.0) - _639, (-0.0) - _640));
    float _823 = inversesqrt(dot(vec3(_817, _818, _819), vec3(_817, _818, _819)));
    float _824 = _823 * _819;
    float _829 = ((cbMtdParam._m0[25u].y * _817) * _823) + (((_770.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _830 = ((cbMtdParam._m0[25u].z * _818) * _823) + (((_770.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _833 = fract(cbMtdParam._m0[25u].y * _623);
    float _834 = fract(cbMtdParam._m0[25u].z * _624);
    float _850;
    float _853;
    float _855;
    if (_829 > 0.0)
    {
        float _837 = (1.0 - _833) / _829;
        _850 = _837;
        _853 = ((cbMtdParam._m0[22u].x + 1.0) - fract(_837 * _824)) * 0.16666667163372039794921875;
        _855 = (fract((_837 * _830) + _834) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_40_39_ladder;
        float frontier_phi_40_39_ladder_1;
        float frontier_phi_40_39_ladder_2;
        if (_829 < 0.0)
        {
            float _851 = ((-0.0) - _833) / _829;
            frontier_phi_40_39_ladder = (fract((_851 * _830) + _834) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_40_39_ladder_1 = (fract(_851 * _824) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
            frontier_phi_40_39_ladder_2 = _851;
        }
        else
        {
            frontier_phi_40_39_ladder = 0.0;
            frontier_phi_40_39_ladder_1 = 0.0;
            frontier_phi_40_39_ladder_2 = _852;
        }
        _850 = frontier_phi_40_39_ladder_2;
        _853 = frontier_phi_40_39_ladder_1;
        _855 = frontier_phi_40_39_ladder;
    }
    float _881;
    float _883;
    float _885;
    if (_830 > 0.0)
    {
        float _868 = (1.0 - _834) / _830;
        float frontier_phi_45_42_ladder;
        float frontier_phi_45_42_ladder_1;
        float frontier_phi_45_42_ladder_2;
        if (_868 < _850)
        {
            frontier_phi_45_42_ladder = (fract(_868 * _824) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_45_42_ladder_1 = (fract((_868 * _829) + _833) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
            frontier_phi_45_42_ladder_2 = _868;
        }
        else
        {
            frontier_phi_45_42_ladder = _855;
            frontier_phi_45_42_ladder_1 = _853;
            frontier_phi_45_42_ladder_2 = _850;
        }
        _881 = frontier_phi_45_42_ladder_2;
        _883 = frontier_phi_45_42_ladder_1;
        _885 = frontier_phi_45_42_ladder;
    }
    else
    {
        float frontier_phi_45_43_ladder;
        float frontier_phi_45_43_ladder_1;
        float frontier_phi_45_43_ladder_2;
        if (_830 < 0.0)
        {
            float _882 = ((-0.0) - _834) / _830;
            float frontier_phi_45_43_ladder_46_ladder;
            float frontier_phi_45_43_ladder_46_ladder_1;
            float frontier_phi_45_43_ladder_46_ladder_2;
            if (_882 < _850)
            {
                frontier_phi_45_43_ladder_46_ladder = fract(_882 * _824) * 0.16666667163372039794921875;
                frontier_phi_45_43_ladder_46_ladder_1 = (fract((_882 * _829) + _833) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
                frontier_phi_45_43_ladder_46_ladder_2 = _882;
            }
            else
            {
                frontier_phi_45_43_ladder_46_ladder = _855;
                frontier_phi_45_43_ladder_46_ladder_1 = _853;
                frontier_phi_45_43_ladder_46_ladder_2 = _850;
            }
            frontier_phi_45_43_ladder = frontier_phi_45_43_ladder_46_ladder;
            frontier_phi_45_43_ladder_1 = frontier_phi_45_43_ladder_46_ladder_1;
            frontier_phi_45_43_ladder_2 = frontier_phi_45_43_ladder_46_ladder_2;
        }
        else
        {
            frontier_phi_45_43_ladder = _855;
            frontier_phi_45_43_ladder_1 = _853;
            frontier_phi_45_43_ladder_2 = _850;
        }
        _881 = frontier_phi_45_43_ladder_2;
        _883 = frontier_phi_45_43_ladder_1;
        _885 = frontier_phi_45_43_ladder;
    }
    float _889 = (_824 > 0.0) ? (cbMtdParam._m0[20u].z / _824) : 5000.0;
    float _902;
    float _903;
    if (_889 < _881)
    {
        _902 = ((_833 + cbMtdParam._m0[22u].x) + (_889 * _829)) * 0.16666667163372039794921875;
        _903 = (((_889 * _830) + _834) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _902 = _883;
        _903 = _885;
    }
    vec4 _907 = textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_902, _903), 0.0);
    float _909 = _907.x;
    float _910 = _907.y;
    float _911 = _907.z;
    uvec2 _936 = uvec2(textureSize(M_Interior_Transiton_snp_0_Texture2D_15, int(0u)));
    float _993;
    if (_707)
    {
        float _953 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _959 = (_622 * _607) - (_619 * _610);
        float _962 = (_616 * _610) - (_622 * _604);
        float _965 = (_619 * _604) - (_616 * _607);
        float _991 = ((log2((((float(_936.y) * 0.5) * float(_936.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_962 * _962) + (_965 * _965)) + (_959 * _959)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_953 * gl_WorldRayDirectionEXT.x, _953 * gl_WorldRayDirectionEXT.y, _953 * gl_WorldRayDirectionEXT.z), vec3(_637, _639, _640))));
        _993 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    }
    else
    {
        _993 = 0.0;
    }
    vec4 _996 = textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + _625)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + _626)) + cbTextureTilingScale._m0[4u].w), _993);
    float _1001 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _1007 = ((_996.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _1009 = (-0.0) - (cbMtdParam._m0[21u].x * ((_996.x * 0.5) + (-0.25)));
    float _1010 = fract(_1001);
    float _1012 = fract(_1001 + 0.5);
    vec4 _1040 = textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_1010 * _1009) + _623) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_1007 * _1010) + _624) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _1042 = _1040.x;
    float _1048 = ((textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_1012 * _1009) + _623) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_1007 * _1012) + _624) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0).x - _1042) * abs((_1010 * 2.0) + (-1.0))) + _1042;
    float _1063 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _1067 = fract(abs(_1063));
    float _1073 = sin(cbMtdParam._m0[21u].z);
    float _1074 = cos(cbMtdParam._m0[21u].z);
    float _1075 = _625 - cbMtdParam._m0[20u].y;
    float _1076 = _626 - cbMtdParam._m0[20u].y;
    uvec2 _1096 = uvec2(textureSize(M_Interior_Transiton_snp_0_Texture2D_16, int(0u)));
    float _1147;
    if (_707)
    {
        float _1107 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1113 = (_622 * _607) - (_619 * _610);
        float _1116 = (_616 * _610) - (_622 * _604);
        float _1119 = (_619 * _604) - (_616 * _607);
        float _1145 = ((log2((((float(_1096.y) * 0.5) * float(_1096.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_1116 * _1116) + (_1119 * _1119)) + (_1113 * _1113)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1107 * gl_WorldRayDirectionEXT.x, _1107 * gl_WorldRayDirectionEXT.y, _1107 * gl_WorldRayDirectionEXT.z), vec3(_637, _639, _640))));
        _1147 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    }
    else
    {
        _1147 = 0.0;
    }
    float _1159 = abs(cbMtdParam._m0[20u].w * (((_1048 - (((_1063 >= ((-0.0) - _1063)) ? _1067 : ((-0.0) - _1067)) * cbMtdParam._m0[18u].z)) + textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_1076, (-0.0) - _1073, _1074 * _1075) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_1076, _1074, _1075 * _1073) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w), _1147).x) + cbMtdParam._m0[18u].w));
    float _1163 = (((_1159 * cbMtdParam._m0[18u].y) - _1048) * _1159) + _1048;
    float _1564 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    float _1164 = isnan(1.0) ? _1564 : (isnan(_1564) ? 1.0 : min(_1564, 1.0));
    uvec2 _1176 = uvec2(textureSize(M_Interior_Transiton_snp_0_Texture2D_11, int(0u)));
    float _1180 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1181 = _1180 * gl_WorldRayDirectionEXT.x;
    float _1182 = _1180 * gl_WorldRayDirectionEXT.y;
    float _1183 = _1180 * gl_WorldRayDirectionEXT.z;
    float _1227;
    if (_707)
    {
        float _1193 = (_622 * _607) - (_619 * _610);
        float _1196 = (_616 * _610) - (_622 * _604);
        float _1199 = (_619 * _604) - (_616 * _607);
        float _1225 = ((log2((((float(_1176.y) * 0.5) * float(_1176.x)) * abs((_577 * _571) - (_576 * _573))) / (sqrt(((_1196 * _1196) + (_1199 * _1199)) + (_1193 * _1193)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1181, _1182, _1183), vec3(_637, _639, _640))));
        _1227 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    }
    else
    {
        _1227 = 0.0;
    }
    vec4 _1229 = textureLod(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _625) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _626) + cbTextureTilingScale._m0[2u].w), _1227);
    float _1244 = (cbMtdParam._m0[14u].x * _1229.x) * cbMtdParam._m0[19u].x;
    float _1245 = (cbMtdParam._m0[14u].y * _1229.y) * cbMtdParam._m0[19u].x;
    float _1246 = (cbMtdParam._m0[14u].z * _1229.z) * cbMtdParam._m0[19u].x;
    float _1256 = exp2(log2(_1164) * cbMtdParam._m0[20u].x);
    float _1271 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1272 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1273 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1274 = (-0.0) - _1181;
    float _1275 = (-0.0) - _1182;
    float _1276 = (-0.0) - _1183;
    _71._m0 = 1u;
    uvec4 _1286 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1287 = _1286.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1287, _1286.w, _1287, vec3(_1271, _1272, _1273), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    if (_71._m0 == 0u)
    {
        float _1306 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(0.0));
        float _1580 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1309 = isnan(1.0) ? _1580 : (isnan(_1580) ? 1.0 : min(_1580, 1.0));
        float _1320 = g_sceneCB._m0[4u].x - _1181;
        float _1321 = g_sceneCB._m0[4u].y - _1182;
        float _1322 = g_sceneCB._m0[4u].z - _1183;
        float _1326 = inversesqrt(dot(vec3(_1320, _1321, _1322), vec3(_1320, _1321, _1322)));
        float _1330 = dot(vec3(0.0), vec3(g_sceneCB._m0[4u].xyz));
        float _1591 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1333 = isnan(1.0) ? _1591 : (isnan(_1591) ? 1.0 : min(_1591, 1.0));
        float _1334 = dot(vec3(0.0), vec3(_1274, _1275, _1276));
        float _1602 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1338 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1320 * _1326, _1321 * _1326, _1322 * _1326));
        float _1613 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1349 = (exp2(log2(1.0 - (isnan(1.0) ? _1613 : (isnan(_1613) ? 1.0 : min(_1613, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1355 = (0.5 / ((_1333 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1602 : (isnan(_1602) ? 1.0 : min(_1602, 1.0))))) * _1333;
        float _1624 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1357 = (isnan(1.0) ? _1624 : (isnan(_1624) ? 1.0 : min(_1624, 1.0))) * 0.31831014156341552734375;
        _1365 = ((_909 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1309;
        _1366 = ((_910 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1309;
        _1367 = ((_911 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1309;
        _1368 = (_1349 * g_sceneCB._m0[5u].x) * _1357;
        _1369 = (_1349 * g_sceneCB._m0[5u].y) * _1357;
        _1370 = (_1349 * g_sceneCB._m0[5u].z) * _1357;
    }
    else
    {
        _1365 = 0.0;
        _1366 = 0.0;
        _1367 = 0.0;
        _1368 = 0.0;
        _1369 = 0.0;
        _1370 = 0.0;
    }
    float _1371;
    uint _1373;
    _1371 = 0.0;
    _1373 = 0u;
    float _1372;
    for (;;)
    {
        _70._m0 = 1u;
        uvec4 _1378 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1379 = _1378.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1379, _1378.w, _1379, vec3(_1271, _1272, _1273), 9.9999997473787516355514526367188e-05, vec3(0.0), 10000.0, 1);
        _1372 = _1371 + uintBitsToFloat(0x7fc00000u /* nan */);
        uint _1374 = _1373 + 1u;
        if (_1374 == 32u)
        {
            break;
        }
        else
        {
            _1371 = _1372;
            _1373 = _1374;
        }
    }
    float _1387 = _1372 * 0.009947183541953563690185546875;
    vec4 _1394 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1181, _1182, _1183), 4.0);
    float _1399 = dot(vec3(_1274, _1275, _1276), vec3(0.0));
    float _1635 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
    float _1408 = (exp2(log2(1.0 - (isnan(1.0) ? _1635 : (isnan(_1635) ? 1.0 : min(_1635, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1414 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(0.0), 0.0);
    float _1426 = ((_1365 + (_1256 * (_1244 - (_1244 * _1164)))) + _1368) + (((_1414.x * _909) + (_1408 * _1394.x)) * _1387);
    float _1431 = ((_1366 + (_1256 * (_1245 - (_1245 * _1164)))) + _1369) + (((_1414.y * _910) + (_1408 * _1394.y)) * _1387);
    float _1436 = ((_1367 + (_1256 * (_1246 - (_1246 * _1164)))) + _1370) + (((_1414.z * _911) + (_1408 * _1394.z)) * _1387);
    float _1646 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    float _1657 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
    float _1668 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    bool _1445 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1456;
    _1456.x = _1445 ? ((_630 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0)));
    _1456.y = _1445 ? ((_633 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1657 : (isnan(_1657) ? 1.0 : min(_1657, 1.0)));
    _1456.z = _1445 ? ((_636 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1668 : (isnan(_1668) ? 1.0 : min(_1668, 1.0)));
    payload._m0 = _1456;
}


