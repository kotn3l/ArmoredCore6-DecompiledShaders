#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _938;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _158;
    uint _160;
    uint _161;
    if (_117.x == 0u)
    {
        uint _126 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _135 = uvec3(texelFetch(l_geomIndexBuffer, int(_126)).x, texelFetch(l_geomIndexBuffer, int(_126 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_126 + 2u)).x);
        _158 = _135.x;
        _160 = _135.y;
        _161 = _135.z;
    }
    else
    {
        uint _139 = uint(gl_PrimitiveID) * 6u;
        uint _141 = _139 & 4294967292u;
        uint _144 = (_118 + _141) >> 2u;
        uvec2 _151 = uvec2(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x);
        uint _152 = _151.x;
        uint _153 = _151.y;
        uint _155 = _152 >> 16u;
        uint _156 = _153 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_141 == _139)
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _152 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _153 >> 16u;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _158 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder_1;
        _161 = frontier_phi_3_2_ladder;
    }
    uvec4 _165 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _166 = _165.x;
    uint _167 = _165.z;
    bool _168 = _167 != 0u;
    bool _170 = _117.w == 0u;
    bool _171 = _168 || _170;
    uint _173 = (_166 * _158) + 12u;
    uint _197;
    uint _198;
    uint _199;
    uint _200;
    if (_171)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_173 >> 2u));
        uint _177 = _176.x;
        _197 = _177 & 255u;
        _198 = (_177 >> 8u) & 255u;
        _199 = (_177 >> 16u) & 255u;
        _200 = 20u;
    }
    else
    {
        uint _185 = _173 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
        _200 = 24u;
    }
    bool _206 = _167 == 0u;
    uint _207;
    if (_206)
    {
        _207 = _200;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_170)
        {
            frontier_phi_9_10_ladder = _200 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _200 + 8u;
        }
        _207 = frontier_phi_9_10_ladder;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((((_166 * _158) + 4u) + (_168 ? (_207 + 4u) : _207)) >> 2u));
    uint _219 = _218.x;
    float _223 = float(int(uint(int(_219 << 16u) >> int(16u))));
    float _224 = float(int(uint(int(_219) >> int(16u))));
    uint _226 = (_166 * _160) + 12u;
    uint _247;
    uint _248;
    uint _249;
    uint _250;
    if (_171)
    {
        uvec4 _228 = texelFetch(l_geomAttrib_0, int(_226 >> 2u));
        uint _229 = _228.x;
        _247 = _229 & 255u;
        _248 = (_229 >> 8u) & 255u;
        _249 = (_229 >> 16u) & 255u;
        _250 = 20u;
    }
    else
    {
        uint _235 = _226 >> 2u;
        uvec2 _241 = uvec2(texelFetch(l_geomAttrib_0, int(_235)).x, texelFetch(l_geomAttrib_0, int(_235 + 1u)).x);
        uint _242 = _241.x;
        _247 = _242 & 65535u;
        _248 = _242 >> 16u;
        _249 = _241.y & 65535u;
        _250 = 24u;
    }
    uint _254;
    if (_206)
    {
        _254 = _250;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_170)
        {
            frontier_phi_16_17_ladder = _250 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _250 + 8u;
        }
        _254 = frontier_phi_16_17_ladder;
    }
    uvec4 _263 = texelFetch(l_geomAttrib_0, int((((_166 * _160) + 4u) + (_168 ? (_254 + 4u) : _254)) >> 2u));
    uint _264 = _263.x;
    float _268 = float(int(uint(int(_264 << 16u) >> int(16u))));
    float _269 = float(int(uint(int(_264) >> int(16u))));
    uint _271 = (_166 * _161) + 12u;
    uint _292;
    uint _293;
    uint _294;
    uint _295;
    if (_171)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_271 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
        _295 = 20u;
    }
    else
    {
        uint _280 = _271 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
        _295 = 24u;
    }
    uint _299;
    if (_206)
    {
        _299 = _295;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_170)
        {
            frontier_phi_23_24_ladder = _295 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _295 + 8u;
        }
        _299 = frontier_phi_23_24_ladder;
    }
    uvec4 _308 = texelFetch(l_geomAttrib_0, int((((_166 * _161) + 4u) + (_168 ? (_299 + 4u) : _299)) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    bool _316 = _117.z == 0u;
    float _352;
    float _353;
    float _354;
    if (_316)
    {
        uint _319 = _158 * 3u;
        uvec3 _328 = uvec3(texelFetch(l_geomPositionBuffer, int(_319)).x, texelFetch(l_geomPositionBuffer, int(_319 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_319 + 2u)).x);
        _352 = uintBitsToFloat(_328.x);
        _353 = uintBitsToFloat(_328.y);
        _354 = uintBitsToFloat(_328.z);
    }
    else
    {
        uint _336 = _158 * 2u;
        uvec2 _342 = uvec2(texelFetch(l_geomPositionBuffer, int(_336)).x, texelFetch(l_geomPositionBuffer, int(_336 + 1u)).x);
        uint _343 = _342.x;
        _352 = unpackHalf2x16(_343).x;
        _353 = unpackHalf2x16(_343 >> 16u).x;
        _354 = unpackHalf2x16(_342.y).x;
    }
    float _390;
    float _391;
    float _392;
    if (_316)
    {
        uint _357 = _160 * 3u;
        uvec3 _366 = uvec3(texelFetch(l_geomPositionBuffer, int(_357)).x, texelFetch(l_geomPositionBuffer, int(_357 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_357 + 2u)).x);
        _390 = uintBitsToFloat(_366.x);
        _391 = uintBitsToFloat(_366.y);
        _392 = uintBitsToFloat(_366.z);
    }
    else
    {
        uint _374 = _160 * 2u;
        uvec2 _380 = uvec2(texelFetch(l_geomPositionBuffer, int(_374)).x, texelFetch(l_geomPositionBuffer, int(_374 + 1u)).x);
        uint _381 = _380.x;
        _390 = unpackHalf2x16(_381).x;
        _391 = unpackHalf2x16(_381 >> 16u).x;
        _392 = unpackHalf2x16(_380.y).x;
    }
    float _428;
    float _429;
    float _430;
    if (_316)
    {
        uint _395 = _161 * 3u;
        uvec3 _404 = uvec3(texelFetch(l_geomPositionBuffer, int(_395)).x, texelFetch(l_geomPositionBuffer, int(_395 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_395 + 2u)).x);
        _428 = uintBitsToFloat(_404.x);
        _429 = uintBitsToFloat(_404.y);
        _430 = uintBitsToFloat(_404.z);
    }
    else
    {
        uint _412 = _161 * 2u;
        uvec2 _418 = uvec2(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x);
        uint _419 = _418.x;
        _428 = unpackHalf2x16(_419).x;
        _429 = unpackHalf2x16(_419 >> 16u).x;
        _430 = unpackHalf2x16(_418.y).x;
    }
    float _433 = (1.0 - hit._m0.x) - hit._m0.y;
    float _474 = _390 - _352;
    float _475 = _391 - _353;
    float _476 = _392 - _354;
    float _479 = fma(_476, gl_ObjectToWorldEXT[2u].x, fma(_475, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _474));
    float _482 = fma(_476, gl_ObjectToWorldEXT[2u].y, fma(_475, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _474));
    float _485 = fma(_476, gl_ObjectToWorldEXT[2u].z, fma(_475, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _474));
    float _486 = _428 - _352;
    float _487 = _429 - _353;
    float _488 = _430 - _354;
    float _491 = fma(_488, gl_ObjectToWorldEXT[2u].x, fma(_487, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _486));
    float _494 = fma(_488, gl_ObjectToWorldEXT[2u].y, fma(_487, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _486));
    float _497 = fma(_488, gl_ObjectToWorldEXT[2u].z, fma(_487, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _486));
    float _504 = (((float(_197) * _433) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _507 = (((float(_198) * _433) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _510 = (((float(_199) * _433) + (-127.0)) + (float(_249) * hit._m0.x)) + (float(_294) * hit._m0.y);
    float _511 = _504 * 0.0078740157186985015869140625;
    float _513 = _507 * 0.0078740157186985015869140625;
    float _514 = _510 * 0.0078740157186985015869140625;
    uvec2 _539 = uvec2(textureSize(M_SkyCloud_snp_0_Texture2D_0, int(0u)));
    float _548 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _549 = _548 * gl_WorldRayDirectionEXT.x;
    float _550 = _548 * gl_WorldRayDirectionEXT.y;
    float _551 = _548 * gl_WorldRayDirectionEXT.z;
    float _603;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _565 = (_497 * _482) - (_494 * _485);
        float _568 = (_491 * _485) - (_497 * _479);
        float _571 = (_494 * _479) - (_491 * _482);
        float _600 = ((log2((((float(_539.y) * 0.5) * float(_539.x)) * abs((((_314 - _224) * (_268 - _223)) - ((_313 - _223) * (_269 - _224))) * 2.384185791015625e-07)) / (sqrt(((_568 * _568) + (_571 * _571)) + (_565 * _565)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_549, _550, _551), vec3(_511, _513, _514))));
        _603 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    }
    else
    {
        _603 = 0.0;
    }
    vec4 _607 = textureLod(sampler2D(M_SkyCloud_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[15u].x + ((((_268 * hit._m0.x) + (_223 * _433)) + (_313 * hit._m0.y)) * 0.00048828125))) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[15u].y + ((((_269 * hit._m0.x) + (_224 * _433)) + (_314 * hit._m0.y)) * 0.00048828125)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _603);
    float _612 = _607.x * cbMtdParam._m0[9u].x;
    float _613 = _607.y * cbMtdParam._m0[9u].y;
    float _614 = _607.z * cbMtdParam._m0[9u].z;
    float _618 = inversesqrt(dot(vec3(_511, _513, _514), vec3(_511, _513, _514)));
    float _619 = _618 * _511;
    float _620 = _618 * _513;
    float _621 = _618 * _514;
    float _633 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _634 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _635 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _636 = (-0.0) - _549;
    float _638 = (-0.0) - _550;
    float _639 = (-0.0) - _551;
    float _645 = float(gl_LaunchIDEXT.x);
    float _646 = float(gl_LaunchIDEXT.y);
    float _649 = float(gl_LaunchSizeEXT.x);
    float _663 = fract(fract(sin(dot(vec2(_645 / _649, _646 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _676 = fract(fract(sin(dot(vec2((_645 + 128.0) / _649, (_646 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _686 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _687 = _686.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _687, _686.w, _687, vec3(_633, _634, _635), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _767;
    float _768;
    float _769;
    float _770;
    float _771;
    float _772;
    if (_59._m0 == 0u)
    {
        float _708 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_619, _620, _621));
        float _1017 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _711 = isnan(1.0) ? _1017 : (isnan(_1017) ? 1.0 : min(_1017, 1.0));
        float _722 = g_sceneCB._m0[4u].x - _549;
        float _723 = g_sceneCB._m0[4u].y - _550;
        float _724 = g_sceneCB._m0[4u].z - _551;
        float _728 = inversesqrt(dot(vec3(_722, _723, _724), vec3(_722, _723, _724)));
        float _732 = dot(vec3(_619, _620, _621), vec3(g_sceneCB._m0[4u].xyz));
        float _1028 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        float _735 = isnan(1.0) ? _1028 : (isnan(_1028) ? 1.0 : min(_1028, 1.0));
        float _736 = dot(vec3(_619, _620, _621), vec3(_636, _638, _639));
        float _1039 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
        float _740 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_722 * _728, _723 * _728, _724 * _728));
        float _1050 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
        float _751 = (exp2(log2(1.0 - (isnan(1.0) ? _1050 : (isnan(_1050) ? 1.0 : min(_1050, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _757 = (0.5 / ((_735 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1039 : (isnan(_1039) ? 1.0 : min(_1039, 1.0))))) * _735;
        float _1061 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
        float _759 = (isnan(1.0) ? _1061 : (isnan(_1061) ? 1.0 : min(_1061, 1.0))) * 0.31831014156341552734375;
        _767 = ((_612 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _711;
        _768 = ((_613 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _711;
        _769 = ((_614 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _711;
        _770 = (_751 * g_sceneCB._m0[5u].x) * _759;
        _771 = (_751 * g_sceneCB._m0[5u].y) * _759;
        _772 = (_751 * g_sceneCB._m0[5u].z) * _759;
    }
    else
    {
        _767 = 0.0;
        _768 = 0.0;
        _769 = 0.0;
        _770 = 0.0;
        _771 = 0.0;
        _772 = 0.0;
    }
    bool _774 = abs(_620) < 0.89999997615814208984375;
    float _776 = float(_774);
    float _777 = _774 ? 0.0 : 1.0;
    float _780 = (_776 * _621) - (_777 * _620);
    float _781 = _777 * _619;
    float _783 = (-0.0) - (_619 * _776);
    float _787 = inversesqrt(dot(vec3(_780, _781, _783), vec3(_780, _781, _783)));
    float _788 = _780 * _787;
    float _789 = _781 * _787;
    float _790 = _787 * _783;
    float _793 = (_789 * _621) - (_790 * _620);
    float _796 = (_790 * _619) - (_788 * _621);
    float _799 = (_788 * _620) - (_789 * _619);
    float _801;
    float _809;
    float _800 = 0.0;
    uint _802 = 0u;
    float _806;
    bool _808;
    for (;;)
    {
        _806 = (float(_802) + _663) * 0.03125;
        _808 = _802 == 0u;
        float frontier_phi_41_pred;
        if (_808)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _943;
            float _944;
            uint _946;
            _943 = 0.0;
            _944 = 0.5;
            _946 = _802;
            float _810;
            for (;;)
            {
                _810 = ((_946 & 1u) != 0u) ? (_944 + _943) : _943;
                uint _947 = _946 >> 1u;
                if (_947 == 0u)
                {
                    break;
                }
                else
                {
                    _943 = _810;
                    _944 *= 0.5;
                    _946 = _947;
                }
            }
            frontier_phi_41_pred = _810;
        }
        _809 = frontier_phi_41_pred;
        float _811 = _809 + _676;
        float _816 = sqrt(_806);
        float _817 = ((_811 > 1.0) ? (_811 + (-1.0)) : _811) * 6.283185482025146484375;
        float _820 = cos(_817) * _816;
        float _822 = sin(_817) * _816;
        float _824 = sqrt(1.0 - _806);
        float _837 = ((_824 * _619) + (_820 * _793)) + (_822 * _788);
        float _838 = ((_824 * _620) + (_820 * _796)) + (_822 * _789);
        float _839 = ((_824 * _621) + (_820 * _799)) + (_822 * _790);
        _58._m0 = 1u;
        uvec4 _843 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _844 = _843.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _844, _843.w, _844, vec3(_633, _634, _635), 9.9999997473787516355514526367188e-05, vec3(_837, _838, _839), 10000.0, 1);
        float _850 = dot(vec3(_619, _620, _621), vec3(_837, _838, _839));
        float _1072 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
        float _853 = isnan(1.0) ? _1072 : (isnan(_1072) ? 1.0 : min(_1072, 1.0));
        _801 = ((float(_58._m0 == 0u) * _853) / (_853 * 0.3183098733425140380859375)) + _800;
        uint _803 = _802 + 1u;
        if (_803 == 32u)
        {
            break;
        }
        else
        {
            _800 = _801;
            _802 = _803;
            continue;
        }
    }
    float _861 = _801 * 0.009947183541953563690185546875;
    float _866 = dot(vec3(_549, _550, _551), vec3(_619, _620, _621)) * 2.0;
    vec4 _878 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_549 - (_866 * _619), _550 - (_866 * _620), _551 - (_866 * _621)), 4.0);
    float _883 = dot(vec3(_636, _638, _639), vec3(_619, _620, _621));
    float _1083 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _892 = (exp2(log2(1.0 - (isnan(1.0) ? _1083 : (isnan(_1083) ? 1.0 : min(_1083, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _898 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_619, _620, _621), 0.0);
    float _909 = (_770 + _767) + (((_898.x * _612) + (_892 * _878.x)) * _861);
    float _913 = (_771 + _768) + (((_898.y * _613) + (_892 * _878.y)) * _861);
    float _917 = (_772 + _769) + (((_898.z * _614) + (_892 * _878.z)) * _861);
    float _1094 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _1105 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    float _1116 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    bool _926 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _937;
    _937.x = _926 ? ((_504 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1094 : (isnan(_1094) ? 1.0 : min(_1094, 1.0)));
    _937.y = _926 ? ((_507 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1105 : (isnan(_1105) ? 1.0 : min(_1105, 1.0)));
    _937.z = _926 ? ((_510 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1116 : (isnan(_1116) ? 1.0 : min(_1116, 1.0)));
    payload._m0 = _937;
}


