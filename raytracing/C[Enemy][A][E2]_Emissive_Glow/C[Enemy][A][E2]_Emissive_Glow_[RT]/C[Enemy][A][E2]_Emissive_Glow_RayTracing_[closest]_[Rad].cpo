#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _51
{
    vec3 _m0;
};

struct _55
{
    vec2 _m0;
};

struct _58
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _51 payload;
hitAttributeEXT _55 hit;
layout(location = 1) rayPayloadEXT _58 _60;
layout(location = 2) rayPayloadEXT _58 _61;

vec3 _1240;

void main()
{
    float _69 = float(gl_LaunchSizeEXT.y);
    float _99 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _101 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _108 = sqrt(((_100 * _100) + (_99 * _99)) + (_101 * _101)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _69)))));
    uvec4 _119 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _120 = _119.y;
    uint _160;
    uint _162;
    uint _163;
    if (_119.x == 0u)
    {
        uint _128 = (_120 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _137 = uvec3(texelFetch(l_geomIndexBuffer, int(_128)).x, texelFetch(l_geomIndexBuffer, int(_128 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_128 + 2u)).x);
        _160 = _137.x;
        _162 = _137.y;
        _163 = _137.z;
    }
    else
    {
        uint _141 = uint(gl_PrimitiveID) * 6u;
        uint _143 = _141 & 4294967292u;
        uint _146 = (_120 + _143) >> 2u;
        uvec2 _153 = uvec2(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x);
        uint _154 = _153.x;
        uint _155 = _153.y;
        uint _157 = _154 >> 16u;
        uint _158 = _155 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_143 == _141)
        {
            frontier_phi_3_2_ladder = _154 & 65535u;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _157;
        }
        else
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _155 >> 16u;
            frontier_phi_3_2_ladder_2 = _158;
        }
        _160 = frontier_phi_3_2_ladder;
        _162 = frontier_phi_3_2_ladder_2;
        _163 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _167 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _168 = _167.x;
    uint _169 = _167.z;
    bool _170 = _169 != 0u;
    bool _172 = _119.w == 0u;
    bool _173 = _170 || _172;
    uint _175 = (_168 * _160) + 12u;
    uint _199;
    uint _200;
    uint _201;
    uint _202;
    if (_173)
    {
        uvec4 _178 = texelFetch(l_geomAttrib_0, int(_175 >> 2u));
        uint _179 = _178.x;
        _199 = _179 & 255u;
        _200 = (_179 >> 8u) & 255u;
        _201 = (_179 >> 16u) & 255u;
        _202 = 20u;
    }
    else
    {
        uint _187 = _175 >> 2u;
        uvec2 _193 = uvec2(texelFetch(l_geomAttrib_0, int(_187)).x, texelFetch(l_geomAttrib_0, int(_187 + 1u)).x);
        uint _194 = _193.x;
        _199 = _194 & 65535u;
        _200 = _194 >> 16u;
        _201 = _193.y & 65535u;
        _202 = 24u;
    }
    bool _208 = _169 == 0u;
    uint _209;
    if (_208)
    {
        _209 = _202;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_172)
        {
            frontier_phi_9_10_ladder = _202 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _202 + 8u;
        }
        _209 = frontier_phi_9_10_ladder;
    }
    uint _219 = (((_168 * _160) + 4u) + (_170 ? (_209 + 4u) : _209)) >> 2u;
    uvec2 _225 = uvec2(texelFetch(l_geomAttrib_0, int(_219)).x, texelFetch(l_geomAttrib_0, int(_219 + 1u)).x);
    uint _226 = _225.x;
    uint _227 = _225.y;
    float _231 = float(int(uint(int(_226 << 16u) >> int(16u))));
    float _232 = float(int(uint(int(_226) >> int(16u))));
    float _236 = float(int(uint(int(_227 << 16u) >> int(16u))));
    float _237 = float(int(uint(int(_227) >> int(16u))));
    uint _239 = (_168 * _162) + 12u;
    uint _260;
    uint _261;
    uint _262;
    uint _263;
    if (_173)
    {
        uvec4 _241 = texelFetch(l_geomAttrib_0, int(_239 >> 2u));
        uint _242 = _241.x;
        _260 = _242 & 255u;
        _261 = (_242 >> 8u) & 255u;
        _262 = (_242 >> 16u) & 255u;
        _263 = 20u;
    }
    else
    {
        uint _248 = _239 >> 2u;
        uvec2 _254 = uvec2(texelFetch(l_geomAttrib_0, int(_248)).x, texelFetch(l_geomAttrib_0, int(_248 + 1u)).x);
        uint _255 = _254.x;
        _260 = _255 & 65535u;
        _261 = _255 >> 16u;
        _262 = _254.y & 65535u;
        _263 = 24u;
    }
    uint _267;
    if (_208)
    {
        _267 = _263;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_172)
        {
            frontier_phi_16_17_ladder = _263 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _263 + 8u;
        }
        _267 = frontier_phi_16_17_ladder;
    }
    uint _275 = (((_168 * _162) + 4u) + (_170 ? (_267 + 4u) : _267)) >> 2u;
    uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
    uint _282 = _281.x;
    uint _283 = _281.y;
    float _287 = float(int(uint(int(_282 << 16u) >> int(16u))));
    float _288 = float(int(uint(int(_282) >> int(16u))));
    float _292 = float(int(uint(int(_283 << 16u) >> int(16u))));
    float _293 = float(int(uint(int(_283) >> int(16u))));
    uint _295 = (_168 * _163) + 12u;
    uint _316;
    uint _317;
    uint _318;
    uint _319;
    if (_173)
    {
        uvec4 _297 = texelFetch(l_geomAttrib_0, int(_295 >> 2u));
        uint _298 = _297.x;
        _316 = _298 & 255u;
        _317 = (_298 >> 8u) & 255u;
        _318 = (_298 >> 16u) & 255u;
        _319 = 20u;
    }
    else
    {
        uint _304 = _295 >> 2u;
        uvec2 _310 = uvec2(texelFetch(l_geomAttrib_0, int(_304)).x, texelFetch(l_geomAttrib_0, int(_304 + 1u)).x);
        uint _311 = _310.x;
        _316 = _311 & 65535u;
        _317 = _311 >> 16u;
        _318 = _310.y & 65535u;
        _319 = 24u;
    }
    uint _323;
    if (_208)
    {
        _323 = _319;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_172)
        {
            frontier_phi_23_24_ladder = _319 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _319 + 8u;
        }
        _323 = frontier_phi_23_24_ladder;
    }
    uint _331 = (((_168 * _163) + 4u) + (_170 ? (_323 + 4u) : _323)) >> 2u;
    uvec2 _337 = uvec2(texelFetch(l_geomAttrib_0, int(_331)).x, texelFetch(l_geomAttrib_0, int(_331 + 1u)).x);
    uint _338 = _337.x;
    uint _339 = _337.y;
    float _343 = float(int(uint(int(_338 << 16u) >> int(16u))));
    float _344 = float(int(uint(int(_338) >> int(16u))));
    float _348 = float(int(uint(int(_339 << 16u) >> int(16u))));
    float _349 = float(int(uint(int(_339) >> int(16u))));
    bool _351 = _119.z == 0u;
    float _387;
    float _388;
    float _389;
    if (_351)
    {
        uint _354 = _160 * 3u;
        uvec3 _363 = uvec3(texelFetch(l_geomPositionBuffer, int(_354)).x, texelFetch(l_geomPositionBuffer, int(_354 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_354 + 2u)).x);
        _387 = uintBitsToFloat(_363.x);
        _388 = uintBitsToFloat(_363.y);
        _389 = uintBitsToFloat(_363.z);
    }
    else
    {
        uint _371 = _160 * 2u;
        uvec2 _377 = uvec2(texelFetch(l_geomPositionBuffer, int(_371)).x, texelFetch(l_geomPositionBuffer, int(_371 + 1u)).x);
        uint _378 = _377.x;
        _387 = unpackHalf2x16(_378).x;
        _388 = unpackHalf2x16(_378 >> 16u).x;
        _389 = unpackHalf2x16(_377.y).x;
    }
    float _425;
    float _426;
    float _427;
    if (_351)
    {
        uint _392 = _162 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _162 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_351)
    {
        uint _430 = _163 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _163 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _468 = (1.0 - hit._m0.x) - hit._m0.y;
    float _500 = (_287 - _231) * 0.00048828125;
    float _502 = (_288 - _232) * 0.00048828125;
    float _505 = (_343 - _231) * 0.00048828125;
    float _506 = (_344 - _232) * 0.00048828125;
    float _509 = (_292 - _236) * 0.00048828125;
    float _510 = (_293 - _237) * 0.00048828125;
    float _513 = (_348 - _236) * 0.00048828125;
    float _514 = (_349 - _237) * 0.00048828125;
    float _536 = _425 - _387;
    float _537 = _426 - _388;
    float _538 = _427 - _389;
    float _541 = fma(_538, gl_ObjectToWorldEXT[2u].x, fma(_537, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _536));
    float _544 = fma(_538, gl_ObjectToWorldEXT[2u].y, fma(_537, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _536));
    float _547 = fma(_538, gl_ObjectToWorldEXT[2u].z, fma(_537, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _536));
    float _548 = _463 - _387;
    float _549 = _464 - _388;
    float _550 = _465 - _389;
    float _553 = fma(_550, gl_ObjectToWorldEXT[2u].x, fma(_549, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _548));
    float _556 = fma(_550, gl_ObjectToWorldEXT[2u].y, fma(_549, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _548));
    float _559 = fma(_550, gl_ObjectToWorldEXT[2u].z, fma(_549, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _548));
    float _560 = (((_287 * hit._m0.x) + (_231 * _468)) + (_343 * hit._m0.y)) * 0.00048828125;
    float _561 = (((_288 * hit._m0.x) + (_232 * _468)) + (_344 * hit._m0.y)) * 0.00048828125;
    float _562 = (((_292 * hit._m0.x) + (_236 * _468)) + (_348 * hit._m0.y)) * 0.00048828125;
    float _563 = (((_293 * hit._m0.x) + (_237 * _468)) + (_349 * hit._m0.y)) * 0.00048828125;
    float _567 = (((float(_199) * _468) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_316) * hit._m0.y);
    float _570 = (((float(_200) * _468) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_317) * hit._m0.y);
    float _573 = (((float(_201) * _468) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_318) * hit._m0.y);
    float _574 = _567 * 0.0078740157186985015869140625;
    float _576 = _570 * 0.0078740157186985015869140625;
    float _577 = _573 * 0.0078740157186985015869140625;
    uvec2 _595 = uvec2(textureSize(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    bool _600 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _653;
    if (_600)
    {
        float _611 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _617 = (_559 * _544) - (_556 * _547);
        float _620 = (_553 * _547) - (_559 * _541);
        float _623 = (_556 * _541) - (_553 * _544);
        float _650 = ((log2((((float(_595.y) * 0.5) * float(_595.x)) * abs((_506 * _500) - (_505 * _502))) / (sqrt(((_620 * _620) + (_623 * _623)) + (_617 * _617)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_611 * gl_WorldRayDirectionEXT.x, _611 * gl_WorldRayDirectionEXT.y, _611 * gl_WorldRayDirectionEXT.z), vec3(_574, _576, _577))));
        _653 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    }
    else
    {
        _653 = 0.0;
    }
    vec4 _657 = textureLod(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _560) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _561) + cbTextureTilingScale._m0[0u].w), _653);
    uvec2 _681 = uvec2(textureSize(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5, int(0u)));
    float _732;
    if (_600)
    {
        float _692 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _698 = (_559 * _544) - (_556 * _547);
        float _701 = (_553 * _547) - (_559 * _541);
        float _704 = (_556 * _541) - (_553 * _544);
        float _730 = ((log2((((float(_681.y) * 0.5) * float(_681.x)) * abs((_514 * _509) - (_513 * _510))) / (sqrt(((_701 * _701) + (_704 * _704)) + (_698 * _698)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_692 * gl_WorldRayDirectionEXT.x, _692 * gl_WorldRayDirectionEXT.y, _692 * gl_WorldRayDirectionEXT.z), vec3(_574, _576, _577))));
        _732 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    }
    else
    {
        _732 = 0.0;
    }
    vec4 _734 = textureLod(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _562) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _563) + cbTextureTilingScale._m0[3u].w), _732);
    float _742 = (_734.x * cbMtdParam._m0[12u].x) + (_657.x * cbMtdParam._m0[9u].x);
    float _743 = (_734.y * cbMtdParam._m0[12u].y) + (_657.y * cbMtdParam._m0[9u].y);
    float _744 = (_734.z * cbMtdParam._m0[12u].z) + (_657.z * cbMtdParam._m0[9u].z);
    uvec2 _766 = uvec2(textureSize(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _817;
    if (_600)
    {
        float _777 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _783 = (_559 * _544) - (_556 * _547);
        float _786 = (_553 * _547) - (_559 * _541);
        float _789 = (_556 * _541) - (_553 * _544);
        float _815 = ((log2((((float(_766.y) * 0.5) * float(_766.x)) * abs((_506 * _500) - (_505 * _502))) / (sqrt(((_786 * _786) + (_789 * _789)) + (_783 * _783)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_777 * gl_WorldRayDirectionEXT.x, _777 * gl_WorldRayDirectionEXT.y, _777 * gl_WorldRayDirectionEXT.z), vec3(_574, _576, _577))));
        _817 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    }
    else
    {
        _817 = 0.0;
    }
    vec4 _819 = textureLod(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _560) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _561) + cbTextureTilingScale._m0[1u].w), _817);
    uvec2 _848 = uvec2(textureSize(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _852 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _853 = _852 * gl_WorldRayDirectionEXT.x;
    float _854 = _852 * gl_WorldRayDirectionEXT.y;
    float _855 = _852 * gl_WorldRayDirectionEXT.z;
    float _899;
    if (_600)
    {
        float _865 = (_559 * _544) - (_556 * _547);
        float _868 = (_553 * _547) - (_559 * _541);
        float _871 = (_556 * _541) - (_553 * _544);
        float _897 = ((log2((((float(_848.y) * 0.5) * float(_848.x)) * abs((_514 * _509) - (_513 * _510))) / (sqrt(((_868 * _868) + (_871 * _871)) + (_865 * _865)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_108) / abs(dot(vec3(_853, _854, _855), vec3(_574, _576, _577))));
        _899 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    }
    else
    {
        _899 = 0.0;
    }
    vec4 _901 = textureLod(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _562) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _563) + cbTextureTilingScale._m0[2u].w), _899);
    float _915 = inversesqrt(dot(vec3(_574, _576, _577), vec3(_574, _576, _577)));
    float _916 = _915 * _574;
    float _917 = _915 * _576;
    float _918 = _915 * _577;
    float _930 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _931 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _932 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _933 = (-0.0) - _853;
    float _935 = (-0.0) - _854;
    float _936 = (-0.0) - _855;
    float _942 = float(gl_LaunchIDEXT.x);
    float _943 = float(gl_LaunchIDEXT.y);
    float _946 = float(gl_LaunchSizeEXT.x);
    float _960 = fract(fract(sin(dot(vec2(_942 / _946, _943 / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _973 = fract(fract(sin(dot(vec2((_942 + 128.0) / _946, (_943 + 128.0) / _69), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _61._m0 = 1u;
    uvec4 _983 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _984 = _983.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _984, _983.w, _984, vec3(_930, _931, _932), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    if (_61._m0 == 0u)
    {
        float _1005 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_916, _917, _918));
        float _1340 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1008 = isnan(1.0) ? _1340 : (isnan(_1340) ? 1.0 : min(_1340, 1.0));
        float _1019 = g_sceneCB._m0[4u].x - _853;
        float _1020 = g_sceneCB._m0[4u].y - _854;
        float _1021 = g_sceneCB._m0[4u].z - _855;
        float _1025 = inversesqrt(dot(vec3(_1019, _1020, _1021), vec3(_1019, _1020, _1021)));
        float _1029 = dot(vec3(_916, _917, _918), vec3(g_sceneCB._m0[4u].xyz));
        float _1351 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1032 = isnan(1.0) ? _1351 : (isnan(_1351) ? 1.0 : min(_1351, 1.0));
        float _1033 = dot(vec3(_916, _917, _918), vec3(_933, _935, _936));
        float _1362 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1037 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1019 * _1025, _1020 * _1025, _1021 * _1025));
        float _1373 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1048 = (exp2(log2(1.0 - (isnan(1.0) ? _1373 : (isnan(_1373) ? 1.0 : min(_1373, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1054 = (0.5 / ((_1032 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1362 : (isnan(_1362) ? 1.0 : min(_1362, 1.0))))) * _1032;
        float _1384 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1056 = (isnan(1.0) ? _1384 : (isnan(_1384) ? 1.0 : min(_1384, 1.0))) * 0.31831014156341552734375;
        _1064 = ((_742 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1008;
        _1065 = ((_743 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1008;
        _1066 = ((_744 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1008;
        _1067 = (_1048 * g_sceneCB._m0[5u].x) * _1056;
        _1068 = (_1048 * g_sceneCB._m0[5u].y) * _1056;
        _1069 = (_1048 * g_sceneCB._m0[5u].z) * _1056;
    }
    else
    {
        _1064 = 0.0;
        _1065 = 0.0;
        _1066 = 0.0;
        _1067 = 0.0;
        _1068 = 0.0;
        _1069 = 0.0;
    }
    bool _1071 = abs(_917) < 0.89999997615814208984375;
    float _1073 = float(_1071);
    float _1074 = _1071 ? 0.0 : 1.0;
    float _1077 = (_1073 * _918) - (_1074 * _917);
    float _1078 = _1074 * _916;
    float _1080 = (-0.0) - (_916 * _1073);
    float _1084 = inversesqrt(dot(vec3(_1077, _1078, _1080), vec3(_1077, _1078, _1080)));
    float _1085 = _1077 * _1084;
    float _1086 = _1078 * _1084;
    float _1087 = _1084 * _1080;
    float _1090 = (_1086 * _918) - (_1087 * _917);
    float _1093 = (_1087 * _916) - (_1085 * _918);
    float _1096 = (_1085 * _917) - (_1086 * _916);
    float _1098;
    float _1106;
    float _1097 = 0.0;
    uint _1099 = 0u;
    float _1103;
    bool _1105;
    for (;;)
    {
        _1103 = (float(_1099) + _960) * 0.03125;
        _1105 = _1099 == 0u;
        float frontier_phi_47_pred;
        if (_1105)
        {
            frontier_phi_47_pred = 0.0;
        }
        else
        {
            float _1245;
            float _1246;
            uint _1248;
            _1245 = 0.0;
            _1246 = 0.5;
            _1248 = _1099;
            float _1107;
            for (;;)
            {
                _1107 = ((_1248 & 1u) != 0u) ? (_1246 + _1245) : _1245;
                uint _1249 = _1248 >> 1u;
                if (_1249 == 0u)
                {
                    break;
                }
                else
                {
                    _1245 = _1107;
                    _1246 *= 0.5;
                    _1248 = _1249;
                }
            }
            frontier_phi_47_pred = _1107;
        }
        _1106 = frontier_phi_47_pred;
        float _1108 = _1106 + _973;
        float _1113 = sqrt(_1103);
        float _1114 = ((_1108 > 1.0) ? (_1108 + (-1.0)) : _1108) * 6.283185482025146484375;
        float _1117 = cos(_1114) * _1113;
        float _1119 = sin(_1114) * _1113;
        float _1121 = sqrt(1.0 - _1103);
        float _1134 = ((_1121 * _916) + (_1117 * _1090)) + (_1119 * _1085);
        float _1135 = ((_1121 * _917) + (_1117 * _1093)) + (_1119 * _1086);
        float _1136 = ((_1121 * _918) + (_1117 * _1096)) + (_1119 * _1087);
        _60._m0 = 1u;
        uvec4 _1140 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1141 = _1140.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1141, _1140.w, _1141, vec3(_930, _931, _932), 9.9999997473787516355514526367188e-05, vec3(_1134, _1135, _1136), 10000.0, 1);
        float _1147 = dot(vec3(_916, _917, _918), vec3(_1134, _1135, _1136));
        float _1395 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1150 = isnan(1.0) ? _1395 : (isnan(_1395) ? 1.0 : min(_1395, 1.0));
        _1098 = ((float(_60._m0 == 0u) * _1150) / (_1150 * 0.3183098733425140380859375)) + _1097;
        uint _1100 = _1099 + 1u;
        if (_1100 == 32u)
        {
            break;
        }
        else
        {
            _1097 = _1098;
            _1099 = _1100;
            continue;
        }
    }
    float _1158 = _1098 * 0.009947183541953563690185546875;
    float _1163 = dot(vec3(_853, _854, _855), vec3(_916, _917, _918)) * 2.0;
    vec4 _1175 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_853 - (_1163 * _916), _854 - (_1163 * _917), _855 - (_1163 * _918)), 4.0);
    float _1180 = dot(vec3(_933, _935, _936), vec3(_916, _917, _918));
    float _1406 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
    float _1189 = (exp2(log2(1.0 - (isnan(1.0) ? _1406 : (isnan(_1406) ? 1.0 : min(_1406, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1195 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_916, _917, _918), 0.0);
    float _1208 = (((((cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].z) * _901.x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[13u].x) * _819.x)) + _1064) + _1067) + (((_1195.x * _742) + (_1189 * _1175.x)) * _1158);
    float _1214 = (((((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].z) * _901.y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[13u].x) * _819.y)) + _1065) + _1068) + (((_1195.y * _743) + (_1189 * _1175.y)) * _1158);
    float _1220 = (((((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].z) * _901.z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[13u].x) * _819.z)) + _1066) + _1069) + (((_1195.z * _744) + (_1189 * _1175.z)) * _1158);
    float _1417 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
    float _1428 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    float _1439 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
    bool _1228 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1239;
    _1239.x = _1228 ? ((_567 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1417 : (isnan(_1417) ? 1.0 : min(_1417, 1.0)));
    _1239.y = _1228 ? ((_570 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1428 : (isnan(_1428) ? 1.0 : min(_1428, 1.0)));
    _1239.z = _1228 ? ((_573 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1439 : (isnan(_1439) ? 1.0 : min(_1439, 1.0)));
    payload._m0 = _1239;
}


