#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _53
{
    vec3 _m0;
};

struct _57
{
    vec2 _m0;
};

struct _60
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb2_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb2_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb2_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb2_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb2_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _53 payload;
hitAttributeEXT _57 hit;
layout(location = 1) rayPayloadEXT _60 _62;
layout(location = 2) rayPayloadEXT _60 _63;

vec3 _1445;

void main()
{
    float _71 = float(gl_LaunchSizeEXT.y);
    float _101 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _102 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _103 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _110 = sqrt(((_102 * _102) + (_101 * _101)) + (_103 * _103)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _71)))));
    uvec4 _121 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _122 = _121.y;
    uint _161;
    uint _163;
    uint _164;
    if (_121.x == 0u)
    {
        uint _129 = (_122 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _138 = uvec3(texelFetch(l_geomIndexBuffer, int(_129)).x, texelFetch(l_geomIndexBuffer, int(_129 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_129 + 2u)).x);
        _161 = _138.x;
        _163 = _138.y;
        _164 = _138.z;
    }
    else
    {
        uint _142 = uint(gl_PrimitiveID) * 6u;
        uint _144 = _142 & 4294967292u;
        uint _147 = (_122 + _144) >> 2u;
        uvec2 _154 = uvec2(texelFetch(l_geomIndexBuffer, int(_147)).x, texelFetch(l_geomIndexBuffer, int(_147 + 1u)).x);
        uint _155 = _154.x;
        uint _156 = _154.y;
        uint _158 = _155 >> 16u;
        uint _159 = _156 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_144 == _142)
        {
            frontier_phi_3_2_ladder = _158;
            frontier_phi_3_2_ladder_1 = _155 & 65535u;
            frontier_phi_3_2_ladder_2 = _159;
        }
        else
        {
            frontier_phi_3_2_ladder = _159;
            frontier_phi_3_2_ladder_1 = _158;
            frontier_phi_3_2_ladder_2 = _156 >> 16u;
        }
        _161 = frontier_phi_3_2_ladder_1;
        _163 = frontier_phi_3_2_ladder;
        _164 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _168 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _169 = _168.x;
    uint _170 = _168.z;
    bool _171 = _170 != 0u;
    bool _173 = _121.w == 0u;
    bool _174 = _171 || _173;
    uint _175 = _169 * _161;
    uint _176 = _175 + 12u;
    uint _200;
    uint _201;
    uint _202;
    uint _203;
    if (_174)
    {
        uvec4 _179 = texelFetch(l_geomAttrib_0, int(_176 >> 2u));
        uint _180 = _179.x;
        _200 = _180 & 255u;
        _201 = (_180 >> 8u) & 255u;
        _202 = (_180 >> 16u) & 255u;
        _203 = 16u;
    }
    else
    {
        uint _188 = _176 >> 2u;
        uvec2 _194 = uvec2(texelFetch(l_geomAttrib_0, int(_188)).x, texelFetch(l_geomAttrib_0, int(_188 + 1u)).x);
        uint _195 = _194.x;
        _200 = _195 & 65535u;
        _201 = _195 >> 16u;
        _202 = _194.y & 65535u;
        _203 = 20u;
    }
    uvec4 _211 = texelFetch(l_geomAttrib_0, int((_203 + _175) >> 2u));
    uint _212 = _211.x;
    bool _226 = _170 == 0u;
    uint _227;
    if (_226)
    {
        _227 = _203 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_173)
        {
            frontier_phi_9_10_ladder = _203 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _203 + 12u;
        }
        _227 = frontier_phi_9_10_ladder;
    }
    uint _231 = _171 ? (_227 + 4u) : _227;
    uvec4 _241 = texelFetch(l_geomAttrib_0, int(((_175 + 8u) + _231) >> 2u));
    uint _242 = _241.x;
    float _246 = float(int(uint(int(_242 << 16u) >> int(16u))));
    float _247 = float(int(uint(int(_242) >> int(16u))));
    uint _255 = _169 * _163;
    uint _256 = _255 + 12u;
    uint _277;
    uint _278;
    uint _279;
    uint _280;
    if (_174)
    {
        uvec4 _258 = texelFetch(l_geomAttrib_0, int(_256 >> 2u));
        uint _259 = _258.x;
        _277 = _259 & 255u;
        _278 = (_259 >> 8u) & 255u;
        _279 = (_259 >> 16u) & 255u;
        _280 = 16u;
    }
    else
    {
        uint _265 = _256 >> 2u;
        uvec2 _271 = uvec2(texelFetch(l_geomAttrib_0, int(_265)).x, texelFetch(l_geomAttrib_0, int(_265 + 1u)).x);
        uint _272 = _271.x;
        _277 = _272 & 65535u;
        _278 = _272 >> 16u;
        _279 = _271.y & 65535u;
        _280 = 20u;
    }
    uvec4 _286 = texelFetch(l_geomAttrib_0, int((_280 + _255) >> 2u));
    uint _287 = _286.x;
    uint _299;
    if (_226)
    {
        _299 = _280 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_173)
        {
            frontier_phi_16_17_ladder = _280 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _280 + 12u;
        }
        _299 = frontier_phi_16_17_ladder;
    }
    uint _303 = _171 ? (_299 + 4u) : _299;
    uvec4 _313 = texelFetch(l_geomAttrib_0, int(((_255 + 8u) + _303) >> 2u));
    uint _314 = _313.x;
    float _318 = float(int(uint(int(_314 << 16u) >> int(16u))));
    float _319 = float(int(uint(int(_314) >> int(16u))));
    uint _327 = _169 * _164;
    uint _328 = _327 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_174)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _327) >> 2u));
    uint _359 = _358.x;
    uint _371;
    if (_226)
    {
        _371 = _352 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_173)
        {
            frontier_phi_23_24_ladder = _352 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _352 + 12u;
        }
        _371 = frontier_phi_23_24_ladder;
    }
    uint _375 = _171 ? (_371 + 4u) : _371;
    uvec4 _385 = texelFetch(l_geomAttrib_0, int(((_327 + 8u) + _375) >> 2u));
    uint _386 = _385.x;
    float _390 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _391 = float(int(uint(int(_386) >> int(16u))));
    bool _400 = _121.z == 0u;
    float _436;
    float _437;
    float _438;
    if (_400)
    {
        uint _403 = _161 * 3u;
        uvec3 _412 = uvec3(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_403 + 2u)).x);
        _436 = uintBitsToFloat(_412.x);
        _437 = uintBitsToFloat(_412.y);
        _438 = uintBitsToFloat(_412.z);
    }
    else
    {
        uint _420 = _161 * 2u;
        uvec2 _426 = uvec2(texelFetch(l_geomPositionBuffer, int(_420)).x, texelFetch(l_geomPositionBuffer, int(_420 + 1u)).x);
        uint _427 = _426.x;
        _436 = unpackHalf2x16(_427).x;
        _437 = unpackHalf2x16(_427 >> 16u).x;
        _438 = unpackHalf2x16(_426.y).x;
    }
    float _474;
    float _475;
    float _476;
    if (_400)
    {
        uint _441 = _163 * 3u;
        uvec3 _450 = uvec3(texelFetch(l_geomPositionBuffer, int(_441)).x, texelFetch(l_geomPositionBuffer, int(_441 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_441 + 2u)).x);
        _474 = uintBitsToFloat(_450.x);
        _475 = uintBitsToFloat(_450.y);
        _476 = uintBitsToFloat(_450.z);
    }
    else
    {
        uint _458 = _163 * 2u;
        uvec2 _464 = uvec2(texelFetch(l_geomPositionBuffer, int(_458)).x, texelFetch(l_geomPositionBuffer, int(_458 + 1u)).x);
        uint _465 = _464.x;
        _474 = unpackHalf2x16(_465).x;
        _475 = unpackHalf2x16(_465 >> 16u).x;
        _476 = unpackHalf2x16(_464.y).x;
    }
    float _512;
    float _513;
    float _514;
    if (_400)
    {
        uint _479 = _164 * 3u;
        uvec3 _488 = uvec3(texelFetch(l_geomPositionBuffer, int(_479)).x, texelFetch(l_geomPositionBuffer, int(_479 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_479 + 2u)).x);
        _512 = uintBitsToFloat(_488.x);
        _513 = uintBitsToFloat(_488.y);
        _514 = uintBitsToFloat(_488.z);
    }
    else
    {
        uint _496 = _164 * 2u;
        uvec2 _502 = uvec2(texelFetch(l_geomPositionBuffer, int(_496)).x, texelFetch(l_geomPositionBuffer, int(_496 + 1u)).x);
        uint _503 = _502.x;
        _512 = unpackHalf2x16(_503).x;
        _513 = unpackHalf2x16(_503 >> 16u).x;
        _514 = unpackHalf2x16(_502.y).x;
    }
    float _517 = (1.0 - hit._m0.x) - hit._m0.y;
    float _561 = (((float(texelFetch(l_geomAttrib_0, int(((_255 + 12u) + _303) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_175 + 12u) + _231) >> 2u)).x & 255u) * _517)) + (float(texelFetch(l_geomAttrib_0, int(((_327 + 12u) + _375) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _564 = (_318 - _246) * 0.00048828125;
    float _566 = (_319 - _247) * 0.00048828125;
    float _569 = (_390 - _246) * 0.00048828125;
    float _570 = (_391 - _247) * 0.00048828125;
    float _592 = _474 - _436;
    float _593 = _475 - _437;
    float _594 = _476 - _438;
    float _597 = fma(_594, gl_ObjectToWorldEXT[2u].x, fma(_593, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _592));
    float _600 = fma(_594, gl_ObjectToWorldEXT[2u].y, fma(_593, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _592));
    float _603 = fma(_594, gl_ObjectToWorldEXT[2u].z, fma(_593, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _592));
    float _604 = _512 - _436;
    float _605 = _513 - _437;
    float _606 = _514 - _438;
    float _609 = fma(_606, gl_ObjectToWorldEXT[2u].x, fma(_605, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _604));
    float _612 = fma(_606, gl_ObjectToWorldEXT[2u].y, fma(_605, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _604));
    float _615 = fma(_606, gl_ObjectToWorldEXT[2u].z, fma(_605, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _604));
    float _616 = (((_318 * hit._m0.x) + (_246 * _517)) + (_390 * hit._m0.y)) * 0.00048828125;
    float _617 = (((_319 * hit._m0.x) + (_247 * _517)) + (_391 * hit._m0.y)) * 0.00048828125;
    float _621 = (((float(_200) * _517) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _624 = (((float(_201) * _517) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _627 = (((float(_202) * _517) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _628 = _621 * 0.0078740157186985015869140625;
    float _630 = _624 * 0.0078740157186985015869140625;
    float _631 = _627 * 0.0078740157186985015869140625;
    float _644 = ((((float(_212 & 255u) * _517) + (-127.0)) + (float(_287 & 255u) * hit._m0.x)) + (float(_359 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _645 = ((((float((_212 >> 8u) & 255u) * _517) + (-127.0)) + (float((_287 >> 8u) & 255u) * hit._m0.x)) + (float((_359 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _646 = ((((float((_212 >> 16u) & 255u) * _517) + (-127.0)) + (float((_287 >> 16u) & 255u) * hit._m0.x)) + (float((_359 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _647 = ((((float(_212 >> 24u) * _517) + (-127.0)) + (float(_287 >> 24u) * hit._m0.x)) + (float(_359 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _657 = ((_645 * _631) - (_646 * _630)) * _647;
    float _658 = ((_646 * _628) - (_644 * _631)) * _647;
    float _659 = ((_644 * _630) - (_645 * _628)) * _647;
    float _663 = inversesqrt(dot(vec3(_657, _658, _659), vec3(_657, _658, _659)));
    uvec2 _690 = uvec2(textureSize(M_AMSN_Mb2_M0_snp_0_Texture2D_1, int(0u)));
    bool _695 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _748;
    if (_695)
    {
        float _706 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _712 = (_615 * _600) - (_612 * _603);
        float _715 = (_609 * _603) - (_615 * _597);
        float _718 = (_612 * _597) - (_609 * _600);
        float _745 = ((log2((((float(_690.y) * 0.5) * float(_690.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_715 * _715) + (_718 * _718)) + (_712 * _712)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_706 * gl_WorldRayDirectionEXT.x, _706 * gl_WorldRayDirectionEXT.y, _706 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _748 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    }
    else
    {
        _748 = 0.0;
    }
    vec4 _752 = textureLod(sampler2D(M_AMSN_Mb2_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _616) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _617) + cbTextureTilingScale._m0[1u].w), _748);
    float _757 = _752.x * cbMtdParam._m0[9u].x;
    float _758 = _752.y * cbMtdParam._m0[9u].y;
    float _759 = _752.z * cbMtdParam._m0[9u].z;
    uvec2 _777 = uvec2(textureSize(M_AMSN_Mb2_M0_snp_0_Texture2D_2, int(0u)));
    float _828;
    if (_695)
    {
        float _788 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _794 = (_615 * _600) - (_612 * _603);
        float _797 = (_609 * _603) - (_615 * _597);
        float _800 = (_612 * _597) - (_609 * _600);
        float _826 = ((log2((((float(_777.y) * 0.5) * float(_777.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_797 * _797) + (_800 * _800)) + (_794 * _794)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_788 * gl_WorldRayDirectionEXT.x, _788 * gl_WorldRayDirectionEXT.y, _788 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _828 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    }
    else
    {
        _828 = 0.0;
    }
    vec4 _830 = textureLod(sampler2D(M_AMSN_Mb2_M0_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _616) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _617) + cbTextureTilingScale._m0[4u].w), _828);
    uvec2 _852 = uvec2(textureSize(M_AMSN_Mb2_M0_snp_0_Texture2D_0, int(0u)));
    float _903;
    if (_695)
    {
        float _863 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _869 = (_615 * _600) - (_612 * _603);
        float _872 = (_609 * _603) - (_615 * _597);
        float _875 = (_612 * _597) - (_609 * _600);
        float _901 = ((log2((((float(_852.y) * 0.5) * float(_852.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_872 * _872) + (_875 * _875)) + (_869 * _869)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_863 * gl_WorldRayDirectionEXT.x, _863 * gl_WorldRayDirectionEXT.y, _863 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _903 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    }
    else
    {
        _903 = 0.0;
    }
    float _915 = (_561 - ((cbMtdParam._m0[11u].x * (1.0 - _561)) * (textureLod(sampler2D(M_AMSN_Mb2_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbMtdParam._m0[11u].z * _616) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[11u].z * _617) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _903).x + 0.00999999977648258209228515625))) * ((((((float(texelFetch(l_geomAttrib_0, int((_303 + _255) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_231 + _175) >> 2u)).x >> 24u) * _517)) + (float(texelFetch(l_geomAttrib_0, int((_375 + _327) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMtdParam._m0[11u].y) + 1.0);
    float _1542 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _916 = isnan(1.0) ? _1542 : (isnan(_1542) ? 1.0 : min(_1542, 1.0));
    float _923 = (_916 * ((_830.x * cbMtdParam._m0[10u].x) - _757)) + _757;
    float _924 = (_916 * ((_830.y * cbMtdParam._m0[10u].y) - _758)) + _758;
    float _925 = (_916 * ((_830.z * cbMtdParam._m0[10u].z) - _759)) + _759;
    uvec2 _937 = uvec2(textureSize(M_AMSN_Mb2_M0_snp_0_Texture2D_13, int(0u)));
    float _988;
    if (_695)
    {
        float _948 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _954 = (_615 * _600) - (_612 * _603);
        float _957 = (_609 * _603) - (_615 * _597);
        float _960 = (_612 * _597) - (_609 * _600);
        float _986 = ((log2((((float(_937.y) * 0.5) * float(_937.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_957 * _957) + (_960 * _960)) + (_954 * _954)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_948 * gl_WorldRayDirectionEXT.x, _948 * gl_WorldRayDirectionEXT.y, _948 * gl_WorldRayDirectionEXT.z), vec3(_628, _630, _631))));
        _988 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    }
    else
    {
        _988 = 0.0;
    }
    vec4 _990 = textureLod(sampler2D(M_AMSN_Mb2_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _616) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _617) + cbTextureTilingScale._m0[2u].w), _988);
    float _992 = _990.x;
    float _993 = _990.y;
    float _994 = _990.z;
    uvec2 _1006 = uvec2(textureSize(M_AMSN_Mb2_M0_snp_0_Texture2D_14, int(0u)));
    float _1010 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1011 = _1010 * gl_WorldRayDirectionEXT.x;
    float _1012 = _1010 * gl_WorldRayDirectionEXT.y;
    float _1013 = _1010 * gl_WorldRayDirectionEXT.z;
    float _1057;
    if (_695)
    {
        float _1023 = (_615 * _600) - (_612 * _603);
        float _1026 = (_609 * _603) - (_615 * _597);
        float _1029 = (_612 * _597) - (_609 * _600);
        float _1055 = ((log2((((float(_1006.y) * 0.5) * float(_1006.x)) * abs((_570 * _564) - (_569 * _566))) / (sqrt(((_1026 * _1026) + (_1029 * _1029)) + (_1023 * _1023)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_110) / abs(dot(vec3(_1011, _1012, _1013), vec3(_628, _630, _631))));
        _1057 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
    }
    else
    {
        _1057 = 0.0;
    }
    vec4 _1059 = textureLod(sampler2D(M_AMSN_Mb2_M0_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _616) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _617) + cbTextureTilingScale._m0[3u].w), _1057);
    float _1072 = ((_1059.z - _994) * _916) + _994;
    float _1075 = ((((_1059.x - _992) * _916) + _992) * 2.0) + (-1.0);
    float _1077 = ((((_1059.y - _993) * _916) + _993) * 2.0) + (-1.0);
    float _1078 = dot(vec2(_1075, _1077), vec2(_1075, _1077));
    float _1563 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1083 = sqrt(1.0 - (isnan(1.0) ? _1563 : (isnan(_1563) ? 1.0 : min(_1563, 1.0))));
    float _1086 = fma(_1083, _628, fma(_1077, _644, (_663 * _657) * _1075));
    float _1089 = fma(_1083, _630, fma(_1077, _645, (_663 * _658) * _1075));
    float _1092 = fma(_1083, _631, fma(_1077, _646, (_663 * _659) * _1075));
    float _1096 = inversesqrt(dot(vec3(_1086, _1089, _1092), vec3(_1086, _1089, _1092)));
    float _1097 = _1096 * _1086;
    float _1098 = _1096 * _1089;
    float _1099 = _1096 * _1092;
    float _1111 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1112 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1113 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1114 = (-0.0) - _1011;
    float _1116 = (-0.0) - _1012;
    float _1117 = (-0.0) - _1013;
    float _1123 = float(gl_LaunchIDEXT.x);
    float _1124 = float(gl_LaunchIDEXT.y);
    float _1127 = float(gl_LaunchSizeEXT.x);
    float _1141 = fract(fract(sin(dot(vec2(_1123 / _1127, _1124 / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1154 = fract(fract(sin(dot(vec2((_1123 + 128.0) / _1127, (_1124 + 128.0) / _71), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _63._m0 = 1u;
    uvec4 _1164 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1165 = _1164.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1165, _1164.w, _1165, vec3(_1111, _1112, _1113), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    if (_63._m0 == 0u)
    {
        float _1186 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1097, _1098, _1099));
        float _1574 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1189 = isnan(1.0) ? _1574 : (isnan(_1574) ? 1.0 : min(_1574, 1.0));
        float _1208 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1072) * 0.949999988079071044921875);
        float _1209 = _1208 * _1208;
        float _1210 = g_sceneCB._m0[4u].x - _1011;
        float _1211 = g_sceneCB._m0[4u].y - _1012;
        float _1212 = g_sceneCB._m0[4u].z - _1013;
        float _1216 = inversesqrt(dot(vec3(_1210, _1211, _1212), vec3(_1210, _1211, _1212)));
        float _1217 = _1216 * _1210;
        float _1218 = _1216 * _1211;
        float _1219 = _1216 * _1212;
        float _1220 = dot(vec3(_1097, _1098, _1099), vec3(g_sceneCB._m0[4u].xyz));
        float _1585 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1223 = isnan(1.0) ? _1585 : (isnan(_1585) ? 1.0 : min(_1585, 1.0));
        float _1224 = dot(vec3(_1097, _1098, _1099), vec3(_1114, _1116, _1117));
        float _1596 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1227 = isnan(1.0) ? _1596 : (isnan(_1596) ? 1.0 : min(_1596, 1.0));
        float _1228 = dot(vec3(_1097, _1098, _1099), vec3(_1217, _1218, _1219));
        float _1607 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1231 = isnan(1.0) ? _1607 : (isnan(_1607) ? 1.0 : min(_1607, 1.0));
        float _1232 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1217, _1218, _1219));
        float _1618 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1236 = _1209 * _1209;
        float _1240 = ((_1231 * _1231) * (_1236 + (-1.0))) + 1.0;
        float _1252 = (exp2(log2(1.0 - (isnan(1.0) ? _1618 : (isnan(_1618) ? 1.0 : min(_1618, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1254 = 1.0 - _1209;
        float _1265 = (0.5 / (((_1227 * ((_1223 * _1254) + _1209)) + 9.9999999392252902907785028219223e-09) + (((_1227 * _1254) + _1209) * _1223))) * _1223;
        float _1629 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1267 = (isnan(1.0) ? _1629 : (isnan(_1629) ? 1.0 : min(_1629, 1.0))) * (_1236 / ((_1240 * _1240) * 3.141590118408203125));
        _1274 = ((_923 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1189;
        _1275 = ((_924 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1189;
        _1276 = ((_925 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1189;
        _1277 = (_1252 * g_sceneCB._m0[5u].x) * _1267;
        _1278 = (_1252 * g_sceneCB._m0[5u].y) * _1267;
        _1279 = (_1252 * g_sceneCB._m0[5u].z) * _1267;
    }
    else
    {
        _1274 = 0.0;
        _1275 = 0.0;
        _1276 = 0.0;
        _1277 = 0.0;
        _1278 = 0.0;
        _1279 = 0.0;
    }
    bool _1281 = abs(_1098) < 0.89999997615814208984375;
    float _1283 = float(_1281);
    float _1284 = _1281 ? 0.0 : 1.0;
    float _1287 = (_1283 * _1099) - (_1284 * _1098);
    float _1288 = _1284 * _1097;
    float _1290 = (-0.0) - (_1097 * _1283);
    float _1294 = inversesqrt(dot(vec3(_1287, _1288, _1290), vec3(_1287, _1288, _1290)));
    float _1295 = _1287 * _1294;
    float _1296 = _1288 * _1294;
    float _1297 = _1294 * _1290;
    float _1300 = (_1296 * _1099) - (_1297 * _1098);
    float _1303 = (_1297 * _1097) - (_1295 * _1099);
    float _1306 = (_1295 * _1098) - (_1296 * _1097);
    float _1308;
    float _1316;
    float _1307 = 0.0;
    uint _1309 = 0u;
    float _1313;
    bool _1315;
    for (;;)
    {
        _1313 = (float(_1309) + _1141) * 0.03125;
        _1315 = _1309 == 0u;
        float frontier_phi_49_pred;
        if (_1315)
        {
            frontier_phi_49_pred = 0.0;
        }
        else
        {
            float _1450;
            float _1451;
            uint _1453;
            _1450 = 0.0;
            _1451 = 0.5;
            _1453 = _1309;
            float _1317;
            for (;;)
            {
                _1317 = ((_1453 & 1u) != 0u) ? (_1451 + _1450) : _1450;
                uint _1454 = _1453 >> 1u;
                if (_1454 == 0u)
                {
                    break;
                }
                else
                {
                    _1450 = _1317;
                    _1451 *= 0.5;
                    _1453 = _1454;
                }
            }
            frontier_phi_49_pred = _1317;
        }
        _1316 = frontier_phi_49_pred;
        float _1318 = _1316 + _1154;
        float _1322 = sqrt(_1313);
        float _1323 = ((_1318 > 1.0) ? (_1318 + (-1.0)) : _1318) * 6.283185482025146484375;
        float _1326 = cos(_1323) * _1322;
        float _1328 = sin(_1323) * _1322;
        float _1330 = sqrt(1.0 - _1313);
        float _1343 = ((_1330 * _1097) + (_1326 * _1300)) + (_1328 * _1295);
        float _1344 = ((_1330 * _1098) + (_1326 * _1303)) + (_1328 * _1296);
        float _1345 = ((_1330 * _1099) + (_1326 * _1306)) + (_1328 * _1297);
        _62._m0 = 1u;
        uvec4 _1349 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1350 = _1349.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1350, _1349.w, _1350, vec3(_1111, _1112, _1113), 9.9999997473787516355514526367188e-05, vec3(_1343, _1344, _1345), 10000.0, 1);
        float _1356 = dot(vec3(_1097, _1098, _1099), vec3(_1343, _1344, _1345));
        float _1640 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1359 = isnan(1.0) ? _1640 : (isnan(_1640) ? 1.0 : min(_1640, 1.0));
        _1308 = ((float(_62._m0 == 0u) * _1359) / (_1359 * 0.3183098733425140380859375)) + _1307;
        uint _1310 = _1309 + 1u;
        if (_1310 == 32u)
        {
            break;
        }
        else
        {
            _1307 = _1308;
            _1309 = _1310;
            continue;
        }
    }
    float _1367 = _1308 * 0.009947183541953563690185546875;
    float _1372 = dot(vec3(_1011, _1012, _1013), vec3(_1097, _1098, _1099)) * 2.0;
    vec4 _1386 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1011 - (_1372 * _1097), _1012 - (_1372 * _1098), _1013 - (_1372 * _1099)), 4.0 - (_1072 * 4.0));
    float _1391 = dot(vec3(_1114, _1116, _1117), vec3(_1097, _1098, _1099));
    float _1651 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
    float _1400 = (exp2(log2(1.0 - (isnan(1.0) ? _1651 : (isnan(_1651) ? 1.0 : min(_1651, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1406 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1097, _1098, _1099), 0.0);
    float _1417 = (_1277 + _1274) + (((_1406.x * _923) + (_1400 * _1386.x)) * _1367);
    float _1421 = (_1278 + _1275) + (((_1406.y * _924) + (_1400 * _1386.y)) * _1367);
    float _1425 = (_1279 + _1276) + (((_1406.z * _925) + (_1400 * _1386.z)) * _1367);
    float _1662 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
    float _1673 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    float _1684 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
    bool _1433 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1444;
    _1444.x = _1433 ? ((_621 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1662 : (isnan(_1662) ? 1.0 : min(_1662, 1.0)));
    _1444.y = _1433 ? ((_624 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1673 : (isnan(_1673) ? 1.0 : min(_1673, 1.0)));
    _1444.z = _1433 ? ((_627 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1684 : (isnan(_1684) ? 1.0 : min(_1684, 1.0)));
    payload._m0 = _1444;
}


