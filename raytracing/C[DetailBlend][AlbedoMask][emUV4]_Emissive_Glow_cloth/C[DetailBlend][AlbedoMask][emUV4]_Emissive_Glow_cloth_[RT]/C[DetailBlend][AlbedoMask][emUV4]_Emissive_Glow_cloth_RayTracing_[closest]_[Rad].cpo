#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _2230;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    uint _185 = _133.w;
    bool _187 = _184 || (_185 == 0u);
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    uint _236 = _181.y;
    bool _237 = _183 == 0u;
    uint _240 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _243 = _184 ? (_240 + 4u) : _240;
    uint _244 = _236 * _174;
    uvec4 _249 = texelFetch(l_geomAttrib_1, int(((_244 + 4u) + _243) >> 2u));
    uint _250 = _249.x;
    float _254 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_250) >> int(16u))));
    uvec4 _259 = texelFetch(l_geomAttrib_1, int(((_244 + 12u) + _243) >> 2u));
    uint _260 = _259.x;
    float _264 = float(int(uint(int(_260 << 16u) >> int(16u))));
    float _265 = float(int(uint(int(_260) >> int(16u))));
    uint _266 = _182 * _176;
    uint _267 = _266 + 12u;
    uint _288;
    uint _289;
    uint _290;
    uint _291;
    if (_187)
    {
        uvec4 _269 = texelFetch(l_geomAttrib_0, int(_267 >> 2u));
        uint _270 = _269.x;
        _288 = _270 & 255u;
        _289 = (_270 >> 8u) & 255u;
        _290 = (_270 >> 16u) & 255u;
        _291 = 16u;
    }
    else
    {
        uint _276 = _267 >> 2u;
        uvec2 _282 = uvec2(texelFetch(l_geomAttrib_0, int(_276)).x, texelFetch(l_geomAttrib_0, int(_276 + 1u)).x);
        uint _283 = _282.x;
        _288 = _283 & 65535u;
        _289 = _283 >> 16u;
        _290 = _282.y & 65535u;
        _291 = 20u;
    }
    uvec4 _297 = texelFetch(l_geomAttrib_0, int((_291 + _266) >> 2u));
    uint _298 = _297.x;
    uint _311 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _313 = _184 ? (_311 + 4u) : _311;
    uint _314 = _236 * _176;
    uvec4 _318 = texelFetch(l_geomAttrib_1, int(((_314 + 4u) + _313) >> 2u));
    uint _319 = _318.x;
    float _323 = float(int(uint(int(_319 << 16u) >> int(16u))));
    float _324 = float(int(uint(int(_319) >> int(16u))));
    uvec4 _328 = texelFetch(l_geomAttrib_1, int(((_314 + 12u) + _313) >> 2u));
    uint _329 = _328.x;
    float _333 = float(int(uint(int(_329 << 16u) >> int(16u))));
    float _334 = float(int(uint(int(_329) >> int(16u))));
    uint _335 = _182 * _177;
    uint _336 = _335 + 12u;
    uint _357;
    uint _358;
    uint _359;
    uint _360;
    if (_187)
    {
        uvec4 _338 = texelFetch(l_geomAttrib_0, int(_336 >> 2u));
        uint _339 = _338.x;
        _357 = _339 & 255u;
        _358 = (_339 >> 8u) & 255u;
        _359 = (_339 >> 16u) & 255u;
        _360 = 16u;
    }
    else
    {
        uint _345 = _336 >> 2u;
        uvec2 _351 = uvec2(texelFetch(l_geomAttrib_0, int(_345)).x, texelFetch(l_geomAttrib_0, int(_345 + 1u)).x);
        uint _352 = _351.x;
        _357 = _352 & 65535u;
        _358 = _352 >> 16u;
        _359 = _351.y & 65535u;
        _360 = 20u;
    }
    uvec4 _366 = texelFetch(l_geomAttrib_0, int((_360 + _335) >> 2u));
    uint _367 = _366.x;
    uint _380 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _382 = _184 ? (_380 + 4u) : _380;
    uint _383 = _236 * _177;
    uvec4 _387 = texelFetch(l_geomAttrib_1, int(((_383 + 4u) + _382) >> 2u));
    uint _388 = _387.x;
    float _392 = float(int(uint(int(_388 << 16u) >> int(16u))));
    float _393 = float(int(uint(int(_388) >> int(16u))));
    uvec4 _397 = texelFetch(l_geomAttrib_1, int(((_383 + 12u) + _382) >> 2u));
    uint _398 = _397.x;
    float _402 = float(int(uint(int(_398 << 16u) >> int(16u))));
    float _403 = float(int(uint(int(_398) >> int(16u))));
    bool _405 = _133.z == 0u;
    float _441;
    float _442;
    float _443;
    if (_405)
    {
        uint _408 = _174 * 3u;
        uvec3 _417 = uvec3(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_408 + 2u)).x);
        _441 = uintBitsToFloat(_417.x);
        _442 = uintBitsToFloat(_417.y);
        _443 = uintBitsToFloat(_417.z);
    }
    else
    {
        uint _425 = _174 * 2u;
        uvec2 _431 = uvec2(texelFetch(l_geomPositionBuffer, int(_425)).x, texelFetch(l_geomPositionBuffer, int(_425 + 1u)).x);
        uint _432 = _431.x;
        _441 = unpackHalf2x16(_432).x;
        _442 = unpackHalf2x16(_432 >> 16u).x;
        _443 = unpackHalf2x16(_431.y).x;
    }
    float _479;
    float _480;
    float _481;
    if (_405)
    {
        uint _446 = _176 * 3u;
        uvec3 _455 = uvec3(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_446 + 2u)).x);
        _479 = uintBitsToFloat(_455.x);
        _480 = uintBitsToFloat(_455.y);
        _481 = uintBitsToFloat(_455.z);
    }
    else
    {
        uint _463 = _176 * 2u;
        uvec2 _469 = uvec2(texelFetch(l_geomPositionBuffer, int(_463)).x, texelFetch(l_geomPositionBuffer, int(_463 + 1u)).x);
        uint _470 = _469.x;
        _479 = unpackHalf2x16(_470).x;
        _480 = unpackHalf2x16(_470 >> 16u).x;
        _481 = unpackHalf2x16(_469.y).x;
    }
    float _517;
    float _518;
    float _519;
    if (_405)
    {
        uint _484 = _177 * 3u;
        uvec3 _493 = uvec3(texelFetch(l_geomPositionBuffer, int(_484)).x, texelFetch(l_geomPositionBuffer, int(_484 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_484 + 2u)).x);
        _517 = uintBitsToFloat(_493.x);
        _518 = uintBitsToFloat(_493.y);
        _519 = uintBitsToFloat(_493.z);
    }
    else
    {
        uint _501 = _177 * 2u;
        uvec2 _507 = uvec2(texelFetch(l_geomPositionBuffer, int(_501)).x, texelFetch(l_geomPositionBuffer, int(_501 + 1u)).x);
        uint _508 = _507.x;
        _517 = unpackHalf2x16(_508).x;
        _518 = unpackHalf2x16(_508 >> 16u).x;
        _519 = unpackHalf2x16(_507.y).x;
    }
    float _522 = (1.0 - hit._m0.x) - hit._m0.y;
    float _566 = (_323 - _254) * 0.00048828125;
    float _568 = (_324 - _255) * 0.00048828125;
    float _571 = (_392 - _254) * 0.00048828125;
    float _572 = (_393 - _255) * 0.00048828125;
    float _598 = _479 - _441;
    float _599 = _480 - _442;
    float _600 = _481 - _443;
    float _603 = fma(_600, gl_ObjectToWorldEXT[2u].x, fma(_599, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _598));
    float _606 = fma(_600, gl_ObjectToWorldEXT[2u].y, fma(_599, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _598));
    float _609 = fma(_600, gl_ObjectToWorldEXT[2u].z, fma(_599, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _598));
    float _610 = _517 - _441;
    float _611 = _518 - _442;
    float _612 = _519 - _443;
    float _615 = fma(_612, gl_ObjectToWorldEXT[2u].x, fma(_611, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _610));
    float _618 = fma(_612, gl_ObjectToWorldEXT[2u].y, fma(_611, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _610));
    float _621 = fma(_612, gl_ObjectToWorldEXT[2u].z, fma(_611, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _610));
    float _622 = (((_323 * hit._m0.x) + (_254 * _522)) + (_392 * hit._m0.y)) * 0.00048828125;
    float _623 = (((_324 * hit._m0.x) + (_255 * _522)) + (_393 * hit._m0.y)) * 0.00048828125;
    float _629 = (((float(_213) * _522) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_357) * hit._m0.y);
    float _632 = (((float(_214) * _522) + (-127.0)) + (float(_289) * hit._m0.x)) + (float(_358) * hit._m0.y);
    float _635 = (((float(_215) * _522) + (-127.0)) + (float(_290) * hit._m0.x)) + (float(_359) * hit._m0.y);
    float _636 = _629 * 0.0078740157186985015869140625;
    float _638 = _632 * 0.0078740157186985015869140625;
    float _639 = _635 * 0.0078740157186985015869140625;
    float _652 = ((((float(_225 & 255u) * _522) + (-127.0)) + (float(_298 & 255u) * hit._m0.x)) + (float(_367 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _653 = ((((float((_225 >> 8u) & 255u) * _522) + (-127.0)) + (float((_298 >> 8u) & 255u) * hit._m0.x)) + (float((_367 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _654 = ((((float((_225 >> 16u) & 255u) * _522) + (-127.0)) + (float((_298 >> 16u) & 255u) * hit._m0.x)) + (float((_367 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _655 = ((((float(_225 >> 24u) * _522) + (-127.0)) + (float(_298 >> 24u) * hit._m0.x)) + (float(_367 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _665 = ((_653 * _639) - (_654 * _638)) * _655;
    float _666 = ((_654 * _636) - (_652 * _639)) * _655;
    float _667 = ((_652 * _638) - (_653 * _636)) * _655;
    float _671 = inversesqrt(dot(vec3(_665, _666, _667), vec3(_665, _666, _667)));
    uvec2 _687 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7, int(0u)));
    bool _692 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _745;
    if (_692)
    {
        float _703 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _709 = (_621 * _606) - (_618 * _609);
        float _712 = (_615 * _609) - (_621 * _603);
        float _715 = (_618 * _603) - (_615 * _606);
        float _742 = ((log2((((float(_687.y) * 0.5) * float(_687.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_712 * _712) + (_715 * _715)) + (_709 * _709)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_703 * gl_WorldRayDirectionEXT.x, _703 * gl_WorldRayDirectionEXT.y, _703 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _745 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    }
    else
    {
        _745 = 0.0;
    }
    vec4 _749 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _622) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _623) + cbTextureTilingScale._m0[13u].w), _745);
    float _758 = log2(0.0);
    float _760 = exp2(_758 * cbMtdParam._m0[21u].y);
    float _761 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _762 = isnan(1.0) ? _761 : (isnan(_761) ? 1.0 : min(_761, 1.0));
    uvec2 _775 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0, int(0u)));
    float _826;
    if (_692)
    {
        float _786 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _792 = (_621 * _606) - (_618 * _609);
        float _795 = (_615 * _609) - (_621 * _603);
        float _798 = (_618 * _603) - (_615 * _606);
        float _824 = ((log2((((float(_775.y) * 0.5) * float(_775.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_795 * _795) + (_798 * _798)) + (_792 * _792)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_786 * gl_WorldRayDirectionEXT.x, _786 * gl_WorldRayDirectionEXT.y, _786 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _826 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    }
    else
    {
        _826 = 0.0;
    }
    vec4 _829 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _622) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _623) + cbTextureTilingScale._m0[0u].w), _826);
    float _833 = _829.z;
    float _834 = _829.w;
    float _841 = exp2(log2(_833 * cbMtdParam._m0[21u].w) * cbMtdParam._m0[20u].y);
    float _842 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _843 = isnan(1.0) ? _842 : (isnan(_842) ? 1.0 : min(_842, 1.0));
    uvec2 _856 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _907;
    if (_692)
    {
        float _867 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _873 = (_621 * _606) - (_618 * _609);
        float _876 = (_615 * _609) - (_621 * _603);
        float _879 = (_618 * _603) - (_615 * _606);
        float _905 = ((log2((((float(_856.y) * 0.5) * float(_856.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_876 * _876) + (_879 * _879)) + (_873 * _873)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_867 * gl_WorldRayDirectionEXT.x, _867 * gl_WorldRayDirectionEXT.y, _867 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _907 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    }
    else
    {
        _907 = 0.0;
    }
    vec4 _909 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _622) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _623) + cbTextureTilingScale._m0[9u].w), _907);
    uvec2 _934 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1, int(0u)));
    float _985;
    if (_692)
    {
        float _945 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _951 = (_621 * _606) - (_618 * _609);
        float _954 = (_615 * _609) - (_621 * _603);
        float _957 = (_618 * _603) - (_615 * _606);
        float _983 = ((log2((((float(_934.y) * 0.5) * float(_934.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_954 * _954) + (_957 * _957)) + (_951 * _951)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_945 * gl_WorldRayDirectionEXT.x, _945 * gl_WorldRayDirectionEXT.y, _945 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _985 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    }
    else
    {
        _985 = 0.0;
    }
    vec4 _987 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _622) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _623) + cbTextureTilingScale._m0[1u].w), _985);
    float _997 = cbMtdParam._m0[9u].x * _987.x;
    float _998 = cbMtdParam._m0[9u].y * _987.y;
    float _999 = cbMtdParam._m0[9u].z * _987.z;
    float _1006 = (((cbMtdParam._m0[10u].x * _909.x) - _997) * _843) + _997;
    float _1007 = (((cbMtdParam._m0[10u].y * _909.y) - _998) * _843) + _998;
    float _1008 = (((cbMtdParam._m0[10u].z * _909.z) - _999) * _843) + _999;
    float _1015 = exp2(log2(_834) * cbMtdParam._m0[22u].y);
    uvec2 _1027 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    float _1078;
    if (_692)
    {
        float _1038 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1044 = (_621 * _606) - (_618 * _609);
        float _1047 = (_615 * _609) - (_621 * _603);
        float _1050 = (_618 * _603) - (_615 * _606);
        float _1076 = ((log2((((float(_1027.y) * 0.5) * float(_1027.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1047 * _1047) + (_1050 * _1050)) + (_1044 * _1044)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1038 * gl_WorldRayDirectionEXT.x, _1038 * gl_WorldRayDirectionEXT.y, _1038 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1078 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    }
    else
    {
        _1078 = 0.0;
    }
    vec4 _1080 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _622) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _623) + cbTextureTilingScale._m0[8u].w), _1078);
    float _1099 = (((cbMtdParam._m0[12u].x * _1080.x) - _1006) * _1015) + _1006;
    float _1100 = (((cbMtdParam._m0[12u].y * _1080.y) - _1007) * _1015) + _1007;
    float _1101 = (((cbMtdParam._m0[12u].z * _1080.z) - _1008) * _1015) + _1008;
    uvec2 _1113 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4, int(0u)));
    float _1164;
    if (_692)
    {
        float _1124 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1130 = (_621 * _606) - (_618 * _609);
        float _1133 = (_615 * _609) - (_621 * _603);
        float _1136 = (_618 * _603) - (_615 * _606);
        float _1162 = ((log2((((float(_1113.y) * 0.5) * float(_1113.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1133 * _1133) + (_1136 * _1136)) + (_1130 * _1130)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1124 * gl_WorldRayDirectionEXT.x, _1124 * gl_WorldRayDirectionEXT.y, _1124 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1164 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    }
    else
    {
        _1164 = 0.0;
    }
    vec4 _1166 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _622) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _623) + cbTextureTilingScale._m0[10u].w), _1164);
    float _1190 = (_749.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _1166.x) - _1099) * _762) + _1099);
    float _1192 = (_749.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _1166.y) - _1100) * _762) + _1100);
    float _1194 = (_749.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _1166.z) - _1101) * _762) + _1101);
    float _1199 = exp2(log2(1.0 - _834) * 0.00999999977648258209228515625);
    uvec2 _1211 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11, int(0u)));
    float _1262;
    if (_692)
    {
        float _1222 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1228 = (_621 * _606) - (_618 * _609);
        float _1231 = (_615 * _609) - (_621 * _603);
        float _1234 = (_618 * _603) - (_615 * _606);
        float _1260 = ((log2((((float(_1211.y) * 0.5) * float(_1211.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1231 * _1231) + (_1234 * _1234)) + (_1228 * _1228)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1222 * gl_WorldRayDirectionEXT.x, _1222 * gl_WorldRayDirectionEXT.y, _1222 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1262 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
    }
    else
    {
        _1262 = 0.0;
    }
    float _1271 = ((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _622) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _623) + cbTextureTilingScale._m0[2u].w), _1262).x - cbMtdParam._m0[22u].w) * _1199) + cbMtdParam._m0[22u].w;
    uvec2 _1283 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12, int(0u)));
    float _1334;
    if (_692)
    {
        float _1294 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1300 = (_621 * _606) - (_618 * _609);
        float _1303 = (_615 * _609) - (_621 * _603);
        float _1306 = (_618 * _603) - (_615 * _606);
        float _1332 = ((log2((((float(_1283.y) * 0.5) * float(_1283.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1303 * _1303) + (_1306 * _1306)) + (_1300 * _1300)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1294 * gl_WorldRayDirectionEXT.x, _1294 * gl_WorldRayDirectionEXT.y, _1294 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1334 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
    }
    else
    {
        _1334 = 0.0;
    }
    float _1343 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _622) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _623) + cbTextureTilingScale._m0[3u].w), _1334).x - _1271) + cbMtdParam._m0[21u].z) * _1015) + _1271;
    uvec2 _1355 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13, int(0u)));
    float _1406;
    if (_692)
    {
        float _1366 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1372 = (_621 * _606) - (_618 * _609);
        float _1375 = (_615 * _609) - (_621 * _603);
        float _1378 = (_618 * _603) - (_615 * _606);
        float _1404 = ((log2((((float(_1355.y) * 0.5) * float(_1355.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1375 * _1375) + (_1378 * _1378)) + (_1372 * _1372)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1366 * gl_WorldRayDirectionEXT.x, _1366 * gl_WorldRayDirectionEXT.y, _1366 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1406 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
    }
    else
    {
        _1406 = 0.0;
    }
    float _1418 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _622) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _623) + cbTextureTilingScale._m0[4u].w), _1406).x - _1343) + cbMtdParam._m0[23u].w) * _762) + _1343;
    uvec2 _1431 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5, int(0u)));
    float _1482;
    if (_692)
    {
        float _1442 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1448 = (_621 * _606) - (_618 * _609);
        float _1451 = (_615 * _609) - (_621 * _603);
        float _1454 = (_618 * _603) - (_615 * _606);
        float _1480 = ((log2((((float(_1431.y) * 0.5) * float(_1431.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1451 * _1451) + (_1454 * _1454)) + (_1448 * _1448)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1442 * gl_WorldRayDirectionEXT.x, _1442 * gl_WorldRayDirectionEXT.y, _1442 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1482 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
    }
    else
    {
        _1482 = 0.0;
    }
    vec4 _1484 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _622) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _623) + cbTextureTilingScale._m0[11u].w), _1482);
    uvec2 _1502 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6, int(0u)));
    float _1553;
    if (_692)
    {
        float _1513 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1519 = (_621 * _606) - (_618 * _609);
        float _1522 = (_615 * _609) - (_621 * _603);
        float _1525 = (_618 * _603) - (_615 * _606);
        float _1551 = ((log2((((float(_1502.y) * 0.5) * float(_1502.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1522 * _1522) + (_1525 * _1525)) + (_1519 * _1519)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1513 * gl_WorldRayDirectionEXT.x, _1513 * gl_WorldRayDirectionEXT.y, _1513 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1553 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    }
    else
    {
        _1553 = 0.0;
    }
    vec4 _1555 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _622) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _623) + cbTextureTilingScale._m0[12u].w), _1553);
    float _1557 = _1555.x;
    float _1558 = _1555.y;
    float _1561 = cbMtdParam._m0[20u].x + _1555.z;
    float _1564 = (((cbMtdParam._m0[21u].x + _1484.z) - _1561) * _1199) + _1561;
    uvec2 _1577 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8, int(0u)));
    float _1628;
    if (_692)
    {
        float _1588 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1594 = (_621 * _606) - (_618 * _609);
        float _1597 = (_615 * _609) - (_621 * _603);
        float _1600 = (_618 * _603) - (_615 * _606);
        float _1626 = ((log2((((float(_1577.y) * 0.5) * float(_1577.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1597 * _1597) + (_1600 * _1600)) + (_1594 * _1594)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1588 * gl_WorldRayDirectionEXT.x, _1588 * gl_WorldRayDirectionEXT.y, _1588 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1628 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
    }
    else
    {
        _1628 = 0.0;
    }
    vec4 _1630 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _622) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _623) + cbTextureTilingScale._m0[14u].w), _1628);
    float _1641 = (_833 * 2.0) * ((((_1630.z - _1564) + cbMtdParam._m0[23u].y) * _1015) + _1564);
    uvec2 _1654 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9, int(0u)));
    float _1705;
    if (_692)
    {
        float _1665 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1671 = (_621 * _606) - (_618 * _609);
        float _1674 = (_615 * _609) - (_621 * _603);
        float _1677 = (_618 * _603) - (_615 * _606);
        float _1703 = ((log2((((float(_1654.y) * 0.5) * float(_1654.x)) * abs((_572 * _566) - (_571 * _568))) / (sqrt(((_1674 * _1674) + (_1677 * _1677)) + (_1671 * _1671)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1665 * gl_WorldRayDirectionEXT.x, _1665 * gl_WorldRayDirectionEXT.y, _1665 * gl_WorldRayDirectionEXT.z), vec3(_636, _638, _639))));
        _1705 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
    }
    else
    {
        _1705 = 0.0;
    }
    vec4 _1707 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _622) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _623) + cbTextureTilingScale._m0[15u].w), _1705);
    float _1716 = (((_1707.z - _1641) + cbMtdParam._m0[22u].x) * _762) + _1641;
    uvec2 _1734 = uvec2(textureSize(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16, int(0u)));
    float _1738 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1739 = _1738 * gl_WorldRayDirectionEXT.x;
    float _1740 = _1738 * gl_WorldRayDirectionEXT.y;
    float _1741 = _1738 * gl_WorldRayDirectionEXT.z;
    float _1787;
    if (_692)
    {
        float _1751 = (_621 * _606) - (_618 * _609);
        float _1754 = (_615 * _609) - (_621 * _603);
        float _1757 = (_618 * _603) - (_615 * _606);
        float _1785 = ((log2((((float(_1734.y) * 0.5) * float(_1734.x)) * abs((((_403 - _265) * (_333 - _264)) - ((_402 - _264) * (_334 - _265))) * 2.384185791015625e-07)) / (sqrt(((_1754 * _1754) + (_1757 * _1757)) + (_1751 * _1751)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1739, _1740, _1741), vec3(_636, _638, _639))));
        _1787 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
    }
    else
    {
        _1787 = 0.0;
    }
    vec4 _1789 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_emUV4_Emissive_Glow_snp_0_Texture2D_16, SS_DiffuseMap), vec2((((((_333 * hit._m0.x) + (_264 * _522)) + (_402 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((((_334 * hit._m0.x) + (_265 * _522)) + (_403 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w), _1787);
    float _1810 = ((_1484.x - _1557) * _1199) + _1557;
    float _1811 = ((_1484.y - _1558) * _1199) + _1558;
    float _1816 = ((_1630.x - _1810) * _1015) + _1810;
    float _1817 = ((_1630.y - _1811) * _1015) + _1811;
    float _1826 = ((((_1707.x - _1816) * _762) + _1816) * 2.0) + (-1.0);
    float _1827 = ((((_1707.y - _1817) * _762) + _1817) * 2.0) + (-1.0);
    float _1828 = dot(vec2(_1826, _1827), vec2(_1826, _1827));
    float _2402 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
    float _1833 = sqrt(1.0 - (isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0))));
    float _1836 = (cbMtdParam._m0[23u].x * ((_829.x * 2.0) + (-1.0))) + _1826;
    float _1837 = (cbMtdParam._m0[23u].x * ((_829.y * 2.0) + (-1.0))) + _1827;
    float _1840 = fma(_1833, _636, fma(_1837, _652, (_671 * _665) * _1836));
    float _1843 = fma(_1833, _638, fma(_1837, _653, (_671 * _666) * _1836));
    float _1846 = fma(_1833, _639, fma(_1837, _654, (_671 * _667) * _1836));
    float _1850 = inversesqrt(dot(vec3(_1840, _1843, _1846), vec3(_1840, _1843, _1846)));
    float _1851 = _1850 * _1840;
    float _1852 = _1850 * _1843;
    float _1853 = _1850 * _1846;
    float _1865 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1866 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1867 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1868 = (-0.0) - _1739;
    float _1870 = (-0.0) - _1740;
    float _1871 = (-0.0) - _1741;
    float _1877 = float(gl_LaunchIDEXT.x);
    float _1878 = float(gl_LaunchIDEXT.y);
    float _1881 = float(gl_LaunchSizeEXT.x);
    float _1895 = fract(fract(sin(dot(vec2(_1877 / _1881, _1878 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1908 = fract(fract(sin(dot(vec2((_1877 + 128.0) / _1881, (_1878 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1909 = 1.0 - _1418;
    float _1910 = _1909 * _1190;
    float _1911 = _1909 * _1192;
    float _1912 = _1909 * _1194;
    float _1917 = _1418 * (_1190 + (-0.039999999105930328369140625));
    float _1918 = _1418 * (_1192 + (-0.039999999105930328369140625));
    float _1919 = _1418 * (_1194 + (-0.039999999105930328369140625));
    float _1920 = _1917 + 0.039999999105930328369140625;
    float _1922 = _1918 + 0.039999999105930328369140625;
    float _1923 = _1919 + 0.039999999105930328369140625;
    _75._m0 = 1u;
    uvec4 _1933 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1934 = _1933.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1934, _1933.w, _1934, vec3(_1865, _1866, _1867), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2049;
    float _2050;
    float _2051;
    float _2052;
    float _2053;
    float _2054;
    if (_75._m0 == 0u)
    {
        float _1955 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1851, _1852, _1853));
        float _2413 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
        float _1958 = isnan(1.0) ? _2413 : (isnan(_2413) ? 1.0 : min(_2413, 1.0));
        float _1977 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1716) * 0.949999988079071044921875);
        float _1978 = _1977 * _1977;
        float _1979 = g_sceneCB._m0[4u].x - _1739;
        float _1980 = g_sceneCB._m0[4u].y - _1740;
        float _1981 = g_sceneCB._m0[4u].z - _1741;
        float _1985 = inversesqrt(dot(vec3(_1979, _1980, _1981), vec3(_1979, _1980, _1981)));
        float _1986 = _1985 * _1979;
        float _1987 = _1985 * _1980;
        float _1988 = _1985 * _1981;
        float _1989 = dot(vec3(_1851, _1852, _1853), vec3(g_sceneCB._m0[4u].xyz));
        float _2424 = isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0));
        float _1992 = isnan(1.0) ? _2424 : (isnan(_2424) ? 1.0 : min(_2424, 1.0));
        float _1993 = dot(vec3(_1851, _1852, _1853), vec3(_1868, _1870, _1871));
        float _2435 = isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0));
        float _1996 = isnan(1.0) ? _2435 : (isnan(_2435) ? 1.0 : min(_2435, 1.0));
        float _1997 = dot(vec3(_1851, _1852, _1853), vec3(_1986, _1987, _1988));
        float _2446 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _2000 = isnan(1.0) ? _2446 : (isnan(_2446) ? 1.0 : min(_2446, 1.0));
        float _2001 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1986, _1987, _1988));
        float _2457 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2005 = _1978 * _1978;
        float _2009 = ((_2000 * _2000) * (_2005 + (-1.0))) + 1.0;
        float _2018 = exp2(log2(1.0 - (isnan(1.0) ? _2457 : (isnan(_2457) ? 1.0 : min(_2457, 1.0)))) * 5.0);
        float _2029 = 1.0 - _1978;
        float _2040 = (0.5 / (((_1996 * ((_1992 * _2029) + _1978)) + 9.9999999392252902907785028219223e-09) + (((_1996 * _2029) + _1978) * _1992))) * _1992;
        float _2468 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
        float _2042 = (isnan(1.0) ? _2468 : (isnan(_2468) ? 1.0 : min(_2468, 1.0))) * (_2005 / ((_2009 * _2009) * 3.141590118408203125));
        _2049 = ((_1910 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1958;
        _2050 = ((_1911 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1958;
        _2051 = ((_1912 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1958;
        _2052 = (((_2018 * (0.959999978542327880859375 - _1917)) + _1920) * g_sceneCB._m0[5u].x) * _2042;
        _2053 = (((_2018 * (0.959999978542327880859375 - _1918)) + _1922) * g_sceneCB._m0[5u].y) * _2042;
        _2054 = (((_2018 * (0.959999978542327880859375 - _1919)) + _1923) * g_sceneCB._m0[5u].z) * _2042;
    }
    else
    {
        _2049 = 0.0;
        _2050 = 0.0;
        _2051 = 0.0;
        _2052 = 0.0;
        _2053 = 0.0;
        _2054 = 0.0;
    }
    bool _2056 = abs(_1852) < 0.89999997615814208984375;
    float _2058 = float(_2056);
    float _2059 = _2056 ? 0.0 : 1.0;
    float _2062 = (_2058 * _1853) - (_2059 * _1852);
    float _2063 = _2059 * _1851;
    float _2065 = (-0.0) - (_1851 * _2058);
    float _2069 = inversesqrt(dot(vec3(_2062, _2063, _2065), vec3(_2062, _2063, _2065)));
    float _2070 = _2062 * _2069;
    float _2071 = _2063 * _2069;
    float _2072 = _2069 * _2065;
    float _2075 = (_2071 * _1853) - (_2072 * _1852);
    float _2078 = (_2072 * _1851) - (_2070 * _1853);
    float _2081 = (_2070 * _1852) - (_2071 * _1851);
    float _2083;
    float _2091;
    float _2082 = 0.0;
    uint _2084 = 0u;
    float _2088;
    bool _2090;
    for (;;)
    {
        _2088 = (float(_2084) + _1895) * 0.03125;
        _2090 = _2084 == 0u;
        float frontier_phi_55_pred;
        if (_2090)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _2235;
            float _2236;
            uint _2238;
            _2235 = 0.0;
            _2236 = 0.5;
            _2238 = _2084;
            float _2092;
            for (;;)
            {
                _2092 = ((_2238 & 1u) != 0u) ? (_2236 + _2235) : _2235;
                uint _2239 = _2238 >> 1u;
                if (_2239 == 0u)
                {
                    break;
                }
                else
                {
                    _2235 = _2092;
                    _2236 *= 0.5;
                    _2238 = _2239;
                }
            }
            frontier_phi_55_pred = _2092;
        }
        _2091 = frontier_phi_55_pred;
        float _2093 = _2091 + _1908;
        float _2097 = sqrt(_2088);
        float _2098 = ((_2093 > 1.0) ? (_2093 + (-1.0)) : _2093) * 6.283185482025146484375;
        float _2101 = cos(_2098) * _2097;
        float _2103 = sin(_2098) * _2097;
        float _2105 = sqrt(1.0 - _2088);
        float _2118 = ((_2105 * _1851) + (_2101 * _2075)) + (_2103 * _2070);
        float _2119 = ((_2105 * _1852) + (_2101 * _2078)) + (_2103 * _2071);
        float _2120 = ((_2105 * _1853) + (_2101 * _2081)) + (_2103 * _2072);
        _74._m0 = 1u;
        uvec4 _2124 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2125 = _2124.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2125, _2124.w, _2125, vec3(_1865, _1866, _1867), 9.9999997473787516355514526367188e-05, vec3(_2118, _2119, _2120), 10000.0, 1);
        float _2131 = dot(vec3(_1851, _1852, _1853), vec3(_2118, _2119, _2120));
        float _2479 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2134 = isnan(1.0) ? _2479 : (isnan(_2479) ? 1.0 : min(_2479, 1.0));
        _2083 = ((float(_74._m0 == 0u) * _2134) / (_2134 * 0.3183098733425140380859375)) + _2082;
        uint _2085 = _2084 + 1u;
        if (_2085 == 32u)
        {
            break;
        }
        else
        {
            _2082 = _2083;
            _2084 = _2085;
            continue;
        }
    }
    float _2142 = _2083 * 0.009947183541953563690185546875;
    float _2147 = dot(vec3(_1739, _1740, _1741), vec3(_1851, _1852, _1853)) * 2.0;
    vec4 _2161 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1739 - (_2147 * _1851), _1740 - (_2147 * _1852), _1741 - (_2147 * _1853)), 4.0 - (_1716 * 4.0));
    float _2166 = dot(vec3(_1868, _1870, _1871), vec3(_1851, _1852, _1853));
    float _2490 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    float _2176 = exp2(log2(1.0 - (isnan(1.0) ? _2490 : (isnan(_2490) ? 1.0 : min(_2490, 1.0)))) * 5.0);
    vec4 _2188 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1851, _1852, _1853), 0.0);
    float _2200 = ((_2049 + ((cbMtdParam._m0[11u].x * cbMtdParam._m0[22u].z) * _1789.x)) + _2052) + (((_2188.x * _1910) + (((_2176 * (0.959999978542327880859375 - _1917)) + _1920) * _2161.x)) * _2142);
    float _2205 = ((_2050 + ((cbMtdParam._m0[11u].y * cbMtdParam._m0[22u].z) * _1789.y)) + _2053) + (((_2188.y * _1911) + (((_2176 * (0.959999978542327880859375 - _1918)) + _1922) * _2161.y)) * _2142);
    float _2210 = ((_2051 + ((cbMtdParam._m0[11u].z * cbMtdParam._m0[22u].z) * _1789.z)) + _2054) + (((_2188.z * _1912) + (((_2176 * (0.959999978542327880859375 - _1919)) + _1923) * _2161.z)) * _2142);
    float _2501 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _2512 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    float _2523 = isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0));
    bool _2218 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2229;
    _2229.x = _2218 ? ((_629 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2501 : (isnan(_2501) ? 1.0 : min(_2501, 1.0)));
    _2229.y = _2218 ? ((_632 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2512 : (isnan(_2512) ? 1.0 : min(_2512, 1.0)));
    _2229.z = _2218 ? ((_635 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2523 : (isnan(_2523) ? 1.0 : min(_2523, 1.0)));
    payload._m0 = _2229;
}


