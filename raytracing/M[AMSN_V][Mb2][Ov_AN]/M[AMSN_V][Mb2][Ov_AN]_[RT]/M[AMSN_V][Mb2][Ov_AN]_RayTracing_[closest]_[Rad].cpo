#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1595;

void main()
{
    float _75 = float(gl_LaunchSizeEXT.y);
    float _105 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _107 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _114 = sqrt(((_106 * _106) + (_105 * _105)) + (_107 * _107)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _75)))));
    uvec4 _125 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _126 = _125.y;
    uint _166;
    uint _168;
    uint _169;
    if (_125.x == 0u)
    {
        uint _134 = (_126 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _143 = uvec3(texelFetch(l_geomIndexBuffer, int(_134)).x, texelFetch(l_geomIndexBuffer, int(_134 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_134 + 2u)).x);
        _166 = _143.x;
        _168 = _143.y;
        _169 = _143.z;
    }
    else
    {
        uint _147 = uint(gl_PrimitiveID) * 6u;
        uint _149 = _147 & 4294967292u;
        uint _152 = (_126 + _149) >> 2u;
        uvec2 _159 = uvec2(texelFetch(l_geomIndexBuffer, int(_152)).x, texelFetch(l_geomIndexBuffer, int(_152 + 1u)).x);
        uint _160 = _159.x;
        uint _161 = _159.y;
        uint _163 = _160 >> 16u;
        uint _164 = _161 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_149 == _147)
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _160 & 65535u;
            frontier_phi_3_2_ladder_2 = _164;
        }
        else
        {
            frontier_phi_3_2_ladder = _164;
            frontier_phi_3_2_ladder_1 = _163;
            frontier_phi_3_2_ladder_2 = _161 >> 16u;
        }
        _166 = frontier_phi_3_2_ladder_1;
        _168 = frontier_phi_3_2_ladder;
        _169 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _173 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _174 = _173.x;
    uint _175 = _173.z;
    bool _176 = _175 != 0u;
    bool _178 = _125.w == 0u;
    bool _179 = _176 || _178;
    uint _180 = _174 * _166;
    uint _181 = _180 + 12u;
    uint _205;
    uint _206;
    uint _207;
    uint _208;
    if (_179)
    {
        uvec4 _184 = texelFetch(l_geomAttrib_0, int(_181 >> 2u));
        uint _185 = _184.x;
        _205 = _185 & 255u;
        _206 = (_185 >> 8u) & 255u;
        _207 = (_185 >> 16u) & 255u;
        _208 = 16u;
    }
    else
    {
        uint _193 = _181 >> 2u;
        uvec2 _199 = uvec2(texelFetch(l_geomAttrib_0, int(_193)).x, texelFetch(l_geomAttrib_0, int(_193 + 1u)).x);
        uint _200 = _199.x;
        _205 = _200 & 65535u;
        _206 = _200 >> 16u;
        _207 = _199.y & 65535u;
        _208 = 20u;
    }
    uvec4 _216 = texelFetch(l_geomAttrib_0, int((_208 + _180) >> 2u));
    uint _217 = _216.x;
    bool _231 = _175 == 0u;
    uint _232;
    if (_231)
    {
        _232 = _208 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_178)
        {
            frontier_phi_9_10_ladder = _208 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _208 + 12u;
        }
        _232 = frontier_phi_9_10_ladder;
    }
    uint _236 = _176 ? (_232 + 4u) : _232;
    uvec4 _240 = texelFetch(l_geomAttrib_0, int(((_180 + 4u) + _236) >> 2u));
    uint _241 = _240.x;
    float _245 = float(int(uint(int(_241 << 16u) >> int(16u))));
    float _246 = float(int(uint(int(_241) >> int(16u))));
    uint _254 = _174 * _168;
    uint _255 = _254 + 12u;
    uint _276;
    uint _277;
    uint _278;
    uint _279;
    if (_179)
    {
        uvec4 _257 = texelFetch(l_geomAttrib_0, int(_255 >> 2u));
        uint _258 = _257.x;
        _276 = _258 & 255u;
        _277 = (_258 >> 8u) & 255u;
        _278 = (_258 >> 16u) & 255u;
        _279 = 16u;
    }
    else
    {
        uint _264 = _255 >> 2u;
        uvec2 _270 = uvec2(texelFetch(l_geomAttrib_0, int(_264)).x, texelFetch(l_geomAttrib_0, int(_264 + 1u)).x);
        uint _271 = _270.x;
        _276 = _271 & 65535u;
        _277 = _271 >> 16u;
        _278 = _270.y & 65535u;
        _279 = 20u;
    }
    uvec4 _285 = texelFetch(l_geomAttrib_0, int((_279 + _254) >> 2u));
    uint _286 = _285.x;
    uint _298;
    if (_231)
    {
        _298 = _279 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_178)
        {
            frontier_phi_16_17_ladder = _279 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _279 + 12u;
        }
        _298 = frontier_phi_16_17_ladder;
    }
    uint _302 = _176 ? (_298 + 4u) : _298;
    uvec4 _306 = texelFetch(l_geomAttrib_0, int(((_254 + 4u) + _302) >> 2u));
    uint _307 = _306.x;
    float _311 = float(int(uint(int(_307 << 16u) >> int(16u))));
    float _312 = float(int(uint(int(_307) >> int(16u))));
    uint _320 = _174 * _169;
    uint _321 = _320 + 12u;
    uint _342;
    uint _343;
    uint _344;
    uint _345;
    if (_179)
    {
        uvec4 _323 = texelFetch(l_geomAttrib_0, int(_321 >> 2u));
        uint _324 = _323.x;
        _342 = _324 & 255u;
        _343 = (_324 >> 8u) & 255u;
        _344 = (_324 >> 16u) & 255u;
        _345 = 16u;
    }
    else
    {
        uint _330 = _321 >> 2u;
        uvec2 _336 = uvec2(texelFetch(l_geomAttrib_0, int(_330)).x, texelFetch(l_geomAttrib_0, int(_330 + 1u)).x);
        uint _337 = _336.x;
        _342 = _337 & 65535u;
        _343 = _337 >> 16u;
        _344 = _336.y & 65535u;
        _345 = 20u;
    }
    uvec4 _351 = texelFetch(l_geomAttrib_0, int((_345 + _320) >> 2u));
    uint _352 = _351.x;
    uint _364;
    if (_231)
    {
        _364 = _345 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_178)
        {
            frontier_phi_23_24_ladder = _345 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _345 + 12u;
        }
        _364 = frontier_phi_23_24_ladder;
    }
    uint _368 = _176 ? (_364 + 4u) : _364;
    uvec4 _372 = texelFetch(l_geomAttrib_0, int(((_320 + 4u) + _368) >> 2u));
    uint _373 = _372.x;
    float _377 = float(int(uint(int(_373 << 16u) >> int(16u))));
    float _378 = float(int(uint(int(_373) >> int(16u))));
    bool _387 = _125.z == 0u;
    float _423;
    float _424;
    float _425;
    if (_387)
    {
        uint _390 = _166 * 3u;
        uvec3 _399 = uvec3(texelFetch(l_geomPositionBuffer, int(_390)).x, texelFetch(l_geomPositionBuffer, int(_390 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_390 + 2u)).x);
        _423 = uintBitsToFloat(_399.x);
        _424 = uintBitsToFloat(_399.y);
        _425 = uintBitsToFloat(_399.z);
    }
    else
    {
        uint _407 = _166 * 2u;
        uvec2 _413 = uvec2(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x);
        uint _414 = _413.x;
        _423 = unpackHalf2x16(_414).x;
        _424 = unpackHalf2x16(_414 >> 16u).x;
        _425 = unpackHalf2x16(_413.y).x;
    }
    float _461;
    float _462;
    float _463;
    if (_387)
    {
        uint _428 = _168 * 3u;
        uvec3 _437 = uvec3(texelFetch(l_geomPositionBuffer, int(_428)).x, texelFetch(l_geomPositionBuffer, int(_428 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_428 + 2u)).x);
        _461 = uintBitsToFloat(_437.x);
        _462 = uintBitsToFloat(_437.y);
        _463 = uintBitsToFloat(_437.z);
    }
    else
    {
        uint _445 = _168 * 2u;
        uvec2 _451 = uvec2(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x);
        uint _452 = _451.x;
        _461 = unpackHalf2x16(_452).x;
        _462 = unpackHalf2x16(_452 >> 16u).x;
        _463 = unpackHalf2x16(_451.y).x;
    }
    float _499;
    float _500;
    float _501;
    if (_387)
    {
        uint _466 = _169 * 3u;
        uvec3 _475 = uvec3(texelFetch(l_geomPositionBuffer, int(_466)).x, texelFetch(l_geomPositionBuffer, int(_466 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_466 + 2u)).x);
        _499 = uintBitsToFloat(_475.x);
        _500 = uintBitsToFloat(_475.y);
        _501 = uintBitsToFloat(_475.z);
    }
    else
    {
        uint _483 = _169 * 2u;
        uvec2 _489 = uvec2(texelFetch(l_geomPositionBuffer, int(_483)).x, texelFetch(l_geomPositionBuffer, int(_483 + 1u)).x);
        uint _490 = _489.x;
        _499 = unpackHalf2x16(_490).x;
        _500 = unpackHalf2x16(_490 >> 16u).x;
        _501 = unpackHalf2x16(_489.y).x;
    }
    float _504 = (1.0 - hit._m0.x) - hit._m0.y;
    float _545 = (_311 - _245) * 0.00048828125;
    float _547 = (_312 - _246) * 0.00048828125;
    float _550 = (_377 - _245) * 0.00048828125;
    float _551 = (_378 - _246) * 0.00048828125;
    float _573 = _461 - _423;
    float _574 = _462 - _424;
    float _575 = _463 - _425;
    float _578 = fma(_575, gl_ObjectToWorldEXT[2u].x, fma(_574, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _573));
    float _581 = fma(_575, gl_ObjectToWorldEXT[2u].y, fma(_574, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _573));
    float _584 = fma(_575, gl_ObjectToWorldEXT[2u].z, fma(_574, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _573));
    float _585 = _499 - _423;
    float _586 = _500 - _424;
    float _587 = _501 - _425;
    float _590 = fma(_587, gl_ObjectToWorldEXT[2u].x, fma(_586, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _585));
    float _593 = fma(_587, gl_ObjectToWorldEXT[2u].y, fma(_586, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _585));
    float _596 = fma(_587, gl_ObjectToWorldEXT[2u].z, fma(_586, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _585));
    float _597 = (((_311 * hit._m0.x) + (_245 * _504)) + (_377 * hit._m0.y)) * 0.00048828125;
    float _598 = (((_312 * hit._m0.x) + (_246 * _504)) + (_378 * hit._m0.y)) * 0.00048828125;
    float _602 = (((float(_205) * _504) + (-127.0)) + (float(_276) * hit._m0.x)) + (float(_342) * hit._m0.y);
    float _605 = (((float(_206) * _504) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_343) * hit._m0.y);
    float _608 = (((float(_207) * _504) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_344) * hit._m0.y);
    float _609 = _602 * 0.0078740157186985015869140625;
    float _611 = _605 * 0.0078740157186985015869140625;
    float _612 = _608 * 0.0078740157186985015869140625;
    float _625 = ((((float(_217 & 255u) * _504) + (-127.0)) + (float(_286 & 255u) * hit._m0.x)) + (float(_352 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _626 = ((((float((_217 >> 8u) & 255u) * _504) + (-127.0)) + (float((_286 >> 8u) & 255u) * hit._m0.x)) + (float((_352 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _627 = ((((float((_217 >> 16u) & 255u) * _504) + (-127.0)) + (float((_286 >> 16u) & 255u) * hit._m0.x)) + (float((_352 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _628 = ((((float(_217 >> 24u) * _504) + (-127.0)) + (float(_286 >> 24u) * hit._m0.x)) + (float(_352 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _638 = ((_626 * _612) - (_627 * _611)) * _628;
    float _639 = ((_627 * _609) - (_625 * _612)) * _628;
    float _640 = ((_625 * _611) - (_626 * _609)) * _628;
    float _644 = inversesqrt(dot(vec3(_638, _639, _640), vec3(_638, _639, _640)));
    uvec2 _662 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_4, int(0u)));
    bool _667 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _720;
    if (_667)
    {
        float _678 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _684 = (_596 * _581) - (_593 * _584);
        float _687 = (_590 * _584) - (_596 * _578);
        float _690 = (_593 * _578) - (_590 * _581);
        float _717 = ((log2((((float(_662.y) * 0.5) * float(_662.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_687 * _687) + (_690 * _690)) + (_684 * _684)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_678 * gl_WorldRayDirectionEXT.x, _678 * gl_WorldRayDirectionEXT.y, _678 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _720 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    }
    else
    {
        _720 = 0.0;
    }
    float _738 = ((cbMtdParam._m0[9u].x * (-1.39999997615814208984375)) * ((textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _597) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _598) + cbTextureTilingScale._m0[4u].w), _720).x + (-1.0)) + ((((1.0 - ((_504 * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_180 + 8u) + _236) >> 2u)).x & 255u))) - ((hit._m0.x * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_254 + 8u) + _302) >> 2u)).x & 255u))) - ((hit._m0.y * 0.0039215688593685626983642578125) * float(texelFetch(l_geomAttrib_0, int(((_320 + 8u) + _368) >> 2u)).x & 255u))) * 2.0))) + 1.0;
    float _1686 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _739 = isnan(1.0) ? _1686 : (isnan(_1686) ? 1.0 : min(_1686, 1.0));
    uvec2 _751 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_2, int(0u)));
    float _802;
    if (_667)
    {
        float _762 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _768 = (_596 * _581) - (_593 * _584);
        float _771 = (_590 * _584) - (_596 * _578);
        float _774 = (_593 * _578) - (_590 * _581);
        float _800 = ((log2((((float(_751.y) * 0.5) * float(_751.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_771 * _771) + (_774 * _774)) + (_768 * _768)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_762 * gl_WorldRayDirectionEXT.x, _762 * gl_WorldRayDirectionEXT.y, _762 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _802 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    }
    else
    {
        _802 = 0.0;
    }
    vec4 _805 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _597) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _598) + cbTextureTilingScale._m0[2u].w), _802);
    float _807 = _805.x;
    float _808 = _805.y;
    float _809 = _805.z;
    uvec2 _821 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_3, int(0u)));
    float _872;
    if (_667)
    {
        float _832 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _838 = (_596 * _581) - (_593 * _584);
        float _841 = (_590 * _584) - (_596 * _578);
        float _844 = (_593 * _578) - (_590 * _581);
        float _870 = ((log2((((float(_821.y) * 0.5) * float(_821.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_841 * _841) + (_844 * _844)) + (_838 * _838)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_832 * gl_WorldRayDirectionEXT.x, _832 * gl_WorldRayDirectionEXT.y, _832 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _872 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    }
    else
    {
        _872 = 0.0;
    }
    vec4 _874 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _597) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _598) + cbTextureTilingScale._m0[3u].w), _872);
    float _885 = ((_874.x - _807) * _739) + _807;
    float _886 = ((_874.y - _808) * _739) + _808;
    float _887 = ((_874.z - _809) * _739) + _809;
    uvec2 _899 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _950;
    if (_667)
    {
        float _910 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _916 = (_596 * _581) - (_593 * _584);
        float _919 = (_590 * _584) - (_596 * _578);
        float _922 = (_593 * _578) - (_590 * _581);
        float _948 = ((log2((((float(_899.y) * 0.5) * float(_899.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_919 * _919) + (_922 * _922)) + (_916 * _916)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_910 * gl_WorldRayDirectionEXT.x, _910 * gl_WorldRayDirectionEXT.y, _910 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _950 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
    }
    else
    {
        _950 = 0.0;
    }
    vec4 _952 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _597) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _598) + cbTextureTilingScale._m0[6u].w), _950);
    float _954 = _952.x;
    float _955 = _952.y;
    float _956 = _952.z;
    float _964 = exp2(log2(_954) * 0.453999996185302734375);
    float _965 = exp2(log2(_955) * 0.453999996185302734375);
    float _966 = exp2(log2(_956) * 0.453999996185302734375);
    float _981 = (((_964 + (-0.5)) * (_954 - _885)) * cbMtdParam._m0[9u].z) + _885;
    float _982 = (((_965 + (-0.5)) * (_955 - _886)) * cbMtdParam._m0[9u].z) + _886;
    float _983 = (((_966 + (-0.5)) * (_956 - _887)) * cbMtdParam._m0[9u].z) + _887;
    float _996 = ((cbMtdParam._m0[9u].z * (0.5 - _964)) * (_954 - _981)) + _981;
    float _997 = ((cbMtdParam._m0[9u].z * (0.5 - _965)) * (_955 - _982)) + _982;
    float _998 = ((cbMtdParam._m0[9u].z * (0.5 - _966)) * (_956 - _983)) + _983;
    uvec2 _1010 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_0, int(0u)));
    float _1061;
    if (_667)
    {
        float _1021 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1027 = (_596 * _581) - (_593 * _584);
        float _1030 = (_590 * _584) - (_596 * _578);
        float _1033 = (_593 * _578) - (_590 * _581);
        float _1059 = ((log2((((float(_1010.y) * 0.5) * float(_1010.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_1030 * _1030) + (_1033 * _1033)) + (_1027 * _1027)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1021 * gl_WorldRayDirectionEXT.x, _1021 * gl_WorldRayDirectionEXT.y, _1021 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1061 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    }
    else
    {
        _1061 = 0.0;
    }
    vec4 _1064 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _597) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _598) + cbTextureTilingScale._m0[0u].w), _1061);
    float _1066 = _1064.x;
    float _1067 = _1064.y;
    float _1068 = _1064.z;
    uvec2 _1080 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_1, int(0u)));
    float _1131;
    if (_667)
    {
        float _1091 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1097 = (_596 * _581) - (_593 * _584);
        float _1100 = (_590 * _584) - (_596 * _578);
        float _1103 = (_593 * _578) - (_590 * _581);
        float _1129 = ((log2((((float(_1080.y) * 0.5) * float(_1080.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_1100 * _1100) + (_1103 * _1103)) + (_1097 * _1097)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1091 * gl_WorldRayDirectionEXT.x, _1091 * gl_WorldRayDirectionEXT.y, _1091 * gl_WorldRayDirectionEXT.z), vec3(_609, _611, _612))));
        _1131 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    }
    else
    {
        _1131 = 0.0;
    }
    vec4 _1133 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _597) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _598) + cbTextureTilingScale._m0[1u].w), _1131);
    float _1146 = ((_1133.z - _1068) * _739) + _1068;
    float _1149 = ((((_1133.x - _1066) * _739) + _1066) * 2.0) + (-1.0);
    float _1150 = ((((_1133.y - _1067) * _739) + _1067) * 2.0) + (-1.0);
    float _1151 = dot(vec2(_1149, _1150), vec2(_1149, _1150));
    float _1722 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    float _1156 = sqrt(1.0 - (isnan(1.0) ? _1722 : (isnan(_1722) ? 1.0 : min(_1722, 1.0))));
    uvec2 _1170 = uvec2(textureSize(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_5, int(0u)));
    float _1174 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1175 = _1174 * gl_WorldRayDirectionEXT.x;
    float _1176 = _1174 * gl_WorldRayDirectionEXT.y;
    float _1177 = _1174 * gl_WorldRayDirectionEXT.z;
    float _1221;
    if (_667)
    {
        float _1187 = (_596 * _581) - (_593 * _584);
        float _1190 = (_590 * _584) - (_596 * _578);
        float _1193 = (_593 * _578) - (_590 * _581);
        float _1219 = ((log2((((float(_1170.y) * 0.5) * float(_1170.x)) * abs((_551 * _545) - (_550 * _547))) / (sqrt(((_1190 * _1190) + (_1193 * _1193)) + (_1187 * _1187)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_114) / abs(dot(vec3(_1175, _1176, _1177), vec3(_609, _611, _612))));
        _1221 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
    }
    else
    {
        _1221 = 0.0;
    }
    vec4 _1223 = textureLod(sampler2D(M_AMSN_V_Mb2_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _597) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _598) + cbTextureTilingScale._m0[5u].w), _1221);
    float _1233 = (((_1223.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y) + _1149;
    float _1234 = (((_1223.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y) + _1150;
    float _1237 = fma(_1156, _609, fma(_1234, _625, (_644 * _638) * _1233));
    float _1240 = fma(_1156, _611, fma(_1234, _626, (_644 * _639) * _1233));
    float _1243 = fma(_1156, _612, fma(_1234, _627, (_644 * _640) * _1233));
    float _1247 = inversesqrt(dot(vec3(_1237, _1240, _1243), vec3(_1237, _1240, _1243)));
    float _1248 = _1247 * _1237;
    float _1249 = _1247 * _1240;
    float _1250 = _1247 * _1243;
    float _1262 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1263 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1264 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1265 = (-0.0) - _1175;
    float _1267 = (-0.0) - _1176;
    float _1268 = (-0.0) - _1177;
    float _1274 = float(gl_LaunchIDEXT.x);
    float _1275 = float(gl_LaunchIDEXT.y);
    float _1278 = float(gl_LaunchSizeEXT.x);
    float _1292 = fract(fract(sin(dot(vec2(_1274 / _1278, _1275 / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1305 = fract(fract(sin(dot(vec2((_1274 + 128.0) / _1278, (_1275 + 128.0) / _75), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1315 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1316 = _1315.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1316, _1315.w, _1316, vec3(_1262, _1263, _1264), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    if (_67._m0 == 0u)
    {
        float _1336 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1248, _1249, _1250));
        float _1738 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1339 = isnan(1.0) ? _1738 : (isnan(_1738) ? 1.0 : min(_1738, 1.0));
        float _1358 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1146) * 0.949999988079071044921875);
        float _1359 = _1358 * _1358;
        float _1360 = g_sceneCB._m0[4u].x - _1175;
        float _1361 = g_sceneCB._m0[4u].y - _1176;
        float _1362 = g_sceneCB._m0[4u].z - _1177;
        float _1366 = inversesqrt(dot(vec3(_1360, _1361, _1362), vec3(_1360, _1361, _1362)));
        float _1367 = _1366 * _1360;
        float _1368 = _1366 * _1361;
        float _1369 = _1366 * _1362;
        float _1370 = dot(vec3(_1248, _1249, _1250), vec3(g_sceneCB._m0[4u].xyz));
        float _1749 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1373 = isnan(1.0) ? _1749 : (isnan(_1749) ? 1.0 : min(_1749, 1.0));
        float _1374 = dot(vec3(_1248, _1249, _1250), vec3(_1265, _1267, _1268));
        float _1760 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1377 = isnan(1.0) ? _1760 : (isnan(_1760) ? 1.0 : min(_1760, 1.0));
        float _1378 = dot(vec3(_1248, _1249, _1250), vec3(_1367, _1368, _1369));
        float _1771 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1381 = isnan(1.0) ? _1771 : (isnan(_1771) ? 1.0 : min(_1771, 1.0));
        float _1382 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1367, _1368, _1369));
        float _1782 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = _1359 * _1359;
        float _1390 = ((_1381 * _1381) * (_1386 + (-1.0))) + 1.0;
        float _1402 = (exp2(log2(1.0 - (isnan(1.0) ? _1782 : (isnan(_1782) ? 1.0 : min(_1782, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1404 = 1.0 - _1359;
        float _1415 = (0.5 / (((_1377 * ((_1373 * _1404) + _1359)) + 9.9999999392252902907785028219223e-09) + (((_1377 * _1404) + _1359) * _1373))) * _1373;
        float _1793 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1417 = (isnan(1.0) ? _1793 : (isnan(_1793) ? 1.0 : min(_1793, 1.0))) * (_1386 / ((_1390 * _1390) * 3.141590118408203125));
        _1424 = ((_996 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1339;
        _1425 = ((_997 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1339;
        _1426 = ((_998 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1339;
        _1427 = (_1402 * g_sceneCB._m0[5u].x) * _1417;
        _1428 = (_1402 * g_sceneCB._m0[5u].y) * _1417;
        _1429 = (_1402 * g_sceneCB._m0[5u].z) * _1417;
    }
    else
    {
        _1424 = 0.0;
        _1425 = 0.0;
        _1426 = 0.0;
        _1427 = 0.0;
        _1428 = 0.0;
        _1429 = 0.0;
    }
    bool _1431 = abs(_1249) < 0.89999997615814208984375;
    float _1433 = float(_1431);
    float _1434 = _1431 ? 0.0 : 1.0;
    float _1437 = (_1433 * _1250) - (_1434 * _1249);
    float _1438 = _1434 * _1248;
    float _1440 = (-0.0) - (_1248 * _1433);
    float _1444 = inversesqrt(dot(vec3(_1437, _1438, _1440), vec3(_1437, _1438, _1440)));
    float _1445 = _1437 * _1444;
    float _1446 = _1438 * _1444;
    float _1447 = _1444 * _1440;
    float _1450 = (_1446 * _1250) - (_1447 * _1249);
    float _1453 = (_1447 * _1248) - (_1445 * _1250);
    float _1456 = (_1445 * _1249) - (_1446 * _1248);
    float _1458;
    float _1466;
    float _1457 = 0.0;
    uint _1459 = 0u;
    float _1463;
    bool _1465;
    for (;;)
    {
        _1463 = (float(_1459) + _1292) * 0.03125;
        _1465 = _1459 == 0u;
        float frontier_phi_53_pred;
        if (_1465)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1600;
            float _1601;
            uint _1603;
            _1600 = 0.0;
            _1601 = 0.5;
            _1603 = _1459;
            float _1467;
            for (;;)
            {
                _1467 = ((_1603 & 1u) != 0u) ? (_1601 + _1600) : _1600;
                uint _1604 = _1603 >> 1u;
                if (_1604 == 0u)
                {
                    break;
                }
                else
                {
                    _1600 = _1467;
                    _1601 *= 0.5;
                    _1603 = _1604;
                }
            }
            frontier_phi_53_pred = _1467;
        }
        _1466 = frontier_phi_53_pred;
        float _1468 = _1466 + _1305;
        float _1472 = sqrt(_1463);
        float _1473 = ((_1468 > 1.0) ? (_1468 + (-1.0)) : _1468) * 6.283185482025146484375;
        float _1476 = cos(_1473) * _1472;
        float _1478 = sin(_1473) * _1472;
        float _1480 = sqrt(1.0 - _1463);
        float _1493 = ((_1480 * _1248) + (_1476 * _1450)) + (_1478 * _1445);
        float _1494 = ((_1480 * _1249) + (_1476 * _1453)) + (_1478 * _1446);
        float _1495 = ((_1480 * _1250) + (_1476 * _1456)) + (_1478 * _1447);
        _66._m0 = 1u;
        uvec4 _1499 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1500 = _1499.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1500, _1499.w, _1500, vec3(_1262, _1263, _1264), 9.9999997473787516355514526367188e-05, vec3(_1493, _1494, _1495), 10000.0, 1);
        float _1506 = dot(vec3(_1248, _1249, _1250), vec3(_1493, _1494, _1495));
        float _1804 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1509 = isnan(1.0) ? _1804 : (isnan(_1804) ? 1.0 : min(_1804, 1.0));
        _1458 = ((float(_66._m0 == 0u) * _1509) / (_1509 * 0.3183098733425140380859375)) + _1457;
        uint _1460 = _1459 + 1u;
        if (_1460 == 32u)
        {
            break;
        }
        else
        {
            _1457 = _1458;
            _1459 = _1460;
            continue;
        }
    }
    float _1517 = _1458 * 0.009947183541953563690185546875;
    float _1522 = dot(vec3(_1175, _1176, _1177), vec3(_1248, _1249, _1250)) * 2.0;
    vec4 _1536 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1175 - (_1522 * _1248), _1176 - (_1522 * _1249), _1177 - (_1522 * _1250)), 4.0 - (_1146 * 4.0));
    float _1541 = dot(vec3(_1265, _1267, _1268), vec3(_1248, _1249, _1250));
    float _1815 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
    float _1550 = (exp2(log2(1.0 - (isnan(1.0) ? _1815 : (isnan(_1815) ? 1.0 : min(_1815, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1556 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1248, _1249, _1250), 0.0);
    float _1567 = (_1427 + _1424) + (((_1556.x * _996) + (_1550 * _1536.x)) * _1517);
    float _1571 = (_1428 + _1425) + (((_1556.y * _997) + (_1550 * _1536.y)) * _1517);
    float _1575 = (_1429 + _1426) + (((_1556.z * _998) + (_1550 * _1536.z)) * _1517);
    float _1826 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
    float _1837 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1848 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
    bool _1583 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1594;
    _1594.x = _1583 ? ((_602 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1826 : (isnan(_1826) ? 1.0 : min(_1826, 1.0)));
    _1594.y = _1583 ? ((_605 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1837 : (isnan(_1837) ? 1.0 : min(_1837, 1.0)));
    _1594.z = _1583 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1848 : (isnan(_1848) ? 1.0 : min(_1848, 1.0)));
    payload._m0 = _1594;
}


