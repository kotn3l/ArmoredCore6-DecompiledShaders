#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1526;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    bool _239 = _183 == 0u;
    uint _240;
    if (_239)
    {
        _240 = _216 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _216 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _216 + 12u;
        }
        _240 = frontier_phi_9_10_ladder;
    }
    uvec4 _248 = texelFetch(l_geomAttrib_0, int(((_188 + 4u) + (_184 ? (_240 + 4u) : _240)) >> 2u));
    uint _249 = _248.x;
    float _253 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _254 = float(int(uint(int(_249) >> int(16u))));
    uint _255 = _182 * _176;
    uint _256 = _255 + 12u;
    uint _277;
    uint _278;
    uint _279;
    uint _280;
    if (_187)
    {
        uvec4 _258 = texelFetch(l_geomAttrib_0, int(_256 >> 2u));
        uint _259 = _258.x;
        _277 = _259 & 255u;
        _278 = (_259 >> 8u) & 255u;
        _279 = (_259 >> 16u) & 255u;
        _280 = 16u;
    }
    else
    {
        uint _265 = _256 >> 2u;
        uvec2 _271 = uvec2(texelFetch(l_geomAttrib_0, int(_265)).x, texelFetch(l_geomAttrib_0, int(_265 + 1u)).x);
        uint _272 = _271.x;
        _277 = _272 & 65535u;
        _278 = _272 >> 16u;
        _279 = _271.y & 65535u;
        _280 = 20u;
    }
    uvec4 _286 = texelFetch(l_geomAttrib_0, int((_280 + _255) >> 2u));
    uint _287 = _286.x;
    uint _299;
    if (_239)
    {
        _299 = _280 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _280 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _280 + 12u;
        }
        _299 = frontier_phi_16_17_ladder;
    }
    uvec4 _307 = texelFetch(l_geomAttrib_0, int(((_255 + 4u) + (_184 ? (_299 + 4u) : _299)) >> 2u));
    uint _308 = _307.x;
    float _312 = float(int(uint(int(_308 << 16u) >> int(16u))));
    float _313 = float(int(uint(int(_308) >> int(16u))));
    uint _314 = _182 * _177;
    uint _315 = _314 + 12u;
    uint _336;
    uint _337;
    uint _338;
    uint _339;
    if (_187)
    {
        uvec4 _317 = texelFetch(l_geomAttrib_0, int(_315 >> 2u));
        uint _318 = _317.x;
        _336 = _318 & 255u;
        _337 = (_318 >> 8u) & 255u;
        _338 = (_318 >> 16u) & 255u;
        _339 = 16u;
    }
    else
    {
        uint _324 = _315 >> 2u;
        uvec2 _330 = uvec2(texelFetch(l_geomAttrib_0, int(_324)).x, texelFetch(l_geomAttrib_0, int(_324 + 1u)).x);
        uint _331 = _330.x;
        _336 = _331 & 65535u;
        _337 = _331 >> 16u;
        _338 = _330.y & 65535u;
        _339 = 20u;
    }
    uvec4 _345 = texelFetch(l_geomAttrib_0, int((_339 + _314) >> 2u));
    uint _346 = _345.x;
    uint _358;
    if (_239)
    {
        _358 = _339 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _339 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _339 + 12u;
        }
        _358 = frontier_phi_23_24_ladder;
    }
    uvec4 _366 = texelFetch(l_geomAttrib_0, int(((_314 + 4u) + (_184 ? (_358 + 4u) : _358)) >> 2u));
    uint _367 = _366.x;
    float _371 = float(int(uint(int(_367 << 16u) >> int(16u))));
    float _372 = float(int(uint(int(_367) >> int(16u))));
    bool _374 = _133.z == 0u;
    float _410;
    float _411;
    float _412;
    if (_374)
    {
        uint _377 = _174 * 3u;
        uvec3 _386 = uvec3(texelFetch(l_geomPositionBuffer, int(_377)).x, texelFetch(l_geomPositionBuffer, int(_377 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_377 + 2u)).x);
        _410 = uintBitsToFloat(_386.x);
        _411 = uintBitsToFloat(_386.y);
        _412 = uintBitsToFloat(_386.z);
    }
    else
    {
        uint _394 = _174 * 2u;
        uvec2 _400 = uvec2(texelFetch(l_geomPositionBuffer, int(_394)).x, texelFetch(l_geomPositionBuffer, int(_394 + 1u)).x);
        uint _401 = _400.x;
        _410 = unpackHalf2x16(_401).x;
        _411 = unpackHalf2x16(_401 >> 16u).x;
        _412 = unpackHalf2x16(_400.y).x;
    }
    float _448;
    float _449;
    float _450;
    if (_374)
    {
        uint _415 = _176 * 3u;
        uvec3 _424 = uvec3(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_415 + 2u)).x);
        _448 = uintBitsToFloat(_424.x);
        _449 = uintBitsToFloat(_424.y);
        _450 = uintBitsToFloat(_424.z);
    }
    else
    {
        uint _432 = _176 * 2u;
        uvec2 _438 = uvec2(texelFetch(l_geomPositionBuffer, int(_432)).x, texelFetch(l_geomPositionBuffer, int(_432 + 1u)).x);
        uint _439 = _438.x;
        _448 = unpackHalf2x16(_439).x;
        _449 = unpackHalf2x16(_439 >> 16u).x;
        _450 = unpackHalf2x16(_438.y).x;
    }
    float _486;
    float _487;
    float _488;
    if (_374)
    {
        uint _453 = _177 * 3u;
        uvec3 _462 = uvec3(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_453 + 2u)).x);
        _486 = uintBitsToFloat(_462.x);
        _487 = uintBitsToFloat(_462.y);
        _488 = uintBitsToFloat(_462.z);
    }
    else
    {
        uint _470 = _177 * 2u;
        uvec2 _476 = uvec2(texelFetch(l_geomPositionBuffer, int(_470)).x, texelFetch(l_geomPositionBuffer, int(_470 + 1u)).x);
        uint _477 = _476.x;
        _486 = unpackHalf2x16(_477).x;
        _487 = unpackHalf2x16(_477 >> 16u).x;
        _488 = unpackHalf2x16(_476.y).x;
    }
    float _491 = (1.0 - hit._m0.x) - hit._m0.y;
    float _525 = (_312 - _253) * 0.00048828125;
    float _527 = (_313 - _254) * 0.00048828125;
    float _530 = (_371 - _253) * 0.00048828125;
    float _531 = (_372 - _254) * 0.00048828125;
    float _553 = _448 - _410;
    float _554 = _449 - _411;
    float _555 = _450 - _412;
    float _558 = fma(_555, gl_ObjectToWorldEXT[2u].x, fma(_554, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _553));
    float _561 = fma(_555, gl_ObjectToWorldEXT[2u].y, fma(_554, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _553));
    float _564 = fma(_555, gl_ObjectToWorldEXT[2u].z, fma(_554, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _553));
    float _565 = _486 - _410;
    float _566 = _487 - _411;
    float _567 = _488 - _412;
    float _570 = fma(_567, gl_ObjectToWorldEXT[2u].x, fma(_566, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _565));
    float _573 = fma(_567, gl_ObjectToWorldEXT[2u].y, fma(_566, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _565));
    float _576 = fma(_567, gl_ObjectToWorldEXT[2u].z, fma(_566, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _565));
    float _577 = (((_312 * hit._m0.x) + (_253 * _491)) + (_371 * hit._m0.y)) * 0.00048828125;
    float _578 = (((_313 * hit._m0.x) + (_254 * _491)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _582 = (((float(_213) * _491) + (-127.0)) + (float(_277) * hit._m0.x)) + (float(_336) * hit._m0.y);
    float _585 = (((float(_214) * _491) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _588 = (((float(_215) * _491) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _589 = _582 * 0.0078740157186985015869140625;
    float _591 = _585 * 0.0078740157186985015869140625;
    float _592 = _588 * 0.0078740157186985015869140625;
    float _605 = ((((float(_225 & 255u) * _491) + (-127.0)) + (float(_287 & 255u) * hit._m0.x)) + (float(_346 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _606 = ((((float((_225 >> 8u) & 255u) * _491) + (-127.0)) + (float((_287 >> 8u) & 255u) * hit._m0.x)) + (float((_346 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float((_225 >> 16u) & 255u) * _491) + (-127.0)) + (float((_287 >> 16u) & 255u) * hit._m0.x)) + (float((_346 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _608 = ((((float(_225 >> 24u) * _491) + (-127.0)) + (float(_287 >> 24u) * hit._m0.x)) + (float(_346 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _618 = ((_606 * _592) - (_607 * _591)) * _608;
    float _619 = ((_607 * _589) - (_605 * _592)) * _608;
    float _620 = ((_605 * _591) - (_606 * _589)) * _608;
    float _624 = inversesqrt(dot(vec3(_618, _619, _620), vec3(_618, _619, _620)));
    uvec2 _639 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, int(0u)));
    bool _644 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _697;
    if (_644)
    {
        float _655 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _661 = (_576 * _561) - (_573 * _564);
        float _664 = (_570 * _564) - (_576 * _558);
        float _667 = (_573 * _558) - (_570 * _561);
        float _694 = ((log2((((float(_639.y) * 0.5) * float(_639.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_664 * _664) + (_667 * _667)) + (_661 * _661)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_655 * gl_WorldRayDirectionEXT.x, _655 * gl_WorldRayDirectionEXT.y, _655 * gl_WorldRayDirectionEXT.z), vec3(_589, _591, _592))));
        _697 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    }
    else
    {
        _697 = 0.0;
    }
    vec4 _701 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _577) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _578) + cbTextureTilingScale._m0[2u].w), _697);
    uvec2 _717 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, int(0u)));
    float _768;
    if (_644)
    {
        float _728 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _734 = (_576 * _561) - (_573 * _564);
        float _737 = (_570 * _564) - (_576 * _558);
        float _740 = (_573 * _558) - (_570 * _561);
        float _766 = ((log2((((float(_717.y) * 0.5) * float(_717.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_737 * _737) + (_740 * _740)) + (_734 * _734)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_728 * gl_WorldRayDirectionEXT.x, _728 * gl_WorldRayDirectionEXT.y, _728 * gl_WorldRayDirectionEXT.z), vec3(_589, _591, _592))));
        _768 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    }
    else
    {
        _768 = 0.0;
    }
    vec4 _771 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _577) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _578) + cbTextureTilingScale._m0[0u].w), _768);
    uvec2 _793 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, int(0u)));
    float _844;
    if (_644)
    {
        float _804 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _810 = (_576 * _561) - (_573 * _564);
        float _813 = (_570 * _564) - (_576 * _558);
        float _816 = (_573 * _558) - (_570 * _561);
        float _842 = ((log2((((float(_793.y) * 0.5) * float(_793.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_813 * _813) + (_816 * _816)) + (_810 * _810)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_804 * gl_WorldRayDirectionEXT.x, _804 * gl_WorldRayDirectionEXT.y, _804 * gl_WorldRayDirectionEXT.z), vec3(_589, _591, _592))));
        _844 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    }
    else
    {
        _844 = 0.0;
    }
    vec4 _846 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _577) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _578) + cbTextureTilingScale._m0[1u].w), _844);
    float _854 = ((_771.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _846.x;
    float _857 = ((_771.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _846.y;
    float _860 = ((_771.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _846.z;
    uvec2 _872 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, int(0u)));
    float _923;
    if (_644)
    {
        float _883 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _889 = (_576 * _561) - (_573 * _564);
        float _892 = (_570 * _564) - (_576 * _558);
        float _895 = (_573 * _558) - (_570 * _561);
        float _921 = ((log2((((float(_872.y) * 0.5) * float(_872.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_892 * _892) + (_895 * _895)) + (_889 * _889)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_883 * gl_WorldRayDirectionEXT.x, _883 * gl_WorldRayDirectionEXT.y, _883 * gl_WorldRayDirectionEXT.z), vec3(_589, _591, _592))));
        _923 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    }
    else
    {
        _923 = 0.0;
    }
    float _932 = cbMtdParam._m0[16u].x + textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _577) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _578) + cbTextureTilingScale._m0[7u].w), _923).x;
    uvec2 _945 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, int(0u)));
    float _996;
    if (_644)
    {
        float _956 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _962 = (_576 * _561) - (_573 * _564);
        float _965 = (_570 * _564) - (_576 * _558);
        float _968 = (_573 * _558) - (_570 * _561);
        float _994 = ((log2((((float(_945.y) * 0.5) * float(_945.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_965 * _965) + (_968 * _968)) + (_962 * _962)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_956 * gl_WorldRayDirectionEXT.x, _956 * gl_WorldRayDirectionEXT.y, _956 * gl_WorldRayDirectionEXT.z), vec3(_589, _591, _592))));
        _996 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    }
    else
    {
        _996 = 0.0;
    }
    vec4 _998 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _577) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _578) + cbTextureTilingScale._m0[10u].w), _996);
    float _1008 = (cbMtdParam._m0[14u].x + _998.z) * _701.z;
    float _1026 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1635 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _1027 = isnan(1.0) ? _1635 : (isnan(_1635) ? 1.0 : min(_1635, 1.0));
    float _1032 = (_1027 * _1027) * (3.0 - (_1027 * 2.0));
    uvec2 _1044 = uvec2(textureSize(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, int(0u)));
    float _1048 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1049 = _1048 * gl_WorldRayDirectionEXT.x;
    float _1050 = _1048 * gl_WorldRayDirectionEXT.y;
    float _1051 = _1048 * gl_WorldRayDirectionEXT.z;
    float _1095;
    if (_644)
    {
        float _1061 = (_576 * _561) - (_573 * _564);
        float _1064 = (_570 * _564) - (_576 * _558);
        float _1067 = (_573 * _558) - (_570 * _561);
        float _1093 = ((log2((((float(_1044.y) * 0.5) * float(_1044.x)) * abs((_531 * _525) - (_530 * _527))) / (sqrt(((_1064 * _1064) + (_1067 * _1067)) + (_1061 * _1061)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1049, _1050, _1051), vec3(_589, _591, _592))));
        _1095 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
    }
    else
    {
        _1095 = 0.0;
    }
    vec4 _1097 = textureLod(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _577) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _578) + cbTextureTilingScale._m0[4u].w), _1095);
    float _1117 = (_701.x * 2.0) + (-1.0);
    float _1118 = (_701.y * 2.0) + (-1.0);
    float _1119 = dot(vec2(_1117, _1118), vec2(_1117, _1118));
    float _1651 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _1124 = sqrt(1.0 - (isnan(1.0) ? _1651 : (isnan(_1651) ? 1.0 : min(_1651, 1.0))));
    float _1131 = (cbMtdParam._m0[14u].z * ((_998.x * 2.0) + (-1.0))) + _1117;
    float _1132 = (cbMtdParam._m0[14u].z * ((_998.y * 2.0) + (-1.0))) + _1118;
    float _1135 = fma(_1124, _589, fma(_1132, _605, (_624 * _618) * _1131));
    float _1138 = fma(_1124, _591, fma(_1132, _606, (_624 * _619) * _1131));
    float _1141 = fma(_1124, _592, fma(_1132, _607, (_624 * _620) * _1131));
    float _1145 = inversesqrt(dot(vec3(_1135, _1138, _1141), vec3(_1135, _1138, _1141)));
    float _1146 = _1145 * _1135;
    float _1147 = _1145 * _1138;
    float _1148 = _1145 * _1141;
    float _1160 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1161 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1162 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1163 = (-0.0) - _1049;
    float _1165 = (-0.0) - _1050;
    float _1166 = (-0.0) - _1051;
    float _1172 = float(gl_LaunchIDEXT.x);
    float _1173 = float(gl_LaunchIDEXT.y);
    float _1176 = float(gl_LaunchSizeEXT.x);
    float _1190 = fract(fract(sin(dot(vec2(_1172 / _1176, _1173 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1203 = fract(fract(sin(dot(vec2((_1172 + 128.0) / _1176, (_1173 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1204 = 1.0 - _932;
    float _1205 = _1204 * _854;
    float _1206 = _1204 * _857;
    float _1207 = _1204 * _860;
    float _1212 = _932 * (_854 + (-0.039999999105930328369140625));
    float _1213 = _932 * (_857 + (-0.039999999105930328369140625));
    float _1214 = _932 * (_860 + (-0.039999999105930328369140625));
    float _1215 = _1212 + 0.039999999105930328369140625;
    float _1217 = _1213 + 0.039999999105930328369140625;
    float _1218 = _1214 + 0.039999999105930328369140625;
    _71._m0 = 1u;
    uvec4 _1228 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1229 = _1228.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1229, _1228.w, _1229, vec3(_1160, _1161, _1162), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    if (_71._m0 == 0u)
    {
        float _1250 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1146, _1147, _1148));
        float _1662 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1253 = isnan(1.0) ? _1662 : (isnan(_1662) ? 1.0 : min(_1662, 1.0));
        float _1272 = 1.0 - (sqrt((_1008 * 2.0) * (1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w))) * 0.949999988079071044921875);
        float _1273 = _1272 * _1272;
        float _1274 = g_sceneCB._m0[4u].x - _1049;
        float _1275 = g_sceneCB._m0[4u].y - _1050;
        float _1276 = g_sceneCB._m0[4u].z - _1051;
        float _1280 = inversesqrt(dot(vec3(_1274, _1275, _1276), vec3(_1274, _1275, _1276)));
        float _1281 = _1280 * _1274;
        float _1282 = _1280 * _1275;
        float _1283 = _1280 * _1276;
        float _1284 = dot(vec3(_1146, _1147, _1148), vec3(g_sceneCB._m0[4u].xyz));
        float _1673 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1287 = isnan(1.0) ? _1673 : (isnan(_1673) ? 1.0 : min(_1673, 1.0));
        float _1288 = dot(vec3(_1146, _1147, _1148), vec3(_1163, _1165, _1166));
        float _1684 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1291 = isnan(1.0) ? _1684 : (isnan(_1684) ? 1.0 : min(_1684, 1.0));
        float _1292 = dot(vec3(_1146, _1147, _1148), vec3(_1281, _1282, _1283));
        float _1695 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1295 = isnan(1.0) ? _1695 : (isnan(_1695) ? 1.0 : min(_1695, 1.0));
        float _1296 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1281, _1282, _1283));
        float _1706 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1300 = _1273 * _1273;
        float _1304 = ((_1295 * _1295) * (_1300 + (-1.0))) + 1.0;
        float _1313 = exp2(log2(1.0 - (isnan(1.0) ? _1706 : (isnan(_1706) ? 1.0 : min(_1706, 1.0)))) * 5.0);
        float _1324 = 1.0 - _1273;
        float _1335 = (0.5 / (((_1291 * ((_1287 * _1324) + _1273)) + 9.9999999392252902907785028219223e-09) + (((_1291 * _1324) + _1273) * _1287))) * _1287;
        float _1717 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
        float _1337 = (isnan(1.0) ? _1717 : (isnan(_1717) ? 1.0 : min(_1717, 1.0))) * (_1300 / ((_1304 * _1304) * 3.141590118408203125));
        _1344 = ((_1205 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1253;
        _1345 = ((_1206 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1253;
        _1346 = ((_1207 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1253;
        _1347 = (((_1313 * (0.959999978542327880859375 - _1212)) + _1215) * g_sceneCB._m0[5u].x) * _1337;
        _1348 = (((_1313 * (0.959999978542327880859375 - _1213)) + _1217) * g_sceneCB._m0[5u].y) * _1337;
        _1349 = (((_1313 * (0.959999978542327880859375 - _1214)) + _1218) * g_sceneCB._m0[5u].z) * _1337;
    }
    else
    {
        _1344 = 0.0;
        _1345 = 0.0;
        _1346 = 0.0;
        _1347 = 0.0;
        _1348 = 0.0;
        _1349 = 0.0;
    }
    bool _1351 = abs(_1147) < 0.89999997615814208984375;
    float _1353 = float(_1351);
    float _1354 = _1351 ? 0.0 : 1.0;
    float _1357 = (_1353 * _1148) - (_1354 * _1147);
    float _1358 = _1354 * _1146;
    float _1360 = (-0.0) - (_1146 * _1353);
    float _1364 = inversesqrt(dot(vec3(_1357, _1358, _1360), vec3(_1357, _1358, _1360)));
    float _1365 = _1357 * _1364;
    float _1366 = _1358 * _1364;
    float _1367 = _1364 * _1360;
    float _1370 = (_1366 * _1148) - (_1367 * _1147);
    float _1373 = (_1367 * _1146) - (_1365 * _1148);
    float _1376 = (_1365 * _1147) - (_1366 * _1146);
    float _1378;
    float _1386;
    float _1377 = 0.0;
    uint _1379 = 0u;
    float _1383;
    bool _1385;
    for (;;)
    {
        _1383 = (float(_1379) + _1190) * 0.03125;
        _1385 = _1379 == 0u;
        float frontier_phi_51_pred;
        if (_1385)
        {
            frontier_phi_51_pred = 0.0;
        }
        else
        {
            float _1531;
            float _1532;
            uint _1534;
            _1531 = 0.0;
            _1532 = 0.5;
            _1534 = _1379;
            float _1387;
            for (;;)
            {
                _1387 = ((_1534 & 1u) != 0u) ? (_1532 + _1531) : _1531;
                uint _1535 = _1534 >> 1u;
                if (_1535 == 0u)
                {
                    break;
                }
                else
                {
                    _1531 = _1387;
                    _1532 *= 0.5;
                    _1534 = _1535;
                }
            }
            frontier_phi_51_pred = _1387;
        }
        _1386 = frontier_phi_51_pred;
        float _1388 = _1386 + _1203;
        float _1392 = sqrt(_1383);
        float _1393 = ((_1388 > 1.0) ? (_1388 + (-1.0)) : _1388) * 6.283185482025146484375;
        float _1396 = cos(_1393) * _1392;
        float _1398 = sin(_1393) * _1392;
        float _1400 = sqrt(1.0 - _1383);
        float _1413 = ((_1400 * _1146) + (_1396 * _1370)) + (_1398 * _1365);
        float _1414 = ((_1400 * _1147) + (_1396 * _1373)) + (_1398 * _1366);
        float _1415 = ((_1400 * _1148) + (_1396 * _1376)) + (_1398 * _1367);
        _70._m0 = 1u;
        uvec4 _1419 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1420 = _1419.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1420, _1419.w, _1420, vec3(_1160, _1161, _1162), 9.9999997473787516355514526367188e-05, vec3(_1413, _1414, _1415), 10000.0, 1);
        float _1426 = dot(vec3(_1146, _1147, _1148), vec3(_1413, _1414, _1415));
        float _1728 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1429 = isnan(1.0) ? _1728 : (isnan(_1728) ? 1.0 : min(_1728, 1.0));
        _1378 = ((float(_70._m0 == 0u) * _1429) / (_1429 * 0.3183098733425140380859375)) + _1377;
        uint _1380 = _1379 + 1u;
        if (_1380 == 32u)
        {
            break;
        }
        else
        {
            _1377 = _1378;
            _1379 = _1380;
            continue;
        }
    }
    float _1437 = _1378 * 0.009947183541953563690185546875;
    float _1442 = dot(vec3(_1049, _1050, _1051), vec3(_1146, _1147, _1148)) * 2.0;
    vec4 _1457 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1049 - (_1442 * _1146), _1050 - (_1442 * _1147), _1051 - (_1442 * _1148)), 4.0 - (_1008 * 8.0));
    float _1462 = dot(vec3(_1163, _1165, _1166), vec3(_1146, _1147, _1148));
    float _1739 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
    float _1472 = exp2(log2(1.0 - (isnan(1.0) ? _1739 : (isnan(_1739) ? 1.0 : min(_1739, 1.0)))) * 5.0);
    vec4 _1484 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1146, _1147, _1148), 0.0);
    float _1496 = ((_1344 + ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1032) * _1097.x)) + _1347) + (((_1484.x * _1205) + (((_1472 * (0.959999978542327880859375 - _1212)) + _1215) * _1457.x)) * _1437);
    float _1501 = ((_1345 + ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1032) * _1097.y)) + _1348) + (((_1484.y * _1206) + (((_1472 * (0.959999978542327880859375 - _1213)) + _1217) * _1457.y)) * _1437);
    float _1506 = ((_1346 + ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _1032) * _1097.z)) + _1349) + (((_1484.z * _1207) + (((_1472 * (0.959999978542327880859375 - _1214)) + _1218) * _1457.z)) * _1437);
    float _1750 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
    float _1761 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    float _1772 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
    bool _1514 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1525;
    _1525.x = _1514 ? ((_582 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0)));
    _1525.y = _1514 ? ((_585 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1761 : (isnan(_1761) ? 1.0 : min(_1761, 1.0)));
    _1525.z = _1514 ? ((_588 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1772 : (isnan(_1772) ? 1.0 : min(_1772, 1.0)));
    payload._m0 = _1525;
}


