#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _57
{
    vec3 _m0;
};

struct _61
{
    vec2 _m0;
};

struct _64
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _57 payload;
hitAttributeEXT _61 hit;
layout(location = 1) rayPayloadEXT _64 _66;
layout(location = 2) rayPayloadEXT _64 _67;

vec3 _1267;

void main()
{
    float _81 = float(gl_LaunchSizeEXT.y);
    float _109 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _110 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _111 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _118 = sqrt(((_110 * _110) + (_109 * _109)) + (_111 * _111)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _81)))));
    uvec4 _129 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _130 = _129.y;
    uint _170;
    uint _172;
    uint _173;
    if (_129.x == 0u)
    {
        uint _138 = (_130 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _147 = uvec3(texelFetch(l_geomIndexBuffer, int(_138)).x, texelFetch(l_geomIndexBuffer, int(_138 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_138 + 2u)).x);
        _170 = _147.x;
        _172 = _147.y;
        _173 = _147.z;
    }
    else
    {
        uint _151 = uint(gl_PrimitiveID) * 6u;
        uint _153 = _151 & 4294967292u;
        uint _156 = (_130 + _153) >> 2u;
        uvec2 _163 = uvec2(texelFetch(l_geomIndexBuffer, int(_156)).x, texelFetch(l_geomIndexBuffer, int(_156 + 1u)).x);
        uint _164 = _163.x;
        uint _165 = _163.y;
        uint _167 = _164 >> 16u;
        uint _168 = _165 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_153 == _151)
        {
            frontier_phi_3_2_ladder = _168;
            frontier_phi_3_2_ladder_1 = _167;
            frontier_phi_3_2_ladder_2 = _164 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _165 >> 16u;
            frontier_phi_3_2_ladder_1 = _168;
            frontier_phi_3_2_ladder_2 = _167;
        }
        _170 = frontier_phi_3_2_ladder_2;
        _172 = frontier_phi_3_2_ladder_1;
        _173 = frontier_phi_3_2_ladder;
    }
    uvec4 _177 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _178 = _177.x;
    uint _179 = _177.z;
    bool _180 = _179 != 0u;
    bool _182 = _129.w == 0u;
    bool _183 = _180 || _182;
    uint _185 = (_178 * _170) + 12u;
    uint _209;
    uint _210;
    uint _211;
    uint _212;
    if (_183)
    {
        uvec4 _188 = texelFetch(l_geomAttrib_0, int(_185 >> 2u));
        uint _189 = _188.x;
        _209 = _189 & 255u;
        _210 = (_189 >> 8u) & 255u;
        _211 = (_189 >> 16u) & 255u;
        _212 = 20u;
    }
    else
    {
        uint _197 = _185 >> 2u;
        uvec2 _203 = uvec2(texelFetch(l_geomAttrib_0, int(_197)).x, texelFetch(l_geomAttrib_0, int(_197 + 1u)).x);
        uint _204 = _203.x;
        _209 = _204 & 65535u;
        _210 = _204 >> 16u;
        _211 = _203.y & 65535u;
        _212 = 24u;
    }
    bool _218 = _179 == 0u;
    uint _219;
    if (_218)
    {
        _219 = _212;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_182)
        {
            frontier_phi_9_10_ladder = _212 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _212 + 8u;
        }
        _219 = frontier_phi_9_10_ladder;
    }
    uvec4 _230 = texelFetch(l_geomAttrib_0, int((((_178 * _170) + 4u) + (_180 ? (_219 + 4u) : _219)) >> 2u));
    uint _231 = _230.x;
    float _235 = float(int(uint(int(_231 << 16u) >> int(16u))));
    float _236 = float(int(uint(int(_231) >> int(16u))));
    uint _238 = (_178 * _172) + 12u;
    uint _259;
    uint _260;
    uint _261;
    uint _262;
    if (_183)
    {
        uvec4 _240 = texelFetch(l_geomAttrib_0, int(_238 >> 2u));
        uint _241 = _240.x;
        _259 = _241 & 255u;
        _260 = (_241 >> 8u) & 255u;
        _261 = (_241 >> 16u) & 255u;
        _262 = 20u;
    }
    else
    {
        uint _247 = _238 >> 2u;
        uvec2 _253 = uvec2(texelFetch(l_geomAttrib_0, int(_247)).x, texelFetch(l_geomAttrib_0, int(_247 + 1u)).x);
        uint _254 = _253.x;
        _259 = _254 & 65535u;
        _260 = _254 >> 16u;
        _261 = _253.y & 65535u;
        _262 = 24u;
    }
    uint _266;
    if (_218)
    {
        _266 = _262;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_182)
        {
            frontier_phi_16_17_ladder = _262 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _262 + 8u;
        }
        _266 = frontier_phi_16_17_ladder;
    }
    uvec4 _275 = texelFetch(l_geomAttrib_0, int((((_178 * _172) + 4u) + (_180 ? (_266 + 4u) : _266)) >> 2u));
    uint _276 = _275.x;
    float _280 = float(int(uint(int(_276 << 16u) >> int(16u))));
    float _281 = float(int(uint(int(_276) >> int(16u))));
    uint _283 = (_178 * _173) + 12u;
    uint _304;
    uint _305;
    uint _306;
    uint _307;
    if (_183)
    {
        uvec4 _285 = texelFetch(l_geomAttrib_0, int(_283 >> 2u));
        uint _286 = _285.x;
        _304 = _286 & 255u;
        _305 = (_286 >> 8u) & 255u;
        _306 = (_286 >> 16u) & 255u;
        _307 = 20u;
    }
    else
    {
        uint _292 = _283 >> 2u;
        uvec2 _298 = uvec2(texelFetch(l_geomAttrib_0, int(_292)).x, texelFetch(l_geomAttrib_0, int(_292 + 1u)).x);
        uint _299 = _298.x;
        _304 = _299 & 65535u;
        _305 = _299 >> 16u;
        _306 = _298.y & 65535u;
        _307 = 24u;
    }
    uint _311;
    if (_218)
    {
        _311 = _307;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_182)
        {
            frontier_phi_23_24_ladder = _307 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _307 + 8u;
        }
        _311 = frontier_phi_23_24_ladder;
    }
    uvec4 _320 = texelFetch(l_geomAttrib_0, int((((_178 * _173) + 4u) + (_180 ? (_311 + 4u) : _311)) >> 2u));
    uint _321 = _320.x;
    float _325 = float(int(uint(int(_321 << 16u) >> int(16u))));
    float _326 = float(int(uint(int(_321) >> int(16u))));
    bool _328 = _129.z == 0u;
    float _364;
    float _365;
    float _366;
    if (_328)
    {
        uint _331 = _170 * 3u;
        uvec3 _340 = uvec3(texelFetch(l_geomPositionBuffer, int(_331)).x, texelFetch(l_geomPositionBuffer, int(_331 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_331 + 2u)).x);
        _364 = uintBitsToFloat(_340.x);
        _365 = uintBitsToFloat(_340.y);
        _366 = uintBitsToFloat(_340.z);
    }
    else
    {
        uint _348 = _170 * 2u;
        uvec2 _354 = uvec2(texelFetch(l_geomPositionBuffer, int(_348)).x, texelFetch(l_geomPositionBuffer, int(_348 + 1u)).x);
        uint _355 = _354.x;
        _364 = unpackHalf2x16(_355).x;
        _365 = unpackHalf2x16(_355 >> 16u).x;
        _366 = unpackHalf2x16(_354.y).x;
    }
    float _402;
    float _403;
    float _404;
    if (_328)
    {
        uint _369 = _172 * 3u;
        uvec3 _378 = uvec3(texelFetch(l_geomPositionBuffer, int(_369)).x, texelFetch(l_geomPositionBuffer, int(_369 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_369 + 2u)).x);
        _402 = uintBitsToFloat(_378.x);
        _403 = uintBitsToFloat(_378.y);
        _404 = uintBitsToFloat(_378.z);
    }
    else
    {
        uint _386 = _172 * 2u;
        uvec2 _392 = uvec2(texelFetch(l_geomPositionBuffer, int(_386)).x, texelFetch(l_geomPositionBuffer, int(_386 + 1u)).x);
        uint _393 = _392.x;
        _402 = unpackHalf2x16(_393).x;
        _403 = unpackHalf2x16(_393 >> 16u).x;
        _404 = unpackHalf2x16(_392.y).x;
    }
    float _440;
    float _441;
    float _442;
    if (_328)
    {
        uint _407 = _173 * 3u;
        uvec3 _416 = uvec3(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_407 + 2u)).x);
        _440 = uintBitsToFloat(_416.x);
        _441 = uintBitsToFloat(_416.y);
        _442 = uintBitsToFloat(_416.z);
    }
    else
    {
        uint _424 = _173 * 2u;
        uvec2 _430 = uvec2(texelFetch(l_geomPositionBuffer, int(_424)).x, texelFetch(l_geomPositionBuffer, int(_424 + 1u)).x);
        uint _431 = _430.x;
        _440 = unpackHalf2x16(_431).x;
        _441 = unpackHalf2x16(_431 >> 16u).x;
        _442 = unpackHalf2x16(_430.y).x;
    }
    float _445 = (1.0 - hit._m0.x) - hit._m0.y;
    float _467 = (_280 - _235) * 0.00048828125;
    float _469 = (_281 - _236) * 0.00048828125;
    float _472 = (_325 - _235) * 0.00048828125;
    float _473 = (_326 - _236) * 0.00048828125;
    float _495 = _402 - _364;
    float _496 = _403 - _365;
    float _497 = _404 - _366;
    float _500 = fma(_497, gl_ObjectToWorldEXT[2u].x, fma(_496, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _495));
    float _503 = fma(_497, gl_ObjectToWorldEXT[2u].y, fma(_496, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _495));
    float _506 = fma(_497, gl_ObjectToWorldEXT[2u].z, fma(_496, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _495));
    float _507 = _440 - _364;
    float _508 = _441 - _365;
    float _509 = _442 - _366;
    float _512 = fma(_509, gl_ObjectToWorldEXT[2u].x, fma(_508, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _507));
    float _515 = fma(_509, gl_ObjectToWorldEXT[2u].y, fma(_508, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _507));
    float _518 = fma(_509, gl_ObjectToWorldEXT[2u].z, fma(_508, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _507));
    float _519 = (((_280 * hit._m0.x) + (_235 * _445)) + (_325 * hit._m0.y)) * 0.00048828125;
    float _520 = (((_281 * hit._m0.x) + (_236 * _445)) + (_326 * hit._m0.y)) * 0.00048828125;
    float _524 = (((float(_209) * _445) + (-127.0)) + (float(_259) * hit._m0.x)) + (float(_304) * hit._m0.y);
    float _527 = (((float(_210) * _445) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_305) * hit._m0.y);
    float _530 = (((float(_211) * _445) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_306) * hit._m0.y);
    float _531 = _524 * 0.0078740157186985015869140625;
    float _533 = _527 * 0.0078740157186985015869140625;
    float _534 = _530 * 0.0078740157186985015869140625;
    float _549 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _552 = (_549 * cbMtdParam._m0[16u].w) + _519;
    float _553 = (_549 * cbMtdParam._m0[17u].x) + _520;
    float _573 = (cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + _519)) + cbTextureTilingScale._m0[1u].z;
    float _574 = (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _520)) + cbTextureTilingScale._m0[1u].w;
    uvec2 _576 = uvec2(textureSize(S_PC_PA_soft_snp_0_Texture2D_4, int(0u)));
    bool _581 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _634;
    if (_581)
    {
        float _592 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _598 = (_518 * _503) - (_515 * _506);
        float _601 = (_512 * _506) - (_518 * _500);
        float _604 = (_515 * _500) - (_512 * _503);
        float _631 = ((log2((((float(_576.y) * 0.5) * float(_576.x)) * abs((_473 * _467) - (_472 * _469))) / (sqrt(((_601 * _601) + (_604 * _604)) + (_598 * _598)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_592 * gl_WorldRayDirectionEXT.x, _592 * gl_WorldRayDirectionEXT.y, _592 * gl_WorldRayDirectionEXT.z), vec3(_531, _533, _534))));
        _634 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    }
    else
    {
        _634 = 0.0;
    }
    vec4 _638 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_4, SS_WrapLinear), vec2(_573, _574), _634);
    float _643 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].w;
    float _649 = ((_638.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _651 = (-0.0) - (cbMtdParam._m0[13u].y * ((_638.x * 0.5) + (-0.25)));
    float _653 = fract(_643);
    float _655 = fract(_643 + 0.5);
    float _667 = abs((_653 * 2.0) + (-1.0));
    vec4 _685 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_653 * _651) + _552) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_649 * _653) + _553) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _687 = _685.x;
    float _688 = _685.y;
    float _689 = _685.z;
    vec4 _690 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_655 * _651) + _552) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_649 * _655) + _553) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _704 = (((_690.x - _687) * _667) + _687) * cbMtdParam._m0[11u].x;
    float _705 = (((_690.y - _688) * _667) + _688) * cbMtdParam._m0[11u].y;
    float _706 = (((_690.z - _689) * _667) + _689) * cbMtdParam._m0[11u].z;
    float _720 = (cbMtdParam._m0[17u].w * _549) + _519;
    float _721 = (cbMtdParam._m0[18u].x * _549) + _520;
    float _772;
    if (_581)
    {
        float _732 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _738 = (_518 * _503) - (_515 * _506);
        float _741 = (_512 * _506) - (_518 * _500);
        float _744 = (_515 * _500) - (_512 * _503);
        float _770 = ((log2((((float(_576.y) * 0.5) * float(_576.x)) * abs((_473 * _467) - (_472 * _469))) / (sqrt(((_741 * _741) + (_744 * _744)) + (_738 * _738)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_732 * gl_WorldRayDirectionEXT.x, _732 * gl_WorldRayDirectionEXT.y, _732 * gl_WorldRayDirectionEXT.z), vec3(_531, _533, _534))));
        _772 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    }
    else
    {
        _772 = 0.0;
    }
    vec4 _774 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_4, SS_WrapLinear), vec2(_573, _574), _772);
    float _782 = ((_774.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _784 = (-0.0) - (cbMtdParam._m0[13u].y * ((_774.x * 0.5) + (-0.25)));
    vec4 _809 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_653 * _784) + _720) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_782 * _653) + _721) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _811 = _809.x;
    float _812 = _809.y;
    float _813 = _809.z;
    vec4 _814 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_655 * _784) + _720) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_782 * _655) + _721) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _839 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1355 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _840 = isnan(1.0) ? _1355 : (isnan(_1355) ? 1.0 : min(_1355, 1.0));
    float _847 = ((_840 * _840) * (3.0 - (_840 * 2.0))) - cbMtdParam._m0[14u].x;
    float _855 = (cbMtdParam._m0[16u].y * _549) + _519;
    float _856 = (cbMtdParam._m0[16u].z * _549) + _520;
    float _860 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _861 = _860 * gl_WorldRayDirectionEXT.x;
    float _862 = _860 * gl_WorldRayDirectionEXT.y;
    float _863 = _860 * gl_WorldRayDirectionEXT.z;
    float _907;
    if (_581)
    {
        float _873 = (_518 * _503) - (_515 * _506);
        float _876 = (_512 * _506) - (_518 * _500);
        float _879 = (_515 * _500) - (_512 * _503);
        float _905 = ((log2((((float(_576.y) * 0.5) * float(_576.x)) * abs((_473 * _467) - (_472 * _469))) / (sqrt(((_876 * _876) + (_879 * _879)) + (_873 * _873)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_118) / abs(dot(vec3(_861, _862, _863), vec3(_531, _533, _534))));
        _907 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    }
    else
    {
        _907 = 0.0;
    }
    vec4 _909 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_4, SS_WrapLinear), vec2(_573, _574), _907);
    float _917 = ((_909.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _919 = (-0.0) - (cbMtdParam._m0[13u].y * ((_909.x * 0.5) + (-0.25)));
    vec4 _944 = textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_653 * _919) + _855) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_917 * _653) + _856) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0);
    float _946 = _944.x;
    float _952 = ((textureLod(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_655 * _919) + _855) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_917 * _655) + _856) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), 0.0).x - _946) * _667) + _946;
    float _978 = inversesqrt(dot(vec3(_531, _533, _534), vec3(_531, _533, _534)));
    float _979 = _978 * _531;
    float _980 = _978 * _533;
    float _981 = _978 * _534;
    float _993 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _994 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _995 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _996 = (-0.0) - _861;
    float _997 = (-0.0) - _862;
    float _998 = (-0.0) - _863;
    float _1004 = float(gl_LaunchIDEXT.x);
    float _1005 = float(gl_LaunchIDEXT.y);
    float _1008 = float(gl_LaunchSizeEXT.x);
    float _1022 = fract(fract(sin(dot(vec2(_1004 / _1008, _1005 / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1035 = fract(fract(sin(dot(vec2((_1004 + 128.0) / _1008, (_1005 + 128.0) / _81), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _67._m0 = 1u;
    uvec4 _1045 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1046 = _1045.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1046, _1045.w, _1046, vec3(_993, _994, _995), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1112;
    float _1113;
    float _1114;
    if (_67._m0 == 0u)
    {
        float _1067 = g_sceneCB._m0[4u].x - _861;
        float _1068 = g_sceneCB._m0[4u].y - _862;
        float _1069 = g_sceneCB._m0[4u].z - _863;
        float _1073 = inversesqrt(dot(vec3(_1067, _1068, _1069), vec3(_1067, _1068, _1069)));
        float _1077 = dot(vec3(_979, _980, _981), vec3(g_sceneCB._m0[4u].xyz));
        float _1371 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1080 = isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0));
        float _1081 = dot(vec3(_979, _980, _981), vec3(_996, _997, _998));
        float _1382 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1067 * _1073, _1068 * _1073, _1069 * _1073));
        float _1393 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1096 = (exp2(log2(1.0 - (isnan(1.0) ? _1393 : (isnan(_1393) ? 1.0 : min(_1393, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1102 = (0.5 / ((_1080 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0))))) * _1080;
        float _1404 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1104 = (isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0))) * 0.31831014156341552734375;
        _1112 = (_1096 * g_sceneCB._m0[5u].x) * _1104;
        _1113 = (_1096 * g_sceneCB._m0[5u].y) * _1104;
        _1114 = (_1096 * g_sceneCB._m0[5u].z) * _1104;
    }
    else
    {
        _1112 = 0.0;
        _1113 = 0.0;
        _1114 = 0.0;
    }
    bool _1116 = abs(_980) < 0.89999997615814208984375;
    float _1118 = float(_1116);
    float _1119 = _1116 ? 0.0 : 1.0;
    float _1122 = (_1118 * _981) - (_1119 * _980);
    float _1123 = _1119 * _979;
    float _1125 = (-0.0) - (_979 * _1118);
    float _1129 = inversesqrt(dot(vec3(_1122, _1123, _1125), vec3(_1122, _1123, _1125)));
    float _1130 = _1122 * _1129;
    float _1131 = _1123 * _1129;
    float _1132 = _1129 * _1125;
    float _1135 = (_1131 * _981) - (_1132 * _980);
    float _1138 = (_1132 * _979) - (_1130 * _981);
    float _1141 = (_1130 * _980) - (_1131 * _979);
    float _1143;
    float _1151;
    float _1142 = 0.0;
    uint _1144 = 0u;
    float _1148;
    bool _1150;
    for (;;)
    {
        _1148 = (float(_1144) + _1022) * 0.03125;
        _1150 = _1144 == 0u;
        float frontier_phi_45_pred;
        if (_1150)
        {
            frontier_phi_45_pred = 0.0;
        }
        else
        {
            float _1272;
            float _1273;
            uint _1275;
            _1272 = 0.0;
            _1273 = 0.5;
            _1275 = _1144;
            float _1152;
            for (;;)
            {
                _1152 = ((_1275 & 1u) != 0u) ? (_1273 + _1272) : _1272;
                uint _1276 = _1275 >> 1u;
                if (_1276 == 0u)
                {
                    break;
                }
                else
                {
                    _1272 = _1152;
                    _1273 *= 0.5;
                    _1275 = _1276;
                }
            }
            frontier_phi_45_pred = _1152;
        }
        _1151 = frontier_phi_45_pred;
        float _1153 = _1151 + _1035;
        float _1157 = sqrt(_1148);
        float _1158 = ((_1153 > 1.0) ? (_1153 + (-1.0)) : _1153) * 6.283185482025146484375;
        float _1161 = cos(_1158) * _1157;
        float _1163 = sin(_1158) * _1157;
        float _1165 = sqrt(1.0 - _1148);
        float _1178 = ((_1165 * _979) + (_1161 * _1135)) + (_1163 * _1130);
        float _1179 = ((_1165 * _980) + (_1161 * _1138)) + (_1163 * _1131);
        float _1180 = ((_1165 * _981) + (_1161 * _1141)) + (_1163 * _1132);
        _66._m0 = 1u;
        uvec4 _1184 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1185 = _1184.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1185, _1184.w, _1185, vec3(_993, _994, _995), 9.9999997473787516355514526367188e-05, vec3(_1178, _1179, _1180), 10000.0, 1);
        float _1191 = dot(vec3(_979, _980, _981), vec3(_1178, _1179, _1180));
        float _1415 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1194 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
        _1143 = ((float(_66._m0 == 0u) * _1194) / (_1194 * 0.3183098733425140380859375)) + _1142;
        uint _1145 = _1144 + 1u;
        if (_1145 == 32u)
        {
            break;
        }
        else
        {
            _1142 = _1143;
            _1144 = _1145;
            continue;
        }
    }
    float _1203 = _1143 * 0.009947183541953563690185546875;
    float _1208 = dot(vec3(_861, _862, _863), vec3(_979, _980, _981)) * 2.0;
    vec4 _1220 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_861 - (_1208 * _979), _862 - (_1208 * _980), _863 - (_1208 * _981)), 4.0);
    float _1225 = dot(vec3(_996, _997, _998), vec3(_979, _980, _981));
    float _1426 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1234 = (exp2(log2(1.0 - (isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1242 = (_1112 + ((((cbMtdParam._m0[12u].y * ((((((_814.x - _811) * _667) + _811) * cbMtdParam._m0[9u].x) * _847) - _704)) * _952) + _704) * cbMtdParam._m0[15u].w)) + ((_1220.x * _1203) * _1234);
    float _1244 = (_1113 + ((((cbMtdParam._m0[12u].y * ((((((_814.y - _812) * _667) + _812) * cbMtdParam._m0[9u].y) * _847) - _705)) * _952) + _705) * cbMtdParam._m0[15u].w)) + ((_1220.y * _1203) * _1234);
    float _1246 = (_1114 + ((((cbMtdParam._m0[12u].y * ((((((_814.z - _813) * _667) + _813) * cbMtdParam._m0[9u].z) * _847) - _706)) * _952) + _706) * cbMtdParam._m0[15u].w)) + ((_1220.z * _1203) * _1234);
    float _1437 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
    float _1448 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
    float _1459 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
    bool _1255 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1266;
    _1266.x = _1255 ? ((_524 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0)));
    _1266.y = _1255 ? ((_527 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0)));
    _1266.z = _1255 ? ((_530 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0)));
    payload._m0 = _1266;
}


