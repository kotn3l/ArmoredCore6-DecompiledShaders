#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1670;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _220 = _181 == 0u;
    uint _221;
    if (_220)
    {
        _221 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _221 = frontier_phi_9_10_ladder;
    }
    uint _226 = _182 ? (_221 + 4u) : _221;
    uint _227 = _180 * _172;
    uvec4 _232 = texelFetch(l_geomAttrib_0, int(((_227 + 4u) + _226) >> 2u));
    uint _233 = _232.x;
    float _237 = float(int(uint(int(_233 << 16u) >> int(16u))));
    float _238 = float(int(uint(int(_233) >> int(16u))));
    uint _247 = (_180 * _174) + 12u;
    uint _268;
    uint _269;
    uint _270;
    uint _271;
    if (_185)
    {
        uvec4 _249 = texelFetch(l_geomAttrib_0, int(_247 >> 2u));
        uint _250 = _249.x;
        _268 = _250 & 255u;
        _269 = (_250 >> 8u) & 255u;
        _270 = (_250 >> 16u) & 255u;
        _271 = 20u;
    }
    else
    {
        uint _256 = _247 >> 2u;
        uvec2 _262 = uvec2(texelFetch(l_geomAttrib_0, int(_256)).x, texelFetch(l_geomAttrib_0, int(_256 + 1u)).x);
        uint _263 = _262.x;
        _268 = _263 & 65535u;
        _269 = _263 >> 16u;
        _270 = _262.y & 65535u;
        _271 = 24u;
    }
    uint _275;
    if (_220)
    {
        _275 = _271;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _271 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _271 + 8u;
        }
        _275 = frontier_phi_16_17_ladder;
    }
    uint _279 = _182 ? (_275 + 4u) : _275;
    uint _280 = _180 * _174;
    uvec4 _284 = texelFetch(l_geomAttrib_0, int(((_280 + 4u) + _279) >> 2u));
    uint _285 = _284.x;
    float _289 = float(int(uint(int(_285 << 16u) >> int(16u))));
    float _290 = float(int(uint(int(_285) >> int(16u))));
    uint _299 = (_180 * _175) + 12u;
    uint _320;
    uint _321;
    uint _322;
    uint _323;
    if (_185)
    {
        uvec4 _301 = texelFetch(l_geomAttrib_0, int(_299 >> 2u));
        uint _302 = _301.x;
        _320 = _302 & 255u;
        _321 = (_302 >> 8u) & 255u;
        _322 = (_302 >> 16u) & 255u;
        _323 = 20u;
    }
    else
    {
        uint _308 = _299 >> 2u;
        uvec2 _314 = uvec2(texelFetch(l_geomAttrib_0, int(_308)).x, texelFetch(l_geomAttrib_0, int(_308 + 1u)).x);
        uint _315 = _314.x;
        _320 = _315 & 65535u;
        _321 = _315 >> 16u;
        _322 = _314.y & 65535u;
        _323 = 24u;
    }
    uint _327;
    if (_220)
    {
        _327 = _323;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _323 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _323 + 8u;
        }
        _327 = frontier_phi_23_24_ladder;
    }
    uint _331 = _182 ? (_327 + 4u) : _327;
    uint _332 = _180 * _175;
    uvec4 _336 = texelFetch(l_geomAttrib_0, int(((_332 + 4u) + _331) >> 2u));
    uint _337 = _336.x;
    float _341 = float(int(uint(int(_337 << 16u) >> int(16u))));
    float _342 = float(int(uint(int(_337) >> int(16u))));
    bool _351 = _131.z == 0u;
    float _387;
    float _388;
    float _389;
    if (_351)
    {
        uint _354 = _172 * 3u;
        uvec3 _363 = uvec3(texelFetch(l_geomPositionBuffer, int(_354)).x, texelFetch(l_geomPositionBuffer, int(_354 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_354 + 2u)).x);
        _387 = uintBitsToFloat(_363.x);
        _388 = uintBitsToFloat(_363.y);
        _389 = uintBitsToFloat(_363.z);
    }
    else
    {
        uint _371 = _172 * 2u;
        uvec2 _377 = uvec2(texelFetch(l_geomPositionBuffer, int(_371)).x, texelFetch(l_geomPositionBuffer, int(_371 + 1u)).x);
        uint _378 = _377.x;
        _387 = unpackHalf2x16(_378).x;
        _388 = unpackHalf2x16(_378 >> 16u).x;
        _389 = unpackHalf2x16(_377.y).x;
    }
    float _425;
    float _426;
    float _427;
    if (_351)
    {
        uint _392 = _174 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _174 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_351)
    {
        uint _430 = _175 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _175 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _468 = (1.0 - hit._m0.x) - hit._m0.y;
    float _497 = (_289 - _237) * 0.00048828125;
    float _499 = (_290 - _238) * 0.00048828125;
    float _502 = (_341 - _237) * 0.00048828125;
    float _503 = (_342 - _238) * 0.00048828125;
    float _525 = _425 - _387;
    float _526 = _426 - _388;
    float _527 = _427 - _389;
    float _530 = fma(_527, gl_ObjectToWorldEXT[2u].x, fma(_526, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _525));
    float _533 = fma(_527, gl_ObjectToWorldEXT[2u].y, fma(_526, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _525));
    float _536 = fma(_527, gl_ObjectToWorldEXT[2u].z, fma(_526, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _525));
    float _537 = _463 - _387;
    float _538 = _464 - _388;
    float _539 = _465 - _389;
    float _542 = fma(_539, gl_ObjectToWorldEXT[2u].x, fma(_538, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _537));
    float _545 = fma(_539, gl_ObjectToWorldEXT[2u].y, fma(_538, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _537));
    float _548 = fma(_539, gl_ObjectToWorldEXT[2u].z, fma(_538, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _537));
    float _549 = (((_289 * hit._m0.x) + (_237 * _468)) + (_341 * hit._m0.y)) * 0.00048828125;
    float _550 = (((_290 * hit._m0.x) + (_238 * _468)) + (_342 * hit._m0.y)) * 0.00048828125;
    float _554 = (((float(_211) * _468) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _557 = (((float(_212) * _468) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _560 = (((float(_213) * _468) + (-127.0)) + (float(_270) * hit._m0.x)) + (float(_322) * hit._m0.y);
    float _561 = _554 * 0.0078740157186985015869140625;
    float _563 = _557 * 0.0078740157186985015869140625;
    float _564 = _560 * 0.0078740157186985015869140625;
    uvec2 _580 = uvec2(textureSize(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_10, int(0u)));
    bool _585 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _638;
    if (_585)
    {
        float _596 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _602 = (_548 * _533) - (_545 * _536);
        float _605 = (_542 * _536) - (_548 * _530);
        float _608 = (_545 * _530) - (_542 * _533);
        float _635 = ((log2((((float(_580.y) * 0.5) * float(_580.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_605 * _605) + (_608 * _608)) + (_602 * _602)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_596 * gl_WorldRayDirectionEXT.x, _596 * gl_WorldRayDirectionEXT.y, _596 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _638 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    }
    else
    {
        _638 = 0.0;
    }
    vec4 _642 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _549) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _550) + cbTextureTilingScale._m0[2u].w), _638);
    float _644 = _642.x;
    float _650 = cbMtdParam._m0[13u].x * 0.25;
    float _656 = fract(abs(_650));
    float _661 = (((((float(texelFetch(l_geomAttrib_0, int(((_280 + 12u) + _279) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_227 + 12u) + _226) >> 2u)).x & 255u) * _468)) + (float(texelFetch(l_geomAttrib_0, int(((_332 + 12u) + _331) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) + 0.25) - (((_650 >= ((-0.0) - _650)) ? _656 : ((-0.0) - _656)) * 2.0);
    float _664 = abs(cbMtdParam._m0[15u].y * _661);
    float _668 = (((_664 * cbMtdParam._m0[15u].z) - _644) * _664) + _644;
    float _1763 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _670 = (isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0))) * cbMtdParam._m0[15u].w;
    float _1774 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _671 = isnan(1.0) ? _1774 : (isnan(_1774) ? 1.0 : min(_1774, 1.0));
    float _672 = 1.0 - _671;
    float _673 = ceil(_661);
    float _1785 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _674 = isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0));
    float _679 = sin(cbMtdParam._m0[16u].x);
    float _680 = cos(cbMtdParam._m0[16u].x);
    float _681 = _549 - cbMtdParam._m0[16u].y;
    float _682 = _550 - cbMtdParam._m0[16u].y;
    uvec2 _701 = uvec2(textureSize(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_1, int(0u)));
    float _752;
    if (_585)
    {
        float _712 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _718 = (_548 * _533) - (_545 * _536);
        float _721 = (_542 * _536) - (_548 * _530);
        float _724 = (_545 * _530) - (_542 * _533);
        float _750 = ((log2((((float(_701.y) * 0.5) * float(_701.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_721 * _721) + (_724 * _724)) + (_718 * _718)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_712 * gl_WorldRayDirectionEXT.x, _712 * gl_WorldRayDirectionEXT.y, _712 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _752 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    }
    else
    {
        _752 = 0.0;
    }
    vec4 _755 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (fma(_682, (-0.0) - _679, _681 * _680) + cbMtdParam._m0[16u].y)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_682, _680, _681 * _679) + cbMtdParam._m0[16u].y)) + cbTextureTilingScale._m0[1u].w), _752);
    uvec2 _800 = uvec2(textureSize(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, int(0u)));
    float _851;
    if (_585)
    {
        float _811 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _817 = (_548 * _533) - (_545 * _536);
        float _820 = (_542 * _536) - (_548 * _530);
        float _823 = (_545 * _530) - (_542 * _533);
        float _849 = ((log2((((float(_800.y) * 0.5) * float(_800.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_820 * _820) + (_823 * _823)) + (_817 * _817)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_811 * gl_WorldRayDirectionEXT.x, _811 * gl_WorldRayDirectionEXT.y, _811 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _851 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    }
    else
    {
        _851 = 0.0;
    }
    float _914;
    if (_585)
    {
        float _874 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _880 = (_548 * _533) - (_545 * _536);
        float _883 = (_542 * _536) - (_548 * _530);
        float _886 = (_545 * _530) - (_542 * _533);
        float _912 = ((log2((((float(_800.y) * 0.5) * float(_800.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_883 * _883) + (_886 * _886)) + (_880 * _880)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_874 * gl_WorldRayDirectionEXT.x, _874 * gl_WorldRayDirectionEXT.y, _874 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _914 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    }
    else
    {
        _914 = 0.0;
    }
    float _980;
    if (_585)
    {
        float _940 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _946 = (_548 * _533) - (_545 * _536);
        float _949 = (_542 * _536) - (_548 * _530);
        float _952 = (_545 * _530) - (_542 * _533);
        float _978 = ((log2((((float(_800.y) * 0.5) * float(_800.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_949 * _949) + (_952 * _952)) + (_946 * _946)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_940 * gl_WorldRayDirectionEXT.x, _940 * gl_WorldRayDirectionEXT.y, _940 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _980 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    }
    else
    {
        _980 = 0.0;
    }
    float _1001 = abs((fract(cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1816 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1002 = isnan(1.0) ? _1816 : (isnan(_1816) ? 1.0 : min(_1816, 1.0));
    float _1012 = (((_1002 * _1002) * (cbMtdParam._m0[14u].y * 0.300000011920928955078125)) * (3.0 - (_1002 * 2.0))) - cbMtdParam._m0[14u].z;
    float _1022 = (cbTextureTilingScale._m0[6u].x * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _549)) + cbTextureTilingScale._m0[6u].z;
    float _1023 = (cbTextureTilingScale._m0[6u].y * ((cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _550)) + cbTextureTilingScale._m0[6u].w;
    uvec2 _1025 = uvec2(textureSize(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_6, int(0u)));
    float _1076;
    if (_585)
    {
        float _1036 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1042 = (_548 * _533) - (_545 * _536);
        float _1045 = (_542 * _536) - (_548 * _530);
        float _1048 = (_545 * _530) - (_542 * _533);
        float _1074 = ((log2((((float(_1025.y) * 0.5) * float(_1025.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_1045 * _1045) + (_1048 * _1048)) + (_1042 * _1042)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1036 * gl_WorldRayDirectionEXT.x, _1036 * gl_WorldRayDirectionEXT.y, _1036 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _1076 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    }
    else
    {
        _1076 = 0.0;
    }
    vec4 _1078 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_6, SS_WrapLinear), vec2(_1022, _1023), _1076);
    float _1083 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].w;
    float _1089 = ((_1078.y * 0.5) + (-0.25)) * _1012;
    float _1091 = (-0.0) - (_1012 * ((_1078.x * 0.5) + (-0.25)));
    float _1092 = fract(_1083);
    float _1094 = fract(_1083 + 0.5);
    float _1105 = abs((_1092 * 2.0) + (-1.0));
    vec4 _1115 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1092 * _1091) + _549) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1089 * _1092) + _550) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1117 = _1115.x;
    float _1118 = _1115.y;
    float _1119 = _1115.z;
    vec4 _1120 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1094 * _1091) + _549) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1089 * _1094) + _550) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1145 = (cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + _549;
    float _1146 = (cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + _550;
    float _1197;
    if (_585)
    {
        float _1157 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1163 = (_548 * _533) - (_545 * _536);
        float _1166 = (_542 * _536) - (_548 * _530);
        float _1169 = (_545 * _530) - (_542 * _533);
        float _1195 = ((log2((((float(_1025.y) * 0.5) * float(_1025.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_1166 * _1166) + (_1169 * _1169)) + (_1163 * _1163)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1157 * gl_WorldRayDirectionEXT.x, _1157 * gl_WorldRayDirectionEXT.y, _1157 * gl_WorldRayDirectionEXT.z), vec3(_561, _563, _564))));
        _1197 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    }
    else
    {
        _1197 = 0.0;
    }
    vec4 _1199 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_6, SS_WrapLinear), vec2(_1022, _1023), _1197);
    float _1207 = ((_1199.y * 0.5) + (-0.25)) * _1012;
    float _1209 = (-0.0) - (_1012 * ((_1199.x * 0.5) + (-0.25)));
    vec4 _1235 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1092 * _1209) + _1145) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1207 * _1092) + _1146) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1237 = _1235.x;
    float _1238 = _1235.y;
    float _1239 = _1235.z;
    vec4 _1240 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1094 * _1209) + _1145) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_1207 * _1094) + _1146) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), 0.0);
    float _1260 = ((((((cbMtdParam._m0[9u].x * cbMtdParam._m0[9u].x) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (cbMtdParam._m0[18u].z + _549)) + cbTextureTilingScale._m0[4u].z, ((cbMtdParam._m0[18u].w + _550) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _980).x) * cbMtdParam._m0[13u].z) * cbMtdParam._m0[10u].x) * (((_1120.x - _1117) * _1105) + _1117)) * (((_1240.x - _1237) * _1105) + _1237);
    float _1267 = ((((((cbMtdParam._m0[9u].y * cbMtdParam._m0[9u].y) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (cbMtdParam._m0[19u].x + _549)) + cbTextureTilingScale._m0[4u].z, ((cbMtdParam._m0[19u].y + _550) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _914).x) * cbMtdParam._m0[13u].z) * (((_1120.y - _1118) * _1105) + _1118)) * cbMtdParam._m0[10u].y) * (((_1240.y - _1238) * _1105) + _1238);
    float _1274 = ((((((cbMtdParam._m0[9u].z * cbMtdParam._m0[9u].z) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (cbMtdParam._m0[19u].z + _549)) + cbTextureTilingScale._m0[4u].z, ((cbMtdParam._m0[19u].w + _550) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _851).x) * cbMtdParam._m0[13u].z) * (((_1120.z - _1119) * _1105) + _1119)) * cbMtdParam._m0[10u].z) * (((_1240.z - _1239) * _1105) + _1239);
    float _1281 = ((((cbMtdParam._m0[12u].x * _755.x) * cbMtdParam._m0[14u].w) - _1260) * _674) + _1260;
    float _1282 = ((((cbMtdParam._m0[12u].y * _755.y) * cbMtdParam._m0[14u].w) - _1267) * _674) + _1267;
    float _1283 = ((((cbMtdParam._m0[12u].z * _755.z) * cbMtdParam._m0[14u].w) - _1274) * _674) + _1274;
    uvec2 _1295 = uvec2(textureSize(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_0, int(0u)));
    float _1299 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1300 = _1299 * gl_WorldRayDirectionEXT.x;
    float _1301 = _1299 * gl_WorldRayDirectionEXT.y;
    float _1302 = _1299 * gl_WorldRayDirectionEXT.z;
    float _1346;
    if (_585)
    {
        float _1312 = (_548 * _533) - (_545 * _536);
        float _1315 = (_542 * _536) - (_548 * _530);
        float _1318 = (_545 * _530) - (_542 * _533);
        float _1344 = ((log2((((float(_1295.y) * 0.5) * float(_1295.x)) * abs((_503 * _497) - (_502 * _499))) / (sqrt(((_1315 * _1315) + (_1318 * _1318)) + (_1312 * _1312)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1300, _1301, _1302), vec3(_561, _563, _564))));
        _1346 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
    }
    else
    {
        _1346 = 0.0;
    }
    vec4 _1348 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _549) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _550) + cbTextureTilingScale._m0[0u].w), _1346);
    float _1360 = (_1348.x * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].x;
    float _1362 = (_1348.y * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].y;
    float _1364 = (_1348.z * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].z;
    float _1380 = inversesqrt(dot(vec3(_561, _563, _564), vec3(_561, _563, _564)));
    float _1381 = _1380 * _561;
    float _1382 = _1380 * _563;
    float _1383 = _1380 * _564;
    float _1395 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1396 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1397 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1398 = (-0.0) - _1300;
    float _1399 = (-0.0) - _1301;
    float _1400 = (-0.0) - _1302;
    float _1406 = float(gl_LaunchIDEXT.x);
    float _1407 = float(gl_LaunchIDEXT.y);
    float _1410 = float(gl_LaunchSizeEXT.x);
    float _1424 = fract(fract(sin(dot(vec2(_1406 / _1410, _1407 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1437 = fract(fract(sin(dot(vec2((_1406 + 128.0) / _1410, (_1407 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1447 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1448 = _1447.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1448, _1447.w, _1448, vec3(_1395, _1396, _1397), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1513;
    float _1514;
    float _1515;
    if (_69._m0 == 0u)
    {
        float _1468 = g_sceneCB._m0[4u].x - _1300;
        float _1469 = g_sceneCB._m0[4u].y - _1301;
        float _1470 = g_sceneCB._m0[4u].z - _1302;
        float _1474 = inversesqrt(dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470)));
        float _1478 = dot(vec3(_1381, _1382, _1383), vec3(g_sceneCB._m0[4u].xyz));
        float _1842 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1481 = isnan(1.0) ? _1842 : (isnan(_1842) ? 1.0 : min(_1842, 1.0));
        float _1482 = dot(vec3(_1381, _1382, _1383), vec3(_1398, _1399, _1400));
        float _1853 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1486 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1468 * _1474, _1469 * _1474, _1470 * _1474));
        float _1864 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1497 = (exp2(log2(1.0 - (isnan(1.0) ? _1864 : (isnan(_1864) ? 1.0 : min(_1864, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1503 = (0.5 / ((_1481 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0))))) * _1481;
        float _1875 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1505 = (isnan(1.0) ? _1875 : (isnan(_1875) ? 1.0 : min(_1875, 1.0))) * 0.31831014156341552734375;
        _1513 = (_1497 * g_sceneCB._m0[5u].x) * _1505;
        _1514 = (_1497 * g_sceneCB._m0[5u].y) * _1505;
        _1515 = (_1497 * g_sceneCB._m0[5u].z) * _1505;
    }
    else
    {
        _1513 = 0.0;
        _1514 = 0.0;
        _1515 = 0.0;
    }
    bool _1517 = abs(_1382) < 0.89999997615814208984375;
    float _1519 = float(_1517);
    float _1520 = _1517 ? 0.0 : 1.0;
    float _1523 = (_1519 * _1383) - (_1520 * _1382);
    float _1524 = _1520 * _1381;
    float _1526 = (-0.0) - (_1381 * _1519);
    float _1530 = inversesqrt(dot(vec3(_1523, _1524, _1526), vec3(_1523, _1524, _1526)));
    float _1531 = _1523 * _1530;
    float _1532 = _1524 * _1530;
    float _1533 = _1530 * _1526;
    float _1536 = (_1532 * _1383) - (_1533 * _1382);
    float _1539 = (_1533 * _1381) - (_1531 * _1383);
    float _1542 = (_1531 * _1382) - (_1532 * _1381);
    float _1544;
    float _1552;
    float _1543 = 0.0;
    uint _1545 = 0u;
    float _1549;
    bool _1551;
    for (;;)
    {
        _1549 = (float(_1545) + _1424) * 0.03125;
        _1551 = _1545 == 0u;
        float frontier_phi_55_pred;
        if (_1551)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1675;
            float _1676;
            uint _1678;
            _1675 = 0.0;
            _1676 = 0.5;
            _1678 = _1545;
            float _1553;
            for (;;)
            {
                _1553 = ((_1678 & 1u) != 0u) ? (_1676 + _1675) : _1675;
                uint _1679 = _1678 >> 1u;
                if (_1679 == 0u)
                {
                    break;
                }
                else
                {
                    _1675 = _1553;
                    _1676 *= 0.5;
                    _1678 = _1679;
                }
            }
            frontier_phi_55_pred = _1553;
        }
        _1552 = frontier_phi_55_pred;
        float _1554 = _1552 + _1437;
        float _1558 = sqrt(_1549);
        float _1559 = ((_1554 > 1.0) ? (_1554 + (-1.0)) : _1554) * 6.283185482025146484375;
        float _1562 = cos(_1559) * _1558;
        float _1564 = sin(_1559) * _1558;
        float _1566 = sqrt(1.0 - _1549);
        float _1579 = ((_1566 * _1381) + (_1562 * _1536)) + (_1564 * _1531);
        float _1580 = ((_1566 * _1382) + (_1562 * _1539)) + (_1564 * _1532);
        float _1581 = ((_1566 * _1383) + (_1562 * _1542)) + (_1564 * _1533);
        _68._m0 = 1u;
        uvec4 _1585 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1586 = _1585.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1586, _1585.w, _1586, vec3(_1395, _1396, _1397), 9.9999997473787516355514526367188e-05, vec3(_1579, _1580, _1581), 10000.0, 1);
        float _1592 = dot(vec3(_1381, _1382, _1383), vec3(_1579, _1580, _1581));
        float _1886 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1595 = isnan(1.0) ? _1886 : (isnan(_1886) ? 1.0 : min(_1886, 1.0));
        _1544 = ((float(_68._m0 == 0u) * _1595) / (_1595 * 0.3183098733425140380859375)) + _1543;
        uint _1546 = _1545 + 1u;
        if (_1546 == 32u)
        {
            break;
        }
        else
        {
            _1543 = _1544;
            _1545 = _1546;
            continue;
        }
    }
    float _1604 = _1544 * 0.009947183541953563690185546875;
    float _1609 = dot(vec3(_1300, _1301, _1302), vec3(_1381, _1382, _1383)) * 2.0;
    vec4 _1621 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1300 - (_1609 * _1381), _1301 - (_1609 * _1382), _1302 - (_1609 * _1383)), 4.0);
    float _1626 = dot(vec3(_1398, _1399, _1400), vec3(_1381, _1382, _1383));
    float _1897 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
    float _1635 = (exp2(log2(1.0 - (isnan(1.0) ? _1897 : (isnan(_1897) ? 1.0 : min(_1897, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1644 = (((((_1360 - _1281) - (_1360 * _671)) * _672) + _1281) + _1513) + ((_1621.x * _1604) * _1635);
    float _1647 = (((((_1362 - _1282) - (_1362 * _671)) * _672) + _1282) + _1514) + ((_1621.y * _1604) * _1635);
    float _1650 = (((((_1364 - _1283) - (_1364 * _671)) * _672) + _1283) + _1515) + ((_1621.z * _1604) * _1635);
    float _1908 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
    float _1919 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
    float _1930 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
    bool _1658 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1669;
    _1669.x = _1658 ? ((_554 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1908 : (isnan(_1908) ? 1.0 : min(_1908, 1.0)));
    _1669.y = _1658 ? ((_557 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1919 : (isnan(_1919) ? 1.0 : min(_1919, 1.0)));
    _1669.z = _1658 ? ((_560 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1930 : (isnan(_1930) ? 1.0 : min(_1930, 1.0)));
    payload._m0 = _1669;
}


