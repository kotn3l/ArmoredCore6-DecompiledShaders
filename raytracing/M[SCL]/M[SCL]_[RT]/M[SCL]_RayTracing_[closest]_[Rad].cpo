#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _63
{
    vec3 _m0;
};

struct _67
{
    vec2 _m0;
};

struct _70
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_SCL_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_SCL_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_SCL_snp_0_Texture2D_8;
layout(set = 0, binding = 11) uniform texture2D M_SCL_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_SCL_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_SCL_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_SCL_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D M_SCL_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_SCL_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_SCL_snp_0_Texture2D_5;
layout(set = 0, binding = 8) uniform texture2D M_SCL_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_SCL_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _63 payload;
hitAttributeEXT _67 hit;
layout(location = 1) rayPayloadEXT _70 _72;
layout(location = 2) rayPayloadEXT _70 _73;

vec3 _2132;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _115 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _116 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _117 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _124 = sqrt(((_116 * _116) + (_115 * _115)) + (_117 * _117)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _135 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _136 = _135.y;
    uint _176;
    uint _178;
    uint _179;
    if (_135.x == 0u)
    {
        uint _144 = (_136 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _153 = uvec3(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_144 + 2u)).x);
        _176 = _153.x;
        _178 = _153.y;
        _179 = _153.z;
    }
    else
    {
        uint _157 = uint(gl_PrimitiveID) * 6u;
        uint _159 = _157 & 4294967292u;
        uint _162 = (_136 + _159) >> 2u;
        uvec2 _169 = uvec2(texelFetch(l_geomIndexBuffer, int(_162)).x, texelFetch(l_geomIndexBuffer, int(_162 + 1u)).x);
        uint _170 = _169.x;
        uint _171 = _169.y;
        uint _173 = _170 >> 16u;
        uint _174 = _171 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_159 == _157)
        {
            frontier_phi_3_2_ladder = _173;
            frontier_phi_3_2_ladder_1 = _170 & 65535u;
            frontier_phi_3_2_ladder_2 = _174;
        }
        else
        {
            frontier_phi_3_2_ladder = _174;
            frontier_phi_3_2_ladder_1 = _173;
            frontier_phi_3_2_ladder_2 = _171 >> 16u;
        }
        _176 = frontier_phi_3_2_ladder_1;
        _178 = frontier_phi_3_2_ladder;
        _179 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _183 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _184 = _183.x;
    uint _185 = _183.z;
    bool _186 = _185 != 0u;
    bool _188 = _135.w == 0u;
    bool _189 = _186 || _188;
    uint _191 = (_184 * _176) + 12u;
    uint _215;
    uint _216;
    uint _217;
    uint _218;
    if (_189)
    {
        uvec4 _194 = texelFetch(l_geomAttrib_0, int(_191 >> 2u));
        uint _195 = _194.x;
        _215 = _195 & 255u;
        _216 = (_195 >> 8u) & 255u;
        _217 = (_195 >> 16u) & 255u;
        _218 = 20u;
    }
    else
    {
        uint _203 = _191 >> 2u;
        uvec2 _209 = uvec2(texelFetch(l_geomAttrib_0, int(_203)).x, texelFetch(l_geomAttrib_0, int(_203 + 1u)).x);
        uint _210 = _209.x;
        _215 = _210 & 65535u;
        _216 = _210 >> 16u;
        _217 = _209.y & 65535u;
        _218 = 24u;
    }
    bool _224 = _185 == 0u;
    uint _225;
    if (_224)
    {
        _225 = _218;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_188)
        {
            frontier_phi_9_10_ladder = _218 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _218 + 8u;
        }
        _225 = frontier_phi_9_10_ladder;
    }
    uvec4 _236 = texelFetch(l_geomAttrib_0, int((((_184 * _176) + 4u) + (_186 ? (_225 + 4u) : _225)) >> 2u));
    uint _237 = _236.x;
    float _241 = float(int(uint(int(_237 << 16u) >> int(16u))));
    float _242 = float(int(uint(int(_237) >> int(16u))));
    uint _244 = (_184 * _178) + 12u;
    uint _265;
    uint _266;
    uint _267;
    uint _268;
    if (_189)
    {
        uvec4 _246 = texelFetch(l_geomAttrib_0, int(_244 >> 2u));
        uint _247 = _246.x;
        _265 = _247 & 255u;
        _266 = (_247 >> 8u) & 255u;
        _267 = (_247 >> 16u) & 255u;
        _268 = 20u;
    }
    else
    {
        uint _253 = _244 >> 2u;
        uvec2 _259 = uvec2(texelFetch(l_geomAttrib_0, int(_253)).x, texelFetch(l_geomAttrib_0, int(_253 + 1u)).x);
        uint _260 = _259.x;
        _265 = _260 & 65535u;
        _266 = _260 >> 16u;
        _267 = _259.y & 65535u;
        _268 = 24u;
    }
    uint _272;
    if (_224)
    {
        _272 = _268;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_188)
        {
            frontier_phi_16_17_ladder = _268 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _268 + 8u;
        }
        _272 = frontier_phi_16_17_ladder;
    }
    uvec4 _281 = texelFetch(l_geomAttrib_0, int((((_184 * _178) + 4u) + (_186 ? (_272 + 4u) : _272)) >> 2u));
    uint _282 = _281.x;
    float _286 = float(int(uint(int(_282 << 16u) >> int(16u))));
    float _287 = float(int(uint(int(_282) >> int(16u))));
    uint _289 = (_184 * _179) + 12u;
    uint _310;
    uint _311;
    uint _312;
    uint _313;
    if (_189)
    {
        uvec4 _291 = texelFetch(l_geomAttrib_0, int(_289 >> 2u));
        uint _292 = _291.x;
        _310 = _292 & 255u;
        _311 = (_292 >> 8u) & 255u;
        _312 = (_292 >> 16u) & 255u;
        _313 = 20u;
    }
    else
    {
        uint _298 = _289 >> 2u;
        uvec2 _304 = uvec2(texelFetch(l_geomAttrib_0, int(_298)).x, texelFetch(l_geomAttrib_0, int(_298 + 1u)).x);
        uint _305 = _304.x;
        _310 = _305 & 65535u;
        _311 = _305 >> 16u;
        _312 = _304.y & 65535u;
        _313 = 24u;
    }
    uint _317;
    if (_224)
    {
        _317 = _313;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_188)
        {
            frontier_phi_23_24_ladder = _313 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _313 + 8u;
        }
        _317 = frontier_phi_23_24_ladder;
    }
    uvec4 _326 = texelFetch(l_geomAttrib_0, int((((_184 * _179) + 4u) + (_186 ? (_317 + 4u) : _317)) >> 2u));
    uint _327 = _326.x;
    float _331 = float(int(uint(int(_327 << 16u) >> int(16u))));
    float _332 = float(int(uint(int(_327) >> int(16u))));
    bool _334 = _135.z == 0u;
    float _370;
    float _371;
    float _372;
    if (_334)
    {
        uint _337 = _176 * 3u;
        uvec3 _346 = uvec3(texelFetch(l_geomPositionBuffer, int(_337)).x, texelFetch(l_geomPositionBuffer, int(_337 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_337 + 2u)).x);
        _370 = uintBitsToFloat(_346.x);
        _371 = uintBitsToFloat(_346.y);
        _372 = uintBitsToFloat(_346.z);
    }
    else
    {
        uint _354 = _176 * 2u;
        uvec2 _360 = uvec2(texelFetch(l_geomPositionBuffer, int(_354)).x, texelFetch(l_geomPositionBuffer, int(_354 + 1u)).x);
        uint _361 = _360.x;
        _370 = unpackHalf2x16(_361).x;
        _371 = unpackHalf2x16(_361 >> 16u).x;
        _372 = unpackHalf2x16(_360.y).x;
    }
    float _408;
    float _409;
    float _410;
    if (_334)
    {
        uint _375 = _178 * 3u;
        uvec3 _384 = uvec3(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_375 + 2u)).x);
        _408 = uintBitsToFloat(_384.x);
        _409 = uintBitsToFloat(_384.y);
        _410 = uintBitsToFloat(_384.z);
    }
    else
    {
        uint _392 = _178 * 2u;
        uvec2 _398 = uvec2(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x);
        uint _399 = _398.x;
        _408 = unpackHalf2x16(_399).x;
        _409 = unpackHalf2x16(_399 >> 16u).x;
        _410 = unpackHalf2x16(_398.y).x;
    }
    float _446;
    float _447;
    float _448;
    if (_334)
    {
        uint _413 = _179 * 3u;
        uvec3 _422 = uvec3(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_413 + 2u)).x);
        _446 = uintBitsToFloat(_422.x);
        _447 = uintBitsToFloat(_422.y);
        _448 = uintBitsToFloat(_422.z);
    }
    else
    {
        uint _430 = _179 * 2u;
        uvec2 _436 = uvec2(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x);
        uint _437 = _436.x;
        _446 = unpackHalf2x16(_437).x;
        _447 = unpackHalf2x16(_437 >> 16u).x;
        _448 = unpackHalf2x16(_436.y).x;
    }
    float _451 = (1.0 - hit._m0.x) - hit._m0.y;
    float _473 = (_286 - _241) * 0.00048828125;
    float _475 = (_287 - _242) * 0.00048828125;
    float _478 = (_331 - _241) * 0.00048828125;
    float _479 = (_332 - _242) * 0.00048828125;
    float _501 = _408 - _370;
    float _502 = _409 - _371;
    float _503 = _410 - _372;
    float _506 = fma(_503, gl_ObjectToWorldEXT[2u].x, fma(_502, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _501));
    float _509 = fma(_503, gl_ObjectToWorldEXT[2u].y, fma(_502, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _501));
    float _512 = fma(_503, gl_ObjectToWorldEXT[2u].z, fma(_502, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _501));
    float _513 = _446 - _370;
    float _514 = _447 - _371;
    float _515 = _448 - _372;
    float _518 = fma(_515, gl_ObjectToWorldEXT[2u].x, fma(_514, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _513));
    float _521 = fma(_515, gl_ObjectToWorldEXT[2u].y, fma(_514, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _513));
    float _524 = fma(_515, gl_ObjectToWorldEXT[2u].z, fma(_514, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _513));
    float _525 = (((_286 * hit._m0.x) + (_241 * _451)) + (_331 * hit._m0.y)) * 0.00048828125;
    float _526 = (((_287 * hit._m0.x) + (_242 * _451)) + (_332 * hit._m0.y)) * 0.00048828125;
    float _530 = (((float(_215) * _451) + (-127.0)) + (float(_265) * hit._m0.x)) + (float(_310) * hit._m0.y);
    float _533 = (((float(_216) * _451) + (-127.0)) + (float(_266) * hit._m0.x)) + (float(_311) * hit._m0.y);
    float _536 = (((float(_217) * _451) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_312) * hit._m0.y);
    float _537 = _530 * 0.0078740157186985015869140625;
    float _539 = _533 * 0.0078740157186985015869140625;
    float _540 = _536 * 0.0078740157186985015869140625;
    uvec2 _552 = uvec2(textureSize(M_SCL_snp_0_Texture2D_2, int(0u)));
    bool _557 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _610;
    if (_557)
    {
        float _568 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _574 = (_524 * _509) - (_521 * _512);
        float _577 = (_518 * _512) - (_524 * _506);
        float _580 = (_521 * _506) - (_518 * _509);
        float _607 = ((log2((((float(_552.y) * 0.5) * float(_552.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_577 * _577) + (_580 * _580)) + (_574 * _574)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_568 * gl_WorldRayDirectionEXT.x, _568 * gl_WorldRayDirectionEXT.y, _568 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _610 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    }
    else
    {
        _610 = 0.0;
    }
    vec4 _614 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _525) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _526) + cbTextureTilingScale._m0[0u].w), _610);
    float _616 = _614.x;
    float _617 = _614.y;
    float _618 = _614.z;
    float _631 = (cbMtdParam._m0[22u].y * _616) * cbMtdParam._m0[22u].z;
    float _633 = (cbMtdParam._m0[22u].y * _617) * cbMtdParam._m0[22u].z;
    float _635 = (cbMtdParam._m0[22u].y * _618) * cbMtdParam._m0[22u].z;
    float _636 = isnan(_633) ? _631 : (isnan(_631) ? _633 : max(_631, _633));
    float _637 = isnan(_635) ? _636 : (isnan(_636) ? _635 : max(_636, _635));
    float _640;
    float _642;
    if (_637 < 1.1920928955078125e-07)
    {
        _640 = 0.0;
        _642 = 0.0;
    }
    else
    {
        float _666 = isnan(_633) ? _631 : (isnan(_631) ? _633 : min(_631, _633));
        float _668 = _637 - (isnan(_635) ? _666 : (isnan(_666) ? _635 : min(_666, _635)));
        float _643 = _668 / _637;
        float frontier_phi_38_39_ladder;
        float frontier_phi_38_39_ladder_1;
        if (_668 < 1.1920928955078125e-07)
        {
            frontier_phi_38_39_ladder = _643;
            frontier_phi_38_39_ladder_1 = 0.0;
        }
        else
        {
            float _800;
            if (_637 == _631)
            {
                _800 = (((cbMtdParam._m0[22u].y * (_617 - _618)) * cbMtdParam._m0[22u].z) / _668) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_51_47_ladder;
                if (_637 == _633)
                {
                    frontier_phi_51_47_ladder = ((((cbMtdParam._m0[22u].y * (_618 - _616)) * cbMtdParam._m0[22u].z) / _668) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_51_47_ladder = ((((cbMtdParam._m0[22u].y * (_616 - _617)) * cbMtdParam._m0[22u].z) / _668) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _800 = frontier_phi_51_47_ladder;
            }
            float _805 = (_800 < 0.0) ? (_800 + 1.0) : _800;
            frontier_phi_38_39_ladder = _643;
            frontier_phi_38_39_ladder_1 = _805 - floor(_805);
        }
        _640 = frontier_phi_38_39_ladder_1;
        _642 = frontier_phi_38_39_ladder;
    }
    float _644 = _642 + cbMtdParam._m0[23u].x;
    float _648 = fract(cbMtdParam._m0[22u].w + _640) * 6.0;
    uint _651 = uint(int(floor(_648)));
    float _653 = _648 - float(int(_651));
    float _655 = (1.0 - _644) * _637;
    float _658 = (1.0 - (_653 * _644)) * _637;
    float _662 = (1.0 - ((1.0 - _653) * _644)) * _637;
    float _670;
    float _672;
    float _673;
    if ((_651 == 0u) || (_651 == 6u))
    {
        _670 = _637;
        _672 = _662;
        _673 = _655;
    }
    else
    {
        float frontier_phi_40_41_ladder;
        float frontier_phi_40_41_ladder_1;
        float frontier_phi_40_41_ladder_2;
        if (_651 == 1u)
        {
            frontier_phi_40_41_ladder = _658;
            frontier_phi_40_41_ladder_1 = _655;
            frontier_phi_40_41_ladder_2 = _637;
        }
        else
        {
            float frontier_phi_40_41_ladder_45_ladder;
            float frontier_phi_40_41_ladder_45_ladder_1;
            float frontier_phi_40_41_ladder_45_ladder_2;
            if (_651 == 2u)
            {
                frontier_phi_40_41_ladder_45_ladder = _655;
                frontier_phi_40_41_ladder_45_ladder_1 = _662;
                frontier_phi_40_41_ladder_45_ladder_2 = _637;
            }
            else
            {
                float frontier_phi_40_41_ladder_45_ladder_50_ladder;
                float frontier_phi_40_41_ladder_45_ladder_50_ladder_1;
                float frontier_phi_40_41_ladder_45_ladder_50_ladder_2;
                if (_651 == 3u)
                {
                    frontier_phi_40_41_ladder_45_ladder_50_ladder = _655;
                    frontier_phi_40_41_ladder_45_ladder_50_ladder_1 = _637;
                    frontier_phi_40_41_ladder_45_ladder_50_ladder_2 = _658;
                }
                else
                {
                    bool _852 = _651 == 4u;
                    frontier_phi_40_41_ladder_45_ladder_50_ladder = _852 ? _662 : _637;
                    frontier_phi_40_41_ladder_45_ladder_50_ladder_1 = _852 ? _637 : _658;
                    frontier_phi_40_41_ladder_45_ladder_50_ladder_2 = _655;
                }
                frontier_phi_40_41_ladder_45_ladder = frontier_phi_40_41_ladder_45_ladder_50_ladder;
                frontier_phi_40_41_ladder_45_ladder_1 = frontier_phi_40_41_ladder_45_ladder_50_ladder_1;
                frontier_phi_40_41_ladder_45_ladder_2 = frontier_phi_40_41_ladder_45_ladder_50_ladder_2;
            }
            frontier_phi_40_41_ladder = frontier_phi_40_41_ladder_45_ladder;
            frontier_phi_40_41_ladder_1 = frontier_phi_40_41_ladder_45_ladder_1;
            frontier_phi_40_41_ladder_2 = frontier_phi_40_41_ladder_45_ladder_2;
        }
        _670 = frontier_phi_40_41_ladder;
        _672 = frontier_phi_40_41_ladder_2;
        _673 = frontier_phi_40_41_ladder_1;
    }
    uvec2 _695 = uvec2(textureSize(M_SCL_snp_0_Texture2D_5, int(0u)));
    float _748;
    if (_557)
    {
        float _708 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _714 = (_524 * _509) - (_521 * _512);
        float _717 = (_518 * _512) - (_524 * _506);
        float _720 = (_521 * _506) - (_518 * _509);
        float _746 = ((log2((((float(_695.y) * 0.5) * float(_695.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_717 * _717) + (_720 * _720)) + (_714 * _714)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_708 * gl_WorldRayDirectionEXT.x, _708 * gl_WorldRayDirectionEXT.y, _708 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _748 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    }
    else
    {
        _748 = 0.0;
    }
    vec4 _750 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _525) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _526) + cbTextureTilingScale._m0[7u].w), _748);
    float _752 = _750.x;
    float _753 = _750.y;
    float _754 = _750.z;
    float _755 = cbMtdParam._m0[17u].z * cbMtdParam._m0[23u].z;
    float _756 = _755 * _752;
    float _757 = _755 * _753;
    float _758 = _755 * _754;
    float _759 = isnan(_757) ? _756 : (isnan(_756) ? _757 : max(_756, _757));
    float _760 = isnan(_758) ? _759 : (isnan(_759) ? _758 : max(_759, _758));
    float _770;
    float _772;
    if (_760 < 1.1920928955078125e-07)
    {
        _770 = 0.0;
        _772 = 0.0;
    }
    else
    {
        float _795 = isnan(_757) ? _756 : (isnan(_756) ? _757 : min(_756, _757));
        float _797 = _760 - (isnan(_758) ? _795 : (isnan(_795) ? _758 : min(_795, _758)));
        float _773 = _797 / _760;
        float frontier_phi_48_49_ladder;
        float frontier_phi_48_49_ladder_1;
        if (_797 < 1.1920928955078125e-07)
        {
            frontier_phi_48_49_ladder = _773;
            frontier_phi_48_49_ladder_1 = 0.0;
        }
        else
        {
            float _1006;
            if (_760 == _756)
            {
                _1006 = ((_755 * (_753 - _754)) / _797) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_66_62_ladder;
                if (_760 == _757)
                {
                    frontier_phi_66_62_ladder = (((_755 * (_754 - _752)) / _797) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_66_62_ladder = (((_755 * (_752 - _753)) / _797) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1006 = frontier_phi_66_62_ladder;
            }
            float _1011 = (_1006 < 0.0) ? (_1006 + 1.0) : _1006;
            frontier_phi_48_49_ladder = _773;
            frontier_phi_48_49_ladder_1 = _1011 - floor(_1011);
        }
        _770 = frontier_phi_48_49_ladder_1;
        _772 = frontier_phi_48_49_ladder;
    }
    float _774 = _772 + cbMtdParam._m0[23u].y;
    float _778 = fract(cbMtdParam._m0[17u].w + _770) * 6.0;
    uint _780 = uint(int(floor(_778)));
    float _782 = _778 - float(int(_780));
    float _784 = (1.0 - _774) * _760;
    float _787 = (1.0 - (_782 * _774)) * _760;
    float _791 = (1.0 - ((1.0 - _782) * _774)) * _760;
    float _819;
    float _821;
    float _822;
    if ((_780 == 0u) || (_780 == 6u))
    {
        _819 = _760;
        _821 = _791;
        _822 = _784;
    }
    else
    {
        float frontier_phi_54_55_ladder;
        float frontier_phi_54_55_ladder_1;
        float frontier_phi_54_55_ladder_2;
        if (_780 == 1u)
        {
            frontier_phi_54_55_ladder = _784;
            frontier_phi_54_55_ladder_1 = _760;
            frontier_phi_54_55_ladder_2 = _787;
        }
        else
        {
            float frontier_phi_54_55_ladder_60_ladder;
            float frontier_phi_54_55_ladder_60_ladder_1;
            float frontier_phi_54_55_ladder_60_ladder_2;
            if (_780 == 2u)
            {
                frontier_phi_54_55_ladder_60_ladder = _791;
                frontier_phi_54_55_ladder_60_ladder_1 = _760;
                frontier_phi_54_55_ladder_60_ladder_2 = _784;
            }
            else
            {
                float frontier_phi_54_55_ladder_60_ladder_65_ladder;
                float frontier_phi_54_55_ladder_60_ladder_65_ladder_1;
                float frontier_phi_54_55_ladder_60_ladder_65_ladder_2;
                if (_780 == 3u)
                {
                    frontier_phi_54_55_ladder_60_ladder_65_ladder = _760;
                    frontier_phi_54_55_ladder_60_ladder_65_ladder_1 = _787;
                    frontier_phi_54_55_ladder_60_ladder_65_ladder_2 = _784;
                }
                else
                {
                    bool _1050 = _780 == 4u;
                    frontier_phi_54_55_ladder_60_ladder_65_ladder = _1050 ? _760 : _787;
                    frontier_phi_54_55_ladder_60_ladder_65_ladder_1 = _784;
                    frontier_phi_54_55_ladder_60_ladder_65_ladder_2 = _1050 ? _791 : _760;
                }
                frontier_phi_54_55_ladder_60_ladder = frontier_phi_54_55_ladder_60_ladder_65_ladder;
                frontier_phi_54_55_ladder_60_ladder_1 = frontier_phi_54_55_ladder_60_ladder_65_ladder_1;
                frontier_phi_54_55_ladder_60_ladder_2 = frontier_phi_54_55_ladder_60_ladder_65_ladder_2;
            }
            frontier_phi_54_55_ladder = frontier_phi_54_55_ladder_60_ladder;
            frontier_phi_54_55_ladder_1 = frontier_phi_54_55_ladder_60_ladder_1;
            frontier_phi_54_55_ladder_2 = frontier_phi_54_55_ladder_60_ladder_2;
        }
        _819 = frontier_phi_54_55_ladder_2;
        _821 = frontier_phi_54_55_ladder_1;
        _822 = frontier_phi_54_55_ladder;
    }
    uvec2 _849 = uvec2(textureSize(M_SCL_snp_0_Texture2D_3, int(0u)));
    float _903;
    if (_557)
    {
        float _863 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _869 = (_524 * _509) - (_521 * _512);
        float _872 = (_518 * _512) - (_524 * _506);
        float _875 = (_521 * _506) - (_518 * _509);
        float _901 = ((log2((((float(_849.y) * 0.5) * float(_849.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_872 * _872) + (_875 * _875)) + (_869 * _869)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_863 * gl_WorldRayDirectionEXT.x, _863 * gl_WorldRayDirectionEXT.y, _863 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _903 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    }
    else
    {
        _903 = 0.0;
    }
    vec4 _905 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _525) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _526) + cbTextureTilingScale._m0[5u].w), _903);
    uvec2 _934 = uvec2(textureSize(M_SCL_snp_0_Texture2D_4, int(0u)));
    float _991;
    if (_557)
    {
        float _951 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _957 = (_524 * _509) - (_521 * _512);
        float _960 = (_518 * _512) - (_524 * _506);
        float _963 = (_521 * _506) - (_518 * _509);
        float _989 = ((log2((((float(_934.y) * 0.5) * float(_934.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_960 * _960) + (_963 * _963)) + (_957 * _957)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_951 * gl_WorldRayDirectionEXT.x, _951 * gl_WorldRayDirectionEXT.y, _951 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _991 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    }
    else
    {
        _991 = 0.0;
    }
    vec4 _993 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _525) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _526) + cbTextureTilingScale._m0[6u].w), _991);
    float _995 = _993.x;
    float _996 = _993.y;
    float _997 = _993.z;
    float _998 = cbMtdParam._m0[20u].y * cbMtdParam._m0[20u].z;
    float _999 = _998 * _995;
    float _1000 = _998 * _996;
    float _1001 = _998 * _997;
    float _1002 = isnan(_1000) ? _999 : (isnan(_999) ? _1000 : max(_999, _1000));
    float _1003 = isnan(_1001) ? _1002 : (isnan(_1002) ? _1001 : max(_1002, _1001));
    float _1021;
    float _1023;
    if (_1003 < 1.1920928955078125e-07)
    {
        _1021 = 0.0;
        _1023 = 0.0;
    }
    else
    {
        float _1046 = isnan(_1000) ? _999 : (isnan(_999) ? _1000 : min(_999, _1000));
        float _1048 = _1003 - (isnan(_1001) ? _1046 : (isnan(_1046) ? _1001 : min(_1046, _1001)));
        float _1024 = _1048 / _1003;
        float frontier_phi_69_70_ladder;
        float frontier_phi_69_70_ladder_1;
        if (_1048 < 1.1920928955078125e-07)
        {
            frontier_phi_69_70_ladder = _1024;
            frontier_phi_69_70_ladder_1 = 0.0;
        }
        else
        {
            float _1180;
            if (_1003 == _999)
            {
                _1180 = ((_998 * (_996 - _997)) / _1048) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_83_79_ladder;
                if (_1003 == _1000)
                {
                    frontier_phi_83_79_ladder = (((_998 * (_997 - _995)) / _1048) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_83_79_ladder = (((_998 * (_995 - _996)) / _1048) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1180 = frontier_phi_83_79_ladder;
            }
            float _1185 = (_1180 < 0.0) ? (_1180 + 1.0) : _1180;
            frontier_phi_69_70_ladder = _1024;
            frontier_phi_69_70_ladder_1 = _1185 - floor(_1185);
        }
        _1021 = frontier_phi_69_70_ladder_1;
        _1023 = frontier_phi_69_70_ladder;
    }
    float _1025 = _1023 + cbMtdParam._m0[19u].z;
    float _1029 = fract(cbMtdParam._m0[19u].w + _1021) * 6.0;
    uint _1031 = uint(int(floor(_1029)));
    float _1033 = _1029 - float(int(_1031));
    float _1035 = (1.0 - _1025) * _1003;
    float _1038 = (1.0 - (_1033 * _1025)) * _1003;
    float _1042 = (1.0 - ((1.0 - _1033) * _1025)) * _1003;
    float _1051;
    float _1053;
    float _1054;
    if ((_1031 == 0u) || (_1031 == 6u))
    {
        _1051 = _1003;
        _1053 = _1042;
        _1054 = _1035;
    }
    else
    {
        float frontier_phi_72_73_ladder;
        float frontier_phi_72_73_ladder_1;
        float frontier_phi_72_73_ladder_2;
        if (_1031 == 1u)
        {
            frontier_phi_72_73_ladder = _1035;
            frontier_phi_72_73_ladder_1 = _1003;
            frontier_phi_72_73_ladder_2 = _1038;
        }
        else
        {
            float frontier_phi_72_73_ladder_77_ladder;
            float frontier_phi_72_73_ladder_77_ladder_1;
            float frontier_phi_72_73_ladder_77_ladder_2;
            if (_1031 == 2u)
            {
                frontier_phi_72_73_ladder_77_ladder = _1042;
                frontier_phi_72_73_ladder_77_ladder_1 = _1003;
                frontier_phi_72_73_ladder_77_ladder_2 = _1035;
            }
            else
            {
                float frontier_phi_72_73_ladder_77_ladder_82_ladder;
                float frontier_phi_72_73_ladder_77_ladder_82_ladder_1;
                float frontier_phi_72_73_ladder_77_ladder_82_ladder_2;
                if (_1031 == 3u)
                {
                    frontier_phi_72_73_ladder_77_ladder_82_ladder = _1003;
                    frontier_phi_72_73_ladder_77_ladder_82_ladder_1 = _1038;
                    frontier_phi_72_73_ladder_77_ladder_82_ladder_2 = _1035;
                }
                else
                {
                    bool _1223 = _1031 == 4u;
                    frontier_phi_72_73_ladder_77_ladder_82_ladder = _1223 ? _1003 : _1038;
                    frontier_phi_72_73_ladder_77_ladder_82_ladder_1 = _1035;
                    frontier_phi_72_73_ladder_77_ladder_82_ladder_2 = _1223 ? _1042 : _1003;
                }
                frontier_phi_72_73_ladder_77_ladder = frontier_phi_72_73_ladder_77_ladder_82_ladder;
                frontier_phi_72_73_ladder_77_ladder_1 = frontier_phi_72_73_ladder_77_ladder_82_ladder_1;
                frontier_phi_72_73_ladder_77_ladder_2 = frontier_phi_72_73_ladder_77_ladder_82_ladder_2;
            }
            frontier_phi_72_73_ladder = frontier_phi_72_73_ladder_77_ladder;
            frontier_phi_72_73_ladder_1 = frontier_phi_72_73_ladder_77_ladder_1;
            frontier_phi_72_73_ladder_2 = frontier_phi_72_73_ladder_77_ladder_2;
        }
        _1051 = frontier_phi_72_73_ladder_2;
        _1053 = frontier_phi_72_73_ladder_1;
        _1054 = frontier_phi_72_73_ladder;
    }
    uvec2 _1077 = uvec2(textureSize(M_SCL_snp_0_Texture2D_10, int(0u)));
    float _1130;
    if (_557)
    {
        float _1090 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1096 = (_524 * _509) - (_521 * _512);
        float _1099 = (_518 * _512) - (_524 * _506);
        float _1102 = (_521 * _506) - (_518 * _509);
        float _1128 = ((log2((((float(_1077.y) * 0.5) * float(_1077.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1099 * _1099) + (_1102 * _1102)) + (_1096 * _1096)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1090 * gl_WorldRayDirectionEXT.x, _1090 * gl_WorldRayDirectionEXT.y, _1090 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1130 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    }
    else
    {
        _1130 = 0.0;
    }
    vec4 _1132 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _525) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _526) + cbTextureTilingScale._m0[3u].w), _1130);
    float _1134 = _1132.x;
    float _1135 = _1132.y;
    float _1136 = _1132.z;
    float _1137 = cbMtdParam._m0[20u].w * cbMtdParam._m0[21u].x;
    float _1138 = _1137 * _1134;
    float _1139 = _1137 * _1135;
    float _1140 = _1137 * _1136;
    float _1141 = isnan(_1139) ? _1138 : (isnan(_1138) ? _1139 : max(_1138, _1139));
    float _1142 = isnan(_1140) ? _1141 : (isnan(_1141) ? _1140 : max(_1141, _1140));
    float _1150;
    float _1152;
    if (_1142 < 1.1920928955078125e-07)
    {
        _1150 = 0.0;
        _1152 = 0.0;
    }
    else
    {
        float _1175 = isnan(_1139) ? _1138 : (isnan(_1138) ? _1139 : min(_1138, _1139));
        float _1177 = _1142 - (isnan(_1140) ? _1175 : (isnan(_1175) ? _1140 : min(_1175, _1140)));
        float _1153 = _1177 / _1142;
        float frontier_phi_80_81_ladder;
        float frontier_phi_80_81_ladder_1;
        if (_1177 < 1.1920928955078125e-07)
        {
            frontier_phi_80_81_ladder = _1153;
            frontier_phi_80_81_ladder_1 = 0.0;
        }
        else
        {
            float _1397;
            if (_1142 == _1138)
            {
                _1397 = ((_1137 * (_1135 - _1136)) / _1177) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_98_94_ladder;
                if (_1142 == _1139)
                {
                    frontier_phi_98_94_ladder = (((_1137 * (_1136 - _1134)) / _1177) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_98_94_ladder = (((_1137 * (_1134 - _1135)) / _1177) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1397 = frontier_phi_98_94_ladder;
            }
            float _1402 = (_1397 < 0.0) ? (_1397 + 1.0) : _1397;
            frontier_phi_80_81_ladder = _1153;
            frontier_phi_80_81_ladder_1 = _1402 - floor(_1402);
        }
        _1150 = frontier_phi_80_81_ladder_1;
        _1152 = frontier_phi_80_81_ladder;
    }
    float _1154 = _1152 + cbMtdParam._m0[21u].z;
    float _1158 = fract(cbMtdParam._m0[21u].y + _1150) * 6.0;
    uint _1160 = uint(int(floor(_1158)));
    float _1162 = _1158 - float(int(_1160));
    float _1164 = (1.0 - _1154) * _1142;
    float _1167 = (1.0 - (_1162 * _1154)) * _1142;
    float _1171 = (1.0 - ((1.0 - _1162) * _1154)) * _1142;
    float _1195;
    float _1197;
    float _1198;
    if ((_1160 == 0u) || (_1160 == 6u))
    {
        _1195 = _1142;
        _1197 = _1171;
        _1198 = _1164;
    }
    else
    {
        float frontier_phi_86_87_ladder;
        float frontier_phi_86_87_ladder_1;
        float frontier_phi_86_87_ladder_2;
        if (_1160 == 1u)
        {
            frontier_phi_86_87_ladder = _1164;
            frontier_phi_86_87_ladder_1 = _1142;
            frontier_phi_86_87_ladder_2 = _1167;
        }
        else
        {
            float frontier_phi_86_87_ladder_92_ladder;
            float frontier_phi_86_87_ladder_92_ladder_1;
            float frontier_phi_86_87_ladder_92_ladder_2;
            if (_1160 == 2u)
            {
                frontier_phi_86_87_ladder_92_ladder = _1171;
                frontier_phi_86_87_ladder_92_ladder_1 = _1142;
                frontier_phi_86_87_ladder_92_ladder_2 = _1164;
            }
            else
            {
                float frontier_phi_86_87_ladder_92_ladder_97_ladder;
                float frontier_phi_86_87_ladder_92_ladder_97_ladder_1;
                float frontier_phi_86_87_ladder_92_ladder_97_ladder_2;
                if (_1160 == 3u)
                {
                    frontier_phi_86_87_ladder_92_ladder_97_ladder = _1142;
                    frontier_phi_86_87_ladder_92_ladder_97_ladder_1 = _1167;
                    frontier_phi_86_87_ladder_92_ladder_97_ladder_2 = _1164;
                }
                else
                {
                    bool _1494 = _1160 == 4u;
                    frontier_phi_86_87_ladder_92_ladder_97_ladder = _1494 ? _1142 : _1167;
                    frontier_phi_86_87_ladder_92_ladder_97_ladder_1 = _1164;
                    frontier_phi_86_87_ladder_92_ladder_97_ladder_2 = _1494 ? _1171 : _1142;
                }
                frontier_phi_86_87_ladder_92_ladder = frontier_phi_86_87_ladder_92_ladder_97_ladder;
                frontier_phi_86_87_ladder_92_ladder_1 = frontier_phi_86_87_ladder_92_ladder_97_ladder_1;
                frontier_phi_86_87_ladder_92_ladder_2 = frontier_phi_86_87_ladder_92_ladder_97_ladder_2;
            }
            frontier_phi_86_87_ladder = frontier_phi_86_87_ladder_92_ladder;
            frontier_phi_86_87_ladder_1 = frontier_phi_86_87_ladder_92_ladder_1;
            frontier_phi_86_87_ladder_2 = frontier_phi_86_87_ladder_92_ladder_2;
        }
        _1195 = frontier_phi_86_87_ladder_2;
        _1197 = frontier_phi_86_87_ladder_1;
        _1198 = frontier_phi_86_87_ladder;
    }
    uvec2 _1220 = uvec2(textureSize(M_SCL_snp_0_Texture2D_11, int(0u)));
    float _1274;
    if (_557)
    {
        float _1234 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1240 = (_524 * _509) - (_521 * _512);
        float _1243 = (_518 * _512) - (_524 * _506);
        float _1246 = (_521 * _506) - (_518 * _509);
        float _1272 = ((log2((((float(_1220.y) * 0.5) * float(_1220.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1243 * _1243) + (_1246 * _1246)) + (_1240 * _1240)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1234 * gl_WorldRayDirectionEXT.x, _1234 * gl_WorldRayDirectionEXT.y, _1234 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1274 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
    }
    else
    {
        _1274 = 0.0;
    }
    vec4 _1276 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _525) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _526) + cbTextureTilingScale._m0[4u].w), _1274);
    uvec2 _1306 = uvec2(textureSize(M_SCL_snp_0_Texture2D_9, int(0u)));
    float _1363;
    if (_557)
    {
        float _1323 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1329 = (_524 * _509) - (_521 * _512);
        float _1332 = (_518 * _512) - (_524 * _506);
        float _1335 = (_521 * _506) - (_518 * _509);
        float _1361 = ((log2((((float(_1306.y) * 0.5) * float(_1306.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1332 * _1332) + (_1335 * _1335)) + (_1329 * _1329)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1323 * gl_WorldRayDirectionEXT.x, _1323 * gl_WorldRayDirectionEXT.y, _1323 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1363 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
    }
    else
    {
        _1363 = 0.0;
    }
    vec4 _1365 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _525) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _526) + cbTextureTilingScale._m0[11u].w), _1363);
    uvec2 _1395 = uvec2(textureSize(M_SCL_snp_0_Texture2D_7, int(0u)));
    float _1462;
    if (_557)
    {
        float _1422 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1428 = (_524 * _509) - (_521 * _512);
        float _1431 = (_518 * _512) - (_524 * _506);
        float _1434 = (_521 * _506) - (_518 * _509);
        float _1460 = ((log2((((float(_1395.y) * 0.5) * float(_1395.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1431 * _1431) + (_1434 * _1434)) + (_1428 * _1428)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1422 * gl_WorldRayDirectionEXT.x, _1422 * gl_WorldRayDirectionEXT.y, _1422 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1462 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    }
    else
    {
        _1462 = 0.0;
    }
    vec4 _1464 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _525) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _526) + cbTextureTilingScale._m0[9u].w), _1462);
    uvec2 _1493 = uvec2(textureSize(M_SCL_snp_0_Texture2D_8, int(0u)));
    float _1545;
    if (_557)
    {
        float _1505 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1511 = (_524 * _509) - (_521 * _512);
        float _1514 = (_518 * _512) - (_524 * _506);
        float _1517 = (_521 * _506) - (_518 * _509);
        float _1543 = ((log2((((float(_1493.y) * 0.5) * float(_1493.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1514 * _1514) + (_1517 * _1517)) + (_1511 * _1511)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1505 * gl_WorldRayDirectionEXT.x, _1505 * gl_WorldRayDirectionEXT.y, _1505 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1545 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
    }
    else
    {
        _1545 = 0.0;
    }
    vec4 _1547 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * _525) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _526) + cbTextureTilingScale._m0[10u].w), _1545);
    uvec2 _1575 = uvec2(textureSize(M_SCL_snp_0_Texture2D_6, int(0u)));
    float _1626;
    if (_557)
    {
        float _1586 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1592 = (_524 * _509) - (_521 * _512);
        float _1595 = (_518 * _512) - (_524 * _506);
        float _1598 = (_521 * _506) - (_518 * _509);
        float _1624 = ((log2((((float(_1575.y) * 0.5) * float(_1575.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1595 * _1595) + (_1598 * _1598)) + (_1592 * _1592)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1586 * gl_WorldRayDirectionEXT.x, _1586 * gl_WorldRayDirectionEXT.y, _1586 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1626 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
    }
    else
    {
        _1626 = 0.0;
    }
    vec4 _1628 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _525) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _526) + cbTextureTilingScale._m0[8u].w), _1626);
    uvec2 _1663 = uvec2(textureSize(M_SCL_snp_0_Texture2D_0, int(0u)));
    float _1714;
    if (_557)
    {
        float _1674 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1680 = (_524 * _509) - (_521 * _512);
        float _1683 = (_518 * _512) - (_524 * _506);
        float _1686 = (_521 * _506) - (_518 * _509);
        float _1712 = ((log2((((float(_1663.y) * 0.5) * float(_1663.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1683 * _1683) + (_1686 * _1686)) + (_1680 * _1680)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1674 * gl_WorldRayDirectionEXT.x, _1674 * gl_WorldRayDirectionEXT.y, _1674 * gl_WorldRayDirectionEXT.z), vec3(_537, _539, _540))));
        _1714 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
    }
    else
    {
        _1714 = 0.0;
    }
    vec4 _1716 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + _525) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + _526) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), _1714);
    uvec2 _1746 = uvec2(textureSize(M_SCL_snp_0_Texture2D_1, int(0u)));
    float _1750 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1751 = _1750 * gl_WorldRayDirectionEXT.x;
    float _1752 = _1750 * gl_WorldRayDirectionEXT.y;
    float _1753 = _1750 * gl_WorldRayDirectionEXT.z;
    float _1797;
    if (_557)
    {
        float _1763 = (_524 * _509) - (_521 * _512);
        float _1766 = (_518 * _512) - (_524 * _506);
        float _1769 = (_521 * _506) - (_518 * _509);
        float _1795 = ((log2((((float(_1746.y) * 0.5) * float(_1746.x)) * abs((_479 * _473) - (_478 * _475))) / (sqrt(((_1766 * _1766) + (_1769 * _1769)) + (_1763 * _1763)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_124) / abs(dot(vec3(_1751, _1752, _1753), vec3(_537, _539, _540))));
        _1797 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
    }
    else
    {
        _1797 = 0.0;
    }
    vec4 _1799 = textureLod(sampler2D(M_SCL_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + _525) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + _526) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _1797);
    float _1810 = inversesqrt(dot(vec3(_537, _539, _540), vec3(_537, _539, _540)));
    float _1811 = _1810 * _537;
    float _1812 = _1810 * _539;
    float _1813 = _1810 * _540;
    float _1825 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1826 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1827 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1828 = (-0.0) - _1751;
    float _1830 = (-0.0) - _1752;
    float _1831 = (-0.0) - _1753;
    float _1837 = float(gl_LaunchIDEXT.x);
    float _1838 = float(gl_LaunchIDEXT.y);
    float _1841 = float(gl_LaunchSizeEXT.x);
    float _1855 = fract(fract(sin(dot(vec2(_1837 / _1841, _1838 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1868 = fract(fract(sin(dot(vec2((_1837 + 128.0) / _1841, (_1838 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _73._m0 = 1u;
    uvec4 _1878 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1879 = _1878.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1879, _1878.w, _1879, vec3(_1825, _1826, _1827), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1944;
    float _1945;
    float _1946;
    if (_73._m0 == 0u)
    {
        float _1899 = g_sceneCB._m0[4u].x - _1751;
        float _1900 = g_sceneCB._m0[4u].y - _1752;
        float _1901 = g_sceneCB._m0[4u].z - _1753;
        float _1905 = inversesqrt(dot(vec3(_1899, _1900, _1901), vec3(_1899, _1900, _1901)));
        float _1909 = dot(vec3(_1811, _1812, _1813), vec3(g_sceneCB._m0[4u].xyz));
        float _2488 = isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0));
        float _1912 = isnan(1.0) ? _2488 : (isnan(_2488) ? 1.0 : min(_2488, 1.0));
        float _1913 = dot(vec3(_1811, _1812, _1813), vec3(_1828, _1830, _1831));
        float _2499 = isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0));
        float _1917 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1899 * _1905, _1900 * _1905, _1901 * _1905));
        float _2510 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
        float _1928 = (exp2(log2(1.0 - (isnan(1.0) ? _2510 : (isnan(_2510) ? 1.0 : min(_2510, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1934 = (0.5 / ((_1912 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2499 : (isnan(_2499) ? 1.0 : min(_2499, 1.0))))) * _1912;
        float _2521 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
        float _1936 = (isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0))) * 0.31831014156341552734375;
        _1944 = (_1928 * g_sceneCB._m0[5u].x) * _1936;
        _1945 = (_1928 * g_sceneCB._m0[5u].y) * _1936;
        _1946 = (_1928 * g_sceneCB._m0[5u].z) * _1936;
    }
    else
    {
        _1944 = 0.0;
        _1945 = 0.0;
        _1946 = 0.0;
    }
    bool _1948 = abs(_1812) < 0.89999997615814208984375;
    float _1950 = float(_1948);
    float _1951 = _1948 ? 0.0 : 1.0;
    float _1954 = (_1950 * _1813) - (_1951 * _1812);
    float _1955 = _1951 * _1811;
    float _1957 = (-0.0) - (_1811 * _1950);
    float _1961 = inversesqrt(dot(vec3(_1954, _1955, _1957), vec3(_1954, _1955, _1957)));
    float _1962 = _1954 * _1961;
    float _1963 = _1955 * _1961;
    float _1964 = _1961 * _1957;
    float _1967 = (_1963 * _1813) - (_1964 * _1812);
    float _1970 = (_1964 * _1811) - (_1962 * _1813);
    float _1973 = (_1962 * _1812) - (_1963 * _1811);
    float _1975;
    float _1983;
    float _1974 = 0.0;
    uint _1976 = 0u;
    float _1980;
    bool _1982;
    for (;;)
    {
        _1980 = (float(_1976) + _1855) * 0.03125;
        _1982 = _1976 == 0u;
        float frontier_phi_115_pred;
        if (_1982)
        {
            frontier_phi_115_pred = 0.0;
        }
        else
        {
            float _2137;
            float _2138;
            uint _2140;
            _2137 = 0.0;
            _2138 = 0.5;
            _2140 = _1976;
            float _1984;
            for (;;)
            {
                _1984 = ((_2140 & 1u) != 0u) ? (_2138 + _2137) : _2137;
                uint _2141 = _2140 >> 1u;
                if (_2141 == 0u)
                {
                    break;
                }
                else
                {
                    _2137 = _1984;
                    _2138 *= 0.5;
                    _2140 = _2141;
                }
            }
            frontier_phi_115_pred = _1984;
        }
        _1983 = frontier_phi_115_pred;
        float _1985 = _1983 + _1868;
        float _1990 = sqrt(_1980);
        float _1991 = ((_1985 > 1.0) ? (_1985 + (-1.0)) : _1985) * 6.283185482025146484375;
        float _1994 = cos(_1991) * _1990;
        float _1996 = sin(_1991) * _1990;
        float _1998 = sqrt(1.0 - _1980);
        float _2011 = ((_1998 * _1811) + (_1994 * _1967)) + (_1996 * _1962);
        float _2012 = ((_1998 * _1812) + (_1994 * _1970)) + (_1996 * _1963);
        float _2013 = ((_1998 * _1813) + (_1994 * _1973)) + (_1996 * _1964);
        _72._m0 = 1u;
        uvec4 _2017 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2018 = _2017.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2018, _2017.w, _2018, vec3(_1825, _1826, _1827), 9.9999997473787516355514526367188e-05, vec3(_2011, _2012, _2013), 10000.0, 1);
        float _2024 = dot(vec3(_1811, _1812, _1813), vec3(_2011, _2012, _2013));
        float _2532 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
        float _2027 = isnan(1.0) ? _2532 : (isnan(_2532) ? 1.0 : min(_2532, 1.0));
        _1975 = ((float(_72._m0 == 0u) * _2027) / (_2027 * 0.3183098733425140380859375)) + _1974;
        uint _1977 = _1976 + 1u;
        if (_1977 == 32u)
        {
            break;
        }
        else
        {
            _1974 = _1975;
            _1976 = _1977;
            continue;
        }
    }
    float _2036 = _1975 * 0.009947183541953563690185546875;
    float _2041 = dot(vec3(_1751, _1752, _1753), vec3(_1811, _1812, _1813)) * 2.0;
    vec4 _2053 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1751 - (_2041 * _1811), _1752 - (_2041 * _1812), _1753 - (_2041 * _1813)), 4.0);
    float _2058 = dot(vec3(_1828, _1830, _1831), vec3(_1811, _1812, _1813));
    float _2543 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2067 = (exp2(log2(1.0 - (isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2082 = (((((((((_819 * cbMtdParam._m0[20u].x) + (_670 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _905.x)) + (_1051 * cbMtdParam._m0[18u].y)) + (_1195 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].x * cbMtdParam._m0[21u].w) * _1276.x)) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[19u].x) * _1365.x)) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[18u].z) * _1464.x)) + ((cbMtdParam._m0[14u].x * cbMtdParam._m0[18u].w) * _1547.x)) + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[22u].x) * _1628.x);
    float _2086 = (((_2082 + (_1716.x * cbMtdParam._m0[9u].x)) + (_1799.x * cbMtdParam._m0[11u].x)) + _1944) + ((_2053.x * _2036) * _2067);
    float _2095 = (((((((((_821 * cbMtdParam._m0[20u].x) + (_672 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _905.y)) + (_1053 * cbMtdParam._m0[18u].y)) + (_1197 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].y * cbMtdParam._m0[21u].w) * _1276.y)) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[19u].x) * _1365.y)) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[18u].z) * _1464.y)) + ((cbMtdParam._m0[14u].y * cbMtdParam._m0[18u].w) * _1547.y)) + ((cbMtdParam._m0[12u].y * cbMtdParam._m0[22u].x) * _1628.y);
    float _2099 = (((_2095 + (_1716.y * cbMtdParam._m0[9u].y)) + (_1799.y * cbMtdParam._m0[11u].y)) + _1945) + ((_2053.y * _2036) * _2067);
    float _2108 = (((((((((_822 * cbMtdParam._m0[20u].x) + (_673 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _905.z)) + (_1054 * cbMtdParam._m0[18u].y)) + (_1198 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].z * cbMtdParam._m0[21u].w) * _1276.z)) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[19u].x) * _1365.z)) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[18u].z) * _1464.z)) + ((cbMtdParam._m0[14u].z * cbMtdParam._m0[18u].w) * _1547.z)) + ((cbMtdParam._m0[12u].z * cbMtdParam._m0[22u].x) * _1628.z);
    float _2112 = (((_2108 + (_1716.z * cbMtdParam._m0[9u].z)) + (_1799.z * cbMtdParam._m0[11u].z)) + _1946) + ((_2053.z * _2036) * _2067);
    float _2554 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
    float _2565 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2576 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    bool _2120 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2131;
    _2131.x = _2120 ? ((_530 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0)));
    _2131.y = _2120 ? ((_533 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2565 : (isnan(_2565) ? 1.0 : min(_2565, 1.0)));
    _2131.z = _2120 ? ((_536 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2576 : (isnan(_2576) ? 1.0 : min(_2576, 1.0)));
    payload._m0 = _2131;
}


