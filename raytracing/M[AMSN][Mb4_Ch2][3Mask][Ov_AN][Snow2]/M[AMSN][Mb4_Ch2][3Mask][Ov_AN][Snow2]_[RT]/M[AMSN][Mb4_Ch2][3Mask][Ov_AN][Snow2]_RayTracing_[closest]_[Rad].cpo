#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _69
{
    vec3 _m0;
};

struct _73
{
    vec2 _m0;
};

struct _76
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7;
layout(set = 0, binding = 17) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_17;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _69 payload;
hitAttributeEXT _73 hit;
layout(location = 1) rayPayloadEXT _76 _78;
layout(location = 2) rayPayloadEXT _76 _79;

vec3 _2610;

void main()
{
    float _87 = float(gl_LaunchSizeEXT.y);
    float _117 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _118 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _119 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _126 = sqrt(((_118 * _118) + (_117 * _117)) + (_119 * _119)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _87)))));
    uvec4 _137 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _138 = _137.y;
    uint _178;
    uint _180;
    uint _181;
    if (_137.x == 0u)
    {
        uint _146 = (_138 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _155 = uvec3(texelFetch(l_geomIndexBuffer, int(_146)).x, texelFetch(l_geomIndexBuffer, int(_146 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_146 + 2u)).x);
        _178 = _155.x;
        _180 = _155.y;
        _181 = _155.z;
    }
    else
    {
        uint _159 = uint(gl_PrimitiveID) * 6u;
        uint _161 = _159 & 4294967292u;
        uint _164 = (_138 + _161) >> 2u;
        uvec2 _171 = uvec2(texelFetch(l_geomIndexBuffer, int(_164)).x, texelFetch(l_geomIndexBuffer, int(_164 + 1u)).x);
        uint _172 = _171.x;
        uint _173 = _171.y;
        uint _175 = _172 >> 16u;
        uint _176 = _173 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_161 == _159)
        {
            frontier_phi_3_2_ladder = _175;
            frontier_phi_3_2_ladder_1 = _172 & 65535u;
            frontier_phi_3_2_ladder_2 = _176;
        }
        else
        {
            frontier_phi_3_2_ladder = _176;
            frontier_phi_3_2_ladder_1 = _175;
            frontier_phi_3_2_ladder_2 = _173 >> 16u;
        }
        _178 = frontier_phi_3_2_ladder_1;
        _180 = frontier_phi_3_2_ladder;
        _181 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _185 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _186 = _185.x;
    uint _187 = _185.z;
    bool _188 = _187 != 0u;
    bool _190 = _137.w == 0u;
    bool _191 = _188 || _190;
    uint _192 = _186 * _178;
    uint _193 = _192 + 12u;
    uint _217;
    uint _218;
    uint _219;
    uint _220;
    if (_191)
    {
        uvec4 _196 = texelFetch(l_geomAttrib_0, int(_193 >> 2u));
        uint _197 = _196.x;
        _217 = _197 & 255u;
        _218 = (_197 >> 8u) & 255u;
        _219 = (_197 >> 16u) & 255u;
        _220 = 16u;
    }
    else
    {
        uint _205 = _193 >> 2u;
        uvec2 _211 = uvec2(texelFetch(l_geomAttrib_0, int(_205)).x, texelFetch(l_geomAttrib_0, int(_205 + 1u)).x);
        uint _212 = _211.x;
        _217 = _212 & 65535u;
        _218 = _212 >> 16u;
        _219 = _211.y & 65535u;
        _220 = 20u;
    }
    uvec4 _228 = texelFetch(l_geomAttrib_0, int((_220 + _192) >> 2u));
    uint _229 = _228.x;
    bool _243 = _187 == 0u;
    uint _244;
    if (_243)
    {
        _244 = _220 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_190)
        {
            frontier_phi_9_10_ladder = _220 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _220 + 12u;
        }
        _244 = frontier_phi_9_10_ladder;
    }
    uint _251 = ((_192 + 4u) + (_188 ? (_244 + 4u) : _244)) >> 2u;
    uvec2 _257 = uvec2(texelFetch(l_geomAttrib_0, int(_251)).x, texelFetch(l_geomAttrib_0, int(_251 + 1u)).x);
    uint _258 = _257.x;
    uint _259 = _257.y;
    float _263 = float(int(uint(int(_258 << 16u) >> int(16u))));
    float _264 = float(int(uint(int(_258) >> int(16u))));
    float _268 = float(int(uint(int(_259 << 16u) >> int(16u))));
    float _269 = float(int(uint(int(_259) >> int(16u))));
    uint _270 = _186 * _180;
    uint _271 = _270 + 12u;
    uint _292;
    uint _293;
    uint _294;
    uint _295;
    if (_191)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_271 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
        _295 = 16u;
    }
    else
    {
        uint _280 = _271 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
        _295 = 20u;
    }
    uvec4 _301 = texelFetch(l_geomAttrib_0, int((_295 + _270) >> 2u));
    uint _302 = _301.x;
    uint _314;
    if (_243)
    {
        _314 = _295 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_190)
        {
            frontier_phi_16_17_ladder = _295 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _295 + 12u;
        }
        _314 = frontier_phi_16_17_ladder;
    }
    uint _321 = ((_270 + 4u) + (_188 ? (_314 + 4u) : _314)) >> 2u;
    uvec2 _327 = uvec2(texelFetch(l_geomAttrib_0, int(_321)).x, texelFetch(l_geomAttrib_0, int(_321 + 1u)).x);
    uint _328 = _327.x;
    uint _329 = _327.y;
    float _333 = float(int(uint(int(_328 << 16u) >> int(16u))));
    float _334 = float(int(uint(int(_328) >> int(16u))));
    float _338 = float(int(uint(int(_329 << 16u) >> int(16u))));
    float _339 = float(int(uint(int(_329) >> int(16u))));
    uint _340 = _186 * _181;
    uint _341 = _340 + 12u;
    uint _362;
    uint _363;
    uint _364;
    uint _365;
    if (_191)
    {
        uvec4 _343 = texelFetch(l_geomAttrib_0, int(_341 >> 2u));
        uint _344 = _343.x;
        _362 = _344 & 255u;
        _363 = (_344 >> 8u) & 255u;
        _364 = (_344 >> 16u) & 255u;
        _365 = 16u;
    }
    else
    {
        uint _350 = _341 >> 2u;
        uvec2 _356 = uvec2(texelFetch(l_geomAttrib_0, int(_350)).x, texelFetch(l_geomAttrib_0, int(_350 + 1u)).x);
        uint _357 = _356.x;
        _362 = _357 & 65535u;
        _363 = _357 >> 16u;
        _364 = _356.y & 65535u;
        _365 = 20u;
    }
    uvec4 _371 = texelFetch(l_geomAttrib_0, int((_365 + _340) >> 2u));
    uint _372 = _371.x;
    uint _384;
    if (_243)
    {
        _384 = _365 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_190)
        {
            frontier_phi_23_24_ladder = _365 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _365 + 12u;
        }
        _384 = frontier_phi_23_24_ladder;
    }
    uint _391 = ((_340 + 4u) + (_188 ? (_384 + 4u) : _384)) >> 2u;
    uvec2 _397 = uvec2(texelFetch(l_geomAttrib_0, int(_391)).x, texelFetch(l_geomAttrib_0, int(_391 + 1u)).x);
    uint _398 = _397.x;
    uint _399 = _397.y;
    float _403 = float(int(uint(int(_398 << 16u) >> int(16u))));
    float _404 = float(int(uint(int(_398) >> int(16u))));
    float _408 = float(int(uint(int(_399 << 16u) >> int(16u))));
    float _409 = float(int(uint(int(_399) >> int(16u))));
    bool _411 = _137.z == 0u;
    float _447;
    float _448;
    float _449;
    if (_411)
    {
        uint _414 = _178 * 3u;
        uvec3 _423 = uvec3(texelFetch(l_geomPositionBuffer, int(_414)).x, texelFetch(l_geomPositionBuffer, int(_414 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_414 + 2u)).x);
        _447 = uintBitsToFloat(_423.x);
        _448 = uintBitsToFloat(_423.y);
        _449 = uintBitsToFloat(_423.z);
    }
    else
    {
        uint _431 = _178 * 2u;
        uvec2 _437 = uvec2(texelFetch(l_geomPositionBuffer, int(_431)).x, texelFetch(l_geomPositionBuffer, int(_431 + 1u)).x);
        uint _438 = _437.x;
        _447 = unpackHalf2x16(_438).x;
        _448 = unpackHalf2x16(_438 >> 16u).x;
        _449 = unpackHalf2x16(_437.y).x;
    }
    float _485;
    float _486;
    float _487;
    if (_411)
    {
        uint _452 = _180 * 3u;
        uvec3 _461 = uvec3(texelFetch(l_geomPositionBuffer, int(_452)).x, texelFetch(l_geomPositionBuffer, int(_452 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_452 + 2u)).x);
        _485 = uintBitsToFloat(_461.x);
        _486 = uintBitsToFloat(_461.y);
        _487 = uintBitsToFloat(_461.z);
    }
    else
    {
        uint _469 = _180 * 2u;
        uvec2 _475 = uvec2(texelFetch(l_geomPositionBuffer, int(_469)).x, texelFetch(l_geomPositionBuffer, int(_469 + 1u)).x);
        uint _476 = _475.x;
        _485 = unpackHalf2x16(_476).x;
        _486 = unpackHalf2x16(_476 >> 16u).x;
        _487 = unpackHalf2x16(_475.y).x;
    }
    float _523;
    float _524;
    float _525;
    if (_411)
    {
        uint _490 = _181 * 3u;
        uvec3 _499 = uvec3(texelFetch(l_geomPositionBuffer, int(_490)).x, texelFetch(l_geomPositionBuffer, int(_490 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_490 + 2u)).x);
        _523 = uintBitsToFloat(_499.x);
        _524 = uintBitsToFloat(_499.y);
        _525 = uintBitsToFloat(_499.z);
    }
    else
    {
        uint _507 = _181 * 2u;
        uvec2 _513 = uvec2(texelFetch(l_geomPositionBuffer, int(_507)).x, texelFetch(l_geomPositionBuffer, int(_507 + 1u)).x);
        uint _514 = _513.x;
        _523 = unpackHalf2x16(_514).x;
        _524 = unpackHalf2x16(_514 >> 16u).x;
        _525 = unpackHalf2x16(_513.y).x;
    }
    float _528 = (1.0 - hit._m0.x) - hit._m0.y;
    float _572 = (_333 - _263) * 0.00048828125;
    float _574 = (_334 - _264) * 0.00048828125;
    float _577 = (_403 - _263) * 0.00048828125;
    float _578 = (_404 - _264) * 0.00048828125;
    float _581 = (_338 - _268) * 0.00048828125;
    float _582 = (_339 - _269) * 0.00048828125;
    float _585 = (_408 - _268) * 0.00048828125;
    float _586 = (_409 - _269) * 0.00048828125;
    float _608 = _485 - _447;
    float _609 = _486 - _448;
    float _610 = _487 - _449;
    float _613 = fma(_610, gl_ObjectToWorldEXT[2u].x, fma(_609, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _608));
    float _616 = fma(_610, gl_ObjectToWorldEXT[2u].y, fma(_609, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _608));
    float _619 = fma(_610, gl_ObjectToWorldEXT[2u].z, fma(_609, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _608));
    float _620 = _523 - _447;
    float _621 = _524 - _448;
    float _622 = _525 - _449;
    float _625 = fma(_622, gl_ObjectToWorldEXT[2u].x, fma(_621, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _620));
    float _628 = fma(_622, gl_ObjectToWorldEXT[2u].y, fma(_621, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _620));
    float _631 = fma(_622, gl_ObjectToWorldEXT[2u].z, fma(_621, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _620));
    float _632 = (((_333 * hit._m0.x) + (_263 * _528)) + (_403 * hit._m0.y)) * 0.00048828125;
    float _633 = (((_334 * hit._m0.x) + (_264 * _528)) + (_404 * hit._m0.y)) * 0.00048828125;
    float _634 = (((_338 * hit._m0.x) + (_268 * _528)) + (_408 * hit._m0.y)) * 0.00048828125;
    float _635 = (((_339 * hit._m0.x) + (_269 * _528)) + (_409 * hit._m0.y)) * 0.00048828125;
    float _639 = (((float(_217) * _528) + (-127.0)) + (float(_292) * hit._m0.x)) + (float(_362) * hit._m0.y);
    float _642 = (((float(_218) * _528) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_363) * hit._m0.y);
    float _645 = (((float(_219) * _528) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_364) * hit._m0.y);
    float _646 = _639 * 0.0078740157186985015869140625;
    float _648 = _642 * 0.0078740157186985015869140625;
    float _649 = _645 * 0.0078740157186985015869140625;
    float _662 = ((((float(_229 & 255u) * _528) + (-127.0)) + (float(_302 & 255u) * hit._m0.x)) + (float(_372 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _663 = ((((float((_229 >> 8u) & 255u) * _528) + (-127.0)) + (float((_302 >> 8u) & 255u) * hit._m0.x)) + (float((_372 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _664 = ((((float((_229 >> 16u) & 255u) * _528) + (-127.0)) + (float((_302 >> 16u) & 255u) * hit._m0.x)) + (float((_372 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _665 = ((((float(_229 >> 24u) * _528) + (-127.0)) + (float(_302 >> 24u) * hit._m0.x)) + (float(_372 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _675 = ((_663 * _649) - (_664 * _648)) * _665;
    float _676 = ((_664 * _646) - (_662 * _649)) * _665;
    float _677 = ((_662 * _648) - (_663 * _646)) * _665;
    float _681 = inversesqrt(dot(vec3(_675, _676, _677), vec3(_675, _676, _677)));
    uvec2 _704 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6, int(0u)));
    bool _709 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _762;
    if (_709)
    {
        float _720 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _726 = (_631 * _616) - (_628 * _619);
        float _729 = (_625 * _619) - (_631 * _613);
        float _732 = (_628 * _613) - (_625 * _616);
        float _759 = ((log2((((float(_704.y) * 0.5) * float(_704.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_729 * _729) + (_732 * _732)) + (_726 * _726)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_720 * gl_WorldRayDirectionEXT.x, _720 * gl_WorldRayDirectionEXT.y, _720 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _762 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    }
    else
    {
        _762 = 0.0;
    }
    vec4 _766 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * _632) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _633) + cbTextureTilingScale._m0[15u].w), _762);
    uvec2 _786 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7, int(0u)));
    float _837;
    if (_709)
    {
        float _797 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _803 = (_631 * _616) - (_628 * _619);
        float _806 = (_625 * _619) - (_631 * _613);
        float _809 = (_628 * _613) - (_625 * _616);
        float _835 = ((log2((((float(_786.y) * 0.5) * float(_786.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_806 * _806) + (_809 * _809)) + (_803 * _803)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_797 * gl_WorldRayDirectionEXT.x, _797 * gl_WorldRayDirectionEXT.y, _797 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _837 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    }
    else
    {
        _837 = 0.0;
    }
    float _842 = cbMtdParam._m0[15u].x * textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * _632) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _633) + cbTextureTilingScale._m0[16u].w), _837).x;
    float _852 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _766.x) * 2.0) - _842)) + 1.0;
    float _2730 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _853 = isnan(1.0) ? _2730 : (isnan(_2730) ? 1.0 : min(_2730, 1.0));
    uvec2 _865 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12, int(0u)));
    float _916;
    if (_709)
    {
        float _876 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _882 = (_631 * _616) - (_628 * _619);
        float _885 = (_625 * _619) - (_631 * _613);
        float _888 = (_628 * _613) - (_625 * _616);
        float _914 = ((log2((((float(_865.y) * 0.5) * float(_865.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_885 * _885) + (_888 * _888)) + (_882 * _882)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_876 * gl_WorldRayDirectionEXT.x, _876 * gl_WorldRayDirectionEXT.y, _876 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _916 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    }
    else
    {
        _916 = 0.0;
    }
    vec4 _919 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _634) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _635) + cbTextureTilingScale._m0[4u].w), _916);
    uvec2 _935 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14, int(0u)));
    float _986;
    if (_709)
    {
        float _946 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _952 = (_631 * _616) - (_628 * _619);
        float _955 = (_625 * _619) - (_631 * _613);
        float _958 = (_628 * _613) - (_625 * _616);
        float _984 = ((log2((((float(_935.y) * 0.5) * float(_935.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_955 * _955) + (_958 * _958)) + (_952 * _952)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_946 * gl_WorldRayDirectionEXT.x, _946 * gl_WorldRayDirectionEXT.y, _946 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _986 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    }
    else
    {
        _986 = 0.0;
    }
    vec4 _988 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _634) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _635) + cbTextureTilingScale._m0[6u].w), _986);
    float _990 = _988.x;
    float _991 = _988.y;
    float _992 = _988.z;
    float _999 = ((_919.x - _990) * _853) + _990;
    float _1000 = ((_919.y - _991) * _853) + _991;
    float _1001 = ((_919.z - _992) * _853) + _992;
    float _1007 = (((((1.0 - _766.y) * 2.0) - _842) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].z) + 1.0;
    float _2751 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
    float _1008 = isnan(1.0) ? _2751 : (isnan(_2751) ? 1.0 : min(_2751, 1.0));
    uvec2 _1020 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10, int(0u)));
    float _1071;
    if (_709)
    {
        float _1031 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1037 = (_631 * _616) - (_628 * _619);
        float _1040 = (_625 * _619) - (_631 * _613);
        float _1043 = (_628 * _613) - (_625 * _616);
        float _1069 = ((log2((((float(_1020.y) * 0.5) * float(_1020.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1040 * _1040) + (_1043 * _1043)) + (_1037 * _1037)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1031 * gl_WorldRayDirectionEXT.x, _1031 * gl_WorldRayDirectionEXT.y, _1031 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1071 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    }
    else
    {
        _1071 = 0.0;
    }
    vec4 _1073 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _634) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _635) + cbTextureTilingScale._m0[2u].w), _1071);
    float _1084 = ((_1073.x - _999) * _1008) + _999;
    float _1085 = ((_1073.y - _1000) * _1008) + _1000;
    float _1086 = ((_1073.z - _1001) * _1008) + _1001;
    float _1092 = (((((1.0 - _766.z) * 2.0) - _842) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _2767 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    float _1093 = isnan(1.0) ? _2767 : (isnan(_2767) ? 1.0 : min(_2767, 1.0));
    uvec2 _1105 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8, int(0u)));
    float _1156;
    if (_709)
    {
        float _1116 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1122 = (_631 * _616) - (_628 * _619);
        float _1125 = (_625 * _619) - (_631 * _613);
        float _1128 = (_628 * _613) - (_625 * _616);
        float _1154 = ((log2((((float(_1105.y) * 0.5) * float(_1105.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1125 * _1125) + (_1128 * _1128)) + (_1122 * _1122)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1116 * gl_WorldRayDirectionEXT.x, _1116 * gl_WorldRayDirectionEXT.y, _1116 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1156 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    }
    else
    {
        _1156 = 0.0;
    }
    vec4 _1158 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _634) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _635) + cbTextureTilingScale._m0[17u].w), _1156);
    float _1171 = ((_1158.z - _1086) * _1093) + _1086;
    float _1174 = ((((_1158.x - _1084) * _1093) + _1084) * 2.0) + (-1.0);
    float _1176 = ((((_1158.y - _1085) * _1093) + _1085) * 2.0) + (-1.0);
    float _1177 = dot(vec2(_1174, _1176), vec2(_1174, _1176));
    float _2783 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
    float _1182 = sqrt(1.0 - (isnan(1.0) ? _2783 : (isnan(_2783) ? 1.0 : min(_2783, 1.0))));
    float _1183 = fma(_1182, _646, 0.0);
    float _1184 = fma(_1182, _648, 0.0);
    float _1185 = fma(_1182, _649, 0.0);
    float _1189 = inversesqrt(dot(vec3(_1183, _1184, _1185), vec3(_1183, _1184, _1185)));
    float _1197 = cbMtdParam._m0[14u].z + dot(vec4(_1189 * _1183, _1189 * _1184, _1189 * _1185, 0.0), vec4(cbMtdParam._m0[15u].w, cbMtdParam._m0[16u].xy, 0.0));
    float _2794 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _1198 = isnan(1.0) ? _2794 : (isnan(_2794) ? 1.0 : min(_2794, 1.0));
    uvec2 _1216 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15, int(0u)));
    float _1267;
    if (_709)
    {
        float _1227 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1233 = (_631 * _616) - (_628 * _619);
        float _1236 = (_625 * _619) - (_631 * _613);
        float _1239 = (_628 * _613) - (_625 * _616);
        float _1265 = ((log2((((float(_1216.y) * 0.5) * float(_1216.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1236 * _1236) + (_1239 * _1239)) + (_1233 * _1233)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1227 * gl_WorldRayDirectionEXT.x, _1227 * gl_WorldRayDirectionEXT.y, _1227 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1267 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
    }
    else
    {
        _1267 = 0.0;
    }
    vec4 _1270 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _634) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _635) + cbTextureTilingScale._m0[7u].w), _1267);
    float _1275 = _1270.x * cbMtdParam._m0[10u].x;
    float _1276 = _1270.y * cbMtdParam._m0[10u].y;
    float _1277 = _1270.z * cbMtdParam._m0[10u].z;
    uvec2 _1296 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13, int(0u)));
    float _1347;
    if (_709)
    {
        float _1307 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1313 = (_631 * _616) - (_628 * _619);
        float _1316 = (_625 * _619) - (_631 * _613);
        float _1319 = (_628 * _613) - (_625 * _616);
        float _1345 = ((log2((((float(_1296.y) * 0.5) * float(_1296.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1316 * _1316) + (_1319 * _1319)) + (_1313 * _1313)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1307 * gl_WorldRayDirectionEXT.x, _1307 * gl_WorldRayDirectionEXT.y, _1307 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1347 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
    }
    else
    {
        _1347 = 0.0;
    }
    vec4 _1349 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _634) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _635) + cbTextureTilingScale._m0[5u].w), _1347);
    float _1363 = (((_1349.x * cbMtdParam._m0[11u].x) - _1275) * _853) + _1275;
    float _1364 = (((_1349.y * cbMtdParam._m0[11u].y) - _1276) * _853) + _1276;
    float _1365 = (((_1349.z * cbMtdParam._m0[11u].z) - _1277) * _853) + _1277;
    uvec2 _1382 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11, int(0u)));
    float _1433;
    if (_709)
    {
        float _1393 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1399 = (_631 * _616) - (_628 * _619);
        float _1402 = (_625 * _619) - (_631 * _613);
        float _1405 = (_628 * _613) - (_625 * _616);
        float _1431 = ((log2((((float(_1382.y) * 0.5) * float(_1382.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1402 * _1402) + (_1405 * _1405)) + (_1399 * _1399)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1393 * gl_WorldRayDirectionEXT.x, _1393 * gl_WorldRayDirectionEXT.y, _1393 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1433 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
    }
    else
    {
        _1433 = 0.0;
    }
    vec4 _1435 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _634) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _635) + cbTextureTilingScale._m0[3u].w), _1433);
    float _1449 = (((_1435.x * cbMtdParam._m0[12u].x) - _1363) * _1008) + _1363;
    float _1450 = (((_1435.y * cbMtdParam._m0[12u].y) - _1364) * _1008) + _1364;
    float _1451 = (((_1435.z * cbMtdParam._m0[12u].z) - _1365) * _1008) + _1365;
    uvec2 _1470 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9, int(0u)));
    float _1521;
    if (_709)
    {
        float _1481 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1487 = (_631 * _616) - (_628 * _619);
        float _1490 = (_625 * _619) - (_631 * _613);
        float _1493 = (_628 * _613) - (_625 * _616);
        float _1519 = ((log2((((float(_1470.y) * 0.5) * float(_1470.x)) * abs((_586 * _581) - (_585 * _582))) / (sqrt(((_1490 * _1490) + (_1493 * _1493)) + (_1487 * _1487)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1481 * gl_WorldRayDirectionEXT.x, _1481 * gl_WorldRayDirectionEXT.y, _1481 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1521 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
    }
    else
    {
        _1521 = 0.0;
    }
    vec4 _1523 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[18u].x * _634) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _635) + cbTextureTilingScale._m0[18u].w), _1521);
    uvec2 _1557 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0, int(0u)));
    float _1608;
    if (_709)
    {
        float _1568 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1574 = (_631 * _616) - (_628 * _619);
        float _1577 = (_625 * _619) - (_631 * _613);
        float _1580 = (_628 * _613) - (_625 * _616);
        float _1606 = ((log2((((float(_1557.y) * 0.5) * float(_1557.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1577 * _1577) + (_1580 * _1580)) + (_1574 * _1574)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1568 * gl_WorldRayDirectionEXT.x, _1568 * gl_WorldRayDirectionEXT.y, _1568 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1608 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
    }
    else
    {
        _1608 = 0.0;
    }
    vec4 _1610 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _632) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _633) + cbTextureTilingScale._m0[0u].w), _1608);
    float _1618 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_1523.x * cbMtdParam._m0[13u].x) - _1449) * _1093) + _1449)) * _1610.x;
    float _1621 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_1523.y * cbMtdParam._m0[13u].y) - _1450) * _1093) + _1450)) * _1610.y;
    float _1624 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_1523.z * cbMtdParam._m0[13u].z) - _1451) * _1093) + _1451)) * _1610.z;
    uvec2 _1636 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5, int(0u)));
    float _1687;
    if (_709)
    {
        float _1647 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1653 = (_631 * _616) - (_628 * _619);
        float _1656 = (_625 * _619) - (_631 * _613);
        float _1659 = (_628 * _613) - (_625 * _616);
        float _1685 = ((log2((((float(_1636.y) * 0.5) * float(_1636.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1656 * _1656) + (_1659 * _1659)) + (_1653 * _1653)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1647 * gl_WorldRayDirectionEXT.x, _1647 * gl_WorldRayDirectionEXT.y, _1647 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1687 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
    }
    else
    {
        _1687 = 0.0;
    }
    vec4 _1689 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _632) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _633) + cbTextureTilingScale._m0[14u].w), _1687);
    float _1700 = ((_1689.x - _1618) * _1198) + _1618;
    float _1701 = ((_1689.y - _1621) * _1198) + _1621;
    float _1702 = ((_1689.z - _1624) * _1198) + _1624;
    uvec2 _1715 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_1, int(0u)));
    float _1766;
    if (_709)
    {
        float _1726 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1732 = (_631 * _616) - (_628 * _619);
        float _1735 = (_625 * _619) - (_631 * _613);
        float _1738 = (_628 * _613) - (_625 * _616);
        float _1764 = ((log2((((float(_1715.y) * 0.5) * float(_1715.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1735 * _1735) + (_1738 * _1738)) + (_1732 * _1732)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1726 * gl_WorldRayDirectionEXT.x, _1726 * gl_WorldRayDirectionEXT.y, _1726 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1766 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
    }
    else
    {
        _1766 = 0.0;
    }
    vec4 _1768 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _632) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _633) + cbTextureTilingScale._m0[1u].w), _1766);
    float _1770 = _1768.x;
    uvec2 _1782 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_17, int(0u)));
    float _1833;
    if (_709)
    {
        float _1793 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1799 = (_631 * _616) - (_628 * _619);
        float _1802 = (_625 * _619) - (_631 * _613);
        float _1805 = (_628 * _613) - (_625 * _616);
        float _1831 = ((log2((((float(_1782.y) * 0.5) * float(_1782.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1802 * _1802) + (_1805 * _1805)) + (_1799 * _1799)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1793 * gl_WorldRayDirectionEXT.x, _1793 * gl_WorldRayDirectionEXT.y, _1793 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1833 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
    }
    else
    {
        _1833 = 0.0;
    }
    float _1840 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _632) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _633) + cbTextureTilingScale._m0[9u].w), _1833).x - _1770) * _853) + _1770;
    uvec2 _1852 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_4, int(0u)));
    float _1903;
    if (_709)
    {
        float _1863 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1869 = (_631 * _616) - (_628 * _619);
        float _1872 = (_625 * _619) - (_631 * _613);
        float _1875 = (_628 * _613) - (_625 * _616);
        float _1901 = ((log2((((float(_1852.y) * 0.5) * float(_1852.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1872 * _1872) + (_1875 * _1875)) + (_1869 * _1869)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1863 * gl_WorldRayDirectionEXT.x, _1863 * gl_WorldRayDirectionEXT.y, _1863 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1903 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
    }
    else
    {
        _1903 = 0.0;
    }
    float _1910 = ((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * _632) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _633) + cbTextureTilingScale._m0[13u].w), _1903).x - _1840) * _1008) + _1840;
    uvec2 _1922 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_18, int(0u)));
    float _1973;
    if (_709)
    {
        float _1933 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1939 = (_631 * _616) - (_628 * _619);
        float _1942 = (_625 * _619) - (_631 * _613);
        float _1945 = (_628 * _613) - (_625 * _616);
        float _1971 = ((log2((((float(_1922.y) * 0.5) * float(_1922.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_1942 * _1942) + (_1945 * _1945)) + (_1939 * _1939)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_1933 * gl_WorldRayDirectionEXT.x, _1933 * gl_WorldRayDirectionEXT.y, _1933 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _1973 = isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0));
    }
    else
    {
        _1973 = 0.0;
    }
    uvec2 _1992 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_2, int(0u)));
    float _2043;
    if (_709)
    {
        float _2003 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2009 = (_631 * _616) - (_628 * _619);
        float _2012 = (_625 * _619) - (_631 * _613);
        float _2015 = (_628 * _613) - (_625 * _616);
        float _2041 = ((log2((((float(_1992.y) * 0.5) * float(_1992.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_2012 * _2012) + (_2015 * _2015)) + (_2009 * _2009)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_2003 * gl_WorldRayDirectionEXT.x, _2003 * gl_WorldRayDirectionEXT.y, _2003 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _2043 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
    }
    else
    {
        _2043 = 0.0;
    }
    vec4 _2045 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _632) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _633) + cbTextureTilingScale._m0[11u].w), _2043);
    float _2047 = _2045.x;
    float _2860 = isnan(0.0) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.0 : max(cbMtdParam._m0[14u].y, 0.0));
    float _2051 = (((((textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _632) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _633) + cbTextureTilingScale._m0[10u].w), _1973).x - _1910) * _1093) + _1910) - _2047) * (isnan(1.0) ? _2860 : (isnan(_2860) ? 1.0 : min(_2860, 1.0)))) + _2047;
    float _2053 = _2051 - (_2051 * _1198);
    uvec2 _2065 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3, int(0u)));
    float _2116;
    if (_709)
    {
        float _2076 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _2082 = (_631 * _616) - (_628 * _619);
        float _2085 = (_625 * _619) - (_631 * _613);
        float _2088 = (_628 * _613) - (_625 * _616);
        float _2114 = ((log2((((float(_2065.y) * 0.5) * float(_2065.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_2085 * _2085) + (_2088 * _2088)) + (_2082 * _2082)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_2076 * gl_WorldRayDirectionEXT.x, _2076 * gl_WorldRayDirectionEXT.y, _2076 * gl_WorldRayDirectionEXT.z), vec3(_646, _648, _649))));
        _2116 = isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0));
    }
    else
    {
        _2116 = 0.0;
    }
    vec4 _2118 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _632) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _633) + cbTextureTilingScale._m0[12u].w), _2116);
    float _2125 = (_2118.x * 2.0) + (-1.0);
    float _2126 = (_2118.y * 2.0) + (-1.0);
    float _2127 = dot(vec2(_2125, _2126), vec2(_2125, _2126));
    float _2876 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
    float _2135 = ((_2118.z - _1171) * _1198) + _1171;
    float _2144 = ((sqrt(1.0 - (isnan(1.0) ? _2876 : (isnan(_2876) ? 1.0 : min(_2876, 1.0)))) - _1182) * _1198) + _1182;
    uvec2 _2157 = uvec2(textureSize(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16, int(0u)));
    float _2161 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _2162 = _2161 * gl_WorldRayDirectionEXT.x;
    float _2163 = _2161 * gl_WorldRayDirectionEXT.y;
    float _2164 = _2161 * gl_WorldRayDirectionEXT.z;
    float _2208;
    if (_709)
    {
        float _2174 = (_631 * _616) - (_628 * _619);
        float _2177 = (_625 * _619) - (_631 * _613);
        float _2180 = (_628 * _613) - (_625 * _616);
        float _2206 = ((log2((((float(_2157.y) * 0.5) * float(_2157.x)) * abs((_578 * _572) - (_577 * _574))) / (sqrt(((_2177 * _2177) + (_2180 * _2180)) + (_2174 * _2174)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_126) / abs(dot(vec3(_2162, _2163, _2164), vec3(_646, _648, _649))));
        _2208 = isnan(0.0) ? _2206 : (isnan(_2206) ? 0.0 : max(_2206, 0.0));
    }
    else
    {
        _2208 = 0.0;
    }
    vec4 _2210 = textureLod(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _632) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _633) + cbTextureTilingScale._m0[8u].w), _2208);
    float _2220 = (((_2125 - _1174) * _1198) + _1174) + (((_2210.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].w);
    float _2221 = (((_2126 - _1176) * _1198) + _1176) + (((_2210.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].w);
    float _2224 = fma(_2144, _646, fma(_2221, _662, (_681 * _675) * _2220));
    float _2227 = fma(_2144, _648, fma(_2221, _663, (_681 * _676) * _2220));
    float _2230 = fma(_2144, _649, fma(_2221, _664, (_681 * _677) * _2220));
    float _2234 = inversesqrt(dot(vec3(_2224, _2227, _2230), vec3(_2224, _2227, _2230)));
    float _2235 = _2234 * _2224;
    float _2236 = _2234 * _2227;
    float _2237 = _2234 * _2230;
    float _2249 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _2250 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _2251 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _2252 = (-0.0) - _2162;
    float _2254 = (-0.0) - _2163;
    float _2255 = (-0.0) - _2164;
    float _2261 = float(gl_LaunchIDEXT.x);
    float _2262 = float(gl_LaunchIDEXT.y);
    float _2265 = float(gl_LaunchSizeEXT.x);
    float _2279 = fract(fract(sin(dot(vec2(_2261 / _2265, _2262 / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2292 = fract(fract(sin(dot(vec2((_2261 + 128.0) / _2265, (_2262 + 128.0) / _87), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _2293 = 1.0 - _2053;
    float _2294 = _2293 * _1700;
    float _2295 = _2293 * _1701;
    float _2296 = _2293 * _1702;
    float _2301 = _2053 * (_1700 + (-0.039999999105930328369140625));
    float _2302 = _2053 * (_1701 + (-0.039999999105930328369140625));
    float _2303 = _2053 * (_1702 + (-0.039999999105930328369140625));
    float _2304 = _2301 + 0.039999999105930328369140625;
    float _2306 = _2302 + 0.039999999105930328369140625;
    float _2307 = _2303 + 0.039999999105930328369140625;
    _79._m0 = 1u;
    uvec4 _2317 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _2318 = _2317.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _2318, _2317.w, _2318, vec3(_2249, _2250, _2251), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2432;
    float _2433;
    float _2434;
    float _2435;
    float _2436;
    float _2437;
    if (_79._m0 == 0u)
    {
        float _2338 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2235, _2236, _2237));
        float _2892 = isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0));
        float _2341 = isnan(1.0) ? _2892 : (isnan(_2892) ? 1.0 : min(_2892, 1.0));
        float _2360 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _2135) * 0.949999988079071044921875);
        float _2361 = _2360 * _2360;
        float _2362 = g_sceneCB._m0[4u].x - _2162;
        float _2363 = g_sceneCB._m0[4u].y - _2163;
        float _2364 = g_sceneCB._m0[4u].z - _2164;
        float _2368 = inversesqrt(dot(vec3(_2362, _2363, _2364), vec3(_2362, _2363, _2364)));
        float _2369 = _2368 * _2362;
        float _2370 = _2368 * _2363;
        float _2371 = _2368 * _2364;
        float _2372 = dot(vec3(_2235, _2236, _2237), vec3(g_sceneCB._m0[4u].xyz));
        float _2903 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
        float _2375 = isnan(1.0) ? _2903 : (isnan(_2903) ? 1.0 : min(_2903, 1.0));
        float _2376 = dot(vec3(_2235, _2236, _2237), vec3(_2252, _2254, _2255));
        float _2914 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
        float _2379 = isnan(1.0) ? _2914 : (isnan(_2914) ? 1.0 : min(_2914, 1.0));
        float _2380 = dot(vec3(_2235, _2236, _2237), vec3(_2369, _2370, _2371));
        float _2925 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
        float _2383 = isnan(1.0) ? _2925 : (isnan(_2925) ? 1.0 : min(_2925, 1.0));
        float _2384 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_2369, _2370, _2371));
        float _2936 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
        float _2388 = _2361 * _2361;
        float _2392 = ((_2383 * _2383) * (_2388 + (-1.0))) + 1.0;
        float _2401 = exp2(log2(1.0 - (isnan(1.0) ? _2936 : (isnan(_2936) ? 1.0 : min(_2936, 1.0)))) * 5.0);
        float _2412 = 1.0 - _2361;
        float _2423 = (0.5 / (((_2379 * ((_2375 * _2412) + _2361)) + 9.9999999392252902907785028219223e-09) + (((_2379 * _2412) + _2361) * _2375))) * _2375;
        float _2947 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
        float _2425 = (isnan(1.0) ? _2947 : (isnan(_2947) ? 1.0 : min(_2947, 1.0))) * (_2388 / ((_2392 * _2392) * 3.141590118408203125));
        _2432 = ((_2294 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _2341;
        _2433 = ((_2295 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _2341;
        _2434 = ((_2296 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _2341;
        _2435 = (((_2401 * (0.959999978542327880859375 - _2301)) + _2304) * g_sceneCB._m0[5u].x) * _2425;
        _2436 = (((_2401 * (0.959999978542327880859375 - _2302)) + _2306) * g_sceneCB._m0[5u].y) * _2425;
        _2437 = (((_2401 * (0.959999978542327880859375 - _2303)) + _2307) * g_sceneCB._m0[5u].z) * _2425;
    }
    else
    {
        _2432 = 0.0;
        _2433 = 0.0;
        _2434 = 0.0;
        _2435 = 0.0;
        _2436 = 0.0;
        _2437 = 0.0;
    }
    bool _2439 = abs(_2236) < 0.89999997615814208984375;
    float _2441 = float(_2439);
    float _2442 = _2439 ? 0.0 : 1.0;
    float _2445 = (_2441 * _2237) - (_2442 * _2236);
    float _2446 = _2442 * _2235;
    float _2448 = (-0.0) - (_2235 * _2441);
    float _2452 = inversesqrt(dot(vec3(_2445, _2446, _2448), vec3(_2445, _2446, _2448)));
    float _2453 = _2445 * _2452;
    float _2454 = _2446 * _2452;
    float _2455 = _2452 * _2448;
    float _2458 = (_2454 * _2237) - (_2455 * _2236);
    float _2461 = (_2455 * _2235) - (_2453 * _2237);
    float _2464 = (_2453 * _2236) - (_2454 * _2235);
    float _2466;
    float _2474;
    float _2465 = 0.0;
    uint _2467 = 0u;
    float _2471;
    bool _2473;
    for (;;)
    {
        _2471 = (float(_2467) + _2279) * 0.03125;
        _2473 = _2467 == 0u;
        float frontier_phi_77_pred;
        if (_2473)
        {
            frontier_phi_77_pred = 0.0;
        }
        else
        {
            float _2615;
            float _2616;
            uint _2618;
            _2615 = 0.0;
            _2616 = 0.5;
            _2618 = _2467;
            float _2475;
            for (;;)
            {
                _2475 = ((_2618 & 1u) != 0u) ? (_2616 + _2615) : _2615;
                uint _2619 = _2618 >> 1u;
                if (_2619 == 0u)
                {
                    break;
                }
                else
                {
                    _2615 = _2475;
                    _2616 *= 0.5;
                    _2618 = _2619;
                }
            }
            frontier_phi_77_pred = _2475;
        }
        _2474 = frontier_phi_77_pred;
        float _2476 = _2474 + _2292;
        float _2480 = sqrt(_2471);
        float _2481 = ((_2476 > 1.0) ? (_2476 + (-1.0)) : _2476) * 6.283185482025146484375;
        float _2484 = cos(_2481) * _2480;
        float _2486 = sin(_2481) * _2480;
        float _2488 = sqrt(1.0 - _2471);
        float _2501 = ((_2488 * _2235) + (_2484 * _2458)) + (_2486 * _2453);
        float _2502 = ((_2488 * _2236) + (_2484 * _2461)) + (_2486 * _2454);
        float _2503 = ((_2488 * _2237) + (_2484 * _2464)) + (_2486 * _2455);
        _78._m0 = 1u;
        uvec4 _2507 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2508 = _2507.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2508, _2507.w, _2508, vec3(_2249, _2250, _2251), 9.9999997473787516355514526367188e-05, vec3(_2501, _2502, _2503), 10000.0, 1);
        float _2514 = dot(vec3(_2235, _2236, _2237), vec3(_2501, _2502, _2503));
        float _2958 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
        float _2517 = isnan(1.0) ? _2958 : (isnan(_2958) ? 1.0 : min(_2958, 1.0));
        _2466 = ((float(_78._m0 == 0u) * _2517) / (_2517 * 0.3183098733425140380859375)) + _2465;
        uint _2468 = _2467 + 1u;
        if (_2468 == 32u)
        {
            break;
        }
        else
        {
            _2465 = _2466;
            _2467 = _2468;
            continue;
        }
    }
    float _2525 = _2466 * 0.009947183541953563690185546875;
    float _2530 = dot(vec3(_2162, _2163, _2164), vec3(_2235, _2236, _2237)) * 2.0;
    vec4 _2544 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_2162 - (_2530 * _2235), _2163 - (_2530 * _2236), _2164 - (_2530 * _2237)), 4.0 - (_2135 * 4.0));
    float _2549 = dot(vec3(_2252, _2254, _2255), vec3(_2235, _2236, _2237));
    float _2969 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
    float _2559 = exp2(log2(1.0 - (isnan(1.0) ? _2969 : (isnan(_2969) ? 1.0 : min(_2969, 1.0)))) * 5.0);
    vec4 _2571 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_2235, _2236, _2237), 0.0);
    float _2582 = (_2435 + _2432) + (((_2571.x * _2294) + (((_2559 * (0.959999978542327880859375 - _2301)) + _2304) * _2544.x)) * _2525);
    float _2586 = (_2436 + _2433) + (((_2571.y * _2295) + (((_2559 * (0.959999978542327880859375 - _2302)) + _2306) * _2544.y)) * _2525);
    float _2590 = (_2437 + _2434) + (((_2571.z * _2296) + (((_2559 * (0.959999978542327880859375 - _2303)) + _2307) * _2544.z)) * _2525);
    float _2980 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
    float _2991 = isnan(0.0) ? _2586 : (isnan(_2586) ? 0.0 : max(_2586, 0.0));
    float _3002 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
    bool _2598 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2609;
    _2609.x = _2598 ? ((_639 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2980 : (isnan(_2980) ? 1.0 : min(_2980, 1.0)));
    _2609.y = _2598 ? ((_642 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2991 : (isnan(_2991) ? 1.0 : min(_2991, 1.0)));
    _2609.z = _2598 ? ((_645 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _3002 : (isnan(_3002) ? 1.0 : min(_3002, 1.0)));
    payload._m0 = _2609;
}


