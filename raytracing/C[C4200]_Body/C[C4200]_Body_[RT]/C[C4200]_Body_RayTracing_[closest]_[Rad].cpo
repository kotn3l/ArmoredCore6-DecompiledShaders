#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _71
{
    vec3 _m0;
};

struct _75
{
    vec2 _m0;
};

struct _83
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[34];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_C4200_Body_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_C4200_Body_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D C_C4200_Body_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_C4200_Body_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_C4200_Body_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_C4200_Body_snp_0_Texture2D_8;
layout(set = 0, binding = 17) uniform texture2D C_C4200_Body_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_C4200_Body_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_C4200_Body_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_C4200_Body_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_C4200_Body_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_C4200_Body_snp_0_Texture2D_21;
layout(set = 0, binding = 18) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_0;
layout(set = 0, binding = 19) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _71 payload;
hitAttributeEXT _75 hit;
layout(location = 1) rayPayloadEXT _83 _85;
layout(location = 2) rayPayloadEXT _83 _86;

vec3 _2224;

void main()
{
    float _100 = float(gl_LaunchSizeEXT.y);
    float _128 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _129 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _130 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _137 = sqrt(((_129 * _129) + (_128 * _128)) + (_130 * _130)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _100)))));
    uvec4 _148 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _149 = _148.y;
    uint _189;
    uint _191;
    uint _192;
    if (_148.x == 0u)
    {
        uint _157 = (_149 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _166 = uvec3(texelFetch(l_geomIndexBuffer, int(_157)).x, texelFetch(l_geomIndexBuffer, int(_157 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_157 + 2u)).x);
        _189 = _166.x;
        _191 = _166.y;
        _192 = _166.z;
    }
    else
    {
        uint _170 = uint(gl_PrimitiveID) * 6u;
        uint _172 = _170 & 4294967292u;
        uint _175 = (_149 + _172) >> 2u;
        uvec2 _182 = uvec2(texelFetch(l_geomIndexBuffer, int(_175)).x, texelFetch(l_geomIndexBuffer, int(_175 + 1u)).x);
        uint _183 = _182.x;
        uint _184 = _182.y;
        uint _186 = _183 >> 16u;
        uint _187 = _184 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_172 == _170)
        {
            frontier_phi_3_2_ladder = _186;
            frontier_phi_3_2_ladder_1 = _183 & 65535u;
            frontier_phi_3_2_ladder_2 = _187;
        }
        else
        {
            frontier_phi_3_2_ladder = _187;
            frontier_phi_3_2_ladder_1 = _186;
            frontier_phi_3_2_ladder_2 = _184 >> 16u;
        }
        _189 = frontier_phi_3_2_ladder_1;
        _191 = frontier_phi_3_2_ladder;
        _192 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _196 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _197 = _196.x;
    uint _198 = _196.z;
    bool _199 = _198 != 0u;
    bool _201 = _148.w == 0u;
    bool _202 = _199 || _201;
    uint _203 = _197 * _189;
    uint _204 = _203 + 12u;
    uint _228;
    uint _229;
    uint _230;
    uint _231;
    if (_202)
    {
        uvec4 _207 = texelFetch(l_geomAttrib_0, int(_204 >> 2u));
        uint _208 = _207.x;
        _228 = _208 & 255u;
        _229 = (_208 >> 8u) & 255u;
        _230 = (_208 >> 16u) & 255u;
        _231 = 16u;
    }
    else
    {
        uint _216 = _204 >> 2u;
        uvec2 _222 = uvec2(texelFetch(l_geomAttrib_0, int(_216)).x, texelFetch(l_geomAttrib_0, int(_216 + 1u)).x);
        uint _223 = _222.x;
        _228 = _223 & 65535u;
        _229 = _223 >> 16u;
        _230 = _222.y & 65535u;
        _231 = 20u;
    }
    uvec4 _239 = texelFetch(l_geomAttrib_0, int((_231 + _203) >> 2u));
    uint _240 = _239.x;
    bool _254 = _198 == 0u;
    uint _255;
    if (_254)
    {
        _255 = _231 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_201)
        {
            frontier_phi_9_10_ladder = _231 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _231 + 12u;
        }
        _255 = frontier_phi_9_10_ladder;
    }
    uvec4 _263 = texelFetch(l_geomAttrib_0, int(((_203 + 4u) + (_199 ? (_255 + 4u) : _255)) >> 2u));
    uint _264 = _263.x;
    float _268 = float(int(uint(int(_264 << 16u) >> int(16u))));
    float _269 = float(int(uint(int(_264) >> int(16u))));
    uint _270 = _197 * _191;
    uint _271 = _270 + 12u;
    uint _292;
    uint _293;
    uint _294;
    uint _295;
    if (_202)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_271 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
        _295 = 16u;
    }
    else
    {
        uint _280 = _271 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
        _295 = 20u;
    }
    uvec4 _301 = texelFetch(l_geomAttrib_0, int((_295 + _270) >> 2u));
    uint _302 = _301.x;
    uint _314;
    if (_254)
    {
        _314 = _295 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_201)
        {
            frontier_phi_16_17_ladder = _295 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _295 + 12u;
        }
        _314 = frontier_phi_16_17_ladder;
    }
    uvec4 _322 = texelFetch(l_geomAttrib_0, int(((_270 + 4u) + (_199 ? (_314 + 4u) : _314)) >> 2u));
    uint _323 = _322.x;
    float _327 = float(int(uint(int(_323 << 16u) >> int(16u))));
    float _328 = float(int(uint(int(_323) >> int(16u))));
    uint _329 = _197 * _192;
    uint _330 = _329 + 12u;
    uint _351;
    uint _352;
    uint _353;
    uint _354;
    if (_202)
    {
        uvec4 _332 = texelFetch(l_geomAttrib_0, int(_330 >> 2u));
        uint _333 = _332.x;
        _351 = _333 & 255u;
        _352 = (_333 >> 8u) & 255u;
        _353 = (_333 >> 16u) & 255u;
        _354 = 16u;
    }
    else
    {
        uint _339 = _330 >> 2u;
        uvec2 _345 = uvec2(texelFetch(l_geomAttrib_0, int(_339)).x, texelFetch(l_geomAttrib_0, int(_339 + 1u)).x);
        uint _346 = _345.x;
        _351 = _346 & 65535u;
        _352 = _346 >> 16u;
        _353 = _345.y & 65535u;
        _354 = 20u;
    }
    uvec4 _360 = texelFetch(l_geomAttrib_0, int((_354 + _329) >> 2u));
    uint _361 = _360.x;
    uint _373;
    if (_254)
    {
        _373 = _354 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_201)
        {
            frontier_phi_23_24_ladder = _354 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _354 + 12u;
        }
        _373 = frontier_phi_23_24_ladder;
    }
    uvec4 _381 = texelFetch(l_geomAttrib_0, int(((_329 + 4u) + (_199 ? (_373 + 4u) : _373)) >> 2u));
    uint _382 = _381.x;
    float _386 = float(int(uint(int(_382 << 16u) >> int(16u))));
    float _387 = float(int(uint(int(_382) >> int(16u))));
    bool _389 = _148.z == 0u;
    float _425;
    float _426;
    float _427;
    if (_389)
    {
        uint _392 = _189 * 3u;
        uvec3 _401 = uvec3(texelFetch(l_geomPositionBuffer, int(_392)).x, texelFetch(l_geomPositionBuffer, int(_392 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_392 + 2u)).x);
        _425 = uintBitsToFloat(_401.x);
        _426 = uintBitsToFloat(_401.y);
        _427 = uintBitsToFloat(_401.z);
    }
    else
    {
        uint _409 = _189 * 2u;
        uvec2 _415 = uvec2(texelFetch(l_geomPositionBuffer, int(_409)).x, texelFetch(l_geomPositionBuffer, int(_409 + 1u)).x);
        uint _416 = _415.x;
        _425 = unpackHalf2x16(_416).x;
        _426 = unpackHalf2x16(_416 >> 16u).x;
        _427 = unpackHalf2x16(_415.y).x;
    }
    float _463;
    float _464;
    float _465;
    if (_389)
    {
        uint _430 = _191 * 3u;
        uvec3 _439 = uvec3(texelFetch(l_geomPositionBuffer, int(_430)).x, texelFetch(l_geomPositionBuffer, int(_430 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_430 + 2u)).x);
        _463 = uintBitsToFloat(_439.x);
        _464 = uintBitsToFloat(_439.y);
        _465 = uintBitsToFloat(_439.z);
    }
    else
    {
        uint _447 = _191 * 2u;
        uvec2 _453 = uvec2(texelFetch(l_geomPositionBuffer, int(_447)).x, texelFetch(l_geomPositionBuffer, int(_447 + 1u)).x);
        uint _454 = _453.x;
        _463 = unpackHalf2x16(_454).x;
        _464 = unpackHalf2x16(_454 >> 16u).x;
        _465 = unpackHalf2x16(_453.y).x;
    }
    float _501;
    float _502;
    float _503;
    if (_389)
    {
        uint _468 = _192 * 3u;
        uvec3 _477 = uvec3(texelFetch(l_geomPositionBuffer, int(_468)).x, texelFetch(l_geomPositionBuffer, int(_468 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_468 + 2u)).x);
        _501 = uintBitsToFloat(_477.x);
        _502 = uintBitsToFloat(_477.y);
        _503 = uintBitsToFloat(_477.z);
    }
    else
    {
        uint _485 = _192 * 2u;
        uvec2 _491 = uvec2(texelFetch(l_geomPositionBuffer, int(_485)).x, texelFetch(l_geomPositionBuffer, int(_485 + 1u)).x);
        uint _492 = _491.x;
        _501 = unpackHalf2x16(_492).x;
        _502 = unpackHalf2x16(_492 >> 16u).x;
        _503 = unpackHalf2x16(_491.y).x;
    }
    float _506 = (1.0 - hit._m0.x) - hit._m0.y;
    float _540 = (_327 - _268) * 0.00048828125;
    float _542 = (_328 - _269) * 0.00048828125;
    float _545 = (_386 - _268) * 0.00048828125;
    float _546 = (_387 - _269) * 0.00048828125;
    float _568 = _463 - _425;
    float _569 = _464 - _426;
    float _570 = _465 - _427;
    float _573 = fma(_570, gl_ObjectToWorldEXT[2u].x, fma(_569, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _568));
    float _576 = fma(_570, gl_ObjectToWorldEXT[2u].y, fma(_569, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _568));
    float _579 = fma(_570, gl_ObjectToWorldEXT[2u].z, fma(_569, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _568));
    float _580 = _501 - _425;
    float _581 = _502 - _426;
    float _582 = _503 - _427;
    float _585 = fma(_582, gl_ObjectToWorldEXT[2u].x, fma(_581, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _580));
    float _588 = fma(_582, gl_ObjectToWorldEXT[2u].y, fma(_581, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _580));
    float _591 = fma(_582, gl_ObjectToWorldEXT[2u].z, fma(_581, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _580));
    float _592 = (((_327 * hit._m0.x) + (_268 * _506)) + (_386 * hit._m0.y)) * 0.00048828125;
    float _593 = (((_328 * hit._m0.x) + (_269 * _506)) + (_387 * hit._m0.y)) * 0.00048828125;
    float _597 = (((float(_228) * _506) + (-127.0)) + (float(_292) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _600 = (((float(_229) * _506) + (-127.0)) + (float(_293) * hit._m0.x)) + (float(_352) * hit._m0.y);
    float _603 = (((float(_230) * _506) + (-127.0)) + (float(_294) * hit._m0.x)) + (float(_353) * hit._m0.y);
    float _604 = _597 * 0.0078740157186985015869140625;
    float _606 = _600 * 0.0078740157186985015869140625;
    float _607 = _603 * 0.0078740157186985015869140625;
    float _620 = ((((float(_240 & 255u) * _506) + (-127.0)) + (float(_302 & 255u) * hit._m0.x)) + (float(_361 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _621 = ((((float((_240 >> 8u) & 255u) * _506) + (-127.0)) + (float((_302 >> 8u) & 255u) * hit._m0.x)) + (float((_361 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _622 = ((((float((_240 >> 16u) & 255u) * _506) + (-127.0)) + (float((_302 >> 16u) & 255u) * hit._m0.x)) + (float((_361 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _623 = ((((float(_240 >> 24u) * _506) + (-127.0)) + (float(_302 >> 24u) * hit._m0.x)) + (float(_361 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _633 = ((_621 * _607) - (_622 * _606)) * _623;
    float _634 = ((_622 * _604) - (_620 * _607)) * _623;
    float _635 = ((_620 * _606) - (_621 * _604)) * _623;
    float _639 = inversesqrt(dot(vec3(_633, _634, _635), vec3(_633, _634, _635)));
    uvec2 _655 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_7, int(0u)));
    bool _660 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _713;
    if (_660)
    {
        float _671 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _677 = (_591 * _576) - (_588 * _579);
        float _680 = (_585 * _579) - (_591 * _573);
        float _683 = (_588 * _573) - (_585 * _576);
        float _710 = ((log2((((float(_655.y) * 0.5) * float(_655.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_680 * _680) + (_683 * _683)) + (_677 * _677)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_671 * gl_WorldRayDirectionEXT.x, _671 * gl_WorldRayDirectionEXT.y, _671 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _713 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    }
    else
    {
        _713 = 0.0;
    }
    vec4 _717 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * _592) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _593) + cbTextureTilingScale._m0[15u].w), _713);
    float _725 = log2(0.0);
    float _727 = exp2(_725 * cbMtdParam._m0[24u].x);
    float _728 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _729 = isnan(1.0) ? _728 : (isnan(_728) ? 1.0 : min(_728, 1.0));
    uvec2 _742 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_0, int(0u)));
    float _793;
    if (_660)
    {
        float _753 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _759 = (_591 * _576) - (_588 * _579);
        float _762 = (_585 * _579) - (_591 * _573);
        float _765 = (_588 * _573) - (_585 * _576);
        float _791 = ((log2((((float(_742.y) * 0.5) * float(_742.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_762 * _762) + (_765 * _765)) + (_759 * _759)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_753 * gl_WorldRayDirectionEXT.x, _753 * gl_WorldRayDirectionEXT.y, _753 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _793 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    }
    else
    {
        _793 = 0.0;
    }
    vec4 _796 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _592) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _593) + cbTextureTilingScale._m0[0u].w), _793);
    float _800 = _796.z;
    float _808 = exp2(log2(_800 * cbMtdParam._m0[24u].y) * cbMtdParam._m0[23u].y);
    float _809 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _810 = isnan(1.0) ? _809 : (isnan(_809) ? 1.0 : min(_809, 1.0));
    uvec2 _822 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_14, int(0u)));
    float _873;
    if (_660)
    {
        float _833 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _839 = (_591 * _576) - (_588 * _579);
        float _842 = (_585 * _579) - (_591 * _573);
        float _845 = (_588 * _573) - (_585 * _576);
        float _871 = ((log2((((float(_822.y) * 0.5) * float(_822.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_842 * _842) + (_845 * _845)) + (_839 * _839)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_833 * gl_WorldRayDirectionEXT.x, _833 * gl_WorldRayDirectionEXT.y, _833 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _873 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    }
    else
    {
        _873 = 0.0;
    }
    float _885 = roundEven(5.0 - ((textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _592) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _593) + cbTextureTilingScale._m0[2u].w), _873).x + (-0.02500000037252902984619140625)) * 8.0));
    float _886 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _887 = isnan(4.0) ? _886 : (isnan(_886) ? 4.0 : min(_886, 4.0));
    float _900 = floor(_887);
    vec4 _904 = textureLod(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[18u].x * _592) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _593) + cbTextureTilingScale._m0[18u].w, _900), 0.0);
    uvec2 _929 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_1, int(0u)));
    float _980;
    if (_660)
    {
        float _940 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _946 = (_591 * _576) - (_588 * _579);
        float _949 = (_585 * _579) - (_591 * _573);
        float _952 = (_588 * _573) - (_585 * _576);
        float _978 = ((log2((((float(_929.y) * 0.5) * float(_929.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_949 * _949) + (_952 * _952)) + (_946 * _946)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_940 * gl_WorldRayDirectionEXT.x, _940 * gl_WorldRayDirectionEXT.y, _940 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _980 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    }
    else
    {
        _980 = 0.0;
    }
    vec4 _982 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _592) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _593) + cbTextureTilingScale._m0[1u].w), _980);
    float _993 = cbMtdParam._m0[9u].x * _982.x;
    float _994 = cbMtdParam._m0[9u].y * _982.y;
    float _995 = cbMtdParam._m0[9u].z * _982.z;
    float _1002 = (((cbMtdParam._m0[10u].x * _904.x) - _993) * _810) + _993;
    float _1003 = (((cbMtdParam._m0[10u].y * _904.y) - _994) * _810) + _994;
    float _1004 = (((cbMtdParam._m0[10u].z * _904.z) - _995) * _810) + _995;
    float _1008 = exp2(log2(_796.w) * cbMtdParam._m0[24u].w);
    uvec2 _1020 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_2, int(0u)));
    float _1071;
    if (_660)
    {
        float _1031 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1037 = (_591 * _576) - (_588 * _579);
        float _1040 = (_585 * _579) - (_591 * _573);
        float _1043 = (_588 * _573) - (_585 * _576);
        float _1069 = ((log2((((float(_1020.y) * 0.5) * float(_1020.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1040 * _1040) + (_1043 * _1043)) + (_1037 * _1037)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1031 * gl_WorldRayDirectionEXT.x, _1031 * gl_WorldRayDirectionEXT.y, _1031 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1071 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    }
    else
    {
        _1071 = 0.0;
    }
    vec4 _1073 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _592) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _593) + cbTextureTilingScale._m0[7u].w), _1071);
    float _1092 = (((cbMtdParam._m0[16u].x * _1073.x) - _1002) * _1008) + _1002;
    float _1093 = (((cbMtdParam._m0[16u].y * _1073.y) - _1003) * _1008) + _1003;
    float _1094 = (((cbMtdParam._m0[16u].z * _1073.z) - _1004) * _1008) + _1004;
    uvec2 _1107 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_4, int(0u)));
    float _1158;
    if (_660)
    {
        float _1118 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1124 = (_591 * _576) - (_588 * _579);
        float _1127 = (_585 * _579) - (_591 * _573);
        float _1130 = (_588 * _573) - (_585 * _576);
        float _1156 = ((log2((((float(_1107.y) * 0.5) * float(_1107.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1127 * _1127) + (_1130 * _1130)) + (_1124 * _1124)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1118 * gl_WorldRayDirectionEXT.x, _1118 * gl_WorldRayDirectionEXT.y, _1118 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1158 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    }
    else
    {
        _1158 = 0.0;
    }
    vec4 _1160 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _592) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _593) + cbTextureTilingScale._m0[13u].w), _1158);
    float _1185 = (_717.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _1160.x) - _1092) * _729) + _1092);
    float _1187 = (_717.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _1160.y) - _1093) * _729) + _1093);
    float _1189 = (_717.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _1160.z) - _1094) * _729) + _1094);
    float _81[5];
    float _82[5];
    _81[0u] = cbMtdParam._m0[30u].z;
    _82[0u] = cbMtdParam._m0[30u].w;
    _81[1u] = cbMtdParam._m0[32u].z;
    _82[1u] = cbMtdParam._m0[32u].w;
    _81[2u] = cbMtdParam._m0[32u].x;
    _82[2u] = cbMtdParam._m0[32u].y;
    _81[3u] = cbMtdParam._m0[31u].z;
    _82[3u] = cbMtdParam._m0[31u].w;
    _81[4u] = cbMtdParam._m0[31u].x;
    _82[4u] = cbMtdParam._m0[31u].y;
    float _1226 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    uint _1228 = uint(int(isnan(4.0) ? _1226 : (isnan(_1226) ? 4.0 : min(_1226, 4.0))));
    float _1235 = ((_82[_1228] - cbMtdParam._m0[23u].z) * _810) + cbMtdParam._m0[23u].z;
    float _1238 = ((cbMtdParam._m0[23u].w - _1235) * _1008) + _1235;
    float _1241 = ((cbMtdParam._m0[26u].y - _1238) * _729) + _1238;
    vec4 _1257 = textureLod(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[19u].x * _592) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _593) + cbTextureTilingScale._m0[19u].w, _900), 0.0);
    uvec2 _1275 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_6, int(0u)));
    float _1326;
    if (_660)
    {
        float _1286 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1292 = (_591 * _576) - (_588 * _579);
        float _1295 = (_585 * _579) - (_591 * _573);
        float _1298 = (_588 * _573) - (_585 * _576);
        float _1324 = ((log2((((float(_1275.y) * 0.5) * float(_1275.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1295 * _1295) + (_1298 * _1298)) + (_1292 * _1292)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1286 * gl_WorldRayDirectionEXT.x, _1286 * gl_WorldRayDirectionEXT.y, _1286 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1326 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
    }
    else
    {
        _1326 = 0.0;
    }
    vec4 _1328 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _592) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _593) + cbTextureTilingScale._m0[14u].w), _1326);
    float _1330 = _1328.x;
    float _1331 = _1328.y;
    float _1334 = cbMtdParam._m0[23u].x + _1328.z;
    float _1337 = (((_1257.z + _81[_1228]) - _1334) * _810) + _1334;
    uvec2 _1349 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_8, int(0u)));
    float _1400;
    if (_660)
    {
        float _1360 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1366 = (_591 * _576) - (_588 * _579);
        float _1369 = (_585 * _579) - (_591 * _573);
        float _1372 = (_588 * _573) - (_585 * _576);
        float _1398 = ((log2((((float(_1349.y) * 0.5) * float(_1349.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1369 * _1369) + (_1372 * _1372)) + (_1366 * _1366)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1360 * gl_WorldRayDirectionEXT.x, _1360 * gl_WorldRayDirectionEXT.y, _1360 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1400 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
    }
    else
    {
        _1400 = 0.0;
    }
    vec4 _1402 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * _592) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * _593) + cbTextureTilingScale._m0[16u].w), _1400);
    float _1411 = (((_1402.z - _1337) + cbMtdParam._m0[30u].x) * _1008) + _1337;
    float _1416 = ((((_800 * 2.0) * _1411) - _1411) * cbMtdParam._m0[25u].w) + _1411;
    uvec2 _1429 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_9, int(0u)));
    float _1480;
    if (_660)
    {
        float _1440 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1446 = (_591 * _576) - (_588 * _579);
        float _1449 = (_585 * _579) - (_591 * _573);
        float _1452 = (_588 * _573) - (_585 * _576);
        float _1478 = ((log2((((float(_1429.y) * 0.5) * float(_1429.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1449 * _1449) + (_1452 * _1452)) + (_1446 * _1446)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1440 * gl_WorldRayDirectionEXT.x, _1440 * gl_WorldRayDirectionEXT.y, _1440 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1480 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    }
    else
    {
        _1480 = 0.0;
    }
    vec4 _1482 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * _592) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * _593) + cbTextureTilingScale._m0[17u].w), _1480);
    float _1491 = (((_1482.z - _1416) + cbMtdParam._m0[24u].z) * _729) + _1416;
    float _1505 = cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x;
    float _1525 = (cbTextureTilingScale._m0[9u].x * ((_1505 * cbMtdParam._m0[33u].z) + _592)) + cbTextureTilingScale._m0[9u].z;
    float _1526 = (cbTextureTilingScale._m0[9u].y * ((cbMtdParam._m0[33u].w * _1505) + _593)) + cbTextureTilingScale._m0[9u].w;
    uvec2 _1528 = uvec2(textureSize(C_C4200_Body_snp_0_Texture2D_21, int(0u)));
    float _1579;
    if (_660)
    {
        float _1539 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1545 = (_591 * _576) - (_588 * _579);
        float _1548 = (_585 * _579) - (_591 * _573);
        float _1551 = (_588 * _573) - (_585 * _576);
        float _1577 = ((log2((((float(_1528.y) * 0.5) * float(_1528.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1548 * _1548) + (_1551 * _1551)) + (_1545 * _1545)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1539 * gl_WorldRayDirectionEXT.x, _1539 * gl_WorldRayDirectionEXT.y, _1539 * gl_WorldRayDirectionEXT.z), vec3(_604, _606, _607))));
        _1579 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
    }
    else
    {
        _1579 = 0.0;
    }
    vec4 _1581 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_21, SS_WrapLinear), vec2(_1525, _1526), _1579);
    float _1585 = cbPerFrame._m0[22u].x * 2.0;
    float _1586 = _1585 * cbMtdParam._m0[28u].z;
    float _1592 = ((_1581.y * 0.5) + (-0.25)) * cbMtdParam._m0[28u].y;
    float _1594 = (-0.0) - (cbMtdParam._m0[28u].y * ((_1581.x * 0.5) + (-0.25)));
    float _1596 = fract(_1586);
    float _1598 = fract(_1586 + 0.5);
    float _1610 = abs((_1596 * 2.0) + (-1.0));
    vec4 _1627 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_1596 * _1594) + _592) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1592 * _1596) + _593) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1629 = _1627.x;
    float _1630 = _1627.y;
    float _1631 = _1627.z;
    vec4 _1632 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_1598 * _1594) + _592) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_1592 * _1598) + _593) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), 0.0);
    float _1643 = ((_1632.x - _1629) * _1610) + _1629;
    float _1650 = exp2(log2(_1643 * cbMtdParam._m0[28u].w) * cbMtdParam._m0[29u].x);
    float _1651 = isnan(cbMtdParam._m0[29u].y) ? _1650 : (isnan(_1650) ? cbMtdParam._m0[29u].y : max(_1650, cbMtdParam._m0[29u].y));
    float _1652 = isnan(cbMtdParam._m0[29u].z) ? _1651 : (isnan(_1651) ? cbMtdParam._m0[29u].z : min(_1651, cbMtdParam._m0[29u].z));
    float _1675 = (cbMtdParam._m0[33u].x * _1505) + _592;
    float _1676 = (cbMtdParam._m0[33u].y * _1505) + _593;
    float _1682 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1683 = _1682 * gl_WorldRayDirectionEXT.x;
    float _1684 = _1682 * gl_WorldRayDirectionEXT.y;
    float _1685 = _1682 * gl_WorldRayDirectionEXT.z;
    float _1729;
    if (_660)
    {
        float _1695 = (_591 * _576) - (_588 * _579);
        float _1698 = (_585 * _579) - (_591 * _573);
        float _1701 = (_588 * _573) - (_585 * _576);
        float _1727 = ((log2((((float(_1528.y) * 0.5) * float(_1528.x)) * abs((_546 * _540) - (_545 * _542))) / (sqrt(((_1698 * _1698) + (_1701 * _1701)) + (_1695 * _1695)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_137) / abs(dot(vec3(_1683, _1684, _1685), vec3(_604, _606, _607))));
        _1729 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
    }
    else
    {
        _1729 = 0.0;
    }
    vec4 _1731 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_21, SS_WrapLinear), vec2(_1525, _1526), _1729);
    float _1735 = _1585 * cbMtdParam._m0[27u].w;
    float _1740 = ((_1731.y * 0.5) + (-0.25)) * cbMtdParam._m0[27u].z;
    float _1742 = (-0.0) - (cbMtdParam._m0[27u].z * ((_1731.x * 0.5) + (-0.25)));
    float _1743 = fract(_1735);
    float _1745 = fract(_1735 + 0.5);
    float _1756 = abs((_1743 * 2.0) + (-1.0));
    vec4 _1773 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_1743 * _1742) + _1675) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1740 * _1743) + _1676) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1775 = _1773.x;
    float _1776 = _1773.y;
    float _1777 = _1773.z;
    vec4 _1778 = textureLod(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_1745 * _1742) + _1675) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_1740 * _1745) + _1676) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w), 0.0);
    float _1810 = ((_1257.x - _1330) * _810) + _1330;
    float _1811 = ((_1257.y - _1331) * _810) + _1331;
    float _1816 = ((_1402.x - _1810) * _1008) + _1810;
    float _1817 = ((_1402.y - _1811) * _1008) + _1811;
    float _1826 = ((((_1482.x - _1816) * _729) + _1816) * 2.0) + (-1.0);
    float _1827 = ((((_1482.y - _1817) * _729) + _1817) * 2.0) + (-1.0);
    float _1828 = dot(vec2(_1826, _1827), vec2(_1826, _1827));
    float _2423 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
    float _1833 = sqrt(1.0 - (isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0))));
    float _1836 = (cbMtdParam._m0[26u].z * ((_796.x * 2.0) + (-1.0))) + _1826;
    float _1837 = (cbMtdParam._m0[26u].z * ((_796.y * 2.0) + (-1.0))) + _1827;
    float _1840 = fma(_1833, _604, fma(_1837, _620, (_639 * _633) * _1836));
    float _1843 = fma(_1833, _606, fma(_1837, _621, (_639 * _634) * _1836));
    float _1846 = fma(_1833, _607, fma(_1837, _622, (_639 * _635) * _1836));
    float _1850 = inversesqrt(dot(vec3(_1840, _1843, _1846), vec3(_1840, _1843, _1846)));
    float _1851 = _1850 * _1840;
    float _1852 = _1850 * _1843;
    float _1853 = _1850 * _1846;
    float _1865 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1866 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1867 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1868 = (-0.0) - _1683;
    float _1869 = (-0.0) - _1684;
    float _1870 = (-0.0) - _1685;
    float _1876 = float(gl_LaunchIDEXT.x);
    float _1877 = float(gl_LaunchIDEXT.y);
    float _1880 = float(gl_LaunchSizeEXT.x);
    float _1894 = fract(fract(sin(dot(vec2(_1876 / _1880, _1877 / _100), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1907 = fract(fract(sin(dot(vec2((_1876 + 128.0) / _1880, (_1877 + 128.0) / _100), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1908 = 1.0 - _1241;
    float _1909 = _1908 * _1185;
    float _1910 = _1908 * _1187;
    float _1911 = _1908 * _1189;
    float _1916 = _1241 * (_1185 + (-0.039999999105930328369140625));
    float _1917 = _1241 * (_1187 + (-0.039999999105930328369140625));
    float _1918 = _1241 * (_1189 + (-0.039999999105930328369140625));
    float _1919 = _1916 + 0.039999999105930328369140625;
    float _1921 = _1917 + 0.039999999105930328369140625;
    float _1922 = _1918 + 0.039999999105930328369140625;
    _86._m0 = 1u;
    uvec4 _1932 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1933 = _1932.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1933, _1932.w, _1933, vec3(_1865, _1866, _1867), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2045;
    float _2046;
    float _2047;
    float _2048;
    float _2049;
    float _2050;
    if (_86._m0 == 0u)
    {
        float _1952 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1851, _1852, _1853));
        float _2434 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1955 = isnan(1.0) ? _2434 : (isnan(_2434) ? 1.0 : min(_2434, 1.0));
        float _1974 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1491) * 0.949999988079071044921875);
        float _1975 = _1974 * _1974;
        float _1976 = g_sceneCB._m0[4u].x - _1683;
        float _1977 = g_sceneCB._m0[4u].y - _1684;
        float _1978 = g_sceneCB._m0[4u].z - _1685;
        float _1982 = inversesqrt(dot(vec3(_1976, _1977, _1978), vec3(_1976, _1977, _1978)));
        float _1983 = _1982 * _1976;
        float _1984 = _1982 * _1977;
        float _1985 = _1982 * _1978;
        float _1986 = dot(vec3(_1851, _1852, _1853), vec3(g_sceneCB._m0[4u].xyz));
        float _2445 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
        float _1989 = isnan(1.0) ? _2445 : (isnan(_2445) ? 1.0 : min(_2445, 1.0));
        float _1990 = dot(vec3(_1851, _1852, _1853), vec3(_1868, _1869, _1870));
        float _2456 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1993 = isnan(1.0) ? _2456 : (isnan(_2456) ? 1.0 : min(_2456, 1.0));
        float _1994 = dot(vec3(_1851, _1852, _1853), vec3(_1983, _1984, _1985));
        float _2467 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _1997 = isnan(1.0) ? _2467 : (isnan(_2467) ? 1.0 : min(_2467, 1.0));
        float _1998 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1983, _1984, _1985));
        float _2478 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2002 = _1975 * _1975;
        float _2006 = ((_1997 * _1997) * (_2002 + (-1.0))) + 1.0;
        float _2014 = exp2(log2(1.0 - (isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0)))) * 5.0);
        float _2025 = 1.0 - _1975;
        float _2036 = (0.5 / (((_1993 * ((_1989 * _2025) + _1975)) + 9.9999999392252902907785028219223e-09) + (((_1993 * _2025) + _1975) * _1989))) * _1989;
        float _2489 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
        float _2038 = (isnan(1.0) ? _2489 : (isnan(_2489) ? 1.0 : min(_2489, 1.0))) * (_2002 / ((_2006 * _2006) * 3.141590118408203125));
        _2045 = ((_1909 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1955;
        _2046 = ((_1910 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1955;
        _2047 = ((_1911 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1955;
        _2048 = (((_2014 * (0.959999978542327880859375 - _1916)) + _1919) * g_sceneCB._m0[5u].x) * _2038;
        _2049 = (((_2014 * (0.959999978542327880859375 - _1917)) + _1921) * g_sceneCB._m0[5u].y) * _2038;
        _2050 = (((_2014 * (0.959999978542327880859375 - _1918)) + _1922) * g_sceneCB._m0[5u].z) * _2038;
    }
    else
    {
        _2045 = 0.0;
        _2046 = 0.0;
        _2047 = 0.0;
        _2048 = 0.0;
        _2049 = 0.0;
        _2050 = 0.0;
    }
    bool _2052 = abs(_1852) < 0.89999997615814208984375;
    float _2054 = float(_2052);
    float _2055 = _2052 ? 0.0 : 1.0;
    float _2058 = (_2054 * _1853) - (_2055 * _1852);
    float _2059 = _2055 * _1851;
    float _2061 = (-0.0) - (_1851 * _2054);
    float _2065 = inversesqrt(dot(vec3(_2058, _2059, _2061), vec3(_2058, _2059, _2061)));
    float _2066 = _2058 * _2065;
    float _2067 = _2059 * _2065;
    float _2068 = _2065 * _2061;
    float _2071 = (_2067 * _1853) - (_2068 * _1852);
    float _2074 = (_2068 * _1851) - (_2066 * _1853);
    float _2077 = (_2066 * _1852) - (_2067 * _1851);
    float _2079;
    float _2087;
    float _2078 = 0.0;
    uint _2080 = 0u;
    float _2084;
    bool _2086;
    for (;;)
    {
        _2084 = (float(_2080) + _1894) * 0.03125;
        _2086 = _2080 == 0u;
        float frontier_phi_61_pred;
        if (_2086)
        {
            frontier_phi_61_pred = 0.0;
        }
        else
        {
            float _2229;
            float _2230;
            uint _2232;
            _2229 = 0.0;
            _2230 = 0.5;
            _2232 = _2080;
            float _2088;
            for (;;)
            {
                _2088 = ((_2232 & 1u) != 0u) ? (_2230 + _2229) : _2229;
                uint _2233 = _2232 >> 1u;
                if (_2233 == 0u)
                {
                    break;
                }
                else
                {
                    _2229 = _2088;
                    _2230 *= 0.5;
                    _2232 = _2233;
                }
            }
            frontier_phi_61_pred = _2088;
        }
        _2087 = frontier_phi_61_pred;
        float _2089 = _2087 + _1907;
        float _2093 = sqrt(_2084);
        float _2094 = ((_2089 > 1.0) ? (_2089 + (-1.0)) : _2089) * 6.283185482025146484375;
        float _2097 = cos(_2094) * _2093;
        float _2099 = sin(_2094) * _2093;
        float _2101 = sqrt(1.0 - _2084);
        float _2114 = ((_2101 * _1851) + (_2097 * _2071)) + (_2099 * _2066);
        float _2115 = ((_2101 * _1852) + (_2097 * _2074)) + (_2099 * _2067);
        float _2116 = ((_2101 * _1853) + (_2097 * _2077)) + (_2099 * _2068);
        _85._m0 = 1u;
        uvec4 _2120 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2121 = _2120.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2121, _2120.w, _2121, vec3(_1865, _1866, _1867), 9.9999997473787516355514526367188e-05, vec3(_2114, _2115, _2116), 10000.0, 1);
        float _2127 = dot(vec3(_1851, _1852, _1853), vec3(_2114, _2115, _2116));
        float _2500 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
        float _2130 = isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0));
        _2079 = ((float(_85._m0 == 0u) * _2130) / (_2130 * 0.3183098733425140380859375)) + _2078;
        uint _2081 = _2080 + 1u;
        if (_2081 == 32u)
        {
            break;
        }
        else
        {
            _2078 = _2079;
            _2080 = _2081;
            continue;
        }
    }
    float _2137 = _2079 * 0.009947183541953563690185546875;
    float _2142 = dot(vec3(_1683, _1684, _1685), vec3(_1851, _1852, _1853)) * 2.0;
    vec4 _2155 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1683 - (_2142 * _1851), _1684 - (_2142 * _1852), _1685 - (_2142 * _1853)), 4.0 - (_1491 * 4.0));
    float _2160 = dot(vec3(_1868, _1869, _1870), vec3(_1851, _1852, _1853));
    float _2511 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
    float _2170 = exp2(log2(1.0 - (isnan(1.0) ? _2511 : (isnan(_2511) ? 1.0 : min(_2511, 1.0)))) * 5.0);
    vec4 _2182 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1851, _1852, _1853), 0.0);
    float _2194 = ((_2045 + ((((((_1778.x - _1775) * _1756) + _1775) * cbMtdParam._m0[21u].x) + ((cbMtdParam._m0[27u].x * _1643) * cbMtdParam._m0[20u].x)) * _1652)) + _2048) + (((_2182.x * _1909) + (((_2170 * (0.959999978542327880859375 - _1916)) + _1919) * _2155.x)) * _2137);
    float _2199 = ((_2046 + ((((((_1778.y - _1776) * _1756) + _1776) * cbMtdParam._m0[21u].y) + ((cbMtdParam._m0[27u].x * (((_1632.y - _1630) * _1610) + _1630)) * cbMtdParam._m0[20u].y)) * _1652)) + _2049) + (((_2182.y * _1910) + (((_2170 * (0.959999978542327880859375 - _1917)) + _1921) * _2155.y)) * _2137);
    float _2204 = ((_2047 + ((((((_1778.z - _1777) * _1756) + _1777) * cbMtdParam._m0[21u].z) + ((cbMtdParam._m0[27u].x * (((_1632.z - _1631) * _1610) + _1631)) * cbMtdParam._m0[20u].z)) * _1652)) + _2050) + (((_2182.z * _1911) + (((_2170 * (0.959999978542327880859375 - _1918)) + _1922) * _2155.z)) * _2137);
    float _2522 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2533 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
    float _2544 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    bool _2212 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2223;
    _2223.x = _2212 ? ((_597 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2522 : (isnan(_2522) ? 1.0 : min(_2522, 1.0)));
    _2223.y = _2212 ? ((_600 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2533 : (isnan(_2533) ? 1.0 : min(_2533, 1.0)));
    _2223.z = _2212 ? ((_603 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2544 : (isnan(_2544) ? 1.0 : min(_2544, 1.0)));
    payload._m0 = _2223;
}


