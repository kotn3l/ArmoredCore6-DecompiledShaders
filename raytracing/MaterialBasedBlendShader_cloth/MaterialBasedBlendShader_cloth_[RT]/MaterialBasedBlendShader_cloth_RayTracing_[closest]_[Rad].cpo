#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _2186;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    uint _185 = _133.w;
    bool _187 = _184 || (_185 == 0u);
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    uint _236 = _181.y;
    bool _237 = _183 == 0u;
    uint _240 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _243 = _184 ? (_240 + 4u) : _240;
    uint _244 = _236 * _174;
    uvec4 _255 = texelFetch(l_geomAttrib_1, int(((_244 + 8u) + _243) >> 2u));
    uint _256 = _255.x;
    float _260 = float(int(uint(int(_256 << 16u) >> int(16u))));
    float _261 = float(int(uint(int(_256) >> int(16u))));
    uint _262 = _182 * _176;
    uint _263 = _262 + 12u;
    uint _284;
    uint _285;
    uint _286;
    uint _287;
    if (_187)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_263 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
        _287 = 16u;
    }
    else
    {
        uint _272 = _263 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
        _287 = 20u;
    }
    uvec4 _293 = texelFetch(l_geomAttrib_0, int((_287 + _262) >> 2u));
    uint _294 = _293.x;
    uint _307 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _309 = _184 ? (_307 + 4u) : _307;
    uint _310 = _236 * _176;
    uvec4 _320 = texelFetch(l_geomAttrib_1, int(((_310 + 8u) + _309) >> 2u));
    uint _321 = _320.x;
    float _325 = float(int(uint(int(_321 << 16u) >> int(16u))));
    float _326 = float(int(uint(int(_321) >> int(16u))));
    uint _327 = _182 * _177;
    uint _328 = _327 + 12u;
    uint _349;
    uint _350;
    uint _351;
    uint _352;
    if (_187)
    {
        uvec4 _330 = texelFetch(l_geomAttrib_0, int(_328 >> 2u));
        uint _331 = _330.x;
        _349 = _331 & 255u;
        _350 = (_331 >> 8u) & 255u;
        _351 = (_331 >> 16u) & 255u;
        _352 = 16u;
    }
    else
    {
        uint _337 = _328 >> 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomAttrib_0, int(_337)).x, texelFetch(l_geomAttrib_0, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _349 = _344 & 65535u;
        _350 = _344 >> 16u;
        _351 = _343.y & 65535u;
        _352 = 20u;
    }
    uvec4 _358 = texelFetch(l_geomAttrib_0, int((_352 + _327) >> 2u));
    uint _359 = _358.x;
    uint _372 = _237 ? 4u : ((_185 != 0u) ? 12u : 8u);
    uint _374 = _184 ? (_372 + 4u) : _372;
    uint _375 = _236 * _177;
    uvec4 _385 = texelFetch(l_geomAttrib_1, int(((_375 + 8u) + _374) >> 2u));
    uint _386 = _385.x;
    float _390 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _391 = float(int(uint(int(_386) >> int(16u))));
    bool _393 = _133.z == 0u;
    float _429;
    float _430;
    float _431;
    if (_393)
    {
        uint _396 = _174 * 3u;
        uvec3 _405 = uvec3(texelFetch(l_geomPositionBuffer, int(_396)).x, texelFetch(l_geomPositionBuffer, int(_396 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_396 + 2u)).x);
        _429 = uintBitsToFloat(_405.x);
        _430 = uintBitsToFloat(_405.y);
        _431 = uintBitsToFloat(_405.z);
    }
    else
    {
        uint _413 = _174 * 2u;
        uvec2 _419 = uvec2(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x);
        uint _420 = _419.x;
        _429 = unpackHalf2x16(_420).x;
        _430 = unpackHalf2x16(_420 >> 16u).x;
        _431 = unpackHalf2x16(_419.y).x;
    }
    float _467;
    float _468;
    float _469;
    if (_393)
    {
        uint _434 = _176 * 3u;
        uvec3 _443 = uvec3(texelFetch(l_geomPositionBuffer, int(_434)).x, texelFetch(l_geomPositionBuffer, int(_434 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_434 + 2u)).x);
        _467 = uintBitsToFloat(_443.x);
        _468 = uintBitsToFloat(_443.y);
        _469 = uintBitsToFloat(_443.z);
    }
    else
    {
        uint _451 = _176 * 2u;
        uvec2 _457 = uvec2(texelFetch(l_geomPositionBuffer, int(_451)).x, texelFetch(l_geomPositionBuffer, int(_451 + 1u)).x);
        uint _458 = _457.x;
        _467 = unpackHalf2x16(_458).x;
        _468 = unpackHalf2x16(_458 >> 16u).x;
        _469 = unpackHalf2x16(_457.y).x;
    }
    float _505;
    float _506;
    float _507;
    if (_393)
    {
        uint _472 = _177 * 3u;
        uvec3 _481 = uvec3(texelFetch(l_geomPositionBuffer, int(_472)).x, texelFetch(l_geomPositionBuffer, int(_472 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_472 + 2u)).x);
        _505 = uintBitsToFloat(_481.x);
        _506 = uintBitsToFloat(_481.y);
        _507 = uintBitsToFloat(_481.z);
    }
    else
    {
        uint _489 = _177 * 2u;
        uvec2 _495 = uvec2(texelFetch(l_geomPositionBuffer, int(_489)).x, texelFetch(l_geomPositionBuffer, int(_489 + 1u)).x);
        uint _496 = _495.x;
        _505 = unpackHalf2x16(_496).x;
        _506 = unpackHalf2x16(_496 >> 16u).x;
        _507 = unpackHalf2x16(_495.y).x;
    }
    float _510 = (1.0 - hit._m0.x) - hit._m0.y;
    float _551 = (_325 - _260) * 0.00048828125;
    float _553 = (_326 - _261) * 0.00048828125;
    float _556 = (_390 - _260) * 0.00048828125;
    float _557 = (_391 - _261) * 0.00048828125;
    float _579 = _467 - _429;
    float _580 = _468 - _430;
    float _581 = _469 - _431;
    float _584 = fma(_581, gl_ObjectToWorldEXT[2u].x, fma(_580, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _579));
    float _587 = fma(_581, gl_ObjectToWorldEXT[2u].y, fma(_580, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _579));
    float _590 = fma(_581, gl_ObjectToWorldEXT[2u].z, fma(_580, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _579));
    float _591 = _505 - _429;
    float _592 = _506 - _430;
    float _593 = _507 - _431;
    float _596 = fma(_593, gl_ObjectToWorldEXT[2u].x, fma(_592, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _591));
    float _599 = fma(_593, gl_ObjectToWorldEXT[2u].y, fma(_592, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _591));
    float _602 = fma(_593, gl_ObjectToWorldEXT[2u].z, fma(_592, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _591));
    float _603 = (((_325 * hit._m0.x) + (_260 * _510)) + (_390 * hit._m0.y)) * 0.00048828125;
    float _604 = (((_326 * hit._m0.x) + (_261 * _510)) + (_391 * hit._m0.y)) * 0.00048828125;
    float _608 = (((float(_213) * _510) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_349) * hit._m0.y);
    float _611 = (((float(_214) * _510) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _614 = (((float(_215) * _510) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _615 = _608 * 0.0078740157186985015869140625;
    float _617 = _611 * 0.0078740157186985015869140625;
    float _618 = _614 * 0.0078740157186985015869140625;
    float _631 = ((((float(_225 & 255u) * _510) + (-127.0)) + (float(_294 & 255u) * hit._m0.x)) + (float(_359 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _632 = ((((float((_225 >> 8u) & 255u) * _510) + (-127.0)) + (float((_294 >> 8u) & 255u) * hit._m0.x)) + (float((_359 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _633 = ((((float((_225 >> 16u) & 255u) * _510) + (-127.0)) + (float((_294 >> 16u) & 255u) * hit._m0.x)) + (float((_359 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _634 = ((((float(_225 >> 24u) * _510) + (-127.0)) + (float(_294 >> 24u) * hit._m0.x)) + (float(_359 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _644 = ((_632 * _618) - (_633 * _617)) * _634;
    float _645 = ((_633 * _615) - (_631 * _618)) * _634;
    float _646 = ((_631 * _617) - (_632 * _615)) * _634;
    float _650 = inversesqrt(dot(vec3(_644, _645, _646), vec3(_644, _645, _646)));
    uvec2 _679 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_11, int(0u)));
    bool _684 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _737;
    if (_684)
    {
        float _695 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _701 = (_602 * _587) - (_599 * _590);
        float _704 = (_596 * _590) - (_602 * _584);
        float _707 = (_599 * _584) - (_596 * _587);
        float _734 = ((log2((((float(_679.y) * 0.5) * float(_679.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_704 * _704) + (_707 * _707)) + (_701 * _701)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_695 * gl_WorldRayDirectionEXT.x, _695 * gl_WorldRayDirectionEXT.y, _695 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _737 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    }
    else
    {
        _737 = 0.0;
    }
    vec4 _741 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _603) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _604) + cbTextureTilingScale._m0[4u].w), _737);
    uvec2 _768 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_8, int(0u)));
    float _819;
    if (_684)
    {
        float _779 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _785 = (_602 * _587) - (_599 * _590);
        float _788 = (_596 * _590) - (_602 * _584);
        float _791 = (_599 * _584) - (_596 * _587);
        float _817 = ((log2((((float(_768.y) * 0.5) * float(_768.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_788 * _788) + (_791 * _791)) + (_785 * _785)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_779 * gl_WorldRayDirectionEXT.x, _779 * gl_WorldRayDirectionEXT.y, _779 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _819 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    }
    else
    {
        _819 = 0.0;
    }
    vec4 _821 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _603) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _604) + cbTextureTilingScale._m0[13u].w), _819);
    uvec2 _847 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_1, int(0u)));
    float _898;
    if (_684)
    {
        float _858 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _864 = (_602 * _587) - (_599 * _590);
        float _867 = (_596 * _590) - (_602 * _584);
        float _870 = (_599 * _584) - (_596 * _587);
        float _896 = ((log2((((float(_847.y) * 0.5) * float(_847.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_867 * _867) + (_870 * _870)) + (_864 * _864)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_858 * gl_WorldRayDirectionEXT.x, _858 * gl_WorldRayDirectionEXT.y, _858 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _898 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    }
    else
    {
        _898 = 0.0;
    }
    vec4 _900 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _603) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _604) + cbTextureTilingScale._m0[0u].w), _898);
    float _905 = _900.x * cbMatDynParam._m0[17u].x;
    float _906 = _900.y * cbMatDynParam._m0[17u].y;
    float _907 = _900.z * cbMatDynParam._m0[17u].z;
    uvec2 _925 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_2, int(0u)));
    float _976;
    if (_684)
    {
        float _936 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _942 = (_602 * _587) - (_599 * _590);
        float _945 = (_596 * _590) - (_602 * _584);
        float _948 = (_599 * _584) - (_596 * _587);
        float _974 = ((log2((((float(_925.y) * 0.5) * float(_925.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_945 * _945) + (_948 * _948)) + (_942 * _942)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_936 * gl_WorldRayDirectionEXT.x, _936 * gl_WorldRayDirectionEXT.y, _936 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _976 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    }
    else
    {
        _976 = 0.0;
    }
    vec4 _978 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _603) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _604) + cbTextureTilingScale._m0[7u].w), _976);
    uvec2 _997 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_0, int(0u)));
    float _1048;
    if (_684)
    {
        float _1008 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1014 = (_602 * _587) - (_599 * _590);
        float _1017 = (_596 * _590) - (_602 * _584);
        float _1020 = (_599 * _584) - (_596 * _587);
        float _1046 = ((log2((((float(_997.y) * 0.5) * float(_997.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1017 * _1017) + (_1020 * _1020)) + (_1014 * _1014)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1008 * gl_WorldRayDirectionEXT.x, _1008 * gl_WorldRayDirectionEXT.y, _1008 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1048 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    }
    else
    {
        _1048 = 0.0;
    }
    vec4 _1050 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _603) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _604) + cbTextureTilingScale._m0[2u].w), _1048);
    float _1060 = (((((float(texelFetch(l_geomAttrib_1, int((_309 + _310) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_1, int((_243 + _244) >> 2u)).x >> 24u) * _510)) + (float(texelFetch(l_geomAttrib_1, int((_374 + _375) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[21u].y) + 1.0;
    float _1061 = (0.5 - ((cbMatDynParam._m0[21u].x * 0.5) * (_1050.x + 0.00999999977648258209228515625))) * _1060;
    float _2293 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
    float _1062 = isnan(1.0) ? _2293 : (isnan(_2293) ? 1.0 : min(_2293, 1.0));
    float _1069 = (_1062 * ((_978.x * cbMatDynParam._m0[18u].x) - _905)) + _905;
    float _1070 = (_1062 * ((_978.y * cbMatDynParam._m0[18u].y) - _906)) + _906;
    float _1071 = (_1062 * ((_978.z * cbMatDynParam._m0[18u].z) - _907)) + _907;
    float _1076 = (0.5 - ((cbMatDynParam._m0[22u].z * 0.5) * (_1050.y + 0.00999999977648258209228515625))) * _1060;
    float _2304 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1077 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
    float _1084 = (((_821.x * cbMatDynParam._m0[19u].x) - _1069) * _1077) + _1069;
    float _1085 = (((_821.y * cbMatDynParam._m0[19u].y) - _1070) * _1077) + _1070;
    float _1086 = (((_821.z * cbMatDynParam._m0[19u].z) - _1071) * _1077) + _1071;
    float _1091 = (0.5 - ((cbMatDynParam._m0[22u].w * 0.5) * (_1050.z + 0.00999999977648258209228515625))) * _1060;
    float _2315 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _1092 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
    float _1099 = (((_741.x * cbMatDynParam._m0[20u].x) - _1084) * _1092) + _1084;
    float _1100 = (((_741.y * cbMatDynParam._m0[20u].y) - _1085) * _1092) + _1085;
    float _1101 = (((_741.z * cbMatDynParam._m0[20u].z) - _1086) * _1092) + _1086;
    uvec2 _1114 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_4, int(0u)));
    float _1165;
    if (_684)
    {
        float _1125 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1131 = (_602 * _587) - (_599 * _590);
        float _1134 = (_596 * _590) - (_602 * _584);
        float _1137 = (_599 * _584) - (_596 * _587);
        float _1163 = ((log2((((float(_1114.y) * 0.5) * float(_1114.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1134 * _1134) + (_1137 * _1137)) + (_1131 * _1131)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1125 * gl_WorldRayDirectionEXT.x, _1125 * gl_WorldRayDirectionEXT.y, _1125 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1165 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    }
    else
    {
        _1165 = 0.0;
    }
    vec4 _1168 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_4, SS_SpecularMap), vec2((cbTextureTilingScale._m0[9u].x * _603) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _604) + cbTextureTilingScale._m0[9u].w), _1165);
    float _1170 = _1168.x;
    float _1171 = _1168.y;
    float _1172 = _1168.z;
    uvec2 _1185 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_9, int(0u)));
    float _1236;
    if (_684)
    {
        float _1196 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1202 = (_602 * _587) - (_599 * _590);
        float _1205 = (_596 * _590) - (_602 * _584);
        float _1208 = (_599 * _584) - (_596 * _587);
        float _1234 = ((log2((((float(_1185.y) * 0.5) * float(_1185.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1205 * _1205) + (_1208 * _1208)) + (_1202 * _1202)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1196 * gl_WorldRayDirectionEXT.x, _1196 * gl_WorldRayDirectionEXT.y, _1196 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1236 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
    }
    else
    {
        _1236 = 0.0;
    }
    vec4 _1238 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_9, SS_SpecularMap), vec2((cbTextureTilingScale._m0[14u].x * _603) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _604) + cbTextureTilingScale._m0[14u].w), _1236);
    float _1249 = ((_1238.x - _1170) * _1062) + _1170;
    float _1250 = ((_1238.y - _1171) * _1062) + _1171;
    float _1251 = ((_1238.z - _1172) * _1062) + _1172;
    uvec2 _1263 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_3, int(0u)));
    float _1314;
    if (_684)
    {
        float _1274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1280 = (_602 * _587) - (_599 * _590);
        float _1283 = (_596 * _590) - (_602 * _584);
        float _1286 = (_599 * _584) - (_596 * _587);
        float _1312 = ((log2((((float(_1263.y) * 0.5) * float(_1263.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1283 * _1283) + (_1286 * _1286)) + (_1280 * _1280)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1274 * gl_WorldRayDirectionEXT.x, _1274 * gl_WorldRayDirectionEXT.y, _1274 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1314 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
    }
    else
    {
        _1314 = 0.0;
    }
    vec4 _1316 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_3, SS_SpecularMap), vec2((cbTextureTilingScale._m0[8u].x * _603) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _604) + cbTextureTilingScale._m0[8u].w), _1314);
    float _1327 = ((_1316.x - _1249) * _1077) + _1249;
    float _1328 = ((_1316.y - _1250) * _1077) + _1250;
    float _1329 = ((_1316.z - _1251) * _1077) + _1251;
    uvec2 _1341 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_10, int(0u)));
    float _1392;
    if (_684)
    {
        float _1352 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1358 = (_602 * _587) - (_599 * _590);
        float _1361 = (_596 * _590) - (_602 * _584);
        float _1364 = (_599 * _584) - (_596 * _587);
        float _1390 = ((log2((((float(_1341.y) * 0.5) * float(_1341.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1361 * _1361) + (_1364 * _1364)) + (_1358 * _1358)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1352 * gl_WorldRayDirectionEXT.x, _1352 * gl_WorldRayDirectionEXT.y, _1352 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1392 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    }
    else
    {
        _1392 = 0.0;
    }
    vec4 _1394 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_10, SS_SpecularMap), vec2((cbTextureTilingScale._m0[3u].x * _603) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _604) + cbTextureTilingScale._m0[3u].w), _1392);
    float _1405 = ((_1394.x - _1327) * _1092) + _1327;
    float _1406 = ((_1394.y - _1328) * _1092) + _1328;
    float _1407 = ((_1394.z - _1329) * _1092) + _1329;
    uvec2 _1423 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_16, int(0u)));
    float _1474;
    if (_684)
    {
        float _1434 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1440 = (_602 * _587) - (_599 * _590);
        float _1443 = (_596 * _590) - (_602 * _584);
        float _1446 = (_599 * _584) - (_596 * _587);
        float _1472 = ((log2((((float(_1423.y) * 0.5) * float(_1423.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1443 * _1443) + (_1446 * _1446)) + (_1440 * _1440)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1434 * gl_WorldRayDirectionEXT.x, _1434 * gl_WorldRayDirectionEXT.y, _1434 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1474 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
    }
    else
    {
        _1474 = 0.0;
    }
    vec4 _1477 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * _603) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _604) + cbTextureTilingScale._m0[6u].w), _1474);
    uvec2 _1496 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_15, int(0u)));
    float _1547;
    if (_684)
    {
        float _1507 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1513 = (_602 * _587) - (_599 * _590);
        float _1516 = (_596 * _590) - (_602 * _584);
        float _1519 = (_599 * _584) - (_596 * _587);
        float _1545 = ((log2((((float(_1496.y) * 0.5) * float(_1496.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1516 * _1516) + (_1519 * _1519)) + (_1513 * _1513)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1507 * gl_WorldRayDirectionEXT.x, _1507 * gl_WorldRayDirectionEXT.y, _1507 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1547 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
    }
    else
    {
        _1547 = 0.0;
    }
    vec4 _1549 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _603) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _604) + cbTextureTilingScale._m0[5u].w), _1547);
    uvec2 _1568 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_5, int(0u)));
    float _1619;
    if (_684)
    {
        float _1579 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1585 = (_602 * _587) - (_599 * _590);
        float _1588 = (_596 * _590) - (_602 * _584);
        float _1591 = (_599 * _584) - (_596 * _587);
        float _1617 = ((log2((((float(_1568.y) * 0.5) * float(_1568.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1588 * _1588) + (_1591 * _1591)) + (_1585 * _1585)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1579 * gl_WorldRayDirectionEXT.x, _1579 * gl_WorldRayDirectionEXT.y, _1579 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1619 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
    }
    else
    {
        _1619 = 0.0;
    }
    vec4 _1621 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _603) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _604) + cbTextureTilingScale._m0[10u].w), _1619);
    float _1623 = _1621.x;
    float _1624 = _1621.y;
    float _1626 = _1621.z * cbMatDynParam._m0[22u].x;
    uvec2 _1640 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_6, int(0u)));
    float _1691;
    if (_684)
    {
        float _1651 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1657 = (_602 * _587) - (_599 * _590);
        float _1660 = (_596 * _590) - (_602 * _584);
        float _1663 = (_599 * _584) - (_596 * _587);
        float _1689 = ((log2((((float(_1640.y) * 0.5) * float(_1640.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1660 * _1660) + (_1663 * _1663)) + (_1657 * _1657)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1651 * gl_WorldRayDirectionEXT.x, _1651 * gl_WorldRayDirectionEXT.y, _1651 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1691 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
    }
    else
    {
        _1691 = 0.0;
    }
    vec4 _1693 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _603) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _604) + cbTextureTilingScale._m0[11u].w), _1691);
    float _1701 = (((_1693.z * cbMatDynParam._m0[21u].w) - _1626) * _1062) + _1626;
    float _1704 = (((_1549.z * cbMatDynParam._m0[21u].z) - _1701) * _1077) + _1701;
    float _1707 = (((_1477.z * cbMatDynParam._m0[23u].x) - _1704) * _1092) + _1704;
    uvec2 _1719 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_7, int(0u)));
    float _1723 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1724 = _1723 * gl_WorldRayDirectionEXT.x;
    float _1725 = _1723 * gl_WorldRayDirectionEXT.y;
    float _1726 = _1723 * gl_WorldRayDirectionEXT.z;
    float _1770;
    if (_684)
    {
        float _1736 = (_602 * _587) - (_599 * _590);
        float _1739 = (_596 * _590) - (_602 * _584);
        float _1742 = (_599 * _584) - (_596 * _587);
        float _1768 = ((log2((((float(_1719.y) * 0.5) * float(_1719.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1739 * _1739) + (_1742 * _1742)) + (_1736 * _1736)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1724, _1725, _1726), vec3(_615, _617, _618))));
        _1770 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
    }
    else
    {
        _1770 = 0.0;
    }
    vec4 _1772 = textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * _603) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _604) + cbTextureTilingScale._m0[12u].w), _1770);
    float _1785 = (_1062 * (_1693.x - _1623)) + _1623;
    float _1786 = (_1062 * (_1693.y - _1624)) + _1624;
    float _1791 = ((_1549.x - _1785) * _1077) + _1785;
    float _1792 = ((_1549.y - _1786) * _1077) + _1786;
    float _1801 = ((((_1477.x - _1791) * _1092) + _1791) * 2.0) + (-1.0);
    float _1802 = ((((_1477.y - _1792) * _1092) + _1792) * 2.0) + (-1.0);
    float _1803 = dot(vec2(_1801, _1802), vec2(_1801, _1802));
    float _2371 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
    float _1808 = sqrt(1.0 - (isnan(1.0) ? _2371 : (isnan(_2371) ? 1.0 : min(_2371, 1.0))));
    float _1812 = _1801 + (cbMatDynParam._m0[22u].y * ((_1772.x * 2.0) + (-1.0)));
    float _1813 = _1802 + (cbMatDynParam._m0[22u].y * ((_1772.y * 2.0) + (-1.0)));
    float _1816 = fma(_1808, _615, fma(_1813, _631, (_650 * _644) * _1812));
    float _1819 = fma(_1808, _617, fma(_1813, _632, (_650 * _645) * _1812));
    float _1822 = fma(_1808, _618, fma(_1813, _633, (_650 * _646) * _1812));
    float _1826 = inversesqrt(dot(vec3(_1816, _1819, _1822), vec3(_1816, _1819, _1822)));
    float _1827 = _1826 * _1816;
    float _1828 = _1826 * _1819;
    float _1829 = _1826 * _1822;
    float _1841 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1842 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1843 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1844 = (-0.0) - _1724;
    float _1846 = (-0.0) - _1725;
    float _1847 = (-0.0) - _1726;
    float _1853 = float(gl_LaunchIDEXT.x);
    float _1854 = float(gl_LaunchIDEXT.y);
    float _1857 = float(gl_LaunchSizeEXT.x);
    float _1871 = fract(fract(sin(dot(vec2(_1853 / _1857, _1854 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1884 = fract(fract(sin(dot(vec2((_1853 + 128.0) / _1857, (_1854 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _75._m0 = 1u;
    uvec4 _1894 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1895 = _1894.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1895, _1894.w, _1895, vec3(_1841, _1842, _1843), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _2008;
    float _2009;
    float _2010;
    float _2011;
    float _2012;
    float _2013;
    if (_75._m0 == 0u)
    {
        float _1915 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1827, _1828, _1829));
        float _2382 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
        float _1918 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        float _1937 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1707) * 0.949999988079071044921875);
        float _1938 = _1937 * _1937;
        float _1939 = g_sceneCB._m0[4u].x - _1724;
        float _1940 = g_sceneCB._m0[4u].y - _1725;
        float _1941 = g_sceneCB._m0[4u].z - _1726;
        float _1945 = inversesqrt(dot(vec3(_1939, _1940, _1941), vec3(_1939, _1940, _1941)));
        float _1946 = _1945 * _1939;
        float _1947 = _1945 * _1940;
        float _1948 = _1945 * _1941;
        float _1949 = dot(vec3(_1827, _1828, _1829), vec3(g_sceneCB._m0[4u].xyz));
        float _2393 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
        float _1952 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        float _1953 = dot(vec3(_1827, _1828, _1829), vec3(_1844, _1846, _1847));
        float _2404 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
        float _1956 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        float _1957 = dot(vec3(_1827, _1828, _1829), vec3(_1946, _1947, _1948));
        float _2415 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
        float _1960 = isnan(1.0) ? _2415 : (isnan(_2415) ? 1.0 : min(_2415, 1.0));
        float _1961 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1946, _1947, _1948));
        float _2426 = isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0));
        float _1965 = _1938 * _1938;
        float _1969 = ((_1960 * _1960) * (_1965 + (-1.0))) + 1.0;
        float _1978 = exp2(log2(1.0 - (isnan(1.0) ? _2426 : (isnan(_2426) ? 1.0 : min(_2426, 1.0)))) * 5.0);
        float _1988 = 1.0 - _1938;
        float _1999 = (0.5 / (((_1956 * ((_1952 * _1988) + _1938)) + 9.9999999392252902907785028219223e-09) + (((_1956 * _1988) + _1938) * _1952))) * _1952;
        float _2437 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
        float _2001 = (isnan(1.0) ? _2437 : (isnan(_2437) ? 1.0 : min(_2437, 1.0))) * (_1965 / ((_1969 * _1969) * 3.141590118408203125));
        _2008 = ((_1099 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1918;
        _2009 = ((_1100 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1918;
        _2010 = ((_1101 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1918;
        _2011 = (((_1978 * (1.0 - _1405)) + _1405) * g_sceneCB._m0[5u].x) * _2001;
        _2012 = (((_1978 * (1.0 - _1406)) + _1406) * g_sceneCB._m0[5u].y) * _2001;
        _2013 = (((_1978 * (1.0 - _1407)) + _1407) * g_sceneCB._m0[5u].z) * _2001;
    }
    else
    {
        _2008 = 0.0;
        _2009 = 0.0;
        _2010 = 0.0;
        _2011 = 0.0;
        _2012 = 0.0;
        _2013 = 0.0;
    }
    bool _2015 = abs(_1828) < 0.89999997615814208984375;
    float _2017 = float(_2015);
    float _2018 = _2015 ? 0.0 : 1.0;
    float _2021 = (_2017 * _1829) - (_2018 * _1828);
    float _2022 = _2018 * _1827;
    float _2024 = (-0.0) - (_1827 * _2017);
    float _2028 = inversesqrt(dot(vec3(_2021, _2022, _2024), vec3(_2021, _2022, _2024)));
    float _2029 = _2021 * _2028;
    float _2030 = _2022 * _2028;
    float _2031 = _2028 * _2024;
    float _2034 = (_2030 * _1829) - (_2031 * _1828);
    float _2037 = (_2031 * _1827) - (_2029 * _1829);
    float _2040 = (_2029 * _1828) - (_2030 * _1827);
    float _2042;
    float _2050;
    float _2041 = 0.0;
    uint _2043 = 0u;
    float _2047;
    bool _2049;
    for (;;)
    {
        _2047 = (float(_2043) + _1871) * 0.03125;
        _2049 = _2043 == 0u;
        float frontier_phi_55_pred;
        if (_2049)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _2191;
            float _2192;
            uint _2194;
            _2191 = 0.0;
            _2192 = 0.5;
            _2194 = _2043;
            float _2051;
            for (;;)
            {
                _2051 = ((_2194 & 1u) != 0u) ? (_2192 + _2191) : _2191;
                uint _2195 = _2194 >> 1u;
                if (_2195 == 0u)
                {
                    break;
                }
                else
                {
                    _2191 = _2051;
                    _2192 *= 0.5;
                    _2194 = _2195;
                }
            }
            frontier_phi_55_pred = _2051;
        }
        _2050 = frontier_phi_55_pred;
        float _2052 = _2050 + _1884;
        float _2056 = sqrt(_2047);
        float _2057 = ((_2052 > 1.0) ? (_2052 + (-1.0)) : _2052) * 6.283185482025146484375;
        float _2060 = cos(_2057) * _2056;
        float _2062 = sin(_2057) * _2056;
        float _2064 = sqrt(1.0 - _2047);
        float _2077 = ((_2064 * _1827) + (_2060 * _2034)) + (_2062 * _2029);
        float _2078 = ((_2064 * _1828) + (_2060 * _2037)) + (_2062 * _2030);
        float _2079 = ((_2064 * _1829) + (_2060 * _2040)) + (_2062 * _2031);
        _74._m0 = 1u;
        uvec4 _2083 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2084 = _2083.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2084, _2083.w, _2084, vec3(_1841, _1842, _1843), 9.9999997473787516355514526367188e-05, vec3(_2077, _2078, _2079), 10000.0, 1);
        float _2090 = dot(vec3(_1827, _1828, _1829), vec3(_2077, _2078, _2079));
        float _2448 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2093 = isnan(1.0) ? _2448 : (isnan(_2448) ? 1.0 : min(_2448, 1.0));
        _2042 = ((float(_74._m0 == 0u) * _2093) / (_2093 * 0.3183098733425140380859375)) + _2041;
        uint _2044 = _2043 + 1u;
        if (_2044 == 32u)
        {
            break;
        }
        else
        {
            _2041 = _2042;
            _2043 = _2044;
            continue;
        }
    }
    float _2101 = _2042 * 0.009947183541953563690185546875;
    float _2106 = dot(vec3(_1724, _1725, _1726), vec3(_1827, _1828, _1829)) * 2.0;
    vec4 _2120 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1724 - (_2106 * _1827), _1725 - (_2106 * _1828), _1726 - (_2106 * _1829)), 4.0 - (_1707 * 4.0));
    float _2125 = dot(vec3(_1844, _1846, _1847), vec3(_1827, _1828, _1829));
    float _2459 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _2135 = exp2(log2(1.0 - (isnan(1.0) ? _2459 : (isnan(_2459) ? 1.0 : min(_2459, 1.0)))) * 5.0);
    vec4 _2147 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1827, _1828, _1829), 0.0);
    float _2158 = (_2011 + _2008) + (((_2147.x * _1099) + (((_2135 * (1.0 - _1405)) + _1405) * _2120.x)) * _2101);
    float _2162 = (_2012 + _2009) + (((_2147.y * _1100) + (((_2135 * (1.0 - _1406)) + _1406) * _2120.y)) * _2101);
    float _2166 = (_2013 + _2010) + (((_2147.z * _1101) + (((_2135 * (1.0 - _1407)) + _1407) * _2120.z)) * _2101);
    float _2470 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _2481 = isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0));
    float _2492 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    bool _2174 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2185;
    _2185.x = _2174 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2470 : (isnan(_2470) ? 1.0 : min(_2470, 1.0)));
    _2185.y = _2174 ? ((_611 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2481 : (isnan(_2481) ? 1.0 : min(_2481, 1.0)));
    _2185.z = _2174 ? ((_614 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2492 : (isnan(_2492) ? 1.0 : min(_2492, 1.0)));
    payload._m0 = _2185;
}


