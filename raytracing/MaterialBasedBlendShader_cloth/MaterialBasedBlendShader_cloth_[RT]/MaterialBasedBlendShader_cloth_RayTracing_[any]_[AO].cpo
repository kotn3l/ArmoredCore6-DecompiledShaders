#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _42
{
    uint _m0;
};

struct _46
{
    vec2 _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_12;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _42 payload;
hitAttributeEXT _46 hit;

void main()
{
    uint _52 = payload._m0;
    float _90 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _91 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _92 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _99 = sqrt(((_91 * _91) + (_90 * _90)) + (_92 * _92)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * float(gl_LaunchSizeEXT.y))))));
    uvec4 _110 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _111 = _110.y;
    uint _151;
    uint _153;
    uint _154;
    if (_110.x == 0u)
    {
        uint _119 = (_111 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _128 = uvec3(texelFetch(l_geomIndexBuffer, int(_119)).x, texelFetch(l_geomIndexBuffer, int(_119 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_119 + 2u)).x);
        _151 = _128.x;
        _153 = _128.y;
        _154 = _128.z;
    }
    else
    {
        uint _132 = uint(gl_PrimitiveID) * 6u;
        uint _134 = _132 & 4294967292u;
        uint _137 = (_111 + _134) >> 2u;
        uvec2 _144 = uvec2(texelFetch(l_geomIndexBuffer, int(_137)).x, texelFetch(l_geomIndexBuffer, int(_137 + 1u)).x);
        uint _145 = _144.x;
        uint _146 = _144.y;
        uint _148 = _145 >> 16u;
        uint _149 = _146 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_134 == _132)
        {
            frontier_phi_3_2_ladder = _145 & 65535u;
            frontier_phi_3_2_ladder_1 = _148;
            frontier_phi_3_2_ladder_2 = _149;
        }
        else
        {
            frontier_phi_3_2_ladder = _148;
            frontier_phi_3_2_ladder_1 = _149;
            frontier_phi_3_2_ladder_2 = _146 >> 16u;
        }
        _151 = frontier_phi_3_2_ladder;
        _153 = frontier_phi_3_2_ladder_1;
        _154 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _158 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _159 = _158.x;
    uint _160 = _158.z;
    bool _161 = _160 != 0u;
    uint _162 = _110.w;
    bool _164 = _161 || (_162 == 0u);
    uint _166 = (_159 * _151) + 12u;
    uint _190;
    uint _191;
    uint _192;
    if (_164)
    {
        uvec4 _169 = texelFetch(l_geomAttrib_0, int(_166 >> 2u));
        uint _170 = _169.x;
        _190 = _170 & 255u;
        _191 = (_170 >> 8u) & 255u;
        _192 = (_170 >> 16u) & 255u;
    }
    else
    {
        uint _178 = _166 >> 2u;
        uvec2 _184 = uvec2(texelFetch(l_geomAttrib_0, int(_178)).x, texelFetch(l_geomAttrib_0, int(_178 + 1u)).x);
        uint _185 = _184.x;
        _190 = _185 & 65535u;
        _191 = _185 >> 16u;
        _192 = _184.y & 65535u;
    }
    uint _196 = _158.y;
    bool _197 = _160 == 0u;
    uint _200 = _197 ? 4u : ((_162 != 0u) ? 12u : 8u);
    uvec4 _209 = texelFetch(l_geomAttrib_1, int((((_196 * _151) + 8u) + (_161 ? (_200 + 4u) : _200)) >> 2u));
    uint _210 = _209.x;
    float _214 = float(int(uint(int(_210 << 16u) >> int(16u))));
    float _215 = float(int(uint(int(_210) >> int(16u))));
    uint _217 = (_159 * _153) + 12u;
    uint _239;
    uint _240;
    uint _241;
    if (_164)
    {
        uvec4 _220 = texelFetch(l_geomAttrib_0, int(_217 >> 2u));
        uint _221 = _220.x;
        _239 = _221 & 255u;
        _240 = (_221 >> 8u) & 255u;
        _241 = (_221 >> 16u) & 255u;
    }
    else
    {
        uint _227 = _217 >> 2u;
        uvec2 _233 = uvec2(texelFetch(l_geomAttrib_0, int(_227)).x, texelFetch(l_geomAttrib_0, int(_227 + 1u)).x);
        uint _234 = _233.x;
        _239 = _234 & 65535u;
        _240 = _234 >> 16u;
        _241 = _233.y & 65535u;
    }
    uint _247 = _197 ? 4u : ((_162 != 0u) ? 12u : 8u);
    uvec4 _254 = texelFetch(l_geomAttrib_1, int((((_196 * _153) + 8u) + (_161 ? (_247 + 4u) : _247)) >> 2u));
    uint _255 = _254.x;
    float _259 = float(int(uint(int(_255 << 16u) >> int(16u))));
    float _260 = float(int(uint(int(_255) >> int(16u))));
    uint _262 = (_159 * _154) + 12u;
    uint _284;
    uint _285;
    uint _286;
    if (_164)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_262 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
    }
    else
    {
        uint _272 = _262 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
    }
    uint _292 = _197 ? 4u : ((_162 != 0u) ? 12u : 8u);
    uvec4 _299 = texelFetch(l_geomAttrib_1, int((((_196 * _154) + 8u) + (_161 ? (_292 + 4u) : _292)) >> 2u));
    uint _300 = _299.x;
    float _304 = float(int(uint(int(_300 << 16u) >> int(16u))));
    float _305 = float(int(uint(int(_300) >> int(16u))));
    bool _307 = _110.z == 0u;
    float _343;
    float _344;
    float _345;
    if (_307)
    {
        uint _310 = _151 * 3u;
        uvec3 _319 = uvec3(texelFetch(l_geomPositionBuffer, int(_310)).x, texelFetch(l_geomPositionBuffer, int(_310 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_310 + 2u)).x);
        _343 = uintBitsToFloat(_319.x);
        _344 = uintBitsToFloat(_319.y);
        _345 = uintBitsToFloat(_319.z);
    }
    else
    {
        uint _327 = _151 * 2u;
        uvec2 _333 = uvec2(texelFetch(l_geomPositionBuffer, int(_327)).x, texelFetch(l_geomPositionBuffer, int(_327 + 1u)).x);
        uint _334 = _333.x;
        _343 = unpackHalf2x16(_334).x;
        _344 = unpackHalf2x16(_334 >> 16u).x;
        _345 = unpackHalf2x16(_333.y).x;
    }
    float _381;
    float _382;
    float _383;
    if (_307)
    {
        uint _348 = _153 * 3u;
        uvec3 _357 = uvec3(texelFetch(l_geomPositionBuffer, int(_348)).x, texelFetch(l_geomPositionBuffer, int(_348 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_348 + 2u)).x);
        _381 = uintBitsToFloat(_357.x);
        _382 = uintBitsToFloat(_357.y);
        _383 = uintBitsToFloat(_357.z);
    }
    else
    {
        uint _365 = _153 * 2u;
        uvec2 _371 = uvec2(texelFetch(l_geomPositionBuffer, int(_365)).x, texelFetch(l_geomPositionBuffer, int(_365 + 1u)).x);
        uint _372 = _371.x;
        _381 = unpackHalf2x16(_372).x;
        _382 = unpackHalf2x16(_372 >> 16u).x;
        _383 = unpackHalf2x16(_371.y).x;
    }
    float _419;
    float _420;
    float _421;
    if (_307)
    {
        uint _386 = _154 * 3u;
        uvec3 _395 = uvec3(texelFetch(l_geomPositionBuffer, int(_386)).x, texelFetch(l_geomPositionBuffer, int(_386 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_386 + 2u)).x);
        _419 = uintBitsToFloat(_395.x);
        _420 = uintBitsToFloat(_395.y);
        _421 = uintBitsToFloat(_395.z);
    }
    else
    {
        uint _403 = _154 * 2u;
        uvec2 _409 = uvec2(texelFetch(l_geomPositionBuffer, int(_403)).x, texelFetch(l_geomPositionBuffer, int(_403 + 1u)).x);
        uint _410 = _409.x;
        _419 = unpackHalf2x16(_410).x;
        _420 = unpackHalf2x16(_410 >> 16u).x;
        _421 = unpackHalf2x16(_409.y).x;
    }
    float _424 = (1.0 - hit._m0.x) - hit._m0.y;
    float _446 = (_259 - _214) * 0.00048828125;
    float _448 = (_260 - _215) * 0.00048828125;
    float _451 = (_304 - _214) * 0.00048828125;
    float _452 = (_305 - _215) * 0.00048828125;
    float _474 = _381 - _343;
    float _475 = _382 - _344;
    float _476 = _383 - _345;
    float _479 = fma(_476, gl_ObjectToWorldEXT[2u].x, fma(_475, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _474));
    float _482 = fma(_476, gl_ObjectToWorldEXT[2u].y, fma(_475, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _474));
    float _485 = fma(_476, gl_ObjectToWorldEXT[2u].z, fma(_475, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _474));
    float _486 = _419 - _343;
    float _487 = _420 - _344;
    float _488 = _421 - _345;
    float _491 = fma(_488, gl_ObjectToWorldEXT[2u].x, fma(_487, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _486));
    float _494 = fma(_488, gl_ObjectToWorldEXT[2u].y, fma(_487, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _486));
    float _497 = fma(_488, gl_ObjectToWorldEXT[2u].z, fma(_487, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _486));
    float _498 = (((_259 * hit._m0.x) + (_214 * _424)) + (_304 * hit._m0.y)) * 0.00048828125;
    float _499 = (((_260 * hit._m0.x) + (_215 * _424)) + (_305 * hit._m0.y)) * 0.00048828125;
    float _510 = ((((float(_190) * _424) + (-127.0)) + (float(_239) * hit._m0.x)) + (float(_284) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _512 = ((((float(_191) * _424) + (-127.0)) + (float(_240) * hit._m0.x)) + (float(_285) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _513 = ((((float(_192) * _424) + (-127.0)) + (float(_241) * hit._m0.x)) + (float(_286) * hit._m0.y)) * 0.0078740157186985015869140625;
    uvec2 _525 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_1, int(0u)));
    bool _530 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _583;
    if (_530)
    {
        float _541 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _547 = (_497 * _482) - (_494 * _485);
        float _550 = (_491 * _485) - (_497 * _479);
        float _553 = (_494 * _479) - (_491 * _482);
        float _580 = ((log2((((float(_525.y) * 0.5) * float(_525.x)) * abs((_452 * _446) - (_451 * _448))) / (sqrt(((_550 * _550) + (_553 * _553)) + (_547 * _547)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_99) / abs(dot(vec3(_541 * gl_WorldRayDirectionEXT.x, _541 * gl_WorldRayDirectionEXT.y, _541 * gl_WorldRayDirectionEXT.z), vec3(_510, _512, _513))));
        _583 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    }
    else
    {
        _583 = 0.0;
    }
    uvec2 _601 = uvec2(textureSize(MaterialBasedBlendShader_snp_0_Texture2D_12, int(0u)));
    float _652;
    if (_530)
    {
        float _612 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _618 = (_497 * _482) - (_494 * _485);
        float _621 = (_491 * _485) - (_497 * _479);
        float _624 = (_494 * _479) - (_491 * _482);
        float _650 = ((log2((((float(_601.y) * 0.5) * float(_601.x)) * abs((_452 * _446) - (_451 * _448))) / (sqrt(((_621 * _621) + (_624 * _624)) + (_618 * _618)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_99) / abs(dot(vec3(_612 * gl_WorldRayDirectionEXT.x, _612 * gl_WorldRayDirectionEXT.y, _612 * gl_WorldRayDirectionEXT.z), vec3(_510, _512, _513))));
        _652 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    }
    else
    {
        _652 = 0.0;
    }
    if ((textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * _498) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _499) + cbTextureTilingScale._m0[1u].w), _652).x * textureLod(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _498) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _499) + cbTextureTilingScale._m0[0u].w), _583).w) < cbMtdParam._m0[1u].x)
    {
        payload._m0 = _52;
        ignoreIntersectionEXT;
    }
    else
    {
        payload._m0 = _52;
        return;
    }
}


