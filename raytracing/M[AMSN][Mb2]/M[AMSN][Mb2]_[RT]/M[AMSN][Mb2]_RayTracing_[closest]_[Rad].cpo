#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _56
{
    vec3 _m0;
};

struct _60
{
    vec2 _m0;
};

struct _63
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[21];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_Mb2_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _56 payload;
hitAttributeEXT _60 hit;
layout(location = 1) rayPayloadEXT _63 _65;
layout(location = 2) rayPayloadEXT _63 _66;

vec3 _1622;

void main()
{
    float _74 = float(gl_LaunchSizeEXT.y);
    float _104 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _105 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _106 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _113 = sqrt(((_105 * _105) + (_104 * _104)) + (_106 * _106)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _74)))));
    uvec4 _124 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _125 = _124.y;
    uint _165;
    uint _167;
    uint _168;
    if (_124.x == 0u)
    {
        uint _133 = (_125 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _142 = uvec3(texelFetch(l_geomIndexBuffer, int(_133)).x, texelFetch(l_geomIndexBuffer, int(_133 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_133 + 2u)).x);
        _165 = _142.x;
        _167 = _142.y;
        _168 = _142.z;
    }
    else
    {
        uint _146 = uint(gl_PrimitiveID) * 6u;
        uint _148 = _146 & 4294967292u;
        uint _151 = (_125 + _148) >> 2u;
        uvec2 _158 = uvec2(texelFetch(l_geomIndexBuffer, int(_151)).x, texelFetch(l_geomIndexBuffer, int(_151 + 1u)).x);
        uint _159 = _158.x;
        uint _160 = _158.y;
        uint _162 = _159 >> 16u;
        uint _163 = _160 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_148 == _146)
        {
            frontier_phi_3_2_ladder = _162;
            frontier_phi_3_2_ladder_1 = _159 & 65535u;
            frontier_phi_3_2_ladder_2 = _163;
        }
        else
        {
            frontier_phi_3_2_ladder = _163;
            frontier_phi_3_2_ladder_1 = _162;
            frontier_phi_3_2_ladder_2 = _160 >> 16u;
        }
        _165 = frontier_phi_3_2_ladder_1;
        _167 = frontier_phi_3_2_ladder;
        _168 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _172 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _173 = _172.x;
    uint _174 = _172.z;
    bool _175 = _174 != 0u;
    bool _177 = _124.w == 0u;
    bool _178 = _175 || _177;
    uint _179 = _173 * _165;
    uint _180 = _179 + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_178)
    {
        uvec4 _183 = texelFetch(l_geomAttrib_0, int(_180 >> 2u));
        uint _184 = _183.x;
        _204 = _184 & 255u;
        _205 = (_184 >> 8u) & 255u;
        _206 = (_184 >> 16u) & 255u;
        _207 = 16u;
    }
    else
    {
        uint _192 = _180 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 20u;
    }
    uvec4 _215 = texelFetch(l_geomAttrib_0, int((_207 + _179) >> 2u));
    uint _216 = _215.x;
    bool _230 = _174 == 0u;
    uint _231;
    if (_230)
    {
        _231 = _207 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_177)
        {
            frontier_phi_9_10_ladder = _207 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _207 + 12u;
        }
        _231 = frontier_phi_9_10_ladder;
    }
    uint _235 = _175 ? (_231 + 4u) : _231;
    uvec4 _245 = texelFetch(l_geomAttrib_0, int(((_179 + 8u) + _235) >> 2u));
    uint _246 = _245.x;
    float _250 = float(int(uint(int(_246 << 16u) >> int(16u))));
    float _251 = float(int(uint(int(_246) >> int(16u))));
    uint _259 = _173 * _167;
    uint _260 = _259 + 12u;
    uint _281;
    uint _282;
    uint _283;
    uint _284;
    if (_178)
    {
        uvec4 _262 = texelFetch(l_geomAttrib_0, int(_260 >> 2u));
        uint _263 = _262.x;
        _281 = _263 & 255u;
        _282 = (_263 >> 8u) & 255u;
        _283 = (_263 >> 16u) & 255u;
        _284 = 16u;
    }
    else
    {
        uint _269 = _260 >> 2u;
        uvec2 _275 = uvec2(texelFetch(l_geomAttrib_0, int(_269)).x, texelFetch(l_geomAttrib_0, int(_269 + 1u)).x);
        uint _276 = _275.x;
        _281 = _276 & 65535u;
        _282 = _276 >> 16u;
        _283 = _275.y & 65535u;
        _284 = 20u;
    }
    uvec4 _290 = texelFetch(l_geomAttrib_0, int((_284 + _259) >> 2u));
    uint _291 = _290.x;
    uint _303;
    if (_230)
    {
        _303 = _284 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_177)
        {
            frontier_phi_16_17_ladder = _284 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _284 + 12u;
        }
        _303 = frontier_phi_16_17_ladder;
    }
    uint _307 = _175 ? (_303 + 4u) : _303;
    uvec4 _317 = texelFetch(l_geomAttrib_0, int(((_259 + 8u) + _307) >> 2u));
    uint _318 = _317.x;
    float _322 = float(int(uint(int(_318 << 16u) >> int(16u))));
    float _323 = float(int(uint(int(_318) >> int(16u))));
    uint _331 = _173 * _168;
    uint _332 = _331 + 12u;
    uint _353;
    uint _354;
    uint _355;
    uint _356;
    if (_178)
    {
        uvec4 _334 = texelFetch(l_geomAttrib_0, int(_332 >> 2u));
        uint _335 = _334.x;
        _353 = _335 & 255u;
        _354 = (_335 >> 8u) & 255u;
        _355 = (_335 >> 16u) & 255u;
        _356 = 16u;
    }
    else
    {
        uint _341 = _332 >> 2u;
        uvec2 _347 = uvec2(texelFetch(l_geomAttrib_0, int(_341)).x, texelFetch(l_geomAttrib_0, int(_341 + 1u)).x);
        uint _348 = _347.x;
        _353 = _348 & 65535u;
        _354 = _348 >> 16u;
        _355 = _347.y & 65535u;
        _356 = 20u;
    }
    uvec4 _362 = texelFetch(l_geomAttrib_0, int((_356 + _331) >> 2u));
    uint _363 = _362.x;
    uint _375;
    if (_230)
    {
        _375 = _356 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_177)
        {
            frontier_phi_23_24_ladder = _356 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _356 + 12u;
        }
        _375 = frontier_phi_23_24_ladder;
    }
    uint _379 = _175 ? (_375 + 4u) : _375;
    uvec4 _389 = texelFetch(l_geomAttrib_0, int(((_331 + 8u) + _379) >> 2u));
    uint _390 = _389.x;
    float _394 = float(int(uint(int(_390 << 16u) >> int(16u))));
    float _395 = float(int(uint(int(_390) >> int(16u))));
    bool _404 = _124.z == 0u;
    float _440;
    float _441;
    float _442;
    if (_404)
    {
        uint _407 = _165 * 3u;
        uvec3 _416 = uvec3(texelFetch(l_geomPositionBuffer, int(_407)).x, texelFetch(l_geomPositionBuffer, int(_407 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_407 + 2u)).x);
        _440 = uintBitsToFloat(_416.x);
        _441 = uintBitsToFloat(_416.y);
        _442 = uintBitsToFloat(_416.z);
    }
    else
    {
        uint _424 = _165 * 2u;
        uvec2 _430 = uvec2(texelFetch(l_geomPositionBuffer, int(_424)).x, texelFetch(l_geomPositionBuffer, int(_424 + 1u)).x);
        uint _431 = _430.x;
        _440 = unpackHalf2x16(_431).x;
        _441 = unpackHalf2x16(_431 >> 16u).x;
        _442 = unpackHalf2x16(_430.y).x;
    }
    float _478;
    float _479;
    float _480;
    if (_404)
    {
        uint _445 = _167 * 3u;
        uvec3 _454 = uvec3(texelFetch(l_geomPositionBuffer, int(_445)).x, texelFetch(l_geomPositionBuffer, int(_445 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_445 + 2u)).x);
        _478 = uintBitsToFloat(_454.x);
        _479 = uintBitsToFloat(_454.y);
        _480 = uintBitsToFloat(_454.z);
    }
    else
    {
        uint _462 = _167 * 2u;
        uvec2 _468 = uvec2(texelFetch(l_geomPositionBuffer, int(_462)).x, texelFetch(l_geomPositionBuffer, int(_462 + 1u)).x);
        uint _469 = _468.x;
        _478 = unpackHalf2x16(_469).x;
        _479 = unpackHalf2x16(_469 >> 16u).x;
        _480 = unpackHalf2x16(_468.y).x;
    }
    float _516;
    float _517;
    float _518;
    if (_404)
    {
        uint _483 = _168 * 3u;
        uvec3 _492 = uvec3(texelFetch(l_geomPositionBuffer, int(_483)).x, texelFetch(l_geomPositionBuffer, int(_483 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_483 + 2u)).x);
        _516 = uintBitsToFloat(_492.x);
        _517 = uintBitsToFloat(_492.y);
        _518 = uintBitsToFloat(_492.z);
    }
    else
    {
        uint _500 = _168 * 2u;
        uvec2 _506 = uvec2(texelFetch(l_geomPositionBuffer, int(_500)).x, texelFetch(l_geomPositionBuffer, int(_500 + 1u)).x);
        uint _507 = _506.x;
        _516 = unpackHalf2x16(_507).x;
        _517 = unpackHalf2x16(_507 >> 16u).x;
        _518 = unpackHalf2x16(_506.y).x;
    }
    float _521 = (1.0 - hit._m0.x) - hit._m0.y;
    float _565 = (((float(texelFetch(l_geomAttrib_0, int(((_259 + 12u) + _307) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_179 + 12u) + _235) >> 2u)).x & 255u) * _521)) + (float(texelFetch(l_geomAttrib_0, int(((_331 + 12u) + _379) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _568 = (_322 - _250) * 0.00048828125;
    float _570 = (_323 - _251) * 0.00048828125;
    float _573 = (_394 - _250) * 0.00048828125;
    float _574 = (_395 - _251) * 0.00048828125;
    float _596 = _478 - _440;
    float _597 = _479 - _441;
    float _598 = _480 - _442;
    float _601 = fma(_598, gl_ObjectToWorldEXT[2u].x, fma(_597, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _596));
    float _604 = fma(_598, gl_ObjectToWorldEXT[2u].y, fma(_597, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _596));
    float _607 = fma(_598, gl_ObjectToWorldEXT[2u].z, fma(_597, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _596));
    float _608 = _516 - _440;
    float _609 = _517 - _441;
    float _610 = _518 - _442;
    float _613 = fma(_610, gl_ObjectToWorldEXT[2u].x, fma(_609, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _608));
    float _616 = fma(_610, gl_ObjectToWorldEXT[2u].y, fma(_609, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _608));
    float _619 = fma(_610, gl_ObjectToWorldEXT[2u].z, fma(_609, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _608));
    float _620 = (((_322 * hit._m0.x) + (_250 * _521)) + (_394 * hit._m0.y)) * 0.00048828125;
    float _621 = (((_323 * hit._m0.x) + (_251 * _521)) + (_395 * hit._m0.y)) * 0.00048828125;
    float _625 = (((float(_204) * _521) + (-127.0)) + (float(_281) * hit._m0.x)) + (float(_353) * hit._m0.y);
    float _628 = (((float(_205) * _521) + (-127.0)) + (float(_282) * hit._m0.x)) + (float(_354) * hit._m0.y);
    float _631 = (((float(_206) * _521) + (-127.0)) + (float(_283) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _632 = _625 * 0.0078740157186985015869140625;
    float _634 = _628 * 0.0078740157186985015869140625;
    float _635 = _631 * 0.0078740157186985015869140625;
    float _648 = ((((float(_216 & 255u) * _521) + (-127.0)) + (float(_291 & 255u) * hit._m0.x)) + (float(_363 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _649 = ((((float((_216 >> 8u) & 255u) * _521) + (-127.0)) + (float((_291 >> 8u) & 255u) * hit._m0.x)) + (float((_363 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _650 = ((((float((_216 >> 16u) & 255u) * _521) + (-127.0)) + (float((_291 >> 16u) & 255u) * hit._m0.x)) + (float((_363 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _651 = ((((float(_216 >> 24u) * _521) + (-127.0)) + (float(_291 >> 24u) * hit._m0.x)) + (float(_363 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _661 = ((_649 * _635) - (_650 * _634)) * _651;
    float _662 = ((_650 * _632) - (_648 * _635)) * _651;
    float _663 = ((_648 * _634) - (_649 * _632)) * _651;
    float _667 = inversesqrt(dot(vec3(_661, _662, _663), vec3(_661, _662, _663)));
    uvec2 _694 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_1, int(0u)));
    bool _699 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _752;
    if (_699)
    {
        float _710 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _716 = (_619 * _604) - (_616 * _607);
        float _719 = (_613 * _607) - (_619 * _601);
        float _722 = (_616 * _601) - (_613 * _604);
        float _749 = ((log2((((float(_694.y) * 0.5) * float(_694.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_719 * _719) + (_722 * _722)) + (_716 * _716)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_710 * gl_WorldRayDirectionEXT.x, _710 * gl_WorldRayDirectionEXT.y, _710 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _752 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    }
    else
    {
        _752 = 0.0;
    }
    vec4 _756 = textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _620) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _621) + cbTextureTilingScale._m0[1u].w), _752);
    float _761 = _756.x * cbMatDynParam._m0[17u].x;
    float _762 = _756.y * cbMatDynParam._m0[17u].y;
    float _763 = _756.z * cbMatDynParam._m0[17u].z;
    uvec2 _781 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_2, int(0u)));
    float _832;
    if (_699)
    {
        float _792 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _798 = (_619 * _604) - (_616 * _607);
        float _801 = (_613 * _607) - (_619 * _601);
        float _804 = (_616 * _601) - (_613 * _604);
        float _830 = ((log2((((float(_781.y) * 0.5) * float(_781.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_801 * _801) + (_804 * _804)) + (_798 * _798)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_792 * gl_WorldRayDirectionEXT.x, _792 * gl_WorldRayDirectionEXT.y, _792 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _832 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    }
    else
    {
        _832 = 0.0;
    }
    vec4 _834 = textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _620) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _621) + cbTextureTilingScale._m0[4u].w), _832);
    uvec2 _856 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_0, int(0u)));
    float _907;
    if (_699)
    {
        float _867 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _873 = (_619 * _604) - (_616 * _607);
        float _876 = (_613 * _607) - (_619 * _601);
        float _879 = (_616 * _601) - (_613 * _604);
        float _905 = ((log2((((float(_856.y) * 0.5) * float(_856.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_876 * _876) + (_879 * _879)) + (_873 * _873)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_867 * gl_WorldRayDirectionEXT.x, _867 * gl_WorldRayDirectionEXT.y, _867 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _907 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    }
    else
    {
        _907 = 0.0;
    }
    float _919 = (_565 - ((cbMatDynParam._m0[19u].x * (1.0 - _565)) * (textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbMatDynParam._m0[19u].z * _620) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMatDynParam._m0[19u].z * _621) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _907).x + 0.00999999977648258209228515625))) * ((((((float(texelFetch(l_geomAttrib_0, int((_307 + _259) >> 2u)).x >> 24u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int((_235 + _179) >> 2u)).x >> 24u) * _521)) + (float(texelFetch(l_geomAttrib_0, int((_379 + _331) >> 2u)).x >> 24u) * hit._m0.y)) * 0.0039215688593685626983642578125) * cbMatDynParam._m0[19u].y) + 1.0);
    float _1723 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _920 = isnan(1.0) ? _1723 : (isnan(_1723) ? 1.0 : min(_1723, 1.0));
    float _927 = (_920 * ((_834.x * cbMatDynParam._m0[18u].x) - _761)) + _761;
    float _928 = (_920 * ((_834.y * cbMatDynParam._m0[18u].y) - _762)) + _762;
    float _929 = (_920 * ((_834.z * cbMatDynParam._m0[18u].z) - _763)) + _763;
    uvec2 _943 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_3, int(0u)));
    float _994;
    if (_699)
    {
        float _954 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _960 = (_619 * _604) - (_616 * _607);
        float _963 = (_613 * _607) - (_619 * _601);
        float _966 = (_616 * _601) - (_613 * _604);
        float _992 = ((log2((((float(_943.y) * 0.5) * float(_943.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_963 * _963) + (_966 * _966)) + (_960 * _960)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_954 * gl_WorldRayDirectionEXT.x, _954 * gl_WorldRayDirectionEXT.y, _954 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _994 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    }
    else
    {
        _994 = 0.0;
    }
    float _1000 = textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _620) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _621) + cbTextureTilingScale._m0[5u].w), _994).x + cbMatDynParam._m0[19u].w;
    uvec2 _1015 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_4, int(0u)));
    float _1066;
    if (_699)
    {
        float _1026 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1032 = (_619 * _604) - (_616 * _607);
        float _1035 = (_613 * _607) - (_619 * _601);
        float _1038 = (_616 * _601) - (_613 * _604);
        float _1064 = ((log2((((float(_1015.y) * 0.5) * float(_1015.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_1035 * _1035) + (_1038 * _1038)) + (_1032 * _1032)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1026 * gl_WorldRayDirectionEXT.x, _1026 * gl_WorldRayDirectionEXT.y, _1026 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _1066 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    }
    else
    {
        _1066 = 0.0;
    }
    float _1074 = (((cbMatDynParam._m0[20u].x - _1000) + textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _620) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _621) + cbTextureTilingScale._m0[6u].w), _1066).x) * _920) + _1000;
    uvec2 _1086 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_13, int(0u)));
    float _1137;
    if (_699)
    {
        float _1097 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1103 = (_619 * _604) - (_616 * _607);
        float _1106 = (_613 * _607) - (_619 * _601);
        float _1109 = (_616 * _601) - (_613 * _604);
        float _1135 = ((log2((((float(_1086.y) * 0.5) * float(_1086.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_1106 * _1106) + (_1109 * _1109)) + (_1103 * _1103)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1097 * gl_WorldRayDirectionEXT.x, _1097 * gl_WorldRayDirectionEXT.y, _1097 * gl_WorldRayDirectionEXT.z), vec3(_632, _634, _635))));
        _1137 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
    }
    else
    {
        _1137 = 0.0;
    }
    vec4 _1139 = textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _620) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _621) + cbTextureTilingScale._m0[2u].w), _1137);
    float _1141 = _1139.x;
    float _1142 = _1139.y;
    float _1143 = _1139.z;
    uvec2 _1155 = uvec2(textureSize(M_AMSN_Mb2_snp_0_Texture2D_14, int(0u)));
    float _1159 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1160 = _1159 * gl_WorldRayDirectionEXT.x;
    float _1161 = _1159 * gl_WorldRayDirectionEXT.y;
    float _1162 = _1159 * gl_WorldRayDirectionEXT.z;
    float _1206;
    if (_699)
    {
        float _1172 = (_619 * _604) - (_616 * _607);
        float _1175 = (_613 * _607) - (_619 * _601);
        float _1178 = (_616 * _601) - (_613 * _604);
        float _1204 = ((log2((((float(_1155.y) * 0.5) * float(_1155.x)) * abs((_574 * _568) - (_573 * _570))) / (sqrt(((_1175 * _1175) + (_1178 * _1178)) + (_1172 * _1172)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_113) / abs(dot(vec3(_1160, _1161, _1162), vec3(_632, _634, _635))));
        _1206 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
    }
    else
    {
        _1206 = 0.0;
    }
    vec4 _1208 = textureLod(sampler2D(M_AMSN_Mb2_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _620) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _621) + cbTextureTilingScale._m0[3u].w), _1206);
    float _1221 = ((_1208.z - _1143) * _920) + _1143;
    float _1224 = ((((_1208.x - _1141) * _920) + _1141) * 2.0) + (-1.0);
    float _1226 = ((((_1208.y - _1142) * _920) + _1142) * 2.0) + (-1.0);
    float _1227 = dot(vec2(_1224, _1226), vec2(_1224, _1226));
    float _1754 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    float _1232 = sqrt(1.0 - (isnan(1.0) ? _1754 : (isnan(_1754) ? 1.0 : min(_1754, 1.0))));
    float _1235 = fma(_1232, _632, fma(_1226, _648, (_667 * _661) * _1224));
    float _1238 = fma(_1232, _634, fma(_1226, _649, (_667 * _662) * _1224));
    float _1241 = fma(_1232, _635, fma(_1226, _650, (_667 * _663) * _1224));
    float _1245 = inversesqrt(dot(vec3(_1235, _1238, _1241), vec3(_1235, _1238, _1241)));
    float _1246 = _1245 * _1235;
    float _1247 = _1245 * _1238;
    float _1248 = _1245 * _1241;
    float _1260 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1261 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1262 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1263 = (-0.0) - _1160;
    float _1265 = (-0.0) - _1161;
    float _1266 = (-0.0) - _1162;
    float _1272 = float(gl_LaunchIDEXT.x);
    float _1273 = float(gl_LaunchIDEXT.y);
    float _1276 = float(gl_LaunchSizeEXT.x);
    float _1290 = fract(fract(sin(dot(vec2(_1272 / _1276, _1273 / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1303 = fract(fract(sin(dot(vec2((_1272 + 128.0) / _1276, (_1273 + 128.0) / _74), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1304 = 1.0 - _1074;
    float _1305 = _1304 * _927;
    float _1306 = _1304 * _928;
    float _1307 = _1304 * _929;
    float _1312 = _1074 * (_927 + (-0.039999999105930328369140625));
    float _1313 = _1074 * (_928 + (-0.039999999105930328369140625));
    float _1314 = _1074 * (_929 + (-0.039999999105930328369140625));
    float _1315 = _1312 + 0.039999999105930328369140625;
    float _1317 = _1313 + 0.039999999105930328369140625;
    float _1318 = _1314 + 0.039999999105930328369140625;
    _66._m0 = 1u;
    uvec4 _1328 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1329 = _1328.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1329, _1328.w, _1329, vec3(_1260, _1261, _1262), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    if (_66._m0 == 0u)
    {
        float _1349 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1246, _1247, _1248));
        float _1765 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1352 = isnan(1.0) ? _1765 : (isnan(_1765) ? 1.0 : min(_1765, 1.0));
        float _1371 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1221) * 0.949999988079071044921875);
        float _1372 = _1371 * _1371;
        float _1373 = g_sceneCB._m0[4u].x - _1160;
        float _1374 = g_sceneCB._m0[4u].y - _1161;
        float _1375 = g_sceneCB._m0[4u].z - _1162;
        float _1379 = inversesqrt(dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375)));
        float _1380 = _1379 * _1373;
        float _1381 = _1379 * _1374;
        float _1382 = _1379 * _1375;
        float _1383 = dot(vec3(_1246, _1247, _1248), vec3(g_sceneCB._m0[4u].xyz));
        float _1776 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1386 = isnan(1.0) ? _1776 : (isnan(_1776) ? 1.0 : min(_1776, 1.0));
        float _1387 = dot(vec3(_1246, _1247, _1248), vec3(_1263, _1265, _1266));
        float _1787 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1390 = isnan(1.0) ? _1787 : (isnan(_1787) ? 1.0 : min(_1787, 1.0));
        float _1391 = dot(vec3(_1246, _1247, _1248), vec3(_1380, _1381, _1382));
        float _1798 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1394 = isnan(1.0) ? _1798 : (isnan(_1798) ? 1.0 : min(_1798, 1.0));
        float _1395 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1380, _1381, _1382));
        float _1809 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = _1372 * _1372;
        float _1403 = ((_1394 * _1394) * (_1399 + (-1.0))) + 1.0;
        float _1412 = exp2(log2(1.0 - (isnan(1.0) ? _1809 : (isnan(_1809) ? 1.0 : min(_1809, 1.0)))) * 5.0);
        float _1423 = 1.0 - _1372;
        float _1434 = (0.5 / (((_1390 * ((_1386 * _1423) + _1372)) + 9.9999999392252902907785028219223e-09) + (((_1390 * _1423) + _1372) * _1386))) * _1386;
        float _1820 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1436 = (isnan(1.0) ? _1820 : (isnan(_1820) ? 1.0 : min(_1820, 1.0))) * (_1399 / ((_1403 * _1403) * 3.141590118408203125));
        _1443 = ((_1305 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1352;
        _1444 = ((_1306 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1352;
        _1445 = ((_1307 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1352;
        _1446 = (((_1412 * (0.959999978542327880859375 - _1312)) + _1315) * g_sceneCB._m0[5u].x) * _1436;
        _1447 = (((_1412 * (0.959999978542327880859375 - _1313)) + _1317) * g_sceneCB._m0[5u].y) * _1436;
        _1448 = (((_1412 * (0.959999978542327880859375 - _1314)) + _1318) * g_sceneCB._m0[5u].z) * _1436;
    }
    else
    {
        _1443 = 0.0;
        _1444 = 0.0;
        _1445 = 0.0;
        _1446 = 0.0;
        _1447 = 0.0;
        _1448 = 0.0;
    }
    bool _1450 = abs(_1247) < 0.89999997615814208984375;
    float _1452 = float(_1450);
    float _1453 = _1450 ? 0.0 : 1.0;
    float _1456 = (_1452 * _1248) - (_1453 * _1247);
    float _1457 = _1453 * _1246;
    float _1459 = (-0.0) - (_1246 * _1452);
    float _1463 = inversesqrt(dot(vec3(_1456, _1457, _1459), vec3(_1456, _1457, _1459)));
    float _1464 = _1456 * _1463;
    float _1465 = _1457 * _1463;
    float _1466 = _1463 * _1459;
    float _1469 = (_1465 * _1248) - (_1466 * _1247);
    float _1472 = (_1466 * _1246) - (_1464 * _1248);
    float _1475 = (_1464 * _1247) - (_1465 * _1246);
    float _1477;
    float _1485;
    float _1476 = 0.0;
    uint _1478 = 0u;
    float _1482;
    bool _1484;
    for (;;)
    {
        _1482 = (float(_1478) + _1290) * 0.03125;
        _1484 = _1478 == 0u;
        float frontier_phi_53_pred;
        if (_1484)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1627;
            float _1628;
            uint _1630;
            _1627 = 0.0;
            _1628 = 0.5;
            _1630 = _1478;
            float _1486;
            for (;;)
            {
                _1486 = ((_1630 & 1u) != 0u) ? (_1628 + _1627) : _1627;
                uint _1631 = _1630 >> 1u;
                if (_1631 == 0u)
                {
                    break;
                }
                else
                {
                    _1627 = _1486;
                    _1628 *= 0.5;
                    _1630 = _1631;
                }
            }
            frontier_phi_53_pred = _1486;
        }
        _1485 = frontier_phi_53_pred;
        float _1487 = _1485 + _1303;
        float _1491 = sqrt(_1482);
        float _1492 = ((_1487 > 1.0) ? (_1487 + (-1.0)) : _1487) * 6.283185482025146484375;
        float _1495 = cos(_1492) * _1491;
        float _1497 = sin(_1492) * _1491;
        float _1499 = sqrt(1.0 - _1482);
        float _1512 = ((_1499 * _1246) + (_1495 * _1469)) + (_1497 * _1464);
        float _1513 = ((_1499 * _1247) + (_1495 * _1472)) + (_1497 * _1465);
        float _1514 = ((_1499 * _1248) + (_1495 * _1475)) + (_1497 * _1466);
        _65._m0 = 1u;
        uvec4 _1518 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1519 = _1518.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1519, _1518.w, _1519, vec3(_1260, _1261, _1262), 9.9999997473787516355514526367188e-05, vec3(_1512, _1513, _1514), 10000.0, 1);
        float _1525 = dot(vec3(_1246, _1247, _1248), vec3(_1512, _1513, _1514));
        float _1831 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1528 = isnan(1.0) ? _1831 : (isnan(_1831) ? 1.0 : min(_1831, 1.0));
        _1477 = ((float(_65._m0 == 0u) * _1528) / (_1528 * 0.3183098733425140380859375)) + _1476;
        uint _1479 = _1478 + 1u;
        if (_1479 == 32u)
        {
            break;
        }
        else
        {
            _1476 = _1477;
            _1478 = _1479;
            continue;
        }
    }
    float _1536 = _1477 * 0.009947183541953563690185546875;
    float _1541 = dot(vec3(_1160, _1161, _1162), vec3(_1246, _1247, _1248)) * 2.0;
    vec4 _1555 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1160 - (_1541 * _1246), _1161 - (_1541 * _1247), _1162 - (_1541 * _1248)), 4.0 - (_1221 * 4.0));
    float _1560 = dot(vec3(_1263, _1265, _1266), vec3(_1246, _1247, _1248));
    float _1842 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
    float _1570 = exp2(log2(1.0 - (isnan(1.0) ? _1842 : (isnan(_1842) ? 1.0 : min(_1842, 1.0)))) * 5.0);
    vec4 _1582 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1246, _1247, _1248), 0.0);
    float _1593 = (_1446 + _1443) + (((_1582.x * _1305) + (((_1570 * (0.959999978542327880859375 - _1312)) + _1315) * _1555.x)) * _1536);
    float _1597 = (_1447 + _1444) + (((_1582.y * _1306) + (((_1570 * (0.959999978542327880859375 - _1313)) + _1317) * _1555.y)) * _1536);
    float _1601 = (_1448 + _1445) + (((_1582.z * _1307) + (((_1570 * (0.959999978542327880859375 - _1314)) + _1318) * _1555.z)) * _1536);
    float _1853 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
    float _1864 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
    float _1875 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
    bool _1610 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1621;
    _1621.x = _1610 ? ((_625 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0)));
    _1621.y = _1610 ? ((_628 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1864 : (isnan(_1864) ? 1.0 : min(_1864, 1.0)));
    _1621.z = _1610 ? ((_631 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1875 : (isnan(_1875) ? 1.0 : min(_1875, 1.0)));
    payload._m0 = _1621;
}


