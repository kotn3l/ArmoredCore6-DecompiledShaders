#version 460
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform CB_CS_ANIMATIONUBO
{
    vec4 _m0[9];
} CB_CS_ANIMATION;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 30) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer outPositionBuffer;

uint _99;

void main()
{
    uvec4 _52 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
    uint _57 = (((_52.z * gl_WorkGroupID.y) + gl_WorkGroupID.x) << 6u) + gl_LocalInvocationIndex;
    if (_57 < _52.x)
    {
        uint _69 = floatBitsToUint(CB_CS_ANIMATION._m0[1u]).x * _57;
        uint _70 = _69 >> 2u;
        uvec3 _80 = uvec3(texelFetch(l_geomAttrib_0, int(_70)).x, texelFetch(l_geomAttrib_0, int(_70 + 1u)).x, texelFetch(l_geomAttrib_0, int(_70 + 2u)).x);
        float _84 = uintBitsToFloat(_80.x);
        float _85 = uintBitsToFloat(_80.y);
        float _86 = uintBitsToFloat(_80.z);
        uvec4 _89 = floatBitsToUint(CB_CS_ANIMATION._m0[0u]);
        uint _92 = _69 + 12u;
        uint _108;
        uint _109;
        if (_89.y == 0u)
        {
            _108 = texelFetch(l_geomAttrib_0, int(_92 >> 2u)).x >> 24u;
            _109 = 28u;
        }
        else
        {
            _108 = uvec2(_99, texelFetch(l_geomAttrib_0, int((_92 >> 2u) + 1u)).x).y >> 16u;
            _109 = 32u;
        }
        uint _123 = uint(float(_108)) * 3u;
        uint _131 = _123 + 1u;
        uint _138 = _123 + 2u;
        float _173 = (float(texelFetch(l_geomAttrib_0, int((_109 + _69) >> 2u)).x & 255u) * 0.0039215688593685626983642578125) * ((((cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) - cbMtdParam._m0[11u].w) * cbMtdParam._m0[11u].z) + cbMtdParam._m0[11u].w);
        float _175 = sin(_173) * cbMtdParam._m0[10u].x;
        float _183 = (fma(_86, cbObjMatrix._m0[_123].z, fma(_85, cbObjMatrix._m0[_123].y, cbObjMatrix._m0[_123].x * _84)) + cbObjMatrix._m0[_123].w) + ((cos(_173) * cbMtdParam._m0[10u].x) * cbMtdParam._m0[11u].y);
        float _184 = (fma(_86, cbObjMatrix._m0[_131].z, fma(_85, cbObjMatrix._m0[_131].y, cbObjMatrix._m0[_131].x * _84)) + cbObjMatrix._m0[_131].w) + (cbMtdParam._m0[11u].x * _175);
        float _185 = (fma(_86, cbObjMatrix._m0[_138].z, fma(_85, cbObjMatrix._m0[_138].y, cbObjMatrix._m0[_138].x * _84)) + cbObjMatrix._m0[_138].w) + (_175 * cbMtdParam._m0[10u].z);
        float _209 = fma(_185, CB_CS_ANIMATION._m0[5u].z, fma(_184, CB_CS_ANIMATION._m0[5u].y, _183 * CB_CS_ANIMATION._m0[5u].x)) + CB_CS_ANIMATION._m0[5u].w;
        float _213 = fma(_185, CB_CS_ANIMATION._m0[6u].z, fma(_184, CB_CS_ANIMATION._m0[6u].y, _183 * CB_CS_ANIMATION._m0[6u].x)) + CB_CS_ANIMATION._m0[6u].w;
        float _217 = fma(_185, CB_CS_ANIMATION._m0[7u].z, fma(_184, CB_CS_ANIMATION._m0[7u].y, CB_CS_ANIMATION._m0[7u].x * _183)) + CB_CS_ANIMATION._m0[7u].w;
        if (_89.w == 0u)
        {
            uint _230 = _57 * 3u;
            imageStore(outPositionBuffer, int(_230), uvec4(uint(float(floatBitsToUint(_209)))));
            imageStore(outPositionBuffer, int(_230 + 1u), uvec4(uint(float(floatBitsToUint(_213)))));
            imageStore(outPositionBuffer, int(_230 + 2u), uvec4(uint(float(floatBitsToUint(_217)))));
        }
        else
        {
            uint _251 = _57 * 2u;
            imageStore(outPositionBuffer, int(_251), uvec4((packHalf2x16(vec2(_213, 0.0)) << 16u) | packHalf2x16(vec2(_209, 0.0))));
            imageStore(outPositionBuffer, int(_251 + 1u), uvec4((packHalf2x16(vec2(0.0)) << 16u) | packHalf2x16(vec2(_217, 0.0))));
        }
    }
}


