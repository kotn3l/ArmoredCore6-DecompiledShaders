#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _49
{
    vec3 _m0;
};

struct _53
{
    vec2 _m0;
};

struct _56
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Spacedebris_01_snp_0_Texture2D_2;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(location = 0) rayPayloadInEXT _49 payload;
hitAttributeEXT _53 hit;
layout(location = 1) rayPayloadEXT _56 _58;
layout(location = 2) rayPayloadEXT _56 _59;

vec3 _1068;

void main()
{
    float _67 = float(gl_LaunchSizeEXT.y);
    float _97 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _98 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _117 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _118 = _117.y;
    uint _157;
    uint _159;
    uint _160;
    if (_117.x == 0u)
    {
        uint _125 = (_118 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _134 = uvec3(texelFetch(l_geomIndexBuffer, int(_125)).x, texelFetch(l_geomIndexBuffer, int(_125 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_125 + 2u)).x);
        _157 = _134.x;
        _159 = _134.y;
        _160 = _134.z;
    }
    else
    {
        uint _138 = uint(gl_PrimitiveID) * 6u;
        uint _140 = _138 & 4294967292u;
        uint _143 = (_118 + _140) >> 2u;
        uvec2 _150 = uvec2(texelFetch(l_geomIndexBuffer, int(_143)).x, texelFetch(l_geomIndexBuffer, int(_143 + 1u)).x);
        uint _151 = _150.x;
        uint _152 = _150.y;
        uint _154 = _151 >> 16u;
        uint _155 = _152 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_140 == _138)
        {
            frontier_phi_3_2_ladder = _155;
            frontier_phi_3_2_ladder_1 = _154;
            frontier_phi_3_2_ladder_2 = _151 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _152 >> 16u;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _154;
        }
        _157 = frontier_phi_3_2_ladder_2;
        _159 = frontier_phi_3_2_ladder_1;
        _160 = frontier_phi_3_2_ladder;
    }
    uvec4 _164 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _165 = _164.x;
    uint _166 = _164.z;
    bool _167 = _166 != 0u;
    bool _169 = _117.w == 0u;
    bool _170 = _167 || _169;
    uint _171 = _165 * _157;
    uint _172 = _171 + 12u;
    uint _196;
    uint _197;
    uint _198;
    uint _199;
    if (_170)
    {
        uvec4 _175 = texelFetch(l_geomAttrib_0, int(_172 >> 2u));
        uint _176 = _175.x;
        _196 = _176 & 255u;
        _197 = (_176 >> 8u) & 255u;
        _198 = (_176 >> 16u) & 255u;
        _199 = 16u;
    }
    else
    {
        uint _184 = _172 >> 2u;
        uvec2 _190 = uvec2(texelFetch(l_geomAttrib_0, int(_184)).x, texelFetch(l_geomAttrib_0, int(_184 + 1u)).x);
        uint _191 = _190.x;
        _196 = _191 & 65535u;
        _197 = _191 >> 16u;
        _198 = _190.y & 65535u;
        _199 = 20u;
    }
    uvec4 _207 = texelFetch(l_geomAttrib_0, int((_199 + _171) >> 2u));
    uint _208 = _207.x;
    bool _222 = _166 == 0u;
    uint _223;
    if (_222)
    {
        _223 = _199 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_169)
        {
            frontier_phi_9_10_ladder = _199 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _199 + 12u;
        }
        _223 = frontier_phi_9_10_ladder;
    }
    uvec4 _231 = texelFetch(l_geomAttrib_0, int(((_171 + 4u) + (_167 ? (_223 + 4u) : _223)) >> 2u));
    uint _232 = _231.x;
    float _236 = float(int(uint(int(_232 << 16u) >> int(16u))));
    float _237 = float(int(uint(int(_232) >> int(16u))));
    uint _238 = _165 * _159;
    uint _239 = _238 + 12u;
    uint _260;
    uint _261;
    uint _262;
    uint _263;
    if (_170)
    {
        uvec4 _241 = texelFetch(l_geomAttrib_0, int(_239 >> 2u));
        uint _242 = _241.x;
        _260 = _242 & 255u;
        _261 = (_242 >> 8u) & 255u;
        _262 = (_242 >> 16u) & 255u;
        _263 = 16u;
    }
    else
    {
        uint _248 = _239 >> 2u;
        uvec2 _254 = uvec2(texelFetch(l_geomAttrib_0, int(_248)).x, texelFetch(l_geomAttrib_0, int(_248 + 1u)).x);
        uint _255 = _254.x;
        _260 = _255 & 65535u;
        _261 = _255 >> 16u;
        _262 = _254.y & 65535u;
        _263 = 20u;
    }
    uvec4 _269 = texelFetch(l_geomAttrib_0, int((_263 + _238) >> 2u));
    uint _270 = _269.x;
    uint _282;
    if (_222)
    {
        _282 = _263 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_169)
        {
            frontier_phi_16_17_ladder = _263 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _263 + 12u;
        }
        _282 = frontier_phi_16_17_ladder;
    }
    uvec4 _290 = texelFetch(l_geomAttrib_0, int(((_238 + 4u) + (_167 ? (_282 + 4u) : _282)) >> 2u));
    uint _291 = _290.x;
    float _295 = float(int(uint(int(_291 << 16u) >> int(16u))));
    float _296 = float(int(uint(int(_291) >> int(16u))));
    uint _297 = _165 * _160;
    uint _298 = _297 + 12u;
    uint _319;
    uint _320;
    uint _321;
    uint _322;
    if (_170)
    {
        uvec4 _300 = texelFetch(l_geomAttrib_0, int(_298 >> 2u));
        uint _301 = _300.x;
        _319 = _301 & 255u;
        _320 = (_301 >> 8u) & 255u;
        _321 = (_301 >> 16u) & 255u;
        _322 = 16u;
    }
    else
    {
        uint _307 = _298 >> 2u;
        uvec2 _313 = uvec2(texelFetch(l_geomAttrib_0, int(_307)).x, texelFetch(l_geomAttrib_0, int(_307 + 1u)).x);
        uint _314 = _313.x;
        _319 = _314 & 65535u;
        _320 = _314 >> 16u;
        _321 = _313.y & 65535u;
        _322 = 20u;
    }
    uvec4 _328 = texelFetch(l_geomAttrib_0, int((_322 + _297) >> 2u));
    uint _329 = _328.x;
    uint _341;
    if (_222)
    {
        _341 = _322 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_169)
        {
            frontier_phi_23_24_ladder = _322 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _322 + 12u;
        }
        _341 = frontier_phi_23_24_ladder;
    }
    uvec4 _349 = texelFetch(l_geomAttrib_0, int(((_297 + 4u) + (_167 ? (_341 + 4u) : _341)) >> 2u));
    uint _350 = _349.x;
    float _354 = float(int(uint(int(_350 << 16u) >> int(16u))));
    float _355 = float(int(uint(int(_350) >> int(16u))));
    bool _357 = _117.z == 0u;
    float _393;
    float _394;
    float _395;
    if (_357)
    {
        uint _360 = _157 * 3u;
        uvec3 _369 = uvec3(texelFetch(l_geomPositionBuffer, int(_360)).x, texelFetch(l_geomPositionBuffer, int(_360 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_360 + 2u)).x);
        _393 = uintBitsToFloat(_369.x);
        _394 = uintBitsToFloat(_369.y);
        _395 = uintBitsToFloat(_369.z);
    }
    else
    {
        uint _377 = _157 * 2u;
        uvec2 _383 = uvec2(texelFetch(l_geomPositionBuffer, int(_377)).x, texelFetch(l_geomPositionBuffer, int(_377 + 1u)).x);
        uint _384 = _383.x;
        _393 = unpackHalf2x16(_384).x;
        _394 = unpackHalf2x16(_384 >> 16u).x;
        _395 = unpackHalf2x16(_383.y).x;
    }
    float _431;
    float _432;
    float _433;
    if (_357)
    {
        uint _398 = _159 * 3u;
        uvec3 _407 = uvec3(texelFetch(l_geomPositionBuffer, int(_398)).x, texelFetch(l_geomPositionBuffer, int(_398 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_398 + 2u)).x);
        _431 = uintBitsToFloat(_407.x);
        _432 = uintBitsToFloat(_407.y);
        _433 = uintBitsToFloat(_407.z);
    }
    else
    {
        uint _415 = _159 * 2u;
        uvec2 _421 = uvec2(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x);
        uint _422 = _421.x;
        _431 = unpackHalf2x16(_422).x;
        _432 = unpackHalf2x16(_422 >> 16u).x;
        _433 = unpackHalf2x16(_421.y).x;
    }
    float _469;
    float _470;
    float _471;
    if (_357)
    {
        uint _436 = _160 * 3u;
        uvec3 _445 = uvec3(texelFetch(l_geomPositionBuffer, int(_436)).x, texelFetch(l_geomPositionBuffer, int(_436 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_436 + 2u)).x);
        _469 = uintBitsToFloat(_445.x);
        _470 = uintBitsToFloat(_445.y);
        _471 = uintBitsToFloat(_445.z);
    }
    else
    {
        uint _453 = _160 * 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _469 = unpackHalf2x16(_460).x;
        _470 = unpackHalf2x16(_460 >> 16u).x;
        _471 = unpackHalf2x16(_459.y).x;
    }
    float _474 = (1.0 - hit._m0.x) - hit._m0.y;
    float _527 = _431 - _393;
    float _528 = _432 - _394;
    float _529 = _433 - _395;
    float _532 = fma(_529, gl_ObjectToWorldEXT[2u].x, fma(_528, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _527));
    float _535 = fma(_529, gl_ObjectToWorldEXT[2u].y, fma(_528, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _527));
    float _538 = fma(_529, gl_ObjectToWorldEXT[2u].z, fma(_528, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _527));
    float _539 = _469 - _393;
    float _540 = _470 - _394;
    float _541 = _471 - _395;
    float _544 = fma(_541, gl_ObjectToWorldEXT[2u].x, fma(_540, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _539));
    float _547 = fma(_541, gl_ObjectToWorldEXT[2u].y, fma(_540, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _539));
    float _550 = fma(_541, gl_ObjectToWorldEXT[2u].z, fma(_540, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _539));
    float _557 = (((float(_196) * _474) + (-127.0)) + (float(_260) * hit._m0.x)) + (float(_319) * hit._m0.y);
    float _560 = (((float(_197) * _474) + (-127.0)) + (float(_261) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _563 = (((float(_198) * _474) + (-127.0)) + (float(_262) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _564 = _557 * 0.0078740157186985015869140625;
    float _566 = _560 * 0.0078740157186985015869140625;
    float _567 = _563 * 0.0078740157186985015869140625;
    float _580 = ((((float(_208 & 255u) * _474) + (-127.0)) + (float(_270 & 255u) * hit._m0.x)) + (float(_329 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _581 = ((((float((_208 >> 8u) & 255u) * _474) + (-127.0)) + (float((_270 >> 8u) & 255u) * hit._m0.x)) + (float((_329 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _582 = ((((float((_208 >> 16u) & 255u) * _474) + (-127.0)) + (float((_270 >> 16u) & 255u) * hit._m0.x)) + (float((_329 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _583 = ((((float(_208 >> 24u) * _474) + (-127.0)) + (float(_270 >> 24u) * hit._m0.x)) + (float(_329 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _593 = ((_581 * _567) - (_582 * _566)) * _583;
    float _594 = ((_582 * _564) - (_580 * _567)) * _583;
    float _595 = ((_580 * _566) - (_581 * _564)) * _583;
    float _599 = inversesqrt(dot(vec3(_593, _594, _595), vec3(_593, _594, _595)));
    uvec2 _624 = uvec2(textureSize(M_Spacedebris_01_snp_0_Texture2D_2, int(0u)));
    float _633 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _634 = _633 * gl_WorldRayDirectionEXT.x;
    float _635 = _633 * gl_WorldRayDirectionEXT.y;
    float _636 = _633 * gl_WorldRayDirectionEXT.z;
    float _688;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _650 = (_550 * _535) - (_547 * _538);
        float _653 = (_544 * _538) - (_550 * _532);
        float _656 = (_547 * _532) - (_544 * _535);
        float _685 = ((log2((((float(_624.y) * 0.5) * float(_624.x)) * abs((((_355 - _237) * (_295 - _236)) - ((_354 - _236) * (_296 - _237))) * 2.384185791015625e-07)) / (sqrt(((_653 * _653) + (_656 * _656)) + (_650 * _650)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_98 * _98) + (_97 * _97)) + (_99 * _99)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _67)))))) / abs(dot(vec3(_634, _635, _636), vec3(_564, _566, _567))));
        _688 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    }
    else
    {
        _688 = 0.0;
    }
    vec4 _692 = textureLod(sampler2D(M_Spacedebris_01_snp_0_Texture2D_2, SS_BumpMap), vec2((((((_295 * hit._m0.x) + (_236 * _474)) + (_354 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_296 * hit._m0.x) + (_237 * _474)) + (_355 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _688);
    float _698 = (_692.x * 2.0) + (-1.0);
    float _700 = (_692.y * 2.0) + (-1.0);
    float _701 = dot(vec2(_698, _700), vec2(_698, _700));
    float _1147 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _706 = sqrt(1.0 - (isnan(1.0) ? _1147 : (isnan(_1147) ? 1.0 : min(_1147, 1.0))));
    float _709 = fma(_706, _564, fma(_700, _580, (_599 * _593) * _698));
    float _712 = fma(_706, _566, fma(_700, _581, (_599 * _594) * _698));
    float _715 = fma(_706, _567, fma(_700, _582, (_599 * _595) * _698));
    float _719 = inversesqrt(dot(vec3(_709, _712, _715), vec3(_709, _712, _715)));
    float _720 = _719 * _709;
    float _721 = _719 * _712;
    float _722 = _719 * _715;
    float _734 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _735 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _736 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _737 = (-0.0) - _634;
    float _739 = (-0.0) - _635;
    float _740 = (-0.0) - _636;
    float _746 = float(gl_LaunchIDEXT.x);
    float _747 = float(gl_LaunchIDEXT.y);
    float _750 = float(gl_LaunchSizeEXT.x);
    float _764 = fract(fract(sin(dot(vec2(_746 / _750, _747 / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _777 = fract(fract(sin(dot(vec2((_746 + 128.0) / _750, (_747 + 128.0) / _67), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _59._m0 = 1u;
    uvec4 _787 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _788 = _787.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _788, _787.w, _788, vec3(_734, _735, _736), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _897;
    float _898;
    float _899;
    float _900;
    float _901;
    float _902;
    if (_59._m0 == 0u)
    {
        float _809 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_720, _721, _722));
        float _1158 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
        float _812 = isnan(1.0) ? _1158 : (isnan(_1158) ? 1.0 : min(_1158, 1.0));
        float _831 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[10u].w) * 0.949999988079071044921875);
        float _832 = _831 * _831;
        float _833 = g_sceneCB._m0[4u].x - _634;
        float _834 = g_sceneCB._m0[4u].y - _635;
        float _835 = g_sceneCB._m0[4u].z - _636;
        float _839 = inversesqrt(dot(vec3(_833, _834, _835), vec3(_833, _834, _835)));
        float _840 = _839 * _833;
        float _841 = _839 * _834;
        float _842 = _839 * _835;
        float _843 = dot(vec3(_720, _721, _722), vec3(g_sceneCB._m0[4u].xyz));
        float _1169 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
        float _846 = isnan(1.0) ? _1169 : (isnan(_1169) ? 1.0 : min(_1169, 1.0));
        float _847 = dot(vec3(_720, _721, _722), vec3(_737, _739, _740));
        float _1180 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
        float _850 = isnan(1.0) ? _1180 : (isnan(_1180) ? 1.0 : min(_1180, 1.0));
        float _851 = dot(vec3(_720, _721, _722), vec3(_840, _841, _842));
        float _1191 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        float _854 = isnan(1.0) ? _1191 : (isnan(_1191) ? 1.0 : min(_1191, 1.0));
        float _855 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_840, _841, _842));
        float _1202 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        float _859 = _832 * _832;
        float _863 = ((_854 * _854) * (_859 + (-1.0))) + 1.0;
        float _875 = (exp2(log2(1.0 - (isnan(1.0) ? _1202 : (isnan(_1202) ? 1.0 : min(_1202, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _877 = 1.0 - _832;
        float _888 = (0.5 / (((_850 * ((_846 * _877) + _832)) + 9.9999999392252902907785028219223e-09) + (((_850 * _877) + _832) * _846))) * _846;
        float _1213 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _890 = (isnan(1.0) ? _1213 : (isnan(_1213) ? 1.0 : min(_1213, 1.0))) * (_859 / ((_863 * _863) * 3.141590118408203125));
        _897 = ((cbMtdParam._m0[9u].x * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _812;
        _898 = ((cbMtdParam._m0[9u].y * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _812;
        _899 = ((cbMtdParam._m0[9u].z * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _812;
        _900 = (_875 * g_sceneCB._m0[5u].x) * _890;
        _901 = (_875 * g_sceneCB._m0[5u].y) * _890;
        _902 = (_875 * g_sceneCB._m0[5u].z) * _890;
    }
    else
    {
        _897 = 0.0;
        _898 = 0.0;
        _899 = 0.0;
        _900 = 0.0;
        _901 = 0.0;
        _902 = 0.0;
    }
    bool _904 = abs(_721) < 0.89999997615814208984375;
    float _906 = float(_904);
    float _907 = _904 ? 0.0 : 1.0;
    float _910 = (_906 * _722) - (_907 * _721);
    float _911 = _907 * _720;
    float _913 = (-0.0) - (_720 * _906);
    float _917 = inversesqrt(dot(vec3(_910, _911, _913), vec3(_910, _911, _913)));
    float _918 = _910 * _917;
    float _919 = _911 * _917;
    float _920 = _917 * _913;
    float _923 = (_919 * _722) - (_920 * _721);
    float _926 = (_920 * _720) - (_918 * _722);
    float _929 = (_918 * _721) - (_919 * _720);
    float _931;
    float _939;
    float _930 = 0.0;
    uint _932 = 0u;
    float _936;
    bool _938;
    for (;;)
    {
        _936 = (float(_932) + _764) * 0.03125;
        _938 = _932 == 0u;
        float frontier_phi_41_pred;
        if (_938)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1073;
            float _1074;
            uint _1076;
            _1073 = 0.0;
            _1074 = 0.5;
            _1076 = _932;
            float _940;
            for (;;)
            {
                _940 = ((_1076 & 1u) != 0u) ? (_1074 + _1073) : _1073;
                uint _1077 = _1076 >> 1u;
                if (_1077 == 0u)
                {
                    break;
                }
                else
                {
                    _1073 = _940;
                    _1074 *= 0.5;
                    _1076 = _1077;
                }
            }
            frontier_phi_41_pred = _940;
        }
        _939 = frontier_phi_41_pred;
        float _941 = _939 + _777;
        float _945 = sqrt(_936);
        float _946 = ((_941 > 1.0) ? (_941 + (-1.0)) : _941) * 6.283185482025146484375;
        float _949 = cos(_946) * _945;
        float _951 = sin(_946) * _945;
        float _953 = sqrt(1.0 - _936);
        float _966 = ((_953 * _720) + (_949 * _923)) + (_951 * _918);
        float _967 = ((_953 * _721) + (_949 * _926)) + (_951 * _919);
        float _968 = ((_953 * _722) + (_949 * _929)) + (_951 * _920);
        _58._m0 = 1u;
        uvec4 _972 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _973 = _972.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _973, _972.w, _973, vec3(_734, _735, _736), 9.9999997473787516355514526367188e-05, vec3(_966, _967, _968), 10000.0, 1);
        float _979 = dot(vec3(_720, _721, _722), vec3(_966, _967, _968));
        float _1224 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _982 = isnan(1.0) ? _1224 : (isnan(_1224) ? 1.0 : min(_1224, 1.0));
        _931 = ((float(_58._m0 == 0u) * _982) / (_982 * 0.3183098733425140380859375)) + _930;
        uint _933 = _932 + 1u;
        if (_933 == 32u)
        {
            break;
        }
        else
        {
            _930 = _931;
            _932 = _933;
            continue;
        }
    }
    float _990 = _931 * 0.009947183541953563690185546875;
    float _995 = dot(vec3(_634, _635, _636), vec3(_720, _721, _722)) * 2.0;
    vec4 _1009 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_634 - (_995 * _720), _635 - (_995 * _721), _636 - (_995 * _722)), 4.0 - (cbMtdParam._m0[10u].w * 4.0));
    float _1014 = dot(vec3(_737, _739, _740), vec3(_720, _721, _722));
    float _1235 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _1023 = (exp2(log2(1.0 - (isnan(1.0) ? _1235 : (isnan(_1235) ? 1.0 : min(_1235, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1029 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_720, _721, _722), 0.0);
    float _1040 = (_900 + _897) + (((_1029.x * cbMtdParam._m0[9u].x) + (_1023 * _1009.x)) * _990);
    float _1044 = (_901 + _898) + (((_1029.y * cbMtdParam._m0[9u].y) + (_1023 * _1009.y)) * _990);
    float _1048 = (_902 + _899) + (((_1029.z * cbMtdParam._m0[9u].z) + (_1023 * _1009.z)) * _990);
    float _1246 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    float _1257 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
    float _1268 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    bool _1056 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1067;
    _1067.x = _1056 ? ((_557 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1246 : (isnan(_1246) ? 1.0 : min(_1246, 1.0)));
    _1067.y = _1056 ? ((_560 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1257 : (isnan(_1257) ? 1.0 : min(_1257, 1.0)));
    _1067.z = _1056 ? ((_563 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1268 : (isnan(_1268) ? 1.0 : min(_1268, 1.0)));
    payload._m0 = _1067;
}


