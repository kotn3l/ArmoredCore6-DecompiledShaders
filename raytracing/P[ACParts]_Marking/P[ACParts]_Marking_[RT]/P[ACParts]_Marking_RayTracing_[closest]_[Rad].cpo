#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _48
{
    vec3 _m0;
};

struct _52
{
    vec2 _m0;
};

struct _55
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2DArray P_ACParts_Marking_snp_0_Texture2DArray_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _48 payload;
hitAttributeEXT _52 hit;
layout(location = 1) rayPayloadEXT _55 _57;
layout(location = 2) rayPayloadEXT _55 _58;

vec3 _748;

void main()
{
    uvec4 _72 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _73 = _72.y;
    uint _115;
    uint _117;
    uint _118;
    if (_72.x == 0u)
    {
        uint _81 = (_73 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _92 = uvec3(texelFetch(l_geomIndexBuffer, int(_81)).x, texelFetch(l_geomIndexBuffer, int(_81 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_81 + 2u)).x);
        _115 = _92.x;
        _117 = _92.y;
        _118 = _92.z;
    }
    else
    {
        uint _96 = uint(gl_PrimitiveID) * 6u;
        uint _98 = _96 & 4294967292u;
        uint _101 = (_73 + _98) >> 2u;
        uvec2 _108 = uvec2(texelFetch(l_geomIndexBuffer, int(_101)).x, texelFetch(l_geomIndexBuffer, int(_101 + 1u)).x);
        uint _109 = _108.x;
        uint _110 = _108.y;
        uint _112 = _109 >> 16u;
        uint _113 = _110 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_98 == _96)
        {
            frontier_phi_3_2_ladder = _109 & 65535u;
            frontier_phi_3_2_ladder_1 = _112;
            frontier_phi_3_2_ladder_2 = _113;
        }
        else
        {
            frontier_phi_3_2_ladder = _112;
            frontier_phi_3_2_ladder_1 = _113;
            frontier_phi_3_2_ladder_2 = _110 >> 16u;
        }
        _115 = frontier_phi_3_2_ladder;
        _117 = frontier_phi_3_2_ladder_1;
        _118 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _122 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _123 = _122.x;
    uint _124 = _122.z;
    bool _125 = _124 != 0u;
    bool _127 = _72.w == 0u;
    bool _128 = _125 || _127;
    uint _130 = (_123 * _115) + 12u;
    uint _154;
    uint _155;
    uint _156;
    uint _157;
    if (_128)
    {
        uvec4 _133 = texelFetch(l_geomAttrib_0, int(_130 >> 2u));
        uint _134 = _133.x;
        _154 = _134 & 255u;
        _155 = (_134 >> 8u) & 255u;
        _156 = (_134 >> 16u) & 255u;
        _157 = 20u;
    }
    else
    {
        uint _142 = _130 >> 2u;
        uvec2 _148 = uvec2(texelFetch(l_geomAttrib_0, int(_142)).x, texelFetch(l_geomAttrib_0, int(_142 + 1u)).x);
        uint _149 = _148.x;
        _154 = _149 & 65535u;
        _155 = _149 >> 16u;
        _156 = _148.y & 65535u;
        _157 = 24u;
    }
    bool _163 = _124 == 0u;
    uint _164;
    if (_163)
    {
        _164 = _157;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_127)
        {
            frontier_phi_9_10_ladder = _157 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _157 + 8u;
        }
        _164 = frontier_phi_9_10_ladder;
    }
    uvec4 _175 = texelFetch(l_geomAttrib_0, int((((_123 * _115) + 4u) + (_125 ? (_164 + 4u) : _164)) >> 2u));
    uint _176 = _175.x;
    uint _183 = (_123 * _117) + 12u;
    uint _204;
    uint _205;
    uint _206;
    uint _207;
    if (_128)
    {
        uvec4 _185 = texelFetch(l_geomAttrib_0, int(_183 >> 2u));
        uint _186 = _185.x;
        _204 = _186 & 255u;
        _205 = (_186 >> 8u) & 255u;
        _206 = (_186 >> 16u) & 255u;
        _207 = 20u;
    }
    else
    {
        uint _192 = _183 >> 2u;
        uvec2 _198 = uvec2(texelFetch(l_geomAttrib_0, int(_192)).x, texelFetch(l_geomAttrib_0, int(_192 + 1u)).x);
        uint _199 = _198.x;
        _204 = _199 & 65535u;
        _205 = _199 >> 16u;
        _206 = _198.y & 65535u;
        _207 = 24u;
    }
    uint _211;
    if (_163)
    {
        _211 = _207;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_127)
        {
            frontier_phi_16_17_ladder = _207 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _207 + 8u;
        }
        _211 = frontier_phi_16_17_ladder;
    }
    uvec4 _220 = texelFetch(l_geomAttrib_0, int((((_123 * _117) + 4u) + (_125 ? (_211 + 4u) : _211)) >> 2u));
    uint _221 = _220.x;
    uint _228 = (_123 * _118) + 12u;
    uint _249;
    uint _250;
    uint _251;
    uint _252;
    if (_128)
    {
        uvec4 _230 = texelFetch(l_geomAttrib_0, int(_228 >> 2u));
        uint _231 = _230.x;
        _249 = _231 & 255u;
        _250 = (_231 >> 8u) & 255u;
        _251 = (_231 >> 16u) & 255u;
        _252 = 20u;
    }
    else
    {
        uint _237 = _228 >> 2u;
        uvec2 _243 = uvec2(texelFetch(l_geomAttrib_0, int(_237)).x, texelFetch(l_geomAttrib_0, int(_237 + 1u)).x);
        uint _244 = _243.x;
        _249 = _244 & 65535u;
        _250 = _244 >> 16u;
        _251 = _243.y & 65535u;
        _252 = 24u;
    }
    uint _256;
    if (_163)
    {
        _256 = _252;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_127)
        {
            frontier_phi_23_24_ladder = _252 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _252 + 8u;
        }
        _256 = frontier_phi_23_24_ladder;
    }
    uvec4 _265 = texelFetch(l_geomAttrib_0, int((((_123 * _118) + 4u) + (_125 ? (_256 + 4u) : _256)) >> 2u));
    uint _266 = _265.x;
    float _274 = (1.0 - hit._m0.x) - hit._m0.y;
    float _299 = (((float(_154) * _274) + (-127.0)) + (float(_204) * hit._m0.x)) + (float(_249) * hit._m0.y);
    float _302 = (((float(_155) * _274) + (-127.0)) + (float(_205) * hit._m0.x)) + (float(_250) * hit._m0.y);
    float _305 = (((float(_156) * _274) + (-127.0)) + (float(_206) * hit._m0.x)) + (float(_251) * hit._m0.y);
    float _306 = _299 * 0.0078740157186985015869140625;
    float _308 = _302 * 0.0078740157186985015869140625;
    float _309 = _305 * 0.0078740157186985015869140625;
    float _310 = (((float(int(uint(int(_221 << 16u) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_176 << 16u) >> int(16u)))) * _274)) + (float(int(uint(int(_266 << 16u) >> int(16u)))) * hit._m0.y)) * 0.0078125;
    vec4 _336 = textureLod(sampler2DArray(P_ACParts_Marking_snp_0_Texture2DArray_0, SS_ClampLinear), vec3((cbTextureTilingScale._m0[0u].x * fract(_310)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * fract((((float(int(uint(int(_221) >> int(16u)))) * hit._m0.x) + (float(int(uint(int(_176) >> int(16u)))) * _274)) + (float(int(uint(int(_266) >> int(16u)))) * hit._m0.y)) * 0.00048828125)) + cbTextureTilingScale._m0[0u].w, floor(_310 + cbMtdParam._m0[9u].z)), 0.0);
    float _338 = _336.x;
    float _339 = _336.y;
    float _340 = _336.z;
    float _346 = inversesqrt(dot(vec3(_306, _308, _309), vec3(_306, _308, _309)));
    float _347 = _346 * _306;
    float _348 = _346 * _308;
    float _349 = _346 * _309;
    float _371 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _372 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _373 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _377 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _378 = _377 * gl_WorldRayDirectionEXT.x;
    float _379 = _377 * gl_WorldRayDirectionEXT.y;
    float _380 = _377 * gl_WorldRayDirectionEXT.z;
    float _381 = (-0.0) - _378;
    float _383 = (-0.0) - _379;
    float _384 = (-0.0) - _380;
    float _391 = float(gl_LaunchIDEXT.x);
    float _392 = float(gl_LaunchIDEXT.y);
    float _398 = float(gl_LaunchSizeEXT.x);
    float _399 = float(gl_LaunchSizeEXT.y);
    float _413 = fract(fract(sin(dot(vec2(_391 / _398, _392 / _399), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _426 = fract(fract(sin(dot(vec2((_391 + 128.0) / _398, (_392 + 128.0) / _399), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _427 = 1.0 - cbMtdParam._m0[9u].x;
    float _428 = _427 * _338;
    float _429 = _427 * _339;
    float _430 = _427 * _340;
    float _435 = cbMtdParam._m0[9u].x * (_338 + (-0.039999999105930328369140625));
    float _436 = cbMtdParam._m0[9u].x * (_339 + (-0.039999999105930328369140625));
    float _437 = cbMtdParam._m0[9u].x * (_340 + (-0.039999999105930328369140625));
    float _438 = _435 + 0.039999999105930328369140625;
    float _440 = _436 + 0.039999999105930328369140625;
    float _441 = _437 + 0.039999999105930328369140625;
    _58._m0 = 1u;
    uvec4 _451 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _452 = _451.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _452, _451.w, _452, vec3(_371, _372, _373), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _569;
    float _570;
    float _571;
    float _572;
    float _573;
    float _574;
    if (_58._m0 == 0u)
    {
        float _473 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_347, _348, _349));
        float _811 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
        float _476 = isnan(1.0) ? _811 : (isnan(_811) ? 1.0 : min(_811, 1.0));
        float _495 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[9u].y) * 0.949999988079071044921875);
        float _496 = _495 * _495;
        float _497 = g_sceneCB._m0[4u].x - _378;
        float _498 = g_sceneCB._m0[4u].y - _379;
        float _499 = g_sceneCB._m0[4u].z - _380;
        float _503 = inversesqrt(dot(vec3(_497, _498, _499), vec3(_497, _498, _499)));
        float _504 = _503 * _497;
        float _505 = _503 * _498;
        float _506 = _503 * _499;
        float _507 = dot(vec3(_347, _348, _349), vec3(g_sceneCB._m0[4u].xyz));
        float _822 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
        float _510 = isnan(1.0) ? _822 : (isnan(_822) ? 1.0 : min(_822, 1.0));
        float _511 = dot(vec3(_347, _348, _349), vec3(_381, _383, _384));
        float _833 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
        float _514 = isnan(1.0) ? _833 : (isnan(_833) ? 1.0 : min(_833, 1.0));
        float _515 = dot(vec3(_347, _348, _349), vec3(_504, _505, _506));
        float _844 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
        float _518 = isnan(1.0) ? _844 : (isnan(_844) ? 1.0 : min(_844, 1.0));
        float _519 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_504, _505, _506));
        float _855 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
        float _523 = _496 * _496;
        float _528 = ((_518 * _518) * (_523 + (-1.0))) + 1.0;
        float _537 = exp2(log2(1.0 - (isnan(1.0) ? _855 : (isnan(_855) ? 1.0 : min(_855, 1.0)))) * 5.0);
        float _548 = 1.0 - _496;
        float _560 = (0.5 / (((_514 * ((_510 * _548) + _496)) + 9.9999999392252902907785028219223e-09) + (((_514 * _548) + _496) * _510))) * _510;
        float _866 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
        float _562 = (isnan(1.0) ? _866 : (isnan(_866) ? 1.0 : min(_866, 1.0))) * (_523 / ((_528 * _528) * 3.141590118408203125));
        _569 = ((_428 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _476;
        _570 = ((_429 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _476;
        _571 = ((_430 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _476;
        _572 = (((_537 * (0.959999978542327880859375 - _435)) + _438) * g_sceneCB._m0[5u].x) * _562;
        _573 = (((_537 * (0.959999978542327880859375 - _436)) + _440) * g_sceneCB._m0[5u].y) * _562;
        _574 = (((_537 * (0.959999978542327880859375 - _437)) + _441) * g_sceneCB._m0[5u].z) * _562;
    }
    else
    {
        _569 = 0.0;
        _570 = 0.0;
        _571 = 0.0;
        _572 = 0.0;
        _573 = 0.0;
        _574 = 0.0;
    }
    bool _576 = abs(_348) < 0.89999997615814208984375;
    float _578 = float(_576);
    float _579 = _576 ? 0.0 : 1.0;
    float _582 = (_578 * _349) - (_579 * _348);
    float _583 = _579 * _347;
    float _585 = (-0.0) - (_347 * _578);
    float _589 = inversesqrt(dot(vec3(_582, _583, _585), vec3(_582, _583, _585)));
    float _590 = _582 * _589;
    float _591 = _583 * _589;
    float _592 = _589 * _585;
    float _595 = (_591 * _349) - (_592 * _348);
    float _598 = (_592 * _347) - (_590 * _349);
    float _601 = (_590 * _348) - (_591 * _347);
    float _603;
    float _611;
    float _602 = 0.0;
    uint _604 = 0u;
    float _608;
    bool _610;
    for (;;)
    {
        _608 = (float(_604) + _413) * 0.03125;
        _610 = _604 == 0u;
        float frontier_phi_30_pred;
        if (_610)
        {
            frontier_phi_30_pred = 0.0;
        }
        else
        {
            float _753;
            float _754;
            uint _756;
            _753 = 0.0;
            _754 = 0.5;
            _756 = _604;
            float _612;
            for (;;)
            {
                _612 = ((_756 & 1u) != 0u) ? (_754 + _753) : _753;
                uint _757 = _756 >> 1u;
                if (_757 == 0u)
                {
                    break;
                }
                else
                {
                    _753 = _612;
                    _754 *= 0.5;
                    _756 = _757;
                }
            }
            frontier_phi_30_pred = _612;
        }
        _611 = frontier_phi_30_pred;
        float _613 = _611 + _426;
        float _617 = sqrt(_608);
        float _618 = ((_613 > 1.0) ? (_613 + (-1.0)) : _613) * 6.283185482025146484375;
        float _621 = cos(_618) * _617;
        float _623 = sin(_618) * _617;
        float _625 = sqrt(1.0 - _608);
        float _638 = ((_625 * _347) + (_621 * _595)) + (_623 * _590);
        float _639 = ((_625 * _348) + (_621 * _598)) + (_623 * _591);
        float _640 = ((_625 * _349) + (_621 * _601)) + (_623 * _592);
        _57._m0 = 1u;
        uvec4 _644 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _645 = _644.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _645, _644.w, _645, vec3(_371, _372, _373), 9.9999997473787516355514526367188e-05, vec3(_638, _639, _640), 10000.0, 1);
        float _651 = dot(vec3(_347, _348, _349), vec3(_638, _639, _640));
        float _877 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        float _654 = isnan(1.0) ? _877 : (isnan(_877) ? 1.0 : min(_877, 1.0));
        _603 = ((float(_57._m0 == 0u) * _654) / (_654 * 0.3183098733425140380859375)) + _602;
        uint _605 = _604 + 1u;
        if (_605 == 32u)
        {
            break;
        }
        else
        {
            _602 = _603;
            _604 = _605;
            continue;
        }
    }
    float _662 = _603 * 0.009947183541953563690185546875;
    float _667 = dot(vec3(_378, _379, _380), vec3(_347, _348, _349)) * 2.0;
    vec4 _682 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_378 - (_667 * _347), _379 - (_667 * _348), _380 - (_667 * _349)), 4.0 - (cbMtdParam._m0[9u].y * 4.0));
    float _687 = dot(vec3(_381, _383, _384), vec3(_347, _348, _349));
    float _888 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _697 = exp2(log2(1.0 - (isnan(1.0) ? _888 : (isnan(_888) ? 1.0 : min(_888, 1.0)))) * 5.0);
    vec4 _709 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_347, _348, _349), 0.0);
    float _720 = (_572 + _569) + (((_709.x * _428) + (((_697 * (0.959999978542327880859375 - _435)) + _438) * _682.x)) * _662);
    float _724 = (_573 + _570) + (((_709.y * _429) + (((_697 * (0.959999978542327880859375 - _436)) + _440) * _682.y)) * _662);
    float _728 = (_574 + _571) + (((_709.z * _430) + (((_697 * (0.959999978542327880859375 - _437)) + _441) * _682.z)) * _662);
    float _899 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _910 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _921 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    bool _736 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _747;
    _747.x = _736 ? ((_299 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _899 : (isnan(_899) ? 1.0 : min(_899, 1.0)));
    _747.y = _736 ? ((_302 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0)));
    _747.z = _736 ? ((_305 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _921 : (isnan(_921) ? 1.0 : min(_921, 1.0)));
    payload._m0 = _747;
}


