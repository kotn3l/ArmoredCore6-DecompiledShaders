#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D C_AMSN_Damege_snp_0_Texture2D_7;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _1543;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _167 & 65535u;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _168 >> 16u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        _173 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
        _176 = frontier_phi_3_2_ladder_1;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    uint _184 = _132.w;
    bool _186 = _183 || (_184 == 0u);
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    uint _236 = _180.y;
    bool _237 = _182 == 0u;
    uint _240 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _249 = texelFetch(l_geomAttrib_1, int((((_236 * _173) + 4u) + (_183 ? (_240 + 4u) : _240)) >> 2u));
    uint _250 = _249.x;
    float _254 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_250) >> int(16u))));
    uint _256 = _181 * _175;
    uint _257 = _256 + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_186)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 16u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 20u;
    }
    uvec4 _287 = texelFetch(l_geomAttrib_0, int((_281 + _256) >> 2u));
    uint _288 = _287.x;
    uint _301 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _308 = texelFetch(l_geomAttrib_1, int((((_236 * _175) + 4u) + (_183 ? (_301 + 4u) : _301)) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _315 = _181 * _176;
    uint _316 = _315 + 12u;
    uint _337;
    uint _338;
    uint _339;
    uint _340;
    if (_186)
    {
        uvec4 _318 = texelFetch(l_geomAttrib_0, int(_316 >> 2u));
        uint _319 = _318.x;
        _337 = _319 & 255u;
        _338 = (_319 >> 8u) & 255u;
        _339 = (_319 >> 16u) & 255u;
        _340 = 16u;
    }
    else
    {
        uint _325 = _316 >> 2u;
        uvec2 _331 = uvec2(texelFetch(l_geomAttrib_0, int(_325)).x, texelFetch(l_geomAttrib_0, int(_325 + 1u)).x);
        uint _332 = _331.x;
        _337 = _332 & 65535u;
        _338 = _332 >> 16u;
        _339 = _331.y & 65535u;
        _340 = 20u;
    }
    uvec4 _346 = texelFetch(l_geomAttrib_0, int((_340 + _315) >> 2u));
    uint _347 = _346.x;
    uint _360 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _367 = texelFetch(l_geomAttrib_1, int((((_236 * _176) + 4u) + (_183 ? (_360 + 4u) : _360)) >> 2u));
    uint _368 = _367.x;
    float _372 = float(int(uint(int(_368 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_368) >> int(16u))));
    bool _375 = _132.z == 0u;
    float _411;
    float _412;
    float _413;
    if (_375)
    {
        uint _378 = _173 * 3u;
        uvec3 _387 = uvec3(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_378 + 2u)).x);
        _411 = uintBitsToFloat(_387.x);
        _412 = uintBitsToFloat(_387.y);
        _413 = uintBitsToFloat(_387.z);
    }
    else
    {
        uint _395 = _173 * 2u;
        uvec2 _401 = uvec2(texelFetch(l_geomPositionBuffer, int(_395)).x, texelFetch(l_geomPositionBuffer, int(_395 + 1u)).x);
        uint _402 = _401.x;
        _411 = unpackHalf2x16(_402).x;
        _412 = unpackHalf2x16(_402 >> 16u).x;
        _413 = unpackHalf2x16(_401.y).x;
    }
    float _449;
    float _450;
    float _451;
    if (_375)
    {
        uint _416 = _175 * 3u;
        uvec3 _425 = uvec3(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_416 + 2u)).x);
        _449 = uintBitsToFloat(_425.x);
        _450 = uintBitsToFloat(_425.y);
        _451 = uintBitsToFloat(_425.z);
    }
    else
    {
        uint _433 = _175 * 2u;
        uvec2 _439 = uvec2(texelFetch(l_geomPositionBuffer, int(_433)).x, texelFetch(l_geomPositionBuffer, int(_433 + 1u)).x);
        uint _440 = _439.x;
        _449 = unpackHalf2x16(_440).x;
        _450 = unpackHalf2x16(_440 >> 16u).x;
        _451 = unpackHalf2x16(_439.y).x;
    }
    float _487;
    float _488;
    float _489;
    if (_375)
    {
        uint _454 = _176 * 3u;
        uvec3 _463 = uvec3(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_454 + 2u)).x);
        _487 = uintBitsToFloat(_463.x);
        _488 = uintBitsToFloat(_463.y);
        _489 = uintBitsToFloat(_463.z);
    }
    else
    {
        uint _471 = _176 * 2u;
        uvec2 _477 = uvec2(texelFetch(l_geomPositionBuffer, int(_471)).x, texelFetch(l_geomPositionBuffer, int(_471 + 1u)).x);
        uint _478 = _477.x;
        _487 = unpackHalf2x16(_478).x;
        _488 = unpackHalf2x16(_478 >> 16u).x;
        _489 = unpackHalf2x16(_477.y).x;
    }
    float _492 = (1.0 - hit._m0.x) - hit._m0.y;
    float _526 = (_313 - _254) * 0.00048828125;
    float _528 = (_314 - _255) * 0.00048828125;
    float _531 = (_372 - _254) * 0.00048828125;
    float _532 = (_373 - _255) * 0.00048828125;
    float _554 = _449 - _411;
    float _555 = _450 - _412;
    float _556 = _451 - _413;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = _487 - _411;
    float _567 = _488 - _412;
    float _568 = _489 - _413;
    float _571 = fma(_568, gl_ObjectToWorldEXT[2u].x, fma(_567, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _566));
    float _574 = fma(_568, gl_ObjectToWorldEXT[2u].y, fma(_567, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _566));
    float _577 = fma(_568, gl_ObjectToWorldEXT[2u].z, fma(_567, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _566));
    float _578 = (((_313 * hit._m0.x) + (_254 * _492)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _579 = (((_314 * hit._m0.x) + (_255 * _492)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _583 = (((float(_212) * _492) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _586 = (((float(_213) * _492) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _589 = (((float(_214) * _492) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _590 = _583 * 0.0078740157186985015869140625;
    float _592 = _586 * 0.0078740157186985015869140625;
    float _593 = _589 * 0.0078740157186985015869140625;
    float _606 = ((((float(_224 & 255u) * _492) + (-127.0)) + (float(_288 & 255u) * hit._m0.x)) + (float(_347 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float((_224 >> 8u) & 255u) * _492) + (-127.0)) + (float((_288 >> 8u) & 255u) * hit._m0.x)) + (float((_347 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _608 = ((((float((_224 >> 16u) & 255u) * _492) + (-127.0)) + (float((_288 >> 16u) & 255u) * hit._m0.x)) + (float((_347 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((((float(_224 >> 24u) * _492) + (-127.0)) + (float(_288 >> 24u) * hit._m0.x)) + (float(_347 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _619 = ((_607 * _593) - (_608 * _592)) * _609;
    float _620 = ((_608 * _590) - (_606 * _593)) * _609;
    float _621 = ((_606 * _592) - (_607 * _590)) * _609;
    float _625 = inversesqrt(dot(vec3(_619, _620, _621), vec3(_619, _620, _621)));
    uvec2 _644 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_0, int(0u)));
    bool _649 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _702;
    if (_649)
    {
        float _660 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _666 = (_577 * _562) - (_574 * _565);
        float _669 = (_571 * _565) - (_577 * _559);
        float _672 = (_574 * _559) - (_571 * _562);
        float _699 = ((log2((((float(_644.y) * 0.5) * float(_644.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_669 * _669) + (_672 * _672)) + (_666 * _666)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_660 * gl_WorldRayDirectionEXT.x, _660 * gl_WorldRayDirectionEXT.y, _660 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _702 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    }
    else
    {
        _702 = 0.0;
    }
    vec4 _706 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _578) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _579) + cbTextureTilingScale._m0[0u].w), _702);
    float _708 = _706.x;
    float _709 = _706.y;
    float _710 = _706.z;
    uvec2 _722 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_3, int(0u)));
    float _773;
    if (_649)
    {
        float _733 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _739 = (_577 * _562) - (_574 * _565);
        float _742 = (_571 * _565) - (_577 * _559);
        float _745 = (_574 * _559) - (_571 * _562);
        float _771 = ((log2((((float(_722.y) * 0.5) * float(_722.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_742 * _742) + (_745 * _745)) + (_739 * _739)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_733 * gl_WorldRayDirectionEXT.x, _733 * gl_WorldRayDirectionEXT.y, _733 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _773 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    }
    else
    {
        _773 = 0.0;
    }
    vec4 _775 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _578) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _579) + cbTextureTilingScale._m0[3u].w), _773);
    float _780 = _775.w;
    float _786 = (((cbMatDynParam._m0[17u].x * 10.0) + (-1.0)) + _780) * _780;
    float _819;
    if (_649)
    {
        float _803 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _811 = log2(0.0);
        float _817 = ((_811 * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_803 * gl_WorldRayDirectionEXT.x, _803 * gl_WorldRayDirectionEXT.y, _803 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _819 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    }
    else
    {
        _819 = 0.0;
    }
    vec4 _823 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_7, SS_ClampLinear), vec2((_786 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_786 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w), _819);
    float _825 = _823.x;
    float _826 = _823.y;
    float _827 = _823.z;
    float _834 = ((_825 - _708) * cbMatDynParam._m0[17u].x) + _708;
    float _835 = ((_826 - _709) * cbMatDynParam._m0[17u].x) + _709;
    float _836 = ((_827 - _710) * cbMatDynParam._m0[17u].x) + _710;
    float _843 = ((_775.x - _834) * cbMatDynParam._m0[17u].x) + _834;
    float _844 = ((_775.y - _835) * cbMatDynParam._m0[17u].x) + _835;
    float _845 = ((_775.z - _836) * cbMatDynParam._m0[17u].x) + _836;
    uvec2 _861 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_2, int(0u)));
    float _912;
    if (_649)
    {
        float _872 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _878 = (_577 * _562) - (_574 * _565);
        float _881 = (_571 * _565) - (_577 * _559);
        float _884 = (_574 * _559) - (_571 * _562);
        float _910 = ((log2((((float(_861.y) * 0.5) * float(_861.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_881 * _881) + (_884 * _884)) + (_878 * _878)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_872 * gl_WorldRayDirectionEXT.x, _872 * gl_WorldRayDirectionEXT.y, _872 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _912 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    }
    else
    {
        _912 = 0.0;
    }
    vec4 _915 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _578) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _579) + cbTextureTilingScale._m0[2u].w), _912);
    float _917 = _915.x;
    uvec2 _930 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_4, int(0u)));
    float _981;
    if (_649)
    {
        float _941 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _947 = (_577 * _562) - (_574 * _565);
        float _950 = (_571 * _565) - (_577 * _559);
        float _953 = (_574 * _559) - (_571 * _562);
        float _979 = ((log2((((float(_930.y) * 0.5) * float(_930.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_950 * _950) + (_953 * _953)) + (_947 * _947)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_941 * gl_WorldRayDirectionEXT.x, _941 * gl_WorldRayDirectionEXT.y, _941 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _981 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    }
    else
    {
        _981 = 0.0;
    }
    float _988 = (_917 + cbMtdParam._m0[9u].x) + ((textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _578) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _579) + cbTextureTilingScale._m0[4u].w), _981).x - _917) * cbMatDynParam._m0[17u].x);
    uvec2 _1000 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_1, int(0u)));
    float _1051;
    if (_649)
    {
        float _1011 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1017 = (_577 * _562) - (_574 * _565);
        float _1020 = (_571 * _565) - (_577 * _559);
        float _1023 = (_574 * _559) - (_571 * _562);
        float _1049 = ((log2((((float(_1000.y) * 0.5) * float(_1000.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1020 * _1020) + (_1023 * _1023)) + (_1017 * _1017)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1011 * gl_WorldRayDirectionEXT.x, _1011 * gl_WorldRayDirectionEXT.y, _1011 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1051 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    }
    else
    {
        _1051 = 0.0;
    }
    vec4 _1054 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _578) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _579) + cbTextureTilingScale._m0[1u].w), _1051);
    float _1056 = _1054.x;
    float _1057 = _1054.y;
    float _1058 = _1054.z;
    uvec2 _1071 = uvec2(textureSize(C_AMSN_Damege_snp_0_Texture2D_5, int(0u)));
    float _1075 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1076 = _1075 * gl_WorldRayDirectionEXT.x;
    float _1077 = _1075 * gl_WorldRayDirectionEXT.y;
    float _1078 = _1075 * gl_WorldRayDirectionEXT.z;
    float _1122;
    if (_649)
    {
        float _1088 = (_577 * _562) - (_574 * _565);
        float _1091 = (_571 * _565) - (_577 * _559);
        float _1094 = (_574 * _559) - (_571 * _562);
        float _1120 = ((log2((((float(_1071.y) * 0.5) * float(_1071.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1091 * _1091) + (_1094 * _1094)) + (_1088 * _1088)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1076, _1077, _1078), vec3(_590, _592, _593))));
        _1122 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    }
    else
    {
        _1122 = 0.0;
    }
    vec4 _1124 = textureLod(sampler2D(C_AMSN_Damege_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _578) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _579) + cbTextureTilingScale._m0[5u].w), _1122);
    float _1137 = ((_1124.z - _1058) * cbMatDynParam._m0[17u].x) + _1058;
    float _1140 = ((((_1124.x - _1056) * cbMatDynParam._m0[17u].x) + _1056) * 2.0) + (-1.0);
    float _1141 = ((((_1124.y - _1057) * cbMatDynParam._m0[17u].x) + _1057) * 2.0) + (-1.0);
    float _1142 = dot(vec2(_1140, _1141), vec2(_1140, _1141));
    float _1646 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _1147 = sqrt(1.0 - (isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0))));
    float _1154 = fma(_1147, _590, fma(_1141, _606, (_625 * _619) * _1140));
    float _1157 = fma(_1147, _592, fma(_1141, _607, (_625 * _620) * _1140));
    float _1160 = fma(_1147, _593, fma(_1141, _608, (_625 * _621) * _1140));
    float _1164 = inversesqrt(dot(vec3(_1154, _1157, _1160), vec3(_1154, _1157, _1160)));
    float _1165 = _1164 * _1154;
    float _1166 = _1164 * _1157;
    float _1167 = _1164 * _1160;
    float _1179 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1180 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1181 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1182 = (-0.0) - _1076;
    float _1184 = (-0.0) - _1077;
    float _1185 = (-0.0) - _1078;
    float _1191 = float(gl_LaunchIDEXT.x);
    float _1192 = float(gl_LaunchIDEXT.y);
    float _1195 = float(gl_LaunchSizeEXT.x);
    float _1209 = fract(fract(sin(dot(vec2(_1191 / _1195, _1192 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1222 = fract(fract(sin(dot(vec2((_1191 + 128.0) / _1195, (_1192 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1223 = 1.0 - _988;
    float _1224 = _1223 * _843;
    float _1225 = _1223 * _844;
    float _1226 = _1223 * _845;
    float _1231 = _988 * (_843 + (-0.039999999105930328369140625));
    float _1232 = _988 * (_844 + (-0.039999999105930328369140625));
    float _1233 = _988 * (_845 + (-0.039999999105930328369140625));
    float _1234 = _1231 + 0.039999999105930328369140625;
    float _1236 = _1232 + 0.039999999105930328369140625;
    float _1237 = _1233 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1247 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1248 = _1247.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1248, _1247.w, _1248, vec3(_1179, _1180, _1181), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1362;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    if (_74._m0 == 0u)
    {
        float _1268 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1165, _1166, _1167));
        float _1657 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1271 = isnan(1.0) ? _1657 : (isnan(_1657) ? 1.0 : min(_1657, 1.0));
        float _1290 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1137) * 0.949999988079071044921875);
        float _1291 = _1290 * _1290;
        float _1292 = g_sceneCB._m0[4u].x - _1076;
        float _1293 = g_sceneCB._m0[4u].y - _1077;
        float _1294 = g_sceneCB._m0[4u].z - _1078;
        float _1298 = inversesqrt(dot(vec3(_1292, _1293, _1294), vec3(_1292, _1293, _1294)));
        float _1299 = _1298 * _1292;
        float _1300 = _1298 * _1293;
        float _1301 = _1298 * _1294;
        float _1302 = dot(vec3(_1165, _1166, _1167), vec3(g_sceneCB._m0[4u].xyz));
        float _1668 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1305 = isnan(1.0) ? _1668 : (isnan(_1668) ? 1.0 : min(_1668, 1.0));
        float _1306 = dot(vec3(_1165, _1166, _1167), vec3(_1182, _1184, _1185));
        float _1679 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1309 = isnan(1.0) ? _1679 : (isnan(_1679) ? 1.0 : min(_1679, 1.0));
        float _1310 = dot(vec3(_1165, _1166, _1167), vec3(_1299, _1300, _1301));
        float _1690 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1313 = isnan(1.0) ? _1690 : (isnan(_1690) ? 1.0 : min(_1690, 1.0));
        float _1314 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1299, _1300, _1301));
        float _1701 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = _1291 * _1291;
        float _1322 = ((_1313 * _1313) * (_1318 + (-1.0))) + 1.0;
        float _1331 = exp2(log2(1.0 - (isnan(1.0) ? _1701 : (isnan(_1701) ? 1.0 : min(_1701, 1.0)))) * 5.0);
        float _1342 = 1.0 - _1291;
        float _1353 = (0.5 / (((_1309 * ((_1305 * _1342) + _1291)) + 9.9999999392252902907785028219223e-09) + (((_1309 * _1342) + _1291) * _1305))) * _1305;
        float _1712 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1355 = (isnan(1.0) ? _1712 : (isnan(_1712) ? 1.0 : min(_1712, 1.0))) * (_1318 / ((_1322 * _1322) * 3.141590118408203125));
        _1362 = ((_1224 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1271;
        _1363 = ((_1225 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1271;
        _1364 = ((_1226 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1271;
        _1365 = (((_1331 * (0.959999978542327880859375 - _1231)) + _1234) * g_sceneCB._m0[5u].x) * _1355;
        _1366 = (((_1331 * (0.959999978542327880859375 - _1232)) + _1236) * g_sceneCB._m0[5u].y) * _1355;
        _1367 = (((_1331 * (0.959999978542327880859375 - _1233)) + _1237) * g_sceneCB._m0[5u].z) * _1355;
    }
    else
    {
        _1362 = 0.0;
        _1363 = 0.0;
        _1364 = 0.0;
        _1365 = 0.0;
        _1366 = 0.0;
        _1367 = 0.0;
    }
    bool _1369 = abs(_1166) < 0.89999997615814208984375;
    float _1371 = float(_1369);
    float _1372 = _1369 ? 0.0 : 1.0;
    float _1375 = (_1371 * _1167) - (_1372 * _1166);
    float _1376 = _1372 * _1165;
    float _1378 = (-0.0) - (_1165 * _1371);
    float _1382 = inversesqrt(dot(vec3(_1375, _1376, _1378), vec3(_1375, _1376, _1378)));
    float _1383 = _1375 * _1382;
    float _1384 = _1376 * _1382;
    float _1385 = _1382 * _1378;
    float _1388 = (_1384 * _1167) - (_1385 * _1166);
    float _1391 = (_1385 * _1165) - (_1383 * _1167);
    float _1394 = (_1383 * _1166) - (_1384 * _1165);
    float _1396;
    float _1404;
    float _1395 = 0.0;
    uint _1397 = 0u;
    float _1401;
    bool _1403;
    for (;;)
    {
        _1401 = (float(_1397) + _1209) * 0.03125;
        _1403 = _1397 == 0u;
        float frontier_phi_41_pred;
        if (_1403)
        {
            frontier_phi_41_pred = 0.0;
        }
        else
        {
            float _1548;
            float _1549;
            uint _1551;
            _1548 = 0.0;
            _1549 = 0.5;
            _1551 = _1397;
            float _1405;
            for (;;)
            {
                _1405 = ((_1551 & 1u) != 0u) ? (_1549 + _1548) : _1548;
                uint _1552 = _1551 >> 1u;
                if (_1552 == 0u)
                {
                    break;
                }
                else
                {
                    _1548 = _1405;
                    _1549 *= 0.5;
                    _1551 = _1552;
                }
            }
            frontier_phi_41_pred = _1405;
        }
        _1404 = frontier_phi_41_pred;
        float _1406 = _1404 + _1222;
        float _1410 = sqrt(_1401);
        float _1411 = ((_1406 > 1.0) ? (_1406 + (-1.0)) : _1406) * 6.283185482025146484375;
        float _1414 = cos(_1411) * _1410;
        float _1416 = sin(_1411) * _1410;
        float _1418 = sqrt(1.0 - _1401);
        float _1431 = ((_1418 * _1165) + (_1414 * _1388)) + (_1416 * _1383);
        float _1432 = ((_1418 * _1166) + (_1414 * _1391)) + (_1416 * _1384);
        float _1433 = ((_1418 * _1167) + (_1414 * _1394)) + (_1416 * _1385);
        _73._m0 = 1u;
        uvec4 _1437 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1438 = _1437.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1438, _1437.w, _1438, vec3(_1179, _1180, _1181), 9.9999997473787516355514526367188e-05, vec3(_1431, _1432, _1433), 10000.0, 1);
        float _1444 = dot(vec3(_1165, _1166, _1167), vec3(_1431, _1432, _1433));
        float _1723 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1447 = isnan(1.0) ? _1723 : (isnan(_1723) ? 1.0 : min(_1723, 1.0));
        _1396 = ((float(_73._m0 == 0u) * _1447) / (_1447 * 0.3183098733425140380859375)) + _1395;
        uint _1398 = _1397 + 1u;
        if (_1398 == 32u)
        {
            break;
        }
        else
        {
            _1395 = _1396;
            _1397 = _1398;
            continue;
        }
    }
    float _1455 = _1396 * 0.009947183541953563690185546875;
    float _1460 = dot(vec3(_1076, _1077, _1078), vec3(_1165, _1166, _1167)) * 2.0;
    vec4 _1474 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1076 - (_1460 * _1165), _1077 - (_1460 * _1166), _1078 - (_1460 * _1167)), 4.0 - (_1137 * 4.0));
    float _1479 = dot(vec3(_1182, _1184, _1185), vec3(_1165, _1166, _1167));
    float _1734 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
    float _1489 = exp2(log2(1.0 - (isnan(1.0) ? _1734 : (isnan(_1734) ? 1.0 : min(_1734, 1.0)))) * 5.0);
    vec4 _1501 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1165, _1166, _1167), 0.0);
    float _1513 = ((_1362 + (cbMatDynParam._m0[17u].y * _825)) + _1365) + (((_1501.x * _1224) + (((_1489 * (0.959999978542327880859375 - _1231)) + _1234) * _1474.x)) * _1455);
    float _1518 = ((_1363 + (cbMatDynParam._m0[17u].y * _826)) + _1366) + (((_1501.y * _1225) + (((_1489 * (0.959999978542327880859375 - _1232)) + _1236) * _1474.y)) * _1455);
    float _1523 = ((_1364 + (cbMatDynParam._m0[17u].y * _827)) + _1367) + (((_1501.z * _1226) + (((_1489 * (0.959999978542327880859375 - _1233)) + _1237) * _1474.z)) * _1455);
    float _1745 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1756 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1767 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    bool _1531 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1542;
    _1542.x = _1531 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1745 : (isnan(_1745) ? 1.0 : min(_1745, 1.0)));
    _1542.y = _1531 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1756 : (isnan(_1756) ? 1.0 : min(_1756, 1.0)));
    _1542.z = _1531 ? ((_589 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1767 : (isnan(_1767) ? 1.0 : min(_1767, 1.0)));
    payload._m0 = _1542;
}


