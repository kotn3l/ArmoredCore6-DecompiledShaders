#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _1020;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _158;
    uint _160;
    uint _161;
    if (_118.x == 0u)
    {
        uint _126 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _135 = uvec3(texelFetch(l_geomIndexBuffer, int(_126)).x, texelFetch(l_geomIndexBuffer, int(_126 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_126 + 2u)).x);
        _158 = _135.x;
        _160 = _135.y;
        _161 = _135.z;
    }
    else
    {
        uint _139 = uint(gl_PrimitiveID) * 6u;
        uint _141 = _139 & 4294967292u;
        uint _144 = (_119 + _141) >> 2u;
        uvec2 _151 = uvec2(texelFetch(l_geomIndexBuffer, int(_144)).x, texelFetch(l_geomIndexBuffer, int(_144 + 1u)).x);
        uint _152 = _151.x;
        uint _153 = _151.y;
        uint _155 = _152 >> 16u;
        uint _156 = _153 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_141 == _139)
        {
            frontier_phi_3_2_ladder = _156;
            frontier_phi_3_2_ladder_1 = _155;
            frontier_phi_3_2_ladder_2 = _152 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _153 >> 16u;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _155;
        }
        _158 = frontier_phi_3_2_ladder_2;
        _160 = frontier_phi_3_2_ladder_1;
        _161 = frontier_phi_3_2_ladder;
    }
    uvec4 _165 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _166 = _165.x;
    uint _167 = _165.z;
    bool _168 = _167 != 0u;
    bool _170 = _118.w == 0u;
    bool _171 = _168 || _170;
    uint _173 = (_166 * _158) + 12u;
    uint _197;
    uint _198;
    uint _199;
    uint _200;
    if (_171)
    {
        uvec4 _176 = texelFetch(l_geomAttrib_0, int(_173 >> 2u));
        uint _177 = _176.x;
        _197 = _177 & 255u;
        _198 = (_177 >> 8u) & 255u;
        _199 = (_177 >> 16u) & 255u;
        _200 = 20u;
    }
    else
    {
        uint _185 = _173 >> 2u;
        uvec2 _191 = uvec2(texelFetch(l_geomAttrib_0, int(_185)).x, texelFetch(l_geomAttrib_0, int(_185 + 1u)).x);
        uint _192 = _191.x;
        _197 = _192 & 65535u;
        _198 = _192 >> 16u;
        _199 = _191.y & 65535u;
        _200 = 24u;
    }
    bool _206 = _167 == 0u;
    uint _207;
    if (_206)
    {
        _207 = _200;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_170)
        {
            frontier_phi_9_10_ladder = _200 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _200 + 8u;
        }
        _207 = frontier_phi_9_10_ladder;
    }
    uvec4 _218 = texelFetch(l_geomAttrib_0, int((((_166 * _158) + 4u) + (_168 ? (_207 + 4u) : _207)) >> 2u));
    uint _219 = _218.x;
    float _223 = float(int(uint(int(_219 << 16u) >> int(16u))));
    float _224 = float(int(uint(int(_219) >> int(16u))));
    uint _226 = (_166 * _160) + 12u;
    uint _247;
    uint _248;
    uint _249;
    uint _250;
    if (_171)
    {
        uvec4 _228 = texelFetch(l_geomAttrib_0, int(_226 >> 2u));
        uint _229 = _228.x;
        _247 = _229 & 255u;
        _248 = (_229 >> 8u) & 255u;
        _249 = (_229 >> 16u) & 255u;
        _250 = 20u;
    }
    else
    {
        uint _235 = _226 >> 2u;
        uvec2 _241 = uvec2(texelFetch(l_geomAttrib_0, int(_235)).x, texelFetch(l_geomAttrib_0, int(_235 + 1u)).x);
        uint _242 = _241.x;
        _247 = _242 & 65535u;
        _248 = _242 >> 16u;
        _249 = _241.y & 65535u;
        _250 = 24u;
    }
    uint _254;
    if (_206)
    {
        _254 = _250;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_170)
        {
            frontier_phi_16_17_ladder = _250 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _250 + 8u;
        }
        _254 = frontier_phi_16_17_ladder;
    }
    uvec4 _263 = texelFetch(l_geomAttrib_0, int((((_166 * _160) + 4u) + (_168 ? (_254 + 4u) : _254)) >> 2u));
    uint _264 = _263.x;
    float _268 = float(int(uint(int(_264 << 16u) >> int(16u))));
    float _269 = float(int(uint(int(_264) >> int(16u))));
    uint _271 = (_166 * _161) + 12u;
    uint _292;
    uint _293;
    uint _294;
    uint _295;
    if (_171)
    {
        uvec4 _273 = texelFetch(l_geomAttrib_0, int(_271 >> 2u));
        uint _274 = _273.x;
        _292 = _274 & 255u;
        _293 = (_274 >> 8u) & 255u;
        _294 = (_274 >> 16u) & 255u;
        _295 = 20u;
    }
    else
    {
        uint _280 = _271 >> 2u;
        uvec2 _286 = uvec2(texelFetch(l_geomAttrib_0, int(_280)).x, texelFetch(l_geomAttrib_0, int(_280 + 1u)).x);
        uint _287 = _286.x;
        _292 = _287 & 65535u;
        _293 = _287 >> 16u;
        _294 = _286.y & 65535u;
        _295 = 24u;
    }
    uint _299;
    if (_206)
    {
        _299 = _295;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_170)
        {
            frontier_phi_23_24_ladder = _295 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _295 + 8u;
        }
        _299 = frontier_phi_23_24_ladder;
    }
    uvec4 _308 = texelFetch(l_geomAttrib_0, int((((_166 * _161) + 4u) + (_168 ? (_299 + 4u) : _299)) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    bool _316 = _118.z == 0u;
    float _352;
    float _353;
    float _354;
    if (_316)
    {
        uint _319 = _158 * 3u;
        uvec3 _328 = uvec3(texelFetch(l_geomPositionBuffer, int(_319)).x, texelFetch(l_geomPositionBuffer, int(_319 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_319 + 2u)).x);
        _352 = uintBitsToFloat(_328.x);
        _353 = uintBitsToFloat(_328.y);
        _354 = uintBitsToFloat(_328.z);
    }
    else
    {
        uint _336 = _158 * 2u;
        uvec2 _342 = uvec2(texelFetch(l_geomPositionBuffer, int(_336)).x, texelFetch(l_geomPositionBuffer, int(_336 + 1u)).x);
        uint _343 = _342.x;
        _352 = unpackHalf2x16(_343).x;
        _353 = unpackHalf2x16(_343 >> 16u).x;
        _354 = unpackHalf2x16(_342.y).x;
    }
    float _390;
    float _391;
    float _392;
    if (_316)
    {
        uint _357 = _160 * 3u;
        uvec3 _366 = uvec3(texelFetch(l_geomPositionBuffer, int(_357)).x, texelFetch(l_geomPositionBuffer, int(_357 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_357 + 2u)).x);
        _390 = uintBitsToFloat(_366.x);
        _391 = uintBitsToFloat(_366.y);
        _392 = uintBitsToFloat(_366.z);
    }
    else
    {
        uint _374 = _160 * 2u;
        uvec2 _380 = uvec2(texelFetch(l_geomPositionBuffer, int(_374)).x, texelFetch(l_geomPositionBuffer, int(_374 + 1u)).x);
        uint _381 = _380.x;
        _390 = unpackHalf2x16(_381).x;
        _391 = unpackHalf2x16(_381 >> 16u).x;
        _392 = unpackHalf2x16(_380.y).x;
    }
    float _428;
    float _429;
    float _430;
    if (_316)
    {
        uint _395 = _161 * 3u;
        uvec3 _404 = uvec3(texelFetch(l_geomPositionBuffer, int(_395)).x, texelFetch(l_geomPositionBuffer, int(_395 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_395 + 2u)).x);
        _428 = uintBitsToFloat(_404.x);
        _429 = uintBitsToFloat(_404.y);
        _430 = uintBitsToFloat(_404.z);
    }
    else
    {
        uint _412 = _161 * 2u;
        uvec2 _418 = uvec2(texelFetch(l_geomPositionBuffer, int(_412)).x, texelFetch(l_geomPositionBuffer, int(_412 + 1u)).x);
        uint _419 = _418.x;
        _428 = unpackHalf2x16(_419).x;
        _429 = unpackHalf2x16(_419 >> 16u).x;
        _430 = unpackHalf2x16(_418.y).x;
    }
    float _433 = (1.0 - hit._m0.x) - hit._m0.y;
    float _455 = (_268 - _223) * 0.00048828125;
    float _457 = (_269 - _224) * 0.00048828125;
    float _460 = (_313 - _223) * 0.00048828125;
    float _461 = (_314 - _224) * 0.00048828125;
    float _483 = _390 - _352;
    float _484 = _391 - _353;
    float _485 = _392 - _354;
    float _488 = fma(_485, gl_ObjectToWorldEXT[2u].x, fma(_484, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _483));
    float _491 = fma(_485, gl_ObjectToWorldEXT[2u].y, fma(_484, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _483));
    float _494 = fma(_485, gl_ObjectToWorldEXT[2u].z, fma(_484, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _483));
    float _495 = _428 - _352;
    float _496 = _429 - _353;
    float _497 = _430 - _354;
    float _500 = fma(_497, gl_ObjectToWorldEXT[2u].x, fma(_496, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _495));
    float _503 = fma(_497, gl_ObjectToWorldEXT[2u].y, fma(_496, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _495));
    float _506 = fma(_497, gl_ObjectToWorldEXT[2u].z, fma(_496, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _495));
    float _507 = (((_268 * hit._m0.x) + (_223 * _433)) + (_313 * hit._m0.y)) * 0.00048828125;
    float _508 = (((_269 * hit._m0.x) + (_224 * _433)) + (_314 * hit._m0.y)) * 0.00048828125;
    float _512 = (((float(_197) * _433) + (-127.0)) + (float(_247) * hit._m0.x)) + (float(_292) * hit._m0.y);
    float _515 = (((float(_198) * _433) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _518 = (((float(_199) * _433) + (-127.0)) + (float(_249) * hit._m0.x)) + (float(_294) * hit._m0.y);
    float _519 = _512 * 0.0078740157186985015869140625;
    float _521 = _515 * 0.0078740157186985015869140625;
    float _522 = _518 * 0.0078740157186985015869140625;
    uvec2 _540 = uvec2(textureSize(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, int(0u)));
    bool _545 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _598;
    if (_545)
    {
        float _556 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _562 = (_506 * _491) - (_503 * _494);
        float _565 = (_500 * _494) - (_506 * _488);
        float _568 = (_503 * _488) - (_500 * _491);
        float _595 = ((log2((((float(_540.y) * 0.5) * float(_540.x)) * abs((_461 * _455) - (_460 * _457))) / (sqrt(((_565 * _565) + (_568 * _568)) + (_562 * _562)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_556 * gl_WorldRayDirectionEXT.x, _556 * gl_WorldRayDirectionEXT.y, _556 * gl_WorldRayDirectionEXT.z), vec3(_519, _521, _522))));
        _598 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    }
    else
    {
        _598 = 0.0;
    }
    vec4 _602 = textureLod(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _507) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _508) + cbTextureTilingScale._m0[0u].w), _598);
    float _607 = _602.x * cbMtdParam._m0[9u].x;
    float _608 = _602.y * cbMtdParam._m0[9u].y;
    float _609 = _602.z * cbMtdParam._m0[9u].z;
    uvec2 _631 = uvec2(textureSize(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1, int(0u)));
    float _635 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _636 = _635 * gl_WorldRayDirectionEXT.x;
    float _637 = _635 * gl_WorldRayDirectionEXT.y;
    float _638 = _635 * gl_WorldRayDirectionEXT.z;
    float _682;
    if (_545)
    {
        float _648 = (_506 * _491) - (_503 * _494);
        float _651 = (_500 * _494) - (_506 * _488);
        float _654 = (_503 * _488) - (_500 * _491);
        float _680 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_461 * _455) - (_460 * _457))) / (sqrt(((_651 * _651) + (_654 * _654)) + (_648 * _648)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_636, _637, _638), vec3(_519, _521, _522))));
        _682 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    }
    else
    {
        _682 = 0.0;
    }
    vec4 _684 = textureLod(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _507) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _508) + cbTextureTilingScale._m0[1u].w), _682);
    float _698 = inversesqrt(dot(vec3(_519, _521, _522), vec3(_519, _521, _522)));
    float _699 = _698 * _519;
    float _700 = _698 * _521;
    float _701 = _698 * _522;
    float _713 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _714 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _715 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _716 = (-0.0) - _636;
    float _718 = (-0.0) - _637;
    float _719 = (-0.0) - _638;
    float _725 = float(gl_LaunchIDEXT.x);
    float _726 = float(gl_LaunchIDEXT.y);
    float _729 = float(gl_LaunchSizeEXT.x);
    float _743 = fract(fract(sin(dot(vec2(_725 / _729, _726 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _756 = fract(fract(sin(dot(vec2((_725 + 128.0) / _729, (_726 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _60._m0 = 1u;
    uvec4 _766 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _767 = _766.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _767, _766.w, _767, vec3(_713, _714, _715), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _847;
    float _848;
    float _849;
    float _850;
    float _851;
    float _852;
    if (_60._m0 == 0u)
    {
        float _788 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_699, _700, _701));
        float _1106 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
        float _791 = isnan(1.0) ? _1106 : (isnan(_1106) ? 1.0 : min(_1106, 1.0));
        float _802 = g_sceneCB._m0[4u].x - _636;
        float _803 = g_sceneCB._m0[4u].y - _637;
        float _804 = g_sceneCB._m0[4u].z - _638;
        float _808 = inversesqrt(dot(vec3(_802, _803, _804), vec3(_802, _803, _804)));
        float _812 = dot(vec3(_699, _700, _701), vec3(g_sceneCB._m0[4u].xyz));
        float _1117 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
        float _815 = isnan(1.0) ? _1117 : (isnan(_1117) ? 1.0 : min(_1117, 1.0));
        float _816 = dot(vec3(_699, _700, _701), vec3(_716, _718, _719));
        float _1128 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
        float _820 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_802 * _808, _803 * _808, _804 * _808));
        float _1139 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
        float _831 = (exp2(log2(1.0 - (isnan(1.0) ? _1139 : (isnan(_1139) ? 1.0 : min(_1139, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _837 = (0.5 / ((_815 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1128 : (isnan(_1128) ? 1.0 : min(_1128, 1.0))))) * _815;
        float _1150 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
        float _839 = (isnan(1.0) ? _1150 : (isnan(_1150) ? 1.0 : min(_1150, 1.0))) * 0.31831014156341552734375;
        _847 = ((_607 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _791;
        _848 = ((_608 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _791;
        _849 = ((_609 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _791;
        _850 = (_831 * g_sceneCB._m0[5u].x) * _839;
        _851 = (_831 * g_sceneCB._m0[5u].y) * _839;
        _852 = (_831 * g_sceneCB._m0[5u].z) * _839;
    }
    else
    {
        _847 = 0.0;
        _848 = 0.0;
        _849 = 0.0;
        _850 = 0.0;
        _851 = 0.0;
        _852 = 0.0;
    }
    bool _854 = abs(_700) < 0.89999997615814208984375;
    float _856 = float(_854);
    float _857 = _854 ? 0.0 : 1.0;
    float _860 = (_856 * _701) - (_857 * _700);
    float _861 = _857 * _699;
    float _863 = (-0.0) - (_699 * _856);
    float _867 = inversesqrt(dot(vec3(_860, _861, _863), vec3(_860, _861, _863)));
    float _868 = _860 * _867;
    float _869 = _861 * _867;
    float _870 = _867 * _863;
    float _873 = (_869 * _701) - (_870 * _700);
    float _876 = (_870 * _699) - (_868 * _701);
    float _879 = (_868 * _700) - (_869 * _699);
    float _881;
    float _889;
    float _880 = 0.0;
    uint _882 = 0u;
    float _886;
    bool _888;
    for (;;)
    {
        _886 = (float(_882) + _743) * 0.03125;
        _888 = _882 == 0u;
        float frontier_phi_43_pred;
        if (_888)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1025;
            float _1026;
            uint _1028;
            _1025 = 0.0;
            _1026 = 0.5;
            _1028 = _882;
            float _890;
            for (;;)
            {
                _890 = ((_1028 & 1u) != 0u) ? (_1026 + _1025) : _1025;
                uint _1029 = _1028 >> 1u;
                if (_1029 == 0u)
                {
                    break;
                }
                else
                {
                    _1025 = _890;
                    _1026 *= 0.5;
                    _1028 = _1029;
                }
            }
            frontier_phi_43_pred = _890;
        }
        _889 = frontier_phi_43_pred;
        float _891 = _889 + _756;
        float _896 = sqrt(_886);
        float _897 = ((_891 > 1.0) ? (_891 + (-1.0)) : _891) * 6.283185482025146484375;
        float _900 = cos(_897) * _896;
        float _902 = sin(_897) * _896;
        float _904 = sqrt(1.0 - _886);
        float _917 = ((_904 * _699) + (_900 * _873)) + (_902 * _868);
        float _918 = ((_904 * _700) + (_900 * _876)) + (_902 * _869);
        float _919 = ((_904 * _701) + (_900 * _879)) + (_902 * _870);
        _59._m0 = 1u;
        uvec4 _923 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _924 = _923.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _924, _923.w, _924, vec3(_713, _714, _715), 9.9999997473787516355514526367188e-05, vec3(_917, _918, _919), 10000.0, 1);
        float _930 = dot(vec3(_699, _700, _701), vec3(_917, _918, _919));
        float _1161 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _933 = isnan(1.0) ? _1161 : (isnan(_1161) ? 1.0 : min(_1161, 1.0));
        _881 = ((float(_59._m0 == 0u) * _933) / (_933 * 0.3183098733425140380859375)) + _880;
        uint _883 = _882 + 1u;
        if (_883 == 32u)
        {
            break;
        }
        else
        {
            _880 = _881;
            _882 = _883;
            continue;
        }
    }
    float _941 = _881 * 0.009947183541953563690185546875;
    float _946 = dot(vec3(_636, _637, _638), vec3(_699, _700, _701)) * 2.0;
    vec4 _958 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_636 - (_946 * _699), _637 - (_946 * _700), _638 - (_946 * _701)), 4.0);
    float _963 = dot(vec3(_716, _718, _719), vec3(_699, _700, _701));
    float _1172 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _972 = (exp2(log2(1.0 - (isnan(1.0) ? _1172 : (isnan(_1172) ? 1.0 : min(_1172, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _978 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_699, _700, _701), 0.0);
    float _990 = ((_847 + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _684.x)) + _850) + (((_978.x * _607) + (_972 * _958.x)) * _941);
    float _995 = ((_848 + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _684.y)) + _851) + (((_978.y * _608) + (_972 * _958.y)) * _941);
    float _1000 = ((_849 + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _684.z)) + _852) + (((_978.z * _609) + (_972 * _958.z)) * _941);
    float _1183 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _1194 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1205 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    bool _1008 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1019;
    _1019.x = _1008 ? ((_512 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1183 : (isnan(_1183) ? 1.0 : min(_1183, 1.0)));
    _1019.y = _1008 ? ((_515 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1194 : (isnan(_1194) ? 1.0 : min(_1194, 1.0)));
    _1019.z = _1008 ? ((_518 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1205 : (isnan(_1205) ? 1.0 : min(_1205, 1.0)));
    payload._m0 = _1019;
}


