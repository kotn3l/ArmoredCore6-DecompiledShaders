#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _45
{
    vec3 _m0;
};

struct _49
{
    vec2 _m0;
};

struct _52
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_A_snp_0_Texture2D_0;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _45 payload;
hitAttributeEXT _49 hit;
layout(location = 1) rayPayloadEXT _52 _54;
layout(location = 2) rayPayloadEXT _52 _55;

vec3 _916;

void main()
{
    float _63 = float(gl_LaunchSizeEXT.y);
    float _93 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _94 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _95 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    uvec4 _113 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _114 = _113.y;
    uint _154;
    uint _156;
    uint _157;
    if (_113.x == 0u)
    {
        uint _122 = (_114 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _131 = uvec3(texelFetch(l_geomIndexBuffer, int(_122)).x, texelFetch(l_geomIndexBuffer, int(_122 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_122 + 2u)).x);
        _154 = _131.x;
        _156 = _131.y;
        _157 = _131.z;
    }
    else
    {
        uint _135 = uint(gl_PrimitiveID) * 6u;
        uint _137 = _135 & 4294967292u;
        uint _140 = (_114 + _137) >> 2u;
        uvec2 _147 = uvec2(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x);
        uint _148 = _147.x;
        uint _149 = _147.y;
        uint _151 = _148 >> 16u;
        uint _152 = _149 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_137 == _135)
        {
            frontier_phi_3_2_ladder = _152;
            frontier_phi_3_2_ladder_1 = _151;
            frontier_phi_3_2_ladder_2 = _148 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _149 >> 16u;
            frontier_phi_3_2_ladder_1 = _152;
            frontier_phi_3_2_ladder_2 = _151;
        }
        _154 = frontier_phi_3_2_ladder_2;
        _156 = frontier_phi_3_2_ladder_1;
        _157 = frontier_phi_3_2_ladder;
    }
    uvec4 _161 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _162 = _161.x;
    uint _163 = _161.z;
    bool _164 = _163 != 0u;
    uint _165 = _113.w;
    bool _167 = _164 || (_165 == 0u);
    uint _169 = (_162 * _154) + 12u;
    uint _193;
    uint _194;
    uint _195;
    if (_167)
    {
        uvec4 _172 = texelFetch(l_geomAttrib_0, int(_169 >> 2u));
        uint _173 = _172.x;
        _193 = _173 & 255u;
        _194 = (_173 >> 8u) & 255u;
        _195 = (_173 >> 16u) & 255u;
    }
    else
    {
        uint _181 = _169 >> 2u;
        uvec2 _187 = uvec2(texelFetch(l_geomAttrib_0, int(_181)).x, texelFetch(l_geomAttrib_0, int(_181 + 1u)).x);
        uint _188 = _187.x;
        _193 = _188 & 65535u;
        _194 = _188 >> 16u;
        _195 = _187.y & 65535u;
    }
    uint _199 = _161.y;
    bool _200 = _163 == 0u;
    uint _203 = _200 ? 4u : ((_165 != 0u) ? 12u : 8u);
    uvec4 _212 = texelFetch(l_geomAttrib_1, int((((_199 * _154) + 4u) + (_164 ? (_203 + 4u) : _203)) >> 2u));
    uint _213 = _212.x;
    float _217 = float(int(uint(int(_213 << 16u) >> int(16u))));
    float _218 = float(int(uint(int(_213) >> int(16u))));
    uint _220 = (_162 * _156) + 12u;
    uint _242;
    uint _243;
    uint _244;
    if (_167)
    {
        uvec4 _223 = texelFetch(l_geomAttrib_0, int(_220 >> 2u));
        uint _224 = _223.x;
        _242 = _224 & 255u;
        _243 = (_224 >> 8u) & 255u;
        _244 = (_224 >> 16u) & 255u;
    }
    else
    {
        uint _230 = _220 >> 2u;
        uvec2 _236 = uvec2(texelFetch(l_geomAttrib_0, int(_230)).x, texelFetch(l_geomAttrib_0, int(_230 + 1u)).x);
        uint _237 = _236.x;
        _242 = _237 & 65535u;
        _243 = _237 >> 16u;
        _244 = _236.y & 65535u;
    }
    uint _250 = _200 ? 4u : ((_165 != 0u) ? 12u : 8u);
    uvec4 _257 = texelFetch(l_geomAttrib_1, int((((_199 * _156) + 4u) + (_164 ? (_250 + 4u) : _250)) >> 2u));
    uint _258 = _257.x;
    float _262 = float(int(uint(int(_258 << 16u) >> int(16u))));
    float _263 = float(int(uint(int(_258) >> int(16u))));
    uint _265 = (_162 * _157) + 12u;
    uint _287;
    uint _288;
    uint _289;
    if (_167)
    {
        uvec4 _268 = texelFetch(l_geomAttrib_0, int(_265 >> 2u));
        uint _269 = _268.x;
        _287 = _269 & 255u;
        _288 = (_269 >> 8u) & 255u;
        _289 = (_269 >> 16u) & 255u;
    }
    else
    {
        uint _275 = _265 >> 2u;
        uvec2 _281 = uvec2(texelFetch(l_geomAttrib_0, int(_275)).x, texelFetch(l_geomAttrib_0, int(_275 + 1u)).x);
        uint _282 = _281.x;
        _287 = _282 & 65535u;
        _288 = _282 >> 16u;
        _289 = _281.y & 65535u;
    }
    uint _295 = _200 ? 4u : ((_165 != 0u) ? 12u : 8u);
    uvec4 _302 = texelFetch(l_geomAttrib_1, int((((_199 * _157) + 4u) + (_164 ? (_295 + 4u) : _295)) >> 2u));
    uint _303 = _302.x;
    float _307 = float(int(uint(int(_303 << 16u) >> int(16u))));
    float _308 = float(int(uint(int(_303) >> int(16u))));
    bool _310 = _113.z == 0u;
    float _346;
    float _347;
    float _348;
    if (_310)
    {
        uint _313 = _154 * 3u;
        uvec3 _322 = uvec3(texelFetch(l_geomPositionBuffer, int(_313)).x, texelFetch(l_geomPositionBuffer, int(_313 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_313 + 2u)).x);
        _346 = uintBitsToFloat(_322.x);
        _347 = uintBitsToFloat(_322.y);
        _348 = uintBitsToFloat(_322.z);
    }
    else
    {
        uint _330 = _154 * 2u;
        uvec2 _336 = uvec2(texelFetch(l_geomPositionBuffer, int(_330)).x, texelFetch(l_geomPositionBuffer, int(_330 + 1u)).x);
        uint _337 = _336.x;
        _346 = unpackHalf2x16(_337).x;
        _347 = unpackHalf2x16(_337 >> 16u).x;
        _348 = unpackHalf2x16(_336.y).x;
    }
    float _384;
    float _385;
    float _386;
    if (_310)
    {
        uint _351 = _156 * 3u;
        uvec3 _360 = uvec3(texelFetch(l_geomPositionBuffer, int(_351)).x, texelFetch(l_geomPositionBuffer, int(_351 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_351 + 2u)).x);
        _384 = uintBitsToFloat(_360.x);
        _385 = uintBitsToFloat(_360.y);
        _386 = uintBitsToFloat(_360.z);
    }
    else
    {
        uint _368 = _156 * 2u;
        uvec2 _374 = uvec2(texelFetch(l_geomPositionBuffer, int(_368)).x, texelFetch(l_geomPositionBuffer, int(_368 + 1u)).x);
        uint _375 = _374.x;
        _384 = unpackHalf2x16(_375).x;
        _385 = unpackHalf2x16(_375 >> 16u).x;
        _386 = unpackHalf2x16(_374.y).x;
    }
    float _422;
    float _423;
    float _424;
    if (_310)
    {
        uint _389 = _157 * 3u;
        uvec3 _398 = uvec3(texelFetch(l_geomPositionBuffer, int(_389)).x, texelFetch(l_geomPositionBuffer, int(_389 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_389 + 2u)).x);
        _422 = uintBitsToFloat(_398.x);
        _423 = uintBitsToFloat(_398.y);
        _424 = uintBitsToFloat(_398.z);
    }
    else
    {
        uint _406 = _157 * 2u;
        uvec2 _412 = uvec2(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x);
        uint _413 = _412.x;
        _422 = unpackHalf2x16(_413).x;
        _423 = unpackHalf2x16(_413 >> 16u).x;
        _424 = unpackHalf2x16(_412.y).x;
    }
    float _427 = (1.0 - hit._m0.x) - hit._m0.y;
    float _468 = _384 - _346;
    float _469 = _385 - _347;
    float _470 = _386 - _348;
    float _473 = fma(_470, gl_ObjectToWorldEXT[2u].x, fma(_469, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _468));
    float _476 = fma(_470, gl_ObjectToWorldEXT[2u].y, fma(_469, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _468));
    float _479 = fma(_470, gl_ObjectToWorldEXT[2u].z, fma(_469, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _468));
    float _480 = _422 - _346;
    float _481 = _423 - _347;
    float _482 = _424 - _348;
    float _485 = fma(_482, gl_ObjectToWorldEXT[2u].x, fma(_481, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _480));
    float _488 = fma(_482, gl_ObjectToWorldEXT[2u].y, fma(_481, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _480));
    float _491 = fma(_482, gl_ObjectToWorldEXT[2u].z, fma(_481, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _480));
    float _498 = (((float(_193) * _427) + (-127.0)) + (float(_242) * hit._m0.x)) + (float(_287) * hit._m0.y);
    float _501 = (((float(_194) * _427) + (-127.0)) + (float(_243) * hit._m0.x)) + (float(_288) * hit._m0.y);
    float _504 = (((float(_195) * _427) + (-127.0)) + (float(_244) * hit._m0.x)) + (float(_289) * hit._m0.y);
    float _505 = _498 * 0.0078740157186985015869140625;
    float _507 = _501 * 0.0078740157186985015869140625;
    float _508 = _504 * 0.0078740157186985015869140625;
    uvec2 _520 = uvec2(textureSize(M_A_snp_0_Texture2D_0, int(0u)));
    float _529 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _530 = _529 * gl_WorldRayDirectionEXT.x;
    float _531 = _529 * gl_WorldRayDirectionEXT.y;
    float _532 = _529 * gl_WorldRayDirectionEXT.z;
    float _584;
    if (floatBitsToUint(g_sceneCB._m0[7u]).x == 1u)
    {
        float _546 = (_491 * _476) - (_488 * _479);
        float _549 = (_485 * _479) - (_491 * _473);
        float _552 = (_488 * _473) - (_485 * _476);
        float _581 = ((log2((((float(_520.y) * 0.5) * float(_520.x)) * abs((((_308 - _218) * (_262 - _217)) - ((_307 - _217) * (_263 - _218))) * 2.384185791015625e-07)) / (sqrt(((_549 * _549) + (_552 * _552)) + (_546 * _546)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(sqrt(((_94 * _94) + (_93 * _93)) + (_95 * _95)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _63)))))) / abs(dot(vec3(_530, _531, _532), vec3(_505, _507, _508))));
        _584 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    }
    else
    {
        _584 = 0.0;
    }
    vec4 _588 = textureLod(sampler2D(M_A_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((((_262 * hit._m0.x) + (_217 * _427)) + (_307 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((((_263 * hit._m0.x) + (_218 * _427)) + (_308 * hit._m0.y)) * 0.00048828125) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _584);
    float _590 = _588.x;
    float _591 = _588.y;
    float _592 = _588.z;
    float _596 = inversesqrt(dot(vec3(_505, _507, _508), vec3(_505, _507, _508)));
    float _597 = _596 * _505;
    float _598 = _596 * _507;
    float _599 = _596 * _508;
    float _611 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _612 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _613 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _614 = (-0.0) - _530;
    float _616 = (-0.0) - _531;
    float _617 = (-0.0) - _532;
    float _623 = float(gl_LaunchIDEXT.x);
    float _624 = float(gl_LaunchIDEXT.y);
    float _627 = float(gl_LaunchSizeEXT.x);
    float _641 = fract(fract(sin(dot(vec2(_623 / _627, _624 / _63), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _654 = fract(fract(sin(dot(vec2((_623 + 128.0) / _627, (_624 + 128.0) / _63), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _55._m0 = 1u;
    uvec4 _664 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _665 = _664.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _665, _664.w, _665, vec3(_611, _612, _613), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _745;
    float _746;
    float _747;
    float _748;
    float _749;
    float _750;
    if (_55._m0 == 0u)
    {
        float _686 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_597, _598, _599));
        float _977 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
        float _689 = isnan(1.0) ? _977 : (isnan(_977) ? 1.0 : min(_977, 1.0));
        float _700 = g_sceneCB._m0[4u].x - _530;
        float _701 = g_sceneCB._m0[4u].y - _531;
        float _702 = g_sceneCB._m0[4u].z - _532;
        float _706 = inversesqrt(dot(vec3(_700, _701, _702), vec3(_700, _701, _702)));
        float _710 = dot(vec3(_597, _598, _599), vec3(g_sceneCB._m0[4u].xyz));
        float _988 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
        float _713 = isnan(1.0) ? _988 : (isnan(_988) ? 1.0 : min(_988, 1.0));
        float _714 = dot(vec3(_597, _598, _599), vec3(_614, _616, _617));
        float _999 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        float _718 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_700 * _706, _701 * _706, _702 * _706));
        float _1010 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
        float _729 = (exp2(log2(1.0 - (isnan(1.0) ? _1010 : (isnan(_1010) ? 1.0 : min(_1010, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _735 = (0.5 / ((_713 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _999 : (isnan(_999) ? 1.0 : min(_999, 1.0))))) * _713;
        float _1021 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
        float _737 = (isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0))) * 0.31831014156341552734375;
        _745 = ((_590 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _689;
        _746 = ((_591 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _689;
        _747 = ((_592 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _689;
        _748 = (_729 * g_sceneCB._m0[5u].x) * _737;
        _749 = (_729 * g_sceneCB._m0[5u].y) * _737;
        _750 = (_729 * g_sceneCB._m0[5u].z) * _737;
    }
    else
    {
        _745 = 0.0;
        _746 = 0.0;
        _747 = 0.0;
        _748 = 0.0;
        _749 = 0.0;
        _750 = 0.0;
    }
    bool _752 = abs(_598) < 0.89999997615814208984375;
    float _754 = float(_752);
    float _755 = _752 ? 0.0 : 1.0;
    float _758 = (_754 * _599) - (_755 * _598);
    float _759 = _755 * _597;
    float _761 = (-0.0) - (_597 * _754);
    float _765 = inversesqrt(dot(vec3(_758, _759, _761), vec3(_758, _759, _761)));
    float _766 = _758 * _765;
    float _767 = _759 * _765;
    float _768 = _765 * _761;
    float _771 = (_767 * _599) - (_768 * _598);
    float _774 = (_768 * _597) - (_766 * _599);
    float _777 = (_766 * _598) - (_767 * _597);
    float _779;
    float _787;
    float _778 = 0.0;
    uint _780 = 0u;
    float _784;
    bool _786;
    for (;;)
    {
        _784 = (float(_780) + _641) * 0.03125;
        _786 = _780 == 0u;
        float frontier_phi_29_pred;
        if (_786)
        {
            frontier_phi_29_pred = 0.0;
        }
        else
        {
            float _921;
            float _922;
            uint _924;
            _921 = 0.0;
            _922 = 0.5;
            _924 = _780;
            float _788;
            for (;;)
            {
                _788 = ((_924 & 1u) != 0u) ? (_922 + _921) : _921;
                uint _925 = _924 >> 1u;
                if (_925 == 0u)
                {
                    break;
                }
                else
                {
                    _921 = _788;
                    _922 *= 0.5;
                    _924 = _925;
                }
            }
            frontier_phi_29_pred = _788;
        }
        _787 = frontier_phi_29_pred;
        float _789 = _787 + _654;
        float _794 = sqrt(_784);
        float _795 = ((_789 > 1.0) ? (_789 + (-1.0)) : _789) * 6.283185482025146484375;
        float _798 = cos(_795) * _794;
        float _800 = sin(_795) * _794;
        float _802 = sqrt(1.0 - _784);
        float _815 = ((_802 * _597) + (_798 * _771)) + (_800 * _766);
        float _816 = ((_802 * _598) + (_798 * _774)) + (_800 * _767);
        float _817 = ((_802 * _599) + (_798 * _777)) + (_800 * _768);
        _54._m0 = 1u;
        uvec4 _821 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _822 = _821.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _822, _821.w, _822, vec3(_611, _612, _613), 9.9999997473787516355514526367188e-05, vec3(_815, _816, _817), 10000.0, 1);
        float _828 = dot(vec3(_597, _598, _599), vec3(_815, _816, _817));
        float _1032 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
        float _831 = isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0));
        _779 = ((float(_54._m0 == 0u) * _831) / (_831 * 0.3183098733425140380859375)) + _778;
        uint _781 = _780 + 1u;
        if (_781 == 32u)
        {
            break;
        }
        else
        {
            _778 = _779;
            _780 = _781;
            continue;
        }
    }
    float _839 = _779 * 0.009947183541953563690185546875;
    float _844 = dot(vec3(_530, _531, _532), vec3(_597, _598, _599)) * 2.0;
    vec4 _856 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_530 - (_844 * _597), _531 - (_844 * _598), _532 - (_844 * _599)), 4.0);
    float _861 = dot(vec3(_614, _616, _617), vec3(_597, _598, _599));
    float _1043 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _870 = (exp2(log2(1.0 - (isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _876 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_597, _598, _599), 0.0);
    float _887 = (_748 + _745) + (((_876.x * _590) + (_870 * _856.x)) * _839);
    float _891 = (_749 + _746) + (((_876.y * _591) + (_870 * _856.y)) * _839);
    float _895 = (_750 + _747) + (((_876.z * _592) + (_870 * _856.z)) * _839);
    float _1054 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _1065 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _1076 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    bool _904 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _915;
    _915.x = _904 ? ((_498 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1054 : (isnan(_1054) ? 1.0 : min(_1054, 1.0)));
    _915.y = _904 ? ((_501 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1065 : (isnan(_1065) ? 1.0 : min(_1065, 1.0)));
    _915.z = _904 ? ((_504 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1076 : (isnan(_1076) ? 1.0 : min(_1076, 1.0)));
    payload._m0 = _915;
}


