#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _59
{
    vec3 _m0;
};

struct _63
{
    vec2 _m0;
};

struct _66
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_VirtualMonitor_Item_snp_0_Texture2D_6;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _59 payload;
hitAttributeEXT _63 hit;
layout(location = 1) rayPayloadEXT _66 _68;
layout(location = 2) rayPayloadEXT _66 _69;

vec3 _1669;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _111 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _112 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _120 = sqrt(((_112 * _112) + (_111 * _111)) + (_113 * _113)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _131 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _132 = _131.y;
    uint _172;
    uint _174;
    uint _175;
    if (_131.x == 0u)
    {
        uint _140 = (_132 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _149 = uvec3(texelFetch(l_geomIndexBuffer, int(_140)).x, texelFetch(l_geomIndexBuffer, int(_140 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_140 + 2u)).x);
        _172 = _149.x;
        _174 = _149.y;
        _175 = _149.z;
    }
    else
    {
        uint _153 = uint(gl_PrimitiveID) * 6u;
        uint _155 = _153 & 4294967292u;
        uint _158 = (_132 + _155) >> 2u;
        uvec2 _165 = uvec2(texelFetch(l_geomIndexBuffer, int(_158)).x, texelFetch(l_geomIndexBuffer, int(_158 + 1u)).x);
        uint _166 = _165.x;
        uint _167 = _165.y;
        uint _169 = _166 >> 16u;
        uint _170 = _167 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_155 == _153)
        {
            frontier_phi_3_2_ladder = _169;
            frontier_phi_3_2_ladder_1 = _166 & 65535u;
            frontier_phi_3_2_ladder_2 = _170;
        }
        else
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _169;
            frontier_phi_3_2_ladder_2 = _167 >> 16u;
        }
        _172 = frontier_phi_3_2_ladder_1;
        _174 = frontier_phi_3_2_ladder;
        _175 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _179 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _180 = _179.x;
    uint _181 = _179.z;
    bool _182 = _181 != 0u;
    bool _184 = _131.w == 0u;
    bool _185 = _182 || _184;
    uint _187 = (_180 * _172) + 12u;
    uint _211;
    uint _212;
    uint _213;
    uint _214;
    if (_185)
    {
        uvec4 _190 = texelFetch(l_geomAttrib_0, int(_187 >> 2u));
        uint _191 = _190.x;
        _211 = _191 & 255u;
        _212 = (_191 >> 8u) & 255u;
        _213 = (_191 >> 16u) & 255u;
        _214 = 20u;
    }
    else
    {
        uint _199 = _187 >> 2u;
        uvec2 _205 = uvec2(texelFetch(l_geomAttrib_0, int(_199)).x, texelFetch(l_geomAttrib_0, int(_199 + 1u)).x);
        uint _206 = _205.x;
        _211 = _206 & 65535u;
        _212 = _206 >> 16u;
        _213 = _205.y & 65535u;
        _214 = 24u;
    }
    bool _219 = _181 == 0u;
    uint _220;
    if (_219)
    {
        _220 = _214;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_184)
        {
            frontier_phi_9_10_ladder = _214 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _214 + 8u;
        }
        _220 = frontier_phi_9_10_ladder;
    }
    uint _225 = _182 ? (_220 + 4u) : _220;
    uint _226 = _180 * _172;
    uvec4 _231 = texelFetch(l_geomAttrib_0, int(((_226 + 4u) + _225) >> 2u));
    uint _232 = _231.x;
    float _236 = float(int(uint(int(_232 << 16u) >> int(16u))));
    float _237 = float(int(uint(int(_232) >> int(16u))));
    uint _246 = (_180 * _174) + 12u;
    uint _267;
    uint _268;
    uint _269;
    uint _270;
    if (_185)
    {
        uvec4 _248 = texelFetch(l_geomAttrib_0, int(_246 >> 2u));
        uint _249 = _248.x;
        _267 = _249 & 255u;
        _268 = (_249 >> 8u) & 255u;
        _269 = (_249 >> 16u) & 255u;
        _270 = 20u;
    }
    else
    {
        uint _255 = _246 >> 2u;
        uvec2 _261 = uvec2(texelFetch(l_geomAttrib_0, int(_255)).x, texelFetch(l_geomAttrib_0, int(_255 + 1u)).x);
        uint _262 = _261.x;
        _267 = _262 & 65535u;
        _268 = _262 >> 16u;
        _269 = _261.y & 65535u;
        _270 = 24u;
    }
    uint _274;
    if (_219)
    {
        _274 = _270;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_184)
        {
            frontier_phi_16_17_ladder = _270 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _270 + 8u;
        }
        _274 = frontier_phi_16_17_ladder;
    }
    uint _278 = _182 ? (_274 + 4u) : _274;
    uint _279 = _180 * _174;
    uvec4 _283 = texelFetch(l_geomAttrib_0, int(((_279 + 4u) + _278) >> 2u));
    uint _284 = _283.x;
    float _288 = float(int(uint(int(_284 << 16u) >> int(16u))));
    float _289 = float(int(uint(int(_284) >> int(16u))));
    uint _298 = (_180 * _175) + 12u;
    uint _319;
    uint _320;
    uint _321;
    uint _322;
    if (_185)
    {
        uvec4 _300 = texelFetch(l_geomAttrib_0, int(_298 >> 2u));
        uint _301 = _300.x;
        _319 = _301 & 255u;
        _320 = (_301 >> 8u) & 255u;
        _321 = (_301 >> 16u) & 255u;
        _322 = 20u;
    }
    else
    {
        uint _307 = _298 >> 2u;
        uvec2 _313 = uvec2(texelFetch(l_geomAttrib_0, int(_307)).x, texelFetch(l_geomAttrib_0, int(_307 + 1u)).x);
        uint _314 = _313.x;
        _319 = _314 & 65535u;
        _320 = _314 >> 16u;
        _321 = _313.y & 65535u;
        _322 = 24u;
    }
    uint _326;
    if (_219)
    {
        _326 = _322;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_184)
        {
            frontier_phi_23_24_ladder = _322 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _322 + 8u;
        }
        _326 = frontier_phi_23_24_ladder;
    }
    uint _330 = _182 ? (_326 + 4u) : _326;
    uint _331 = _180 * _175;
    uvec4 _335 = texelFetch(l_geomAttrib_0, int(((_331 + 4u) + _330) >> 2u));
    uint _336 = _335.x;
    float _340 = float(int(uint(int(_336 << 16u) >> int(16u))));
    float _341 = float(int(uint(int(_336) >> int(16u))));
    bool _350 = _131.z == 0u;
    float _386;
    float _387;
    float _388;
    if (_350)
    {
        uint _353 = _172 * 3u;
        uvec3 _362 = uvec3(texelFetch(l_geomPositionBuffer, int(_353)).x, texelFetch(l_geomPositionBuffer, int(_353 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_353 + 2u)).x);
        _386 = uintBitsToFloat(_362.x);
        _387 = uintBitsToFloat(_362.y);
        _388 = uintBitsToFloat(_362.z);
    }
    else
    {
        uint _370 = _172 * 2u;
        uvec2 _376 = uvec2(texelFetch(l_geomPositionBuffer, int(_370)).x, texelFetch(l_geomPositionBuffer, int(_370 + 1u)).x);
        uint _377 = _376.x;
        _386 = unpackHalf2x16(_377).x;
        _387 = unpackHalf2x16(_377 >> 16u).x;
        _388 = unpackHalf2x16(_376.y).x;
    }
    float _424;
    float _425;
    float _426;
    if (_350)
    {
        uint _391 = _174 * 3u;
        uvec3 _400 = uvec3(texelFetch(l_geomPositionBuffer, int(_391)).x, texelFetch(l_geomPositionBuffer, int(_391 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_391 + 2u)).x);
        _424 = uintBitsToFloat(_400.x);
        _425 = uintBitsToFloat(_400.y);
        _426 = uintBitsToFloat(_400.z);
    }
    else
    {
        uint _408 = _174 * 2u;
        uvec2 _414 = uvec2(texelFetch(l_geomPositionBuffer, int(_408)).x, texelFetch(l_geomPositionBuffer, int(_408 + 1u)).x);
        uint _415 = _414.x;
        _424 = unpackHalf2x16(_415).x;
        _425 = unpackHalf2x16(_415 >> 16u).x;
        _426 = unpackHalf2x16(_414.y).x;
    }
    float _462;
    float _463;
    float _464;
    if (_350)
    {
        uint _429 = _175 * 3u;
        uvec3 _438 = uvec3(texelFetch(l_geomPositionBuffer, int(_429)).x, texelFetch(l_geomPositionBuffer, int(_429 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_429 + 2u)).x);
        _462 = uintBitsToFloat(_438.x);
        _463 = uintBitsToFloat(_438.y);
        _464 = uintBitsToFloat(_438.z);
    }
    else
    {
        uint _446 = _175 * 2u;
        uvec2 _452 = uvec2(texelFetch(l_geomPositionBuffer, int(_446)).x, texelFetch(l_geomPositionBuffer, int(_446 + 1u)).x);
        uint _453 = _452.x;
        _462 = unpackHalf2x16(_453).x;
        _463 = unpackHalf2x16(_453 >> 16u).x;
        _464 = unpackHalf2x16(_452.y).x;
    }
    float _467 = (1.0 - hit._m0.x) - hit._m0.y;
    float _496 = (_288 - _236) * 0.00048828125;
    float _498 = (_289 - _237) * 0.00048828125;
    float _501 = (_340 - _236) * 0.00048828125;
    float _502 = (_341 - _237) * 0.00048828125;
    float _524 = _424 - _386;
    float _525 = _425 - _387;
    float _526 = _426 - _388;
    float _529 = fma(_526, gl_ObjectToWorldEXT[2u].x, fma(_525, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _524));
    float _532 = fma(_526, gl_ObjectToWorldEXT[2u].y, fma(_525, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _524));
    float _535 = fma(_526, gl_ObjectToWorldEXT[2u].z, fma(_525, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _524));
    float _536 = _462 - _386;
    float _537 = _463 - _387;
    float _538 = _464 - _388;
    float _541 = fma(_538, gl_ObjectToWorldEXT[2u].x, fma(_537, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _536));
    float _544 = fma(_538, gl_ObjectToWorldEXT[2u].y, fma(_537, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _536));
    float _547 = fma(_538, gl_ObjectToWorldEXT[2u].z, fma(_537, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _536));
    float _548 = (((_288 * hit._m0.x) + (_236 * _467)) + (_340 * hit._m0.y)) * 0.00048828125;
    float _549 = (((_289 * hit._m0.x) + (_237 * _467)) + (_341 * hit._m0.y)) * 0.00048828125;
    float _553 = (((float(_211) * _467) + (-127.0)) + (float(_267) * hit._m0.x)) + (float(_319) * hit._m0.y);
    float _556 = (((float(_212) * _467) + (-127.0)) + (float(_268) * hit._m0.x)) + (float(_320) * hit._m0.y);
    float _559 = (((float(_213) * _467) + (-127.0)) + (float(_269) * hit._m0.x)) + (float(_321) * hit._m0.y);
    float _560 = _553 * 0.0078740157186985015869140625;
    float _562 = _556 * 0.0078740157186985015869140625;
    float _563 = _559 * 0.0078740157186985015869140625;
    uvec2 _579 = uvec2(textureSize(M_VirtualMonitor_Item_snp_0_Texture2D_10, int(0u)));
    bool _584 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _637;
    if (_584)
    {
        float _595 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _601 = (_547 * _532) - (_544 * _535);
        float _604 = (_541 * _535) - (_547 * _529);
        float _607 = (_544 * _529) - (_541 * _532);
        float _634 = ((log2((((float(_579.y) * 0.5) * float(_579.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_604 * _604) + (_607 * _607)) + (_601 * _601)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_595 * gl_WorldRayDirectionEXT.x, _595 * gl_WorldRayDirectionEXT.y, _595 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _637 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
    }
    else
    {
        _637 = 0.0;
    }
    vec4 _641 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _548) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _549) + cbTextureTilingScale._m0[3u].w), _637);
    float _643 = _641.x;
    float _649 = cbMtdParam._m0[13u].x * 0.25;
    float _655 = fract(abs(_649));
    float _660 = (((((float(texelFetch(l_geomAttrib_0, int(((_279 + 12u) + _278) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_226 + 12u) + _225) >> 2u)).x & 255u) * _467)) + (float(texelFetch(l_geomAttrib_0, int(((_331 + 12u) + _330) >> 2u)).x & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125) + 0.25) - (((_649 >= ((-0.0) - _649)) ? _655 : ((-0.0) - _655)) * 2.0);
    float _663 = abs(cbMtdParam._m0[15u].y * _660);
    float _667 = (((_663 * cbMtdParam._m0[15u].z) - _643) * _663) + _643;
    float _1762 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
    float _669 = (isnan(1.0) ? _1762 : (isnan(_1762) ? 1.0 : min(_1762, 1.0))) * cbMtdParam._m0[15u].w;
    float _1773 = isnan(0.0) ? _669 : (isnan(_669) ? 0.0 : max(_669, 0.0));
    float _670 = isnan(1.0) ? _1773 : (isnan(_1773) ? 1.0 : min(_1773, 1.0));
    float _671 = 1.0 - _670;
    float _672 = ceil(_660);
    float _1784 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _673 = isnan(1.0) ? _1784 : (isnan(_1784) ? 1.0 : min(_1784, 1.0));
    float _678 = sin(cbMtdParam._m0[16u].x);
    float _679 = cos(cbMtdParam._m0[16u].x);
    float _680 = _548 - cbMtdParam._m0[16u].y;
    float _681 = _549 - cbMtdParam._m0[16u].y;
    uvec2 _700 = uvec2(textureSize(M_VirtualMonitor_Item_snp_0_Texture2D_1, int(0u)));
    float _751;
    if (_584)
    {
        float _711 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _717 = (_547 * _532) - (_544 * _535);
        float _720 = (_541 * _535) - (_547 * _529);
        float _723 = (_544 * _529) - (_541 * _532);
        float _749 = ((log2((((float(_700.y) * 0.5) * float(_700.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_720 * _720) + (_723 * _723)) + (_717 * _717)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_711 * gl_WorldRayDirectionEXT.x, _711 * gl_WorldRayDirectionEXT.y, _711 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _751 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    }
    else
    {
        _751 = 0.0;
    }
    vec4 _754 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (fma(_681, (-0.0) - _678, _680 * _679) + cbMtdParam._m0[16u].y)) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_681, _679, _680 * _678) + cbMtdParam._m0[16u].y)) + cbTextureTilingScale._m0[2u].w), _751);
    uvec2 _799 = uvec2(textureSize(M_VirtualMonitor_Item_snp_0_Texture2D_3, int(0u)));
    float _850;
    if (_584)
    {
        float _810 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _816 = (_547 * _532) - (_544 * _535);
        float _819 = (_541 * _535) - (_547 * _529);
        float _822 = (_544 * _529) - (_541 * _532);
        float _848 = ((log2((((float(_799.y) * 0.5) * float(_799.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_819 * _819) + (_822 * _822)) + (_816 * _816)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_810 * gl_WorldRayDirectionEXT.x, _810 * gl_WorldRayDirectionEXT.y, _810 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _850 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    }
    else
    {
        _850 = 0.0;
    }
    float _916;
    if (_584)
    {
        float _876 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _882 = (_547 * _532) - (_544 * _535);
        float _885 = (_541 * _535) - (_547 * _529);
        float _888 = (_544 * _529) - (_541 * _532);
        float _914 = ((log2((((float(_799.y) * 0.5) * float(_799.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_885 * _885) + (_888 * _888)) + (_882 * _882)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_876 * gl_WorldRayDirectionEXT.x, _876 * gl_WorldRayDirectionEXT.y, _876 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _916 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    }
    else
    {
        _916 = 0.0;
    }
    float _979;
    if (_584)
    {
        float _939 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _945 = (_547 * _532) - (_544 * _535);
        float _948 = (_541 * _535) - (_547 * _529);
        float _951 = (_544 * _529) - (_541 * _532);
        float _977 = ((log2((((float(_799.y) * 0.5) * float(_799.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_948 * _948) + (_951 * _951)) + (_945 * _945)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_939 * gl_WorldRayDirectionEXT.x, _939 * gl_WorldRayDirectionEXT.y, _939 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _979 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    }
    else
    {
        _979 = 0.0;
    }
    float _1000 = abs((fract(cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1815 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _1001 = isnan(1.0) ? _1815 : (isnan(_1815) ? 1.0 : min(_1815, 1.0));
    float _1011 = (((_1001 * _1001) * (cbMtdParam._m0[14u].y * 0.300000011920928955078125)) * (3.0 - (_1001 * 2.0))) - cbMtdParam._m0[14u].z;
    float _1022 = (cbTextureTilingScale._m0[5u].x * ((cbMtdParam._m0[17u].x * cbPerFrame._m0[22u].x) + _548)) + cbTextureTilingScale._m0[5u].z;
    float _1023 = (cbTextureTilingScale._m0[5u].y * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + _549)) + cbTextureTilingScale._m0[5u].w;
    uvec2 _1025 = uvec2(textureSize(M_VirtualMonitor_Item_snp_0_Texture2D_6, int(0u)));
    float _1076;
    if (_584)
    {
        float _1036 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1042 = (_547 * _532) - (_544 * _535);
        float _1045 = (_541 * _535) - (_547 * _529);
        float _1048 = (_544 * _529) - (_541 * _532);
        float _1074 = ((log2((((float(_1025.y) * 0.5) * float(_1025.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_1045 * _1045) + (_1048 * _1048)) + (_1042 * _1042)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1036 * gl_WorldRayDirectionEXT.x, _1036 * gl_WorldRayDirectionEXT.y, _1036 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _1076 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    }
    else
    {
        _1076 = 0.0;
    }
    vec4 _1078 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_6, SS_WrapLinear), vec2(_1022, _1023), _1076);
    float _1083 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].w;
    float _1089 = ((_1078.y * 0.5) + (-0.25)) * _1011;
    float _1091 = (-0.0) - (_1011 * ((_1078.x * 0.5) + (-0.25)));
    float _1092 = fract(_1083);
    float _1094 = fract(_1083 + 0.5);
    float _1105 = abs((_1092 * 2.0) + (-1.0));
    vec4 _1115 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1092 * _1091) + _548) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1089 * _1092) + _549) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1117 = _1115.x;
    float _1118 = _1115.y;
    float _1119 = _1115.z;
    vec4 _1120 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_1094 * _1091) + _548) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1089 * _1094) + _549) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), 0.0);
    float _1145 = (cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + _548;
    float _1146 = (cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + _549;
    float _1197;
    if (_584)
    {
        float _1157 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1163 = (_547 * _532) - (_544 * _535);
        float _1166 = (_541 * _535) - (_547 * _529);
        float _1169 = (_544 * _529) - (_541 * _532);
        float _1195 = ((log2((((float(_1025.y) * 0.5) * float(_1025.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_1166 * _1166) + (_1169 * _1169)) + (_1163 * _1163)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1157 * gl_WorldRayDirectionEXT.x, _1157 * gl_WorldRayDirectionEXT.y, _1157 * gl_WorldRayDirectionEXT.z), vec3(_560, _562, _563))));
        _1197 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    }
    else
    {
        _1197 = 0.0;
    }
    vec4 _1199 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_6, SS_WrapLinear), vec2(_1022, _1023), _1197);
    float _1207 = ((_1199.y * 0.5) + (-0.25)) * _1011;
    float _1209 = (-0.0) - (_1011 * ((_1199.x * 0.5) + (-0.25)));
    vec4 _1234 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1092 * _1209) + _1145) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1207 * _1092) + _1146) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1236 = _1234.x;
    float _1237 = _1234.y;
    float _1238 = _1234.z;
    vec4 _1239 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_1094 * _1209) + _1145) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_1207 * _1094) + _1146) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), 0.0);
    float _1259 = ((((((cbMtdParam._m0[9u].x * cbMtdParam._m0[9u].x) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[18u].x + _548)) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].y + _549) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _979).x) * cbMtdParam._m0[13u].z) * cbMtdParam._m0[10u].x) * (((_1120.x - _1117) * _1105) + _1117)) * (((_1239.x - _1236) * _1105) + _1236);
    float _1266 = ((((((cbMtdParam._m0[9u].y * cbMtdParam._m0[9u].y) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[18u].z + _548)) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].w + _549) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _916).x) * cbMtdParam._m0[13u].z) * (((_1120.y - _1118) * _1105) + _1118)) * cbMtdParam._m0[10u].y) * (((_1239.y - _1237) * _1105) + _1237);
    float _1273 = ((((((cbMtdParam._m0[9u].z * cbMtdParam._m0[9u].z) * cbMtdParam._m0[13u].y) * textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[19u].x + _548)) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].y + _549) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w), _850).x) * cbMtdParam._m0[13u].z) * (((_1120.z - _1119) * _1105) + _1119)) * cbMtdParam._m0[10u].z) * (((_1239.z - _1238) * _1105) + _1238);
    float _1280 = ((((cbMtdParam._m0[12u].x * _754.x) * cbMtdParam._m0[14u].w) - _1259) * _673) + _1259;
    float _1281 = ((((cbMtdParam._m0[12u].y * _754.y) * cbMtdParam._m0[14u].w) - _1266) * _673) + _1266;
    float _1282 = ((((cbMtdParam._m0[12u].z * _754.z) * cbMtdParam._m0[14u].w) - _1273) * _673) + _1273;
    uvec2 _1294 = uvec2(textureSize(M_VirtualMonitor_Item_snp_0_Texture2D_0, int(0u)));
    float _1298 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1299 = _1298 * gl_WorldRayDirectionEXT.x;
    float _1300 = _1298 * gl_WorldRayDirectionEXT.y;
    float _1301 = _1298 * gl_WorldRayDirectionEXT.z;
    float _1345;
    if (_584)
    {
        float _1311 = (_547 * _532) - (_544 * _535);
        float _1314 = (_541 * _535) - (_547 * _529);
        float _1317 = (_544 * _529) - (_541 * _532);
        float _1343 = ((log2((((float(_1294.y) * 0.5) * float(_1294.x)) * abs((_502 * _496) - (_501 * _498))) / (sqrt(((_1314 * _1314) + (_1317 * _1317)) + (_1311 * _1311)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_120) / abs(dot(vec3(_1299, _1300, _1301), vec3(_560, _562, _563))));
        _1345 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
    }
    else
    {
        _1345 = 0.0;
    }
    vec4 _1347 = textureLod(sampler2D(M_VirtualMonitor_Item_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _548) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _549) + cbTextureTilingScale._m0[1u].w), _1345);
    float _1359 = (_1347.x * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].x;
    float _1361 = (_1347.y * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].y;
    float _1363 = (_1347.z * cbMtdParam._m0[14u].w) * cbMtdParam._m0[11u].z;
    float _1379 = inversesqrt(dot(vec3(_560, _562, _563), vec3(_560, _562, _563)));
    float _1380 = _1379 * _560;
    float _1381 = _1379 * _562;
    float _1382 = _1379 * _563;
    float _1394 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1395 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1396 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1397 = (-0.0) - _1299;
    float _1398 = (-0.0) - _1300;
    float _1399 = (-0.0) - _1301;
    float _1405 = float(gl_LaunchIDEXT.x);
    float _1406 = float(gl_LaunchIDEXT.y);
    float _1409 = float(gl_LaunchSizeEXT.x);
    float _1423 = fract(fract(sin(dot(vec2(_1405 / _1409, _1406 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1436 = fract(fract(sin(dot(vec2((_1405 + 128.0) / _1409, (_1406 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _69._m0 = 1u;
    uvec4 _1446 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1447 = _1446.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1447, _1446.w, _1447, vec3(_1394, _1395, _1396), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1512;
    float _1513;
    float _1514;
    if (_69._m0 == 0u)
    {
        float _1467 = g_sceneCB._m0[4u].x - _1299;
        float _1468 = g_sceneCB._m0[4u].y - _1300;
        float _1469 = g_sceneCB._m0[4u].z - _1301;
        float _1473 = inversesqrt(dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469)));
        float _1477 = dot(vec3(_1380, _1381, _1382), vec3(g_sceneCB._m0[4u].xyz));
        float _1841 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1480 = isnan(1.0) ? _1841 : (isnan(_1841) ? 1.0 : min(_1841, 1.0));
        float _1481 = dot(vec3(_1380, _1381, _1382), vec3(_1397, _1398, _1399));
        float _1852 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1485 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1467 * _1473, _1468 * _1473, _1469 * _1473));
        float _1863 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1496 = (exp2(log2(1.0 - (isnan(1.0) ? _1863 : (isnan(_1863) ? 1.0 : min(_1863, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1502 = (0.5 / ((_1480 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1852 : (isnan(_1852) ? 1.0 : min(_1852, 1.0))))) * _1480;
        float _1874 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1504 = (isnan(1.0) ? _1874 : (isnan(_1874) ? 1.0 : min(_1874, 1.0))) * 0.31831014156341552734375;
        _1512 = (_1496 * g_sceneCB._m0[5u].x) * _1504;
        _1513 = (_1496 * g_sceneCB._m0[5u].y) * _1504;
        _1514 = (_1496 * g_sceneCB._m0[5u].z) * _1504;
    }
    else
    {
        _1512 = 0.0;
        _1513 = 0.0;
        _1514 = 0.0;
    }
    bool _1516 = abs(_1381) < 0.89999997615814208984375;
    float _1518 = float(_1516);
    float _1519 = _1516 ? 0.0 : 1.0;
    float _1522 = (_1518 * _1382) - (_1519 * _1381);
    float _1523 = _1519 * _1380;
    float _1525 = (-0.0) - (_1380 * _1518);
    float _1529 = inversesqrt(dot(vec3(_1522, _1523, _1525), vec3(_1522, _1523, _1525)));
    float _1530 = _1522 * _1529;
    float _1531 = _1523 * _1529;
    float _1532 = _1529 * _1525;
    float _1535 = (_1531 * _1382) - (_1532 * _1381);
    float _1538 = (_1532 * _1380) - (_1530 * _1382);
    float _1541 = (_1530 * _1381) - (_1531 * _1380);
    float _1543;
    float _1551;
    float _1542 = 0.0;
    uint _1544 = 0u;
    float _1548;
    bool _1550;
    for (;;)
    {
        _1548 = (float(_1544) + _1423) * 0.03125;
        _1550 = _1544 == 0u;
        float frontier_phi_55_pred;
        if (_1550)
        {
            frontier_phi_55_pred = 0.0;
        }
        else
        {
            float _1674;
            float _1675;
            uint _1677;
            _1674 = 0.0;
            _1675 = 0.5;
            _1677 = _1544;
            float _1552;
            for (;;)
            {
                _1552 = ((_1677 & 1u) != 0u) ? (_1675 + _1674) : _1674;
                uint _1678 = _1677 >> 1u;
                if (_1678 == 0u)
                {
                    break;
                }
                else
                {
                    _1674 = _1552;
                    _1675 *= 0.5;
                    _1677 = _1678;
                }
            }
            frontier_phi_55_pred = _1552;
        }
        _1551 = frontier_phi_55_pred;
        float _1553 = _1551 + _1436;
        float _1557 = sqrt(_1548);
        float _1558 = ((_1553 > 1.0) ? (_1553 + (-1.0)) : _1553) * 6.283185482025146484375;
        float _1561 = cos(_1558) * _1557;
        float _1563 = sin(_1558) * _1557;
        float _1565 = sqrt(1.0 - _1548);
        float _1578 = ((_1565 * _1380) + (_1561 * _1535)) + (_1563 * _1530);
        float _1579 = ((_1565 * _1381) + (_1561 * _1538)) + (_1563 * _1531);
        float _1580 = ((_1565 * _1382) + (_1561 * _1541)) + (_1563 * _1532);
        _68._m0 = 1u;
        uvec4 _1584 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1585 = _1584.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1585, _1584.w, _1585, vec3(_1394, _1395, _1396), 9.9999997473787516355514526367188e-05, vec3(_1578, _1579, _1580), 10000.0, 1);
        float _1591 = dot(vec3(_1380, _1381, _1382), vec3(_1578, _1579, _1580));
        float _1885 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1594 = isnan(1.0) ? _1885 : (isnan(_1885) ? 1.0 : min(_1885, 1.0));
        _1543 = ((float(_68._m0 == 0u) * _1594) / (_1594 * 0.3183098733425140380859375)) + _1542;
        uint _1545 = _1544 + 1u;
        if (_1545 == 32u)
        {
            break;
        }
        else
        {
            _1542 = _1543;
            _1544 = _1545;
            continue;
        }
    }
    float _1603 = _1543 * 0.009947183541953563690185546875;
    float _1608 = dot(vec3(_1299, _1300, _1301), vec3(_1380, _1381, _1382)) * 2.0;
    vec4 _1620 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1299 - (_1608 * _1380), _1300 - (_1608 * _1381), _1301 - (_1608 * _1382)), 4.0);
    float _1625 = dot(vec3(_1397, _1398, _1399), vec3(_1380, _1381, _1382));
    float _1896 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
    float _1634 = (exp2(log2(1.0 - (isnan(1.0) ? _1896 : (isnan(_1896) ? 1.0 : min(_1896, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1643 = (((((_1359 - _1280) - (_1359 * _670)) * _671) + _1280) + _1512) + ((_1620.x * _1603) * _1634);
    float _1646 = (((((_1361 - _1281) - (_1361 * _670)) * _671) + _1281) + _1513) + ((_1620.y * _1603) * _1634);
    float _1649 = (((((_1363 - _1282) - (_1363 * _670)) * _671) + _1282) + _1514) + ((_1620.z * _1603) * _1634);
    float _1907 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
    float _1918 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
    float _1929 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
    bool _1657 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1668;
    _1668.x = _1657 ? ((_553 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1907 : (isnan(_1907) ? 1.0 : min(_1907, 1.0)));
    _1668.y = _1657 ? ((_556 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1918 : (isnan(_1918) ? 1.0 : min(_1918, 1.0)));
    _1668.z = _1657 ? ((_559 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1929 : (isnan(_1929) ? 1.0 : min(_1929, 1.0)));
    payload._m0 = _1668;
}


