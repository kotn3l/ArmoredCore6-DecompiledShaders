#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _65
{
    vec3 _m0;
};

struct _69
{
    vec2 _m0;
};

struct _72
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(location = 0) rayPayloadInEXT _65 payload;
hitAttributeEXT _69 hit;
layout(location = 1) rayPayloadEXT _72 _74;
layout(location = 2) rayPayloadEXT _72 _75;

vec3 _2131;

void main()
{
    float _83 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _83)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _224 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _225 = _224.x;
    bool _239 = _183 == 0u;
    uint _240;
    if (_239)
    {
        _240 = _216 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _216 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _216 + 12u;
        }
        _240 = frontier_phi_9_10_ladder;
    }
    uint _244 = _184 ? (_240 + 4u) : _240;
    uvec4 _248 = texelFetch(l_geomAttrib_0, int(((_188 + 4u) + _244) >> 2u));
    uint _249 = _248.x;
    float _253 = float(int(uint(int(_249 << 16u) >> int(16u))));
    float _254 = float(int(uint(int(_249) >> int(16u))));
    uint _262 = _182 * _176;
    uint _263 = _262 + 12u;
    uint _284;
    uint _285;
    uint _286;
    uint _287;
    if (_187)
    {
        uvec4 _265 = texelFetch(l_geomAttrib_0, int(_263 >> 2u));
        uint _266 = _265.x;
        _284 = _266 & 255u;
        _285 = (_266 >> 8u) & 255u;
        _286 = (_266 >> 16u) & 255u;
        _287 = 16u;
    }
    else
    {
        uint _272 = _263 >> 2u;
        uvec2 _278 = uvec2(texelFetch(l_geomAttrib_0, int(_272)).x, texelFetch(l_geomAttrib_0, int(_272 + 1u)).x);
        uint _279 = _278.x;
        _284 = _279 & 65535u;
        _285 = _279 >> 16u;
        _286 = _278.y & 65535u;
        _287 = 20u;
    }
    uvec4 _293 = texelFetch(l_geomAttrib_0, int((_287 + _262) >> 2u));
    uint _294 = _293.x;
    uint _306;
    if (_239)
    {
        _306 = _287 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _287 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _287 + 12u;
        }
        _306 = frontier_phi_16_17_ladder;
    }
    uint _310 = _184 ? (_306 + 4u) : _306;
    uvec4 _314 = texelFetch(l_geomAttrib_0, int(((_262 + 4u) + _310) >> 2u));
    uint _315 = _314.x;
    float _319 = float(int(uint(int(_315 << 16u) >> int(16u))));
    float _320 = float(int(uint(int(_315) >> int(16u))));
    uint _328 = _182 * _177;
    uint _329 = _328 + 12u;
    uint _350;
    uint _351;
    uint _352;
    uint _353;
    if (_187)
    {
        uvec4 _331 = texelFetch(l_geomAttrib_0, int(_329 >> 2u));
        uint _332 = _331.x;
        _350 = _332 & 255u;
        _351 = (_332 >> 8u) & 255u;
        _352 = (_332 >> 16u) & 255u;
        _353 = 16u;
    }
    else
    {
        uint _338 = _329 >> 2u;
        uvec2 _344 = uvec2(texelFetch(l_geomAttrib_0, int(_338)).x, texelFetch(l_geomAttrib_0, int(_338 + 1u)).x);
        uint _345 = _344.x;
        _350 = _345 & 65535u;
        _351 = _345 >> 16u;
        _352 = _344.y & 65535u;
        _353 = 20u;
    }
    uvec4 _359 = texelFetch(l_geomAttrib_0, int((_353 + _328) >> 2u));
    uint _360 = _359.x;
    uint _372;
    if (_239)
    {
        _372 = _353 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _353 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _353 + 12u;
        }
        _372 = frontier_phi_23_24_ladder;
    }
    uint _376 = _184 ? (_372 + 4u) : _372;
    uvec4 _380 = texelFetch(l_geomAttrib_0, int(((_328 + 4u) + _376) >> 2u));
    uint _381 = _380.x;
    float _385 = float(int(uint(int(_381 << 16u) >> int(16u))));
    float _386 = float(int(uint(int(_381) >> int(16u))));
    bool _395 = _133.z == 0u;
    float _431;
    float _432;
    float _433;
    if (_395)
    {
        uint _398 = _174 * 3u;
        uvec3 _407 = uvec3(texelFetch(l_geomPositionBuffer, int(_398)).x, texelFetch(l_geomPositionBuffer, int(_398 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_398 + 2u)).x);
        _431 = uintBitsToFloat(_407.x);
        _432 = uintBitsToFloat(_407.y);
        _433 = uintBitsToFloat(_407.z);
    }
    else
    {
        uint _415 = _174 * 2u;
        uvec2 _421 = uvec2(texelFetch(l_geomPositionBuffer, int(_415)).x, texelFetch(l_geomPositionBuffer, int(_415 + 1u)).x);
        uint _422 = _421.x;
        _431 = unpackHalf2x16(_422).x;
        _432 = unpackHalf2x16(_422 >> 16u).x;
        _433 = unpackHalf2x16(_421.y).x;
    }
    float _469;
    float _470;
    float _471;
    if (_395)
    {
        uint _436 = _176 * 3u;
        uvec3 _445 = uvec3(texelFetch(l_geomPositionBuffer, int(_436)).x, texelFetch(l_geomPositionBuffer, int(_436 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_436 + 2u)).x);
        _469 = uintBitsToFloat(_445.x);
        _470 = uintBitsToFloat(_445.y);
        _471 = uintBitsToFloat(_445.z);
    }
    else
    {
        uint _453 = _176 * 2u;
        uvec2 _459 = uvec2(texelFetch(l_geomPositionBuffer, int(_453)).x, texelFetch(l_geomPositionBuffer, int(_453 + 1u)).x);
        uint _460 = _459.x;
        _469 = unpackHalf2x16(_460).x;
        _470 = unpackHalf2x16(_460 >> 16u).x;
        _471 = unpackHalf2x16(_459.y).x;
    }
    float _507;
    float _508;
    float _509;
    if (_395)
    {
        uint _474 = _177 * 3u;
        uvec3 _483 = uvec3(texelFetch(l_geomPositionBuffer, int(_474)).x, texelFetch(l_geomPositionBuffer, int(_474 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_474 + 2u)).x);
        _507 = uintBitsToFloat(_483.x);
        _508 = uintBitsToFloat(_483.y);
        _509 = uintBitsToFloat(_483.z);
    }
    else
    {
        uint _491 = _177 * 2u;
        uvec2 _497 = uvec2(texelFetch(l_geomPositionBuffer, int(_491)).x, texelFetch(l_geomPositionBuffer, int(_491 + 1u)).x);
        uint _498 = _497.x;
        _507 = unpackHalf2x16(_498).x;
        _508 = unpackHalf2x16(_498 >> 16u).x;
        _509 = unpackHalf2x16(_497.y).x;
    }
    float _512 = (1.0 - hit._m0.x) - hit._m0.y;
    float _551 = (_319 - _253) * 0.00048828125;
    float _553 = (_320 - _254) * 0.00048828125;
    float _556 = (_385 - _253) * 0.00048828125;
    float _557 = (_386 - _254) * 0.00048828125;
    float _579 = _469 - _431;
    float _580 = _470 - _432;
    float _581 = _471 - _433;
    float _584 = fma(_581, gl_ObjectToWorldEXT[2u].x, fma(_580, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _579));
    float _587 = fma(_581, gl_ObjectToWorldEXT[2u].y, fma(_580, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _579));
    float _590 = fma(_581, gl_ObjectToWorldEXT[2u].z, fma(_580, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _579));
    float _591 = _507 - _431;
    float _592 = _508 - _432;
    float _593 = _509 - _433;
    float _596 = fma(_593, gl_ObjectToWorldEXT[2u].x, fma(_592, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _591));
    float _599 = fma(_593, gl_ObjectToWorldEXT[2u].y, fma(_592, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _591));
    float _602 = fma(_593, gl_ObjectToWorldEXT[2u].z, fma(_592, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _591));
    float _603 = (((_319 * hit._m0.x) + (_253 * _512)) + (_385 * hit._m0.y)) * 0.00048828125;
    float _604 = (((_320 * hit._m0.x) + (_254 * _512)) + (_386 * hit._m0.y)) * 0.00048828125;
    float _608 = (((float(_213) * _512) + (-127.0)) + (float(_284) * hit._m0.x)) + (float(_350) * hit._m0.y);
    float _611 = (((float(_214) * _512) + (-127.0)) + (float(_285) * hit._m0.x)) + (float(_351) * hit._m0.y);
    float _614 = (((float(_215) * _512) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_352) * hit._m0.y);
    float _615 = _608 * 0.0078740157186985015869140625;
    float _617 = _611 * 0.0078740157186985015869140625;
    float _618 = _614 * 0.0078740157186985015869140625;
    float _631 = ((((float(_225 & 255u) * _512) + (-127.0)) + (float(_294 & 255u) * hit._m0.x)) + (float(_360 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _632 = ((((float((_225 >> 8u) & 255u) * _512) + (-127.0)) + (float((_294 >> 8u) & 255u) * hit._m0.x)) + (float((_360 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _633 = ((((float((_225 >> 16u) & 255u) * _512) + (-127.0)) + (float((_294 >> 16u) & 255u) * hit._m0.x)) + (float((_360 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _634 = ((((float(_225 >> 24u) * _512) + (-127.0)) + (float(_294 >> 24u) * hit._m0.x)) + (float(_360 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _644 = ((_632 * _618) - (_633 * _617)) * _634;
    float _645 = ((_633 * _615) - (_631 * _618)) * _634;
    float _646 = ((_631 * _617) - (_632 * _615)) * _634;
    float _650 = inversesqrt(dot(vec3(_644, _645, _646), vec3(_644, _645, _646)));
    uvec2 _665 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_0, int(0u)));
    bool _670 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _723;
    if (_670)
    {
        float _681 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _687 = (_602 * _587) - (_599 * _590);
        float _690 = (_596 * _590) - (_602 * _584);
        float _693 = (_599 * _584) - (_596 * _587);
        float _720 = ((log2((((float(_665.y) * 0.5) * float(_665.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_690 * _690) + (_693 * _693)) + (_687 * _687)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_681 * gl_WorldRayDirectionEXT.x, _681 * gl_WorldRayDirectionEXT.y, _681 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _723 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    }
    else
    {
        _723 = 0.0;
    }
    vec4 _727 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * _603) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _604) + cbTextureTilingScale._m0[0u].w), _723);
    uvec2 _750 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_3, int(0u)));
    float _801;
    if (_670)
    {
        float _761 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _767 = (_602 * _587) - (_599 * _590);
        float _770 = (_596 * _590) - (_602 * _584);
        float _773 = (_599 * _584) - (_596 * _587);
        float _799 = ((log2((((float(_750.y) * 0.5) * float(_750.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_770 * _770) + (_773 * _773)) + (_767 * _767)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_761 * gl_WorldRayDirectionEXT.x, _761 * gl_WorldRayDirectionEXT.y, _761 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _801 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    }
    else
    {
        _801 = 0.0;
    }
    float _807 = cbMtdParam._m0[10u].y * textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * _603) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _604) + cbTextureTilingScale._m0[7u].w), _801).x;
    float _817 = ((cbMtdParam._m0[9u].x * (-1.39999997615814208984375)) * (((1.0 - _727.x) * 2.0) - _807)) + 1.0;
    float _2241 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _818 = isnan(1.0) ? _2241 : (isnan(_2241) ? 1.0 : min(_2241, 1.0));
    uvec2 _830 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_1, int(0u)));
    float _881;
    if (_670)
    {
        float _841 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _847 = (_602 * _587) - (_599 * _590);
        float _850 = (_596 * _590) - (_602 * _584);
        float _853 = (_599 * _584) - (_596 * _587);
        float _879 = ((log2((((float(_830.y) * 0.5) * float(_830.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_850 * _850) + (_853 * _853)) + (_847 * _847)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_841 * gl_WorldRayDirectionEXT.x, _841 * gl_WorldRayDirectionEXT.y, _841 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _881 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    }
    else
    {
        _881 = 0.0;
    }
    vec4 _884 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _603) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _604) + cbTextureTilingScale._m0[1u].w), _881);
    float _886 = _884.x;
    float _887 = _884.y;
    float _888 = _884.z;
    uvec2 _900 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_2, int(0u)));
    float _951;
    if (_670)
    {
        float _911 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _917 = (_602 * _587) - (_599 * _590);
        float _920 = (_596 * _590) - (_602 * _584);
        float _923 = (_599 * _584) - (_596 * _587);
        float _949 = ((log2((((float(_900.y) * 0.5) * float(_900.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_920 * _920) + (_923 * _923)) + (_917 * _917)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_911 * gl_WorldRayDirectionEXT.x, _911 * gl_WorldRayDirectionEXT.y, _911 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _951 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    }
    else
    {
        _951 = 0.0;
    }
    vec4 _953 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * _603) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _604) + cbTextureTilingScale._m0[6u].w), _951);
    float _964 = ((_953.x - _886) * _818) + _886;
    float _965 = ((_953.y - _887) * _818) + _887;
    float _966 = ((_953.z - _888) * _818) + _888;
    float _972 = (((((1.0 - _727.y) * 2.0) - _807) * (-1.39999997615814208984375)) * cbMtdParam._m0[9u].w) + 1.0;
    float _2262 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _973 = isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0));
    uvec2 _985 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_8, int(0u)));
    float _1036;
    if (_670)
    {
        float _996 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1002 = (_602 * _587) - (_599 * _590);
        float _1005 = (_596 * _590) - (_602 * _584);
        float _1008 = (_599 * _584) - (_596 * _587);
        float _1034 = ((log2((((float(_985.y) * 0.5) * float(_985.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1005 * _1005) + (_1008 * _1008)) + (_1002 * _1002)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_996 * gl_WorldRayDirectionEXT.x, _996 * gl_WorldRayDirectionEXT.y, _996 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1036 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    }
    else
    {
        _1036 = 0.0;
    }
    vec4 _1038 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _603) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _604) + cbTextureTilingScale._m0[12u].w), _1036);
    float _1049 = ((_1038.x - _964) * _973) + _964;
    float _1050 = ((_1038.y - _965) * _973) + _965;
    float _1051 = ((_1038.z - _966) * _973) + _966;
    float _1057 = (((((1.0 - _727.z) * 2.0) - _807) * (-1.39999997615814208984375)) * cbMtdParam._m0[10u].x) + 1.0;
    float _2278 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _1058 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
    uvec2 _1070 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_11, int(0u)));
    float _1121;
    if (_670)
    {
        float _1081 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1087 = (_602 * _587) - (_599 * _590);
        float _1090 = (_596 * _590) - (_602 * _584);
        float _1093 = (_599 * _584) - (_596 * _587);
        float _1119 = ((log2((((float(_1070.y) * 0.5) * float(_1070.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1090 * _1090) + (_1093 * _1093)) + (_1087 * _1087)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1081 * gl_WorldRayDirectionEXT.x, _1081 * gl_WorldRayDirectionEXT.y, _1081 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1121 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    }
    else
    {
        _1121 = 0.0;
    }
    vec4 _1123 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _603) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _604) + cbTextureTilingScale._m0[2u].w), _1121);
    float _1134 = ((_1123.x - _1049) * _1058) + _1049;
    float _1135 = ((_1123.y - _1050) * _1058) + _1050;
    float _1136 = ((_1123.z - _1051) * _1058) + _1051;
    float _1143 = (((((((float(texelFetch(l_geomAttrib_0, int(((_262 + 8u) + _310) >> 2u)).x & 255u) * hit._m0.x) + (float(texelFetch(l_geomAttrib_0, int(((_188 + 8u) + _244) >> 2u)).x & 255u) * _512)) + (float(texelFetch(l_geomAttrib_0, int(((_328 + 8u) + _376) >> 2u)).x & 255u) * hit._m0.y)) * 0.007843137718737125396728515625) - _807) * (-1.39999997615814208984375)) * cbMtdParam._m0[9u].y) + 1.0;
    float _2294 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
    float _1144 = isnan(1.0) ? _2294 : (isnan(_2294) ? 1.0 : min(_2294, 1.0));
    uvec2 _1157 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_9, int(0u)));
    float _1208;
    if (_670)
    {
        float _1168 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1174 = (_602 * _587) - (_599 * _590);
        float _1177 = (_596 * _590) - (_602 * _584);
        float _1180 = (_599 * _584) - (_596 * _587);
        float _1206 = ((log2((((float(_1157.y) * 0.5) * float(_1157.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1177 * _1177) + (_1180 * _1180)) + (_1174 * _1174)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1168 * gl_WorldRayDirectionEXT.x, _1168 * gl_WorldRayDirectionEXT.y, _1168 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1208 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
    }
    else
    {
        _1208 = 0.0;
    }
    vec4 _1210 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _603) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _604) + cbTextureTilingScale._m0[13u].w), _1208);
    uvec2 _1235 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_13, int(0u)));
    float _1286;
    if (_670)
    {
        float _1246 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1252 = (_602 * _587) - (_599 * _590);
        float _1255 = (_596 * _590) - (_602 * _584);
        float _1258 = (_599 * _584) - (_596 * _587);
        float _1284 = ((log2((((float(_1235.y) * 0.5) * float(_1235.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1255 * _1255) + (_1258 * _1258)) + (_1252 * _1252)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1246 * gl_WorldRayDirectionEXT.x, _1246 * gl_WorldRayDirectionEXT.y, _1246 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1286 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
    }
    else
    {
        _1286 = 0.0;
    }
    vec4 _1288 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_13, SS_ClampAniso), vec2((cbTextureTilingScale._m0[3u].x * _603) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _604) + cbTextureTilingScale._m0[3u].w), _1286);
    float _1295 = ((((_1210.x - _1134) * _1144) + _1134) * 4.55000019073486328125) * _1288.x;
    float _1297 = ((((_1210.y - _1135) * _1144) + _1135) * 4.55000019073486328125) * _1288.y;
    float _1299 = ((((_1210.z - _1136) * _1144) + _1136) * 4.55000019073486328125) * _1288.z;
    uvec2 _1311 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_5, int(0u)));
    float _1362;
    if (_670)
    {
        float _1322 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1328 = (_602 * _587) - (_599 * _590);
        float _1331 = (_596 * _590) - (_602 * _584);
        float _1334 = (_599 * _584) - (_596 * _587);
        float _1360 = ((log2((((float(_1311.y) * 0.5) * float(_1311.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1331 * _1331) + (_1334 * _1334)) + (_1328 * _1328)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1322 * gl_WorldRayDirectionEXT.x, _1322 * gl_WorldRayDirectionEXT.y, _1322 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1362 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
    }
    else
    {
        _1362 = 0.0;
    }
    vec4 _1365 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _603) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _604) + cbTextureTilingScale._m0[9u].w), _1362);
    float _1367 = _1365.x;
    float _1368 = _1365.y;
    float _1369 = _1365.z;
    uvec2 _1381 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_6, int(0u)));
    float _1432;
    if (_670)
    {
        float _1392 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1398 = (_602 * _587) - (_599 * _590);
        float _1401 = (_596 * _590) - (_602 * _584);
        float _1404 = (_599 * _584) - (_596 * _587);
        float _1430 = ((log2((((float(_1381.y) * 0.5) * float(_1381.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1401 * _1401) + (_1404 * _1404)) + (_1398 * _1398)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1392 * gl_WorldRayDirectionEXT.x, _1392 * gl_WorldRayDirectionEXT.y, _1392 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1432 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
    }
    else
    {
        _1432 = 0.0;
    }
    vec4 _1434 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _603) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _604) + cbTextureTilingScale._m0[10u].w), _1432);
    float _1445 = ((_1434.x - _1367) * _818) + _1367;
    float _1446 = ((_1434.y - _1368) * _818) + _1368;
    float _1447 = ((_1434.z - _1369) * _818) + _1369;
    uvec2 _1459 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_15, int(0u)));
    float _1510;
    if (_670)
    {
        float _1470 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1476 = (_602 * _587) - (_599 * _590);
        float _1479 = (_596 * _590) - (_602 * _584);
        float _1482 = (_599 * _584) - (_596 * _587);
        float _1508 = ((log2((((float(_1459.y) * 0.5) * float(_1459.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1479 * _1479) + (_1482 * _1482)) + (_1476 * _1476)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1470 * gl_WorldRayDirectionEXT.x, _1470 * gl_WorldRayDirectionEXT.y, _1470 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1510 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    }
    else
    {
        _1510 = 0.0;
    }
    vec4 _1512 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _603) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _604) + cbTextureTilingScale._m0[4u].w), _1510);
    float _1523 = ((_1512.x - _1445) * _973) + _1445;
    float _1524 = ((_1512.y - _1446) * _973) + _1446;
    float _1525 = ((_1512.z - _1447) * _973) + _1447;
    uvec2 _1538 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_16, int(0u)));
    float _1589;
    if (_670)
    {
        float _1549 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1555 = (_602 * _587) - (_599 * _590);
        float _1558 = (_596 * _590) - (_602 * _584);
        float _1561 = (_599 * _584) - (_596 * _587);
        float _1587 = ((log2((((float(_1538.y) * 0.5) * float(_1538.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1558 * _1558) + (_1561 * _1561)) + (_1555 * _1555)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1549 * gl_WorldRayDirectionEXT.x, _1549 * gl_WorldRayDirectionEXT.y, _1549 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1589 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
    }
    else
    {
        _1589 = 0.0;
    }
    vec4 _1591 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * _603) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _604) + cbTextureTilingScale._m0[5u].w), _1589);
    float _1602 = ((_1591.x - _1523) * _1058) + _1523;
    float _1603 = ((_1591.y - _1524) * _1058) + _1524;
    float _1604 = ((_1591.z - _1525) * _1058) + _1525;
    uvec2 _1616 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_4, int(0u)));
    float _1667;
    if (_670)
    {
        float _1627 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1633 = (_602 * _587) - (_599 * _590);
        float _1636 = (_596 * _590) - (_602 * _584);
        float _1639 = (_599 * _584) - (_596 * _587);
        float _1665 = ((log2((((float(_1616.y) * 0.5) * float(_1616.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1636 * _1636) + (_1639 * _1639)) + (_1633 * _1633)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1627 * gl_WorldRayDirectionEXT.x, _1627 * gl_WorldRayDirectionEXT.y, _1627 * gl_WorldRayDirectionEXT.z), vec3(_615, _617, _618))));
        _1667 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
    }
    else
    {
        _1667 = 0.0;
    }
    vec4 _1669 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * _603) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _604) + cbTextureTilingScale._m0[8u].w), _1667);
    float _1682 = ((_1669.z - _1604) * _1144) + _1604;
    float _1685 = ((((_1669.x - _1602) * _1144) + _1602) * 2.0) + (-1.0);
    float _1687 = ((((_1669.y - _1603) * _1144) + _1603) * 2.0) + (-1.0);
    float _1688 = dot(vec2(_1685, _1687), vec2(_1685, _1687));
    float _2340 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
    float _1693 = sqrt(1.0 - (isnan(1.0) ? _2340 : (isnan(_2340) ? 1.0 : min(_2340, 1.0))));
    uvec2 _1706 = uvec2(textureSize(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_7, int(0u)));
    float _1710 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1711 = _1710 * gl_WorldRayDirectionEXT.x;
    float _1712 = _1710 * gl_WorldRayDirectionEXT.y;
    float _1713 = _1710 * gl_WorldRayDirectionEXT.z;
    float _1757;
    if (_670)
    {
        float _1723 = (_602 * _587) - (_599 * _590);
        float _1726 = (_596 * _590) - (_602 * _584);
        float _1729 = (_599 * _584) - (_596 * _587);
        float _1755 = ((log2((((float(_1706.y) * 0.5) * float(_1706.x)) * abs((_557 * _551) - (_556 * _553))) / (sqrt(((_1726 * _1726) + (_1729 * _1729)) + (_1723 * _1723)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1711, _1712, _1713), vec3(_615, _617, _618))));
        _1757 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
    }
    else
    {
        _1757 = 0.0;
    }
    vec4 _1759 = textureLod(sampler2D(M_AMSN_V_Mb5_3Mask_Ov_AN_snp_0_Texture2D_7, SS_ClampAniso), vec2((cbTextureTilingScale._m0[11u].x * _603) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _604) + cbTextureTilingScale._m0[11u].w), _1757);
    float _1769 = (((_1759.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z) + _1685;
    float _1770 = (((_1759.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z) + _1687;
    float _1773 = fma(_1693, _615, fma(_1770, _631, (_650 * _644) * _1769));
    float _1776 = fma(_1693, _617, fma(_1770, _632, (_650 * _645) * _1769));
    float _1779 = fma(_1693, _618, fma(_1770, _633, (_650 * _646) * _1769));
    float _1783 = inversesqrt(dot(vec3(_1773, _1776, _1779), vec3(_1773, _1776, _1779)));
    float _1784 = _1783 * _1773;
    float _1785 = _1783 * _1776;
    float _1786 = _1783 * _1779;
    float _1798 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1799 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1800 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1801 = (-0.0) - _1711;
    float _1803 = (-0.0) - _1712;
    float _1804 = (-0.0) - _1713;
    float _1810 = float(gl_LaunchIDEXT.x);
    float _1811 = float(gl_LaunchIDEXT.y);
    float _1814 = float(gl_LaunchSizeEXT.x);
    float _1828 = fract(fract(sin(dot(vec2(_1810 / _1814, _1811 / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1841 = fract(fract(sin(dot(vec2((_1810 + 128.0) / _1814, (_1811 + 128.0) / _83), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _75._m0 = 1u;
    uvec4 _1851 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1852 = _1851.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1852, _1851.w, _1852, vec3(_1798, _1799, _1800), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    if (_75._m0 == 0u)
    {
        float _1872 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1784, _1785, _1786));
        float _2356 = isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0));
        float _1875 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
        float _1894 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1682) * 0.949999988079071044921875);
        float _1895 = _1894 * _1894;
        float _1896 = g_sceneCB._m0[4u].x - _1711;
        float _1897 = g_sceneCB._m0[4u].y - _1712;
        float _1898 = g_sceneCB._m0[4u].z - _1713;
        float _1902 = inversesqrt(dot(vec3(_1896, _1897, _1898), vec3(_1896, _1897, _1898)));
        float _1903 = _1902 * _1896;
        float _1904 = _1902 * _1897;
        float _1905 = _1902 * _1898;
        float _1906 = dot(vec3(_1784, _1785, _1786), vec3(g_sceneCB._m0[4u].xyz));
        float _2367 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1909 = isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0));
        float _1910 = dot(vec3(_1784, _1785, _1786), vec3(_1801, _1803, _1804));
        float _2378 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
        float _1913 = isnan(1.0) ? _2378 : (isnan(_2378) ? 1.0 : min(_2378, 1.0));
        float _1914 = dot(vec3(_1784, _1785, _1786), vec3(_1903, _1904, _1905));
        float _2389 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
        float _1917 = isnan(1.0) ? _2389 : (isnan(_2389) ? 1.0 : min(_2389, 1.0));
        float _1918 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1903, _1904, _1905));
        float _2400 = isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0));
        float _1922 = _1895 * _1895;
        float _1926 = ((_1917 * _1917) * (_1922 + (-1.0))) + 1.0;
        float _1938 = (exp2(log2(1.0 - (isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1940 = 1.0 - _1895;
        float _1951 = (0.5 / (((_1913 * ((_1909 * _1940) + _1895)) + 9.9999999392252902907785028219223e-09) + (((_1913 * _1940) + _1895) * _1909))) * _1909;
        float _2411 = isnan(0.0) ? _1951 : (isnan(_1951) ? 0.0 : max(_1951, 0.0));
        float _1953 = (isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0))) * (_1922 / ((_1926 * _1926) * 3.141590118408203125));
        _1960 = ((_1295 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1875;
        _1961 = ((_1297 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1875;
        _1962 = ((_1299 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1875;
        _1963 = (_1938 * g_sceneCB._m0[5u].x) * _1953;
        _1964 = (_1938 * g_sceneCB._m0[5u].y) * _1953;
        _1965 = (_1938 * g_sceneCB._m0[5u].z) * _1953;
    }
    else
    {
        _1960 = 0.0;
        _1961 = 0.0;
        _1962 = 0.0;
        _1963 = 0.0;
        _1964 = 0.0;
        _1965 = 0.0;
    }
    bool _1967 = abs(_1785) < 0.89999997615814208984375;
    float _1969 = float(_1967);
    float _1970 = _1967 ? 0.0 : 1.0;
    float _1973 = (_1969 * _1786) - (_1970 * _1785);
    float _1974 = _1970 * _1784;
    float _1976 = (-0.0) - (_1784 * _1969);
    float _1980 = inversesqrt(dot(vec3(_1973, _1974, _1976), vec3(_1973, _1974, _1976)));
    float _1981 = _1973 * _1980;
    float _1982 = _1974 * _1980;
    float _1983 = _1980 * _1976;
    float _1986 = (_1982 * _1786) - (_1983 * _1785);
    float _1989 = (_1983 * _1784) - (_1981 * _1786);
    float _1992 = (_1981 * _1785) - (_1982 * _1784);
    float _1994;
    float _2002;
    float _1993 = 0.0;
    uint _1995 = 0u;
    float _1999;
    bool _2001;
    for (;;)
    {
        _1999 = (float(_1995) + _1828) * 0.03125;
        _2001 = _1995 == 0u;
        float frontier_phi_67_pred;
        if (_2001)
        {
            frontier_phi_67_pred = 0.0;
        }
        else
        {
            float _2136;
            float _2137;
            uint _2139;
            _2136 = 0.0;
            _2137 = 0.5;
            _2139 = _1995;
            float _2003;
            for (;;)
            {
                _2003 = ((_2139 & 1u) != 0u) ? (_2137 + _2136) : _2136;
                uint _2140 = _2139 >> 1u;
                if (_2140 == 0u)
                {
                    break;
                }
                else
                {
                    _2136 = _2003;
                    _2137 *= 0.5;
                    _2139 = _2140;
                }
            }
            frontier_phi_67_pred = _2003;
        }
        _2002 = frontier_phi_67_pred;
        float _2004 = _2002 + _1841;
        float _2008 = sqrt(_1999);
        float _2009 = ((_2004 > 1.0) ? (_2004 + (-1.0)) : _2004) * 6.283185482025146484375;
        float _2012 = cos(_2009) * _2008;
        float _2014 = sin(_2009) * _2008;
        float _2016 = sqrt(1.0 - _1999);
        float _2029 = ((_2016 * _1784) + (_2012 * _1986)) + (_2014 * _1981);
        float _2030 = ((_2016 * _1785) + (_2012 * _1989)) + (_2014 * _1982);
        float _2031 = ((_2016 * _1786) + (_2012 * _1992)) + (_2014 * _1983);
        _74._m0 = 1u;
        uvec4 _2035 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _2036 = _2035.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _2036, _2035.w, _2036, vec3(_1798, _1799, _1800), 9.9999997473787516355514526367188e-05, vec3(_2029, _2030, _2031), 10000.0, 1);
        float _2042 = dot(vec3(_1784, _1785, _1786), vec3(_2029, _2030, _2031));
        float _2422 = isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0));
        float _2045 = isnan(1.0) ? _2422 : (isnan(_2422) ? 1.0 : min(_2422, 1.0));
        _1994 = ((float(_74._m0 == 0u) * _2045) / (_2045 * 0.3183098733425140380859375)) + _1993;
        uint _1996 = _1995 + 1u;
        if (_1996 == 32u)
        {
            break;
        }
        else
        {
            _1993 = _1994;
            _1995 = _1996;
            continue;
        }
    }
    float _2053 = _1994 * 0.009947183541953563690185546875;
    float _2058 = dot(vec3(_1711, _1712, _1713), vec3(_1784, _1785, _1786)) * 2.0;
    vec4 _2072 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1711 - (_2058 * _1784), _1712 - (_2058 * _1785), _1713 - (_2058 * _1786)), 4.0 - (_1682 * 4.0));
    float _2077 = dot(vec3(_1801, _1803, _1804), vec3(_1784, _1785, _1786));
    float _2433 = isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0));
    float _2086 = (exp2(log2(1.0 - (isnan(1.0) ? _2433 : (isnan(_2433) ? 1.0 : min(_2433, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _2092 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1784, _1785, _1786), 0.0);
    float _2103 = (_1963 + _1960) + (((_2092.x * _1295) + (_2086 * _2072.x)) * _2053);
    float _2107 = (_1964 + _1961) + (((_2092.y * _1297) + (_2086 * _2072.y)) * _2053);
    float _2111 = (_1965 + _1962) + (((_2092.z * _1299) + (_2086 * _2072.z)) * _2053);
    float _2444 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
    float _2455 = isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0));
    float _2466 = isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0));
    bool _2119 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2130;
    _2130.x = _2119 ? ((_608 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2444 : (isnan(_2444) ? 1.0 : min(_2444, 1.0)));
    _2130.y = _2119 ? ((_611 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2455 : (isnan(_2455) ? 1.0 : min(_2455, 1.0)));
    _2130.z = _2119 ? ((_614 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2466 : (isnan(_2466) ? 1.0 : min(_2466, 1.0)));
    payload._m0 = _2130;
}


