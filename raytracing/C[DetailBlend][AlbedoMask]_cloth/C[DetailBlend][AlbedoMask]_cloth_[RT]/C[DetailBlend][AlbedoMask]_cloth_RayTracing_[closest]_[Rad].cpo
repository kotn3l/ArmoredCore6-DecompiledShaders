#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _64
{
    vec3 _m0;
};

struct _68
{
    vec2 _m0;
};

struct _71
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_4;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 70) uniform usamplerBuffer l_geomAttrib_1;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _64 payload;
hitAttributeEXT _68 hit;
layout(location = 1) rayPayloadEXT _71 _73;
layout(location = 2) rayPayloadEXT _71 _74;

vec3 _2097;

void main()
{
    float _82 = float(gl_LaunchSizeEXT.y);
    float _112 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _113 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _121 = sqrt(((_113 * _113) + (_112 * _112)) + (_114 * _114)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _82)))));
    uvec4 _132 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _133 = _132.y;
    uint _173;
    uint _175;
    uint _176;
    if (_132.x == 0u)
    {
        uint _141 = (_133 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _150 = uvec3(texelFetch(l_geomIndexBuffer, int(_141)).x, texelFetch(l_geomIndexBuffer, int(_141 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_141 + 2u)).x);
        _173 = _150.x;
        _175 = _150.y;
        _176 = _150.z;
    }
    else
    {
        uint _154 = uint(gl_PrimitiveID) * 6u;
        uint _156 = _154 & 4294967292u;
        uint _159 = (_133 + _156) >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomIndexBuffer, int(_159)).x, texelFetch(l_geomIndexBuffer, int(_159 + 1u)).x);
        uint _167 = _166.x;
        uint _168 = _166.y;
        uint _170 = _167 >> 16u;
        uint _171 = _168 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_156 == _154)
        {
            frontier_phi_3_2_ladder = _170;
            frontier_phi_3_2_ladder_1 = _167 & 65535u;
            frontier_phi_3_2_ladder_2 = _171;
        }
        else
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _170;
            frontier_phi_3_2_ladder_2 = _168 >> 16u;
        }
        _173 = frontier_phi_3_2_ladder_1;
        _175 = frontier_phi_3_2_ladder;
        _176 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _180 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _181 = _180.x;
    uint _182 = _180.z;
    bool _183 = _182 != 0u;
    uint _184 = _132.w;
    bool _186 = _183 || (_184 == 0u);
    uint _187 = _181 * _173;
    uint _188 = _187 + 12u;
    uint _212;
    uint _213;
    uint _214;
    uint _215;
    if (_186)
    {
        uvec4 _191 = texelFetch(l_geomAttrib_0, int(_188 >> 2u));
        uint _192 = _191.x;
        _212 = _192 & 255u;
        _213 = (_192 >> 8u) & 255u;
        _214 = (_192 >> 16u) & 255u;
        _215 = 16u;
    }
    else
    {
        uint _200 = _188 >> 2u;
        uvec2 _206 = uvec2(texelFetch(l_geomAttrib_0, int(_200)).x, texelFetch(l_geomAttrib_0, int(_200 + 1u)).x);
        uint _207 = _206.x;
        _212 = _207 & 65535u;
        _213 = _207 >> 16u;
        _214 = _206.y & 65535u;
        _215 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_215 + _187) >> 2u));
    uint _224 = _223.x;
    uint _236 = _180.y;
    bool _237 = _182 == 0u;
    uint _240 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _249 = texelFetch(l_geomAttrib_1, int((((_236 * _173) + 4u) + (_183 ? (_240 + 4u) : _240)) >> 2u));
    uint _250 = _249.x;
    float _254 = float(int(uint(int(_250 << 16u) >> int(16u))));
    float _255 = float(int(uint(int(_250) >> int(16u))));
    uint _256 = _181 * _175;
    uint _257 = _256 + 12u;
    uint _278;
    uint _279;
    uint _280;
    uint _281;
    if (_186)
    {
        uvec4 _259 = texelFetch(l_geomAttrib_0, int(_257 >> 2u));
        uint _260 = _259.x;
        _278 = _260 & 255u;
        _279 = (_260 >> 8u) & 255u;
        _280 = (_260 >> 16u) & 255u;
        _281 = 16u;
    }
    else
    {
        uint _266 = _257 >> 2u;
        uvec2 _272 = uvec2(texelFetch(l_geomAttrib_0, int(_266)).x, texelFetch(l_geomAttrib_0, int(_266 + 1u)).x);
        uint _273 = _272.x;
        _278 = _273 & 65535u;
        _279 = _273 >> 16u;
        _280 = _272.y & 65535u;
        _281 = 20u;
    }
    uvec4 _287 = texelFetch(l_geomAttrib_0, int((_281 + _256) >> 2u));
    uint _288 = _287.x;
    uint _301 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _308 = texelFetch(l_geomAttrib_1, int((((_236 * _175) + 4u) + (_183 ? (_301 + 4u) : _301)) >> 2u));
    uint _309 = _308.x;
    float _313 = float(int(uint(int(_309 << 16u) >> int(16u))));
    float _314 = float(int(uint(int(_309) >> int(16u))));
    uint _315 = _181 * _176;
    uint _316 = _315 + 12u;
    uint _337;
    uint _338;
    uint _339;
    uint _340;
    if (_186)
    {
        uvec4 _318 = texelFetch(l_geomAttrib_0, int(_316 >> 2u));
        uint _319 = _318.x;
        _337 = _319 & 255u;
        _338 = (_319 >> 8u) & 255u;
        _339 = (_319 >> 16u) & 255u;
        _340 = 16u;
    }
    else
    {
        uint _325 = _316 >> 2u;
        uvec2 _331 = uvec2(texelFetch(l_geomAttrib_0, int(_325)).x, texelFetch(l_geomAttrib_0, int(_325 + 1u)).x);
        uint _332 = _331.x;
        _337 = _332 & 65535u;
        _338 = _332 >> 16u;
        _339 = _331.y & 65535u;
        _340 = 20u;
    }
    uvec4 _346 = texelFetch(l_geomAttrib_0, int((_340 + _315) >> 2u));
    uint _347 = _346.x;
    uint _360 = _237 ? 4u : ((_184 != 0u) ? 12u : 8u);
    uvec4 _367 = texelFetch(l_geomAttrib_1, int((((_236 * _176) + 4u) + (_183 ? (_360 + 4u) : _360)) >> 2u));
    uint _368 = _367.x;
    float _372 = float(int(uint(int(_368 << 16u) >> int(16u))));
    float _373 = float(int(uint(int(_368) >> int(16u))));
    bool _375 = _132.z == 0u;
    float _411;
    float _412;
    float _413;
    if (_375)
    {
        uint _378 = _173 * 3u;
        uvec3 _387 = uvec3(texelFetch(l_geomPositionBuffer, int(_378)).x, texelFetch(l_geomPositionBuffer, int(_378 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_378 + 2u)).x);
        _411 = uintBitsToFloat(_387.x);
        _412 = uintBitsToFloat(_387.y);
        _413 = uintBitsToFloat(_387.z);
    }
    else
    {
        uint _395 = _173 * 2u;
        uvec2 _401 = uvec2(texelFetch(l_geomPositionBuffer, int(_395)).x, texelFetch(l_geomPositionBuffer, int(_395 + 1u)).x);
        uint _402 = _401.x;
        _411 = unpackHalf2x16(_402).x;
        _412 = unpackHalf2x16(_402 >> 16u).x;
        _413 = unpackHalf2x16(_401.y).x;
    }
    float _449;
    float _450;
    float _451;
    if (_375)
    {
        uint _416 = _175 * 3u;
        uvec3 _425 = uvec3(texelFetch(l_geomPositionBuffer, int(_416)).x, texelFetch(l_geomPositionBuffer, int(_416 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_416 + 2u)).x);
        _449 = uintBitsToFloat(_425.x);
        _450 = uintBitsToFloat(_425.y);
        _451 = uintBitsToFloat(_425.z);
    }
    else
    {
        uint _433 = _175 * 2u;
        uvec2 _439 = uvec2(texelFetch(l_geomPositionBuffer, int(_433)).x, texelFetch(l_geomPositionBuffer, int(_433 + 1u)).x);
        uint _440 = _439.x;
        _449 = unpackHalf2x16(_440).x;
        _450 = unpackHalf2x16(_440 >> 16u).x;
        _451 = unpackHalf2x16(_439.y).x;
    }
    float _487;
    float _488;
    float _489;
    if (_375)
    {
        uint _454 = _176 * 3u;
        uvec3 _463 = uvec3(texelFetch(l_geomPositionBuffer, int(_454)).x, texelFetch(l_geomPositionBuffer, int(_454 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_454 + 2u)).x);
        _487 = uintBitsToFloat(_463.x);
        _488 = uintBitsToFloat(_463.y);
        _489 = uintBitsToFloat(_463.z);
    }
    else
    {
        uint _471 = _176 * 2u;
        uvec2 _477 = uvec2(texelFetch(l_geomPositionBuffer, int(_471)).x, texelFetch(l_geomPositionBuffer, int(_471 + 1u)).x);
        uint _478 = _477.x;
        _487 = unpackHalf2x16(_478).x;
        _488 = unpackHalf2x16(_478 >> 16u).x;
        _489 = unpackHalf2x16(_477.y).x;
    }
    float _492 = (1.0 - hit._m0.x) - hit._m0.y;
    float _526 = (_313 - _254) * 0.00048828125;
    float _528 = (_314 - _255) * 0.00048828125;
    float _531 = (_372 - _254) * 0.00048828125;
    float _532 = (_373 - _255) * 0.00048828125;
    float _554 = _449 - _411;
    float _555 = _450 - _412;
    float _556 = _451 - _413;
    float _559 = fma(_556, gl_ObjectToWorldEXT[2u].x, fma(_555, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _554));
    float _562 = fma(_556, gl_ObjectToWorldEXT[2u].y, fma(_555, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _554));
    float _565 = fma(_556, gl_ObjectToWorldEXT[2u].z, fma(_555, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _554));
    float _566 = _487 - _411;
    float _567 = _488 - _412;
    float _568 = _489 - _413;
    float _571 = fma(_568, gl_ObjectToWorldEXT[2u].x, fma(_567, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _566));
    float _574 = fma(_568, gl_ObjectToWorldEXT[2u].y, fma(_567, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _566));
    float _577 = fma(_568, gl_ObjectToWorldEXT[2u].z, fma(_567, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _566));
    float _578 = (((_313 * hit._m0.x) + (_254 * _492)) + (_372 * hit._m0.y)) * 0.00048828125;
    float _579 = (((_314 * hit._m0.x) + (_255 * _492)) + (_373 * hit._m0.y)) * 0.00048828125;
    float _583 = (((float(_212) * _492) + (-127.0)) + (float(_278) * hit._m0.x)) + (float(_337) * hit._m0.y);
    float _586 = (((float(_213) * _492) + (-127.0)) + (float(_279) * hit._m0.x)) + (float(_338) * hit._m0.y);
    float _589 = (((float(_214) * _492) + (-127.0)) + (float(_280) * hit._m0.x)) + (float(_339) * hit._m0.y);
    float _590 = _583 * 0.0078740157186985015869140625;
    float _592 = _586 * 0.0078740157186985015869140625;
    float _593 = _589 * 0.0078740157186985015869140625;
    float _606 = ((((float(_224 & 255u) * _492) + (-127.0)) + (float(_288 & 255u) * hit._m0.x)) + (float(_347 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _607 = ((((float((_224 >> 8u) & 255u) * _492) + (-127.0)) + (float((_288 >> 8u) & 255u) * hit._m0.x)) + (float((_347 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _608 = ((((float((_224 >> 16u) & 255u) * _492) + (-127.0)) + (float((_288 >> 16u) & 255u) * hit._m0.x)) + (float((_347 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _609 = ((((float(_224 >> 24u) * _492) + (-127.0)) + (float(_288 >> 24u) * hit._m0.x)) + (float(_347 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _619 = ((_607 * _593) - (_608 * _592)) * _609;
    float _620 = ((_608 * _590) - (_606 * _593)) * _609;
    float _621 = ((_606 * _592) - (_607 * _590)) * _609;
    float _625 = inversesqrt(dot(vec3(_619, _620, _621), vec3(_619, _620, _621)));
    uvec2 _640 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_7, int(0u)));
    bool _645 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _698;
    if (_645)
    {
        float _656 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _662 = (_577 * _562) - (_574 * _565);
        float _665 = (_571 * _565) - (_577 * _559);
        float _668 = (_574 * _559) - (_571 * _562);
        float _695 = ((log2((((float(_640.y) * 0.5) * float(_640.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_665 * _665) + (_668 * _668)) + (_662 * _662)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_656 * gl_WorldRayDirectionEXT.x, _656 * gl_WorldRayDirectionEXT.y, _656 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _698 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    }
    else
    {
        _698 = 0.0;
    }
    vec4 _702 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * _578) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _579) + cbTextureTilingScale._m0[12u].w), _698);
    float _710 = log2(0.0);
    float _712 = exp2(_710 * cbMtdParam._m0[20u].y);
    float _713 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _714 = isnan(1.0) ? _713 : (isnan(_713) ? 1.0 : min(_713, 1.0));
    uvec2 _727 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_0, int(0u)));
    float _778;
    if (_645)
    {
        float _738 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _744 = (_577 * _562) - (_574 * _565);
        float _747 = (_571 * _565) - (_577 * _559);
        float _750 = (_574 * _559) - (_571 * _562);
        float _776 = ((log2((((float(_727.y) * 0.5) * float(_727.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_747 * _747) + (_750 * _750)) + (_744 * _744)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_738 * gl_WorldRayDirectionEXT.x, _738 * gl_WorldRayDirectionEXT.y, _738 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _778 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    }
    else
    {
        _778 = 0.0;
    }
    vec4 _781 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * _578) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _579) + cbTextureTilingScale._m0[0u].w), _778);
    float _785 = _781.z;
    float _786 = _781.w;
    float _794 = exp2(log2(_785 * cbMtdParam._m0[20u].w) * cbMtdParam._m0[19u].y);
    float _795 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _796 = isnan(1.0) ? _795 : (isnan(_795) ? 1.0 : min(_795, 1.0));
    uvec2 _808 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_3, int(0u)));
    float _859;
    if (_645)
    {
        float _819 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _825 = (_577 * _562) - (_574 * _565);
        float _828 = (_571 * _565) - (_577 * _559);
        float _831 = (_574 * _559) - (_571 * _562);
        float _857 = ((log2((((float(_808.y) * 0.5) * float(_808.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_828 * _828) + (_831 * _831)) + (_825 * _825)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_819 * gl_WorldRayDirectionEXT.x, _819 * gl_WorldRayDirectionEXT.y, _819 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _859 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    }
    else
    {
        _859 = 0.0;
    }
    vec4 _861 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _578) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _579) + cbTextureTilingScale._m0[8u].w), _859);
    uvec2 _886 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_1, int(0u)));
    float _937;
    if (_645)
    {
        float _897 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _903 = (_577 * _562) - (_574 * _565);
        float _906 = (_571 * _565) - (_577 * _559);
        float _909 = (_574 * _559) - (_571 * _562);
        float _935 = ((log2((((float(_886.y) * 0.5) * float(_886.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_906 * _906) + (_909 * _909)) + (_903 * _903)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_897 * gl_WorldRayDirectionEXT.x, _897 * gl_WorldRayDirectionEXT.y, _897 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _937 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    }
    else
    {
        _937 = 0.0;
    }
    vec4 _939 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _578) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _579) + cbTextureTilingScale._m0[1u].w), _937);
    float _950 = cbMtdParam._m0[9u].x * _939.x;
    float _951 = cbMtdParam._m0[9u].y * _939.y;
    float _952 = cbMtdParam._m0[9u].z * _939.z;
    float _959 = (((cbMtdParam._m0[10u].x * _861.x) - _950) * _796) + _950;
    float _960 = (((cbMtdParam._m0[10u].y * _861.y) - _951) * _796) + _951;
    float _961 = (((cbMtdParam._m0[10u].z * _861.z) - _952) * _796) + _952;
    float _968 = exp2(log2(_786) * cbMtdParam._m0[21u].y);
    uvec2 _980 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_2, int(0u)));
    float _1031;
    if (_645)
    {
        float _991 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _997 = (_577 * _562) - (_574 * _565);
        float _1000 = (_571 * _565) - (_577 * _559);
        float _1003 = (_574 * _559) - (_571 * _562);
        float _1029 = ((log2((((float(_980.y) * 0.5) * float(_980.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1000 * _1000) + (_1003 * _1003)) + (_997 * _997)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_991 * gl_WorldRayDirectionEXT.x, _991 * gl_WorldRayDirectionEXT.y, _991 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1031 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    }
    else
    {
        _1031 = 0.0;
    }
    vec4 _1033 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * _578) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _579) + cbTextureTilingScale._m0[7u].w), _1031);
    float _1053 = (((cbMtdParam._m0[11u].x * _1033.x) - _959) * _968) + _959;
    float _1054 = (((cbMtdParam._m0[11u].y * _1033.y) - _960) * _968) + _960;
    float _1055 = (((cbMtdParam._m0[11u].z * _1033.z) - _961) * _968) + _961;
    uvec2 _1067 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_4, int(0u)));
    float _1118;
    if (_645)
    {
        float _1078 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1084 = (_577 * _562) - (_574 * _565);
        float _1087 = (_571 * _565) - (_577 * _559);
        float _1090 = (_574 * _559) - (_571 * _562);
        float _1116 = ((log2((((float(_1067.y) * 0.5) * float(_1067.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1087 * _1087) + (_1090 * _1090)) + (_1084 * _1084)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1078 * gl_WorldRayDirectionEXT.x, _1078 * gl_WorldRayDirectionEXT.y, _1078 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1118 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
    }
    else
    {
        _1118 = 0.0;
    }
    vec4 _1120 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _578) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _579) + cbTextureTilingScale._m0[9u].w), _1118);
    float _1144 = (_702.x * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].x * _1120.x) - _1053) * _714) + _1053);
    float _1146 = (_702.y * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].y * _1120.y) - _1054) * _714) + _1054);
    float _1148 = (_702.z * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].z * _1120.z) - _1055) * _714) + _1055);
    float _1153 = exp2(log2(1.0 - _786) * 0.00999999977648258209228515625);
    uvec2 _1165 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_11, int(0u)));
    float _1216;
    if (_645)
    {
        float _1176 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1182 = (_577 * _562) - (_574 * _565);
        float _1185 = (_571 * _565) - (_577 * _559);
        float _1188 = (_574 * _559) - (_571 * _562);
        float _1214 = ((log2((((float(_1165.y) * 0.5) * float(_1165.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1185 * _1185) + (_1188 * _1188)) + (_1182 * _1182)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1176 * gl_WorldRayDirectionEXT.x, _1176 * gl_WorldRayDirectionEXT.y, _1176 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1216 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    }
    else
    {
        _1216 = 0.0;
    }
    float _1225 = ((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _578) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _579) + cbTextureTilingScale._m0[2u].w), _1216).x - cbMtdParam._m0[21u].z) * _1153) + cbMtdParam._m0[21u].z;
    uvec2 _1237 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_12, int(0u)));
    float _1288;
    if (_645)
    {
        float _1248 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1254 = (_577 * _562) - (_574 * _565);
        float _1257 = (_571 * _565) - (_577 * _559);
        float _1260 = (_574 * _559) - (_571 * _562);
        float _1286 = ((log2((((float(_1237.y) * 0.5) * float(_1237.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1257 * _1257) + (_1260 * _1260)) + (_1254 * _1254)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1248 * gl_WorldRayDirectionEXT.x, _1248 * gl_WorldRayDirectionEXT.y, _1248 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1288 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
    }
    else
    {
        _1288 = 0.0;
    }
    float _1297 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * _578) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _579) + cbTextureTilingScale._m0[3u].w), _1288).x - _1225) + cbMtdParam._m0[20u].z) * _968) + _1225;
    uvec2 _1309 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_13, int(0u)));
    float _1360;
    if (_645)
    {
        float _1320 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1326 = (_577 * _562) - (_574 * _565);
        float _1329 = (_571 * _565) - (_577 * _559);
        float _1332 = (_574 * _559) - (_571 * _562);
        float _1358 = ((log2((((float(_1309.y) * 0.5) * float(_1309.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1329 * _1329) + (_1332 * _1332)) + (_1326 * _1326)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1320 * gl_WorldRayDirectionEXT.x, _1320 * gl_WorldRayDirectionEXT.y, _1320 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1360 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
    }
    else
    {
        _1360 = 0.0;
    }
    float _1372 = (((textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * _578) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _579) + cbTextureTilingScale._m0[4u].w), _1360).x - _1297) + cbMtdParam._m0[22u].z) * _714) + _1297;
    uvec2 _1384 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_5, int(0u)));
    float _1435;
    if (_645)
    {
        float _1395 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1401 = (_577 * _562) - (_574 * _565);
        float _1404 = (_571 * _565) - (_577 * _559);
        float _1407 = (_574 * _559) - (_571 * _562);
        float _1433 = ((log2((((float(_1384.y) * 0.5) * float(_1384.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1404 * _1404) + (_1407 * _1407)) + (_1401 * _1401)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1395 * gl_WorldRayDirectionEXT.x, _1395 * gl_WorldRayDirectionEXT.y, _1395 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1435 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
    }
    else
    {
        _1435 = 0.0;
    }
    vec4 _1437 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * _578) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _579) + cbTextureTilingScale._m0[10u].w), _1435);
    uvec2 _1455 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_6, int(0u)));
    float _1506;
    if (_645)
    {
        float _1466 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1472 = (_577 * _562) - (_574 * _565);
        float _1475 = (_571 * _565) - (_577 * _559);
        float _1478 = (_574 * _559) - (_571 * _562);
        float _1504 = ((log2((((float(_1455.y) * 0.5) * float(_1455.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1475 * _1475) + (_1478 * _1478)) + (_1472 * _1472)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1466 * gl_WorldRayDirectionEXT.x, _1466 * gl_WorldRayDirectionEXT.y, _1466 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1506 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    }
    else
    {
        _1506 = 0.0;
    }
    vec4 _1508 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * _578) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _579) + cbTextureTilingScale._m0[11u].w), _1506);
    float _1510 = _1508.x;
    float _1511 = _1508.y;
    float _1514 = cbMtdParam._m0[19u].x + _1508.z;
    float _1517 = (((cbMtdParam._m0[20u].x + _1437.z) - _1514) * _1153) + _1514;
    uvec2 _1530 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_8, int(0u)));
    float _1581;
    if (_645)
    {
        float _1541 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1547 = (_577 * _562) - (_574 * _565);
        float _1550 = (_571 * _565) - (_577 * _559);
        float _1553 = (_574 * _559) - (_571 * _562);
        float _1579 = ((log2((((float(_1530.y) * 0.5) * float(_1530.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1550 * _1550) + (_1553 * _1553)) + (_1547 * _1547)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1541 * gl_WorldRayDirectionEXT.x, _1541 * gl_WorldRayDirectionEXT.y, _1541 * gl_WorldRayDirectionEXT.z), vec3(_590, _592, _593))));
        _1581 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
    }
    else
    {
        _1581 = 0.0;
    }
    vec4 _1583 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _578) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _579) + cbTextureTilingScale._m0[13u].w), _1581);
    float _1594 = (_785 * 2.0) * ((((_1583.z - _1517) + cbMtdParam._m0[22u].x) * _968) + _1517);
    uvec2 _1607 = uvec2(textureSize(C_DetailBlend_AlbedoMask_snp_0_Texture2D_9, int(0u)));
    float _1611 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1612 = _1611 * gl_WorldRayDirectionEXT.x;
    float _1613 = _1611 * gl_WorldRayDirectionEXT.y;
    float _1614 = _1611 * gl_WorldRayDirectionEXT.z;
    float _1658;
    if (_645)
    {
        float _1624 = (_577 * _562) - (_574 * _565);
        float _1627 = (_571 * _565) - (_577 * _559);
        float _1630 = (_574 * _559) - (_571 * _562);
        float _1656 = ((log2((((float(_1607.y) * 0.5) * float(_1607.x)) * abs((_532 * _526) - (_531 * _528))) / (sqrt(((_1627 * _1627) + (_1630 * _1630)) + (_1624 * _1624)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_121) / abs(dot(vec3(_1612, _1613, _1614), vec3(_590, _592, _593))));
        _1658 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
    }
    else
    {
        _1658 = 0.0;
    }
    vec4 _1660 = textureLod(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _578) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _579) + cbTextureTilingScale._m0[14u].w), _1658);
    float _1669 = (((_1660.z - _1594) + cbMtdParam._m0[21u].x) * _714) + _1594;
    float _1680 = ((_1437.x - _1510) * _1153) + _1510;
    float _1681 = ((_1437.y - _1511) * _1153) + _1511;
    float _1686 = ((_1583.x - _1680) * _968) + _1680;
    float _1687 = ((_1583.y - _1681) * _968) + _1681;
    float _1696 = ((((_1660.x - _1686) * _714) + _1686) * 2.0) + (-1.0);
    float _1697 = ((((_1660.y - _1687) * _714) + _1687) * 2.0) + (-1.0);
    float _1698 = dot(vec2(_1696, _1697), vec2(_1696, _1697));
    float _2262 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
    float _1703 = sqrt(1.0 - (isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0))));
    float _1706 = _1696 + (cbMtdParam._m0[21u].w * ((_781.x * 2.0) + (-1.0)));
    float _1707 = _1697 + (cbMtdParam._m0[21u].w * ((_781.y * 2.0) + (-1.0)));
    float _1710 = fma(_1703, _590, fma(_1707, _606, (_625 * _619) * _1706));
    float _1713 = fma(_1703, _592, fma(_1707, _607, (_625 * _620) * _1706));
    float _1716 = fma(_1703, _593, fma(_1707, _608, (_625 * _621) * _1706));
    float _1720 = inversesqrt(dot(vec3(_1710, _1713, _1716), vec3(_1710, _1713, _1716)));
    float _1721 = _1720 * _1710;
    float _1722 = _1720 * _1713;
    float _1723 = _1720 * _1716;
    float _1735 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1736 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1737 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1738 = (-0.0) - _1612;
    float _1740 = (-0.0) - _1613;
    float _1741 = (-0.0) - _1614;
    float _1747 = float(gl_LaunchIDEXT.x);
    float _1748 = float(gl_LaunchIDEXT.y);
    float _1751 = float(gl_LaunchSizeEXT.x);
    float _1765 = fract(fract(sin(dot(vec2(_1747 / _1751, _1748 / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1778 = fract(fract(sin(dot(vec2((_1747 + 128.0) / _1751, (_1748 + 128.0) / _82), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1779 = 1.0 - _1372;
    float _1780 = _1779 * _1144;
    float _1781 = _1779 * _1146;
    float _1782 = _1779 * _1148;
    float _1787 = _1372 * (_1144 + (-0.039999999105930328369140625));
    float _1788 = _1372 * (_1146 + (-0.039999999105930328369140625));
    float _1789 = _1372 * (_1148 + (-0.039999999105930328369140625));
    float _1790 = _1787 + 0.039999999105930328369140625;
    float _1792 = _1788 + 0.039999999105930328369140625;
    float _1793 = _1789 + 0.039999999105930328369140625;
    _74._m0 = 1u;
    uvec4 _1803 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1804 = _1803.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1804, _1803.w, _1804, vec3(_1735, _1736, _1737), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    if (_74._m0 == 0u)
    {
        float _1825 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1721, _1722, _1723));
        float _2273 = isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0));
        float _1828 = isnan(1.0) ? _2273 : (isnan(_2273) ? 1.0 : min(_2273, 1.0));
        float _1847 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * _1669) * 0.949999988079071044921875);
        float _1848 = _1847 * _1847;
        float _1849 = g_sceneCB._m0[4u].x - _1612;
        float _1850 = g_sceneCB._m0[4u].y - _1613;
        float _1851 = g_sceneCB._m0[4u].z - _1614;
        float _1855 = inversesqrt(dot(vec3(_1849, _1850, _1851), vec3(_1849, _1850, _1851)));
        float _1856 = _1855 * _1849;
        float _1857 = _1855 * _1850;
        float _1858 = _1855 * _1851;
        float _1859 = dot(vec3(_1721, _1722, _1723), vec3(g_sceneCB._m0[4u].xyz));
        float _2284 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1862 = isnan(1.0) ? _2284 : (isnan(_2284) ? 1.0 : min(_2284, 1.0));
        float _1863 = dot(vec3(_1721, _1722, _1723), vec3(_1738, _1740, _1741));
        float _2295 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        float _1866 = isnan(1.0) ? _2295 : (isnan(_2295) ? 1.0 : min(_2295, 1.0));
        float _1867 = dot(vec3(_1721, _1722, _1723), vec3(_1856, _1857, _1858));
        float _2306 = isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0));
        float _1870 = isnan(1.0) ? _2306 : (isnan(_2306) ? 1.0 : min(_2306, 1.0));
        float _1871 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1856, _1857, _1858));
        float _2317 = isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0));
        float _1875 = _1848 * _1848;
        float _1879 = ((_1870 * _1870) * (_1875 + (-1.0))) + 1.0;
        float _1888 = exp2(log2(1.0 - (isnan(1.0) ? _2317 : (isnan(_2317) ? 1.0 : min(_2317, 1.0)))) * 5.0);
        float _1899 = 1.0 - _1848;
        float _1910 = (0.5 / (((_1866 * ((_1862 * _1899) + _1848)) + 9.9999999392252902907785028219223e-09) + (((_1866 * _1899) + _1848) * _1862))) * _1862;
        float _2328 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
        float _1912 = (isnan(1.0) ? _2328 : (isnan(_2328) ? 1.0 : min(_2328, 1.0))) * (_1875 / ((_1879 * _1879) * 3.141590118408203125));
        _1919 = ((_1780 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1828;
        _1920 = ((_1781 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1828;
        _1921 = ((_1782 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1828;
        _1922 = (((_1888 * (0.959999978542327880859375 - _1787)) + _1790) * g_sceneCB._m0[5u].x) * _1912;
        _1923 = (((_1888 * (0.959999978542327880859375 - _1788)) + _1792) * g_sceneCB._m0[5u].y) * _1912;
        _1924 = (((_1888 * (0.959999978542327880859375 - _1789)) + _1793) * g_sceneCB._m0[5u].z) * _1912;
    }
    else
    {
        _1919 = 0.0;
        _1920 = 0.0;
        _1921 = 0.0;
        _1922 = 0.0;
        _1923 = 0.0;
        _1924 = 0.0;
    }
    bool _1926 = abs(_1722) < 0.89999997615814208984375;
    float _1928 = float(_1926);
    float _1929 = _1926 ? 0.0 : 1.0;
    float _1932 = (_1928 * _1723) - (_1929 * _1722);
    float _1933 = _1929 * _1721;
    float _1935 = (-0.0) - (_1721 * _1928);
    float _1939 = inversesqrt(dot(vec3(_1932, _1933, _1935), vec3(_1932, _1933, _1935)));
    float _1940 = _1932 * _1939;
    float _1941 = _1933 * _1939;
    float _1942 = _1939 * _1935;
    float _1945 = (_1941 * _1723) - (_1942 * _1722);
    float _1948 = (_1942 * _1721) - (_1940 * _1723);
    float _1951 = (_1940 * _1722) - (_1941 * _1721);
    float _1953;
    float _1961;
    float _1952 = 0.0;
    uint _1954 = 0u;
    float _1958;
    bool _1960;
    for (;;)
    {
        _1958 = (float(_1954) + _1765) * 0.03125;
        _1960 = _1954 == 0u;
        float frontier_phi_53_pred;
        if (_1960)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _2102;
            float _2103;
            uint _2105;
            _2102 = 0.0;
            _2103 = 0.5;
            _2105 = _1954;
            float _1962;
            for (;;)
            {
                _1962 = ((_2105 & 1u) != 0u) ? (_2103 + _2102) : _2102;
                uint _2106 = _2105 >> 1u;
                if (_2106 == 0u)
                {
                    break;
                }
                else
                {
                    _2102 = _1962;
                    _2103 *= 0.5;
                    _2105 = _2106;
                }
            }
            frontier_phi_53_pred = _1962;
        }
        _1961 = frontier_phi_53_pred;
        float _1963 = _1961 + _1778;
        float _1967 = sqrt(_1958);
        float _1968 = ((_1963 > 1.0) ? (_1963 + (-1.0)) : _1963) * 6.283185482025146484375;
        float _1971 = cos(_1968) * _1967;
        float _1973 = sin(_1968) * _1967;
        float _1975 = sqrt(1.0 - _1958);
        float _1988 = ((_1975 * _1721) + (_1971 * _1945)) + (_1973 * _1940);
        float _1989 = ((_1975 * _1722) + (_1971 * _1948)) + (_1973 * _1941);
        float _1990 = ((_1975 * _1723) + (_1971 * _1951)) + (_1973 * _1942);
        _73._m0 = 1u;
        uvec4 _1994 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1995 = _1994.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1995, _1994.w, _1995, vec3(_1735, _1736, _1737), 9.9999997473787516355514526367188e-05, vec3(_1988, _1989, _1990), 10000.0, 1);
        float _2001 = dot(vec3(_1721, _1722, _1723), vec3(_1988, _1989, _1990));
        float _2339 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2004 = isnan(1.0) ? _2339 : (isnan(_2339) ? 1.0 : min(_2339, 1.0));
        _1953 = ((float(_73._m0 == 0u) * _2004) / (_2004 * 0.3183098733425140380859375)) + _1952;
        uint _1955 = _1954 + 1u;
        if (_1955 == 32u)
        {
            break;
        }
        else
        {
            _1952 = _1953;
            _1954 = _1955;
            continue;
        }
    }
    float _2012 = _1953 * 0.009947183541953563690185546875;
    float _2017 = dot(vec3(_1612, _1613, _1614), vec3(_1721, _1722, _1723)) * 2.0;
    vec4 _2031 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1612 - (_2017 * _1721), _1613 - (_2017 * _1722), _1614 - (_2017 * _1723)), 4.0 - (_1669 * 4.0));
    float _2036 = dot(vec3(_1738, _1740, _1741), vec3(_1721, _1722, _1723));
    float _2350 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
    float _2046 = exp2(log2(1.0 - (isnan(1.0) ? _2350 : (isnan(_2350) ? 1.0 : min(_2350, 1.0)))) * 5.0);
    vec4 _2058 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1721, _1722, _1723), 0.0);
    float _2069 = (_1922 + _1919) + (((_2058.x * _1780) + (((_2046 * (0.959999978542327880859375 - _1787)) + _1790) * _2031.x)) * _2012);
    float _2073 = (_1923 + _1920) + (((_2058.y * _1781) + (((_2046 * (0.959999978542327880859375 - _1788)) + _1792) * _2031.y)) * _2012);
    float _2077 = (_1924 + _1921) + (((_2058.z * _1782) + (((_2046 * (0.959999978542327880859375 - _1789)) + _1793) * _2031.z)) * _2012);
    float _2361 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
    float _2372 = isnan(0.0) ? _2073 : (isnan(_2073) ? 0.0 : max(_2073, 0.0));
    float _2383 = isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0));
    bool _2085 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _2096;
    _2096.x = _2085 ? ((_583 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2361 : (isnan(_2361) ? 1.0 : min(_2361, 1.0)));
    _2096.y = _2085 ? ((_586 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0)));
    _2096.z = _2085 ? ((_589 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0)));
    payload._m0 = _2096;
}


