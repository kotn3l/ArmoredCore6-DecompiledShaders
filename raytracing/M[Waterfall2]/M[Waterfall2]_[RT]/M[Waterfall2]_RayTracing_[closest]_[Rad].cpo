#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _61
{
    vec3 _m0;
};

struct _65
{
    vec2 _m0;
};

struct _68
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall2_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Waterfall2_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_Waterfall2_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D M_Waterfall2_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Waterfall2_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Waterfall2_snp_0_Texture2D_5;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(location = 0) rayPayloadInEXT _61 payload;
hitAttributeEXT _65 hit;
layout(location = 1) rayPayloadEXT _68 _70;
layout(location = 2) rayPayloadEXT _68 _71;

vec3 _1769;

void main()
{
    float _85 = float(gl_LaunchSizeEXT.y);
    float _113 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _114 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _115 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _122 = sqrt(((_114 * _114) + (_113 * _113)) + (_115 * _115)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _85)))));
    uvec4 _133 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _134 = _133.y;
    uint _174;
    uint _176;
    uint _177;
    if (_133.x == 0u)
    {
        uint _142 = (_134 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _151 = uvec3(texelFetch(l_geomIndexBuffer, int(_142)).x, texelFetch(l_geomIndexBuffer, int(_142 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_142 + 2u)).x);
        _174 = _151.x;
        _176 = _151.y;
        _177 = _151.z;
    }
    else
    {
        uint _155 = uint(gl_PrimitiveID) * 6u;
        uint _157 = _155 & 4294967292u;
        uint _160 = (_134 + _157) >> 2u;
        uvec2 _167 = uvec2(texelFetch(l_geomIndexBuffer, int(_160)).x, texelFetch(l_geomIndexBuffer, int(_160 + 1u)).x);
        uint _168 = _167.x;
        uint _169 = _167.y;
        uint _171 = _168 >> 16u;
        uint _172 = _169 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_157 == _155)
        {
            frontier_phi_3_2_ladder = _171;
            frontier_phi_3_2_ladder_1 = _168 & 65535u;
            frontier_phi_3_2_ladder_2 = _172;
        }
        else
        {
            frontier_phi_3_2_ladder = _172;
            frontier_phi_3_2_ladder_1 = _171;
            frontier_phi_3_2_ladder_2 = _169 >> 16u;
        }
        _174 = frontier_phi_3_2_ladder_1;
        _176 = frontier_phi_3_2_ladder;
        _177 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _181 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _182 = _181.x;
    uint _183 = _181.z;
    bool _184 = _183 != 0u;
    bool _186 = _133.w == 0u;
    bool _187 = _184 || _186;
    uint _188 = _182 * _174;
    uint _189 = _188 + 12u;
    uint _213;
    uint _214;
    uint _215;
    uint _216;
    if (_187)
    {
        uvec4 _192 = texelFetch(l_geomAttrib_0, int(_189 >> 2u));
        uint _193 = _192.x;
        _213 = _193 & 255u;
        _214 = (_193 >> 8u) & 255u;
        _215 = (_193 >> 16u) & 255u;
        _216 = 16u;
    }
    else
    {
        uint _201 = _189 >> 2u;
        uvec2 _207 = uvec2(texelFetch(l_geomAttrib_0, int(_201)).x, texelFetch(l_geomAttrib_0, int(_201 + 1u)).x);
        uint _208 = _207.x;
        _213 = _208 & 65535u;
        _214 = _208 >> 16u;
        _215 = _207.y & 65535u;
        _216 = 20u;
    }
    uvec4 _223 = texelFetch(l_geomAttrib_0, int((_216 + _188) >> 2u));
    uint _224 = _223.x;
    bool _238 = _183 == 0u;
    uint _239;
    if (_238)
    {
        _239 = _216 + 4u;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_186)
        {
            frontier_phi_9_10_ladder = _216 | 8u;
        }
        else
        {
            frontier_phi_9_10_ladder = _216 + 12u;
        }
        _239 = frontier_phi_9_10_ladder;
    }
    uint _243 = _184 ? (_239 + 4u) : _239;
    uvec4 _247 = texelFetch(l_geomAttrib_0, int(((_188 + 4u) + _243) >> 2u));
    uint _248 = _247.x;
    float _252 = float(int(uint(int(_248 << 16u) >> int(16u))));
    float _253 = float(int(uint(int(_248) >> int(16u))));
    uvec4 _257 = texelFetch(l_geomAttrib_0, int(((_188 + 8u) + _243) >> 2u));
    uint _258 = _257.x;
    uint _264 = _182 * _176;
    uint _265 = _264 + 12u;
    uint _286;
    uint _287;
    uint _288;
    uint _289;
    if (_187)
    {
        uvec4 _267 = texelFetch(l_geomAttrib_0, int(_265 >> 2u));
        uint _268 = _267.x;
        _286 = _268 & 255u;
        _287 = (_268 >> 8u) & 255u;
        _288 = (_268 >> 16u) & 255u;
        _289 = 16u;
    }
    else
    {
        uint _274 = _265 >> 2u;
        uvec2 _280 = uvec2(texelFetch(l_geomAttrib_0, int(_274)).x, texelFetch(l_geomAttrib_0, int(_274 + 1u)).x);
        uint _281 = _280.x;
        _286 = _281 & 65535u;
        _287 = _281 >> 16u;
        _288 = _280.y & 65535u;
        _289 = 20u;
    }
    uvec4 _295 = texelFetch(l_geomAttrib_0, int((_289 + _264) >> 2u));
    uint _296 = _295.x;
    uint _308;
    if (_238)
    {
        _308 = _289 + 4u;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_186)
        {
            frontier_phi_16_17_ladder = _289 | 8u;
        }
        else
        {
            frontier_phi_16_17_ladder = _289 + 12u;
        }
        _308 = frontier_phi_16_17_ladder;
    }
    uint _312 = _184 ? (_308 + 4u) : _308;
    uvec4 _316 = texelFetch(l_geomAttrib_0, int(((_264 + 4u) + _312) >> 2u));
    uint _317 = _316.x;
    float _321 = float(int(uint(int(_317 << 16u) >> int(16u))));
    float _322 = float(int(uint(int(_317) >> int(16u))));
    uvec4 _326 = texelFetch(l_geomAttrib_0, int(((_264 + 8u) + _312) >> 2u));
    uint _327 = _326.x;
    uint _333 = _182 * _177;
    uint _334 = _333 + 12u;
    uint _355;
    uint _356;
    uint _357;
    uint _358;
    if (_187)
    {
        uvec4 _336 = texelFetch(l_geomAttrib_0, int(_334 >> 2u));
        uint _337 = _336.x;
        _355 = _337 & 255u;
        _356 = (_337 >> 8u) & 255u;
        _357 = (_337 >> 16u) & 255u;
        _358 = 16u;
    }
    else
    {
        uint _343 = _334 >> 2u;
        uvec2 _349 = uvec2(texelFetch(l_geomAttrib_0, int(_343)).x, texelFetch(l_geomAttrib_0, int(_343 + 1u)).x);
        uint _350 = _349.x;
        _355 = _350 & 65535u;
        _356 = _350 >> 16u;
        _357 = _349.y & 65535u;
        _358 = 20u;
    }
    uvec4 _364 = texelFetch(l_geomAttrib_0, int((_358 + _333) >> 2u));
    uint _365 = _364.x;
    uint _377;
    if (_238)
    {
        _377 = _358 + 4u;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_186)
        {
            frontier_phi_23_24_ladder = _358 | 8u;
        }
        else
        {
            frontier_phi_23_24_ladder = _358 + 12u;
        }
        _377 = frontier_phi_23_24_ladder;
    }
    uint _381 = _184 ? (_377 + 4u) : _377;
    uvec4 _385 = texelFetch(l_geomAttrib_0, int(((_333 + 4u) + _381) >> 2u));
    uint _386 = _385.x;
    float _390 = float(int(uint(int(_386 << 16u) >> int(16u))));
    float _391 = float(int(uint(int(_386) >> int(16u))));
    uvec4 _395 = texelFetch(l_geomAttrib_0, int(((_333 + 8u) + _381) >> 2u));
    uint _396 = _395.x;
    bool _403 = _133.z == 0u;
    float _439;
    float _440;
    float _441;
    if (_403)
    {
        uint _406 = _174 * 3u;
        uvec3 _415 = uvec3(texelFetch(l_geomPositionBuffer, int(_406)).x, texelFetch(l_geomPositionBuffer, int(_406 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_406 + 2u)).x);
        _439 = uintBitsToFloat(_415.x);
        _440 = uintBitsToFloat(_415.y);
        _441 = uintBitsToFloat(_415.z);
    }
    else
    {
        uint _423 = _174 * 2u;
        uvec2 _429 = uvec2(texelFetch(l_geomPositionBuffer, int(_423)).x, texelFetch(l_geomPositionBuffer, int(_423 + 1u)).x);
        uint _430 = _429.x;
        _439 = unpackHalf2x16(_430).x;
        _440 = unpackHalf2x16(_430 >> 16u).x;
        _441 = unpackHalf2x16(_429.y).x;
    }
    float _477;
    float _478;
    float _479;
    if (_403)
    {
        uint _444 = _176 * 3u;
        uvec3 _453 = uvec3(texelFetch(l_geomPositionBuffer, int(_444)).x, texelFetch(l_geomPositionBuffer, int(_444 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_444 + 2u)).x);
        _477 = uintBitsToFloat(_453.x);
        _478 = uintBitsToFloat(_453.y);
        _479 = uintBitsToFloat(_453.z);
    }
    else
    {
        uint _461 = _176 * 2u;
        uvec2 _467 = uvec2(texelFetch(l_geomPositionBuffer, int(_461)).x, texelFetch(l_geomPositionBuffer, int(_461 + 1u)).x);
        uint _468 = _467.x;
        _477 = unpackHalf2x16(_468).x;
        _478 = unpackHalf2x16(_468 >> 16u).x;
        _479 = unpackHalf2x16(_467.y).x;
    }
    float _515;
    float _516;
    float _517;
    if (_403)
    {
        uint _482 = _177 * 3u;
        uvec3 _491 = uvec3(texelFetch(l_geomPositionBuffer, int(_482)).x, texelFetch(l_geomPositionBuffer, int(_482 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_482 + 2u)).x);
        _515 = uintBitsToFloat(_491.x);
        _516 = uintBitsToFloat(_491.y);
        _517 = uintBitsToFloat(_491.z);
    }
    else
    {
        uint _499 = _177 * 2u;
        uvec2 _505 = uvec2(texelFetch(l_geomPositionBuffer, int(_499)).x, texelFetch(l_geomPositionBuffer, int(_499 + 1u)).x);
        uint _506 = _505.x;
        _515 = unpackHalf2x16(_506).x;
        _516 = unpackHalf2x16(_506 >> 16u).x;
        _517 = unpackHalf2x16(_505.y).x;
    }
    float _520 = (1.0 - hit._m0.x) - hit._m0.y;
    float _564 = (((float((_327 >> 8u) & 255u) * hit._m0.x) + (float((_258 >> 8u) & 255u) * _520)) + (float((_396 >> 8u) & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125;
    float _567 = (_321 - _252) * 0.00048828125;
    float _569 = (_322 - _253) * 0.00048828125;
    float _572 = (_390 - _252) * 0.00048828125;
    float _573 = (_391 - _253) * 0.00048828125;
    float _595 = _477 - _439;
    float _596 = _478 - _440;
    float _597 = _479 - _441;
    float _600 = fma(_597, gl_ObjectToWorldEXT[2u].x, fma(_596, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _595));
    float _603 = fma(_597, gl_ObjectToWorldEXT[2u].y, fma(_596, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _595));
    float _606 = fma(_597, gl_ObjectToWorldEXT[2u].z, fma(_596, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _595));
    float _607 = _515 - _439;
    float _608 = _516 - _440;
    float _609 = _517 - _441;
    float _612 = fma(_609, gl_ObjectToWorldEXT[2u].x, fma(_608, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _607));
    float _615 = fma(_609, gl_ObjectToWorldEXT[2u].y, fma(_608, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _607));
    float _618 = fma(_609, gl_ObjectToWorldEXT[2u].z, fma(_608, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _607));
    float _619 = (((_321 * hit._m0.x) + (_252 * _520)) + (_390 * hit._m0.y)) * 0.00048828125;
    float _620 = (((_322 * hit._m0.x) + (_253 * _520)) + (_391 * hit._m0.y)) * 0.00048828125;
    float _624 = (((float(_213) * _520) + (-127.0)) + (float(_286) * hit._m0.x)) + (float(_355) * hit._m0.y);
    float _627 = (((float(_214) * _520) + (-127.0)) + (float(_287) * hit._m0.x)) + (float(_356) * hit._m0.y);
    float _630 = (((float(_215) * _520) + (-127.0)) + (float(_288) * hit._m0.x)) + (float(_357) * hit._m0.y);
    float _631 = _624 * 0.0078740157186985015869140625;
    float _633 = _627 * 0.0078740157186985015869140625;
    float _634 = _630 * 0.0078740157186985015869140625;
    float _647 = ((((float(_224 & 255u) * _520) + (-127.0)) + (float(_296 & 255u) * hit._m0.x)) + (float(_365 & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _648 = ((((float((_224 >> 8u) & 255u) * _520) + (-127.0)) + (float((_296 >> 8u) & 255u) * hit._m0.x)) + (float((_365 >> 8u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _649 = ((((float((_224 >> 16u) & 255u) * _520) + (-127.0)) + (float((_296 >> 16u) & 255u) * hit._m0.x)) + (float((_365 >> 16u) & 255u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _650 = ((((float(_224 >> 24u) * _520) + (-127.0)) + (float(_296 >> 24u) * hit._m0.x)) + (float(_365 >> 24u) * hit._m0.y)) * 0.0078740157186985015869140625;
    float _660 = ((_648 * _634) - (_649 * _633)) * _650;
    float _661 = ((_649 * _631) - (_647 * _634)) * _650;
    float _662 = ((_647 * _633) - (_648 * _631)) * _650;
    float _666 = inversesqrt(dot(vec3(_660, _661, _662), vec3(_660, _661, _662)));
    float _688 = cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x;
    uvec2 _705 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_5, int(0u)));
    bool _710 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _763;
    if (_710)
    {
        float _721 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _727 = (_618 * _603) - (_615 * _606);
        float _730 = (_612 * _606) - (_618 * _600);
        float _733 = (_615 * _600) - (_612 * _603);
        float _760 = ((log2((((float(_705.y) * 0.5) * float(_705.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_730 * _730) + (_733 * _733)) + (_727 * _727)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_721 * gl_WorldRayDirectionEXT.x, _721 * gl_WorldRayDirectionEXT.y, _721 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _763 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    }
    else
    {
        _763 = 0.0;
    }
    vec4 _767 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_5, SS_BumpMap), vec2((((_688 * cbMtdParam._m0[18u].x) + _619) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_688 * cbMtdParam._m0[18u].y) + _620) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w), _763);
    float _771 = _767.x * 2.0;
    float _772 = _767.y * 2.0;
    float _773 = _771 + (-1.0);
    float _775 = _772 + (-1.0);
    float _776 = dot(vec2(_773, _775), vec2(_773, _775));
    float _1860 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _781 = sqrt(1.0 - (isnan(1.0) ? _1860 : (isnan(_1860) ? 1.0 : min(_1860, 1.0))));
    float _795 = (cbMtdParam._m0[17u].x * _688) + _619;
    float _796 = (cbMtdParam._m0[17u].y * _688) + _620;
    uvec2 _808 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_3, int(0u)));
    float _859;
    if (_710)
    {
        float _819 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _825 = (_618 * _603) - (_615 * _606);
        float _828 = (_612 * _606) - (_618 * _600);
        float _831 = (_615 * _600) - (_612 * _603);
        float _857 = ((log2((((float(_808.y) * 0.5) * float(_808.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_828 * _828) + (_831 * _831)) + (_825 * _825)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_819 * gl_WorldRayDirectionEXT.x, _819 * gl_WorldRayDirectionEXT.y, _819 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _859 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    }
    else
    {
        _859 = 0.0;
    }
    vec4 _862 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_3, SS_WrapLinear), vec2((_795 * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (_796 * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _859);
    float _867 = (cbPerFrame._m0[22u].x * 2.0) * (cbMtdParam._m0[14u].z * cbMtdParam._m0[14u].x);
    float _873 = ((_862.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].x;
    float _875 = (-0.0) - (cbMtdParam._m0[15u].x * ((_862.x * 0.5) + (-0.25)));
    float _877 = fract(_867);
    float _879 = fract(_867 + 0.5);
    float _890 = abs((_877 * 2.0) + (-1.0));
    vec4 _907 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_0, SS_BumpMap), vec2((((_877 * _875) + _795) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_873 * _877) + _796) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    float _909 = _907.x;
    float _910 = _907.y;
    vec4 _911 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_0, SS_BumpMap), vec2((((_879 * _875) + _795) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_873 * _879) + _796) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), 0.0);
    uvec2 _939 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_0, int(0u)));
    float _990;
    if (_710)
    {
        float _950 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _956 = (_618 * _603) - (_615 * _606);
        float _959 = (_612 * _606) - (_618 * _600);
        float _962 = (_615 * _600) - (_612 * _603);
        float _988 = ((log2((((float(_939.y) * 0.5) * float(_939.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_959 * _959) + (_962 * _962)) + (_956 * _956)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_950 * gl_WorldRayDirectionEXT.x, _950 * gl_WorldRayDirectionEXT.y, _950 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _990 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    }
    else
    {
        _990 = 0.0;
    }
    vec4 _992 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[16u].z * _688) + _619) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[16u].w * _688) + _620) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w), _990);
    float _1002 = ((_771 + (-1.35000002384185791015625)) + ((((((_911.x - _909) * _890) + _909) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].x)) + (_992.x * 0.699999988079071044921875);
    float _1005 = ((_772 + (-1.35000002384185791015625)) + ((((((_911.y - _910) * _890) + _910) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].x)) + (_992.y * 0.699999988079071044921875);
    float _1008 = fma(_781, _631, fma(_1005, _647, _1002 * (_666 * _660)));
    float _1011 = fma(_781, _633, fma(_1005, _648, _1002 * (_666 * _661)));
    float _1014 = fma(_781, _634, fma(_1005, _649, _1002 * (_666 * _662)));
    float _1018 = inversesqrt(dot(vec3(_1008, _1011, _1014), vec3(_1008, _1011, _1014)));
    float _1019 = _1018 * _1008;
    float _1020 = _1018 * _1011;
    float _1021 = _1018 * _1014;
    uvec2 _1045 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_1, int(0u)));
    float _1096;
    if (_710)
    {
        float _1056 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1062 = (_618 * _603) - (_615 * _606);
        float _1065 = (_612 * _606) - (_618 * _600);
        float _1068 = (_615 * _600) - (_612 * _603);
        float _1094 = ((log2((((float(_1045.y) * 0.5) * float(_1045.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1065 * _1065) + (_1068 * _1068)) + (_1062 * _1062)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1056 * gl_WorldRayDirectionEXT.x, _1056 * gl_WorldRayDirectionEXT.y, _1056 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _1096 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    }
    else
    {
        _1096 = 0.0;
    }
    vec4 _1098 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _619) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _620) + cbTextureTilingScale._m0[0u].w), _1096);
    float _1110 = (cbMtdParam._m0[17u].z * _688) + _619;
    float _1111 = (cbMtdParam._m0[17u].w * _688) + _620;
    uvec2 _1123 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_4, int(0u)));
    float _1174;
    if (_710)
    {
        float _1134 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1140 = (_618 * _603) - (_615 * _606);
        float _1143 = (_612 * _606) - (_618 * _600);
        float _1146 = (_615 * _600) - (_612 * _603);
        float _1172 = ((log2((((float(_1123.y) * 0.5) * float(_1123.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1143 * _1143) + (_1146 * _1146)) + (_1140 * _1140)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1134 * gl_WorldRayDirectionEXT.x, _1134 * gl_WorldRayDirectionEXT.y, _1134 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _1174 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
    }
    else
    {
        _1174 = 0.0;
    }
    uvec2 _1193 = uvec2(textureSize(M_Waterfall2_snp_0_Texture2D_2, int(0u)));
    float _1244;
    if (_710)
    {
        float _1204 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _1210 = (_618 * _603) - (_615 * _606);
        float _1213 = (_612 * _606) - (_618 * _600);
        float _1216 = (_615 * _600) - (_612 * _603);
        float _1242 = ((log2((((float(_1193.y) * 0.5) * float(_1193.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1213 * _1213) + (_1216 * _1216)) + (_1210 * _1210)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1204 * gl_WorldRayDirectionEXT.x, _1204 * gl_WorldRayDirectionEXT.y, _1204 * gl_WorldRayDirectionEXT.z), vec3(_631, _633, _634))));
        _1244 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
    }
    else
    {
        _1244 = 0.0;
    }
    vec4 _1247 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _1110) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _1111) + cbTextureTilingScale._m0[1u].w), _1244);
    float _1256 = (cbMtdParam._m0[16u].x * _688) + _619;
    float _1257 = (cbMtdParam._m0[16u].y * _688) + _620;
    float _1265 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _1266 = _1265 * gl_WorldRayDirectionEXT.x;
    float _1267 = _1265 * gl_WorldRayDirectionEXT.y;
    float _1268 = _1265 * gl_WorldRayDirectionEXT.z;
    float _1312;
    if (_710)
    {
        float _1278 = (_618 * _603) - (_615 * _606);
        float _1281 = (_612 * _606) - (_618 * _600);
        float _1284 = (_615 * _600) - (_612 * _603);
        float _1310 = ((log2((((float(_808.y) * 0.5) * float(_808.x)) * abs((_573 * _567) - (_572 * _569))) / (sqrt(((_1281 * _1281) + (_1284 * _1284)) + (_1278 * _1278)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_122) / abs(dot(vec3(_1266, _1267, _1268), vec3(_631, _633, _634))));
        _1312 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
    }
    else
    {
        _1312 = 0.0;
    }
    vec4 _1314 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_3, SS_WrapLinear), vec2((_1256 * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (_1257 * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w), _1312);
    float _1322 = ((_1314.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].x;
    float _1324 = (-0.0) - (cbMtdParam._m0[15u].x * ((_1314.x * 0.5) + (-0.25)));
    vec4 _1342 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_877 * _1324) + _1256) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1322 * _877) + _1257) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1344 = _1342.x;
    float _1345 = _1342.y;
    float _1346 = _1342.z;
    vec4 _1347 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_879 * _1324) + _1256) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_1322 * _879) + _1257) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w), 0.0);
    float _1362 = (((_1098.x * cbMtdParam._m0[19u].y) + ((((float(_327 & 255u) * hit._m0.x) + (float(_258 & 255u) * _520)) + (float(_396 & 255u) * hit._m0.y)) * 0.0039215688593685626983642578125)) * cbMtdParam._m0[15u].y) * exp2(log2(textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_4, SS_WrapLinear), vec2((_1110 * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (_1111 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w), _1174).x) * cbMtdParam._m0[13u].w);
    float _1366 = (_1098.y * cbMtdParam._m0[19u].z) + _564;
    float _1380 = (((cbMtdParam._m0[9u].x + _1247.x) * _1366) + cbMtdParam._m0[10u].x) + (_1362 * (((_1347.x - _1344) * _890) + _1344));
    float _1382 = (((cbMtdParam._m0[9u].y + _1247.y) * _1366) + cbMtdParam._m0[10u].y) + (_1362 * (((_1347.y - _1345) * _890) + _1345));
    float _1384 = (((cbMtdParam._m0[9u].z + _1247.z) * _1366) + cbMtdParam._m0[10u].z) + (_1362 * (((_1347.z - _1346) * _890) + _1346));
    float _1395 = dot(vec4(uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), uintBitsToFloat(0x7fc00000u /* nan */), 0.0), vec4(_1019, _1020, _1021, 0.0)) + (-1.0);
    float _1901 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
    float _1399 = exp2(log2(1.0 - (isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0)))));
    float _1411 = (((_1399 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x) * _1380) + (cbMtdParam._m0[12u].x * _564);
    float _1414 = (((_1399 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y) * _1382) + (cbMtdParam._m0[12u].y * _564);
    float _1417 = (((_1399 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * _1384) + (cbMtdParam._m0[12u].z * _564);
    float _1434 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _1435 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _1436 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _1437 = (-0.0) - _1266;
    float _1438 = (-0.0) - _1267;
    float _1439 = (-0.0) - _1268;
    float _1445 = float(gl_LaunchIDEXT.x);
    float _1446 = float(gl_LaunchIDEXT.y);
    float _1449 = float(gl_LaunchSizeEXT.x);
    float _1463 = fract(fract(sin(dot(vec2(_1445 / _1449, _1446 / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _1476 = fract(fract(sin(dot(vec2((_1445 + 128.0) / _1449, (_1446 + 128.0) / _85), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _71._m0 = 1u;
    uvec4 _1486 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _1487 = _1486.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _1487, _1486.w, _1487, vec3(_1434, _1435, _1436), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    if (_71._m0 == 0u)
    {
        float _1507 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1019, _1020, _1021));
        float _1912 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1510 = isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0));
        float _1529 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / g_sceneCB._m0[4u].w)) * cbMtdParam._m0[14u].w) * 0.949999988079071044921875);
        float _1530 = _1529 * _1529;
        float _1531 = g_sceneCB._m0[4u].x - _1266;
        float _1532 = g_sceneCB._m0[4u].y - _1267;
        float _1533 = g_sceneCB._m0[4u].z - _1268;
        float _1537 = inversesqrt(dot(vec3(_1531, _1532, _1533), vec3(_1531, _1532, _1533)));
        float _1538 = _1537 * _1531;
        float _1539 = _1537 * _1532;
        float _1540 = _1537 * _1533;
        float _1541 = dot(vec3(_1019, _1020, _1021), vec3(g_sceneCB._m0[4u].xyz));
        float _1923 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1544 = isnan(1.0) ? _1923 : (isnan(_1923) ? 1.0 : min(_1923, 1.0));
        float _1545 = dot(vec3(_1019, _1020, _1021), vec3(_1437, _1438, _1439));
        float _1934 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1548 = isnan(1.0) ? _1934 : (isnan(_1934) ? 1.0 : min(_1934, 1.0));
        float _1549 = dot(vec3(_1019, _1020, _1021), vec3(_1538, _1539, _1540));
        float _1945 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1552 = isnan(1.0) ? _1945 : (isnan(_1945) ? 1.0 : min(_1945, 1.0));
        float _1553 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_1538, _1539, _1540));
        float _1956 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1557 = _1530 * _1530;
        float _1561 = ((_1552 * _1552) * (_1557 + (-1.0))) + 1.0;
        float _1573 = (exp2(log2(1.0 - (isnan(1.0) ? _1956 : (isnan(_1956) ? 1.0 : min(_1956, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1575 = 1.0 - _1530;
        float _1586 = (0.5 / (((_1548 * ((_1544 * _1575) + _1530)) + 9.9999999392252902907785028219223e-09) + (((_1548 * _1575) + _1530) * _1544))) * _1544;
        float _1967 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1588 = (isnan(1.0) ? _1967 : (isnan(_1967) ? 1.0 : min(_1967, 1.0))) * (_1557 / ((_1561 * _1561) * 3.141590118408203125));
        _1595 = ((_1411 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _1510;
        _1596 = ((_1414 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _1510;
        _1597 = ((_1417 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _1510;
        _1598 = (_1573 * g_sceneCB._m0[5u].x) * _1588;
        _1599 = (_1573 * g_sceneCB._m0[5u].y) * _1588;
        _1600 = (_1573 * g_sceneCB._m0[5u].z) * _1588;
    }
    else
    {
        _1595 = 0.0;
        _1596 = 0.0;
        _1597 = 0.0;
        _1598 = 0.0;
        _1599 = 0.0;
        _1600 = 0.0;
    }
    bool _1602 = abs(_1020) < 0.89999997615814208984375;
    float _1604 = float(_1602);
    float _1605 = _1602 ? 0.0 : 1.0;
    float _1608 = (_1604 * _1021) - (_1605 * _1020);
    float _1609 = _1605 * _1019;
    float _1611 = (-0.0) - (_1019 * _1604);
    float _1615 = inversesqrt(dot(vec3(_1608, _1609, _1611), vec3(_1608, _1609, _1611)));
    float _1616 = _1608 * _1615;
    float _1617 = _1609 * _1615;
    float _1618 = _1615 * _1611;
    float _1621 = (_1617 * _1021) - (_1618 * _1020);
    float _1624 = (_1618 * _1019) - (_1616 * _1021);
    float _1627 = (_1616 * _1020) - (_1617 * _1019);
    float _1629;
    float _1637;
    float _1628 = 0.0;
    uint _1630 = 0u;
    float _1634;
    bool _1636;
    for (;;)
    {
        _1634 = (float(_1630) + _1463) * 0.03125;
        _1636 = _1630 == 0u;
        float frontier_phi_53_pred;
        if (_1636)
        {
            frontier_phi_53_pred = 0.0;
        }
        else
        {
            float _1774;
            float _1775;
            uint _1777;
            _1774 = 0.0;
            _1775 = 0.5;
            _1777 = _1630;
            float _1638;
            for (;;)
            {
                _1638 = ((_1777 & 1u) != 0u) ? (_1775 + _1774) : _1774;
                uint _1778 = _1777 >> 1u;
                if (_1778 == 0u)
                {
                    break;
                }
                else
                {
                    _1774 = _1638;
                    _1775 *= 0.5;
                    _1777 = _1778;
                }
            }
            frontier_phi_53_pred = _1638;
        }
        _1637 = frontier_phi_53_pred;
        float _1639 = _1637 + _1476;
        float _1643 = sqrt(_1634);
        float _1644 = ((_1639 > 1.0) ? (_1639 + (-1.0)) : _1639) * 6.283185482025146484375;
        float _1647 = cos(_1644) * _1643;
        float _1649 = sin(_1644) * _1643;
        float _1651 = sqrt(1.0 - _1634);
        float _1664 = ((_1651 * _1019) + (_1647 * _1621)) + (_1649 * _1616);
        float _1665 = ((_1651 * _1020) + (_1647 * _1624)) + (_1649 * _1617);
        float _1666 = ((_1651 * _1021) + (_1647 * _1627)) + (_1649 * _1618);
        _70._m0 = 1u;
        uvec4 _1670 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _1671 = _1670.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _1671, _1670.w, _1671, vec3(_1434, _1435, _1436), 9.9999997473787516355514526367188e-05, vec3(_1664, _1665, _1666), 10000.0, 1);
        float _1677 = dot(vec3(_1019, _1020, _1021), vec3(_1664, _1665, _1666));
        float _1978 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1680 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
        _1629 = ((float(_70._m0 == 0u) * _1680) / (_1680 * 0.3183098733425140380859375)) + _1628;
        uint _1631 = _1630 + 1u;
        if (_1631 == 32u)
        {
            break;
        }
        else
        {
            _1628 = _1629;
            _1630 = _1631;
            continue;
        }
    }
    float _1688 = _1629 * 0.009947183541953563690185546875;
    float _1693 = dot(vec3(_1266, _1267, _1268), vec3(_1019, _1020, _1021)) * 2.0;
    vec4 _1707 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_1266 - (_1693 * _1019), _1267 - (_1693 * _1020), _1268 - (_1693 * _1021)), 4.0 - (cbMtdParam._m0[14u].w * 4.0));
    float _1712 = dot(vec3(_1437, _1438, _1439), vec3(_1019, _1020, _1021));
    float _1989 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
    float _1721 = (exp2(log2(1.0 - (isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _1727 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_1019, _1020, _1021), 0.0);
    float _1739 = ((_1595 + (cbMtdParam._m0[13u].y * _1380)) + _1598) + (((_1727.x * _1411) + (_1721 * _1707.x)) * _1688);
    float _1744 = ((_1596 + (cbMtdParam._m0[13u].y * _1382)) + _1599) + (((_1727.y * _1414) + (_1721 * _1707.y)) * _1688);
    float _1749 = ((_1597 + (cbMtdParam._m0[13u].y * _1384)) + _1600) + (((_1727.z * _1417) + (_1721 * _1707.z)) * _1688);
    float _2000 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
    float _2011 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
    float _2022 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
    bool _1757 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1768;
    _1768.x = _1757 ? ((_624 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2000 : (isnan(_2000) ? 1.0 : min(_2000, 1.0)));
    _1768.y = _1757 ? ((_627 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2011 : (isnan(_2011) ? 1.0 : min(_2011, 1.0)));
    _1768.z = _1757 ? ((_630 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _2022 : (isnan(_2022) ? 1.0 : min(_2022, 1.0)));
    payload._m0 = _1768;
}


