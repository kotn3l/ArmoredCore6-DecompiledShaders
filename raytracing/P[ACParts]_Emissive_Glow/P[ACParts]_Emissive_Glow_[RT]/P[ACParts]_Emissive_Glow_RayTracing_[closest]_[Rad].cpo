#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

struct _50
{
    vec3 _m0;
};

struct _54
{
    vec2 _m0;
};

struct _57
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 65) uniform textureCube g_ambientDiffuseTex;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 68) uniform usamplerBuffer l_geomPositionBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(location = 0) rayPayloadInEXT _50 payload;
hitAttributeEXT _54 hit;
layout(location = 1) rayPayloadEXT _57 _59;
layout(location = 2) rayPayloadEXT _57 _60;

vec3 _1029;

void main()
{
    float _68 = float(gl_LaunchSizeEXT.y);
    float _98 = gl_WorldRayDirectionEXT.x * gl_RayTmaxEXT;
    float _99 = gl_WorldRayDirectionEXT.y * gl_RayTmaxEXT;
    float _100 = gl_WorldRayDirectionEXT.z * gl_RayTmaxEXT;
    float _107 = sqrt(((_99 * _99) + (_98 * _98)) + (_100 * _100)) * atan((g_sceneCB._m0[3u].y * 2.0) / float(int(uint(int(g_sceneCB._m0[7u].w * _68)))));
    uvec4 _118 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _119 = _118.y;
    uint _159;
    uint _161;
    uint _162;
    if (_118.x == 0u)
    {
        uint _127 = (_119 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _136 = uvec3(texelFetch(l_geomIndexBuffer, int(_127)).x, texelFetch(l_geomIndexBuffer, int(_127 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_127 + 2u)).x);
        _159 = _136.x;
        _161 = _136.y;
        _162 = _136.z;
    }
    else
    {
        uint _140 = uint(gl_PrimitiveID) * 6u;
        uint _142 = _140 & 4294967292u;
        uint _145 = (_119 + _142) >> 2u;
        uvec2 _152 = uvec2(texelFetch(l_geomIndexBuffer, int(_145)).x, texelFetch(l_geomIndexBuffer, int(_145 + 1u)).x);
        uint _153 = _152.x;
        uint _154 = _152.y;
        uint _156 = _153 >> 16u;
        uint _157 = _154 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_142 == _140)
        {
            frontier_phi_3_2_ladder = _157;
            frontier_phi_3_2_ladder_1 = _156;
            frontier_phi_3_2_ladder_2 = _153 & 65535u;
        }
        else
        {
            frontier_phi_3_2_ladder = _154 >> 16u;
            frontier_phi_3_2_ladder_1 = _157;
            frontier_phi_3_2_ladder_2 = _156;
        }
        _159 = frontier_phi_3_2_ladder_2;
        _161 = frontier_phi_3_2_ladder_1;
        _162 = frontier_phi_3_2_ladder;
    }
    uvec4 _166 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _167 = _166.x;
    uint _168 = _166.z;
    bool _169 = _168 != 0u;
    bool _171 = _118.w == 0u;
    bool _172 = _169 || _171;
    uint _174 = (_167 * _159) + 12u;
    uint _198;
    uint _199;
    uint _200;
    uint _201;
    if (_172)
    {
        uvec4 _177 = texelFetch(l_geomAttrib_0, int(_174 >> 2u));
        uint _178 = _177.x;
        _198 = _178 & 255u;
        _199 = (_178 >> 8u) & 255u;
        _200 = (_178 >> 16u) & 255u;
        _201 = 20u;
    }
    else
    {
        uint _186 = _174 >> 2u;
        uvec2 _192 = uvec2(texelFetch(l_geomAttrib_0, int(_186)).x, texelFetch(l_geomAttrib_0, int(_186 + 1u)).x);
        uint _193 = _192.x;
        _198 = _193 & 65535u;
        _199 = _193 >> 16u;
        _200 = _192.y & 65535u;
        _201 = 24u;
    }
    bool _207 = _168 == 0u;
    uint _208;
    if (_207)
    {
        _208 = _201;
    }
    else
    {
        uint frontier_phi_9_10_ladder;
        if (_171)
        {
            frontier_phi_9_10_ladder = _201 + 4u;
        }
        else
        {
            frontier_phi_9_10_ladder = _201 + 8u;
        }
        _208 = frontier_phi_9_10_ladder;
    }
    uvec4 _219 = texelFetch(l_geomAttrib_0, int((((_167 * _159) + 4u) + (_169 ? (_208 + 4u) : _208)) >> 2u));
    uint _220 = _219.x;
    float _224 = float(int(uint(int(_220 << 16u) >> int(16u))));
    float _225 = float(int(uint(int(_220) >> int(16u))));
    uint _227 = (_167 * _161) + 12u;
    uint _248;
    uint _249;
    uint _250;
    uint _251;
    if (_172)
    {
        uvec4 _229 = texelFetch(l_geomAttrib_0, int(_227 >> 2u));
        uint _230 = _229.x;
        _248 = _230 & 255u;
        _249 = (_230 >> 8u) & 255u;
        _250 = (_230 >> 16u) & 255u;
        _251 = 20u;
    }
    else
    {
        uint _236 = _227 >> 2u;
        uvec2 _242 = uvec2(texelFetch(l_geomAttrib_0, int(_236)).x, texelFetch(l_geomAttrib_0, int(_236 + 1u)).x);
        uint _243 = _242.x;
        _248 = _243 & 65535u;
        _249 = _243 >> 16u;
        _250 = _242.y & 65535u;
        _251 = 24u;
    }
    uint _255;
    if (_207)
    {
        _255 = _251;
    }
    else
    {
        uint frontier_phi_16_17_ladder;
        if (_171)
        {
            frontier_phi_16_17_ladder = _251 + 4u;
        }
        else
        {
            frontier_phi_16_17_ladder = _251 + 8u;
        }
        _255 = frontier_phi_16_17_ladder;
    }
    uvec4 _264 = texelFetch(l_geomAttrib_0, int((((_167 * _161) + 4u) + (_169 ? (_255 + 4u) : _255)) >> 2u));
    uint _265 = _264.x;
    float _269 = float(int(uint(int(_265 << 16u) >> int(16u))));
    float _270 = float(int(uint(int(_265) >> int(16u))));
    uint _272 = (_167 * _162) + 12u;
    uint _293;
    uint _294;
    uint _295;
    uint _296;
    if (_172)
    {
        uvec4 _274 = texelFetch(l_geomAttrib_0, int(_272 >> 2u));
        uint _275 = _274.x;
        _293 = _275 & 255u;
        _294 = (_275 >> 8u) & 255u;
        _295 = (_275 >> 16u) & 255u;
        _296 = 20u;
    }
    else
    {
        uint _281 = _272 >> 2u;
        uvec2 _287 = uvec2(texelFetch(l_geomAttrib_0, int(_281)).x, texelFetch(l_geomAttrib_0, int(_281 + 1u)).x);
        uint _288 = _287.x;
        _293 = _288 & 65535u;
        _294 = _288 >> 16u;
        _295 = _287.y & 65535u;
        _296 = 24u;
    }
    uint _300;
    if (_207)
    {
        _300 = _296;
    }
    else
    {
        uint frontier_phi_23_24_ladder;
        if (_171)
        {
            frontier_phi_23_24_ladder = _296 + 4u;
        }
        else
        {
            frontier_phi_23_24_ladder = _296 + 8u;
        }
        _300 = frontier_phi_23_24_ladder;
    }
    uvec4 _309 = texelFetch(l_geomAttrib_0, int((((_167 * _162) + 4u) + (_169 ? (_300 + 4u) : _300)) >> 2u));
    uint _310 = _309.x;
    float _314 = float(int(uint(int(_310 << 16u) >> int(16u))));
    float _315 = float(int(uint(int(_310) >> int(16u))));
    bool _317 = _118.z == 0u;
    float _353;
    float _354;
    float _355;
    if (_317)
    {
        uint _320 = _159 * 3u;
        uvec3 _329 = uvec3(texelFetch(l_geomPositionBuffer, int(_320)).x, texelFetch(l_geomPositionBuffer, int(_320 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_320 + 2u)).x);
        _353 = uintBitsToFloat(_329.x);
        _354 = uintBitsToFloat(_329.y);
        _355 = uintBitsToFloat(_329.z);
    }
    else
    {
        uint _337 = _159 * 2u;
        uvec2 _343 = uvec2(texelFetch(l_geomPositionBuffer, int(_337)).x, texelFetch(l_geomPositionBuffer, int(_337 + 1u)).x);
        uint _344 = _343.x;
        _353 = unpackHalf2x16(_344).x;
        _354 = unpackHalf2x16(_344 >> 16u).x;
        _355 = unpackHalf2x16(_343.y).x;
    }
    float _391;
    float _392;
    float _393;
    if (_317)
    {
        uint _358 = _161 * 3u;
        uvec3 _367 = uvec3(texelFetch(l_geomPositionBuffer, int(_358)).x, texelFetch(l_geomPositionBuffer, int(_358 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_358 + 2u)).x);
        _391 = uintBitsToFloat(_367.x);
        _392 = uintBitsToFloat(_367.y);
        _393 = uintBitsToFloat(_367.z);
    }
    else
    {
        uint _375 = _161 * 2u;
        uvec2 _381 = uvec2(texelFetch(l_geomPositionBuffer, int(_375)).x, texelFetch(l_geomPositionBuffer, int(_375 + 1u)).x);
        uint _382 = _381.x;
        _391 = unpackHalf2x16(_382).x;
        _392 = unpackHalf2x16(_382 >> 16u).x;
        _393 = unpackHalf2x16(_381.y).x;
    }
    float _429;
    float _430;
    float _431;
    if (_317)
    {
        uint _396 = _162 * 3u;
        uvec3 _405 = uvec3(texelFetch(l_geomPositionBuffer, int(_396)).x, texelFetch(l_geomPositionBuffer, int(_396 + 1u)).x, texelFetch(l_geomPositionBuffer, int(_396 + 2u)).x);
        _429 = uintBitsToFloat(_405.x);
        _430 = uintBitsToFloat(_405.y);
        _431 = uintBitsToFloat(_405.z);
    }
    else
    {
        uint _413 = _162 * 2u;
        uvec2 _419 = uvec2(texelFetch(l_geomPositionBuffer, int(_413)).x, texelFetch(l_geomPositionBuffer, int(_413 + 1u)).x);
        uint _420 = _419.x;
        _429 = unpackHalf2x16(_420).x;
        _430 = unpackHalf2x16(_420 >> 16u).x;
        _431 = unpackHalf2x16(_419.y).x;
    }
    float _434 = (1.0 - hit._m0.x) - hit._m0.y;
    float _456 = (_269 - _224) * 0.00048828125;
    float _458 = (_270 - _225) * 0.00048828125;
    float _461 = (_314 - _224) * 0.00048828125;
    float _462 = (_315 - _225) * 0.00048828125;
    float _484 = _391 - _353;
    float _485 = _392 - _354;
    float _486 = _393 - _355;
    float _489 = fma(_486, gl_ObjectToWorldEXT[2u].x, fma(_485, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _484));
    float _492 = fma(_486, gl_ObjectToWorldEXT[2u].y, fma(_485, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _484));
    float _495 = fma(_486, gl_ObjectToWorldEXT[2u].z, fma(_485, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _484));
    float _496 = _429 - _353;
    float _497 = _430 - _354;
    float _498 = _431 - _355;
    float _501 = fma(_498, gl_ObjectToWorldEXT[2u].x, fma(_497, gl_ObjectToWorldEXT[1u].x, gl_ObjectToWorldEXT[0u].x * _496));
    float _504 = fma(_498, gl_ObjectToWorldEXT[2u].y, fma(_497, gl_ObjectToWorldEXT[1u].y, gl_ObjectToWorldEXT[0u].y * _496));
    float _507 = fma(_498, gl_ObjectToWorldEXT[2u].z, fma(_497, gl_ObjectToWorldEXT[1u].z, gl_ObjectToWorldEXT[0u].z * _496));
    float _508 = (((_269 * hit._m0.x) + (_224 * _434)) + (_314 * hit._m0.y)) * 0.00048828125;
    float _509 = (((_270 * hit._m0.x) + (_225 * _434)) + (_315 * hit._m0.y)) * 0.00048828125;
    float _513 = (((float(_198) * _434) + (-127.0)) + (float(_248) * hit._m0.x)) + (float(_293) * hit._m0.y);
    float _516 = (((float(_199) * _434) + (-127.0)) + (float(_249) * hit._m0.x)) + (float(_294) * hit._m0.y);
    float _519 = (((float(_200) * _434) + (-127.0)) + (float(_250) * hit._m0.x)) + (float(_295) * hit._m0.y);
    float _520 = _513 * 0.0078740157186985015869140625;
    float _522 = _516 * 0.0078740157186985015869140625;
    float _523 = _519 * 0.0078740157186985015869140625;
    uvec2 _541 = uvec2(textureSize(P_ACParts_Emissive_Glow_snp_0_Texture2D_2, int(0u)));
    bool _546 = floatBitsToUint(g_sceneCB._m0[7u]).x == 1u;
    float _599;
    if (_546)
    {
        float _557 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
        float _563 = (_507 * _492) - (_504 * _495);
        float _566 = (_501 * _495) - (_507 * _489);
        float _569 = (_504 * _489) - (_501 * _492);
        float _596 = ((log2((((float(_541.y) * 0.5) * float(_541.x)) * abs((_462 * _456) - (_461 * _458))) / (sqrt(((_566 * _566) + (_569 * _569)) + (_563 * _563)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_557 * gl_WorldRayDirectionEXT.x, _557 * gl_WorldRayDirectionEXT.y, _557 * gl_WorldRayDirectionEXT.z), vec3(_520, _522, _523))));
        _599 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    }
    else
    {
        _599 = 0.0;
    }
    vec4 _603 = textureLod(sampler2D(P_ACParts_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _508) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _509) + cbTextureTilingScale._m0[0u].w), _599);
    float _608 = _603.x * cbMtdParam._m0[10u].x;
    float _609 = _603.y * cbMtdParam._m0[10u].y;
    float _610 = _603.z * cbMtdParam._m0[10u].z;
    uvec2 _631 = uvec2(textureSize(P_ACParts_Emissive_Glow_snp_0_Texture2D_3, int(0u)));
    float _635 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _636 = _635 * gl_WorldRayDirectionEXT.x;
    float _637 = _635 * gl_WorldRayDirectionEXT.y;
    float _638 = _635 * gl_WorldRayDirectionEXT.z;
    float _682;
    if (_546)
    {
        float _648 = (_507 * _492) - (_504 * _495);
        float _651 = (_501 * _495) - (_507 * _489);
        float _654 = (_504 * _489) - (_501 * _492);
        float _680 = ((log2((((float(_631.y) * 0.5) * float(_631.x)) * abs((_462 * _456) - (_461 * _458))) / (sqrt(((_651 * _651) + (_654 * _654)) + (_648 * _648)) * 0.5)) * 0.5) + g_sceneCB._m0[7u].y) + log2(abs(_107) / abs(dot(vec3(_636, _637, _638), vec3(_520, _522, _523))));
        _682 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    }
    else
    {
        _682 = 0.0;
    }
    vec4 _684 = textureLod(sampler2D(P_ACParts_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _508) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _509) + cbTextureTilingScale._m0[1u].w), _682);
    float _704 = inversesqrt(dot(vec3(_520, _522, _523), vec3(_520, _522, _523)));
    float _705 = _704 * _520;
    float _706 = _704 * _522;
    float _707 = _704 * _523;
    float _719 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _720 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _721 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _722 = (-0.0) - _636;
    float _724 = (-0.0) - _637;
    float _725 = (-0.0) - _638;
    float _731 = float(gl_LaunchIDEXT.x);
    float _732 = float(gl_LaunchIDEXT.y);
    float _735 = float(gl_LaunchSizeEXT.x);
    float _749 = fract(fract(sin(dot(vec2(_731 / _735, _732 / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _762 = fract(fract(sin(dot(vec2((_731 + 128.0) / _735, (_732 + 128.0) / _68), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _60._m0 = 1u;
    uvec4 _772 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _773 = _772.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _773, _772.w, _773, vec3(_719, _720, _721), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _853;
    float _854;
    float _855;
    float _856;
    float _857;
    float _858;
    if (_60._m0 == 0u)
    {
        float _794 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_705, _706, _707));
        float _1115 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
        float _797 = isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0));
        float _808 = g_sceneCB._m0[4u].x - _636;
        float _809 = g_sceneCB._m0[4u].y - _637;
        float _810 = g_sceneCB._m0[4u].z - _638;
        float _814 = inversesqrt(dot(vec3(_808, _809, _810), vec3(_808, _809, _810)));
        float _818 = dot(vec3(_705, _706, _707), vec3(g_sceneCB._m0[4u].xyz));
        float _1126 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
        float _821 = isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0));
        float _822 = dot(vec3(_705, _706, _707), vec3(_722, _724, _725));
        float _1137 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
        float _826 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_808 * _814, _809 * _814, _810 * _814));
        float _1148 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
        float _837 = (exp2(log2(1.0 - (isnan(1.0) ? _1148 : (isnan(_1148) ? 1.0 : min(_1148, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _843 = (0.5 / ((_821 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1137 : (isnan(_1137) ? 1.0 : min(_1137, 1.0))))) * _821;
        float _1159 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
        float _845 = (isnan(1.0) ? _1159 : (isnan(_1159) ? 1.0 : min(_1159, 1.0))) * 0.31831014156341552734375;
        _853 = ((_608 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].x) * _797;
        _854 = ((_609 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].y) * _797;
        _855 = ((_610 * 0.3183098733425140380859375) * g_sceneCB._m0[5u].z) * _797;
        _856 = (_837 * g_sceneCB._m0[5u].x) * _845;
        _857 = (_837 * g_sceneCB._m0[5u].y) * _845;
        _858 = (_837 * g_sceneCB._m0[5u].z) * _845;
    }
    else
    {
        _853 = 0.0;
        _854 = 0.0;
        _855 = 0.0;
        _856 = 0.0;
        _857 = 0.0;
        _858 = 0.0;
    }
    bool _860 = abs(_706) < 0.89999997615814208984375;
    float _862 = float(_860);
    float _863 = _860 ? 0.0 : 1.0;
    float _866 = (_862 * _707) - (_863 * _706);
    float _867 = _863 * _705;
    float _869 = (-0.0) - (_705 * _862);
    float _873 = inversesqrt(dot(vec3(_866, _867, _869), vec3(_866, _867, _869)));
    float _874 = _866 * _873;
    float _875 = _867 * _873;
    float _876 = _873 * _869;
    float _879 = (_875 * _707) - (_876 * _706);
    float _882 = (_876 * _705) - (_874 * _707);
    float _885 = (_874 * _706) - (_875 * _705);
    float _887;
    float _895;
    float _886 = 0.0;
    uint _888 = 0u;
    float _892;
    bool _894;
    for (;;)
    {
        _892 = (float(_888) + _749) * 0.03125;
        _894 = _888 == 0u;
        float frontier_phi_43_pred;
        if (_894)
        {
            frontier_phi_43_pred = 0.0;
        }
        else
        {
            float _1034;
            float _1035;
            uint _1037;
            _1034 = 0.0;
            _1035 = 0.5;
            _1037 = _888;
            float _896;
            for (;;)
            {
                _896 = ((_1037 & 1u) != 0u) ? (_1035 + _1034) : _1034;
                uint _1038 = _1037 >> 1u;
                if (_1038 == 0u)
                {
                    break;
                }
                else
                {
                    _1034 = _896;
                    _1035 *= 0.5;
                    _1037 = _1038;
                }
            }
            frontier_phi_43_pred = _896;
        }
        _895 = frontier_phi_43_pred;
        float _897 = _895 + _762;
        float _902 = sqrt(_892);
        float _903 = ((_897 > 1.0) ? (_897 + (-1.0)) : _897) * 6.283185482025146484375;
        float _906 = cos(_903) * _902;
        float _908 = sin(_903) * _902;
        float _910 = sqrt(1.0 - _892);
        float _923 = ((_910 * _705) + (_906 * _879)) + (_908 * _874);
        float _924 = ((_910 * _706) + (_906 * _882)) + (_908 * _875);
        float _925 = ((_910 * _707) + (_906 * _885)) + (_908 * _876);
        _59._m0 = 1u;
        uvec4 _929 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _930 = _929.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _930, _929.w, _930, vec3(_719, _720, _721), 9.9999997473787516355514526367188e-05, vec3(_923, _924, _925), 10000.0, 1);
        float _936 = dot(vec3(_705, _706, _707), vec3(_923, _924, _925));
        float _1170 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        float _939 = isnan(1.0) ? _1170 : (isnan(_1170) ? 1.0 : min(_1170, 1.0));
        _887 = ((float(_59._m0 == 0u) * _939) / (_939 * 0.3183098733425140380859375)) + _886;
        uint _889 = _888 + 1u;
        if (_889 == 32u)
        {
            break;
        }
        else
        {
            _886 = _887;
            _888 = _889;
            continue;
        }
    }
    float _947 = _887 * 0.009947183541953563690185546875;
    float _952 = dot(vec3(_636, _637, _638), vec3(_705, _706, _707)) * 2.0;
    vec4 _964 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_636 - (_952 * _705), _637 - (_952 * _706), _638 - (_952 * _707)), 4.0);
    float _969 = dot(vec3(_722, _724, _725), vec3(_705, _706, _707));
    float _1181 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _978 = (exp2(log2(1.0 - (isnan(1.0) ? _1181 : (isnan(_1181) ? 1.0 : min(_1181, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    vec4 _984 = textureLod(samplerCube(g_ambientDiffuseTex, g_sampsWrapLinear), vec3(_705, _706, _707), 0.0);
    float _997 = (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].x) * _684.x) + cbMtdParam._m0[11u].x) + _853) + _856) + (((_984.x * _608) + (_978 * _964.x)) * _947);
    float _1003 = (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].y) * _684.y) + cbMtdParam._m0[11u].y) + _854) + _857) + (((_984.y * _609) + (_978 * _964.y)) * _947);
    float _1009 = (((cbMtdParam._m0[11u].z + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].z) * _684.z)) + _855) + _858) + (((_984.z * _610) + (_978 * _964.z)) * _947);
    float _1192 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1203 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1214 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    bool _1017 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _1028;
    _1028.x = _1017 ? ((_513 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1192 : (isnan(_1192) ? 1.0 : min(_1192, 1.0)));
    _1028.y = _1017 ? ((_516 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1203 : (isnan(_1203) ? 1.0 : min(_1203, 1.0)));
    _1028.z = _1017 ? ((_519 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0)));
    payload._m0 = _1028;
}


