#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : require

struct _38
{
    vec3 _m0;
};

struct _42
{
    vec2 _m0;
};

struct _45
{
    uint _m0;
};

layout(set = 0, binding = 0, std140) uniform g_sceneCBUBO
{
    vec4 _m0[16];
} g_sceneCB;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 16, std140) uniform l_modelCBUBO
{
    vec4 _m0[2];
} l_modelCB;

layout(set = 0, binding = 64) uniform accelerationStructureEXT g_accelerationStructure;
layout(set = 0, binding = 66) uniform textureCube g_ambientSpecularTex;
layout(set = 0, binding = 67) uniform usamplerBuffer l_geomIndexBuffer;
layout(set = 0, binding = 69) uniform usamplerBuffer l_geomAttrib_0;
layout(set = 0, binding = 13) uniform sampler g_sampsWrapLinear;
layout(location = 0) rayPayloadInEXT _38 payload;
hitAttributeEXT _42 hit;
layout(location = 1) rayPayloadEXT _45 _47;
layout(location = 2) rayPayloadEXT _45 _48;

vec3 _560;

void main()
{
    uvec4 _62 = floatBitsToUint(l_modelCB._m0[0u]);
    uint _63 = _62.y;
    uint _104;
    uint _106;
    uint _107;
    if (_62.x == 0u)
    {
        uint _70 = (_63 + (uint(gl_PrimitiveID) * 12u)) >> 2u;
        uvec3 _81 = uvec3(texelFetch(l_geomIndexBuffer, int(_70)).x, texelFetch(l_geomIndexBuffer, int(_70 + 1u)).x, texelFetch(l_geomIndexBuffer, int(_70 + 2u)).x);
        _104 = _81.x;
        _106 = _81.y;
        _107 = _81.z;
    }
    else
    {
        uint _85 = uint(gl_PrimitiveID) * 6u;
        uint _87 = _85 & 4294967292u;
        uint _90 = (_63 + _87) >> 2u;
        uvec2 _97 = uvec2(texelFetch(l_geomIndexBuffer, int(_90)).x, texelFetch(l_geomIndexBuffer, int(_90 + 1u)).x);
        uint _98 = _97.x;
        uint _99 = _97.y;
        uint _101 = _98 >> 16u;
        uint _102 = _99 & 65535u;
        uint frontier_phi_3_2_ladder;
        uint frontier_phi_3_2_ladder_1;
        uint frontier_phi_3_2_ladder_2;
        if (_87 == _85)
        {
            frontier_phi_3_2_ladder = _98 & 65535u;
            frontier_phi_3_2_ladder_1 = _101;
            frontier_phi_3_2_ladder_2 = _102;
        }
        else
        {
            frontier_phi_3_2_ladder = _101;
            frontier_phi_3_2_ladder_1 = _102;
            frontier_phi_3_2_ladder_2 = _99 >> 16u;
        }
        _104 = frontier_phi_3_2_ladder;
        _106 = frontier_phi_3_2_ladder_1;
        _107 = frontier_phi_3_2_ladder_2;
    }
    uvec4 _111 = floatBitsToUint(l_modelCB._m0[1u]);
    uint _112 = _111.x;
    bool _117 = (_111.z != 0u) || (_62.w == 0u);
    uint _119 = (_112 * _104) + 12u;
    uint _143;
    uint _144;
    uint _145;
    if (_117)
    {
        uvec4 _122 = texelFetch(l_geomAttrib_0, int(_119 >> 2u));
        uint _123 = _122.x;
        _143 = _123 & 255u;
        _144 = (_123 >> 8u) & 255u;
        _145 = (_123 >> 16u) & 255u;
    }
    else
    {
        uint _131 = _119 >> 2u;
        uvec2 _137 = uvec2(texelFetch(l_geomAttrib_0, int(_131)).x, texelFetch(l_geomAttrib_0, int(_131 + 1u)).x);
        uint _138 = _137.x;
        _143 = _138 & 65535u;
        _144 = _138 >> 16u;
        _145 = _137.y & 65535u;
    }
    uint _150 = (_112 * _106) + 12u;
    uint _172;
    uint _173;
    uint _174;
    if (_117)
    {
        uvec4 _153 = texelFetch(l_geomAttrib_0, int(_150 >> 2u));
        uint _154 = _153.x;
        _172 = _154 & 255u;
        _173 = (_154 >> 8u) & 255u;
        _174 = (_154 >> 16u) & 255u;
    }
    else
    {
        uint _160 = _150 >> 2u;
        uvec2 _166 = uvec2(texelFetch(l_geomAttrib_0, int(_160)).x, texelFetch(l_geomAttrib_0, int(_160 + 1u)).x);
        uint _167 = _166.x;
        _172 = _167 & 65535u;
        _173 = _167 >> 16u;
        _174 = _166.y & 65535u;
    }
    uint _179 = (_112 * _107) + 12u;
    uint _201;
    uint _202;
    uint _203;
    if (_117)
    {
        uvec4 _182 = texelFetch(l_geomAttrib_0, int(_179 >> 2u));
        uint _183 = _182.x;
        _201 = _183 & 255u;
        _202 = (_183 >> 8u) & 255u;
        _203 = (_183 >> 16u) & 255u;
    }
    else
    {
        uint _189 = _179 >> 2u;
        uvec2 _195 = uvec2(texelFetch(l_geomAttrib_0, int(_189)).x, texelFetch(l_geomAttrib_0, int(_189 + 1u)).x);
        uint _196 = _195.x;
        _201 = _196 & 65535u;
        _202 = _196 >> 16u;
        _203 = _195.y & 65535u;
    }
    float _209 = (1.0 - hit._m0.x) - hit._m0.y;
    float _222 = (((float(_143) * _209) + (-127.0)) + (float(_172) * hit._m0.x)) + (float(_201) * hit._m0.y);
    float _225 = (((float(_144) * _209) + (-127.0)) + (float(_173) * hit._m0.x)) + (float(_202) * hit._m0.y);
    float _228 = (((float(_145) * _209) + (-127.0)) + (float(_174) * hit._m0.x)) + (float(_203) * hit._m0.y);
    float _229 = _222 * 0.0078740157186985015869140625;
    float _231 = _225 * 0.0078740157186985015869140625;
    float _232 = _228 * 0.0078740157186985015869140625;
    float _243 = inversesqrt(dot(vec3(_229, _231, _232), vec3(_229, _231, _232)));
    float _244 = _243 * _229;
    float _245 = _243 * _231;
    float _246 = _232 * _243;
    float _268 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.x) + gl_WorldRayOriginEXT.x;
    float _269 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.y) + gl_WorldRayOriginEXT.y;
    float _270 = (gl_RayTmaxEXT * gl_WorldRayDirectionEXT.z) + gl_WorldRayOriginEXT.z;
    float _274 = inversesqrt(dot(vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z), vec3(gl_WorldRayDirectionEXT.x, gl_WorldRayDirectionEXT.y, gl_WorldRayDirectionEXT.z)));
    float _275 = _274 * gl_WorldRayDirectionEXT.x;
    float _276 = _274 * gl_WorldRayDirectionEXT.y;
    float _277 = _274 * gl_WorldRayDirectionEXT.z;
    float _278 = (-0.0) - _275;
    float _280 = (-0.0) - _276;
    float _281 = (-0.0) - _277;
    float _288 = float(gl_LaunchIDEXT.x);
    float _289 = float(gl_LaunchIDEXT.y);
    float _295 = float(gl_LaunchSizeEXT.x);
    float _296 = float(gl_LaunchSizeEXT.y);
    float _310 = fract(fract(sin(dot(vec2(_288 / _295, _289 / _296), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    float _323 = fract(fract(sin(dot(vec2((_288 + 128.0) / _295, (_289 + 128.0) / _296), vec2(26.438999176025390625, 48.23600006103515625))) * 347.975006103515625) * 578.22900390625);
    _48._m0 = 1u;
    uvec4 _334 = floatBitsToUint(g_sceneCB._m0[8u]);
    uint _335 = _334.y;
    traceRayEXT(g_accelerationStructure, 28u, 2u, _335, _334.w, _335, vec3(_268, _269, _270), 9.9999997473787516355514526367188e-05, vec3(g_sceneCB._m0[4u].xyz), 10000.0, 2);
    float _403;
    float _404;
    float _405;
    if (_48._m0 == 0u)
    {
        float _356 = g_sceneCB._m0[4u].x - _275;
        float _357 = g_sceneCB._m0[4u].y - _276;
        float _358 = g_sceneCB._m0[4u].z - _277;
        float _362 = inversesqrt(dot(vec3(_356, _357, _358), vec3(_356, _357, _358)));
        float _366 = dot(vec3(_244, _245, _246), vec3(g_sceneCB._m0[4u].xyz));
        float _605 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
        float _370 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
        float _371 = dot(vec3(_244, _245, _246), vec3(_278, _280, _281));
        float _616 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
        float _375 = dot(vec3(g_sceneCB._m0[4u].xyz), vec3(_356 * _362, _357 * _362, _358 * _362));
        float _627 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
        float _386 = (exp2(log2(1.0 - (isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _393 = (0.5 / ((_370 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _616 : (isnan(_616) ? 1.0 : min(_616, 1.0))))) * _370;
        float _638 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
        float _395 = (isnan(1.0) ? _638 : (isnan(_638) ? 1.0 : min(_638, 1.0))) * 0.31831014156341552734375;
        _403 = (_386 * g_sceneCB._m0[5u].x) * _395;
        _404 = (_386 * g_sceneCB._m0[5u].y) * _395;
        _405 = (_386 * g_sceneCB._m0[5u].z) * _395;
    }
    else
    {
        _403 = 0.0;
        _404 = 0.0;
        _405 = 0.0;
    }
    bool _407 = abs(_245) < 0.89999997615814208984375;
    float _409 = float(_407);
    float _410 = _407 ? 0.0 : 1.0;
    float _413 = (_409 * _246) - (_410 * _245);
    float _414 = _410 * _244;
    float _416 = (-0.0) - (_244 * _409);
    float _420 = inversesqrt(dot(vec3(_413, _414, _416), vec3(_413, _414, _416)));
    float _421 = _413 * _420;
    float _422 = _414 * _420;
    float _423 = _420 * _416;
    float _426 = (_422 * _246) - (_423 * _245);
    float _429 = (_423 * _244) - (_421 * _246);
    float _432 = (_421 * _245) - (_422 * _244);
    float _434;
    float _442;
    float _433 = 0.0;
    uint _435 = 0u;
    float _439;
    bool _441;
    for (;;)
    {
        _439 = (float(_435) + _310) * 0.03125;
        _441 = _435 == 0u;
        float frontier_phi_18_pred;
        if (_441)
        {
            frontier_phi_18_pred = 0.0;
        }
        else
        {
            float _565;
            float _566;
            uint _568;
            _565 = 0.0;
            _566 = 0.5;
            _568 = _435;
            float _443;
            for (;;)
            {
                _443 = ((_568 & 1u) != 0u) ? (_566 + _565) : _565;
                uint _569 = _568 >> 1u;
                if (_569 == 0u)
                {
                    break;
                }
                else
                {
                    _565 = _443;
                    _566 *= 0.5;
                    _568 = _569;
                }
            }
            frontier_phi_18_pred = _443;
        }
        _442 = frontier_phi_18_pred;
        float _444 = _442 + _323;
        float _449 = sqrt(_439);
        float _450 = ((_444 > 1.0) ? (_444 + (-1.0)) : _444) * 6.283185482025146484375;
        float _453 = cos(_450) * _449;
        float _455 = sin(_450) * _449;
        float _457 = sqrt(1.0 - _439);
        float _470 = ((_457 * _244) + (_453 * _426)) + (_455 * _421);
        float _471 = ((_457 * _245) + (_453 * _429)) + (_455 * _422);
        float _472 = ((_457 * _246) + (_453 * _432)) + (_455 * _423);
        _47._m0 = 1u;
        uvec4 _476 = floatBitsToUint(g_sceneCB._m0[8u]);
        uint _477 = _476.y;
        traceRayEXT(g_accelerationStructure, 28u, 1u, _477, _476.w, _477, vec3(_268, _269, _270), 9.9999997473787516355514526367188e-05, vec3(_470, _471, _472), 10000.0, 1);
        float _483 = dot(vec3(_244, _245, _246), vec3(_470, _471, _472));
        float _649 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
        float _486 = isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0));
        _434 = ((float(_47._m0 == 0u) * _486) / (_486 * 0.3183098733425140380859375)) + _433;
        uint _436 = _435 + 1u;
        if (_436 == 32u)
        {
            break;
        }
        else
        {
            _433 = _434;
            _435 = _436;
            continue;
        }
    }
    float _495 = _434 * 0.009947183541953563690185546875;
    float _500 = dot(vec3(_275, _276, _277), vec3(_244, _245, _246)) * 2.0;
    vec4 _513 = textureLod(samplerCube(g_ambientSpecularTex, g_sampsWrapLinear), vec3(_275 - (_500 * _244), _276 - (_500 * _245), _277 - (_500 * _246)), 4.0);
    float _518 = dot(vec3(_278, _280, _281), vec3(_244, _245, _246));
    float _660 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _527 = (exp2(log2(1.0 - (isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _535 = (_403 + cbMtdParam._m0[9u].x) + ((_513.x * _495) * _527);
    float _537 = (_404 + cbMtdParam._m0[9u].y) + ((_513.y * _495) * _527);
    float _539 = (_405 + cbMtdParam._m0[9u].z) + ((_513.z * _495) * _527);
    float _671 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _682 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _693 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    bool _548 = floatBitsToUint(g_sceneCB._m0[10u]).x == 2u;
    vec3 _559;
    _559.x = _548 ? ((_222 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _671 : (isnan(_671) ? 1.0 : min(_671, 1.0)));
    _559.y = _548 ? ((_225 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _682 : (isnan(_682) ? 1.0 : min(_682, 1.0)));
    _559.z = _548 ? ((_228 * 0.00393700785934925079345703125) + 0.5) : (isnan(1.0) ? _693 : (isnan(_693) ? 1.0 : min(_693, 1.0)));
    payload._m0 = _559;
}


